,created,user,body,closed,commitsDetails,url,ttf,labels,title,numCommits,changesInPackagesSPOON,filteredCommits,statsSkippedReason,changesInPackagesGIT,gitStatsSummary.insertions,gitStatsSummary.deletions,gitStatsSummary.lines,gitStatsSummary.gitFilesChange,spoonStatsSummary.UPD,spoonStatsSummary.spoonMethodsChanged,spoonStatsSummary.TOT,spoonStatsSummary.MOV,spoonStatsSummary.INS,spoonStatsSummary.DEL,spoonStatsSummary.spoonFilesChanged,filteredCommitsReason.unavailable,filteredCommitsReason.moreThanOneParent,filteredCommitsReason.mergeCommitUsed,filteredCommitsReason.duplicated,filteredCommitsReason.multipleIssueFixes,filteredCommitsReason.alsoFixesPhrase,projectName
1499,2018-10-14 11:21:34,thibseisel,"### Issue description
When playing MP3 files located on the device's storage with `SimpleExoPlayer`, some will trigger a source error when played to completion:
```
2018-10-14 11:52:06.440 E/ExoPlayerImplInternal: Source error.
    com.google.android.exoplayer2.ParserException: Searched too many bytes.
        at com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronize(Mp3Extractor.java:282)
        at com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.read(Mp3Extractor.java:169)
        at com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable.load(ExtractorMediaPeriod.java:898)
        at com.google.android.exoplayer2.upstream.Loader$LoadTask.run(Loader.java:379)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
        at java.lang.Thread.run(Thread.java:764)
```

At the time of writing, I reproduced the bug only with specific files (all tracks from the same album).
Are my files corrupted, or is this a real ExoPlayer issue ? It doesn't happen with ExoPlayer 2.8.4.

### Reproduction steps
1. Create an instance of `SimpleExoPlayer` with the following code
```java
SimpleExoPlayer exoPlayer = ExoPlayerFactory.newSimpleInstance(context, new DefaultRenderersFactory(context), new DefaultTrackSelector());
AudioAttributes musicAttributes = new AudioAttributes.Builder()
            .setContentType(C.CONTENT_TYPE_MUSIC)
            .setUsage(C.USAGE_MEDIA)
            .build();
exoPlayer.setAudioAttributes(musicAttributes, true);
```

2. Prepare the player with the media to play in a ConcatenatingMediaSource
```java
ExtractorMediaSource uriSource = ExtractorMediaSource.Factory(new DefaultDataSourceFactory(...))
                    .setExtractorsFactory(new DefaultExtractorsFactory())
                    .setTag(mediaDescriptionCompat)
                    .createMediaSource(theMp3FileUri);
ConcatenatingMediaSource concatSource = new ConcatenatingMediaSource(new MediaSource[] { uriSource });
exoPlayer.prepare(concatSource);
exoPlayer.setPlayWhenReady(true);
```
3. Wait until the song is played to completion. You can also seek near the end of the song and wait for it to complete.

4. The player moves to the `ERROR` state and a ""source error"" is printed to the logcat.

### Link to test content
This happens for every track from the album ""Breakin' Outta Hell"" of Airbourne, but might happen with other media.
Since this media is protected by law I can't share it here, but maybe I could share only the few last seconds of the song in order to reproduce the bug. Tell me if you need it.

### Version of ExoPlayer being used
2.9.0 (doesn't happen with 2.8.4)

### Device(s) and version(s) of Android being used
Google Nexus 5X - Android API 27
The issue happens every time with the specified files.

### A full bug report captured from the device
Tell me if that's needed.
",2018-10-24 17:53:28,"[{'nameRev': 'e6b49a5410f42fa44c0ec3e76137390b609afaf6 tags/r2.9.1^2~33', 'commitMessage': 'Fix handling of MP3s with appended data\n\nIssue: #4954\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=218357113\n', 'commitParents': ['13e0513ea3efd6385d4cddbaca47a43807d486aa'], 'spoonStatsSkippedReason': '', 'commitHash': 'e6b49a5410f42fa44c0ec3e76137390b609afaf6', 'authoredDateTime': '2018-10-23 09:49:45', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 5, 'deletions': 0, 'lines': 5, 'filePath': 'library/core/src/main/java/com/google/android/exoplayer2/extractor/mp3/ConstantBitrateSeeker.java'}, {'insertions': 8, 'deletions': 2, 'lines': 10, 'filePath': 'library/core/src/main/java/com/google/android/exoplayer2/extractor/mp3/VbriSeeker.java'}, {'insertions': 18, 'deletions': 7, 'lines': 25, 'filePath': 'library/core/src/main/java/com/google/android/exoplayer2/extractor/mp3/XingSeeker.java'}, {'insertions': 5, 'deletions': 2, 'lines': 7, 'filePath': 'RELEASENOTES.md'}, {'insertions': 26, 'deletions': 6, 'lines': 32, 'filePath': 'library/core/src/main/java/com/google/android/exoplayer2/extractor/mp3/Mp3Extractor.java'}, {'insertions': 4, 'deletions': 0, 'lines': 4, 'filePath': 'library/core/src/main/java/com/google/android/exoplayer2/extractor/mp3/MlltSeeker.java'}], 'commitDateTime': '2018-10-24 18:59:38', 'commitUser': 'ojw28', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker.getDataEndPosition()'}], 'spoonFilePath': 'ConstantBitrateSeeker.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 6, 'MOV': 3, 'INS': 2, 'DEL': 1, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronize(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.peekEndOfStreamOrHeader(com.google.android.exoplayer2.extractor.ExtractorInput)'}, {'UPD': 0, 'TOT': 2, 'MOV': 1, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.readSample(com.google.android.exoplayer2.extractor.ExtractorInput)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.getDataEndPosition()'}], 'spoonFilePath': 'Mp3Extractor.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 3, 'MOV': 0, 'INS': 3, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.VbriSeeker'}, {'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.VbriSeeker.create(long,long,com.google.android.exoplayer2.extractor.MpegAudioHeader,com.google.android.exoplayer2.util.ParsableByteArray)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.VbriSeeker.getDataEndPosition()'}], 'spoonFilePath': 'VbriSeeker.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.MlltSeeker.getDataEndPosition()'}], 'spoonFilePath': 'MlltSeeker.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.XingSeeker.getDataEndPosition()'}, {'UPD': 0, 'TOT': 3, 'MOV': 1, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.XingSeeker'}], 'spoonFilePath': 'XingSeeker.java'}]}, {'nameRev': '706ce49bd37938dd5b9ae65957ada0717de5c74c tags/r2.10.0^2~694', 'commitMessage': 'Fix handling of MP3s with appended data\n\nIssue: #4954\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=218357113\n', 'commitParents': ['66a6921c26acab24b4d31635d450b1c02170c748'], 'spoonStatsSkippedReason': '', 'commitHash': '706ce49bd37938dd5b9ae65957ada0717de5c74c', 'authoredDateTime': '2018-10-23 09:49:45', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 5, 'deletions': 0, 'lines': 5, 'filePath': 'library/core/src/main/java/com/google/android/exoplayer2/extractor/mp3/ConstantBitrateSeeker.java'}, {'insertions': 8, 'deletions': 2, 'lines': 10, 'filePath': 'library/core/src/main/java/com/google/android/exoplayer2/extractor/mp3/VbriSeeker.java'}, {'insertions': 18, 'deletions': 7, 'lines': 25, 'filePath': 'library/core/src/main/java/com/google/android/exoplayer2/extractor/mp3/XingSeeker.java'}, {'insertions': 2, 'deletions': 0, 'lines': 2, 'filePath': 'RELEASENOTES.md'}, {'insertions': 26, 'deletions': 6, 'lines': 32, 'filePath': 'library/core/src/main/java/com/google/android/exoplayer2/extractor/mp3/Mp3Extractor.java'}, {'insertions': 4, 'deletions': 0, 'lines': 4, 'filePath': 'library/core/src/main/java/com/google/android/exoplayer2/extractor/mp3/MlltSeeker.java'}], 'commitDateTime': '2018-10-24 18:44:35', 'commitUser': 'ojw28', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker.getDataEndPosition()'}], 'spoonFilePath': 'ConstantBitrateSeeker.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 6, 'MOV': 3, 'INS': 2, 'DEL': 1, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronize(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.peekEndOfStreamOrHeader(com.google.android.exoplayer2.extractor.ExtractorInput)'}, {'UPD': 0, 'TOT': 2, 'MOV': 1, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.readSample(com.google.android.exoplayer2.extractor.ExtractorInput)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.getDataEndPosition()'}], 'spoonFilePath': 'Mp3Extractor.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 3, 'MOV': 0, 'INS': 3, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.VbriSeeker'}, {'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.VbriSeeker.create(long,long,com.google.android.exoplayer2.extractor.MpegAudioHeader,com.google.android.exoplayer2.util.ParsableByteArray)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.VbriSeeker.getDataEndPosition()'}], 'spoonFilePath': 'VbriSeeker.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.MlltSeeker.getDataEndPosition()'}], 'spoonFilePath': 'MlltSeeker.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.XingSeeker.getDataEndPosition()'}, {'UPD': 0, 'TOT': 3, 'MOV': 1, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp3.XingSeeker'}], 'spoonFilePath': 'XingSeeker.java'}]}]",https://github.com/google/ExoPlayer/issues/4954,10.000277777777777,['bug'],"""ParserException: searched too many bytes"" with specific MP3 files",1.0,"['com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.getDataEndPosition()', 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronize(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)', 'com.google.android.exoplayer2.extractor.mp3.XingSeeker.getDataEndPosition()', 'com.google.android.exoplayer2.extractor.mp3.XingSeeker', 'com.google.android.exoplayer2.extractor.mp3.VbriSeeker', 'com.google.android.exoplayer2.extractor.mp3.MlltSeeker.getDataEndPosition()', 'com.google.android.exoplayer2.extractor.mp3.VbriSeeker.create(long,long,com.google.android.exoplayer2.extractor.MpegAudioHeader,com.google.android.exoplayer2.util.ParsableByteArray)', 'com.google.android.exoplayer2.extractor.mp3.VbriSeeker.getDataEndPosition()', 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.peekEndOfStreamOrHeader(com.google.android.exoplayer2.extractor.ExtractorInput)', 'com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.readSample(com.google.android.exoplayer2.extractor.ExtractorInput)', 'com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker.getDataEndPosition()']",['706ce49bd37938dd5b9ae65957ada0717de5c74c'],,['library/core/src/main/java/com/google/android/exoplayer2/extractor'],61.0,15.0,76.0,5.0,1.0,11.0,21.0,5.0,14.0,1.0,5.0,0.0,0.0,0.0,1.0,0.0,0.0,ExoPlayer
1722,2017-01-30 23:39:06,farshid1,"[bugreport.txt](https://github.com/google/ExoPlayer/files/740784/bugreport.txt)
So in my application, user can select different languages. Based on user preference I use different audio files to be merged with video files. Now, once the playlist starts playing the merged tracks, it randomly stops playing if the seekbar stops ""buffering"". I then have to manually touch the seekbar so it starts playing again. Note that this doesn't happen if I only use the video files without merging them. My files are all local (mp4 videos and mp3 audios) and stored on the device. The duration of the files are the same but I'm not sure if this has to be accurate to milliseconds. 

This is how I setup the player:
```java
// 1. Create a default TrackSelector
Handler mainHandler = new Handler();
BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();
TrackSelection.Factory videoTrackSelectionFactory = new AdaptiveVideoTrackSelection.Factory(bandwidthMeter);
TrackSelector trackSelector = new DefaultTrackSelector(videoTrackSelectionFactory);
// 2. Create a default LoadControl
LoadControl loadControl = new DefaultLoadControl();
// 3. Create the player
mPlayer = ExoPlayerFactory.newSimpleInstance(this, trackSelector, loadControl);
// 4. Bind the player to View
mExoPlayerView.setPlayer(mPlayer);
// 5. Prepare the player
mDataSourceFactory = new DefaultDataSourceFactory(this, Util.getUserAgent(this, ""My APP""), null);
mExtractorsFactory = new DefaultExtractorsFactory();
```

Here's the code for starting the player:
```java
ArrayList<MediaSource> mediaSources = generateListVideos();
ConcatenatingMediaSource concatenatedSource = new ConcatenatingMediaSource(mediaSources.toArray(new MediaSource[mediaSources.size()]));
mPlayer.addListener(this);
mPlayer.prepare(concatenatedSource, true, true);
mPlayer.setPlayWhenReady(true);
```
I'm not if the problem is my media files or it's the use of `MergingMediaSource` that causes this issue. Any help would be appreciated.

I am using version 2.1.1 and I have seen the same issues on a Galaxy note 3 (4.3) and a LG G5 (7.0). 
",2017-05-23 17:23:33,"[{'nameRev': '9b0d24c909bc73f9410fa6f1a50064bf6f350548 tags/r2.3.0~3^2~3', 'commitMessage': 'Fix stuck-buffering state when playing merged media\n\nAlso added a TODO to track clarifying SequenceableLoader\nmore accurately and auditing existing implementations.\n\nIssue: #2396\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=150305685\n', 'commitParents': ['ce5c0c18f952caa19b863345252fd267804d7e83'], 'spoonStatsSkippedReason': '', 'commitHash': '9b0d24c909bc73f9410fa6f1a50064bf6f350548', 'authoredDateTime': '2017-03-16 04:34:22', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 1, 'deletions': 0, 'lines': 1, 'filePath': 'library/src/main/java/com/google/android/exoplayer2/source/ExtractorMediaPeriod.java'}, {'insertions': 1, 'deletions': 0, 'lines': 1, 'filePath': 'library/src/main/java/com/google/android/exoplayer2/source/SequenceableLoader.java'}], 'commitDateTime': '2017-03-16 16:14:08', 'commitUser': 'ojw28', 'commitSpoonAstDiffStats': [{'spoonMethods': [], 'spoonFilePath': 'SequenceableLoader.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.android.exoplayer2.source.ExtractorMediaPeriod.onLoadCompleted(com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable,long,long)'}], 'spoonFilePath': 'ExtractorMediaPeriod.java'}]}]",https://github.com/google/ExoPlayer/issues/2396,112.00027777777778,['bug'],Merged media in a playlist randomly stops playing unless manually seek,1.0,"['com.google.android.exoplayer2.source.ExtractorMediaPeriod.onLoadCompleted(com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable,long,long)']",['9b0d24c909bc73f9410fa6f1a50064bf6f350548'],,['library/src/main/java/com/google/android/exoplayer2/source'],2.0,0.0,2.0,2.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,ExoPlayer
1737,2017-01-04 13:19:25,dineshkumarkb,"Description:

ExoPlayer keeps throwing ""Load Error"" while playing smooth streaming live contents.

Player Version : 1.5.12
URL used : http://telecolor.econcept.it/live/primarete.isml/manifest
Android OS : Android 5.1.1
Device : Samsung note 3

Steps to Reproduce:

1. Play any smooth streaming live URL
2. Validate the logs of onLoadError() method.
3. Player keeps throwing LoadError multiple times
",2017-01-04 23:23:19,"[{'nameRev': '1d9d68dd12a424f528521f385294d31ca39d1f20 tags/r2.2.0^2~96', 'commitMessage': ""Assume samples are at start of mdat when offset is negative\n\nWe've seen this issue reported three times now, so it's\nobviously not an isolated problem. Do you think anything\nbad will happen to non-SmoothStreaming playback cases if\nI do this? I suspect not, but if you feel strongly I can\neasily add a FLAG_WORKAROUND_X flag for it, and enable\nit for SmoothStreaming only.\n\nhttps://github.com/google/ExoPlayer/issues/2292\nhttps://github.com/google/ExoPlayer/issues/2101\nhttps://github.com/google/ExoPlayer/issues/1152\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143583714\n"", 'commitParents': ['4a0f224e1219d732eae3a4a4394d577974a119df'], 'spoonStatsSkippedReason': '', 'commitHash': '1d9d68dd12a424f528521f385294d31ca39d1f20', 'authoredDateTime': '2017-01-04 12:38:52', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 3, 'deletions': 7, 'lines': 10, 'filePath': 'library/src/main/java/com/google/android/exoplayer2/extractor/mp4/FragmentedMp4Extractor.java'}], 'commitDateTime': '2017-01-04 23:07:58', 'commitUser': 'ojw28', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 5, 'MOV': 1, 'INS': 0, 'DEL': 3, 'spoonMethodName': 'com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.readSample(com.google.android.exoplayer2.extractor.ExtractorInput)'}], 'spoonFilePath': 'FragmentedMp4Extractor.java'}]}, {'nameRev': '8627a11f17c8cb36ee93b65afd1ef516fe4ad59c tags/r1.5.14^2~8', 'commitMessage': ""Assume samples are at start of mdat when offset is negative\n\nWe've seen this issue reported three times now, so it's\nobviously not an isolated problem. Do you think anything\nbad will happen to non-SmoothStreaming playback cases if\nI do this? I suspect not, but if you feel strongly I can\neasily add a FLAG_WORKAROUND_X flag for it, and enable\nit for SmoothStreaming only.\n\nhttps://github.com/google/ExoPlayer/issues/2292\nhttps://github.com/google/ExoPlayer/issues/2101\nhttps://github.com/google/ExoPlayer/issues/1152\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=143583714\n"", 'commitParents': ['1cd6b9396e9f1ba6a34dcd4f2bcc24a110458944'], 'spoonStatsSkippedReason': '', 'commitHash': '8627a11f17c8cb36ee93b65afd1ef516fe4ad59c', 'authoredDateTime': '2017-01-04 12:38:52', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 3, 'deletions': 1, 'lines': 4, 'filePath': 'library/src/main/java/com/google/android/exoplayer/extractor/mp4/FragmentedMp4Extractor.java'}], 'commitDateTime': '2017-01-04 21:31:00', 'commitUser': 'ojw28', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 3, 'MOV': 0, 'INS': 2, 'DEL': 1, 'spoonMethodName': 'com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor.readSample(com.google.android.exoplayer.extractor.ExtractorInput)'}], 'spoonFilePath': 'FragmentedMp4Extractor.java'}]}]",https://github.com/google/ExoPlayer/issues/2292,0.0002777777777777778,['bug'],ExoPlayer throws load error while playing SmoothStreaming LIVE contents,1.0,['com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.readSample(com.google.android.exoplayer2.extractor.ExtractorInput)'],['1d9d68dd12a424f528521f385294d31ca39d1f20'],,['library/src/main/java/com/google/android/exoplayer2/extractor/mp4'],3.0,7.0,10.0,1.0,1.0,1.0,5.0,1.0,0.0,3.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,ExoPlayer
1902,2015-09-11 12:49:16,mikaelstaldal,"When using dynamic DASH stream, the decodeTime is a very large value. I have seen e.g. 14419621440000000.

In com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor.parseTrun() line 498 that large value is used in this calculation (cumulativeTime is derived from decodeTime):

```
 sampleDecodingTimeTable[i] = (cumulativeTime * 1000) / timescale;
```

This calculation can overflow and result in a negative sampleDecodingTime which prevents the player from starting playback further on.

This can be fixed by rearranging the calculation like this:

```
  sampleDecodingTimeTable[i] = (cumulativeTime / timescale) * 1000L;
```
",2015-09-15 12:48:18,"[{'nameRev': 'e7926145c6798f14cda0939cfc4bb3aaa8306be0 tags/r1.5.0^2~38', 'commitMessage': 'Fix overflow for DASH live streams using large timescales.\n\nIssue: #789\n', 'commitParents': ['74186c2cd0d12a6da053ba1dfde720f8354560b6'], 'spoonStatsSkippedReason': '', 'commitHash': 'e7926145c6798f14cda0939cfc4bb3aaa8306be0', 'authoredDateTime': '2015-09-15 13:42:16', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'library/src/main/java/com/google/android/exoplayer/extractor/mp4/FragmentedMp4Extractor.java'}], 'commitDateTime': '2015-09-15 13:42:16', 'commitUser': 'ojw28', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 2, 'MOV': 0, 'INS': 1, 'DEL': 1, 'spoonMethodName': 'com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor.parseTrun(com.google.android.exoplayer.extractor.mp4.Track,com.google.android.exoplayer.extractor.mp4.DefaultSampleValues,long,int,com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.extractor.mp4.TrackFragment)'}], 'spoonFilePath': 'FragmentedMp4Extractor.java'}]}]",https://github.com/google/ExoPlayer/issues/789,3.000277777777778,['bug'],Arithmetic overflow when calculating sampleDecodingTime resulting in negative value,1.0,"['com.google.android.exoplayer.extractor.mp4.FragmentedMp4Extractor.parseTrun(com.google.android.exoplayer.extractor.mp4.Track,com.google.android.exoplayer.extractor.mp4.DefaultSampleValues,long,int,com.google.android.exoplayer.util.ParsableByteArray,com.google.android.exoplayer.extractor.mp4.TrackFragment)']",['e7926145c6798f14cda0939cfc4bb3aaa8306be0'],,['library/src/main/java/com/google/android/exoplayer/extractor/mp4'],1.0,1.0,2.0,1.0,0.0,1.0,2.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,ExoPlayer
4010,2018-09-06 06:54:15,iamcalendar,"In the following snippet we try to display Hispanic name in English:
```
for (TextWidth textWidth : TextWidth.values()) {
    System.out.print(textWidth + "": "");
    System.out.println(HistoricEra.HISPANIC.getDisplayName(Locale.ENGLISH, textWidth));
}
```
Output:
```
WIDE: Era de César
ABBREVIATED: Era
SHORT: Era
NARROW: Era
```
As shown in the output, the display name in` WIDE` width is in different language than English. In addition, in other width formats the display name (`Era`) is generic and doesn't seem to have Hispanic meaning.",2018-09-11 06:30:33,"[{'nameRev': '4f96d6aaf5fa4267a997ddaab7ebb10c65c618c9 tags/v5.0~83', 'commitMessage': 'added translations for spanish era\n\nsee issue #809\n', 'commitParents': ['38be3c026af6361806e29bd98fab4eabb01012c0'], 'spoonStatsSkippedReason': '', 'commitHash': '4f96d6aaf5fa4267a997ddaab7ebb10c65c618c9', 'authoredDateTime': '2018-09-08 19:28:36', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 4, 'deletions': 0, 'lines': 4, 'filePath': 'base/src/main/resources/names/iso8601_fr.properties'}, {'insertions': 4, 'deletions': 0, 'lines': 4, 'filePath': 'base/src/main/resources/names/iso8601_de.properties'}, {'insertions': 6, 'deletions': 0, 'lines': 6, 'filePath': 'base/src/test/java/net/time4j/history/EraNameTest.java'}, {'insertions': 4, 'deletions': 0, 'lines': 4, 'filePath': 'base/src/main/resources/names/iso8601_en.properties'}], 'commitDateTime': '2018-09-08 19:28:36', 'commitUser': 'MenoData', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.history.EraNameTest.getDisplayNameWide()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.history.EraNameTest.getDisplayNameShort()'}], 'spoonFilePath': 'EraNameTest.java'}]}, {'nameRev': '19f8ea971e353cb8393a8f922d7e59291e029652 tags/v5.0~81', 'commitMessage': 'fix for narrow era names\n\nsee issue #809\n', 'commitParents': ['4fe75ba753bc45f8d0986876b3ab7ab452327242'], 'spoonStatsSkippedReason': '', 'commitHash': '19f8ea971e353cb8393a8f922d7e59291e029652', 'authoredDateTime': '2018-09-11 08:25:49', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 13, 'deletions': 4, 'lines': 17, 'filePath': 'base/src/main/java/net/time4j/format/internal/IsoTextProviderSPI.java'}, {'insertions': 15, 'deletions': 2, 'lines': 17, 'filePath': 'base/src/test/java/net/time4j/history/EraNameTest.java'}], 'commitDateTime': '2018-09-11 08:25:49', 'commitUser': 'MenoData', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 2, 'MOV': 0, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.internal.IsoTextProviderSPI.lookupBundle(net.time4j.format.internal.PropertyBundle,int,java.lang.String,net.time4j.format.TextWidth,net.time4j.format.TextWidth,net.time4j.format.OutputContext,int)'}, {'UPD': 0, 'TOT': 2, 'MOV': 0, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.internal.IsoTextProviderSPI.eras(java.util.Locale,net.time4j.format.TextWidth)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.internal.IsoTextProviderSPI.weekdays(java.util.Locale,net.time4j.format.TextWidth,net.time4j.format.OutputContext)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.internal.IsoTextProviderSPI.months(java.util.Locale,net.time4j.format.TextWidth,net.time4j.format.OutputContext)'}, {'UPD': 0, 'TOT': 4, 'MOV': 3, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'net.time4j.format.internal.IsoTextProviderSPI.lookupBundle(net.time4j.format.internal.PropertyBundle,int,java.lang.String,net.time4j.format.TextWidth,net.time4j.format.OutputContext,int)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.internal.IsoTextProviderSPI.quarters(java.util.Locale,net.time4j.format.TextWidth,net.time4j.format.OutputContext)'}], 'spoonFilePath': 'IsoTextProviderSPI.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.history.EraNameTest.getDisplayNameNarrow()'}, {'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'net.time4j.history.EraNameTest.getDisplayNameWide()'}, {'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'net.time4j.history.EraNameTest.getDisplayNameShort()'}], 'spoonFilePath': 'EraNameTest.java'}]}]",https://github.com/MenoData/Time4J/issues/809,4.000277777777778,"['bug', 'enhancement', 'fixed', 'question']",Invalid Hispanic display name,2.0,"['net.time4j.format.internal.IsoTextProviderSPI.lookupBundle(net.time4j.format.internal.PropertyBundle,int,java.lang.String,net.time4j.format.TextWidth,net.time4j.format.TextWidth,net.time4j.format.OutputContext,int)', 'net.time4j.format.internal.IsoTextProviderSPI.eras(java.util.Locale,net.time4j.format.TextWidth)', 'net.time4j.format.internal.IsoTextProviderSPI.weekdays(java.util.Locale,net.time4j.format.TextWidth,net.time4j.format.OutputContext)', 'net.time4j.format.internal.IsoTextProviderSPI.months(java.util.Locale,net.time4j.format.TextWidth,net.time4j.format.OutputContext)', 'net.time4j.format.internal.IsoTextProviderSPI.lookupBundle(net.time4j.format.internal.PropertyBundle,int,java.lang.String,net.time4j.format.TextWidth,net.time4j.format.OutputContext,int)', 'net.time4j.format.internal.IsoTextProviderSPI.quarters(java.util.Locale,net.time4j.format.TextWidth,net.time4j.format.OutputContext)']","['19f8ea971e353cb8393a8f922d7e59291e029652', '4f96d6aaf5fa4267a997ddaab7ebb10c65c618c9']",,"['base/src/main/resources/names/iso8601_fr.properties', 'base/src/main/resources/names/iso8601_de.properties', 'base/src/main/java/net/time4j/format/internal', 'base/src/main/resources/names/iso8601_en.properties']",25.0,4.0,29.0,4.0,0.0,6.0,11.0,3.0,7.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,Time4J
4012,2018-08-19 08:50:05,iamcalendar,"1. As far as we understand, JapaneseCalendar supports Japanese dates starting from Taihō nengo. As explained [here](https://en.wikipedia.org/wiki/Taih%C5%8D_(era)) this nengo starts from `Taihō-1(701)-3-21` (`-464097` UTC) and therefore we expect `JapaneseCalendar.axis().getCalendarSystem().getMinimumSinceUTC()` returns `-464097` while it returns `-464176` (`Taihō-1(701)-1-01`).
We have realized that the first value (`-464097`) is extracted from `nengo.data` and the second one (`-464176`) is extracted from `tsuchihashi.data`.  Hope this helps.

2. The last line of the following code throws `IllegalArgumentException`:
```
Nengo taiho = Nengo.list().get(0);
JapaneseCalendar date = JapaneseCalendar.of(taiho, 1, EastAsianMonth.valueOf(1), 1);
date.with(JapaneseCalendar.MONTH_AS_ORDINAL, 1);
```

3. The result of adjusting a Japanese date with `MONTH_AS_ORDINAL` for non leap years is unexpected. For example:
```
JapaneseCalendar date = JapaneseCalendar.of(Nengo.list().get(1), 1, EastAsianMonth.valueOf(1), 1).with(JapaneseCalendar.MONTH_AS_ORDINAL, 9);
System.out.println(date);
```
prints `Keiun-1(704)-8-01` while expecting `Keiun-1(704)-9-01`.

",2018-08-22 06:24:17,"[{'nameRev': 'f4ab2700909fccd345cc97c7e96c76b92dc3894b tags/v5.0~92', 'commitMessage': 'fix for japanese month-as-ordinal\n\nsee issue #807\n', 'commitParents': ['9cb69857528e23985a7f5d809f23e7554a6514cb'], 'spoonStatsSkippedReason': '', 'commitHash': 'f4ab2700909fccd345cc97c7e96c76b92dc3894b', 'authoredDateTime': '2018-08-21 04:56:43', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 24, 'deletions': 1, 'lines': 25, 'filePath': 'base/src/test/java/net/time4j/calendar/JapaneseElementTest.java'}, {'insertions': 5, 'deletions': 5, 'lines': 10, 'filePath': 'base/src/main/java/net/time4j/calendar/JapaneseCalendar.java'}], 'commitDateTime': '2018-08-21 04:56:43', 'commitUser': 'MenoData', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 2, 'MOV': 1, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'net.time4j.calendar.JapaneseCalendar.JapaneseUnitRule.between(net.time4j.calendar.JapaneseCalendar,net.time4j.calendar.JapaneseCalendar)'}, {'UPD': 0, 'TOT': 17, 'MOV': 9, 'INS': 4, 'DEL': 4, 'spoonMethodName': 'net.time4j.calendar.JapaneseCalendar.IntegerRule.withValue(net.time4j.calendar.JapaneseCalendar,int,boolean)'}], 'spoonFilePath': 'JapaneseCalendar.java'}, {'spoonMethods': [{'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'net.time4j.calendar.JapaneseElementTest.monthAsOrdinalElement()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.calendar.JapaneseElementTest.monthAsOrdinalElementNonLeap2()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.calendar.JapaneseElementTest.monthAsOrdinalElementNonLeap1()'}], 'spoonFilePath': 'JapaneseElementTest.java'}]}]",https://github.com/MenoData/Time4J/issues/807,2.000277777777778,"['bug', 'fixed']",Issues with Japanese Calendar,1.0,"['net.time4j.calendar.JapaneseCalendar.JapaneseUnitRule.between(net.time4j.calendar.JapaneseCalendar,net.time4j.calendar.JapaneseCalendar)', 'net.time4j.calendar.JapaneseCalendar.IntegerRule.withValue(net.time4j.calendar.JapaneseCalendar,int,boolean)']",['f4ab2700909fccd345cc97c7e96c76b92dc3894b'],,['base/src/main/java/net/time4j/calendar'],5.0,5.0,10.0,1.0,0.0,2.0,19.0,10.0,4.0,5.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,Time4J
4066,2016-11-14 14:42:45,MenoData,"If the elements `PlainDate.MONTH_OF_YEAR` and `PlainDate.MONTH_AS_NUMBER` are simultaneously used in format pattern and default values then the ambivalence check can go wrong. Example:

		ChronoFormatter<Moment> ff =
			ChronoFormatter.setUp(Moment.axis(), Locale.ROOT).addFixedInteger(PlainDate.YEAR, 4)
			.startOptionalSection().addFixedNumerical(PlainDate.MONTH_OF_YEAR, 2).addPattern(
				""[dd[HH[mm[ss]]]]]"",
				PatternType.CLDR_24
			).build().withTimezone(ZonalOffset.UTC);
		ff =
			ff.withDefault(PlainDate.MONTH_AS_NUMBER, 4).withDefault(PlainDate.DAY_OF_MONTH, 1)
			.withDefault(PlainTime.ISO_HOUR, 0).with(Leniency.STRICT);
		System.out.println(ff.parse(""201605041636""));

Observed behaviour:

> java.text.ParseException: Conflict found: Text {201605041636} with element MONTH_OF_YEAR {MAY}, but parsed entity has element value {APRIL}.

Solution: The parser should recognize that both elements have finally the same meaning (although different in value type).",2016-11-16 09:13:14,"[{'nameRev': 'dda42b539f038494bdbe909e60c852028dd95f17 tags/v4.21~23', 'commitMessage': 'generalize fix for parsing with defaults\n\nsee issue #577\n', 'commitParents': ['95f0d18f6aca3d33ab01f3f9e61990f2f659315f'], 'spoonStatsSkippedReason': '', 'commitHash': 'dda42b539f038494bdbe909e60c852028dd95f17', 'authoredDateTime': '2016-11-16 10:08:17', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 18, 'deletions': 5, 'lines': 23, 'filePath': 'i18n/src/main/java/net/time4j/format/expert/ChronoFormatter.java'}, {'insertions': 2, 'deletions': 1, 'lines': 3, 'filePath': 'core/src/main/java/net/time4j/PlainTime.java'}, {'insertions': 8, 'deletions': 0, 'lines': 8, 'filePath': 'i18n/src/test/java/net/time4j/format/expert/DefaultValueTest.java'}, {'insertions': 2, 'deletions': 1, 'lines': 3, 'filePath': 'core/src/main/java/net/time4j/PlainDate.java'}], 'commitDateTime': '2016-11-16 10:08:17', 'commitUser': 'MenoData', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 2, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.PlainTime'}], 'spoonFilePath': 'PlainTime.java'}, {'spoonMethods': [{'UPD': 1, 'TOT': 2, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.PlainDate'}], 'spoonFilePath': 'PlainDate.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.expert.DefaultValueTest.doubleElementForHour24()'}], 'spoonFilePath': 'DefaultValueTest.java'}, {'spoonMethods': [{'UPD': 5, 'TOT': 19, 'MOV': 4, 'INS': 8, 'DEL': 2, 'spoonMethodName': 'net.time4j.format.expert.ChronoFormatter.parse(net.time4j.format.expert.ChronoFormatter,net.time4j.engine.ChronoMerger,java.util.List,java.lang.CharSequence,net.time4j.format.expert.ParseLog,net.time4j.engine.AttributeQuery,net.time4j.format.Leniency,boolean,boolean,boolean)'}], 'spoonFilePath': 'ChronoFormatter.java'}]}, {'nameRev': 'c9913b14c9278a171af0c798ec514b872c415c5c tags/v3.25~22', 'commitMessage': 'backport: fix for parsing with default month\n\nsee issue #577\n', 'commitParents': ['ad1437cb3ce0f4567b3ad74a374e297cca104531'], 'spoonStatsSkippedReason': '', 'commitHash': 'c9913b14c9278a171af0c798ec514b872c415c5c', 'authoredDateTime': '2016-11-15 10:06:07', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 4, 'deletions': 0, 'lines': 4, 'filePath': 'i18n/src/main/java/net/time4j/format/expert/ChronoFormatter.java'}, {'insertions': 5, 'deletions': 0, 'lines': 5, 'filePath': 'i18n/src/main/java/net/time4j/format/expert/NumberProcessor.java'}, {'insertions': 29, 'deletions': 0, 'lines': 29, 'filePath': 'i18n/src/test/java/net/time4j/format/expert/DefaultValueTest.java'}], 'commitDateTime': '2016-11-15 10:06:07', 'commitUser': 'MenoData', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.expert.DefaultValueTest.doubleElementForMonth2()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.expert.DefaultValueTest.doubleElementForMonth1()'}], 'spoonFilePath': 'DefaultValueTest.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 2, 'MOV': 1, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.expert.NumberProcessor.parse(java.lang.CharSequence,net.time4j.format.expert.ParseLog,net.time4j.engine.AttributeQuery,net.time4j.format.expert.ParsedValues,boolean)'}], 'spoonFilePath': 'NumberProcessor.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 6, 'MOV': 3, 'INS': 2, 'DEL': 1, 'spoonMethodName': 'net.time4j.format.expert.ChronoFormatter.parse(net.time4j.format.expert.ChronoFormatter,net.time4j.engine.ChronoMerger,java.util.List,java.lang.CharSequence,net.time4j.format.expert.ParseLog,net.time4j.engine.AttributeQuery,net.time4j.format.Leniency,boolean,boolean)'}], 'spoonFilePath': 'ChronoFormatter.java'}]}, {'nameRev': 'dcd22e96b7f216a9988315063c4f62e13ec499cf tags/v3.25~20', 'commitMessage': 'backport: generalize fix for parsing with defaults\n\nsee issue #577\n', 'commitParents': ['e846f28e12116df4dd3e245827ae608a19e0f596'], 'spoonStatsSkippedReason': '', 'commitHash': 'dcd22e96b7f216a9988315063c4f62e13ec499cf', 'authoredDateTime': '2016-11-16 10:02:58', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 18, 'deletions': 6, 'lines': 24, 'filePath': 'i18n/src/main/java/net/time4j/format/expert/ChronoFormatter.java'}, {'insertions': 2, 'deletions': 1, 'lines': 3, 'filePath': 'core/src/main/java/net/time4j/PlainTime.java'}, {'insertions': 8, 'deletions': 0, 'lines': 8, 'filePath': 'i18n/src/test/java/net/time4j/format/expert/DefaultValueTest.java'}, {'insertions': 2, 'deletions': 1, 'lines': 3, 'filePath': 'core/src/main/java/net/time4j/PlainDate.java'}], 'commitDateTime': '2016-11-16 10:02:58', 'commitUser': 'MenoData', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 2, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.PlainTime'}], 'spoonFilePath': 'PlainTime.java'}, {'spoonMethods': [{'UPD': 1, 'TOT': 2, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.PlainDate'}], 'spoonFilePath': 'PlainDate.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.expert.DefaultValueTest.doubleElementForHour24()'}], 'spoonFilePath': 'DefaultValueTest.java'}, {'spoonMethods': [{'UPD': 5, 'TOT': 19, 'MOV': 4, 'INS': 8, 'DEL': 2, 'spoonMethodName': 'net.time4j.format.expert.ChronoFormatter.parse(net.time4j.format.expert.ChronoFormatter,net.time4j.engine.ChronoMerger,java.util.List,java.lang.CharSequence,net.time4j.format.expert.ParseLog,net.time4j.engine.AttributeQuery,net.time4j.format.Leniency,boolean,boolean)'}], 'spoonFilePath': 'ChronoFormatter.java'}]}, {'nameRev': '1bf607c2568feebdce6d395efa46a130b6a650ab tags/v4.21~25', 'commitMessage': 'fix for parsing with default month\n\nsee issue #577\n', 'commitParents': ['28f13bb3d0ffc9dad6981fc15c5eba0a6d210575'], 'spoonStatsSkippedReason': '', 'commitHash': '1bf607c2568feebdce6d395efa46a130b6a650ab', 'authoredDateTime': '2016-11-15 10:08:21', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 4, 'deletions': 0, 'lines': 4, 'filePath': 'i18n/src/main/java/net/time4j/format/expert/ChronoFormatter.java'}, {'insertions': 5, 'deletions': 0, 'lines': 5, 'filePath': 'i18n/src/main/java/net/time4j/format/expert/NumberProcessor.java'}, {'insertions': 29, 'deletions': 0, 'lines': 29, 'filePath': 'i18n/src/test/java/net/time4j/format/expert/DefaultValueTest.java'}], 'commitDateTime': '2016-11-15 10:08:21', 'commitUser': 'MenoData', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.expert.DefaultValueTest.doubleElementForMonth2()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.expert.DefaultValueTest.doubleElementForMonth1()'}], 'spoonFilePath': 'DefaultValueTest.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 2, 'MOV': 1, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'net.time4j.format.expert.NumberProcessor.parse(java.lang.CharSequence,net.time4j.format.expert.ParseLog,net.time4j.engine.AttributeQuery,net.time4j.format.expert.ParsedValues,boolean)'}], 'spoonFilePath': 'NumberProcessor.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 6, 'MOV': 3, 'INS': 2, 'DEL': 1, 'spoonMethodName': 'net.time4j.format.expert.ChronoFormatter.parse(net.time4j.format.expert.ChronoFormatter,net.time4j.engine.ChronoMerger,java.util.List,java.lang.CharSequence,net.time4j.format.expert.ParseLog,net.time4j.engine.AttributeQuery,net.time4j.format.Leniency,boolean,boolean,boolean)'}], 'spoonFilePath': 'ChronoFormatter.java'}]}]",https://github.com/MenoData/Time4J/issues/577,1.0002777777777778,"['bug', 'fixed']",Ambivalence parsing check sometimes faulty,4.0,"['net.time4j.format.expert.ChronoFormatter.parse(net.time4j.format.expert.ChronoFormatter,net.time4j.engine.ChronoMerger,java.util.List,java.lang.CharSequence,net.time4j.format.expert.ParseLog,net.time4j.engine.AttributeQuery,net.time4j.format.Leniency,boolean,boolean,boolean)', 'net.time4j.format.expert.ChronoFormatter.parse(net.time4j.format.expert.ChronoFormatter,net.time4j.engine.ChronoMerger,java.util.List,java.lang.CharSequence,net.time4j.format.expert.ParseLog,net.time4j.engine.AttributeQuery,net.time4j.format.Leniency,boolean,boolean)', 'net.time4j.PlainDate', 'net.time4j.format.expert.NumberProcessor.parse(java.lang.CharSequence,net.time4j.format.expert.ParseLog,net.time4j.engine.AttributeQuery,net.time4j.format.expert.ParsedValues,boolean)', 'net.time4j.PlainTime']","['dda42b539f038494bdbe909e60c852028dd95f17', '1bf607c2568feebdce6d395efa46a130b6a650ab', 'c9913b14c9278a171af0c798ec514b872c415c5c', 'dcd22e96b7f216a9988315063c4f62e13ec499cf']",,"['i18n/src/main/java/net/time4j/format/expert', 'core/src/main/java/net/time4j']",62.0,15.0,77.0,4.0,14.0,5.0,62.0,16.0,26.0,6.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,Time4J
4210,2019-08-08 20:11:37,haraldk,"According to the TIFF specification:

> Any ASCII field can contain multiple strings, each terminated with a NUL. A single string is preferred whenever possible. The Count for multi-string fields is the number of bytes in all the strings in that field plus their terminating NUL bytes. Only one NUL is allowed between strings, so that the strings following the first string will often begin on an odd byte.

The current implementation parses the whole field as one string, with NULL-terminations inside...",2019-08-08 21:03:39,"[{'nameRev': '8247861095c5980ca3dbc278fd775ce6fc4de070 tags/twelvemonkeys-3.5~21', 'commitMessage': '#492: Now correctly parses multiple strings for ASCII fields.\n', 'commitParents': ['8480c929c107c4d700bbc2e9e427ca3d327e5daf'], 'spoonStatsSkippedReason': '', 'commitHash': '8247861095c5980ca3dbc278fd775ce6fc4de070', 'authoredDateTime': '2019-08-08 23:03:13', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 7, 'deletions': 1, 'lines': 8, 'filePath': 'imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReader.java'}], 'commitDateTime': '2019-08-08 23:03:13', 'commitUser': 'haraldk', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 5, 'MOV': 1, 'INS': 2, 'DEL': 1, 'spoonMethodName': 'com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readValue(javax.imageio.stream.ImageInputStream,short,int)'}], 'spoonFilePath': 'TIFFReader.java'}]}, {'nameRev': 'bdd7f5b22879641b4b1cf451555fd28ad747ece7 tags/twelvemonkeys-3.4.2~8', 'commitMessage': '#492: Now correctly parses multiple strings for ASCII fields.\n\n(cherry picked from commit 8247861095c5980ca3dbc278fd775ce6fc4de070)\n', 'commitParents': ['0e41d4a5f763dc9a13951558d71212573be981fc'], 'spoonStatsSkippedReason': '', 'commitHash': 'bdd7f5b22879641b4b1cf451555fd28ad747ece7', 'authoredDateTime': '2019-08-08 23:03:13', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 7, 'deletions': 1, 'lines': 8, 'filePath': 'imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReader.java'}], 'commitDateTime': '2019-08-09 21:04:40', 'commitUser': 'haraldk', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 5, 'MOV': 1, 'INS': 2, 'DEL': 1, 'spoonMethodName': 'com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readValue(javax.imageio.stream.ImageInputStream,short,int)'}], 'spoonFilePath': 'TIFFReader.java'}]}]",https://github.com/haraldk/TwelveMonkeys/issues/492,0.0002777777777777778,['Bug'],TIFFReader: ASCII fields are incorrectly parsed as single string,1.0,"['com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readValue(javax.imageio.stream.ImageInputStream,short,int)']",['8247861095c5980ca3dbc278fd775ce6fc4de070'],,['imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff'],7.0,1.0,8.0,1.0,1.0,1.0,5.0,1.0,2.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,TwelveMonkeys
4225,2017-12-21 09:45:04,albms,"Hi,

I've included a code snippet below that depends on an input image file IMG-26.jpg which I'll supply separately. The aim of the code it was extracted from is to attempt to resize an image to be below a maximum size in bytes.

When run with the following 6 libs on the classpath, the output (IMG-26-out.jpg) image has incorrect colours (the symptoms look similar to other issues where an image is interpetted as a different colourspace than RGB like this one: https://stackoverflow.com/questions/9340569/jpeg-image-with-wrong-colors):

> twelvemonkeys-common-image-3.4-SNAPSHOT.jar
> twelvemonkeys-common-io-3.4-SNAPSHOT.jar
> twelvemonkeys-common-lang-3.4-SNAPSHOT.jar
> twelvemonkeys-imageio-core-3.4-SNAPSHOT.jar
> twelvemonkeys-imageio-jpeg-3.4-SNAPSHOT.jar
> twelvemonkeys-imageio-metadata-3.4-SNAPSHOT.jar

The problem happens with both the libs from the 3.3.2 release and ones built from the master branch as of yesterday.

When the code is run without the Twelve Monkeys libs on the classpath the output image colours look ok - the same as in the input image. 

```java
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Iterator;

import javax.imageio.IIOImage;
import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import javax.imageio.ImageTypeSpecifier;
import javax.imageio.ImageWriteParam;
import javax.imageio.ImageWriter;
import javax.imageio.stream.ImageInputStream;
import javax.imageio.stream.ImageOutputStream;

public class ImageTest {

    public static final int READ_LIMIT = 14680064;

    ImageDecoder decoder = new ImageDecoder();

    static int sizeLimit = 3000000;
    static int startingQuality = 100;

    public static void main(String[] args) throws ImageProcessingException, IOException {
        System.out.println(""running..."");
        File input = new File(""IMG-26.jpg"");
        File output = new File(""IMG-26-out.jpg"");
        BufferedImage imageIn = new ImageDecoder().decodeImage(new FileInputStream(input));

        InputStream in = encodeImage(imageIn, 0);

        copy(in, new FileOutputStream(output));
        System.out.println(""Finished, wrote to "" + output.getAbsolutePath());
    }

    public static InputStream encodeImage(RenderedImage image, long originalSize) throws ImageProcessingException {
        long maxSize = sizeLimit;
        float q = 1.00f;
        float delta = q * 0.05f;
        int maxTries = 5;
        int tries = 0;
        ByteArrayEncodedImage out = null;
        // Encode 1..maxTries times until output is small enough
        long previousSize = originalSize;
        while (true) {
            try {
                ByteArrayEncodedImage out2 = encodeImage(image, q);
                if (out != null) {
                    previousSize = out.getSize();
                    closePrevious(out);
                }
                out = out2;
            } catch (ImageProcessingException e) {
                if (out != null) {
                    System.out.println(""Failed to process image many times via limitator. ""
                            + ""Using the previous encoding. "" + e.getMessage());
                    return out.getStream();
                } else {
                    throw e;
                }
            }
            ++tries;
            if (out.getSize() == null) {
                System.out.println(""Cannot limit image byte size"");
                break;
            }
            // if (LOG.isDebugEnabled()) {
            double previous = (previousSize == 0 ? 0f : (1.0 * previousSize / 1024));
            System.out.println(
                    String.format(""Previous size was %.2f kbytes encoding %d with quality %.2f produced %.2f kbytes."",
                            previous, tries, q, 1.0 * out.getSize() / 1024));
            // }
            if (out.getSize() <= maxSize || tries >= maxTries) {
                // either found small enough or tried too many times
                break;
            }
            if (q < 0.1)
                break; // already 0.0, stop
            q -= delta;
            if (q < 0.1)
                q = 0.0f; // round last value into exactly 0.0
        }

        // use the last encoding hoping it is the best choice
        return out.getStream();
    }

    public static ByteArrayEncodedImage encodeImage(RenderedImage image, float quality)
            throws ImageProcessingException {
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        writeJpeg(image, out, quality);
        return new ByteArrayEncodedImage(out);
    }

    private static void writeJpeg(RenderedImage image, OutputStream os, float compressionQuality)
            throws ImageProcessingException {

        ImageWriter iwriter = null;
        if (ImageIO.getImageWritersByFormatName(""jpeg"").hasNext()) {
            iwriter = (ImageWriter) ImageIO.getImageWritersByFormatName(""jpeg"").next();
        } else {
            String msg = ""Could not get JPEG ImageWriter"";
            throw new ImageProcessingException(msg);
        }

        ImageWriteParam iwparam = iwriter.getDefaultWriteParam();
        iwparam.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
        iwparam.setCompressionQuality(compressionQuality);
        ImageOutputStream ios;
        try {
            ios = ImageIO.createImageOutputStream(os);
        } catch (IOException ex) {
            String msg = ""Could not get create image stream"";
            throw new ImageProcessingException(msg, ex);
        }

        try {
            iwriter.setOutput(ios);
            iwriter.write(null, new IIOImage(image, null, null), iwparam);
            ios.flush();
            iwriter.dispose();
        } catch (IOException ex) {
            throw new ImageProcessingException(""Could not write image"", ex);
        } finally {
            try {
                ios.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    public static class ByteArrayEncodedImage {

        private final ByteArrayOutputStream data;

        public ByteArrayEncodedImage(ByteArrayOutputStream out) {
            this.data = out;
        }

        public Long getSize() {
            return (long) data.size();
        }

        public InputStream getStream() {
            byte[] bytes = data.toByteArray();
            return new ByteArrayInputStream(bytes);
            // return this.data.toByteArrayInputStream();
        }

    }

    public static class ImageDecoder {
        
        // Define an exception to which the exceptions that occur during
        // decoding are stored. The exceptions are appended to the exception
        // chain of this exception.
        ImageProcessingException ipe = null;

        /**
         * Load an image. If the source stream supports marking, then it can be reset to
         * original state after this method has returned. If the stream does no support
         * marking, then it will be consumed by this method.
         *
         * @param source
         *            the stream from which the encoded image is read.
         * @return the decoded image.
         */
        public BufferedImage decodeImage(InputStream source) throws ImageProcessingException {

            // If reset is not allowed by the stream wrap it in a
            // BufferedInputStream to allow us to unwind back to start
            // if we need to do a jpeg4 thumbnail.
            if (!source.markSupported()) {
                source = new BufferedInputStream(source);
            }
            source.mark(READ_LIMIT);

            try {
                BufferedImage image = new ImageIODecoder().decodeImage(source);
                // BufferedImage image = decoders[i].decodeImage(source);
                if (image == null) {
                    // This happens on some TIFF images.
                    String msg = ""Decoder failed silently and returned a "" + ""null reference"";
                    throw new ImageProcessingException(msg);
                }

                return image;
            } catch (ImageProcessingException ex) {
                // Append the exception to the previous one. We do not want to
                // log this exception, since it is part of expected program
                // behaviour. An ugly hack caused by the lack of CMYK support
                // in Java image processing libraries.
                if (ipe == null) {
                    ipe = ex;
                } else {
                    append(ipe, ex);
                }

                // Reset the stream before the next decoder is tried.
                try {
                    source.reset();
                    source.mark(READ_LIMIT);
                } catch (IOException ex2) {
                    throw new ImageProcessingException(""Failed to reset "" + ""stream"", ex2);
                }
            }

            // If we get here, an error has occurred and ipe will be initialized.
            throw ipe;
        }

        /**
         * Append exception e2 to exception e1.
         */
        private void append(Throwable e1, Throwable e2) {
            if (e1.getCause() != null) {
                append(e1.getCause(), e2);
            } else {
                Exception spacer = new Exception(""The following exception occurred after the previous exception."");
                spacer.setStackTrace(new StackTraceElement[0]);
                spacer.initCause(e2);
                e1.initCause(spacer);
            }
        }
    }

    private static void closePrevious(ByteArrayEncodedImage out) {
        if (out != null) {
            try {
                out.getStream().close();
            } catch (Throwable t) {
                // nop
            }
        }
    }

    public static class ImageProcessingException extends Exception {
        public ImageProcessingException(String msg) {
            super(msg);
        }

        public ImageProcessingException(String msg, Throwable cause) {
            super(msg, cause);
        }
    }

    /**
     * A decoder that uses JAI to decode images.
     */
    public static class ImageIODecoder {

        /**
         * Load an image. The implementation of this method will consume the source
         * stream.
         *
         * @param source
         *            the stream from which the encoded image is read.
         * @return the decoded image.
         */
        public BufferedImage decodeImage(InputStream source) throws ImageProcessingException {

            // Get an ImageReader. This code chooses the first reader from
            // the available readers. There amy be an algorithm with which
            // the most suitable reader could be selected.
            ImageInputStream input;
            try {
                input = ImageIO.createImageInputStream(source);
            } catch (IOException ex) {
                throw new ImageProcessingException(""Failed to create image reader"", ex);
            }

            Iterator<ImageReader> readers = ImageIO.getImageReaders(input);
            ImageReader reader;
            if (readers == null || !readers.hasNext()) {
                throw new ImageProcessingException(""No ImageReaders found for image"");
            } else {
                reader = readers.next();
                reader.setInput(input);
            }

            // Find out the image type and pixel size.
            ImageTypeSpecifier spec = null;
            try {
                Iterator<ImageTypeSpecifier> iter = reader.getImageTypes(0);
                if (iter.hasNext()) {
                    spec = iter.next();
                }

                if (spec == null) {
                    throw new ImageProcessingException(""Failed to detect image "" + ""type"");
                }
            } catch (IOException ex) {
                throw new ImageProcessingException(""Error while detecting image "" + ""type"", ex);
            }

            // Read the image
            BufferedImage image;
            try {
                image = reader.read(0);
            } catch (IOException ex) {
                try {
                    source.reset();
                    source.mark(READ_LIMIT);
                } catch (IOException ex2) {
                    throw new ImageProcessingException(""Failed to reset "" + ""stream"", ex2);
                }

                // write to temp file
                File tmp = null;
                FileOutputStream fout = null;
                try {
                    try {
                        tmp = File.createTempFile(""imageiodecoder"", ""tmp"");
                        fout = new FileOutputStream(tmp);
                        copy(source, fout);
                    } finally {
                        if (fout != null) {
                            fout.close();
                        }
                    }

                    // read image from temp file
                    image = ImageIO.read(tmp);
                } catch (IOException e) {
                    throw new ImageProcessingException(""Failed to read image from file"", e);

                } finally {
                    if (tmp != null) {
                        tmp.delete();
                    }
                }
            }

            reader.dispose();
            return image;
        }
    }
    
    private static void copy(InputStream in, OutputStream out)
            throws IOException {
            byte[] buf = new byte[8192];
            int n;
            while ((n = in.read(buf)) > 0) {
                out.write(buf, 0, n);
            }
        }
}
```",2018-01-05 10:49:41,"[{'nameRev': '3a86bfab98833675e4c0550a0f30d52c9d24bc15 tags/twelvemonkeys-3.4~46', 'commitMessage': '#399 Rewritten getSourceCSType to mimic libjpeg\n', 'commitParents': ['cdb2d72f8bcb6038a949ce79e7354f17c27acb6c'], 'spoonStatsSkippedReason': '', 'commitHash': '3a86bfab98833675e4c0550a0f30d52c9d24bc15', 'authoredDateTime': '2018-01-05 11:41:15', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 65, 'deletions': 110, 'lines': 175, 'filePath': 'imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java'}], 'commitDateTime': '2018-01-05 11:41:15', 'commitUser': 'haraldk', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(int,javax.imageio.ImageReadParam)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getRawImageType(int)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageTypes(int)'}, {'UPD': 8, 'TOT': 118, 'MOV': 38, 'INS': 38, 'DEL': 34, 'spoonMethodName': 'com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getSourceCSType(com.twelvemonkeys.imageio.plugins.jpeg.JFIF,com.twelvemonkeys.imageio.plugins.jpeg.AdobeDCT,java.awt.Frame)'}], 'spoonFilePath': 'JPEGImageReader.java'}]}]",https://github.com/haraldk/TwelveMonkeys/issues/399,15.000277777777777,"['Bug', 'Trouble-shooting']",YCbCr color space incorrectly interpreted as RGB,1.0,"['com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(int,javax.imageio.ImageReadParam)', 'com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getRawImageType(int)', 'com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageTypes(int)', 'com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getSourceCSType(com.twelvemonkeys.imageio.plugins.jpeg.JFIF,com.twelvemonkeys.imageio.plugins.jpeg.AdobeDCT,java.awt.Frame)']",['3a86bfab98833675e4c0550a0f30d52c9d24bc15'],,['imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg'],65.0,110.0,175.0,1.0,8.0,4.0,121.0,38.0,41.0,34.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,TwelveMonkeys
4628,2017-07-05 11:06:19,slandelle,"```
Failed tests: 

  BasicHttpsTest.multipleSequentialPostRequestsOverHttps:95->lambda$multipleSequentialPostRequestsOverHttps$5:96->lambda$null$4:105 expected [hello there] but found [<html>
<head>
<meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8""/>
<title>Error 500 No handler enqueued</title>
</head>
<body><h2>HTTP ERROR 500</h2>
<p>Problem accessing /foo/bar. Reason:
<pre>    No handler enqueued</pre></p><hr><a href=""http://eclipse.org/jetty"">Powered by Jetty:// 9.4.6.v20170531</a><hr/>
</body>
</html>
]
```",2017-07-05 11:08:09,"[{'nameRev': '9bb0b68febd578a216854e6fc04a13c17af6b7b0 tags/async-http-client-project-2.0.34~14', 'commitMessage': 'Properly close test HttpServer, close #1434\n', 'commitParents': ['583ec6f81ea31b760816ccfb0deb5c77ebfe442b'], 'spoonStatsSkippedReason': '', 'commitHash': '9bb0b68febd578a216854e6fc04a13c17af6b7b0', 'authoredDateTime': '2017-07-05 13:07:13', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'client/src/test/java/org/asynchttpclient/testserver/HttpServer.java'}], 'commitDateTime': '2017-07-05 13:19:05', 'commitUser': 'slandelle', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'org.asynchttpclient.testserver.HttpServer.close()'}], 'spoonFilePath': 'HttpServer.java'}]}, {'nameRev': '8696cfa4640cf5304118d0eb2218eb1b2a510814 tags/async-http-client-project-2.1.0-alpha21~7', 'commitMessage': 'Properly close test HttpServer, close #1434\n', 'commitParents': ['ad87bd13a8c111bac8a67752f8bb8cb1b2ce0dea'], 'spoonStatsSkippedReason': '', 'commitHash': '8696cfa4640cf5304118d0eb2218eb1b2a510814', 'authoredDateTime': '2017-07-05 13:07:13', 'commitGHEventType': 'closed', 'commitGitStats': [{'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'client/src/test/java/org/asynchttpclient/testserver/HttpServer.java'}], 'commitDateTime': '2017-07-05 13:07:13', 'commitUser': 'slandelle', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'org.asynchttpclient.testserver.HttpServer.close()'}], 'spoonFilePath': 'HttpServer.java'}]}]",https://github.com/AsyncHttpClient/async-http-client/issues/1434,0.0002777777777777778,['Defect'],BasicHttpsTest.multipleSequentialPostRequestsOverHttps failure,0.0,['org.asynchttpclient.testserver.HttpServer.close()'],['9bb0b68febd578a216854e6fc04a13c17af6b7b0'],,[],0.0,0.0,0.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,async-http-client
4742,2015-11-03 12:41:10,mielientiev,"Hello
I want to implement my custom FeedableBodyGenerator, but the problem is that it suspends forever (timeout) when I return BodyState.SUSPEND from transferTo method.
After a while, I've found out that the resumeTransfer method wasn't called because you add this callback only for the SimpleFeedableBodyGenerator
https://github.com/AsyncHttpClient/async-http-client/blob/master/client/src/main/java/org/asynchttpclient/netty/request/body/NettyBodyBody.java#L70-L79

How can I implement my custom FeedableBodyGenerator with 'resumeTransfer' method feature?
",2015-11-03 12:50:47,"[{'nameRev': '23136826ed77a852e9011fe6de8d973cbc9dc22d tags/async-http-client-project-2.0.0-alpha22~3', 'commitMessage': 'Fix custom FeedableBodyGenerator support, close #1028\n', 'commitParents': ['6be404f041271fc7fca71a3136fbbf28d46346bc'], 'spoonStatsSkippedReason': '', 'commitHash': '23136826ed77a852e9011fe6de8d973cbc9dc22d', 'authoredDateTime': '2015-11-03 13:50:42', 'commitGHEventType': 'closed', 'commitGitStats': [{'insertions': 4, 'deletions': 3, 'lines': 7, 'filePath': 'client/src/main/java/org/asynchttpclient/netty/request/body/NettyBodyBody.java'}], 'commitDateTime': '2015-11-03 13:50:42', 'commitUser': 'slandelle', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 2, 'TOT': 6, 'MOV': 2, 'INS': 1, 'DEL': 1, 'spoonMethodName': 'org.asynchttpclient.netty.request.body.NettyBodyBody.write(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture)'}], 'spoonFilePath': 'NettyBodyBody.java'}]}]",https://github.com/AsyncHttpClient/async-http-client/issues/1028,0.0002777777777777778,['Defect'],Problem with custom FeedableBodyGenerator.,1.0,"['org.asynchttpclient.netty.request.body.NettyBodyBody.write(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture)']",['23136826ed77a852e9011fe6de8d973cbc9dc22d'],,['client/src/main/java/org/asynchttpclient/netty/request/body'],4.0,3.0,7.0,1.0,2.0,1.0,6.0,2.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,async-http-client
4760,2015-07-30 19:31:19,gbranchaudrubenovitch,"This seems to have been introduced by #898.

The following java junit test passes with v`1.9.25` but fails with v`1.9.26` and above.
My expectations are that this should still pass.

``` java
package reprotests;

import com.ning.http.client.AsyncHttpClient;
import com.ning.http.client.AsyncHttpClientConfig;
import com.ning.http.client.Response;
import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetSocketAddress;

import static java.util.stream.Collectors.joining;
import static org.junit.Assert.assertEquals;

public class RedirectTest {

    private HttpServer redirectsTo8888;
    private HttpServer returnsBodyOfRequest;
    private AsyncHttpClient httpClient;

    @Before
    public void startServers() throws Exception {
        httpClient = new AsyncHttpClient(new AsyncHttpClientConfig.Builder()
                .setFollowRedirect(true)
                .setStrict302Handling(true)
                .build());

        redirectsTo8888 = createAndStartServer(7777, new HttpHandler() {
            public void handle(HttpExchange httpExchange) throws IOException {
                httpExchange.getResponseHeaders().add(""Location"", ""http://localhost:8888"");
                httpExchange.sendResponseHeaders(302, 0);
                httpExchange.close();
            }
        });

        returnsBodyOfRequest = createAndStartServer(8888, new HttpHandler() {
            public void handle(HttpExchange httpExchange) throws IOException {
                String body = readRequestBody(httpExchange);
                httpExchange.sendResponseHeaders(200, body.length());
                OutputStream os = httpExchange.getResponseBody();
                os.write(body.getBytes());
                os.close();
            }
        });
    }

    @After
    public void stopServers() throws Exception {
        redirectsTo8888.stop(0);
        returnsBodyOfRequest.stop(0);
    }

    @Test
    public void postRequestKeepsItsBodyAcrossRedirect() throws Exception {
        Response response = httpClient.preparePost(""http://localhost:7777/ad"").setBody(""request body"").execute().get();

        assertEquals(200, response.getStatusCode());
        assertEquals(""request body"", response.getResponseBody());
    }

    private HttpServer createAndStartServer(int port, HttpHandler handler) throws IOException {
        HttpServer server = HttpServer.create(new InetSocketAddress(port), 0);
        server.createContext(""/"", handler);
        server.setExecutor(null);
        server.start();
        return server;
    }

    private String readRequestBody(HttpExchange httpExchange) {
        BufferedReader reader = new BufferedReader(new InputStreamReader(httpExchange.getRequestBody()));
        return reader.lines().collect(joining(""\n""));
    }
}
```
",2015-07-30 21:16:46,"[{'nameRev': 'b3af4beec6f672bd0080be179aacc06c49e01e1a tags/async-http-client-project-2.0.0-alpha9~26', 'commitMessage': 'Keep body on strict 302 and 307, close #939\n', 'commitParents': ['fded6cf136dbe5ce4fbbbfb38b207b7f67652770'], 'spoonStatsSkippedReason': '', 'commitHash': 'b3af4beec6f672bd0080be179aacc06c49e01e1a', 'authoredDateTime': '2015-07-30 23:17:35', 'commitGHEventType': 'closed', 'commitGitStats': [{'insertions': 16, 'deletions': 0, 'lines': 16, 'filePath': 'providers/netty3/src/main/java/org/asynchttpclient/netty/handler/Protocol.java'}, {'insertions': 15, 'deletions': 0, 'lines': 15, 'filePath': 'providers/netty3/src/test/java/org/asynchttpclient/netty/NettyRedirectBodyTest.java'}, {'insertions': 16, 'deletions': 0, 'lines': 16, 'filePath': 'providers/netty4/src/main/java/org/asynchttpclient/netty/handler/Protocol.java'}, {'insertions': 98, 'deletions': 0, 'lines': 98, 'filePath': 'api/src/test/java/org/asynchttpclient/RedirectBodyTest.java'}, {'insertions': 15, 'deletions': 0, 'lines': 15, 'filePath': 'providers/netty4/src/test/java/org/asynchttpclient/netty/NettyRedirectBodyTest.java'}], 'commitDateTime': '2015-07-30 23:17:35', 'commitUser': 'slandelle', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 2, 'MOV': 0, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)'}], 'spoonFilePath': 'Protocol.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'org.asynchttpclient.RedirectBodyTest'}], 'spoonFilePath': 'RedirectBodyTest.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'org.asynchttpclient.netty.NettyRedirectBodyTest'}], 'spoonFilePath': 'NettyRedirectBodyTest.java'}]}, {'nameRev': 'ba79f4dab6de4b276a60d08c43724e8c6b4a49c6 tags/async-http-client-1.9.31~14', 'commitMessage': 'Keep body on strict 302 and 307, close #939\n', 'commitParents': ['4a917c8e2726b948f17ebcd42cf9de4dc826cc00'], 'spoonStatsSkippedReason': '', 'commitHash': 'ba79f4dab6de4b276a60d08c43724e8c6b4a49c6', 'authoredDateTime': '2015-07-30 23:20:20', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 14, 'deletions': 2, 'lines': 16, 'filePath': 'src/main/java/com/ning/http/client/providers/netty/handler/Protocol.java'}], 'commitDateTime': '2015-07-30 23:20:20', 'commitUser': 'slandelle', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 2, 'MOV': 0, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.ning.http.client.providers.netty.handler.Protocol.exitAfterHandlingRedirect(org.jboss.netty.channel.Channel,com.ning.http.client.providers.netty.future.NettyResponseFuture,org.jboss.netty.handler.codec.http.HttpResponse,com.ning.http.client.Request,int,com.ning.http.client.Realm)'}], 'spoonFilePath': 'Protocol.java'}]}]",https://github.com/AsyncHttpClient/async-http-client/issues/939,0.0002777777777777778,"['Defect', 'Netty']",Regression: body of POST requests is not kept after redirection,1.0,"['org.asynchttpclient.netty.handler.Protocol.exitAfterHandlingRedirect(io.netty.channel.Channel,org.asynchttpclient.netty.NettyResponseFuture,io.netty.handler.codec.http.HttpResponse,org.asynchttpclient.Request,int,org.asynchttpclient.Realm)']",['b3af4beec6f672bd0080be179aacc06c49e01e1a'],,"['providers/netty4/src/main/java/org/asynchttpclient/netty/handler', 'providers/netty3/src/main/java/org/asynchttpclient/netty/handler']",32.0,0.0,32.0,2.0,0.0,1.0,2.0,0.0,2.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,async-http-client
4892,2013-05-23 16:49:53,vpnwr,"(1) When the message is not fragmented, onFragment should not be invoked.
(2) And when a message is fragmented, onMessage() shouldn't be called.

observed in ning 1.7.15
",2014-01-27 08:35:41,"[{'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': 'dcb6156bc52bca437f3f00098bf32b192331db35', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'jfarcand', 'commitSpoonAstDiffStats': []}, {'nameRev': 'cb25225e4598a72b14ea65f49108c62eb952d410 tags/2.0.0-alpha1~527', 'commitMessage': 'Port dcb6156bc52bca437f3f00098bf32b192331db35 on master, close #301\n', 'commitParents': ['b64a2dcdf4b99adca03c2cd2878dd47c434d02b2'], 'spoonStatsSkippedReason': '', 'commitHash': 'cb25225e4598a72b14ea65f49108c62eb952d410', 'authoredDateTime': '2014-01-27 09:35:36', 'commitGHEventType': 'closed', 'commitGitStats': [{'insertions': 62, 'deletions': 40, 'lines': 102, 'filePath': 'providers/netty/src/main/java/org/asynchttpclient/providers/netty/ws/NettyWebSocket.java'}], 'commitDateTime': '2014-01-27 09:35:36', 'commitUser': 'slandelle', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 30, 'MOV': 15, 'INS': 8, 'DEL': 6, 'spoonMethodName': 'org.asynchttpclient.providers.netty.ws.NettyWebSocket.onBinaryFragment(byte[],boolean)'}, {'UPD': 0, 'TOT': 4, 'MOV': 0, 'INS': 4, 'DEL': 0, 'spoonMethodName': 'org.asynchttpclient.providers.netty.ws.NettyWebSocket'}, {'UPD': 2, 'TOT': 31, 'MOV': 15, 'INS': 7, 'DEL': 7, 'spoonMethodName': 'org.asynchttpclient.providers.netty.ws.NettyWebSocket.onTextFragment(java.lang.String,boolean)'}], 'spoonFilePath': 'NettyWebSocket.java'}]}, {'nameRev': '1325729b7cdb5e3a1dd44c2c049f30c2268b5e9b tags/async-http-client-1.8.0~12', 'commitMessage': 'Fixes #301\n', 'commitParents': ['21a0fdfa1b95506a5b6481610fcda8d9dd2359bb'], 'spoonStatsSkippedReason': '', 'commitHash': '1325729b7cdb5e3a1dd44c2c049f30c2268b5e9b', 'authoredDateTime': '2014-01-24 16:26:20', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 65, 'deletions': 43, 'lines': 108, 'filePath': 'src/main/java/com/ning/http/client/providers/netty/NettyWebSocket.java'}], 'commitDateTime': '2014-01-30 15:38:16', 'commitUser': 'jfarcand', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 30, 'MOV': 15, 'INS': 8, 'DEL': 6, 'spoonMethodName': 'com.ning.http.client.providers.netty.NettyWebSocket.onBinaryFragment(byte[],boolean)'}, {'UPD': 0, 'TOT': 4, 'MOV': 0, 'INS': 4, 'DEL': 0, 'spoonMethodName': 'com.ning.http.client.providers.netty.NettyWebSocket'}, {'UPD': 2, 'TOT': 31, 'MOV': 15, 'INS': 7, 'DEL': 7, 'spoonMethodName': 'com.ning.http.client.providers.netty.NettyWebSocket.onTextFragment(java.lang.String,boolean)'}], 'spoonFilePath': 'NettyWebSocket.java'}]}]",https://github.com/AsyncHttpClient/async-http-client/issues/301,248.00027777777777,['Defect'],WebSocketByteListener invokes both onMessage() and onFragment(),2.0,"['com.ning.http.client.providers.netty.NettyWebSocket.onBinaryFragment(byte[],boolean)', 'org.asynchttpclient.providers.netty.ws.NettyWebSocket.onBinaryFragment(byte[],boolean)', 'com.ning.http.client.providers.netty.NettyWebSocket', 'com.ning.http.client.providers.netty.NettyWebSocket.onTextFragment(java.lang.String,boolean)', 'org.asynchttpclient.providers.netty.ws.NettyWebSocket.onTextFragment(java.lang.String,boolean)', 'org.asynchttpclient.providers.netty.ws.NettyWebSocket']","['cb25225e4598a72b14ea65f49108c62eb952d410', '1325729b7cdb5e3a1dd44c2c049f30c2268b5e9b']",,"['providers/netty/src/main/java/org/asynchttpclient/providers/netty/ws', 'src/main/java/com/ning/http/client/providers/netty']",127.0,83.0,210.0,2.0,6.0,6.0,130.0,60.0,38.0,26.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,async-http-client
4968,2018-02-08 21:22:06,Ken1S,"<!--
Hi there! thank you for discovering and submitting an issue!

Please first tell us a little bit about the environment you're running:
The commands in the comments can be run directly in a command prompt.
-->


- **OS and version used:** Windows 10 

- **Java runtime used:** <VERSION> Java 8

- **SDK version used:** <VERSION> 1.7.0


# Description of the issue:
Printout of ""Lost connection to the server."" is printed both to System.out and to log.
This makes it harder/impossible to suppres that output that would go to log with info level.

I found the message in 
https://github.com/Azure/azure-iot-sdk-java/blob/master/device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java#L769

---
System.out.println(""Lost connection to the server. Reconnection attempt "" + currentReconnectionAttempt++ + ""..."");
        logger.LogInfo(""Lost connection to the server. Reconnection attempt %s, method name is %s "", currentReconnectionAttempt, logger.getMethodName());
---

My suggestion is to remove the System.out line 

",2018-02-12 19:49:18,"[{'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': '0e6fb4a431e6cc8841dbe60e1f9ec7ffdb22be69', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': []}, {'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': 'eec1f7fffc24b2128168dc22e2013f9be4d7bfee', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': []}, {'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': '5e9224fbc0babef61a5164404ad9fc5fa4d23c74', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': []}, {'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': '8d07c2bd45589581ef4bd8b2a547d9aa473b7823', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': []}, {'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': '475c6c54ecd18806a52f8a6a23eb3815b0fd342e', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': []}, {'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': '8e3969c1100a0b879db6ed15511a3ffdd12d4288', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': []}, {'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': '54b005931e5d54fd770020252bc4d40ea608509c', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': []}, {'nameRev': '282bed123309bfef6580c41ff859de31dd556cef tags/2018-2-9~1', 'commitMessage': 'refactor(iot-dev): Remove print to console from reconnection logic for AMQP\n\nGithub Issue #205\n', 'commitParents': ['c4b9ff2fec5ce8ef37bf823a0c6f8a13b06e13a9'], 'spoonStatsSkippedReason': '', 'commitHash': '282bed123309bfef6580c41ff859de31dd556cef', 'authoredDateTime': '2018-02-08 14:18:31', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java'}], 'commitDateTime': '2018-02-08 16:56:40', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 2, 'MOV': 1, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.startReconnect()'}], 'spoonFilePath': 'AmqpsIotHubConnection.java'}]}, {'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': '12a8c9958da66b43f3478122a103b208d6e03d63', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': []}, {'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': 'dc4a30b05ec1e12c34f0768d7b6c7792542a61fa', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': []}, {'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': 'ef4478b939f058ff872c569dee9cdee3d41e8c30', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'timtay-microsoft', 'commitSpoonAstDiffStats': []}]",https://github.com/Azure/azure-iot-sdk-java/issues/205,3.000277777777778,"['bug', 'fix checked in']","Cannot suppress output of ""Lost connection to the server....""",1.0,['com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsIotHubConnection.startReconnect()'],['282bed123309bfef6580c41ff859de31dd556cef'],,['device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot'],1.0,1.0,2.0,1.0,0.0,1.0,2.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,10.0,0.0,0.0,azure-iot-sdk-java
4993,2017-07-25 08:42:30,Pllvcn83,"

•OS and version used: Windows 7 


•Java runtime used: JSE 1.8


•SDK version used: iot-device-client-1.3.29-with-deps.jar



# Description of the issue:
This is the copy of defect 107 of Beppuc86

I'm using the DeviceClient to send an uploadToBlobAsync request. Every time i call that api, the response is 11 error, and the following log.

I've looked at the code, and I can't understand how can I do like suggested, because in the class FileUploadResponseParser is not exposed the GsonBuilder.

# Code sample exhibiting the issue:
client.uploadToBlobAsync(file.getName(), new FileInputStream(file), file.length(), callback,
                    callbackContext);

# Console log of the issue:
File upload failed to upload the stream to the blob. java.lang.IllegalArgumentException: Malformed json:java.lang.RuntimeException: Unable to invoke no-args constructor for class com.microsoft.azure.sdk.iot.deps.serializer.FileUploadResponseParser. Register an InstanceCreator with Gson for this type may fix this problem.

**I **resolved the issue adding a costructor into the class: FileUploadResponseParser****

like this

    public FileUploadResponseParser() {
    	this.hostName = """";
        this.containerName = """";
        this.correlationId = """";
        this.blobName = """";
        this.sasToken = """";
   
	}

If you think the fix is valid can you insert this costructor in the next release.


",2017-08-15 18:40:28,"[{'nameRev': '195513340d52f3d36fa7b3dd494fe8e1278a95c3 tags/2017-8-11~5', 'commitMessage': 'Add empty constructors on Parsers to make Gson happy (issue #127)\n', 'commitParents': ['87d2c65c67ae7e1c3e5e2e6efce497853aa20b47'], 'spoonStatsSkippedReason': '', 'commitHash': '195513340d52f3d36fa7b3dd494fe8e1278a95c3', 'authoredDateTime': '2017-08-02 17:07:37', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 8, 'deletions': 0, 'lines': 8, 'filePath': 'deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadNotificationParser.java'}, {'insertions': 8, 'deletions': 0, 'lines': 8, 'filePath': 'deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/QueryResponseParser.java'}, {'insertions': 0, 'deletions': 3, 'lines': 3, 'filePath': 'deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/JobsResponseParser.java'}, {'insertions': 8, 'deletions': 0, 'lines': 8, 'filePath': 'deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadRequestParser.java'}, {'insertions': 8, 'deletions': 0, 'lines': 8, 'filePath': 'deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/JobsParser.java'}, {'insertions': 8, 'deletions': 0, 'lines': 8, 'filePath': 'deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadStatusParser.java'}, {'insertions': 8, 'deletions': 0, 'lines': 8, 'filePath': 'deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/FileUploadResponseParser.java'}, {'insertions': 7, 'deletions': 0, 'lines': 7, 'filePath': 'deps/src/main/java/com/microsoft/azure/sdk/iot/deps/serializer/QueryRequestParser.java'}], 'commitDateTime': '2017-08-02 17:07:37', 'commitUser': 'mamokarz', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.microsoft.azure.sdk.iot.deps.serializer.FileUploadStatusParser'}], 'spoonFilePath': 'FileUploadStatusParser.java'}, {'spoonMethods': [], 'spoonFilePath': 'JobsResponseParser.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.microsoft.azure.sdk.iot.deps.serializer.QueryRequestParser'}], 'spoonFilePath': 'QueryRequestParser.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.microsoft.azure.sdk.iot.deps.serializer.JobsParser'}], 'spoonFilePath': 'JobsParser.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.microsoft.azure.sdk.iot.deps.serializer.QueryResponseParser'}], 'spoonFilePath': 'QueryResponseParser.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.microsoft.azure.sdk.iot.deps.serializer.FileUploadRequestParser'}], 'spoonFilePath': 'FileUploadRequestParser.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.microsoft.azure.sdk.iot.deps.serializer.FileUploadResponseParser'}], 'spoonFilePath': 'FileUploadResponseParser.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.microsoft.azure.sdk.iot.deps.serializer.FileUploadNotificationParser'}], 'spoonFilePath': 'FileUploadNotificationParser.java'}]}]",https://github.com/Azure/azure-iot-sdk-java/issues/127,21.00027777777778,"['bug', 'fix checked in']",File upload,1.0,"['com.microsoft.azure.sdk.iot.deps.serializer.FileUploadRequestParser', 'com.microsoft.azure.sdk.iot.deps.serializer.FileUploadNotificationParser', 'com.microsoft.azure.sdk.iot.deps.serializer.FileUploadStatusParser', 'com.microsoft.azure.sdk.iot.deps.serializer.FileUploadResponseParser', 'com.microsoft.azure.sdk.iot.deps.serializer.JobsParser', 'com.microsoft.azure.sdk.iot.deps.serializer.QueryResponseParser', 'com.microsoft.azure.sdk.iot.deps.serializer.QueryRequestParser']",['195513340d52f3d36fa7b3dd494fe8e1278a95c3'],,['deps/src/main/java/com/microsoft/azure/sdk/iot/deps'],55.0,3.0,58.0,8.0,0.0,7.0,7.0,0.0,7.0,0.0,7.0,0.0,0.0,0.0,0.0,0.0,0.0,azure-iot-sdk-java
5384,2018-08-08 22:16:27,c-parsons,"This is a tracking issue for offering a migration solution for
`--incompatible_bzl_disallow_load_after_statement`

This flag would enforce that bzl files have load() statements listed first.",2019-03-22 20:37:36,"[{'nameRev': '3992d29f23b469df8f1cfc0cc707d0058ceede3e tags/0.25.0~213', 'commitMessage': 'Enable --incompatible_bzl_disallow_load_after_statement by default\n\nFixes https://github.com/bazelbuild/bazel/issues/5815\n\nTested: https://buildkite.com/bazel/bazelisk-plus-incompatible-flags/builds/49\n\nRELNOTES: --incompatible_bzl_disallow_load_after_statement is enabled\nPiperOrigin-RevId: 239854652\n', 'commitParents': ['d6cd9176fcfd3e218edc653cdcb94eebca180332'], 'spoonStatsSkippedReason': '', 'commitHash': '3992d29f23b469df8f1cfc0cc707d0058ceede3e', 'authoredDateTime': '2019-03-22 13:35:12', 'commitGHEventType': 'closed', 'commitGitStats': [{'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'site/docs/skylark/backward-compatibility.md'}, {'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'src/main/java/com/google/devtools/build/lib/packages/StarlarkSemanticsOptions.java'}, {'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'src/main/java/com/google/devtools/build/lib/syntax/StarlarkSemantics.java'}], 'commitDateTime': '2019-03-22 13:36:59', 'commitUser': 'bazel-io', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.syntax.StarlarkSemantics'}], 'spoonFilePath': 'StarlarkSemantics.java'}, {'spoonMethods': [{'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.packages.StarlarkSemanticsOptions'}], 'spoonFilePath': 'StarlarkSemanticsOptions.java'}]}, {'nameRev': '6607766b67db89e711c3de1655b08536115afa9c remotes/origin/jin-patch-2~145', 'commitMessage': 'Delete the flag incompatible_bzl_disallow_load_after_statement\n\nhttps://github.com/bazelbuild/bazel/issues/5815\n\nRELNOTES: The flag `incompatible_bzl_disallow_load_after_statement` is removed.\nPiperOrigin-RevId: 302473246\n', 'commitParents': ['0e9149380e2c6b808848611a378c0c3dab2e7908'], 'spoonStatsSkippedReason': '', 'commitHash': '6607766b67db89e711c3de1655b08536115afa9c', 'authoredDateTime': '2020-03-23 11:07:11', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 2, 'deletions': 4, 'lines': 6, 'filePath': 'src/main/java/com/google/devtools/build/lib/syntax/ValidationEnvironment.java'}, {'insertions': 0, 'deletions': 9, 'lines': 9, 'filePath': 'src/test/java/com/google/devtools/build/lib/syntax/ValidationTest.java'}, {'insertions': 0, 'deletions': 2, 'lines': 2, 'filePath': 'src/test/java/com/google/devtools/build/lib/packages/SkylarkSemanticsConsistencyTest.java'}, {'insertions': 0, 'deletions': 15, 'lines': 15, 'filePath': 'src/main/java/com/google/devtools/build/lib/packages/StarlarkSemanticsOptions.java'}, {'insertions': 0, 'deletions': 5, 'lines': 5, 'filePath': 'src/main/java/com/google/devtools/build/lib/syntax/StarlarkSemantics.java'}], 'commitDateTime': '2020-03-23 11:08:30', 'commitUser': 'bazel-io', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.syntax.ValidationTest.testLoadAfterStatement()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.syntax.ValidationTest.testAllowLoadAfterStatement()'}], 'spoonFilePath': 'ValidationTest.java'}, {'spoonMethods': [{'UPD': 55, 'TOT': 58, 'MOV': 2, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.packages.StarlarkSemanticsOptions.toSkylarkSemantics()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.packages.StarlarkSemanticsOptions'}], 'spoonFilePath': 'StarlarkSemanticsOptions.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.syntax.StarlarkSemantics.Builder.incompatibleBzlDisallowLoadAfterStatement(boolean)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.syntax.StarlarkSemantics.incompatibleBzlDisallowLoadAfterStatement()'}, {'UPD': 42, 'TOT': 44, 'MOV': 1, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.syntax.StarlarkSemantics'}], 'spoonFilePath': 'StarlarkSemantics.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 2, 'MOV': 1, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.syntax.ValidationEnvironment.validateToplevelStatements(java.util.List)'}, {'UPD': 0, 'TOT': 2, 'MOV': 1, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.syntax.ValidationEnvironment.checkLoadAfterStatement(java.util.List)'}], 'spoonFilePath': 'ValidationEnvironment.java'}, {'spoonMethods': [{'UPD': 28, 'TOT': 31, 'MOV': 2, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.packages.SkylarkSemanticsConsistencyTest.buildRandomSemantics(java.util.Random)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.packages.SkylarkSemanticsConsistencyTest.buildRandomOptions(java.util.Random)'}], 'spoonFilePath': 'SkylarkSemanticsConsistencyTest.java'}]}]",https://github.com/bazelbuild/bazel/issues/5815,225.00027777777777,"['P2', 'breaking-change-0.25', 'incompatible-change', 'migration-0.21', 'migration-0.22', 'migration-0.23', 'migration-0.24', 'team-Starlark']",incompatible_bzl_disallow_load_after_statement: Require load() be at the top of bzl files,2.0,"['com.google.devtools.build.lib.packages.StarlarkSemanticsOptions.toSkylarkSemantics()', 'com.google.devtools.build.lib.packages.StarlarkSemanticsOptions', 'com.google.devtools.build.lib.syntax.StarlarkSemantics', 'com.google.devtools.build.lib.syntax.ValidationEnvironment.validateToplevelStatements(java.util.List)', 'com.google.devtools.build.lib.syntax.StarlarkSemantics.Builder.incompatibleBzlDisallowLoadAfterStatement(boolean)', 'com.google.devtools.build.lib.syntax.StarlarkSemantics.incompatibleBzlDisallowLoadAfterStatement()', 'com.google.devtools.build.lib.syntax.ValidationEnvironment.checkLoadAfterStatement(java.util.List)']","['3992d29f23b469df8f1cfc0cc707d0058ceede3e', '6607766b67db89e711c3de1655b08536115afa9c']",,"['src/main/java/com/google/devtools/build/lib/packages', 'src/main/java/com/google/devtools/build/lib/syntax']",4.0,26.0,30.0,3.0,99.0,7.0,111.0,5.0,0.0,7.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,bazel
6174,2017-09-19 12:32:52,damienmg,"The XML produced by the tests are shown as all passing when there is a timeout (probably because we do not write the skipped tests and the incomplete tests).

Internal ref b/65292484

Assigning to @iirina to follow through but we need more precision from the team.

/cc @vladmos: we need to at least understand the issue, maybe cherry-pick the fix",2017-09-22 10:16:43,"[{'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': '12dc6d7a55c88b3486d3a5d208f8803545becac9', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'vladmos', 'commitSpoonAstDiffStats': []}, {'nameRev': '7b091c1397a82258e26ab5336df6c8dae1d97384 tags/0.7.0~138', 'commitMessage': 'Add a global failure when a test is interrupted/cancelled.\n\nWhen a timeout occurred, the current test case is interrupted and the others are cancelled. This was not reflected in any way and all tests were reported as success, even if there was a timeout and the tests were cancelled/interrupted.\n\nAlso add a status xml attribute to mark if the test was completed, cancelled or interrupted.\n\nFixes #3763\n\nRELNOTES: None.\nPiperOrigin-RevId: 169665622\n', 'commitParents': ['9faf8b7458c496a8d2b2a0040dcc2bb285b52e1b'], 'spoonStatsSkippedReason': '', 'commitHash': '7b091c1397a82258e26ab5336df6c8dae1d97384', 'authoredDateTime': '2017-09-22 11:48:31', 'commitGHEventType': 'closed', 'commitGitStats': [{'insertions': 46, 'deletions': 0, 'lines': 46, 'filePath': 'src/test/shell/bazel/bazel_java_test.sh'}, {'insertions': 7, 'deletions': 7, 'lines': 14, 'filePath': 'src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/testbed/XmlOutputExercises.ant.xml'}, {'insertions': 4, 'deletions': 1, 'lines': 5, 'filePath': 'src/java_tools/junitrunner/java/com/google/testing/junit/runner/model/TestCaseNode.java'}, {'insertions': 2, 'deletions': 0, 'lines': 2, 'filePath': 'src/java_tools/junitrunner/java/com/google/testing/junit/runner/model/AntXmlResultWriter.java'}], 'commitDateTime': '2017-09-22 12:16:11', 'commitUser': 'bazel-io', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.testing.junit.runner.model.AntXmlResultWriter.writeTestCase(com.google.testing.junit.runner.model.XmlWriter,com.google.testing.junit.runner.model.TestResult,java.lang.Iterable)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.testing.junit.runner.model.AntXmlResultWriter'}], 'spoonFilePath': 'AntXmlResultWriter.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 3, 'MOV': 1, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.google.testing.junit.runner.model.TestCaseNode.testInterrupted(long)'}], 'spoonFilePath': 'TestCaseNode.java'}]}, {'nameRev': '473489a301cf6f9e1b973a75327eac0fedf47c47 tags/0.6.0~3', 'commitMessage': 'Add a global failure when a test is interrupted/cancelled.\n\nWhen a timeout occurred, the current test case is interrupted and the others are cancelled. This was not reflected in any way and all tests were reported as success, even if there was a timeout and the tests were cancelled/interrupted.\n\nAlso add a status xml attribute to mark if the test was completed, cancelled or interrupted.\n\nFixes #3763\n\nRELNOTES: None.\nPiperOrigin-RevId: 169665622\n', 'commitParents': ['b1d5684d09cdc193289377ee2fec6c0310926cc3'], 'spoonStatsSkippedReason': '', 'commitHash': '473489a301cf6f9e1b973a75327eac0fedf47c47', 'authoredDateTime': '2017-09-22 11:48:31', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 46, 'deletions': 0, 'lines': 46, 'filePath': 'src/test/shell/bazel/bazel_java_test.sh'}, {'insertions': 7, 'deletions': 7, 'lines': 14, 'filePath': 'src/java_tools/junitrunner/javatests/com/google/testing/junit/runner/testbed/XmlOutputExercises.ant.xml'}, {'insertions': 4, 'deletions': 1, 'lines': 5, 'filePath': 'src/java_tools/junitrunner/java/com/google/testing/junit/runner/model/TestCaseNode.java'}, {'insertions': 2, 'deletions': 0, 'lines': 2, 'filePath': 'src/java_tools/junitrunner/java/com/google/testing/junit/runner/model/AntXmlResultWriter.java'}], 'commitDateTime': '2017-09-26 12:33:37', 'commitUser': 'vladmos', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.testing.junit.runner.model.AntXmlResultWriter.writeTestCase(com.google.testing.junit.runner.model.XmlWriter,com.google.testing.junit.runner.model.TestResult,java.lang.Iterable)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.testing.junit.runner.model.AntXmlResultWriter'}], 'spoonFilePath': 'AntXmlResultWriter.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 3, 'MOV': 1, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.google.testing.junit.runner.model.TestCaseNode.testInterrupted(long)'}], 'spoonFilePath': 'TestCaseNode.java'}]}, {'nameRev': '', 'commitMessage': '', 'commitParents': [], 'spoonStatsSkippedReason': '', 'commitHash': '81d9801f5932dbe85990cacbb2529835f4907497', 'authoredDateTime': '', 'commitGHEventType': 'referenced', 'commitGitStats': [], 'commitDateTime': '', 'commitUser': 'vladmos', 'commitSpoonAstDiffStats': []}]",https://github.com/bazelbuild/bazel/issues/3763,2.000277777777778,"['P1', 'release blocker', 'type: bug']",JUnit XML are showing all test as passed when there is a timeout,1.0,"['com.google.testing.junit.runner.model.AntXmlResultWriter.writeTestCase(com.google.testing.junit.runner.model.XmlWriter,com.google.testing.junit.runner.model.TestResult,java.lang.Iterable)', 'com.google.testing.junit.runner.model.AntXmlResultWriter']",['7b091c1397a82258e26ab5336df6c8dae1d97384'],,['src/java_tools/junitrunner/java/com/google/testing/junit/runner/model'],2.0,0.0,2.0,1.0,0.0,2.0,2.0,0.0,2.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,bazel
6224,2017-08-14 19:59:32,chaoren,"Please provide the following information. The more we know about your system and use case, the more easily and likely we can help.

### Description of the problem / feature request / question:

_If asking a question or requesting a feature, also tell us about the underlying problem you're trying to solve._

1. Include a nested workspace as a `local_repository`.
2. `glob` files within the nested workspace.
3. The glob will sometimes be empty under identical circumstances and sometimes not.

### If possible, provide a minimal example to reproduce the problem:
```
$ find
.
./WORKSPACE
./BUILD
./nested
./nested/foo.txt
./nested/WORKSPACE
./nested/BUILD
$ cat nested/*
$ cat WORKSPACE
local_repository(
    name = ""nested"",
    path = ""nested"",
)
$ cat BUILD
filegroup(
    name = ""foo"",
    srcs = [""nested/foo.txt""],
)

filegroup(
    name = ""glob"",
    srcs = glob([""nested/foo.txt""]),
)
```
```
$ bazel query :all --output=build
```
will sometimes produce:
```
# /path/to/BUILD:6:1
filegroup(
  name = ""glob"",
  srcs = [],
)

# /path/to/BUILD:1:1
filegroup(
  name = ""foo"",
  srcs = [""//:nested/foo.txt""],
)
```
and sometimes:
```
# /path/to/BUILD:6:1
filegroup(
  name = ""glob"",
  srcs = [""//:nested/foo.txt""],
)

# /path/to/BUILD:1:1
filegroup(
  name = ""foo"",
  srcs = [""//:nested/foo.txt""],
)
```
with no discernable difference in environment.
Though one result will persist for some time.

### Environment info
* Operating System: Ubuntu 14.04.5 LTS


* Bazel version (output of `bazel info release`): release 0.5.3


###  Have you found anything relevant by searching the web?
(e.g. [StackOverflow answers](http://stackoverflow.com/questions/tagged/bazel),
[GitHub issues](https://github.com/bazelbuild/bazel/issues),
email threads on the [`bazel-discuss`](https://groups.google.com/forum/#!forum/bazel-discuss) Google group)


### Anything else, information or logs or outputs that would be helpful?
(If they are large, please upload as attachment or provide link).
",2017-09-07 07:58:48,"[{'nameRev': 'e0dfb3c3d70efc49c703be7e4c8e93c8a6b38d6b tags/0.6.0~104', 'commitMessage': 'Update LocalRepositoryLookupFunction to also return the path of the\nrepository.\n\nPart of #3553.\n\nChange-Id: Id8b4958844b2ad7b5ce4b2ea00a91b6b22acc025\nPiperOrigin-RevId: 167589110\n', 'commitParents': ['268c0bcbf79f9f3f72d95fa51af0f1b18c5ce29e'], 'spoonStatsSkippedReason': '', 'commitHash': 'e0dfb3c3d70efc49c703be7e4c8e93c8a6b38d6b', 'authoredDateTime': '2017-09-05 18:31:10', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 4, 'deletions': 1, 'lines': 5, 'filePath': 'src/main/java/com/google/devtools/build/lib/skyframe/LocalRepositoryLookupFunction.java'}, {'insertions': 9, 'deletions': 0, 'lines': 9, 'filePath': 'src/test/java/com/google/devtools/build/lib/skyframe/LocalRepositoryLookupFunctionTest.java'}, {'insertions': 28, 'deletions': 3, 'lines': 31, 'filePath': 'src/main/java/com/google/devtools/build/lib/skyframe/LocalRepositoryLookupValue.java'}], 'commitDateTime': '2017-09-06 10:10:09', 'commitUser': 'bazel-io', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunctionTest.testActualPackage()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunctionTest.testLocalRepository_absolutePath_nonNormalized()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunctionTest.testLocalRepositorySubPackage()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunctionTest.testLocalRepository_absolutePath()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunctionTest.testLocalRepository_nonNormalizedPath()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunctionTest.testLocalRepository()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunctionTest.testNoPath()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunctionTest.testWorkspaceButNoLocalRepository()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunctionTest.testLocalRepository_MainWorkspace_NotFound()'}], 'spoonFilePath': 'LocalRepositoryLookupFunctionTest.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 2, 'MOV': 0, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunction.maybeCheckWorkspaceForRepository(com.google.devtools.build.lib.skyframe.Environment,com.google.devtools.build.lib.vfs.RootedPath)'}], 'spoonFilePath': 'LocalRepositoryLookupFunction.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.success(com.google.devtools.build.lib.cmdline.RepositoryName,com.google.devtools.build.lib.vfs.PathFragment)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.getPath()'}, {'UPD': 0, 'TOT': 3, 'MOV': 0, 'INS': 3, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.SuccessfulLocalRepositoryLookupValue'}, {'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.success(com.google.devtools.build.lib.cmdline.RepositoryName)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.SuccessfulLocalRepositoryLookupValue.getPath()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.NotFoundLocalRepositoryLookupValue.getPath()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.MainRepositoryLookupValue.getPath()'}], 'spoonFilePath': 'LocalRepositoryLookupValue.java'}]}, {'nameRev': '4a12e66757a5d12080744c7289342db1a0f67df7 tags/0.6.0~81', 'commitMessage': 'Update PackageLookupFunction to report the corrected label when a\npackage crosses into a local repository.\n\nPart of #3553.\n\nChange-Id: Ib21de0a1843e72055c53ef34922d69290aee72ed\nPiperOrigin-RevId: 167726591\n', 'commitParents': ['313a0e04eb7c173359b1e18a6cbe5dd5915bb0a8'], 'spoonStatsSkippedReason': '', 'commitHash': '4a12e66757a5d12080744c7289342db1a0f67df7', 'authoredDateTime': '2017-09-06 17:51:18', 'commitGHEventType': 'referenced', 'commitGitStats': [{'insertions': 7, 'deletions': 3, 'lines': 10, 'filePath': 'src/main/java/com/google/devtools/build/lib/skyframe/PackageLookupFunction.java'}, {'insertions': 47, 'deletions': 0, 'lines': 47, 'filePath': 'src/test/java/com/google/devtools/build/lib/skyframe/PackageLookupFunctionTest.java'}, {'insertions': 5, 'deletions': 5, 'lines': 10, 'filePath': 'src/test/shell/bazel/cross_repository_test.sh'}, {'insertions': 58, 'deletions': 0, 'lines': 58, 'filePath': 'src/main/java/com/google/devtools/build/lib/skyframe/PackageLookupValue.java'}], 'commitDateTime': '2017-09-07 09:57:12', 'commitUser': 'bazel-io', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 5, 'MOV': 1, 'INS': 3, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.PackageLookupFunction.getPackageLookupValue(com.google.devtools.build.lib.skyframe.Environment,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.cmdline.PackageIdentifier,com.google.devtools.build.lib.skyframe.PackageLookupValue.BuildFileName)'}], 'spoonFilePath': 'PackageLookupFunction.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.PackageLookupFunctionTest.ErrorLabelViolationsTest.testCorrectPackageDetection_deepRepo_emptyPackage()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.PackageLookupFunctionTest.ErrorLabelViolationsTest.getCorrectedPackage(java.lang.String,java.lang.String)'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.PackageLookupFunctionTest.ErrorLabelViolationsTest.testCorrectPackageDetection_simpleRepo_subPackage()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.PackageLookupFunctionTest.ErrorLabelViolationsTest.testCorrectPackageDetection_simpleRepo_emptyPackage()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.PackageLookupFunctionTest.ErrorLabelViolationsTest.testCorrectPackageDetection_simpleRepo_singlePackage()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.PackageLookupFunctionTest.ErrorLabelViolationsTest.testCorrectPackageDetection_deepRepo_subPackage()'}], 'spoonFilePath': 'PackageLookupFunctionTest.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.PackageLookupValue.IncorrectRepositoryReferencePackageLookupValue'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.PackageLookupValue.incorrectRepositoryReference(com.google.devtools.build.lib.cmdline.PackageIdentifier,com.google.devtools.build.lib.cmdline.PackageIdentifier)'}], 'spoonFilePath': 'PackageLookupValue.java'}]}, {'nameRev': '45932965c08e1080f1d53cf09352bec0a24cb40f tags/0.6.0~72', 'commitMessage': 'Update ContainingPackageLookupFunction to properly handle cases where a\npath crosses into a local repository and correctly report the\nrepository-relative package.\n\nFixes #3553.\n\nChange-Id: Ib912e69d546fb740ef8fe4c426dba30fa7776bda\nPiperOrigin-RevId: 167760229\n', 'commitParents': ['5da5572254555704f88fd2e0061237fd35a50f9c'], 'spoonStatsSkippedReason': '', 'commitHash': '45932965c08e1080f1d53cf09352bec0a24cb40f', 'authoredDateTime': '2017-09-06 21:57:46', 'commitGHEventType': 'closed', 'commitGitStats': [{'insertions': 22, 'deletions': 1, 'lines': 23, 'filePath': 'src/test/java/com/google/devtools/build/lib/skylark/SkylarkRuleContextTest.java'}, {'insertions': 90, 'deletions': 9, 'lines': 99, 'filePath': 'src/test/java/com/google/devtools/build/lib/skyframe/ContainingPackageLookupFunctionTest.java'}, {'insertions': 11, 'deletions': 0, 'lines': 11, 'filePath': 'src/main/java/com/google/devtools/build/lib/skyframe/ContainingPackageLookupFunction.java'}], 'commitDateTime': '2017-09-07 09:57:44', 'commitUser': 'bazel-io', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.ContainingPackageLookupFunctionTest'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.ContainingPackageLookupFunctionTest.testContainingPackageIsExternalRepositoryViaLocalPath()'}, {'UPD': 2, 'TOT': 5, 'MOV': 2, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.ContainingPackageLookupFunctionTest.lookupContainingPackage(java.lang.String)'}, {'UPD': 0, 'TOT': 2, 'MOV': 0, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.ContainingPackageLookupFunctionTest.lookupContainingPackage(com.google.devtools.build.lib.cmdline.PackageIdentifier)'}, {'UPD': 6, 'TOT': 33, 'MOV': 6, 'INS': 17, 'DEL': 4, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.ContainingPackageLookupFunctionTest.setUp()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.ContainingPackageLookupFunctionTest.testContainingPackageIsExternalRepositoryViaExternalRepository()'}], 'spoonFilePath': 'ContainingPackageLookupFunctionTest.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skyframe.ContainingPackageLookupFunction.compute(com.google.devtools.build.skyframe.SkyKey,com.google.devtools.build.lib.skyframe.Environment)'}], 'spoonFilePath': 'ContainingPackageLookupFunction.java'}, {'spoonMethods': [{'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skylark.SkylarkRuleContextTest.testPackageBoundaryError_ExternalRepository()'}, {'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.skylark.SkylarkRuleContextTest.testPackageBoundaryError_ExternalRepository_Boundary()'}], 'spoonFilePath': 'SkylarkRuleContextTest.java'}]}]",https://github.com/bazelbuild/bazel/issues/3553,23.00027777777778,"['P1', 'type: bug']",Nondeterministic behavior with glob,3.0,"['com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.getPath()', 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.SuccessfulLocalRepositoryLookupValue.getPath()', 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupFunction.maybeCheckWorkspaceForRepository(com.google.devtools.build.lib.skyframe.Environment,com.google.devtools.build.lib.vfs.RootedPath)', 'com.google.devtools.build.lib.skyframe.PackageLookupValue.incorrectRepositoryReference(com.google.devtools.build.lib.cmdline.PackageIdentifier,com.google.devtools.build.lib.cmdline.PackageIdentifier)', 'com.google.devtools.build.lib.skyframe.ContainingPackageLookupFunction.compute(com.google.devtools.build.skyframe.SkyKey,com.google.devtools.build.lib.skyframe.Environment)', 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.success(com.google.devtools.build.lib.cmdline.RepositoryName,com.google.devtools.build.lib.vfs.PathFragment)', 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.MainRepositoryLookupValue.getPath()', 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.SuccessfulLocalRepositoryLookupValue', 'com.google.devtools.build.lib.skyframe.PackageLookupValue.IncorrectRepositoryReferencePackageLookupValue', 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.success(com.google.devtools.build.lib.cmdline.RepositoryName)', 'com.google.devtools.build.lib.skyframe.LocalRepositoryLookupValue.NotFoundLocalRepositoryLookupValue.getPath()', 'com.google.devtools.build.lib.skyframe.PackageLookupFunction.getPackageLookupValue(com.google.devtools.build.lib.skyframe.Environment,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.cmdline.PackageIdentifier,com.google.devtools.build.lib.skyframe.PackageLookupValue.BuildFileName)']","['e0dfb3c3d70efc49c703be7e4c8e93c8a6b38d6b', '45932965c08e1080f1d53cf09352bec0a24cb40f', '4a12e66757a5d12080744c7289342db1a0f67df7']",,['src/main/java/com/google/devtools/build/lib/skyframe'],108.0,7.0,115.0,5.0,2.0,12.0,19.0,1.0,16.0,0.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,bazel
6966,2016-04-20 16:52:10,shahms,"After https://github.com/bazelbuild/bazel/commit/857cda2c45a5cc68c3fa398311c48c571a64915d all external repository rules warn about mismatched local/remote workspace names, even the `new_*` variety, for which there is no explicit external workspace name.

Either the warning should take the new `__main__` name into account or (arguably better) generate an initial `WORKSPACE` file with `workspace(name=""{local_repository_name}"")` instead.
",2016-05-20 14:57:56,"[{'nameRev': '382b5881fc0f3e0ec162e78fb31569e8d36c2a8d tags/0.2.3~252', 'commitMessage': 'Add a workspace name to Skylark repositories\n\nThis prevents an ugly error when the main repository name is set.\n\nFixes #1166.\n\n--\nMOS_MIGRATED_REVID=120352395\n', 'commitParents': ['b1945fe6ecc62dc245cd77ec5e2d343db2ddd893'], 'spoonStatsSkippedReason': '', 'commitHash': '382b5881fc0f3e0ec162e78fb31569e8d36c2a8d', 'authoredDateTime': '2016-04-20 17:43:45', 'commitGHEventType': 'closed', 'commitGitStats': [{'insertions': 4, 'deletions': 0, 'lines': 4, 'filePath': 'src/main/java/com/google/devtools/build/lib/bazel/repository/skylark/SkylarkRepositoryFunction.java'}, {'insertions': 4, 'deletions': 0, 'lines': 4, 'filePath': 'src/test/shell/bazel/skylark_repository_test.sh'}, {'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'src/main/java/com/google/devtools/build/lib/rules/repository/RepositoryLoaderFunction.java'}], 'commitDateTime': '2016-04-21 10:57:47', 'commitUser': 'bazel-io', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.skylark.SkylarkRepositoryFunction.fetch(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.analysis.BlazeDirectories,com.google.devtools.build.skyframe.SkyFunction.Environment)'}], 'spoonFilePath': 'SkylarkRepositoryFunction.java'}, {'spoonMethods': [{'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.rules.repository.RepositoryLoaderFunction.compute(com.google.devtools.build.skyframe.SkyKey,com.google.devtools.build.lib.rules.repository.Environment)'}], 'spoonFilePath': 'RepositoryLoaderFunction.java'}]}, {'nameRev': 'a7fea8a1467a89adde75e67bc99bf0e040f71fe9 tags/0.2.3~94', 'commitMessage': ""Set workspace name for http_file, http_jar, and maven_jar\n\nFixes #1166.\n\nWhile I was here, I also:\n\n* Renamed the implementations of Decompressor to show that they are\nDecompressors, not SkyFunctions (they used to be, it's confusing to have them\nstill have the -Function suffix).\n* Added a unit test and moved the testing target to the rule/repository\nsubdirectory, since it was a good chance to break off a tiny chunk of the\nmonolithic BUILD file in lib/.\n\n--\nMOS_MIGRATED_REVID=121306165\n"", 'commitParents': ['81a1605ac079e0570ba5747346360dafbb3907ea'], 'spoonStatsSkippedReason': '', 'commitHash': 'a7fea8a1467a89adde75e67bc99bf0e040f71fe9', 'authoredDateTime': '2016-05-02 20:48:47', 'commitGHEventType': 'closed', 'commitGitStats': [{'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'src/main/java/com/google/devtools/build/lib/bazel/repository/HttpFileFunction.java'}, {'insertions': 2, 'deletions': 9, 'lines': 11, 'filePath': 'src/main/java/com/google/devtools/build/lib/bazel/repository/DecompressorValue.java'}, {'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'src/main/java/com/google/devtools/build/lib/bazel/repository/skylark/SkylarkRepositoryFunction.java'}, {'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'src/main/java/com/google/devtools/build/lib/bazel/repository/MavenJarFunction.java'}, {'insertions': 6, 'deletions': 7, 'lines': 13, 'filePath': 'src/main/java/com/google/devtools/build/lib/bazel/repository/{JarFunction.java => JarDecompressor.java}'}, {'insertions': 29, 'deletions': 0, 'lines': 29, 'filePath': 'src/test/java/com/google/devtools/build/lib/rules/repository/BUILD'}, {'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'src/main/java/com/google/devtools/build/lib/bazel/repository/NewHttpArchiveFunction.java'}, {'insertions': 4, 'deletions': 30, 'lines': 34, 'filePath': 'src/test/java/com/google/devtools/build/lib/BUILD'}, {'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'src/main/java/com/google/devtools/build/lib/bazel/repository/HttpJarFunction.java'}, {'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'src/main/java/com/google/devtools/build/lib/rules/repository/NewLocalRepositoryFunction.java'}, {'insertions': 1, 'deletions': 2, 'lines': 3, 'filePath': 'src/test/java/com/google/devtools/build/lib/rules/repository/RepositoryFunctionTest.java'}, {'insertions': 3, 'deletions': 3, 'lines': 6, 'filePath': 'src/main/java/com/google/devtools/build/lib/bazel/repository/{FileFunction.java => FileDecompressor.java}'}, {'insertions': 61, 'deletions': 0, 'lines': 61, 'filePath': 'src/test/java/com/google/devtools/build/lib/rules/repository/JarDecompressorTest.java'}, {'insertions': 4, 'deletions': 3, 'lines': 7, 'filePath': 'src/main/java/com/google/devtools/build/lib/rules/repository/RepositoryFunction.java'}, {'insertions': 1, 'deletions': 1, 'lines': 2, 'filePath': 'src/main/java/com/google/devtools/build/lib/bazel/repository/NewGitRepositoryFunction.java'}], 'commitDateTime': '2016-05-03 08:38:12', 'commitUser': 'bazel-io', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.HttpJarFunction.getDescriptor(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.vfs.Path)'}], 'spoonFilePath': 'HttpJarFunction.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 7, 'MOV': 3, 'INS': 1, 'DEL': 3, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.DecompressorValue.equals(java.lang.Object)'}], 'spoonFilePath': 'DecompressorValue.java'}, {'spoonMethods': [{'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.HttpFileFunction.getDescriptor(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.vfs.Path)'}], 'spoonFilePath': 'HttpFileFunction.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 3, 'MOV': 1, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.skylark.SkylarkRepositoryFunction.fetch(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.analysis.BlazeDirectories,com.google.devtools.build.skyframe.SkyFunction.Environment)'}], 'spoonFilePath': 'SkylarkRepositoryFunction.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'MOV': 0, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.rules.repository.JarDecompressorTest'}], 'spoonFilePath': 'JarDecompressorTest.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 6, 'MOV': 1, 'INS': 3, 'DEL': 2, 'spoonMethodName': 'com.google.devtools.build.lib.rules.repository.RepositoryFunctionTest.testGenerateWorkspaceFile()'}], 'spoonFilePath': 'RepositoryFunctionTest.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 3, 'MOV': 1, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.rules.repository.NewLocalRepositoryFunction.fetch(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.analysis.BlazeDirectories,com.google.devtools.build.skyframe.SkyFunction.Environment)'}], 'spoonFilePath': 'NewLocalRepositoryFunction.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 3, 'MOV': 1, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.NewHttpArchiveFunction.fetch(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.analysis.BlazeDirectories,com.google.devtools.build.skyframe.SkyFunction.Environment)'}], 'spoonFilePath': 'NewHttpArchiveFunction.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 3, 'MOV': 1, 'INS': 1, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.rules.repository.RepositoryFunction.prepareLocalRepositorySymlinkTree(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path)'}, {'UPD': 5, 'TOT': 6, 'MOV': 1, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.rules.repository.RepositoryFunction.createWorkspaceFile(com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.packages.Rule)'}, {'UPD': 0, 'TOT': 3, 'MOV': 0, 'INS': 3, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.rules.repository.RepositoryFunction.createWorkspaceFile(com.google.devtools.build.lib.vfs.Path,java.lang.String,java.lang.String)'}], 'spoonFilePath': 'RepositoryFunction.java'}, {'spoonMethods': [{'UPD': 1, 'TOT': 1, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.MavenJarFunction.createOutputTree(com.google.devtools.build.lib.bazel.repository.MavenJarFunction$MavenDownloader)'}], 'spoonFilePath': 'MavenJarFunction.java'}, {'spoonMethods': [{'UPD': 4, 'TOT': 9, 'MOV': 4, 'INS': 0, 'DEL': 1, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.JarFunction.decompress(com.google.devtools.build.lib.bazel.repository.DecompressorDescriptor)'}, {'UPD': 2, 'TOT': 2, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.JarFunction'}], 'spoonFilePath': 'JarDecompressor.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 3, 'MOV': 1, 'INS': 2, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.NewGitRepositoryFunction.fetch(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.analysis.BlazeDirectories,com.google.devtools.build.skyframe.SkyFunction.Environment)'}], 'spoonFilePath': 'NewGitRepositoryFunction.java'}, {'spoonMethods': [{'UPD': 3, 'TOT': 3, 'MOV': 0, 'INS': 0, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.bazel.repository.FileFunction'}], 'spoonFilePath': 'FileDecompressor.java'}]}, {'nameRev': 'd5512bf8cfbf7a13bcedec691f5cc5d5b6d0a7c5 tags/0.3.0~152', 'commitMessage': 'Invalidate external repositories when their names change\n\nWithout this, old repositories are still cached across the change to\ngive a name in the WORKSPACE file, which results in annoying warnings.\nThis should have been included in\na7fea8a1467a89adde75e67bc99bf0e040f71fe9.\n\nFixes #1166.\n\n--\nChange-Id: I831b842dc07b4ca7925f003b68f4838d083b1166\nReviewed-on: https://bazel-review.googlesource.com/c/3660/\nMOS_MIGRATED_REVID=122829553\n', 'commitParents': ['cc048cd480cab7e2d080a79264bc72afdeed3f39'], 'spoonStatsSkippedReason': '', 'commitHash': 'd5512bf8cfbf7a13bcedec691f5cc5d5b6d0a7c5', 'authoredDateTime': '2016-05-20 14:28:44', 'commitGHEventType': 'closed', 'commitGitStats': [{'insertions': 6, 'deletions': 0, 'lines': 6, 'filePath': 'src/main/java/com/google/devtools/build/lib/rules/repository/RepositoryDelegatorFunction.java'}], 'commitDateTime': '2016-05-20 14:42:44', 'commitUser': 'bazel-io', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 1, 'TOT': 3, 'MOV': 1, 'INS': 1, 'DEL': 0, 'spoonMethodName': 'com.google.devtools.build.lib.rules.repository.RepositoryDelegatorFunction.computeRuleKey(com.google.devtools.build.lib.packages.Rule,byte[])'}], 'spoonFilePath': 'RepositoryDelegatorFunction.java'}]}]",https://github.com/bazelbuild/bazel/issues/1166,29.00027777777778,"['P2', 'type: bug']",external repositories without an embedded name shouldn't warn,3.0,"['com.google.devtools.build.lib.rules.repository.RepositoryFunction.prepareLocalRepositorySymlinkTree(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path)', 'com.google.devtools.build.lib.bazel.repository.HttpFileFunction.getDescriptor(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.vfs.Path)', 'com.google.devtools.build.lib.rules.repository.RepositoryFunction.createWorkspaceFile(com.google.devtools.build.lib.vfs.Path,java.lang.String,java.lang.String)', 'com.google.devtools.build.lib.bazel.repository.FileFunction', 'com.google.devtools.build.lib.rules.repository.RepositoryFunction.createWorkspaceFile(com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.packages.Rule)', 'com.google.devtools.build.lib.bazel.repository.HttpJarFunction.getDescriptor(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.vfs.Path)', 'com.google.devtools.build.lib.rules.repository.NewLocalRepositoryFunction.fetch(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.analysis.BlazeDirectories,com.google.devtools.build.skyframe.SkyFunction.Environment)', 'com.google.devtools.build.lib.bazel.repository.NewGitRepositoryFunction.fetch(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.analysis.BlazeDirectories,com.google.devtools.build.skyframe.SkyFunction.Environment)', 'com.google.devtools.build.lib.bazel.repository.MavenJarFunction.createOutputTree(com.google.devtools.build.lib.bazel.repository.MavenJarFunction$MavenDownloader)', 'com.google.devtools.build.lib.bazel.repository.NewHttpArchiveFunction.fetch(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.analysis.BlazeDirectories,com.google.devtools.build.skyframe.SkyFunction.Environment)', 'com.google.devtools.build.lib.bazel.repository.JarFunction.decompress(com.google.devtools.build.lib.bazel.repository.DecompressorDescriptor)', 'com.google.devtools.build.lib.bazel.repository.JarFunction', 'com.google.devtools.build.lib.bazel.repository.skylark.SkylarkRepositoryFunction.fetch(com.google.devtools.build.lib.packages.Rule,com.google.devtools.build.lib.vfs.Path,com.google.devtools.build.lib.analysis.BlazeDirectories,com.google.devtools.build.skyframe.SkyFunction.Environment)', 'com.google.devtools.build.lib.rules.repository.RepositoryLoaderFunction.compute(com.google.devtools.build.skyframe.SkyKey,com.google.devtools.build.lib.rules.repository.Environment)', 'com.google.devtools.build.lib.bazel.repository.DecompressorValue.equals(java.lang.Object)', 'com.google.devtools.build.lib.rules.repository.RepositoryDelegatorFunction.computeRuleKey(com.google.devtools.build.lib.packages.Rule,byte[])']","['d5512bf8cfbf7a13bcedec691f5cc5d5b6d0a7c5', '382b5881fc0f3e0ec162e78fb31569e8d36c2a8d', 'a7fea8a1467a89adde75e67bc99bf0e040f71fe9']",,"['src/main/java/com/google/devtools/build/lib/rules/repository', 'src/main/java/com/google/devtools/build/lib/bazel/repository']",33.0,30.0,63.0,13.0,19.0,16.0,53.0,14.0,15.0,5.0,13.0,0.0,0.0,0.0,0.0,0.0,0.0,bazel
8852,2016-03-03 15:50:26,simonthum,"Not quite #1708 

```
java.lang.NullPointerException
    at com.redhat.ceylon.eclipse.code.correct.ChangeDeclarationProposal.addChangeDeclarationProposal(ChangeDeclarationProposal.java:32)
    at com.redhat.ceylon.eclipse.code.correct.CeylonCorrectionProcessor.addProposals(CeylonCorrectionProcessor.java:738)
    at com.redhat.ceylon.eclipse.code.correct.CeylonCorrectionProcessor.collectCorrections(CeylonCorrectionProcessor.java:517)
    at com.redhat.ceylon.eclipse.code.hover.AnnotationInfo.collectProposals(AnnotationInfo.java:143)
    at com.redhat.ceylon.eclipse.code.hover.AnnotationInfo.getCompletionProposals(AnnotationInfo.java:96)
    at com.redhat.ceylon.eclipse.code.hover.AnnotationInformationControl$2.run(AnnotationInformationControl.java:256)
    at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
```
",2016-03-20 21:46:23,"[{'commitGHEventType': 'referenced', 'authoredDateTime': '2016-03-20 22:41:05', 'commitDateTime': '2016-03-20 22:41:05', 'commitHash': '7ae308ee8eefa3bfa189cd1773b6a2ff8f616f59', 'nameRev': '7ae308ee8eefa3bfa189cd1773b6a2ff8f616f59 tags/_old/1.3.0~342', 'commitMessage': 'fix for ceylon/ceylon-ide-eclipse/issues/1711', 'spoonStatsSkippedReason': '', 'commitParents': ['82d6b5d159a87843bb4f60a2dc708f10f6541dae'], 'commitGitStats': [{'filePath': 'plugins/com.redhat.ceylon.eclipse.ui/old-sources/com/redhat/ceylon/eclipse/code/correct/ChangeDeclarationProposal.java', 'lines': 6, 'deletions': 2, 'insertions': 4}], 'commitSpoonAstDiffStats': [{'spoonMethods': [{'TOT': 4, 'MOV': 1, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.correct.ChangeDeclarationProposal.addChangeDeclarationProposal(com.redhat.ceylon.eclipse.code.correct.ProblemLocation,org.eclipse.core.resources.IFile,java.util.Collection,com.redhat.ceylon.compiler.typechecker.tree.Node)', 'INS': 2, 'DEL': 1, 'UPD': 0}], 'spoonFilePath': 'ChangeDeclarationProposal.java'}], 'commitUser': 'gavinking'}]",https://github.com/eclipse/ceylon-ide-eclipse/issues/1711,17.00027777777778,"['bug on last release', 'high priority']",NPE in correction proposals,1.0,"['com.redhat.ceylon.eclipse.code.correct.ChangeDeclarationProposal.addChangeDeclarationProposal(com.redhat.ceylon.eclipse.code.correct.ProblemLocation,org.eclipse.core.resources.IFile,java.util.Collection,com.redhat.ceylon.compiler.typechecker.tree.Node)']",['7ae308ee8eefa3bfa189cd1773b6a2ff8f616f59'],,['plugins/com.redhat.ceylon.eclipse.ui/old-sources/com/redhat/ceylon/eclipse/code/correct'],4.0,2.0,6.0,1.0,0.0,1.0,4.0,1.0,2.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,ceylon-ide-eclipse
9043,2015-10-06 11:19:08,gavinking,"This should take about 5mins to fix.
",2015-10-06 15:20:30,"[{'commitGHEventType': 'closed', 'authoredDateTime': '2015-10-06 17:20:25', 'commitDateTime': '2015-10-06 17:20:25', 'commitHash': 'cf5a24135ffd08d5075cf6c06bec5c00d68ade71', 'nameRev': 'cf5a24135ffd08d5075cf6c06bec5c00d68ade71 tags/_old/1.2.0~150', 'commitMessage': 'fix #1522', 'spoonStatsSkippedReason': '', 'commitParents': ['910f21d3afc001483b69f925e5fcac7cc9b68d8f'], 'commitGitStats': [{'filePath': 'plugins/com.redhat.ceylon.eclipse.ui/src/com/redhat/ceylon/eclipse/util/FindReferencesVisitor.java', 'lines': 47, 'deletions': 15, 'insertions': 32}], 'commitSpoonAstDiffStats': [{'spoonMethods': [{'TOT': 6, 'MOV': 2, 'spoonMethodName': 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$ElseClause)', 'INS': 2, 'DEL': 1, 'UPD': 1}, {'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$Variable)', 'INS': 1, 'DEL': 0, 'UPD': 0}, {'TOT': 6, 'MOV': 2, 'spoonMethodName': 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$CaseClause)', 'INS': 2, 'DEL': 1, 'UPD': 1}, {'TOT': 6, 'MOV': 2, 'spoonMethodName': 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$WhileClause)', 'INS': 2, 'DEL': 1, 'UPD': 1}, {'TOT': 6, 'MOV': 2, 'spoonMethodName': 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$IfClause)', 'INS': 2, 'DEL': 1, 'UPD': 1}, {'TOT': 6, 'MOV': 2, 'spoonMethodName': 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$Body)', 'INS': 2, 'DEL': 1, 'UPD': 1}], 'spoonFilePath': 'FindReferencesVisitor.java'}], 'commitUser': 'gavinking'}]",https://github.com/eclipse/ceylon-ide-eclipse/issues/1522,0.0002777777777777778,['bug on master'],rename doesn't work with new GuardedVariables,1.0,"['com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$ElseClause)', 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$Variable)', 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$CaseClause)', 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$WhileClause)', 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$IfClause)', 'com.redhat.ceylon.eclipse.util.FindReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$Body)']",['cf5a24135ffd08d5075cf6c06bec5c00d68ade71'],,['plugins/com.redhat.ceylon.eclipse.ui/src/com/redhat/ceylon/eclipse/util'],32.0,15.0,47.0,1.0,5.0,6.0,31.0,10.0,11.0,5.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,ceylon-ide-eclipse
9306,2014-07-12 13:59:01,lucaswerkmeister,"``` ceylon
interface Sup {
    shared formal Anything f;
}
class Sub() satisfies Sup {
    f => 0;
}
```

If you Rename (Alt+Shift+R, at least on my system) `f` to, say, `g`, you get

``` ceylon
interface Sup {
    shared formal Anything g;
}
class Sub() satisfies Sup {
    gg => 0;
}
```

`Sub.f` got changed to `gg` rather than `g`.
",2015-09-10 19:13:32,"[{'commitGHEventType': 'referenced', 'authoredDateTime': '2015-09-10 20:03:56', 'commitDateTime': '2015-09-10 21:11:17', 'commitHash': '03870232b358120569ccd0ee334bf8b72da711c4', 'nameRev': '03870232b358120569ccd0ee334bf8b72da711c4 tags/_old/1.2.0~391', 'commitMessage': 'refactoring and attempted solution for #1020\nenable the editor hiding code', 'spoonStatsSkippedReason': '', 'commitParents': ['0e599b2d3436c7155f1fa69bc6c6eebf973839d6'], 'commitGitStats': [{'filePath': 'plugins/com.redhat.ceylon.eclipse.ui/src/com/redhat/ceylon/eclipse/code/refactor/RenameLinkedMode.java', 'lines': 99, 'deletions': 45, 'insertions': 54}, {'filePath': 'plugins/com.redhat.ceylon.eclipse.ui/src/com/redhat/ceylon/eclipse/code/refactor/RenameRefactoring.java', 'lines': 58, 'deletions': 6, 'insertions': 52}], 'commitSpoonAstDiffStats': [{'spoonMethods': [{'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameLinkedMode.hideEditorActivity()', 'INS': 1, 'DEL': 0, 'UPD': 0}, {'TOT': 2, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameLinkedMode.done()', 'INS': 2, 'DEL': 0, 'UPD': 0}, {'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameLinkedMode.addLinkedPositions(org.eclipse.jface.text.IDocument,com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit,int,org.eclipse.jface.text.link.LinkedPositionGroup)', 'INS': 0, 'DEL': 0, 'UPD': 1}, {'TOT': 2, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameLinkedMode', 'INS': 2, 'DEL': 0, 'UPD': 0}, {'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameLinkedMode.unhideEditorActivity()', 'INS': 1, 'DEL': 0, 'UPD': 0}], 'spoonFilePath': 'RenameLinkedMode.java'}, {'spoonMethods': [{'TOT': 2, 'MOV': 1, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.renameNode(org.eclipse.ltk.core.refactoring.TextChange,com.redhat.ceylon.compiler.typechecker.tree.Node,com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit)', 'INS': 1, 'DEL': 0, 'UPD': 0}, {'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.FindDocLinkVisitor.getLinks()', 'INS': 0, 'DEL': 0, 'UPD': 1}, {'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getIdentifier(com.redhat.ceylon.compiler.typechecker.tree.Node)', 'INS': 1, 'DEL': 0, 'UPD': 0}, {'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.FindRenamedReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$SpecifierStatement)', 'INS': 1, 'DEL': 0, 'UPD': 0}, {'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.FindDocLinkVisitor', 'INS': 0, 'DEL': 0, 'UPD': 1}, {'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.FindDocLinkVisitor.visitIt(org.eclipse.jface.text.Region,com.redhat.ceylon.model.typechecker.model.Declaration)', 'INS': 0, 'DEL': 0, 'UPD': 1}], 'spoonFilePath': 'RenameRefactoring.java'}], 'commitUser': 'gavinking'}, {'commitGHEventType': 'closed', 'authoredDateTime': '', 'commitDateTime': '', 'commitHash': 'e105b362668ec2cd650637aaef8357cbb76dc4d8', 'nameRev': '', 'commitMessage': '', 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'commitUser': 'gavinking'}, {'commitGHEventType': 'referenced', 'authoredDateTime': '2015-09-10 19:05:33', 'commitDateTime': '2015-09-10 19:05:33', 'commitHash': 'b8feaba1df517327f552e4af6b167f63c7bf7dde', 'nameRev': 'b8feaba1df517327f552e4af6b167f63c7bf7dde tags/_old/1.2.0~394', 'commitMessage': 'Revert ""fix #1020""\n\nThis reverts commit e105b362668ec2cd650637aaef8357cbb76dc4d8.\n', 'spoonStatsSkippedReason': '', 'commitParents': ['940ef0e97a67ce4cae2d28e5df8dfa8c8c39ed99'], 'commitGitStats': [{'filePath': 'plugins/com.redhat.ceylon.eclipse.ui/src/com/redhat/ceylon/eclipse/code/refactor/RenameRefactoring.java', 'lines': 7, 'deletions': 4, 'insertions': 3}], 'commitSpoonAstDiffStats': [{'spoonMethods': [{'TOT': 4, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getStringsToReplace(com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit).5.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$DocLink)', 'INS': 0, 'DEL': 0, 'UPD': 4}, {'TOT': 2, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getIdentifiersToRename(com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit).4.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$TypedDeclaration)', 'INS': 0, 'DEL': 0, 'UPD': 2}, {'TOT': 3, 'MOV': 1, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getNodesToRename(com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit)', 'INS': 1, 'DEL': 1, 'UPD': 0}, {'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getStringsToReplace(com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit).5', 'INS': 0, 'DEL': 0, 'UPD': 1}, {'TOT': 1, 'MOV': 0, 'spoonMethodName': 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getIdentifiersToRename(com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit).4', 'INS': 0, 'DEL': 0, 'UPD': 1}], 'spoonFilePath': 'RenameRefactoring.java'}], 'commitUser': 'gavinking'}]",https://github.com/eclipse/ceylon-ide-eclipse/issues/1020,425.0002777777778,"['bug on master', 'high priority', 'refactoring/wizards']",Rename produces double name in shortcut refinement syntax,2.0,"['com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.renameNode(org.eclipse.ltk.core.refactoring.TextChange,com.redhat.ceylon.compiler.typechecker.tree.Node,com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit)', 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.FindRenamedReferencesVisitor.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$SpecifierStatement)', 'com.redhat.ceylon.eclipse.code.refactor.RenameLinkedMode.hideEditorActivity()', 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getNodesToRename(com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit)', 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.FindDocLinkVisitor.getLinks()', 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.FindDocLinkVisitor.visitIt(org.eclipse.jface.text.Region,com.redhat.ceylon.model.typechecker.model.Declaration)', 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getStringsToReplace(com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit).5.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$DocLink)', 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getIdentifiersToRename(com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit).4.visit(com.redhat.ceylon.compiler.typechecker.tree.Tree$TypedDeclaration)', 'com.redhat.ceylon.eclipse.code.refactor.RenameLinkedMode.addLinkedPositions(org.eclipse.jface.text.IDocument,com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit,int,org.eclipse.jface.text.link.LinkedPositionGroup)', 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getIdentifier(com.redhat.ceylon.compiler.typechecker.tree.Node)', 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getStringsToReplace(com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit).5', 'com.redhat.ceylon.eclipse.code.refactor.RenameLinkedMode.done()', 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.getIdentifiersToRename(com.redhat.ceylon.compiler.typechecker.tree.Tree$CompilationUnit).4', 'com.redhat.ceylon.eclipse.code.refactor.RenameLinkedMode', 'com.redhat.ceylon.eclipse.code.refactor.RenameRefactoring.FindDocLinkVisitor', 'com.redhat.ceylon.eclipse.code.refactor.RenameLinkedMode.unhideEditorActivity()']","['03870232b358120569ccd0ee334bf8b72da711c4', 'b8feaba1df517327f552e4af6b167f63c7bf7dde']",,['plugins/com.redhat.ceylon.eclipse.ui/src/com/redhat/ceylon/eclipse/code/refactor'],109.0,55.0,164.0,2.0,12.0,16.0,25.0,2.0,10.0,1.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,ceylon-ide-eclipse
12363,2016-02-23 14:02:45,sbordet,"When a write is pending, and the callback is failed, we have this stack trace:

```
""qtp1321203216-579"" #579 prio=5 os_prio=0 tid=0x00007ff48c012800 nid=0x635 waiting on condition [0x00007ff2d423e000]
   java.lang.Thread.State: WAITING (parking)
    at sun.misc.Unsafe.park(Native Method)
    - parking to wait for  <0x00000006fd24d518> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
    at org.eclipse.jetty.util.SharedBlockingCallback$Blocker.block(SharedBlockingCallback.java:210)
    at org.eclipse.jetty.server.HttpOutput.write(HttpOutput.java:164)
    at org.eclipse.jetty.server.HttpOutput.close(HttpOutput.java:211)
    at org.eclipse.jetty.server.Response.closeOutput(Response.java:987)
    at org.eclipse.jetty.server.HttpOutput.closed(HttpOutput.java:256)
    at org.eclipse.jetty.server.HttpChannel$CommitCallback.failed(HttpChannel.java:791)
    at org.eclipse.jetty.io.AbstractConnection.failedCallback(AbstractConnection.java:91)
    at org.eclipse.jetty.server.HttpConnection.access$1200(HttpConnection.java:50)
    at org.eclipse.jetty.server.HttpConnection$SendCallback.onCompleteFailure(HttpConnection.java:799)
    at org.eclipse.jetty.util.IteratingCallback.failed(IteratingCallback.java:401)
    at org.eclipse.jetty.io.WriteFlusher$PendingState.fail(WriteFlusher.java:260)
    at org.eclipse.jetty.io.WriteFlusher.completeWrite(WriteFlusher.java:401)
    at org.eclipse.jetty.io.SelectChannelEndPoint$3.run(SelectChannelEndPoint.java:89)
    at org.eclipse.jetty.io.SelectChannelEndPoint.onSelected(SelectChannelEndPoint.java:177)
    at org.eclipse.jetty.io.ManagedSelector$SelectorProducer.processSelected(ManagedSelector.java:272)
    at org.eclipse.jetty.io.ManagedSelector$SelectorProducer.produce(ManagedSelector.java:170)
    at org.eclipse.jetty.util.thread.strategy.ProduceExecuteConsume.execute(ProduceExecuteConsume.java:50)
    at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:143)
```

The stack trace shows that `WriteFlusher$PendingState.fail()` is called, so there was a write which got congested and when the callback fails we should not try to write more via `HttpOutput.closed()` because we know that the previous write was already congested.

We should just hard close the connection.
",2018-05-10 22:30:08,"[{'commitMessage': 'Issue #355 Improve close behaviour\n\nInverted the logic of the handling of exceptions thrown in CommitCallback.\nNow only if a BadMessageException is throw do we attempt to write a 500 response.\nAll other exceptions just abort the connection\n', 'commitParents': ['c3a54e9d0bbb5c9d3014abf9d43f348698ed5049'], 'commitHash': '1eeecdaee515daf4e4fdf41e80d2b61678ba537d', 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpChannel.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.jetty.server.HttpChannel.CommitCallback.failed(java.lang.Throwable)', 'DEL': 3, 'INS': 3, 'UPD': 2, 'MOV': 5, 'TOT': 13}, {'spoonMethodName': 'org.eclipse.jetty.server.HttpChannel.CommitCallback.failed(java.lang.Throwable).1.failed(java.lang.Throwable)', 'DEL': 1, 'INS': 1, 'UPD': 1, 'MOV': 1, 'TOT': 4}]}, {'spoonFilePath': 'HttpGenerator.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.jetty.http.HttpGenerator.generateResponse(org.eclipse.jetty.http.MetaData$Response,boolean,java.nio.ByteBuffer,java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)', 'DEL': 0, 'INS': 0, 'UPD': 2, 'MOV': 0, 'TOT': 2}, {'spoonMethodName': 'org.eclipse.jetty.http.HttpGenerator.generateHeaders(org.eclipse.jetty.http.MetaData,java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)', 'DEL': 0, 'INS': 0, 'UPD': 3, 'MOV': 0, 'TOT': 3}, {'spoonMethodName': 'org.eclipse.jetty.http.HttpGenerator.generateRequest(org.eclipse.jetty.http.MetaData$Request,java.nio.ByteBuffer,java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)', 'DEL': 0, 'INS': 0, 'UPD': 2, 'MOV': 0, 'TOT': 2}]}, {'spoonFilePath': 'BadMessageException.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.jetty.http.BadMessageException', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}], 'nameRev': '1eeecdaee515daf4e4fdf41e80d2b61678ba537d tags/jetty-9.3.8.RC0~2', 'commitUser': 'gregw', 'authoredDateTime': '2016-02-24 13:36:06', 'commitGHEventType': 'referenced', 'commitGitStats': [{'lines': 14, 'filePath': 'jetty-http/src/main/java/org/eclipse/jetty/http/HttpGenerator.java', 'insertions': 7, 'deletions': 7}, {'lines': 14, 'filePath': 'jetty-server/src/main/java/org/eclipse/jetty/server/HttpChannel.java', 'insertions': 7, 'deletions': 7}, {'lines': 6, 'filePath': 'jetty-http/src/main/java/org/eclipse/jetty/http/BadMessageException.java', 'insertions': 6, 'deletions': 0}], 'commitDateTime': '2016-02-24 13:36:06', 'spoonStatsSkippedReason': ''}]",https://github.com/eclipse/jetty.project/issues/355,807.0002777777778,['Bug'],Improve close behavior for failed pending writes,1.0,"['org.eclipse.jetty.server.HttpChannel.CommitCallback.failed(java.lang.Throwable)', 'org.eclipse.jetty.http.HttpGenerator.generateHeaders(org.eclipse.jetty.http.MetaData,java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)', 'org.eclipse.jetty.http.HttpGenerator.generateResponse(org.eclipse.jetty.http.MetaData$Response,boolean,java.nio.ByteBuffer,java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)', 'org.eclipse.jetty.server.HttpChannel.CommitCallback.failed(java.lang.Throwable).1.failed(java.lang.Throwable)', 'org.eclipse.jetty.http.BadMessageException', 'org.eclipse.jetty.http.HttpGenerator.generateRequest(org.eclipse.jetty.http.MetaData$Request,java.nio.ByteBuffer,java.nio.ByteBuffer,java.nio.ByteBuffer,boolean)']",['1eeecdaee515daf4e4fdf41e80d2b61678ba537d'],,"['jetty-server/src/main/java/org/eclipse/jetty/server', 'jetty-http/src/main/java/org/eclipse/jetty/http']",20.0,14.0,34.0,3.0,10.0,6.0,25.0,6.0,5.0,4.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,jetty.project
16336,2020-03-01 16:31:00,rnveach,"Child of https://github.com/checkstyle/checkstyle/issues/5777

This issue specifically focuses on OverloadMethodsDeclarationOrder.",2020-04-15 01:15:04,"[{'commitMessage': 'Issue #7756: Update AbstractChecks to log DetailAST - OverloadMethodsDeclarationOrder\n', 'commitParents': ['085dd5f174caf0190c6ef07a9bfddbe0746426e1'], 'commitHash': 'a231f5202c6769f9c664eb53a1bb370ec8788c96', 'commitSpoonAstDiffStats': [{'spoonFilePath': 'OverloadMethodsDeclarationOrderCheckTest.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.coding.OverloadMethodsDeclarationOrderCheckTest.testDefault()', 'DEL': 0, 'INS': 0, 'UPD': 4, 'MOV': 0, 'TOT': 4}]}, {'spoonFilePath': 'OverloadMethodsDeclarationOrderTest.java', 'spoonMethods': [{'spoonMethodName': 'com.google.checkstyle.test.chapter3filestructure.rule3421overloadsplit.OverloadMethodsDeclarationOrderTest.testOverloadMethods()', 'DEL': 0, 'INS': 0, 'UPD': 4, 'MOV': 0, 'TOT': 4}]}, {'spoonFilePath': 'XpathRegressionTest.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.internal.XpathRegressionTest', 'DEL': 1, 'INS': 0, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'OverloadMethodsDeclarationOrderCheck.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.coding.OverloadMethodsDeclarationOrderCheck.checkOverloadMethodsGrouping(com.puppycrawl.tools.checkstyle.api.DetailAST)', 'DEL': 1, 'INS': 0, 'UPD': 0, 'MOV': 1, 'TOT': 2}]}, {'spoonFilePath': 'SuppressionXpathRegressionOverloadMethodsDeclarationOrder1.java', 'spoonMethods': [{'spoonMethodName': 'org.checkstyle.suppressionxpathfilter.overloadmethodsdeclarationorder.SuppressionXpathRegressionOverloadMethodsDeclarationOrder1', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'SuppressionXpathFilter.java', 'spoonMethods': []}, {'spoonFilePath': 'SuppressionXpathRegressionOverloadMethodsDeclarationOrder2.java', 'spoonMethods': [{'spoonMethodName': 'org.checkstyle.suppressionxpathfilter.overloadmethodsdeclarationorder.SuppressionXpathRegressionOverloadMethodsDeclarationOrder2', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'XpathRegressionOverloadMethodsDeclarationOrderTest.java', 'spoonMethods': [{'spoonMethodName': 'org.checkstyle.suppressionxpathfilter.XpathRegressionOverloadMethodsDeclarationOrderTest', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}], 'nameRev': 'a231f5202c6769f9c664eb53a1bb370ec8788c96 tags/checkstyle-8.32~48', 'commitUser': 'rnveach', 'authoredDateTime': '2020-04-13 02:21:16', 'commitGHEventType': 'referenced', 'commitGitStats': [{'lines': 2, 'filePath': 'src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OverloadMethodsDeclarationOrderCheck.java', 'insertions': 1, 'deletions': 1}, {'lines': 34, 'filePath': 'src/it/resources/org/checkstyle/suppressionxpathfilter/overloadmethodsdeclarationorder/SuppressionXpathRegressionOverloadMethodsDeclarationOrder2.java', 'insertions': 34, 'deletions': 0}, {'lines': 8, 'filePath': 'src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/OverloadMethodsDeclarationOrderCheckTest.java', 'insertions': 4, 'deletions': 4}, {'lines': 8, 'filePath': 'src/it/java/com/google/checkstyle/test/chapter3filestructure/rule3421overloadsplit/OverloadMethodsDeclarationOrderTest.java', 'insertions': 4, 'deletions': 4}, {'lines': 103, 'filePath': 'src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionOverloadMethodsDeclarationOrderTest.java', 'insertions': 103, 'deletions': 0}, {'lines': 18, 'filePath': 'src/it/resources/org/checkstyle/suppressionxpathfilter/overloadmethodsdeclarationorder/SuppressionXpathRegressionOverloadMethodsDeclarationOrder1.java', 'insertions': 18, 'deletions': 0}, {'lines': 1, 'filePath': 'src/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java', 'insertions': 0, 'deletions': 1}, {'lines': 1, 'filePath': 'src/xdocs/config_filters.xml', 'insertions': 0, 'deletions': 1}, {'lines': 3, 'filePath': 'src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionXpathFilter.java', 'insertions': 0, 'deletions': 3}], 'commitDateTime': '2020-04-14 21:14:42', 'spoonStatsSkippedReason': ''}]",https://github.com/checkstyle/checkstyle/issues/7756,44.000277777777775,"['approved', 'bug', 'gsoc second issue']",Update AbstractChecks to log DetailAST - OverloadMethodsDeclarationOrder,1.0,"['org.checkstyle.suppressionxpathfilter.overloadmethodsdeclarationorder.SuppressionXpathRegressionOverloadMethodsDeclarationOrder1', 'com.puppycrawl.tools.checkstyle.checks.coding.OverloadMethodsDeclarationOrderCheck.checkOverloadMethodsGrouping(com.puppycrawl.tools.checkstyle.api.DetailAST)', 'org.checkstyle.suppressionxpathfilter.overloadmethodsdeclarationorder.SuppressionXpathRegressionOverloadMethodsDeclarationOrder2']",['a231f5202c6769f9c664eb53a1bb370ec8788c96'],,"['src/it/resources/org/checkstyle/suppressionxpathfilter/overloadmethodsdeclarationorder', 'src/main/java/com/puppycrawl/tools/checkstyle/checks/coding', 'src/main/java/com/puppycrawl/tools/checkstyle/filters']",53.0,4.0,57.0,4.0,0.0,3.0,4.0,1.0,2.0,1.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,checkstyle
16525,2017-02-17 19:32:15,rnveach,"Taken from https://github.com/checkstyle/checkstyle/issues/3748#issuecomment-279396341

````
$ cat TestClass.java
public class TestClass {
    void method(int a) {
                switch (a) {}
                switch (a) {case 1:}
                switch (a) {case 1:{}}
                switch (a) {
                    case 1:
                }
                switch (a) {
                    case 1:
                    {}
                }
                switch (a) {
                    case 1:
{
}
                }
    }
}

$ cat TestConfig.xml
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
          ""-//Puppy Crawl//DTD Check Configuration 1.3//EN""
          ""http://www.puppycrawl.com/dtds/configuration_1_3.dtd"">

<module name=""Checker"">
    <property name=""charset"" value=""UTF-8""/>

    <module name=""TreeWalker"">
        <module name=""EmptyBlock"">
            <property name=""tokens"" value=""LITERAL_CASE""/>
        </module>
    </module>
</module>

$ java -jar checkstyle-7.5.1-all.jar -c TestConfig.xml TestClass.java
Starting audit...
Audit done.
````

http://checkstyle.sourceforge.net/config_blocks.html#EmptyBlock
`LITERAL_CASE` is an allowed token, but I can NOT produce a violation for it.

Our tests for the check makes no reference to cases. https://github.com/checkstyle/checkstyle/blob/master/src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java
Even though blocks are mostly considered curlies, it makes sense that we treat `case` and `default` as blocks since the case is grouping code under it.
I assume a `case` that just contains `break` should still be considered empty.

We need to find the issue with the check and expand all our tests to every acceptable token for the check to verify we have no issues with any other tokens.",2017-04-05 15:41:16,"[{'commitMessage': 'Issue #3839: One new method to optimise design and detect empty LITERAL_CASE. Added corresponding UTs. Updated documentation\n', 'commitParents': ['e0bb421ead241b65c5d8b4acafe5f8247aea8576'], 'commitHash': '350801597ccce93d019ab03f5f171d5acc27e3d9', 'commitSpoonAstDiffStats': [{'spoonFilePath': 'EmptyBlockCheck.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck.findLeftCurly(com.puppycrawl.tools.checkstyle.api.DetailAST)', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}, {'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck.visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST)', 'DEL': 1, 'INS': 1, 'UPD': 1, 'MOV': 3, 'TOT': 6}]}, {'spoonFilePath': 'InputEmptyCase.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.blocks.InputEmptyCase', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'EmptyBlockCheckTest.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest.testForbidCaseWithoutStmt()', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}, {'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheckTest.testAllowEmptyCaseWithText()', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}], 'nameRev': '350801597ccce93d019ab03f5f171d5acc27e3d9 tags/checkstyle-7.7~129', 'commitUser': 'rnveach', 'authoredDateTime': '2017-03-06 05:46:02', 'commitGHEventType': 'referenced', 'commitGitStats': [{'lines': 2, 'filePath': 'src/xdocs/config_blocks.xml', 'insertions': 1, 'deletions': 1}, {'lines': 37, 'filePath': 'src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java', 'insertions': 26, 'deletions': 11}, {'lines': 32, 'filePath': 'src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheckTest.java', 'insertions': 32, 'deletions': 0}, {'lines': 2, 'filePath': 'src/xdocs/checks.xml', 'insertions': 1, 'deletions': 1}, {'lines': 36, 'filePath': 'src/test/resources/com/puppycrawl/tools/checkstyle/checks/blocks/InputEmptyCase.java', 'insertions': 36, 'deletions': 0}], 'commitDateTime': '2017-04-05 11:41:01', 'spoonStatsSkippedReason': ''}]",https://github.com/checkstyle/checkstyle/issues/3839,46.000277777777775,"['approved', 'bug', 'medium']",EmptyBlock: can't get violation from case token,1.0,"['com.puppycrawl.tools.checkstyle.checks.blocks.InputEmptyCase', 'com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck.findLeftCurly(com.puppycrawl.tools.checkstyle.api.DetailAST)', 'com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck.visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST)']",['350801597ccce93d019ab03f5f171d5acc27e3d9'],,['src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks'],26.0,11.0,37.0,1.0,1.0,3.0,8.0,3.0,3.0,1.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,checkstyle
16553,2016-10-20 13:09:09,baratali,"While transforming ANTRL4 ParseTree to our Checkstyle DetailNode tree, column number is copied as is. However, if DetailNode object matches an object in first line of Javadoc comment, there is no any offset appended.
https://github.com/checkstyle/checkstyle/blob/master/src/main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java#L290

For example:
test.java

``` java
class A {
    /** This is
        a method */
    void method(){}
}
```

```
$ java -jar checkstyle-7.2-SNAPSHOT-all.jar -J test.java
CLASS_DEF -> CLASS_DEF [1:0]
|--MODIFIERS -> MODIFIERS [1:0]
|--LITERAL_CLASS -> class [1:0]
|--IDENT -> A [1:6]
`--OBJBLOCK -> OBJBLOCK [1:8]
    |--LCURLY -> { [1:8]
    |--METHOD_DEF -> METHOD_DEF [4:4]
    |   |--MODIFIERS -> MODIFIERS [4:4]
    |   |--TYPE -> TYPE [4:4]
    |   |   |--JAVADOC ->  This is\n        a method <EOF> [2:0]
    |   |   |   |--TEXT ->  This is [2:0]
    |   |   |   |   |--WS ->   [2:0]
    |   |   |   |   |--CHAR -> T [2:1]
    |   |   |   |   |--CHAR -> h [2:2]
    |   |   |   |   |--CHAR -> i [2:3]
    |   |   |   |   |--CHAR -> s [2:4]
    |   |   |   |   |--WS ->   [2:5]
    |   |   |   |   |--CHAR -> i [2:6]
    |   |   |   |   `--CHAR -> s [2:7]
    |   |   |   |--NEWLINE -> \n [2:8]
    |   |   |   |--TEXT ->         a method  [3:0]
    |   |   |   |   |--WS ->          [3:0]
    |   |   |   |   |--CHAR -> a [3:8]
    |   |   |   |   |--WS ->   [3:9]
    |   |   |   |   |--CHAR -> m [3:10]
    |   |   |   |   |--CHAR -> e [3:11]
    |   |   |   |   |--CHAR -> t [3:12]
    |   |   |   |   |--CHAR -> h [3:13]
    |   |   |   |   |--CHAR -> o [3:14]
    |   |   |   |   |--CHAR -> d [3:15]
    |   |   |   |   `--WS ->   [3:16]
    |   |   |   `--EOF -> <EOF> [3:17]
    |   |   `--LITERAL_VOID -> void [4:4]
    |   |--IDENT -> method [4:9]
    |   |--LPAREN -> ( [4:15]
    |   |--PARAMETERS -> PARAMETERS [4:16]
    |   |--RPAREN -> ) [4:16]
    |   `--SLIST -> { [4:17]
    |       `--RCURLY -> } [4:18]
    `--RCURLY -> } [5:0]
```

Attention to `JAVADOC ->  This is\n        a method <EOF> [2:0]`. Line number is 2, however column number is 0 despite it is actually on 7th column. So expected column number is 7.
## 
",2017-01-17 16:26:08,"[{'commitMessage': 'Issue #3507: column number in first javadoc line fixed\n', 'commitParents': ['9dab0e74eb8487baf7c1896cc2c77798fd8787fb'], 'commitHash': '2852e45bf6e5d837dc77236f77ec2f52cc768b52', 'commitSpoonAstDiffStats': [{'spoonFilePath': 'CodeSelectorPModelTest.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.gui.CodeSelectorPModelTest.testDetailNodeSelection()', 'DEL': 0, 'INS': 0, 'UPD': 1, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'JavadocDetailNodeParser.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.JavadocDetailNodeParser', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}, {'spoonMethodName': 'com.puppycrawl.tools.checkstyle.JavadocDetailNodeParser.parseJavadocAsDetailNode(com.puppycrawl.tools.checkstyle.api.DetailAST)', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}, {'spoonMethodName': 'com.puppycrawl.tools.checkstyle.JavadocDetailNodeParser.adjustFirstLineToJavadocIndent(com.puppycrawl.tools.checkstyle.api.DetailNode,int)', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'DetailNodeTreeStringPrinter.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.createFakeBlockComment(java.lang.String)', 'DEL': 2, 'INS': 2, 'UPD': 0, 'MOV': 0, 'TOT': 4}, {'spoonMethodName': 'com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'ParseTreeTablePModelTest.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.gui.ParseTreeTablePModelTest.testGetValueAtDetailNode()', 'DEL': 0, 'INS': 0, 'UPD': 1, 'MOV': 0, 'TOT': 1}]}], 'nameRev': '2852e45bf6e5d837dc77236f77ec2f52cc768b52 tags/checkstyle-7.5~25', 'commitUser': 'rnveach', 'authoredDateTime': '2017-01-05 18:08:54', 'commitGHEventType': 'referenced', 'commitGitStats': [{'lines': 23, 'filePath': 'src/main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java', 'insertions': 23, 'deletions': 0}, {'lines': 14, 'filePath': 'src/test/resources/com/puppycrawl/tools/checkstyle/astprinter/expectedInputAstTreeStringPrinterAttributesAndMethodsJavadoc.txt', 'insertions': 7, 'deletions': 7}, {'lines': 4, 'filePath': 'src/test/resources/com/puppycrawl/tools/checkstyle/astprinter/expectedInputAstTreeStringPrinterJavaAndJavadoc.txt', 'insertions': 2, 'deletions': 2}, {'lines': 9, 'filePath': 'src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java', 'insertions': 7, 'deletions': 2}, {'lines': 6, 'filePath': 'src/test/resources/com/puppycrawl/tools/checkstyle/astprinter/expectedInputAstTreeStringPrinterJavadoc.txt', 'insertions': 3, 'deletions': 3}, {'lines': 2, 'filePath': 'src/test/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTablePModelTest.java', 'insertions': 1, 'deletions': 1}, {'lines': 2, 'filePath': 'src/test/java/com/puppycrawl/tools/checkstyle/gui/CodeSelectorPModelTest.java', 'insertions': 1, 'deletions': 1}], 'commitDateTime': '2017-01-17 11:24:57', 'spoonStatsSkippedReason': ''}, {'commitMessage': 'Issue #3507: xdocs fix\n', 'commitParents': ['258c440a011f1845a2095e5b6361ae9639849f1f'], 'commitHash': '0cee0939c905a352e3d6354cc0c7cdc9ca13b218', 'commitSpoonAstDiffStats': [], 'nameRev': '0cee0939c905a352e3d6354cc0c7cdc9ca13b218 tags/checkstyle-7.5~22', 'commitUser': 'romani', 'authoredDateTime': '2017-01-20 12:05:49', 'commitGHEventType': 'referenced', 'commitGitStats': [{'lines': 8, 'filePath': 'src/xdocs/writingjavadocchecks.xml.vm', 'insertions': 2, 'deletions': 6}, {'lines': 0, 'filePath': 'src/site/resources/images/gui_javadoc_screenshot.png', 'insertions': 0, 'deletions': 0}], 'commitDateTime': '2017-01-20 07:01:31', 'spoonStatsSkippedReason': ''}]",https://github.com/checkstyle/checkstyle/issues/3507,89.00027777777778,"['approved', 'bug']",Javadoc: Column number of DetailNode is always 0 for first line,1.0,"['com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter.createFakeBlockComment(java.lang.String)', 'com.puppycrawl.tools.checkstyle.JavadocDetailNodeParser', 'com.puppycrawl.tools.checkstyle.JavadocDetailNodeParser.parseJavadocAsDetailNode(com.puppycrawl.tools.checkstyle.api.DetailAST)', 'com.puppycrawl.tools.checkstyle.JavadocDetailNodeParser.adjustFirstLineToJavadocIndent(com.puppycrawl.tools.checkstyle.api.DetailNode,int)', 'com.puppycrawl.tools.checkstyle.DetailNodeTreeStringPrinter']","['0cee0939c905a352e3d6354cc0c7cdc9ca13b218', '2852e45bf6e5d837dc77236f77ec2f52cc768b52']",,['src/main/java/com/puppycrawl/tools/checkstyle'],30.0,2.0,32.0,2.0,0.0,5.0,8.0,0.0,6.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,checkstyle
16625,2016-01-08 18:44:48,rnveach,"TestClass.java

```
package test;

/**
 * TestClass.
 * 
 * @param BAD
 *            This doesn't exist.
 */
public class TestClass {
    public void test() {
    }
}
```

config.xml

```
<?xml version=""1.0""?>
<!DOCTYPE module PUBLIC
          ""-//Puppy Crawl//DTD Check Configuration 1.3//EN""
          ""http://www.puppycrawl.com/dtds/configuration_1_3.dtd"">

<module name=""Checker"">
    <property name=""charset"" value=""ASCII"" />
    <property name=""severity"" value=""error"" />
    <property name=""fileExtensions"" value=""java"" />

    <module name=""TreeWalker"">
        <module name=""JavadocType"">
            <property name=""scope"" value=""public"" />
        </module>
    </module>
</module>
```

output from: `java -jar checkstyle-6.14.1-all.jar -c config.xml TestClass.java`

```
Starting audit...
Audit done.
```

Expected output:

```
Starting audit...
[ERROR] D:\Rickys\Java\EclipseStuff\checkstyle\src\main\java\test\TestClass.java:6:4: Unused @param tag for 'BAD'. [JavadocType]
Audit done.
Checkstyle ends with 1 errors.
```

JavadocType should validate that if a param is defined, that it is used in the class definition so the 2 stay in synch. JavadocMethod will report unused params, so Type should follow suite.

Just as a note, class parameters are used by generic classes. (Ex: ArrayList&lt;T&gt;, T is considered the parameter)
",2016-02-09 15:24:48,"[{'commitMessage': 'Issue #2811: Makes JavadocTypeCheck recognise param names without brackets\n', 'commitParents': ['e02ffc5681a2919e3028bc2efac572698665f845'], 'commitHash': '8e55060b9135e6e4729f8262e6a3041e8fc79fc6', 'commitSpoonAstDiffStats': [{'spoonFilePath': 'JavadocTypeCheckTest.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest.testDontAllowUnusedParameterTag()', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}, {'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest.testAllowMissingTypeParameters()', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}, {'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheckTest.testTypeParameters()', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'JavadocTypeCheck.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck', 'DEL': 0, 'INS': 2, 'UPD': 0, 'MOV': 0, 'TOT': 2}, {'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.extractTypeParamNameFromTag(com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag)', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}, {'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.checkUnusedTypeParamTags(java.util.List,java.util.List)', 'DEL': 4, 'INS': 1, 'UPD': 1, 'MOV': 6, 'TOT': 12}]}, {'spoonFilePath': 'InputUnusedParamInJavadocForClass.java', 'spoonMethods': [{'spoonMethodName': 'com.puppycrawl.tools.checkstyle.checks.javadoc.InputUnusedParamInJavadocForClass', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}], 'nameRev': '8e55060b9135e6e4729f8262e6a3041e8fc79fc6 tags/checkstyle-6.16~76', 'commitUser': 'romani', 'authoredDateTime': '2016-02-08 15:11:41', 'commitGHEventType': 'referenced', 'commitGitStats': [{'lines': 15, 'filePath': 'src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheckTest.java', 'insertions': 15, 'deletions': 0}, {'lines': 37, 'filePath': 'src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTypeCheck.java', 'insertions': 30, 'deletions': 7}, {'lines': 11, 'filePath': 'src/test/resources/com/puppycrawl/tools/checkstyle/checks/javadoc/InputUnusedParamInJavadocForClass.java', 'insertions': 11, 'deletions': 0}], 'commitDateTime': '2016-02-09 07:22:07', 'spoonStatsSkippedReason': ''}]",https://github.com/checkstyle/checkstyle/issues/2811,31.00027777777778,"['approved', 'bug', 'javadoc']",JavadocType doesn't report unused param tag,1.0,"['com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck', 'com.puppycrawl.tools.checkstyle.checks.javadoc.InputUnusedParamInJavadocForClass', 'com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.extractTypeParamNameFromTag(com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTag)', 'com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.checkUnusedTypeParamTags(java.util.List,java.util.List)']",['8e55060b9135e6e4729f8262e6a3041e8fc79fc6'],,['src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc'],30.0,7.0,37.0,1.0,1.0,4.0,16.0,6.0,5.0,4.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,checkstyle
16796,2014-11-27 05:56:53,pvolok,"In the following example `let str` doesn't get renamed. In `for (let str;;)` it's renamed as it should be.

``` javascript
var str = 'hi';

for (let str of [1, 2, 3]) {
  alert(str);
}

alert(str);
```

https://closure-compiler-debugger.appspot.com/#input0%3Dvar%2520str%2520%253D%2520'hi'%253B%250A%250Afor%2520(let%2520str%2520of%2520%255B1%252C%25202%252C%25203%255D)%2520%257B%250A%2520%2520alert(str)%253B%250A%257D%250A%250Aalert(str)%253B%250A%26input1%26conformanceConfig%26externs%26refasterjs-template%26includeDefaultExterns%3D1%26CHECK_SYMBOLS%3D1%26CHECK_TYPES%3D1%26LANG_IN_IS_ES6%3D1%26MISSING_PROPERTIES%3D1%26PRETTY_PRINT%3D1%26TRANSPILE%3D1
",2015-01-05 17:35:22,"[{'commitMessage': 'Automated rollback.\n\n*** Original change description ***\n\nFix transpilation of for/of loops where the iteration variable is declared with let or const.\n\nIn this case, it may shadow a variable from the outer scope, so we should keep it as a let or const, so that the Es6RewriteLetConst pass can rename it if needed.\n\nFixes #717 on Github.\n\n***\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82976608\n', 'commitParents': ['b1c7a21888e9e2bc1e81902c5eb5eb32b5580a51'], 'commitHash': '3948c4acb2e2bd77de9c6255294c1c192fd02546', 'commitSpoonAstDiffStats': [{'spoonFilePath': 'Es6ToEs3Converter.java', 'spoonMethods': [{'spoonMethodName': 'com.google.javascript.jscomp.Es6ToEs3Converter.visitForOf(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node)', 'DEL': 5, 'INS': 1, 'UPD': 2, 'MOV': 4, 'TOT': 12}]}, {'spoonFilePath': 'Es6RewriteLetConstTest.java', 'spoonMethods': [{'spoonMethodName': 'com.google.javascript.jscomp.Es6RewriteLetConstTest.testForOfLoop()', 'DEL': 1, 'INS': 0, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'Es6ToEs3ConverterTest.java', 'spoonMethods': [{'spoonMethodName': 'com.google.javascript.jscomp.Es6ToEs3ConverterTest.testForOf()', 'DEL': 1, 'INS': 0, 'UPD': 1, 'MOV': 0, 'TOT': 2}]}], 'nameRev': '3948c4acb2e2bd77de9c6255294c1c192fd02546 tags/maven-release-v20150126~80', 'commitUser': 'MatrixFrog', 'authoredDateTime': '2014-12-29 16:21:12', 'commitGHEventType': 'referenced', 'commitGitStats': [{'lines': 20, 'filePath': 'test/com/google/javascript/jscomp/Es6ToEs3ConverterTest.java', 'insertions': 1, 'deletions': 19}, {'lines': 27, 'filePath': 'src/com/google/javascript/jscomp/Es6ToEs3Converter.java', 'insertions': 4, 'deletions': 23}, {'lines': 20, 'filePath': 'test/com/google/javascript/jscomp/Es6RewriteLetConstTest.java', 'insertions': 0, 'deletions': 20}], 'commitDateTime': '2015-01-05 09:33:15', 'spoonStatsSkippedReason': ''}, {'commitMessage': 'Fix transpilation of for/of loops where the iteration variable is declared with let or const (roll-forward)\n\nIn this case, it may shadow a variable from the outer scope, so we should keep it as a let or const, so that the Es6RewriteLetConst pass can rename it if needed.\n\nFixes #717 on Github.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=83190947\n', 'commitParents': ['08740f4f9aa5e88737b844c33a656c4a04c2ee66'], 'commitHash': 'd907ebeefcafa47f43069dc70eded73cc4ed04b2', 'commitSpoonAstDiffStats': [{'spoonFilePath': 'Es6ToEs3Converter.java', 'spoonMethods': [{'spoonMethodName': 'com.google.javascript.jscomp.Es6ToEs3Converter.visitForOf(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node)', 'DEL': 1, 'INS': 5, 'UPD': 2, 'MOV': 4, 'TOT': 12}]}, {'spoonFilePath': 'Es6RewriteLetConstTest.java', 'spoonMethods': [{'spoonMethodName': 'com.google.javascript.jscomp.Es6RewriteLetConstTest.testForOfLoop()', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'Es6ToEs3ConverterTest.java', 'spoonMethods': [{'spoonMethodName': 'com.google.javascript.jscomp.Es6ToEs3ConverterTest.testForOf()', 'DEL': 0, 'INS': 1, 'UPD': 1, 'MOV': 0, 'TOT': 2}]}], 'nameRev': 'd907ebeefcafa47f43069dc70eded73cc4ed04b2 tags/maven-release-v20150126~76', 'commitUser': 'MatrixFrog', 'authoredDateTime': '2015-01-03 16:36:10', 'commitGHEventType': 'referenced', 'commitGitStats': [{'lines': 20, 'filePath': 'test/com/google/javascript/jscomp/Es6ToEs3ConverterTest.java', 'insertions': 19, 'deletions': 1}, {'lines': 27, 'filePath': 'src/com/google/javascript/jscomp/Es6ToEs3Converter.java', 'insertions': 23, 'deletions': 4}, {'lines': 20, 'filePath': 'test/com/google/javascript/jscomp/Es6RewriteLetConstTest.java', 'insertions': 20, 'deletions': 0}], 'commitDateTime': '2015-01-05 09:34:32', 'spoonStatsSkippedReason': ''}, {'commitMessage': 'Fix transpilation of for/of loops where the iteration variable is declared with let or const.\n\nIn this case, it may shadow a variable from the outer scope, so we should keep it as a let or const, so that the Es6RewriteLetConst pass can rename it if needed.\n\nFixes #717 on Github.\n-------------\nCreated by MOE: http://code.google.com/p/moe-java\nMOE_MIGRATED_REVID=82965010\n', 'commitParents': ['6f95920c742361ff4eb0016f7159e363d76e8d19'], 'commitHash': 'b1c7a21888e9e2bc1e81902c5eb5eb32b5580a51', 'commitSpoonAstDiffStats': [{'spoonFilePath': 'Es6ToEs3Converter.java', 'spoonMethods': [{'spoonMethodName': 'com.google.javascript.jscomp.Es6ToEs3Converter.visitForOf(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node)', 'DEL': 1, 'INS': 5, 'UPD': 2, 'MOV': 4, 'TOT': 12}]}, {'spoonFilePath': 'Es6RewriteLetConstTest.java', 'spoonMethods': [{'spoonMethodName': 'com.google.javascript.jscomp.Es6RewriteLetConstTest.testForOfLoop()', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}, {'spoonFilePath': 'Es6ToEs3ConverterTest.java', 'spoonMethods': [{'spoonMethodName': 'com.google.javascript.jscomp.Es6ToEs3ConverterTest.testForOf()', 'DEL': 0, 'INS': 1, 'UPD': 1, 'MOV': 0, 'TOT': 2}]}], 'nameRev': 'b1c7a21888e9e2bc1e81902c5eb5eb32b5580a51 tags/maven-release-v20150126~81', 'commitUser': 'MatrixFrog', 'authoredDateTime': '2014-12-29 12:25:01', 'commitGHEventType': 'closed', 'commitGitStats': [{'lines': 20, 'filePath': 'test/com/google/javascript/jscomp/Es6ToEs3ConverterTest.java', 'insertions': 19, 'deletions': 1}, {'lines': 27, 'filePath': 'src/com/google/javascript/jscomp/Es6ToEs3Converter.java', 'insertions': 23, 'deletions': 4}, {'lines': 20, 'filePath': 'test/com/google/javascript/jscomp/Es6RewriteLetConstTest.java', 'insertions': 20, 'deletions': 0}], 'commitDateTime': '2015-01-05 09:33:08', 'spoonStatsSkippedReason': ''}]",https://github.com/google/closure-compiler/issues/717,39.000277777777775,"['ES6', 'bug']",Transpiling of `for (let x of ...)` doesn't transpile `let`.,3.0,"['com.google.javascript.jscomp.Es6ToEs3Converter.visitForOf(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node)']","['d907ebeefcafa47f43069dc70eded73cc4ed04b2', 'b1c7a21888e9e2bc1e81902c5eb5eb32b5580a51', '3948c4acb2e2bd77de9c6255294c1c192fd02546']",,['src/com/google/javascript/jscomp'],50.0,31.0,81.0,1.0,6.0,1.0,36.0,12.0,11.0,7.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,closure-compiler
16961,2016-08-10 10:25:19,johnmcclean,"```
  default  <R> R block(final Collector collector,
           final Predicate<Status<U>> breakout)
```
",2016-08-11 12:42:53,"[{'commitMessage': 'fix for #276\n', 'commitParents': ['86ed62f87d8f28ff0d89c66efdf33a96c6d006da'], 'commitHash': '158d4bddbd771f401095dfad0f9d85a03dea778a', 'commitSpoonAstDiffStats': [{'spoonFilePath': 'BlockingStreamHelper.java', 'spoonMethods': [{'spoonMethodName': 'com.aol.cyclops.types.futurestream.BlockingStreamHelper.block(com.aol.cyclops.types.futurestream.BlockingStream,java.util.stream.Collector,com.aol.cyclops.internal.react.stream.EagerStreamWrapper)', 'DEL': 0, 'INS': 2, 'UPD': 0, 'MOV': 0, 'TOT': 2}]}, {'spoonFilePath': 'SimpleReactStream.java', 'spoonMethods': [{'spoonMethodName': 'com.aol.cyclops.types.futurestream.block(java.util.stream.Collector,java.util.function.Predicate)', 'DEL': 0, 'INS': 1, 'UPD': 0, 'MOV': 0, 'TOT': 1}]}], 'nameRev': '158d4bddbd771f401095dfad0f9d85a03dea778a tags/1.0.0-FINAL~10^2~1', 'commitUser': 'johnmcclean', 'authoredDateTime': '2016-08-10 11:48:15', 'commitGHEventType': 'referenced', 'commitGitStats': [{'lines': 3, 'filePath': 'src/main/java/com/aol/cyclops/types/futurestream/SimpleReactStream.java', 'insertions': 2, 'deletions': 1}, {'lines': 2, 'filePath': 'src/main/java/com/aol/cyclops/types/futurestream/BlockingStreamHelper.java', 'insertions': 1, 'deletions': 1}], 'commitDateTime': '2016-08-10 11:48:15', 'spoonStatsSkippedReason': ''}]",https://github.com/aol/cyclops/issues/276,1.0002777777777778,['bug'],SimpleReactStream block Collector is missing generic types,1.0,"['com.aol.cyclops.types.futurestream.block(java.util.stream.Collector,java.util.function.Predicate)', 'com.aol.cyclops.types.futurestream.BlockingStreamHelper.block(com.aol.cyclops.types.futurestream.BlockingStream,java.util.stream.Collector,com.aol.cyclops.internal.react.stream.EagerStreamWrapper)']",['158d4bddbd771f401095dfad0f9d85a03dea778a'],,['src/main/java/com/aol/cyclops/types/futurestream'],3.0,2.0,5.0,2.0,0.0,2.0,3.0,0.0,3.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,cyclops
18836,2014-09-18 23:39:10,rashidkpc,"Continuing discussion from:
https://github.com/elasticsearch/elasticsearch/pull/7234#issuecomment-55948380

It appears that the recent Get Indices API removes ignore_missing:

Elasticsearch 1.3.2

```
curl -XGET  http://localhost:9200/logstash-2014.09.16,logstash-2014.09.17/_aliases?ignore_missing=true;echo
{""logstash-2014.09.16"":{""aliases"":{}}}
```

Elasticsearch 1.4 branch

```
$ curl -XGET  http://localhost:9200/logstash-2014.09.16,logstash-2014.09.17/_aliases?ignore_missing=true;echo
{""error"":""IndexMissingException[[logstash-2014.09.17] missing]"",""status"":404}
```

Technically ignore_missing was slated for removal in Elasticsearch 1.0 (http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/_parameters.html#_parameters), however it was not removed from this API, meaning this this will introduce a breaking change for 1.4. 

It might be better to deprecate ignore_missing and remove it in Elasticsearch 2.0.
",2014-09-22 10:15:55,"[{'commitGitStats': [{'lines': 5, 'insertions': 4, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/get/RestGetIndicesAction.java'}, {'lines': 3, 'insertions': 3, 'deletions': 0, 'filePath': 'docs/reference/indices/aliases.asciidoc'}, {'lines': 9, 'insertions': 3, 'deletions': 6, 'filePath': 'docs/reference/migration/migrate_1_4.asciidoc'}, {'lines': 35, 'insertions': 35, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/get/GetIndexRequest.java'}, {'lines': 52, 'insertions': 52, 'deletions': 0, 'filePath': 'src/test/java/org/elasticsearch/action/admin/indices/get/GetIndexTests.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['189a8063e9c314419c03e48958d59998256ce1a4'], 'commitUser': 'colings86', 'commitDateTime': '2014-09-30 10:06:53', 'commitHash': 'a3d7e43f82001dc0ad2f5b89189ab99d919b6435', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 3, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.rest.action.admin.indices.get.RestGetIndicesAction.handleRequest(org.elasticsearch.rest.action.admin.indices.get.RestRequest,org.elasticsearch.rest.action.admin.indices.get.RestChannel,org.elasticsearch.client.Client)', 'INS': 2, 'MOV': 1}], 'spoonFilePath': 'RestGetIndicesAction.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexRequest.readFrom(org.elasticsearch.common.io.stream.StreamInput)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexRequest.resolveIndicesOptions()', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexRequest.indicesOptions(org.elasticsearch.action.support.IndicesOptions)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexRequest', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexRequest.writeTo(org.elasticsearch.common.io.stream.StreamOutput)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexRequest.indicesOptions()', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'GetIndexRequest.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundMapping()', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundMixedFeatures()', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundWarmer()', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundSettings()', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundWarmers()', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundAlias()', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundAliases()', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundMappings()', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'GetIndexTests.java'}], 'nameRev': 'a3d7e43f82001dc0ad2f5b89189ab99d919b6435 tags/v1.4.0.Beta1~14', 'commitGHEventType': 'referenced', 'commitMessage': 'Indices API: fixes GET Alias API backwards compatibility\n\nFor just the case when only the aliases are requested, the default indices options are to ignore missing indexes. When requesting any other feature or any combination of features, the default will be to error on missing indices.\n\nCloses #7793\n', 'authoredDateTime': '2014-09-26 10:26:40'}]",https://github.com/elastic/elasticsearch/issues/7793,3.000277777777778,"['>breaking', 'v1.4.0.Beta1']",ignore_missing removed from _aliases,1.0,"['org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundSettings()', 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundAlias()', 'org.elasticsearch.action.admin.indices.get.GetIndexRequest.writeTo(org.elasticsearch.common.io.stream.StreamOutput)', 'org.elasticsearch.action.admin.indices.get.GetIndexRequest.resolveIndicesOptions()', 'org.elasticsearch.rest.action.admin.indices.get.RestGetIndicesAction.handleRequest(org.elasticsearch.rest.action.admin.indices.get.RestRequest,org.elasticsearch.rest.action.admin.indices.get.RestChannel,org.elasticsearch.client.Client)', 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundMappings()', 'org.elasticsearch.action.admin.indices.get.GetIndexRequest.readFrom(org.elasticsearch.common.io.stream.StreamInput)', 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundMapping()', 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundMixedFeatures()', 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundWarmer()', 'org.elasticsearch.action.admin.indices.get.GetIndexRequest', 'org.elasticsearch.action.admin.indices.get.GetIndexRequest.indicesOptions()', 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundWarmers()', 'org.elasticsearch.action.admin.indices.get.GetIndexTests.testNotFoundAliases()', 'org.elasticsearch.action.admin.indices.get.GetIndexRequest.indicesOptions(org.elasticsearch.action.support.IndicesOptions)']",['a3d7e43f82001dc0ad2f5b89189ab99d919b6435'],,"['docs/reference/indices/aliases.asciidoc', 'src/main/java/org/elasticsearch/action/admin/indices/get', 'docs/reference/migration/migrate_1_4.asciidoc', 'src/main/java/org/elasticsearch/rest/action/admin/indices/get']",45.0,7.0,52.0,4.0,0.0,15.0,17.0,1.0,16.0,0.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,elasticsearch
18939,2013-02-16 16:43:57,dadoonet,"We want to clean up the code and use only _standard_ accessors (gettters and setters).
So we remove old non standard accessors.

Current request builders to build request with elasticsearch stay the same, and its the recommended way to execute APIs with elasticsearch. The pure ""request"" APIs have changed, and now have setters methods instead of the non setters options, code will need to change if pure Request objects/api are used.

Last, all response levels objects now only expose the getter API variant. We have had both variants (getter and non getter) for some time, and its time to clean it up as it creates both confusion and overhead on our end to maintain it.
",2013-02-18 16:25:49,"[{'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '5da3d4f679f032a217b08a8da56556d29525204e', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'cf203de4025d4073d132856f2572ced3468209ef', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '0bad68d04bbe19a5ef5f5451b1d8792ae2c1f87a', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '2b2ec357afa55961d6e83c8ef90f69bcd68da1b7', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '6d37ca78181efd613c5a06d0c7ef33d073025e3b', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'a536b67110f7d80cc0904bde2babbc988a868b4b', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '5740003a46da3dde647b93aaacdbfc267a8c77ef', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '8457c65609190e76b3922d4d85551f145a3141ee', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '8c29531e7ebd3c5ac48251aba43f2d80f864a863', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'e53c0b051ca326c14d6906e4a7517728d0a8b55d', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'e6eb82509ff63af7debc3bfdae5af8c1f4ff814e', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '7b1e14bc277ef7dbfe1d8db5ac844d868519a8a5', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '7fd3dc87a8a31e4276c35cc6209d8108c9976166', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [{'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'docs/java-api/search.asciidoc'}], 'spoonStatsSkippedReason': '', 'commitParents': ['f73241ea79d12f8b35ac14b23dc99ceb72ca348e'], 'commitUser': 'spinscale', 'commitDateTime': '2013-10-06 21:18:43', 'commitHash': 'f0cf97c0ac31c309bcc39f54eb90d62c01a7b21b', 'commitSpoonAstDiffStats': [], 'nameRev': 'f0cf97c0ac31c309bcc39f54eb90d62c01a7b21b tags/v2.0.0-beta1~6681', 'commitGHEventType': 'referenced', 'commitMessage': 'Changed documentation to use getter notation\n\nUpdated some java documentation to reflect the use of getters instead of calling methods based on field names.\n\nRelates to #2657\n', 'authoredDateTime': '2013-10-06 21:18:43'}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'a9c72ad5010dfff2d72a83fd3b0cbc341d4f5059', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'f6036a2db0e0f8d5b706819228e25a9485fad630', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '79f2357d95d616ed487a9821836695917be7c0c1', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [{'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsRequest.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java'}, {'lines': 30, 'insertions': 15, 'deletions': 15, 'filePath': 'src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java'}, {'lines': 138, 'insertions': 69, 'deletions': 69, 'filePath': 'src/main/java/org/elasticsearch/action/index/IndexRequest.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/get/TransportGetAction.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/ShardDeleteByQueryRequest.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexRequest.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/test/java/org/elasticsearch/test/integration/gateway/local/SimpleRecoveryLocalGatewayTests.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/facet/TermsFacetSearchBenchmark.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java'}, {'lines': 54, 'insertions': 27, 'deletions': 27, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java'}, {'lines': 74, 'insertions': 37, 'deletions': 37, 'filePath': 'src/main/java/org/elasticsearch/action/index/TransportIndexAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/test/java/org/elasticsearch/test/integration/mlt/MoreLikeThisActionTests.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java'}, {'lines': 60, 'insertions': 30, 'deletions': 30, 'filePath': 'src/main/java/org/elasticsearch/action/index/IndexRequestBuilder.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/settings/UpdateSettingsRequestBuilder.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node/hotthreads/RestNodesHotThreadsAction.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/flush/RestFlushAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/delete/index/TransportShardDeleteAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/delete/TransportDeleteIndexTemplateAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/open/RestOpenIndexAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/get/RestMultiGetAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodesStatsRequest.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/test/java/org/elasticsearch/test/integration/broadcast/BroadcastActionsTests.java'}, {'lines': 54, 'insertions': 27, 'deletions': 27, 'filePath': 'src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java'}, {'lines': 116, 'insertions': 58, 'deletions': 58, 'filePath': 'src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/DeleteMappingRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/instance/InstanceShardOperationRequestBuilder.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/IndicesReplicationOperationRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsRequestBuilder.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/custom/SingleCustomOperationRequest.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/gateway/local/state/meta/TransportNodesListGatewayMetaState.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequest.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/refresh/ShardRefreshRequest.java'}, {'lines': 80, 'insertions': 40, 'deletions': 40, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/index/search/shape/ShapeFetchService.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/rest/action/delete/RestDeleteAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/search/SearchResponse.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/template/put/RestPutIndexTemplateAction.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequestBuilder.java'}, {'lines': 40, 'insertions': 20, 'deletions': 20, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/MinimumMasterNodesTests.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/IndicesStatusRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/custom/SingleCustomOperationRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestIndicesAliasesAction.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexResponse.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/integration/gateway/fs/FsMetaDataGatewayTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/put/RestPutWarmerAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/integration/routing/SimpleRoutingTests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/DeleteMappingRequestBuilder.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java'}, {'lines': 46, 'insertions': 23, 'deletions': 23, 'filePath': 'src/main/java/org/elasticsearch/action/delete/DeleteRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/SuggestSearchBenchMark.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/benchmark/stress/NodesStressTest.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/TransportDeleteWarmerAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/delete/index/TransportIndexDeleteAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestGetIndicesAliasesAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequestBuilder.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/client/Requests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/get/MultiGetRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/delete/DeleteRequestBuilder.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/child/ChildSearchBenchmark.java'}, {'lines': 34, 'insertions': 17, 'deletions': 17, 'filePath': 'src/main/java/org/elasticsearch/action/get/GetRequest.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexResponse.java'}, {'lines': 34, 'insertions': 17, 'deletions': 17, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node/info/RestNodesInfoAction.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/search/SearchScrollRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/test/stress/search1/ParentChildStressTest.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/rest/action/count/RestCountAction.java'}, {'lines': 110, 'insertions': 55, 'deletions': 55, 'filePath': 'src/main/java/org/elasticsearch/action/search/SearchRequest.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/integration/nodesinfo/SimpleNodesInfoTests.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java'}, {'lines': 44, 'insertions': 22, 'deletions': 22, 'filePath': 'src/main/java/org/elasticsearch/action/count/CountRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java'}, {'lines': 60, 'insertions': 30, 'deletions': 30, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/main/java/org/elasticsearch/action/count/TransportCountAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/gateway/snapshot/RestGatewaySnapshotAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerRequest.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/exists/types/RestTypesExistsAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/create/RestCreateIndexAction.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/search/TransportSearchAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/indices/cache/filter/terms/IndicesTermsFilterCache.java'}, {'lines': 32, 'insertions': 16, 'deletions': 16, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoRequest.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/nested/NestedSearchBenchMark.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/delete/RestDeleteMappingAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/optimize/RestOptimizeAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/template/delete/RestDeleteIndexTemplateAction.java'}, {'lines': 44, 'insertions': 22, 'deletions': 22, 'filePath': 'src/main/java/org/elasticsearch/rest/action/mlt/RestMoreLikeThisAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node/restart/RestNodesRestartAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/get/RestGetWarmerAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/restart/NodesRestartRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/stress/indexing/BulkIndexingStressTest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/ActionRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/master/MasterNodeOperationRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/shard/SingleShardOperationRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingResponse.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/get/TransportMultiGetAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/TransportNodesShutdownAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/exists/indices/RestIndicesExistsAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/optimize/ShardOptimizeRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/instance/InstanceShardOperationRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchScanAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/IndicesReplicationOperationRequestBuilder.java'}, {'lines': 54, 'insertions': 27, 'deletions': 27, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/benchmark/stress/SingleThreadBulkStress.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indexlifecycle/IndexLifecycleActionTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java'}, {'lines': 36, 'insertions': 18, 'deletions': 18, 'filePath': 'src/main/java/org/elasticsearch/action/get/MultiGetRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterUpdateSettingsAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/rest/action/explain/RestExplainAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/delete/DeleteIndexTemplateRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/support/nodes/NodesOperationRequestBuilder.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollScanAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/stats/TransportNodesStatsAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/test/java/org/elasticsearch/test/integration/percolator/RecoveryPercolatorTests.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerRequest.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/search/SearchScrollRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterGetSettingsAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/status/RestIndicesStatusAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/rest/action/get/RestGetAction.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/custom/TransportSingleCustomOperationAction.java'}, {'lines': 36, 'insertions': 18, 'deletions': 18, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/indices/IndicesExistsRequest.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequestBuilder.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/IndicesStatusRequest.java'}, {'lines': 48, 'insertions': 24, 'deletions': 24, 'filePath': 'src/test/java/org/elasticsearch/test/integration/gateway/fs/AbstractSimpleIndexGatewayTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/store/IndicesStoreTests.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ShardClearIndicesCacheRequest.java'}, {'lines': 30, 'insertions': 15, 'deletions': 15, 'filePath': 'src/test/java/org/elasticsearch/test/integration/recovery/SimpleRecoveryTests.java'}, {'lines': 50, 'insertions': 25, 'deletions': 25, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsRequest.java'}, {'lines': 40, 'insertions': 20, 'deletions': 20, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/gateway/snapshot/TransportGatewaySnapshotAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/types/TransportTypesExistsAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/delete/DeleteIndexTemplateRequest.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/analyze/RestAnalyzeAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryRequest.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/main/java/org/elasticsearch/action/delete/index/IndexDeleteRequest.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/template/get/RestGetIndexTemplateAction.java'}, {'lines': 41, 'insertions': 20, 'deletions': 21, 'filePath': 'src/main/java/org/elasticsearch/action/explain/ExplainRequest.java'}, {'lines': 144, 'insertions': 72, 'deletions': 72, 'filePath': 'src/main/java/org/elasticsearch/action/update/UpdateRequest.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/IndexReplicationOperationRequest.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodesStatsRequestBuilder.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/ActionRequestBuilder.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/indicesboost/SimpleIndicesBoostSearchTests.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java'}, {'lines': 30, 'insertions': 15, 'deletions': 15, 'filePath': 'src/main/java/org/elasticsearch/action/delete/index/ShardDeleteRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/facet/HistogramFacetSearchBenchmark.java'}, {'lines': 34, 'insertions': 17, 'deletions': 17, 'filePath': 'src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequestBuilder.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/support/nodes/NodesOperationRequest.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequestBuilder.java'}, {'lines': 32, 'insertions': 16, 'deletions': 16, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/integration/document/AliasedIndexDocumentActionsTests.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/stress/fullrestart/FullRestartStressTest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/support/broadcast/BroadcastShardOperationRequest.java'}, {'lines': 44, 'insertions': 22, 'deletions': 22, 'filePath': 'src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java'}, {'lines': 74, 'insertions': 37, 'deletions': 37, 'filePath': 'src/test/java/org/elasticsearch/test/unit/action/search/MultiSearchRequestTests.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/search/internal/InternalScrollSearchRequest.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoRequestBuilder.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/unit/action/bulk/BulkRequestTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/segments/RestIndicesSegmentsAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestUpdateSettingsAction.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/TransportShardDeleteByQueryAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/settings/UpdateSettingsRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/TransportIndexDeleteByQueryAction.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsRequest.java'}, {'lines': 106, 'insertions': 53, 'deletions': 53, 'filePath': 'src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java'}, {'lines': 58, 'insertions': 29, 'deletions': 29, 'filePath': 'src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/SimpleDataNodesTests.java'}, {'lines': 32, 'insertions': 16, 'deletions': 16, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/basic/TransportTwoNodesSearchTests.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/basic/TransportSearchFailuresTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/TransportIndicesReplicationOperationAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/shard/SingleShardOperationRequest.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/explain/ExplainRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/facet/QueryFilterFacetSearchBenchmark.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/restart/NodesRestartRequest.java'}, {'lines': 40, 'insertions': 20, 'deletions': 20, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node/stats/RestNodesStatsAction.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/settings/TransportUpdateSettingsAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java'}, {'lines': 106, 'insertions': 53, 'deletions': 53, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/stats/RestIndicesStatsAction.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/rest/action/deletebyquery/RestDeleteByQueryAction.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/count/ShardCountRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/indices/ttl/IndicesTTLService.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/rest/action/get/RestHeadAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequestBuilder.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/test/java/org/elasticsearch/test/integration/get/GetActionTests.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/support/TransportAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/put/RestPutMappingAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/search/MultiSearchRequestBuilder.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/refresh/RestRefreshAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/validate/query/RestValidateQueryAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequestBuilder.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/get/MultiGetShardRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/delete/RestDeleteWarmerAction.java'}, {'lines': 36, 'insertions': 18, 'deletions': 18, 'filePath': 'src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java'}, {'lines': 96, 'insertions': 48, 'deletions': 48, 'filePath': 'src/test/java/org/elasticsearch/test/integration/aliases/IndexAliasesTests.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/gateway/local/state/shards/TransportNodesListGatewayStartedShards.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/get/GetRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/open/TransportOpenIndexAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/search/TransportMultiSearchAction.java'}, {'lines': 34, 'insertions': 17, 'deletions': 17, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/test/java/org/elasticsearch/test/integration/gateway/local/QuorumLocalGatewayTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node/shutdown/RestNodesShutdownAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownRequestBuilder.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/count/CountRequestBuilder.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/indices/IndicesExistsRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/TransportDeleteByQueryAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/close/RestCloseIndexAction.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/get/TransportShardMultiGetAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerRequestBuilder.java'}, {'lines': 62, 'insertions': 31, 'deletions': 31, 'filePath': 'src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/integration/routing/AliasRoutingTests.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/indices/TransportIndicesExistsAction.java'}, {'lines': 138, 'insertions': 69, 'deletions': 69, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/support/master/MasterNodeOperationRequestBuilder.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/nodes/TransportNodesOperationAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/TransportIndexReplicationOperationAction.java'}, {'lines': 40, 'insertions': 20, 'deletions': 20, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java'}, {'lines': 80, 'insertions': 40, 'deletions': 40, 'filePath': 'src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerRequestBuilder.java'}, {'lines': 34, 'insertions': 17, 'deletions': 17, 'filePath': 'src/main/java/org/elasticsearch/rest/action/index/RestIndexAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchCountAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/create/TransportCreateIndexAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestGetSettingsAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/delete/RestDeleteIndexAction.java'}, {'lines': 48, 'insertions': 24, 'deletions': 24, 'filePath': 'src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/cache/clear/RestClearIndicesCacheAction.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/BulkRequest.java'}], 'spoonStatsSkippedReason': 'tooManyFiles', 'commitParents': ['a646e126e9a5d91f2e67872b4ad447fd9519a7bc'], 'commitUser': 'dadoonet', 'commitDateTime': '2013-02-23 10:37:56', 'commitHash': '4c493ac71de7382f3ecda0b435c9ce2cc31ef2b2', 'commitSpoonAstDiffStats': [], 'nameRev': '4c493ac71de7382f3ecda0b435c9ce2cc31ef2b2 tags/v0.90.0.Beta1~13', 'commitGHEventType': 'referenced', 'commitMessage': 'Revert changes on *Request classes from issue\nRelative to #2657\n', 'authoredDateTime': '2013-02-23 08:28:24'}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'e5bdab893e6a4bed3b660f730cd5bba1c4c0b18a', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '2b3fd1c2a236c5b192f516f17d5fbd24395c08ff', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '5f84c68bed79d00908f610e42de6167c5d79cb27', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '3eaf5129565c41b498506649dcc231cd46631063', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '169c90bec4287f932dd8c55e39a56c3866492aa0', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '579de7dc652560e202cd025e0c21da460d2814e4', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'e598582b91278485ce54b913f05de5bbfa473a63', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '7f091770e7638a543894c5c0515b032206162915', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '1a26d46e24e1ef8d4169698834fcca2cd1296b47', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '5025cfb3d0a9a9caa3f6cfd664123640e67a71c4', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '4412501073ec61cc0164fed6927a7007791b6476', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'closed', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '79109dc09a98dcc6b966e671cd002c58e37810ea', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'a7351161015e6c7e4732f7693d42353c2acbbf89', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'f3d7acdd8958d70ed289e855b9daa9b7a76c4da1', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '2028ce25743998dc8b56535ba471cb227873934a', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'dc99843c2249a185ea244a34ef7c62e8e687be8b', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '2c2a73eb219a74cc2e695a7a0c55a387f99d942c', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '666b18b69f938e0a9614cd3f0295c39b333ba95e', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '9ffb07bbca9d5ca0a2e5d361f298375d98bd9a89', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'ca2954b47ee49f1c7156642299b9d27107f4d816', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '6c6f8201edbf1cef13bf010a83699cb84a4966d7', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'a0b21389e865c280772567c03cab21ea67cc2a8c', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'ee8d14b3923df766eedd7a7d7b4980ce0f9ae463', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '14554720530f0efdd1a5d0437a61efec3b7b89ae', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '4cc2b552ad307b8128306ef1bfb21efe346f300c', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '8d3c7b001de0f2deaa926d38a6a33562e6782d44', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'f888946f965809c44b44d825e485b23268ed4027', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '2ce634fdf960f8901e3aa102e7b1ac85181ccc7e', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '64ff230d3d0cf73ef9f14fa8ac91e7b5e7916985', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [{'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['ec3492c67c9d9781253637aae6811e50466ca976'], 'commitUser': 'kimchy', 'commitDateTime': '2013-02-22 12:45:56', 'commitHash': 'a234e45b59338e77c39b0f914642674a27834929', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.rest.action.admin.cluster.health.RestClusterHealthAction.handleRequest(org.elasticsearch.rest.action.admin.cluster.health.RestRequest,org.elasticsearch.rest.action.admin.cluster.health.RestChannel)', 'INS': 0, 'MOV': 0}], 'spoonFilePath': 'RestClusterHealthAction.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest.getLocal()', 'INS': 0, 'MOV': 0}], 'spoonFilePath': 'ClusterHealthRequest.java'}], 'nameRev': 'a234e45b59338e77c39b0f914642674a27834929 tags/v0.90.0.Beta1~22', 'commitGHEventType': 'referenced', 'commitMessage': 'fix boolean to is from get\nrelates to #2657\n', 'authoredDateTime': '2013-02-22 12:45:47'}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '16bf9953f61c88e4f3e3eb824bcdb392749311dd', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '0ac403363010a6a396c08615ec31512a769e8e07', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '1579e857561da6b95de10c983f54df00ee2cf522', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '4e38612e9f85de0bc367903c69bcee75b6bd7bc1', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '1d076ef9f5e6a75dc9fa7dfd0a2462b9bc66eb3c', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '303fef4bba6b8daa99e6add43a9bcf945738bce8', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '10274e51ced045e1a2d6cb09bf2e97a9ac985e37', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '263ec736e27ad036b531c21078d64a923df1b169', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'fc7fb324dc83ee19a48b9a1e41ee4070bb78c987', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [{'lines': 29, 'insertions': 14, 'deletions': 15, 'filePath': 'src/main/java/org/elasticsearch/action/explain/TransportExplainAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/test/java/org/elasticsearch/test/stress/get/MGetStress1.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/TransportDeleteMappingAction.java'}, {'lines': 30, 'insertions': 15, 'deletions': 15, 'filePath': 'src/main/java/org/elasticsearch/action/search/MultiSearchRequest.java'}, {'lines': 136, 'insertions': 68, 'deletions': 68, 'filePath': 'src/main/java/org/elasticsearch/action/index/IndexRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/wamer/SimpleIndicesWarmerTests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/river/RiversService.java'}, {'lines': 144, 'insertions': 72, 'deletions': 72, 'filePath': 'src/main/java/org/elasticsearch/action/update/UpdateRequest.java'}, {'lines': 172, 'insertions': 86, 'deletions': 86, 'filePath': 'src/test/java/org/elasticsearch/test/integration/gateway/local/SimpleRecoveryLocalGatewayTests.java'}, {'lines': 44, 'insertions': 22, 'deletions': 22, 'filePath': 'src/main/java/org/elasticsearch/action/delete/TransportDeleteAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownRequest.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/facet/TermsFacetSearchBenchmark.java'}, {'lines': 58, 'insertions': 29, 'deletions': 29, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/TransportBulkAction.java'}, {'lines': 76, 'insertions': 38, 'deletions': 38, 'filePath': 'src/main/java/org/elasticsearch/action/index/TransportIndexAction.java'}, {'lines': 7, 'insertions': 1, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesResponse.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequestBuilder.java'}, {'lines': 41, 'insertions': 3, 'deletions': 38, 'filePath': 'src/main/java/org/elasticsearch/action/delete/DeleteResponse.java'}, {'lines': 60, 'insertions': 30, 'deletions': 30, 'filePath': 'src/main/java/org/elasticsearch/action/index/IndexRequestBuilder.java'}, {'lines': 68, 'insertions': 34, 'deletions': 34, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/geo/GeoBoundingBoxTests.java'}, {'lines': 62, 'insertions': 31, 'deletions': 31, 'filePath': 'src/test/java/org/elasticsearch/test/integration/validate/SimpleValidateQueryTests.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/flush/RestFlushAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/IndicesStatusRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/get/RestMultiGetAction.java'}, {'lines': 7, 'insertions': 0, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/count/CountResponse.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/test/java/org/elasticsearch/test/stress/rollingrestart/QuickRollingRestartStressTest.java'}, {'lines': 36, 'insertions': 18, 'deletions': 18, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodesStatsRequest.java'}, {'lines': 64, 'insertions': 32, 'deletions': 32, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/indicesboost/SimpleIndicesBoostSearchTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/index/flush/FlushStats.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/ClusterHealthTests.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/test/java/org/elasticsearch/test/stress/fullrestart/FullRestartStressTest.java'}, {'lines': 30, 'insertions': 5, 'deletions': 25, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/GatewaySnapshotStatus.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/custom/SingleCustomOperationRequest.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequest.java'}, {'lines': 90, 'insertions': 45, 'deletions': 45, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/health/RestClusterHealthAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/test/stress/manyindices/ManyNodesManyIndicesRecoveryStressTest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/refresh/ShardRefreshRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/benchmark/stress/SingleThreadBulkStress.java'}, {'lines': 28, 'insertions': 10, 'deletions': 18, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/IndexStats.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/integration/codecs/CodecTests.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/info/TransportNodesInfoAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryAndFetchAction.java'}, {'lines': 78, 'insertions': 39, 'deletions': 39, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/scroll/SearchScrollTests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsRequestBuilder.java'}, {'lines': 68, 'insertions': 12, 'deletions': 56, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterIndexHealth.java'}, {'lines': 62, 'insertions': 10, 'deletions': 52, 'filePath': 'src/main/java/org/elasticsearch/action/get/MultiGetItemResponse.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/IndicesStatusRequestBuilder.java'}, {'lines': 130, 'insertions': 30, 'deletions': 100, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/BulkItemResponse.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/custom/SingleCustomOperationRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestIndicesAliasesAction.java'}, {'lines': 12, 'insertions': 2, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexResponse.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/test/java/org/elasticsearch/test/integration/gateway/fs/FsMetaDataGatewayTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/IgnoreIndicesTests.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/preference/SearchPreferenceTests.java'}, {'lines': 88, 'insertions': 44, 'deletions': 44, 'filePath': 'src/main/java/org/elasticsearch/action/mlt/TransportMoreLikeThisAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/search/internal/ShardSearchRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/stress/client/ClientFailover.java'}, {'lines': 20, 'insertions': 6, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/IndexShardStats.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/benchmark/stress/NodesStressTest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/integration/versioning/ConcurrentDocumentOperationTests.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequest.java'}, {'lines': 6, 'insertions': 1, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerResponse.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/TransportIndicesStatsAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/get/MultiGetRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/rest/action/search/RestMultiSearchAction.java'}, {'lines': 8, 'insertions': 0, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/segments/IndexShardSegments.java'}, {'lines': 114, 'insertions': 57, 'deletions': 57, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/child/ChildSearchBenchmark.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/put/TransportPutMappingAction.java'}, {'lines': 12, 'insertions': 2, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexResponse.java'}, {'lines': 30, 'insertions': 15, 'deletions': 15, 'filePath': 'src/test/java/org/elasticsearch/test/integration/gateway/none/RecoverAfterNodesTests.java'}, {'lines': 97, 'insertions': 13, 'deletions': 84, 'filePath': 'src/main/java/org/elasticsearch/action/search/SearchResponse.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/ParsedScrollId.java'}, {'lines': 36, 'insertions': 18, 'deletions': 18, 'filePath': 'src/test/java/org/elasticsearch/test/stress/rollingrestart/RollingRestartStressTest.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/scan/SearchScanScrollingTests.java'}, {'lines': 44, 'insertions': 22, 'deletions': 22, 'filePath': 'src/main/java/org/elasticsearch/action/delete/DeleteRequest.java'}, {'lines': 42, 'insertions': 7, 'deletions': 35, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterShardHealth.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/index/get/ShardGetService.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/integration/threadpool/SimpleThreadPoolTests.java'}, {'lines': 52, 'insertions': 26, 'deletions': 26, 'filePath': 'src/test/java/org/elasticsearch/test/integration/percolator/SimplePercolatorTests.java'}, {'lines': 44, 'insertions': 22, 'deletions': 22, 'filePath': 'src/main/java/org/elasticsearch/action/count/CountRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequestBuilder.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchTypeAction.java'}, {'lines': 45, 'insertions': 5, 'deletions': 40, 'filePath': 'src/main/java/org/elasticsearch/action/index/IndexResponse.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerRequest.java'}, {'lines': 22, 'insertions': 7, 'deletions': 15, 'filePath': 'src/main/java/org/elasticsearch/action/support/nodes/NodesOperationResponse.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/test/java/org/elasticsearch/test/integration/recovery/RecoveryWhileUnderLoadTests.java'}, {'lines': 53, 'insertions': 9, 'deletions': 44, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/GatewayRecoveryStatus.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryResponse.java'}, {'lines': 99, 'insertions': 27, 'deletions': 72, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/IndexShardStatus.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/create/RestCreateIndexAction.java'}, {'lines': 42, 'insertions': 21, 'deletions': 21, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequestBuilder.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/alias/RestGetIndicesAliasesAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/delete/RestDeleteMappingAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/test/java/org/elasticsearch/test/integration/consistencylevel/WriteConsistencyLevelTests.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/delete/TransportDeleteIndexAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node/restart/RestNodesRestartAction.java'}, {'lines': 6, 'insertions': 1, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsResponse.java'}, {'lines': 44, 'insertions': 22, 'deletions': 22, 'filePath': 'src/main/java/org/elasticsearch/rest/action/mlt/RestMoreLikeThisAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/indices/store/TransportNodesListShardStoreMetaData.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/master/MasterNodeOperationRequest.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/test/java/org/elasticsearch/test/integration/recovery/FullRollingRestartTests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequestBuilder.java'}, {'lines': 12, 'insertions': 2, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingResponse.java'}, {'lines': 9, 'insertions': 1, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerResponse.java'}, {'lines': 65, 'insertions': 31, 'deletions': 34, 'filePath': 'src/test/java/org/elasticsearch/test/integration/explain/ExplainActionTests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/refresh/RefreshRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/percolate/PercolateResponse.java'}, {'lines': 9, 'insertions': 1, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/support/nodes/NodeOperationResponse.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchScanAction.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/index/merge/MergeStats.java'}, {'lines': 228, 'insertions': 114, 'deletions': 114, 'filePath': 'src/test/java/org/elasticsearch/test/integration/get/GetActionTests.java'}, {'lines': 102, 'insertions': 12, 'deletions': 90, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodeInfo.java'}, {'lines': 62, 'insertions': 11, 'deletions': 51, 'filePath': 'src/main/java/org/elasticsearch/index/get/GetStats.java'}, {'lines': 34, 'insertions': 3, 'deletions': 31, 'filePath': 'src/main/java/org/elasticsearch/action/delete/index/IndexDeleteResponse.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/simple/SimpleSearchTests.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/benchmark/stress/SingleThreadIndexingStress.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/percolate/TransportPercolateAction.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryThenFetchAction.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node/stats/RestNodesStatsAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/support/nodes/NodesOperationRequestBuilder.java'}, {'lines': 42, 'insertions': 21, 'deletions': 21, 'filePath': 'src/test/java/org/elasticsearch/test/integration/percolator/RecoveryPercolatorTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerRequest.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterGetSettingsAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/indices/IndicesExistsRequest.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequestBuilder.java'}, {'lines': 24, 'insertions': 4, 'deletions': 20, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/QueryExplanation.java'}, {'lines': 53, 'insertions': 9, 'deletions': 44, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/PeerRecoveryStatus.java'}, {'lines': 5, 'insertions': 2, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/mapping/UpdateMappingTests.java'}, {'lines': 11, 'insertions': 4, 'deletions': 7, 'filePath': 'src/test/java/org/elasticsearch/test/integration/similarity/SimilarityTests.java'}, {'lines': 136, 'insertions': 68, 'deletions': 68, 'filePath': 'src/test/java/org/elasticsearch/test/integration/gateway/fs/AbstractSimpleIndexGatewayTests.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ShardClearIndicesCacheRequest.java'}, {'lines': 27, 'insertions': 2, 'deletions': 25, 'filePath': 'src/main/java/org/elasticsearch/action/search/MultiSearchResponse.java'}, {'lines': 50, 'insertions': 25, 'deletions': 25, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsRequest.java'}, {'lines': 62, 'insertions': 31, 'deletions': 31, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/gateway/snapshot/TransportGatewaySnapshotAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/types/TransportTypesExistsAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/delete/DeleteIndexTemplateRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/explain/ExplainSourceBuilder.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryRequest.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/rest/action/bulk/RestBulkAction.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/main/java/org/elasticsearch/action/delete/index/IndexDeleteRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/integration/document/AliasedIndexDocumentActionsTests.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/get/TransportMultiGetAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/IndexReplicationOperationRequest.java'}, {'lines': 99, 'insertions': 27, 'deletions': 72, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/CommonStats.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/percolate/RestPercolateAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequest.java'}, {'lines': 28, 'insertions': 12, 'deletions': 16, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/segments/IndicesSegmentResponse.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/delete/index/ShardDeleteRequest.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/scriptfilter/ScriptFilterSearchTests.java'}, {'lines': 111, 'insertions': 14, 'deletions': 97, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/ShardStatus.java'}, {'lines': 230, 'insertions': 115, 'deletions': 115, 'filePath': 'src/test/java/org/elasticsearch/test/integration/document/DocumentActionsTests.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/types/TypesExistsRequest.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/support/nodes/NodesOperationRequest.java'}, {'lines': 246, 'insertions': 123, 'deletions': 123, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/query/SimpleQueryTests.java'}, {'lines': 34, 'insertions': 17, 'deletions': 17, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/put/TransportPutWarmerAction.java'}, {'lines': 95, 'insertions': 25, 'deletions': 70, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/IndexStatus.java'}, {'lines': 54, 'insertions': 27, 'deletions': 27, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodesStatsResponse.java'}, {'lines': 74, 'insertions': 37, 'deletions': 37, 'filePath': 'src/test/java/org/elasticsearch/test/unit/action/search/MultiSearchRequestTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/test/java/org/elasticsearch/test/stress/search1/Search1StressTest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/LocalNodeMasterListenerTests.java'}, {'lines': 334, 'insertions': 167, 'deletions': 167, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/highlight/HighlighterSearchTests.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/template/SimpleIndexTemplateTests.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequest.java'}, {'lines': 91, 'insertions': 16, 'deletions': 75, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthResponse.java'}, {'lines': 108, 'insertions': 54, 'deletions': 54, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indexlifecycle/IndexLifecycleActionTests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/geo/GeoDistanceSearchBenchmark.java'}, {'lines': 93, 'insertions': 9, 'deletions': 84, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodeStats.java'}, {'lines': 36, 'insertions': 6, 'deletions': 30, 'filePath': 'src/main/java/org/elasticsearch/index/search/stats/SearchStats.java'}, {'lines': 30, 'insertions': 1, 'deletions': 29, 'filePath': 'src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationResponse.java'}, {'lines': 12, 'insertions': 2, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownResponse.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/instance/InstanceShardOperationRequest.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsRequest.java'}, {'lines': 140, 'insertions': 70, 'deletions': 70, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/fields/SearchFieldsTests.java'}, {'lines': 118, 'insertions': 59, 'deletions': 59, 'filePath': 'src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequest.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/scan/SearchScanTests.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/support/RestActions.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/TransportShardReplicationOperationAction.java'}, {'lines': 116, 'insertions': 58, 'deletions': 58, 'filePath': 'src/test/java/org/elasticsearch/test/integration/update/UpdateTests.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/river/routing/RiversRouter.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute/RestClusterRerouteAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchCountAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/state/RestClusterStateAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/close/TransportCloseIndexAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchQueryThenFetchAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/TransportActionNodeProxy.java'}, {'lines': 106, 'insertions': 53, 'deletions': 53, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/stats/RestIndicesStatsAction.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/count/ShardCountRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/indices/ttl/IndicesTTLService.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/rest/action/get/RestHeadAction.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/ShardReplicationOperationRequestBuilder.java'}, {'lines': 54, 'insertions': 27, 'deletions': 27, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java'}, {'lines': 71, 'insertions': 12, 'deletions': 59, 'filePath': 'src/main/java/org/elasticsearch/monitor/fs/FsStats.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/put/RestPutMappingAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/search/MultiSearchRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/basic/SearchWhileCreatingIndexTests.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/segments/TransportIndicesSegmentsAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryAndFetchAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/get/MultiGetShardRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/delete/RestDeleteWarmerAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodeHotThreads.java'}, {'lines': 262, 'insertions': 131, 'deletions': 131, 'filePath': 'src/test/java/org/elasticsearch/test/integration/aliases/IndexAliasesTests.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/allocation/ClusterRerouteTests.java'}, {'lines': 54, 'insertions': 26, 'deletions': 28, 'filePath': 'src/test/java/org/elasticsearch/test/integration/mlt/MoreLikeThisActionTests.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/gateway/local/state/shards/TransportNodesListGatewayStartedShards.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollQueryAndFetchAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/allocation/FilteringAllocationTests.java'}, {'lines': 15, 'insertions': 2, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/ShardStats.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/search/TransportMultiSearchAction.java'}, {'lines': 4, 'insertions': 0, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteResponse.java'}, {'lines': 37, 'insertions': 6, 'deletions': 31, 'filePath': 'src/main/java/org/elasticsearch/index/indexing/IndexingStats.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/NodesShutdownRequestBuilder.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/cache/clear/TransportClearIndicesCacheAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/stress/get/GetStressTest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/gateway/blobstore/BlobReuseExistingGatewayAllocator.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/shard/SingleShardOperationRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteRequestBuilder.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/stats/SearchStatsTests.java'}, {'lines': 76, 'insertions': 38, 'deletions': 38, 'filePath': 'src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/test/java/org/elasticsearch/test/stress/manyindices/ManyIndicesStressTest.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/put/PutMappingRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/indices/TransportIndicesExistsAction.java'}, {'lines': 144, 'insertions': 72, 'deletions': 72, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/TransportShardBulkAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/support/master/MasterNodeOperationRequestBuilder.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/nodes/TransportNodesOperationAction.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/facet/QueryFilterFacetSearchBenchmark.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/segments/RestIndicesSegmentsAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/status/RestIndicesStatusAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/create/TransportCreateIndexAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestGetSettingsAction.java'}, {'lines': 18, 'insertions': 2, 'deletions': 16, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryResponse.java'}, {'lines': 28, 'insertions': 0, 'deletions': 28, 'filePath': 'src/main/java/org/elasticsearch/threadpool/ThreadPoolStats.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/search/RestSearchScrollAction.java'}, {'lines': 56, 'insertions': 16, 'deletions': 40, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeResponse.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/BulkRequest.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequest.java'}, {'lines': 20, 'insertions': 2, 'deletions': 18, 'filePath': 'src/main/java/org/elasticsearch/action/explain/ExplainResponse.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/store/IndicesStoreTests.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequest.java'}, {'lines': 52, 'insertions': 26, 'deletions': 26, 'filePath': 'src/test/java/org/elasticsearch/test/integration/gateway/local/QuorumLocalGatewayTests.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/support/broadcast/TransportBroadcastOperationAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/instance/TransportInstanceSingleOperationAction.java'}, {'lines': 144, 'insertions': 72, 'deletions': 72, 'filePath': 'src/test/java/org/elasticsearch/test/integration/gateway/local/LocalGatewayIndexStateTests.java'}, {'lines': 79, 'insertions': 11, 'deletions': 68, 'filePath': 'src/main/java/org/elasticsearch/action/get/GetResponse.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/get/TransportGetAction.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/test/java/org/elasticsearch/test/integration/recovery/RelocationTests.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexRequest.java'}, {'lines': 82, 'insertions': 41, 'deletions': 41, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/stats/SimpleIndexStatsTests.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/msearch/SimpleMultiSearchTests.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/settings/ClusterUpdateSettingsRequestBuilder.java'}, {'lines': 612, 'insertions': 306, 'deletions': 306, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/child/SimpleChildQuerySearchTests.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/optimize/TransportOptimizeAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/main/RestMainAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/template/delete/RestDeleteIndexTemplateAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/rest/action/search/RestSearchAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown/TransportNodesShutdownAction.java'}, {'lines': 56, 'insertions': 28, 'deletions': 28, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoResponse.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/delete/TransportDeleteIndexTemplateAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/open/RestOpenIndexAction.java'}, {'lines': 82, 'insertions': 41, 'deletions': 41, 'filePath': 'src/test/java/org/elasticsearch/test/integration/routing/SimpleRoutingTests.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/count/ShardCountResponse.java'}, {'lines': 66, 'insertions': 33, 'deletions': 33, 'filePath': 'src/test/java/org/elasticsearch/test/integration/broadcast/BroadcastActionsTests.java'}, {'lines': 42, 'insertions': 7, 'deletions': 35, 'filePath': 'src/main/java/org/elasticsearch/index/cache/CacheStats.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequest.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/DeleteMappingRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/timeout/SearchTimeoutTests.java'}, {'lines': 80, 'insertions': 40, 'deletions': 40, 'filePath': 'src/test/java/org/elasticsearch/test/integration/recovery/SimpleRecoveryTests.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/IndicesReplicationOperationRequest.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/flush/ShardFlushRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/gateway/local/state/meta/TransportNodesListGatewayMetaState.java'}, {'lines': 78, 'insertions': 39, 'deletions': 39, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/create/CreateIndexRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/index/search/shape/ShapeFetchService.java'}, {'lines': 114, 'insertions': 57, 'deletions': 57, 'filePath': 'src/test/java/org/elasticsearch/test/integration/nested/SimpleNestedTests.java'}, {'lines': 32, 'insertions': 16, 'deletions': 16, 'filePath': 'src/main/java/org/elasticsearch/rest/action/delete/RestDeleteAction.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/delete/index/TransportShardDeleteAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/optimize/OptimizeRequestBuilder.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryRequestBuilder.java'}, {'lines': 40, 'insertions': 20, 'deletions': 20, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequestBuilder.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/SuggestSearchBenchMark.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/ValidateQueryRequest.java'}, {'lines': 6, 'insertions': 1, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/indices/IndicesExistsResponse.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/put/RestPutWarmerAction.java'}, {'lines': 6, 'insertions': 1, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/put/PutIndexTemplateResponse.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/mapping/delete/DeleteMappingRequestBuilder.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/percolate/PercolateRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/alias/TransportIndicesAliasesAction.java'}, {'lines': 80, 'insertions': 40, 'deletions': 40, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/MinimumMasterNodesTests.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/TransportDeleteWarmerAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/delete/index/TransportIndexDeleteAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/allocation/AwarenessAllocationTests.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/mapping/get/RestGetMappingAction.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/client/Requests.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/delete/DeleteRequestBuilder.java'}, {'lines': 34, 'insertions': 17, 'deletions': 17, 'filePath': 'src/main/java/org/elasticsearch/action/get/GetRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/open/TransportOpenIndexAction.java'}, {'lines': 34, 'insertions': 17, 'deletions': 17, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node/info/RestNodesInfoAction.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/search/SearchScrollRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/matchedfilters/MatchedFiltersTests.java'}, {'lines': 34, 'insertions': 17, 'deletions': 17, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchScrollScanAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexRequest.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/search/count/CountSearchResult.java'}, {'lines': 452, 'insertions': 226, 'deletions': 226, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/sort/SimpleSortTests.java'}, {'lines': 18, 'insertions': 5, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/segments/IndexSegments.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStatsRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/ShardValidateQueryRequest.java'}, {'lines': 154, 'insertions': 77, 'deletions': 77, 'filePath': 'src/test/java/org/elasticsearch/test/integration/routing/AliasRoutingTests.java'}, {'lines': 98, 'insertions': 49, 'deletions': 49, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/health/TransportClusterHealthAction.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/count/TransportCountAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/delete/DeleteIndexRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/search/internal/InternalScrollSearchRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/BulkShardResponse.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/exists/types/RestTypesExistsAction.java'}, {'lines': 10, 'insertions': 1, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/http/HttpStats.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/stress/indexing/BulkIndexingStressTest.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/action/search/TransportSearchAction.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/test/java/org/elasticsearch/test/integration/timestamp/SimpleTimestampTests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/instance/InstanceShardOperationRequestBuilder.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/mapping/SimpleDeleteMappingTests.java'}, {'lines': 32, 'insertions': 16, 'deletions': 16, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoRequest.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/validate/query/TransportValidateQueryAction.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/analyze/AnalyzeActionTests.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/optimize/RestOptimizeAction.java'}, {'lines': 110, 'insertions': 55, 'deletions': 55, 'filePath': 'src/main/java/org/elasticsearch/action/search/SearchRequest.java'}, {'lines': 234, 'insertions': 117, 'deletions': 117, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/facet/SimpleFacetsTests.java'}, {'lines': 28, 'insertions': 7, 'deletions': 21, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/BulkResponse.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/indices/memory/IndexingMemoryController.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/warmer/get/RestGetWarmerAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/restart/NodesRestartRequestBuilder.java'}, {'lines': 48, 'insertions': 24, 'deletions': 24, 'filePath': 'src/test/java/org/elasticsearch/test/integration/versioning/SimpleVersioningTests.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/ActionRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/TransportIndexDeleteByQueryAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/exists/indices/RestIndicesExistsAction.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/optimize/ShardOptimizeRequest.java'}, {'lines': 55, 'insertions': 8, 'deletions': 47, 'filePath': 'src/main/java/org/elasticsearch/index/get/GetResult.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/IndicesReplicationOperationRequestBuilder.java'}, {'lines': 27, 'insertions': 3, 'deletions': 24, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/DocsStatus.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/search/TransportSearchScrollAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/flush/TransportFlushAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/index/refresh/RefreshStats.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/settings/RestClusterUpdateSettingsAction.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/geo/GeoDistanceFacetTests.java'}, {'lines': 34, 'insertions': 17, 'deletions': 17, 'filePath': 'src/main/java/org/elasticsearch/rest/action/explain/RestExplainAction.java'}, {'lines': 12, 'insertions': 2, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/support/broadcast/BroadcastShardOperationResponse.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/delete/DeleteIndexTemplateRequestBuilder.java'}, {'lines': 32, 'insertions': 2, 'deletions': 30, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/IndexDeleteByQueryResponse.java'}, {'lines': 50, 'insertions': 11, 'deletions': 39, 'filePath': 'src/main/java/org/elasticsearch/action/get/MultiGetResponse.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/stats/TransportNodesStatsAction.java'}, {'lines': 176, 'insertions': 88, 'deletions': 88, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/settings/UpdateNumberOfReplicasTests.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/search/SearchScrollRequestBuilder.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/gateway/local/LocalGatewayAllocator.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/alias/IndicesAliasesRequestBuilder.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/geo/GeoShapeIntegrationTests.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/rest/action/get/RestGetAction.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/SpecificMasterNodesTests.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/get/TransportShardMultiGetAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/test/java/org/elasticsearch/test/stress/search1/ParentChildStressTest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/BulkItemRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/put/PutWarmerRequestBuilder.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/search/type/TransportSearchDfsQueryThenFetchAction.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/custom/TransportSingleCustomOperationAction.java'}, {'lines': 51, 'insertions': 6, 'deletions': 45, 'filePath': 'src/main/java/org/elasticsearch/action/update/UpdateResponse.java'}, {'lines': 72, 'insertions': 36, 'deletions': 36, 'filePath': 'src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/analyze/RestAnalyzeAction.java'}, {'lines': 6, 'insertions': 1, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/close/CloseIndexResponse.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/template/get/RestGetIndexTemplateAction.java'}, {'lines': 35, 'insertions': 18, 'deletions': 17, 'filePath': 'src/main/java/org/elasticsearch/action/explain/ExplainRequest.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/stats/NodesStatsRequestBuilder.java'}, {'lines': 18, 'insertions': 9, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/health/ClusterHealthRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/refresh/TransportRefreshAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/ActionRequestBuilder.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/test/java/org/elasticsearch/test/integration/ttl/SimpleTTLTests.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/test/java/org/elasticsearch/benchmark/search/facet/HistogramFacetSearchBenchmark.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/TransportIndicesStatusAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/benchmark/percolator/SinglePercolatorStressBenchmark.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/monitor/fs/FsService.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/settings/UpdateSettingsRequestBuilder.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/test/java/org/elasticsearch/test/stress/indexing/ConcurrentIndexingVersioningTest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/support/broadcast/BroadcastShardOperationRequest.java'}, {'lines': 14, 'insertions': 3, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/segments/ShardSegments.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/wamer/LocalGatewayIndicesWarmerTests.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/info/NodesInfoRequestBuilder.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/cache/ClearCacheTests.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/stress/search1/ConcurrentSearchSerializationTests.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/bulk/BulkShardRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/template/put/RestPutIndexTemplateAction.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/exists/types/TypesExistsTests.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/integration/discovery/DiscoveryTests.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/settings/RestUpdateSettingsAction.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/TransportShardDeleteByQueryAction.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/settings/UpdateSettingsRequest.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/compress/SearchSourceCompressTests.java'}, {'lines': 140, 'insertions': 70, 'deletions': 70, 'filePath': 'src/main/java/org/elasticsearch/action/update/TransportUpdateAction.java'}, {'lines': 58, 'insertions': 29, 'deletions': 29, 'filePath': 'src/main/java/org/elasticsearch/action/search/SearchRequestBuilder.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/SimpleDataNodesTests.java'}, {'lines': 190, 'insertions': 95, 'deletions': 95, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/basic/TransportTwoNodesSearchTests.java'}, {'lines': 44, 'insertions': 22, 'deletions': 22, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/basic/TransportSearchFailuresTests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/close/RestCloseIndexAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/single/shard/SingleShardOperationRequest.java'}, {'lines': 24, 'insertions': 12, 'deletions': 12, 'filePath': 'src/main/java/org/elasticsearch/action/explain/ExplainRequestBuilder.java'}, {'lines': 12, 'insertions': 2, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateResponse.java'}, {'lines': 98, 'insertions': 49, 'deletions': 49, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/geo/GeoDistanceTests.java'}, {'lines': 176, 'insertions': 84, 'deletions': 92, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/status/IndicesStatusResponse.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/restart/NodesRestartRequest.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/support/TransportAction.java'}, {'lines': 14, 'insertions': 7, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/state/ClusterStateRequestBuilder.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/support/broadcast/BroadcastOperationRequest.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads/NodesHotThreadsRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/settings/TransportUpdateSettingsAction.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/state/TransportClusterStateAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/cluster/settings/TransportClusterUpdateSettingsAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/warmer/delete/DeleteWarmerRequestBuilder.java'}, {'lines': 6, 'insertions': 1, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/open/OpenIndexResponse.java'}, {'lines': 36, 'insertions': 18, 'deletions': 18, 'filePath': 'src/main/java/org/elasticsearch/action/get/MultiGetRequest.java'}, {'lines': 180, 'insertions': 90, 'deletions': 90, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/suggest/SuggestSearchTests.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/delete/RestDeleteIndexAction.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/test/java/org/elasticsearch/test/unit/action/bulk/BulkRequestTests.java'}, {'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node/hotthreads/RestNodesHotThreadsAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/refresh/RestRefreshAction.java'}, {'lines': 38, 'insertions': 19, 'deletions': 19, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/validate/query/RestValidateQueryAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/put/TransportPutIndexTemplateAction.java'}, {'lines': 6, 'insertions': 1, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/template/delete/DeleteIndexTemplateResponse.java'}, {'lines': 36, 'insertions': 18, 'deletions': 18, 'filePath': 'src/main/java/org/elasticsearch/action/percolate/PercolateRequest.java'}, {'lines': 14, 'insertions': 1, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/index/get/GetField.java'}, {'lines': 18, 'insertions': 8, 'deletions': 10, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/rescore/QueryRescorerTests.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/test/java/org/elasticsearch/test/integration/indices/state/SimpleIndexStateTests.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/get/GetRequestBuilder.java'}, {'lines': 28, 'insertions': 14, 'deletions': 14, 'filePath': 'src/main/java/org/elasticsearch/rest/action/deletebyquery/RestDeleteByQueryAction.java'}, {'lines': 290, 'insertions': 145, 'deletions': 145, 'filePath': 'src/test/java/org/elasticsearch/test/integration/search/customscore/CustomScoreSearchTests.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node/shutdown/RestNodesShutdownAction.java'}, {'lines': 20, 'insertions': 10, 'deletions': 10, 'filePath': 'src/main/java/org/elasticsearch/rest/action/count/RestCountAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/search/builder/SearchSourceBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/integration/AbstractNodesTests.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/action/count/CountRequestBuilder.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/exists/indices/IndicesExistsRequestBuilder.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/TransportDeleteByQueryAction.java'}, {'lines': 11, 'insertions': 2, 'deletions': 9, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/DeleteByQueryResponse.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/bulk/udp/BulkUdpService.java'}, {'lines': 56, 'insertions': 20, 'deletions': 36, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/stats/IndicesStats.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/delete/index/ShardDeleteResponse.java'}, {'lines': 10, 'insertions': 5, 'deletions': 5, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/cache/clear/ClearIndicesCacheRequestBuilder.java'}, {'lines': 32, 'insertions': 16, 'deletions': 16, 'filePath': 'src/test/java/org/elasticsearch/test/integration/nodesinfo/SimpleNodesInfoTests.java'}, {'lines': 8, 'insertions': 0, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/index/shard/DocsStats.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/flush/FlushRequestBuilder.java'}, {'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/gateway/snapshot/RestGatewaySnapshotAction.java'}, {'lines': 6, 'insertions': 3, 'deletions': 3, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/TransportIndicesReplicationOperationAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/replication/TransportIndexReplicationOperationAction.java'}, {'lines': 8, 'insertions': 4, 'deletions': 4, 'filePath': 'src/main/java/org/elasticsearch/action/support/master/TransportMasterNodeOperationAction.java'}, {'lines': 46, 'insertions': 23, 'deletions': 23, 'filePath': 'src/main/java/org/elasticsearch/rest/action/index/RestIndexAction.java'}, {'lines': 26, 'insertions': 13, 'deletions': 13, 'filePath': 'src/main/java/org/elasticsearch/action/deletebyquery/ShardDeleteByQueryRequest.java'}, {'lines': 22, 'insertions': 11, 'deletions': 11, 'filePath': 'src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeRequest.java'}, {'lines': 48, 'insertions': 24, 'deletions': 24, 'filePath': 'src/main/java/org/elasticsearch/action/mlt/MoreLikeThisRequestBuilder.java'}, {'lines': 16, 'insertions': 8, 'deletions': 8, 'filePath': 'src/main/java/org/elasticsearch/rest/action/admin/indices/cache/clear/RestClearIndicesCacheAction.java'}, {'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/integration/cluster/NoMasterNodeTests.java'}], 'spoonStatsSkippedReason': 'tooManyFiles', 'commitParents': ['ac2e6a3a4de751aeac61e7da9f0991bd1fc61749'], 'commitUser': 'dadoonet', 'commitDateTime': '2013-02-18 11:09:32', 'commitHash': 'cc83c2f848be69a77f1275fe1ff5363dcdd4c955', 'commitSpoonAstDiffStats': [], 'nameRev': 'cc83c2f848be69a77f1275fe1ff5363dcdd4c955 tags/v0.90.0.Beta1~44', 'commitGHEventType': 'closed', 'commitMessage': 'refactoring getter/setters\n\nFixes #2657\n', 'authoredDateTime': '2013-02-18 16:50:49'}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '56f393d6d1621e92b31457d4dfaa226d04d9917b', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'e1543faaa442a3e11695634975a5ba775cb62055', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '1b4a1748b2384d0dd539f58c8e1792b1b46f1d19', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '504bf039f1a19b5576eacbdf42f18de0b04733d6', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '9d8f503f1da45059bb5cdc31df4eece485869710', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '8ef4400a53186079f727c80c81936126ebb6df7a', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '78f0589e43afc7792f56687185e21694911798ae', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'cfe0d28e96bc0fea2bd89d8505f7126f368b3308', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '87b0278d8ad17c33b30c0c57109b357601756b5d', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '6aff7094d30a44ba3969e19bb9e4124c6e2eb040', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '7c0050082c3db7f95a1535fc15b5d395d8a3225e', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '6a558ec06a00577f33c5edfba3b36faed2d86126', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '1c5dd7e80e54e9d1a7e3fcadb8b2f6f29759f8ec', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'bc39582c55f4b8dce1e1acaf8390e6d2c2e8854e', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '2f82d997cfdf5d37bd917a2d178fdb9402fbd442', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '78451c1dc8e93c21bbd2ee049963de64181a62c6', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': 'ef8d19f701a2eee84e5972d3f9c42e7c102d7ef1', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '9c73c7bca5d38b256cc5209c23ca7a68ce9733a7', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '6747085c5fe5e6e7a693dca4c5d1f0874f094f2c', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '8e30d3cd825402e4eee698722cb687dc3c0b9a54', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '44b9c01c13717f95a7fd57d260f0f61fe90dc449', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '21c6b4846f5513ce3b0e9f0c0bcf4950d5372276', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '12fd9214f4ae49f5e429073968c45448c07910f9', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [], 'spoonStatsSkippedReason': '', 'commitParents': [], 'commitUser': 'dadoonet', 'commitDateTime': '', 'commitHash': '4b172976006f43baed5aff699e16cd52deb07914', 'commitSpoonAstDiffStats': [], 'nameRev': '', 'commitGHEventType': 'referenced', 'commitMessage': '', 'authoredDateTime': ''}, {'commitGitStats': [{'lines': 12, 'insertions': 6, 'deletions': 6, 'filePath': 'docs/java-api/search.asciidoc'}], 'spoonStatsSkippedReason': '', 'commitParents': ['e1079f92c9f5b5acd8b5fa2607c758bbce354479'], 'commitUser': 'spinscale', 'commitDateTime': '2013-10-06 21:20:39', 'commitHash': '8aa18146cffdca7fd867f5a73535fe3c5f5f1543', 'commitSpoonAstDiffStats': [], 'nameRev': '8aa18146cffdca7fd867f5a73535fe3c5f5f1543 tags/v0.90.6~182', 'commitGHEventType': 'referenced', 'commitMessage': 'Changed documentation to use getter notation\n\nUpdated some java documentation to reflect the use of getters instead of calling methods based on field names.\n\nRelates to #2657\n', 'authoredDateTime': '2013-10-06 21:18:43'}]",https://github.com/elastic/elasticsearch/issues/2657,1.0002777777777778,"['>breaking', 'v0.90.0.Beta1']",Refactoring accessors using only getters and setters,4.0,"['org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest.getLocal()', 'org.elasticsearch.rest.action.admin.cluster.health.RestClusterHealthAction.handleRequest(org.elasticsearch.rest.action.admin.cluster.health.RestRequest,org.elasticsearch.rest.action.admin.cluster.health.RestChannel)']","['cc83c2f848be69a77f1275fe1ff5363dcdd4c955', 'a234e45b59338e77c39b0f914642674a27834929', '4c493ac71de7382f3ecda0b435c9ce2cc31ef2b2', 'f0cf97c0ac31c309bcc39f54eb90d62c01a7b21b']",,"['src/main/java/org/elasticsearch/rest/action/admin/indices/optimize', 'src/main/java/org/elasticsearch/action/update', 'src/main/java/org/elasticsearch/rest/action/admin/indices/cache', 'src/main/java/org/elasticsearch/action/admin/cluster/settings', 'src/main/java/org/elasticsearch/rest/action/search', 'src/main/java/org/elasticsearch/index/cache', 'src/main/java/org/elasticsearch/client/transport', 'src/main/java/org/elasticsearch/rest/action/admin/cluster/node', 'src/main/java/org/elasticsearch/action/admin/indices/gateway/snapshot', 'src/main/java/org/elasticsearch/rest/action/admin/indices/gateway', 'src/main/java/org/elasticsearch/action/support/single/shard', 'src/main/java/org/elasticsearch/rest/action/get', 'src/main/java/org/elasticsearch/action/admin/indices/exists/types', 'src/main/java/org/elasticsearch/search/builder', 'src/main/java/org/elasticsearch/action/admin/indices/analyze', 'src/main/java/org/elasticsearch/rest/action/explain', 'src/main/java/org/elasticsearch/rest/action/percolate', 'src/main/java/org/elasticsearch/action/delete', 'src/main/java/org/elasticsearch/gateway/local', 'src/main/java/org/elasticsearch/action/admin/indices/create', 'src/main/java/org/elasticsearch/threadpool', 'src/main/java/org/elasticsearch/rest/action/deletebyquery', 'src/main/java/org/elasticsearch/index/shard', 'src/main/java/org/elasticsearch/rest/action/admin/indices/warmer', 'src/main/java/org/elasticsearch/action/admin/indices/refresh', 'src/main/java/org/elasticsearch/action', 'src/main/java/org/elasticsearch/action/admin/indices/open', 'src/main/java/org/elasticsearch/action/admin/indices/delete', 'src/main/java/org/elasticsearch/indices/memory', 'src/main/java/org/elasticsearch/rest/action/admin/indices/open', 'src/main/java/org/elasticsearch/rest/action/count', 'src/main/java/org/elasticsearch/action/admin/indices/cache/clear', 'src/main/java/org/elasticsearch/action/admin/cluster/node/info', 'src/main/java/org/elasticsearch/rest/action/admin/indices/alias', 'src/main/java/org/elasticsearch/action/admin/cluster/node/hotthreads', 'src/main/java/org/elasticsearch/rest/action/admin/indices/stats', 'src/main/java/org/elasticsearch/rest/action/admin/indices/validate', 'src/main/java/org/elasticsearch/action/admin/cluster/state', 'src/main/java/org/elasticsearch/river/routing', 'src/main/java/org/elasticsearch/action/bulk', 'src/main/java/org/elasticsearch/action/admin/indices/mapping/put', 'src/main/java/org/elasticsearch/action/deletebyquery', 'src/main/java/org/elasticsearch/rest/action/admin/indices/create', 'src/main/java/org/elasticsearch/bulk/udp', 'src/main/java/org/elasticsearch/index/indexing', 'src/main/java/org/elasticsearch/action/admin/indices/optimize', 'src/main/java/org/elasticsearch/action/support/broadcast', 'src/main/java/org/elasticsearch/gateway/local/state/shards', 'docs/java-api/search.asciidoc', 'src/main/java/org/elasticsearch/rest/action/admin/indices/template', 'src/main/java/org/elasticsearch/rest/action/admin/indices/status', 'src/main/java/org/elasticsearch/action/percolate', 'src/main/java/org/elasticsearch/rest/action/support', 'src/main/java/org/elasticsearch/action/search/type', 'src/main/java/org/elasticsearch/action/admin/indices/validate/query', 'src/main/java/org/elasticsearch/rest/action/admin/indices/settings', 'src/main/java/org/elasticsearch/rest/action/index', 'src/main/java/org/elasticsearch/index/flush', 'src/main/java/org/elasticsearch/rest/action/mlt', 'src/main/java/org/elasticsearch/index/search/stats', 'src/main/java/org/elasticsearch/search/count', 'src/main/java/org/elasticsearch/action/admin/indices/template/delete', 'src/main/java/org/elasticsearch/rest/action/admin/indices/delete', 'src/main/java/org/elasticsearch/action/admin/cluster/node/restart', 'src/main/java/org/elasticsearch/rest/action/admin/indices/segments', 'src/main/java/org/elasticsearch/gateway/local/state/meta', 'src/main/java/org/elasticsearch/rest/action/admin/cluster/reroute', 'src/main/java/org/elasticsearch/rest/action/bulk', 'src/main/java/org/elasticsearch/action/support/master', 'src/main/java/org/elasticsearch/rest/action/admin/cluster/health', 'src/main/java/org/elasticsearch/action/admin/indices/mapping/delete', 'src/main/java/org/elasticsearch/action/admin/indices/template/put', 'src/main/java/org/elasticsearch/rest/action/update', 'src/main/java/org/elasticsearch/rest/action/admin/cluster/state', 'src/main/java/org/elasticsearch/action/support/nodes', 'src/main/java/org/elasticsearch/rest/action/admin/indices/mapping', 'src/main/java/org/elasticsearch/rest/action/admin/indices/close', 'src/main/java/org/elasticsearch/monitor/fs', 'src/main/java/org/elasticsearch/action/support', 'src/main/java/org/elasticsearch/action/support/replication', 'src/main/java/org/elasticsearch/action/support/single/custom', 'src/main/java/org/elasticsearch/action/admin/indices/settings', 'src/main/java/org/elasticsearch/action/delete/index', 'src/main/java/org/elasticsearch/action/admin/cluster/reroute', 'src/main/java/org/elasticsearch/index/merge', 'src/main/java/org/elasticsearch/gateway/blobstore', 'src/main/java/org/elasticsearch/action/index', 'src/main/java/org/elasticsearch/indices/ttl', 'src/main/java/org/elasticsearch/rest/action/admin/indices/refresh', 'src/main/java/org/elasticsearch/client', 'src/main/java/org/elasticsearch/index/search/shape', 'src/main/java/org/elasticsearch/indices/cache/filter/terms', 'src/main/java/org/elasticsearch/action/admin/cluster/node/stats', 'src/main/java/org/elasticsearch/action/admin/indices/flush', 'src/main/java/org/elasticsearch/action/admin/indices/close', 'src/main/java/org/elasticsearch/action/admin/indices/warmer/delete', 'src/main/java/org/elasticsearch/action/admin/indices/status', 'src/main/java/org/elasticsearch/action/support/single/instance', 'src/main/java/org/elasticsearch/action/get', 'src/main/java/org/elasticsearch/rest/action/admin/cluster/settings', 'src/main/java/org/elasticsearch/action/admin/cluster/node/shutdown', 'src/main/java/org/elasticsearch/action/admin/indices/stats', 'src/main/java/org/elasticsearch/rest/action/delete', 'src/main/java/org/elasticsearch/http', 'src/main/java/org/elasticsearch/search/internal', 'src/main/java/org/elasticsearch/rest/action/admin/indices/flush', 'src/main/java/org/elasticsearch/action/admin/indices/warmer/put', 'src/main/java/org/elasticsearch/action/mlt', 'src/main/java/org/elasticsearch/action/admin/indices/segments', 'src/main/java/org/elasticsearch/action/explain', 'src/main/java/org/elasticsearch/index/refresh', 'src/main/java/org/elasticsearch/rest/action/admin/indices/analyze', 'src/main/java/org/elasticsearch/action/count', 'src/main/java/org/elasticsearch/river', 'src/main/java/org/elasticsearch/indices/store', 'src/main/java/org/elasticsearch/action/admin/cluster/health', 'src/main/java/org/elasticsearch/rest/action/main', 'src/main/java/org/elasticsearch/index/get', 'src/main/java/org/elasticsearch/action/admin/indices/alias', 'src/main/java/org/elasticsearch/action/admin/indices/exists/indices', 'src/main/java/org/elasticsearch/rest/action/admin/indices/exists', 'src/main/java/org/elasticsearch/action/search']",5583.0,7224.0,12807.0,351.0,2.0,2.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,79.0,0.0,0.0,elasticsearch
21365,2015-07-13 18:13:10,hulu1522,"ENV:
- ES = 1.4.4
- OS = SmartOS
- JDK = OpenJDK 7
- RAM = 16GB

We are running into a system failure because the PermGen cache is filling up.  Our systems are deployed with Chef and the chef-client runs about every thirty minutes.  The errors are happening after sitting for a few days.  Every time Chef runs it will copy the scripts from a repo to the scripts folder, changed or not.  ES will always recompile these scripts because the timestamp on the files has changed.  Eventually the PermGen will fill up and crash the system (even with no indexing or searching happening).

```
[2015-07-12 02:31:33,382][INFO ][script                   ] [S-10.129.22.15] compiling script file [/opt/local/etc/elasticsearch/scripts/dateFormat.groovy]
[2015-07-12 02:31:33,385][INFO ][script                   ] [S-10.129.22.15] compiling script file [/opt/local/etc/elasticsearch/scripts/inbound_group_duration.groovy]
[2015-07-12 02:31:33,388][INFO ][script                   ] [S-10.129.22.15] compiling script file [/opt/local/etc/elasticsearch/scripts/inbound_group_duration_doesNotEqualFilter.groovy]
[2015-07-12 02:31:33,391][INFO ][script                   ] [S-10.129.22.15] compiling script file [/opt/local/etc/elasticsearch/scripts/inbound_group_duration_equalsFilter.groovy]
[2015-07-12 02:31:33,394][INFO ][script                   ] [S-10.129.22.15] compiling script file [/opt/local/etc/elasticsearch/scripts/inbound_group_duration_greaterThanEqualFilter.groovy]
[2015-07-12 02:31:35,718][INFO ][script                   ] [S-10.129.22.15] compiling script file [/opt/local/etc/elasticsearch/scripts/inbound_group_duration_greaterThanFilter.groovy]
[2015-07-12 02:32:12,053][WARN ][script                   ] [S-10.129.22.15] failed to load/compile script [inbound_group_duration_greaterThanFilter]
org.elasticsearch.script.groovy.GroovyScriptCompilationException: OutOfMemoryError[PermGen space]
        at org.elasticsearch.script.groovy.GroovyScriptEngineService.compile(GroovyScriptEngineService.java:153)
        at org.elasticsearch.script.ScriptService$ScriptChangesListener.onFileInit(ScriptService.java:588)
        at org.elasticsearch.script.ScriptService$ScriptChangesListener.onFileChanged(ScriptService.java:621)
        at org.elasticsearch.watcher.FileWatcher$FileObserver.onFileChanged(FileWatcher.java:271)
        at org.elasticsearch.watcher.FileWatcher$FileObserver.checkAndNotify(FileWatcher.java:122)
        at org.elasticsearch.watcher.FileWatcher$FileObserver.updateChildren(FileWatcher.java:207)
        at org.elasticsearch.watcher.FileWatcher$FileObserver.checkAndNotify(FileWatcher.java:108)
        at org.elasticsearch.watcher.FileWatcher.doCheckAndNotify(FileWatcher.java:62)
        at org.elasticsearch.watcher.AbstractResourceWatcher.checkAndNotify(AbstractResourceWatcher.java:43)
        at org.elasticsearch.watcher.ResourceWatcherService$ResourceMonitor.run(ResourceWatcherService.java:180)
        at org.elasticsearch.threadpool.ThreadPool$LoggingRunnable.run(ThreadPool.java:490)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
```

This is the GC that was performed just before the crash:

```
[2015-07-12 02:00:18,361][INFO ][monitor.jvm              ] [S-10.129.22.15] [gc][old][204306][1] duration [5.2s], collections [1]/[6s], total [5.2s]/[5.2s], memory [5.2gb]->[1.8g
b]/[7.6gb], all_pools {[young] [2.5gb]->[20.2mb]/[2.5gb]}{[survivor] [2mb]->[0b]/[42.5mb]}{[old] [2.6gb]->[1.8gb]/[5.3gb]}
```

If we stop copying the scripts with Chef then the issue doesn't happen.  Somewhere there is an issue with the JVM not letting go of memory related to the scripts being recompiled.
",2015-07-16 21:54:02,"[{'commitGitStats': [{'lines': 10, 'insertions': 3, 'deletions': 7, 'filePath': 'src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['deb2127e737015af176ae22bf3ae9ae6a3974645'], 'commitUser': 'dakrone', 'commitDateTime': '2015-07-16 16:12:28', 'commitHash': 'f5acc6ea0bce2af3b425c0817f7ef0122b43fd2a', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 4, 'UPD': 2, 'spoonMethodName': 'org.elasticsearch.script.groovy.GroovyScriptEngineService.compile(java.lang.String)', 'INS': 1, 'MOV': 1}, {'DEL': 1, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.script.groovy.GroovyScriptEngineService.generateScriptName()', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.script.groovy.GroovyScriptEngineService', 'INS': 0, 'MOV': 0}], 'spoonFilePath': 'GroovyScriptEngineService.java'}], 'nameRev': 'f5acc6ea0bce2af3b425c0817f7ef0122b43fd2a tags/v1.7.1~19', 'commitGHEventType': 'referenced', 'commitMessage': 'Consistently name Groovy scripts with the same content\n\nWhen adding a script to the Groovy classloader, the script name is used\nas the class identifier in the classloader. This means that in order not\nto break JVM Classloader convention, that script must always be\navailable by that name. As a result, modifying a script with the same\ncontent over and over causes it to be loaded with a different name (due\nto the incrementing integer).\n\nThis is particularly bad when something like chef or puppet replaces the\non-disk script file with the same content over and over every time a\nmachine is converged.\n\nThis change makes the script name the SHA1 hash of the script itself,\nmeaning that replacing a script with the same text will use the same\nscript name.\n\nResolves #12212\n', 'authoredDateTime': '2015-07-16 16:12:28'}]",https://github.com/elastic/elasticsearch/issues/12212,3.000277777777778,"[':Core/Infra/Scripting', '>bug']",PermGen OutOfMemoryError when reloading scripts too often,1.0,"['org.elasticsearch.script.groovy.GroovyScriptEngineService.compile(java.lang.String)', 'org.elasticsearch.script.groovy.GroovyScriptEngineService.generateScriptName()', 'org.elasticsearch.script.groovy.GroovyScriptEngineService']",['f5acc6ea0bce2af3b425c0817f7ef0122b43fd2a'],,['src/main/java/org/elasticsearch/script/groovy'],3.0,7.0,10.0,1.0,2.0,3.0,6.0,1.0,1.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,elasticsearch
21388,2015-06-25 07:51:43,masaruh,"It occurs only version >= 1.6.0.

`GET /_recovery?pretty&human` returns something like:

```
   ""index_name"": {
      ""shards"": [
         {
            ""id"": 0,
            ""type"": ""GATEWAY"",
            ""stage"": ""DONE"",
            ""primary"": true,
            ""start_time"": ""1970-01-01T12:05:18.603Z"",
            ""start_time_in_millis"": 43518603,
            ""stop_time"": ""1970-01-01T12:05:18.681Z"",
            ""stop_time_in_millis"": 43518681,
            ""total_time"": ""78ms"",
            ""total_time_in_millis"": 78,
```

I believe it's because System.nanoTime() is used for wall clock time in RecoveryState like https://github.com/elastic/elasticsearch/blob/v1.6.0/src/main/java/org/elasticsearch/indices/recovery/RecoveryState.java#L405
",2015-06-29 10:25:33,"[{'commitGitStats': [{'lines': 15, 'insertions': 10, 'deletions': 5, 'filePath': 'core/src/main/java/org/elasticsearch/indices/recovery/RecoveryState.java'}, {'lines': 4, 'insertions': 3, 'deletions': 1, 'filePath': 'rest-api-spec/src/main/resources/rest-api-spec/test/indices.recovery/10_basic.yaml'}, {'lines': 5, 'insertions': 2, 'deletions': 3, 'filePath': 'core/src/test/java/org/elasticsearch/indices/recovery/RecoveryStateTest.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['41f8c96fed74e3928b0cc841fcc22ee6b1ca9ff3'], 'commitUser': 'masaruh', 'commitDateTime': '2015-06-29 19:24:23', 'commitHash': '80d0f1e5ea68300d4273393752589f4bfc27bff5', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.indices.recovery.RecoveryState.Timer.reset()', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 7, 'UPD': 3, 'spoonMethodName': 'org.elasticsearch.indices.recovery.RecoveryState.Timer.stop()', 'INS': 1, 'MOV': 2}, {'DEL': 1, 'TOT': 7, 'UPD': 2, 'spoonMethodName': 'org.elasticsearch.indices.recovery.RecoveryState.Timer.time()', 'INS': 1, 'MOV': 3}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.indices.recovery.RecoveryState.Timer.writeTo(org.elasticsearch.common.io.stream.StreamOutput)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.indices.recovery.RecoveryState.Timer.readFrom(org.elasticsearch.common.io.stream.StreamInput)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.indices.recovery.RecoveryState.Timer', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 4, 'UPD': 2, 'spoonMethodName': 'org.elasticsearch.indices.recovery.RecoveryState.Timer.start()', 'INS': 1, 'MOV': 1}], 'spoonFilePath': 'RecoveryState.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.indices.recovery.RecoveryStateTest.testTimers()', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.indices.recovery.RecoveryStateTest.testIndex()', 'INS': 0, 'MOV': 0}], 'spoonFilePath': 'RecoveryStateTest.java'}], 'nameRev': '80d0f1e5ea68300d4273393752589f4bfc27bff5 tags/v2.0.0-beta1~757', 'commitGHEventType': 'closed', 'commitMessage': 'Fix RecoveryState timestamps\n\nUse System.currentTimeMillis() for wall clock time and use System.nanoTime() for delta.\nFixes #11870.\n', 'authoredDateTime': '2015-06-25 16:57:29'}]",https://github.com/elastic/elasticsearch/issues/11870,4.000277777777778,"[':Core/Features/Stats', '>bug', 'v1.6.1', 'v1.7.0']",recovery state returns 1970s start/end time.,1.0,"['org.elasticsearch.indices.recovery.RecoveryState.Timer.reset()', 'org.elasticsearch.indices.recovery.RecoveryState.Timer.stop()', 'org.elasticsearch.indices.recovery.RecoveryState.Timer.time()', 'org.elasticsearch.indices.recovery.RecoveryState.Timer.writeTo(org.elasticsearch.common.io.stream.StreamOutput)', 'org.elasticsearch.indices.recovery.RecoveryState.Timer.readFrom(org.elasticsearch.common.io.stream.StreamInput)', 'org.elasticsearch.indices.recovery.RecoveryState.Timer', 'org.elasticsearch.indices.recovery.RecoveryState.Timer.start()']",['80d0f1e5ea68300d4273393752589f4bfc27bff5'],,"['rest-api-spec/src/main/resources/rest-api-spec/test/indices.recovery/10_basic.yaml', 'core/src/main/java/org/elasticsearch/indices/recovery']",13.0,6.0,19.0,2.0,7.0,7.0,22.0,6.0,7.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,elasticsearch
21503,2015-03-31 19:53:31,imotov,"If a repository cannot be registered on one of non-master nodes because of configuration issue (for example if the repository plugin is not installed on the node) it might prevent other properly configured repositories from registering on the node.
",2015-04-03 03:21:34,"[{'commitGitStats': [{'lines': 40, 'insertions': 40, 'deletions': 0, 'filePath': 'src/test/java/org/elasticsearch/snapshots/mockstore/MockRepositoryPlugin.java'}, {'lines': 13, 'insertions': 11, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/repositories/RepositoriesService.java'}, {'lines': 22, 'insertions': 22, 'deletions': 0, 'filePath': 'src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['6c7df3126e4f4011a288013946e67f22ffbccb0d'], 'commitUser': 'imotov', 'commitDateTime': '2015-04-02 22:52:10', 'commitHash': 'f583a0bf1337f1006d7189b2a236be28df6c3472', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 5, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.repositories.RepositoriesService.clusterChanged(org.elasticsearch.repositories.ClusterChangedEvent)', 'INS': 3, 'MOV': 2}], 'spoonFilePath': 'RepositoriesService.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.snapshots.DedicatedClusterSnapshotRestoreTests.registrationFailureTest()', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'DedicatedClusterSnapshotRestoreTests.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.snapshots.mockstore.MockRepositoryPlugin', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'MockRepositoryPlugin.java'}], 'nameRev': 'f583a0bf1337f1006d7189b2a236be28df6c3472 tags/v1.6.0~378', 'commitGHEventType': 'referenced', 'commitMessage': ""Snapshot/Restore: separate repository registration\n\nSeparate repository registration to make sure that failure in registering one repository doesn't cause failures to register other repositories.\n\nCloses #10351\n"", 'authoredDateTime': '2015-03-31 16:19:08'}, {'commitGitStats': [{'lines': 40, 'insertions': 40, 'deletions': 0, 'filePath': 'src/test/java/org/elasticsearch/snapshots/mockstore/MockRepositoryPlugin.java'}, {'lines': 13, 'insertions': 11, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/repositories/RepositoriesService.java'}, {'lines': 22, 'insertions': 22, 'deletions': 0, 'filePath': 'src/test/java/org/elasticsearch/snapshots/DedicatedClusterSnapshotRestoreTests.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['09c06f65fc9d115b7ecf6a9b5c95576f33fe2216'], 'commitUser': 'imotov', 'commitDateTime': '2015-04-02 23:04:29', 'commitHash': '91b013ae8078ad05d039f750d49de556a0074641', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 5, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.repositories.RepositoriesService.clusterChanged(org.elasticsearch.repositories.ClusterChangedEvent)', 'INS': 3, 'MOV': 2}], 'spoonFilePath': 'RepositoriesService.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.snapshots.DedicatedClusterSnapshotRestoreTests.registrationFailureTest()', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'DedicatedClusterSnapshotRestoreTests.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.snapshots.mockstore.MockRepositoryPlugin', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'MockRepositoryPlugin.java'}], 'nameRev': '91b013ae8078ad05d039f750d49de556a0074641 tags/v1.5.1~35', 'commitGHEventType': 'referenced', 'commitMessage': ""Snapshot/Restore: separate repository registration\n\nSeparate repository registration to make sure that failure in registering one repository doesn't cause failures to register other repositories.\n\nCloses #10351\n"", 'authoredDateTime': '2015-03-31 16:19:08'}]",https://github.com/elastic/elasticsearch/issues/10351,2.000277777777778,"[':Distributed/Snapshot/Restore', '>bug', 'v1.5.1', 'v1.6.0', 'v2.0.0-beta1']",Failure to register of one misconfigured repository might prevent future repository registration,1.0,"['org.elasticsearch.snapshots.DedicatedClusterSnapshotRestoreTests.registrationFailureTest()', 'org.elasticsearch.repositories.RepositoriesService.clusterChanged(org.elasticsearch.repositories.ClusterChangedEvent)', 'org.elasticsearch.snapshots.mockstore.MockRepositoryPlugin']",['f583a0bf1337f1006d7189b2a236be28df6c3472'],,['src/main/java/org/elasticsearch/repositories'],11.0,2.0,13.0,1.0,0.0,3.0,7.0,2.0,5.0,0.0,3.0,0.0,0.0,0.0,1.0,0.0,0.0,elasticsearch
21866,2014-05-22 12:59:21,jpountz,"The nested queries, filters and aggregations expect that filters produce `FixedBitSet` instances. However, if the filter cache is disabled, you might get an index-based `DocsEnum` directly, so the set of documents needs to be loaded into a `FixedBitSet` before running the query.
",2014-05-22 21:19:58,"[{'commitGitStats': [{'lines': 4, 'insertions': 4, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/NestedFilterParser.java'}, {'lines': 4, 'insertions': 4, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/NestedQueryParser.java'}, {'lines': 9, 'insertions': 8, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/index/search/nested/IncludeNestedDocsQuery.java'}, {'lines': 3, 'insertions': 3, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['7f3bc58447e8e40bb2bee616bcd27d67642249f0'], 'commitUser': 'jpountz', 'commitDateTime': '2014-05-22 23:17:15', 'commitHash': 'bd53bca723a46c11326a0efcb14b8730f378393e', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.NestedQueryParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedQueryParser.java'}, {'spoonMethods': [{'DEL': 1, 'TOT': 4, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.search.nested.IncludeNestedDocsQuery.IncludeNestedDocsWeight.scorer(org.apache.lucene.index.AtomicReaderContext,boolean,boolean,org.apache.lucene.util.Bits)', 'INS': 1, 'MOV': 2}], 'spoonFilePath': 'IncludeNestedDocsQuery.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator.setNextReader(org.apache.lucene.index.AtomicReaderContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedAggregator.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.NestedFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedFilterParser.java'}], 'nameRev': 'bd53bca723a46c11326a0efcb14b8730f378393e remotes/origin/1.1~28', 'commitGHEventType': 'referenced', 'commitMessage': 'Nested: Make sure queries/filters/aggs get a FixedBitSet when they expect one.\n\nClose #6279\n', 'authoredDateTime': '2014-05-22 15:13:11'}, {'commitGitStats': [{'lines': 4, 'insertions': 4, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/NestedFilterParser.java'}, {'lines': 4, 'insertions': 4, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/NestedQueryParser.java'}, {'lines': 9, 'insertions': 8, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/index/search/nested/IncludeNestedDocsQuery.java'}, {'lines': 3, 'insertions': 3, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['ac77d983939340ef208d1e27dcfeefcd2f97b742'], 'commitUser': 'jpountz', 'commitDateTime': '2014-05-22 23:16:59', 'commitHash': '49f490336ee366f57b7d5b5cb9824a80e3b53985', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.NestedQueryParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedQueryParser.java'}, {'spoonMethods': [{'DEL': 1, 'TOT': 4, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.search.nested.IncludeNestedDocsQuery.IncludeNestedDocsWeight.scorer(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)', 'INS': 1, 'MOV': 2}], 'spoonFilePath': 'IncludeNestedDocsQuery.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator.setNextReader(org.apache.lucene.index.AtomicReaderContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedAggregator.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.NestedFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedFilterParser.java'}], 'nameRev': '49f490336ee366f57b7d5b5cb9824a80e3b53985 tags/v1.2.1~28', 'commitGHEventType': 'referenced', 'commitMessage': 'Nested: Make sure queries/filters/aggs get a FixedBitSet when they expect one.\n\nClose #6279\n', 'authoredDateTime': '2014-05-22 15:13:11'}, {'commitGitStats': [{'lines': 4, 'insertions': 4, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/NestedFilterParser.java'}, {'lines': 4, 'insertions': 4, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/NestedQueryParser.java'}, {'lines': 9, 'insertions': 8, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/index/search/nested/IncludeNestedDocsQuery.java'}, {'lines': 3, 'insertions': 3, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['705d9efddfc7f8a7c90e14bab8f6f0fd442a4608'], 'commitUser': 'jpountz', 'commitDateTime': '2014-05-22 23:15:05', 'commitHash': '8dd9addf156b4b8dce0c48eec050cb362f3dc0d1', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.NestedQueryParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedQueryParser.java'}, {'spoonMethods': [{'DEL': 1, 'TOT': 4, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.search.nested.IncludeNestedDocsQuery.IncludeNestedDocsWeight.scorer(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)', 'INS': 1, 'MOV': 2}], 'spoonFilePath': 'IncludeNestedDocsQuery.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator.setNextReader(org.apache.lucene.index.AtomicReaderContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedAggregator.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.NestedFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedFilterParser.java'}], 'nameRev': '8dd9addf156b4b8dce0c48eec050cb362f3dc0d1 tags/v1.3.0~520', 'commitGHEventType': 'referenced', 'commitMessage': 'Nested: Make sure queries/filters/aggs get a FixedBitSet when they expect one.\n\nClose #6279\n', 'authoredDateTime': '2014-05-22 15:13:11'}, {'commitGitStats': [{'lines': 4, 'insertions': 4, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/NestedFilterParser.java'}, {'lines': 4, 'insertions': 4, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/NestedQueryParser.java'}, {'lines': 9, 'insertions': 8, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/index/search/nested/IncludeNestedDocsQuery.java'}, {'lines': 3, 'insertions': 3, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/search/aggregations/bucket/nested/NestedAggregator.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['b3274bd770c01c6166bc2ad52e327e879c331c95'], 'commitUser': 'jpountz', 'commitDateTime': '2014-05-22 23:13:13', 'commitHash': '6e49256fa85617435109fa21780e46c46843759f', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.NestedQueryParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedQueryParser.java'}, {'spoonMethods': [{'DEL': 1, 'TOT': 4, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.search.nested.IncludeNestedDocsQuery.IncludeNestedDocsWeight.scorer(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits)', 'INS': 1, 'MOV': 2}], 'spoonFilePath': 'IncludeNestedDocsQuery.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator.setNextReader(org.apache.lucene.index.AtomicReaderContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedAggregator.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.NestedFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'NestedFilterParser.java'}], 'nameRev': '6e49256fa85617435109fa21780e46c46843759f tags/v2.0.0-beta1~4468', 'commitGHEventType': 'closed', 'commitMessage': 'Nested: Make sure queries/filters/aggs get a FixedBitSet when they expect one.\n\nClose #6279\n', 'authoredDateTime': '2014-05-22 15:13:11'}]",https://github.com/elastic/elasticsearch/issues/6279,0.0002777777777777778,"['>bug', 'v1.1.3', 'v1.2.1', 'v1.3.0', 'v2.0.0-beta1']","Nested: queries/filters/aggregations expect FixedBitSets, yet it isn't the case with NoneFilterCache",1.0,"['org.elasticsearch.search.aggregations.bucket.nested.NestedAggregator.setNextReader(org.apache.lucene.index.AtomicReaderContext)', 'org.elasticsearch.index.query.NestedQueryParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'org.elasticsearch.index.query.NestedFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'org.elasticsearch.index.search.nested.IncludeNestedDocsQuery.IncludeNestedDocsWeight.scorer(org.apache.lucene.index.AtomicReaderContext,boolean,boolean,org.apache.lucene.util.Bits)']",['bd53bca723a46c11326a0efcb14b8730f378393e'],,"['src/main/java/org/elasticsearch/index/search/nested', 'src/main/java/org/elasticsearch/search/aggregations/bucket/nested', 'src/main/java/org/elasticsearch/index/query']",19.0,1.0,20.0,4.0,0.0,4.0,7.0,2.0,4.0,1.0,4.0,0.0,0.0,0.0,3.0,0.0,0.0,elasticsearch
21934,2014-03-31 16:13:26,s1monw," Today the cluster_state is not associated with the cluster_name which is odd since it's pretty much it's only valid identifier. Any node can send a cluster state to another node today even if it's not the same cluster. These situations can happen rarely during tests or even in the wild by accident. The problem can occur if multiple nodes run on the same machine and they join multiple clusters. If node `A` from cluster  `cluster_name=a` shuts down while the other node `B` starts up with `cluster_name=b` and this node happens to get the same port on that physical host a third node that still thinks `B` is listening on that port might send a new cluster state. This can cause weird problems and we should discard the cluster state if the cluster names don't match
",2014-03-31 18:32:59,"[{'commitGitStats': [{'lines': 8, 'insertions': 8, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['b611822b43d252d46593c23b75db495b6266e07c'], 'commitUser': 's1monw', 'commitDateTime': '2014-03-31 20:30:53', 'commitHash': '751831973fa55258a33fece4da752e9f1823dcce', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 3, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.discovery.zen.ZenDiscovery.handleNewClusterStateFromMaster(org.elasticsearch.discovery.zen.ClusterState,org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$NewClusterStateListener$NewStateProcessed)', 'INS': 3, 'MOV': 0}], 'spoonFilePath': 'ZenDiscovery.java'}], 'nameRev': '751831973fa55258a33fece4da752e9f1823dcce tags/v1.1.1~51', 'commitGHEventType': 'referenced', 'commitMessage': ""Discard new cluster state if the clustername doesn't match\n\nCloses #5622\n"", 'authoredDateTime': '2014-03-31 18:15:43'}, {'commitGitStats': [{'lines': 8, 'insertions': 8, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['1e3e24e2fbf42086cfd77c2b63a9814cd69d15e3'], 'commitUser': 's1monw', 'commitDateTime': '2014-03-31 20:24:42', 'commitHash': 'f310f791a0e6fe23a9fd92e3f323738a9d94b126', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 3, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.discovery.zen.ZenDiscovery.handleNewClusterStateFromMaster(org.elasticsearch.discovery.zen.ClusterState,org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$NewClusterStateListener$NewStateProcessed)', 'INS': 3, 'MOV': 0}], 'spoonFilePath': 'ZenDiscovery.java'}], 'nameRev': 'f310f791a0e6fe23a9fd92e3f323738a9d94b126 tags/v1.2.0~525', 'commitGHEventType': 'referenced', 'commitMessage': ""Discard new cluster state if the clustername doesn't match\n\nCloses #5622\n"", 'authoredDateTime': '2014-03-31 18:15:43'}, {'commitGitStats': [{'lines': 8, 'insertions': 8, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/discovery/zen/ZenDiscovery.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['df7474b9fcf849bbfea4222c1d2aa58b6669e52a'], 'commitUser': 's1monw', 'commitDateTime': '2014-03-31 20:23:49', 'commitHash': 'c7b1f9946f967768faea7f062c46e41dfcdbfd0b', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 3, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.discovery.zen.ZenDiscovery.handleNewClusterStateFromMaster(org.elasticsearch.discovery.zen.ClusterState,org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$NewClusterStateListener$NewStateProcessed)', 'INS': 3, 'MOV': 0}], 'spoonFilePath': 'ZenDiscovery.java'}], 'nameRev': 'c7b1f9946f967768faea7f062c46e41dfcdbfd0b tags/v2.0.0-beta1~5015', 'commitGHEventType': 'closed', 'commitMessage': ""Discard new cluster state if the clustername doesn't match\n\nCloses #5622\n"", 'authoredDateTime': '2014-03-31 18:15:43'}]",https://github.com/elastic/elasticsearch/issues/5622,0.0002777777777777778,"['>bug', 'v1.1.1', 'v1.2.0', 'v2.0.0-beta1']",Clusterstate misses the cluster name as it's identifier,1.0,"['org.elasticsearch.discovery.zen.ZenDiscovery.handleNewClusterStateFromMaster(org.elasticsearch.discovery.zen.ClusterState,org.elasticsearch.discovery.zen.publish.PublishClusterStateAction$NewClusterStateListener$NewStateProcessed)']",['751831973fa55258a33fece4da752e9f1823dcce'],,['src/main/java/org/elasticsearch/discovery/zen'],8.0,0.0,8.0,1.0,0.0,1.0,3.0,0.0,3.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,elasticsearch
21986,2014-02-17 12:44:58,bobrik,"At least in 1.0.0

``` shell
# create index and object
curl -X PUT 'http://127.0.0.1:9200/wtf/?pretty'
curl -X PUT 'http://127.0.0.1:9200/wtf/test/1?pretty' -d '{""complex"": { ""object"": ""it is"" }, ""simple"": ""value""}'

# no results
curl -X POST 'http://127.0.0.1:9200/wtf/test/_search?pretty&q=_exists_:complex'
# has results
curl -X POST 'http://127.0.0.1:9200/wtf/test/_search?pretty&q=_exists_:simple'

# has results
curl -X POST 'http://127.0.0.1:9200/wtf/test/_search?pretty' -d '{ ""query"": { ""filtered"": { ""filter"": { ""not"": { ""missing"": { ""field"": ""complex"" } } } } } }'

# has results
curl -X POST 'http://127.0.0.1:9200/wtf/test/_search?pretty' -d '{ ""query"": { ""filtered"": { ""filter"": { ""not"": { ""missing"": { ""field"": ""simple"" } } } } } }'
```

This behaviour  should be either fixed or noted in docs.
",2014-02-20 08:09:07,"[{'commitGitStats': [{'lines': 5, 'insertions': 5, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/ExistsFilterParser.java'}, {'lines': 31, 'insertions': 3, 'deletions': 28, 'filePath': 'src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java'}, {'lines': 10, 'insertions': 8, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/index/query/MissingFilterParser.java'}, {'lines': 25, 'insertions': 2, 'deletions': 23, 'filePath': 'src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['d5f1e6f2363f9c328baaa138b65ca79a617fe7fc'], 'commitUser': 'jpountz', 'commitDateTime': '2014-02-20 09:01:56', 'commitHash': 'f5b3c08df27813a6f0de09a4d93bc0a71ed855ac', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 8, 'TOT': 13, 'UPD': 1, 'spoonMethodName': 'org.apache.lucene.queryparser.classic.ExistsFieldQueryExtension.query(org.elasticsearch.index.query.QueryParseContext,java.lang.String)', 'INS': 1, 'MOV': 3}], 'spoonFilePath': 'ExistsFieldQueryExtension.java'}, {'spoonMethods': [{'DEL': 10, 'TOT': 15, 'UPD': 1, 'spoonMethodName': 'org.apache.lucene.queryparser.classic.MissingFieldQueryExtension.query(org.elasticsearch.index.query.QueryParseContext,java.lang.String)', 'INS': 1, 'MOV': 3}], 'spoonFilePath': 'MissingFieldQueryExtension.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.MissingFilterParser', 'INS': 2, 'MOV': 0}, {'DEL': 0, 'TOT': 10, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.index.query.MissingFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 8}], 'spoonFilePath': 'MissingFilterParser.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 14, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.ExistsFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 2, 'MOV': 12}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.ExistsFilterParser.newFilter(org.elasticsearch.index.query.QueryParseContext,java.lang.String,java.lang.String)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'ExistsFilterParser.java'}], 'nameRev': 'f5b3c08df27813a6f0de09a4d93bc0a71ed855ac tags/v2.0.0-beta1~5391', 'commitGHEventType': 'closed', 'commitMessage': 'Make _exists_/_missing_ behave consistently with exists/missing.\n\n`_exists_` and `_missing_` miss field name expansion that `exists` and\n`missing` have, which allows these filters to work on `object` fields.\n\nClose #5142\n', 'authoredDateTime': '2014-02-17 15:56:01'}, {'commitGitStats': [{'lines': 5, 'insertions': 5, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/ExistsFilterParser.java'}, {'lines': 31, 'insertions': 3, 'deletions': 28, 'filePath': 'src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java'}, {'lines': 10, 'insertions': 8, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/index/query/MissingFilterParser.java'}, {'lines': 25, 'insertions': 2, 'deletions': 23, 'filePath': 'src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['74357bc929d110d3f6e64b9926a0960763d3c3b8'], 'commitUser': 'jpountz', 'commitDateTime': '2014-02-20 09:10:05', 'commitHash': '16bf0c372eb4007f3e152124b105793bf05f2e80', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 8, 'TOT': 13, 'UPD': 1, 'spoonMethodName': 'org.apache.lucene.queryparser.classic.ExistsFieldQueryExtension.query(org.elasticsearch.index.query.QueryParseContext,java.lang.String)', 'INS': 1, 'MOV': 3}], 'spoonFilePath': 'ExistsFieldQueryExtension.java'}, {'spoonMethods': [{'DEL': 10, 'TOT': 15, 'UPD': 1, 'spoonMethodName': 'org.apache.lucene.queryparser.classic.MissingFieldQueryExtension.query(org.elasticsearch.index.query.QueryParseContext,java.lang.String)', 'INS': 1, 'MOV': 3}], 'spoonFilePath': 'MissingFieldQueryExtension.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.MissingFilterParser', 'INS': 2, 'MOV': 0}, {'DEL': 0, 'TOT': 10, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.index.query.MissingFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 8}], 'spoonFilePath': 'MissingFilterParser.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 14, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.ExistsFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 2, 'MOV': 12}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.ExistsFilterParser.newFilter(org.elasticsearch.index.query.QueryParseContext,java.lang.String,java.lang.String)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'ExistsFilterParser.java'}], 'nameRev': '16bf0c372eb4007f3e152124b105793bf05f2e80 tags/v1.0.1~25', 'commitGHEventType': 'referenced', 'commitMessage': 'Make _exists_/_missing_ behave consistently with exists/missing.\n\n`_exists_` and `_missing_` miss field name expansion that `exists` and\n`missing` have, which allows these filters to work on `object` fields.\n\nClose #5142\n', 'authoredDateTime': '2014-02-17 15:56:01'}, {'commitGitStats': [{'lines': 5, 'insertions': 5, 'deletions': 0, 'filePath': 'src/main/java/org/elasticsearch/index/query/ExistsFilterParser.java'}, {'lines': 31, 'insertions': 3, 'deletions': 28, 'filePath': 'src/main/java/org/apache/lucene/queryparser/classic/MissingFieldQueryExtension.java'}, {'lines': 10, 'insertions': 8, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/index/query/MissingFilterParser.java'}, {'lines': 25, 'insertions': 2, 'deletions': 23, 'filePath': 'src/main/java/org/apache/lucene/queryparser/classic/ExistsFieldQueryExtension.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['1216a34648bcff09aa9c7b13f630b6bf2fa9b985'], 'commitUser': 'jpountz', 'commitDateTime': '2014-02-20 09:09:22', 'commitHash': 'eae75c735b201aaffe306f421c71856d802dc03a', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 8, 'TOT': 13, 'UPD': 1, 'spoonMethodName': 'org.apache.lucene.queryparser.classic.ExistsFieldQueryExtension.query(org.elasticsearch.index.query.QueryParseContext,java.lang.String)', 'INS': 1, 'MOV': 3}], 'spoonFilePath': 'ExistsFieldQueryExtension.java'}, {'spoonMethods': [{'DEL': 10, 'TOT': 15, 'UPD': 1, 'spoonMethodName': 'org.apache.lucene.queryparser.classic.MissingFieldQueryExtension.query(org.elasticsearch.index.query.QueryParseContext,java.lang.String)', 'INS': 1, 'MOV': 3}], 'spoonFilePath': 'MissingFieldQueryExtension.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.MissingFilterParser', 'INS': 2, 'MOV': 0}, {'DEL': 0, 'TOT': 10, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.index.query.MissingFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 8}], 'spoonFilePath': 'MissingFilterParser.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 14, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.ExistsFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 2, 'MOV': 12}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.ExistsFilterParser.newFilter(org.elasticsearch.index.query.QueryParseContext,java.lang.String,java.lang.String)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'ExistsFilterParser.java'}], 'nameRev': 'eae75c735b201aaffe306f421c71856d802dc03a tags/v1.1.0~270', 'commitGHEventType': 'referenced', 'commitMessage': 'Make _exists_/_missing_ behave consistently with exists/missing.\n\n`_exists_` and `_missing_` miss field name expansion that `exists` and\n`missing` have, which allows these filters to work on `object` fields.\n\nClose #5142\n', 'authoredDateTime': '2014-02-17 15:56:01'}]",https://github.com/elastic/elasticsearch/issues/5142,2.000277777777778,"['>bug', 'v1.0.1', 'v1.1.0', 'v2.0.0-beta1']",_exists_ doesn't work on objects,1.0,"['org.apache.lucene.queryparser.classic.MissingFieldQueryExtension.query(org.elasticsearch.index.query.QueryParseContext,java.lang.String)', 'org.elasticsearch.index.query.MissingFilterParser', 'org.elasticsearch.index.query.ExistsFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'org.apache.lucene.queryparser.classic.ExistsFieldQueryExtension.query(org.elasticsearch.index.query.QueryParseContext,java.lang.String)', 'org.elasticsearch.index.query.MissingFilterParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'org.elasticsearch.index.query.ExistsFilterParser.newFilter(org.elasticsearch.index.query.QueryParseContext,java.lang.String,java.lang.String)']",['f5b3c08df27813a6f0de09a4d93bc0a71ed855ac'],,"['src/main/java/org/elasticsearch/index/query', 'src/main/java/org/apache/lucene/queryparser/classic']",18.0,53.0,71.0,4.0,3.0,6.0,55.0,26.0,8.0,18.0,4.0,0.0,0.0,0.0,2.0,0.0,0.0,elasticsearch
22006,2014-01-30 20:24:38,kimchy,,2014-01-30 20:32:59,"[{'commitGitStats': [{'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['dddfe23bedd2774c033a60f2b7c01bd8b4425ad3'], 'commitUser': 'kimchy', 'commitDateTime': '2014-01-30 21:32:52', 'commitHash': 'ae3e8beca4c61388d9f1798d1063fde7cf9ad1b0', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 1, 'TOT': 6, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.FilteredQueryParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 4}], 'spoonFilePath': 'FilteredQueryParser.java'}], 'nameRev': 'ae3e8beca4c61388d9f1798d1063fde7cf9ad1b0 tags/v2.0.0-beta1~5538', 'commitGHEventType': 'closed', 'commitMessage': 'filtered query parses _name incorrectly\nfixes #4960\n', 'authoredDateTime': '2014-01-30 21:32:25'}, {'commitGitStats': [{'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['cd91c8b883e460440cae3dab64dcd6b97360c29a'], 'commitUser': 'kimchy', 'commitDateTime': '2014-01-30 21:33:24', 'commitHash': '69f7d38e4f1ed971defb1db0b58731bc71c2ab7e', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 1, 'TOT': 6, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.FilteredQueryParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 4}], 'spoonFilePath': 'FilteredQueryParser.java'}], 'nameRev': '69f7d38e4f1ed971defb1db0b58731bc71c2ab7e tags/v1.1.0~412', 'commitGHEventType': 'referenced', 'commitMessage': 'filtered query parses _name incorrectly\nfixes #4960\n', 'authoredDateTime': '2014-01-30 21:32:25'}, {'commitGitStats': [{'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['5d0ee269e8122e9dfaae5d04b55fa7df2cf9ae49'], 'commitUser': 'kimchy', 'commitDateTime': '2014-01-30 21:34:56', 'commitHash': '17ddc0891c80bb78b6361628cea121f966270913', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 1, 'TOT': 6, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.FilteredQueryParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 4}], 'spoonFilePath': 'FilteredQueryParser.java'}], 'nameRev': '17ddc0891c80bb78b6361628cea121f966270913 tags/v1.0.0.RC2~18', 'commitGHEventType': 'referenced', 'commitMessage': 'filtered query parses _name incorrectly\nfixes #4960\n', 'authoredDateTime': '2014-01-30 21:32:25'}, {'commitGitStats': [{'lines': 4, 'insertions': 2, 'deletions': 2, 'filePath': 'src/main/java/org/elasticsearch/index/query/FilteredQueryParser.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['38c3d755bc0c37e9eb978b9c8fcc7ef7cb17abca'], 'commitUser': 'kimchy', 'commitDateTime': '2014-01-30 21:35:20', 'commitHash': '13804816fd60ae579ab418c7375732739cc2431a', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 1, 'TOT': 6, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.index.query.FilteredQueryParser.parse(org.elasticsearch.index.query.QueryParseContext)', 'INS': 1, 'MOV': 4}], 'spoonFilePath': 'FilteredQueryParser.java'}], 'nameRev': '13804816fd60ae579ab418c7375732739cc2431a tags/v0.90.11~13', 'commitGHEventType': 'referenced', 'commitMessage': 'filtered query parses _name incorrectly\nfixes #4960\n', 'authoredDateTime': '2014-01-30 21:32:25'}]",https://github.com/elastic/elasticsearch/issues/4960,0.0002777777777777778,"[':Search/Search', '>bug', 'v0.90.11', 'v1.0.0.RC2', 'v1.1.0', 'v2.0.0-beta1']",Filtered query parses _name incorrectly,1.0,['org.elasticsearch.index.query.FilteredQueryParser.parse(org.elasticsearch.index.query.QueryParseContext)'],['ae3e8beca4c61388d9f1798d1063fde7cf9ad1b0'],,['src/main/java/org/elasticsearch/index/query'],2.0,2.0,4.0,1.0,0.0,1.0,6.0,4.0,1.0,1.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,elasticsearch
22124,2013-11-06 17:11:54,irieksts,"We set-up a two node cluster the first node is a master and contains no data.  The second node has data but is not master eligible.  Both a running 0.90.0. Also, retested on 0.90.6.

First I create an index with an nested document:

curl -X POST http://masternode:9200/index_a -d '{
    ""mappings"" : {
       ""type_a"" : {
          ""properties"" : {
            ""table_a"" : { ""type"" : ""nested"", ""properties"" : {
              ""field_a"" : { ""type"" : ""string"" },""field_b"" : { ""type"" : ""string"" }
            }}
          }
       }
    }
}
'

Returns: {""ok"":true,""acknowledged"":true}

Then I try to create the filter alias:

curl -X POST http://datanode:9200/_aliases -d '
{
    ""actions"" : [
        { ""add"" : { ""index"" : ""index_a"", ""alias"" : ""alias_a"" , ""filter"": {
        ""bool"": {
          ""must"": [
            {
              ""nested"": {
                ""path"": ""table_a"",
                ""query"": {
                  ""bool"": {
                    ""must"": [
                      {
                        ""term"": {
                          ""table_a.field_a"": ""y""
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      }} }
    ]
}'

Returns: {""error"":""RemoteTransportException[[dlesmaster01][inet[/10.13.10.38:9300]][indices/aliases]]; nested: ElasticSearchIllegalArgumentException[failed to parse filter for [alias_a]]; nested: QueryParsingException[[index_a] [nested] failed to find nested object under path [table_a]]; "",""status"":400}

If I submit it to the master node like this:

curl -X POST http://masternode:9200/_aliases -d '
{
    ""actions"" : [
        { ""add"" : { ""index"" : ""index_a"", ""alias"" : ""alias_a"" , ""filter"": {
        ""bool"": {
          ""must"": [
            {
              ""nested"": {
                ""path"": ""table_a"",
                ""query"": {
                  ""bool"": {
                    ""must"": [
                      {
                        ""term"": {
                          ""table_a.field_a"": ""y""
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      }} }
    ]
}'

Returns: {""error"":""ElasticSearchIllegalArgumentException[failed to parse filter for [alias_a]]; nested: QueryParsingException[[index_a] [nested] failed to find nested object under path [table_a]]; "",""status"":400}

These all work when the elected master also contains the data.  
",2013-11-08 10:23:11,"[{'commitGitStats': [{'lines': 9, 'insertions': 8, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java'}, {'lines': 13, 'insertions': 13, 'deletions': 0, 'filePath': 'src/test/java/org/elasticsearch/cluster/SpecificMasterNodesTests.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['3f6e66b25ea668d3a4c69045014db6a776779a38'], 'commitUser': 'kimchy', 'commitDateTime': '2013-11-08 11:23:22', 'commitHash': '8cf217a550762204f4769b3cad6e0211e9810f1d', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.metadata.MetaDataIndexAliasesService.indicesAliases(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesService$Request,org.elasticsearch.cluster.metadata.MetaDataIndexAliasesService$Listener).1.execute(org.elasticsearch.cluster.ClusterState)', 'INS': 2, 'MOV': 0}], 'spoonFilePath': 'MetaDataIndexAliasesService.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.SpecificMasterNodesTests.testAliasFilterValidation()', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'SpecificMasterNodesTests.java'}], 'nameRev': '8cf217a550762204f4769b3cad6e0211e9810f1d tags/v0.90.7~27', 'commitGHEventType': 'referenced', 'commitMessage': 'Unable to create a nested filtered alias on a dataless master\nfixes #4112\n', 'authoredDateTime': '2013-11-08 11:22:43'}, {'commitGitStats': [{'lines': 9, 'insertions': 8, 'deletions': 1, 'filePath': 'src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesService.java'}, {'lines': 13, 'insertions': 13, 'deletions': 0, 'filePath': 'src/test/java/org/elasticsearch/cluster/SpecificMasterNodesTests.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['7fc494727183fa1c6d4ba37bc38eccf1d2eadff9'], 'commitUser': 'kimchy', 'commitDateTime': '2013-11-08 11:22:43', 'commitHash': '6f286c338207f2a333294e9e576d0f1319981148', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.metadata.MetaDataIndexAliasesService.indicesAliases(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesService$Request,org.elasticsearch.cluster.metadata.MetaDataIndexAliasesService$Listener).1.execute(org.elasticsearch.cluster.ClusterState)', 'INS': 2, 'MOV': 0}], 'spoonFilePath': 'MetaDataIndexAliasesService.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.SpecificMasterNodesTests.testAliasFilterValidation()', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'SpecificMasterNodesTests.java'}], 'nameRev': '6f286c338207f2a333294e9e576d0f1319981148 tags/v2.0.0-beta1~6429', 'commitGHEventType': 'closed', 'commitMessage': 'Unable to create a nested filtered alias on a dataless master\nfixes #4112\n', 'authoredDateTime': '2013-11-08 11:22:43'}]",https://github.com/elastic/elasticsearch/issues/4112,1.0002777777777778,"['>bug', 'v0.90.7', 'v1.0.0.Beta2']",Unable to create a nested filtered alias on a dataless master,1.0,"['org.elasticsearch.cluster.metadata.MetaDataIndexAliasesService.indicesAliases(org.elasticsearch.cluster.metadata.MetaDataIndexAliasesService$Request,org.elasticsearch.cluster.metadata.MetaDataIndexAliasesService$Listener).1.execute(org.elasticsearch.cluster.ClusterState)', 'org.elasticsearch.cluster.SpecificMasterNodesTests.testAliasFilterValidation()']",['8cf217a550762204f4769b3cad6e0211e9810f1d'],,['src/main/java/org/elasticsearch/cluster/metadata'],8.0,1.0,9.0,1.0,0.0,2.0,3.0,0.0,3.0,0.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,elasticsearch
22308,2013-05-03 12:31:51,s1monw,"today if two nodes have very similar weights but only differ in the number of primaries a relocation can happen due to tie-breaking on the primaries per node. This might happen only if lots of relocations have happened before but still can trigger a unnecessary relocation.
",2013-05-03 13:04:40,"[{'commitGitStats': [{'lines': 109, 'insertions': 80, 'deletions': 29, 'filePath': 'src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java'}, {'lines': 172, 'insertions': 171, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/BalanceConfigurationTests.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['ad92d8268096bdcfda2a87af359956432274056a'], 'commitUser': 's1monw', 'commitDateTime': '2013-05-03 14:37:47', 'commitHash': 'c9c10273a66df858bca2e45b6b27051c969b78d6', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.test.unit.cluster.routing.allocation.BalanceConfigurationTests.testNoRebalanceOnPrimaryOverload()', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.test.unit.cluster.routing.allocation.BalanceConfigurationTests.testPersistedSettings().1.addListener(org.elasticsearch.node.settings.NodeSettingsService.Listener)', 'INS': 0, 'MOV': 0}], 'spoonFilePath': 'BalanceConfigurationTests.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 3, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.tryRelocateShard(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String,float)', 'INS': 3, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.buildWeightOrderedIndidces(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$NodeSorter)', 'INS': 2, 'MOV': 0}, {'DEL': 0, 'TOT': 3, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.ApplySettings.onRefreshSettings(org.elasticsearch.common.settings.Settings)', 'INS': 3, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.NodeSorter.reset(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,java.lang.String)', 'INS': 2, 'MOV': 0}, {'DEL': 2, 'TOT': 12, 'UPD': 2, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.WeightFunction.weight(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Balancer,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String)', 'INS': 0, 'MOV': 8}, {'DEL': 0, 'TOT': 6, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.balance()', 'INS': 6, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.move(org.elasticsearch.cluster.routing.allocation.allocator.MutableShardRouting,org.elasticsearch.cluster.routing.allocation.allocator.RoutingNode)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 14, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.WeightFunction', 'INS': 6, 'MOV': 7}, {'DEL': 0, 'TOT': 6, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.WeightFunction.weight(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Balancer,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String)', 'INS': 6, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.NodeSorter.weight(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode)', 'INS': 2, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.allocateUnassigned(java.util.List,java.util.List)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 4, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.tryRelocateShard(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String,float)', 'INS': 0, 'MOV': 4}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Operation', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'BalancedShardsAllocator.java'}], 'nameRev': 'c9c10273a66df858bca2e45b6b27051c969b78d6 tags/v2.0.0-beta1~7665', 'commitGHEventType': 'closed', 'commitMessage': 'Introduced a Opertaion enum that is passed to each call of\nWeightFunction#weight to allow dedicated weight calculations per operation. In certain\ncircumstance it is more efficient / required to ignore certain factors in the weight\ncalculation to prevent for instance relocations if they are solely triggered by tie-breakers.\nIn particular the primary balance property should not be taken into account if the delta for\nearly termination is calculated since otherwise a relocation could be triggered solely by the\nfact that two nodes have different amount of primaries allocated to them.\n\nCloses #2984\n', 'authoredDateTime': '2013-05-02 17:47:58'}, {'commitGitStats': [{'lines': 109, 'insertions': 80, 'deletions': 29, 'filePath': 'src/main/java/org/elasticsearch/cluster/routing/allocation/allocator/BalancedShardsAllocator.java'}, {'lines': 172, 'insertions': 171, 'deletions': 1, 'filePath': 'src/test/java/org/elasticsearch/test/unit/cluster/routing/allocation/BalanceConfigurationTests.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['17c40d13e64e7180e502f654a88c474bb643cb48'], 'commitUser': 's1monw', 'commitDateTime': '2013-05-04 08:35:54', 'commitHash': '5de92fc639367b42679fc09c3c7ee0fac57ada62', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.test.unit.cluster.routing.allocation.BalanceConfigurationTests.testNoRebalanceOnPrimaryOverload()', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.test.unit.cluster.routing.allocation.BalanceConfigurationTests.testPersistedSettings().1.addListener(org.elasticsearch.node.settings.NodeSettingsService.Listener)', 'INS': 0, 'MOV': 0}], 'spoonFilePath': 'BalanceConfigurationTests.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 3, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.tryRelocateShard(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String,float)', 'INS': 3, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.buildWeightOrderedIndidces(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$NodeSorter)', 'INS': 2, 'MOV': 0}, {'DEL': 0, 'TOT': 3, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.ApplySettings.onRefreshSettings(org.elasticsearch.common.settings.Settings)', 'INS': 3, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.NodeSorter.reset(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,java.lang.String)', 'INS': 2, 'MOV': 0}, {'DEL': 2, 'TOT': 12, 'UPD': 2, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.WeightFunction.weight(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Balancer,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String)', 'INS': 0, 'MOV': 8}, {'DEL': 0, 'TOT': 6, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.balance()', 'INS': 6, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.move(org.elasticsearch.cluster.routing.allocation.allocator.MutableShardRouting,org.elasticsearch.cluster.routing.allocation.allocator.RoutingNode)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 14, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.WeightFunction', 'INS': 6, 'MOV': 7}, {'DEL': 0, 'TOT': 6, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.WeightFunction.weight(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Balancer,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String)', 'INS': 6, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.NodeSorter.weight(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode)', 'INS': 2, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.allocateUnassigned(java.util.List,java.util.List)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 4, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.tryRelocateShard(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String,float)', 'INS': 0, 'MOV': 4}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Operation', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'BalancedShardsAllocator.java'}], 'nameRev': '5de92fc639367b42679fc09c3c7ee0fac57ada62 tags/v0.90.1~91', 'commitGHEventType': 'referenced', 'commitMessage': 'Introduced a Opertaion enum that is passed to each call of\nWeightFunction#weight to allow dedicated weight calculations per operation. In certain\ncircumstance it is more efficient / required to ignore certain factors in the weight\ncalculation to prevent for instance relocations if they are solely triggered by tie-breakers.\nIn particular the primary balance property should not be taken into account if the delta for\nearly termination is calculated since otherwise a relocation could be triggered solely by the\nfact that two nodes have different amount of primaries allocated to them.\n\nCloses #2984\n', 'authoredDateTime': '2013-05-02 17:47:58'}]",https://github.com/elastic/elasticsearch/issues/2984,0.0002777777777777778,"['>bug', 'v0.90.1', 'v1.0.0.Beta1']",PrimaryBalance in BalancedShardsAllocator can trigger unneeded relocation,1.0,"['org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.tryRelocateShard(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String,float)', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.WeightFunction.weight(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Balancer,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String)', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.buildWeightOrderedIndidces(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$NodeSorter)', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.ApplySettings.onRefreshSettings(org.elasticsearch.common.settings.Settings)', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.NodeSorter.weight(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode)', 'org.elasticsearch.test.unit.cluster.routing.allocation.BalanceConfigurationTests.testPersistedSettings().1.addListener(org.elasticsearch.node.settings.NodeSettingsService.Listener)', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.balance()', 'org.elasticsearch.test.unit.cluster.routing.allocation.BalanceConfigurationTests.testNoRebalanceOnPrimaryOverload()', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.move(org.elasticsearch.cluster.routing.allocation.allocator.MutableShardRouting,org.elasticsearch.cluster.routing.allocation.allocator.RoutingNode)', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.WeightFunction', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.WeightFunction.weight(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Balancer,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String)', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.NodeSorter.reset(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$Operation,java.lang.String)', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.allocateUnassigned(java.util.List,java.util.List)', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Balancer.tryRelocateShard(org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator$ModelNode,java.lang.String,float)', 'org.elasticsearch.cluster.routing.allocation.allocator.BalancedShardsAllocator.Operation']",['c9c10273a66df858bca2e45b6b27051c969b78d6'],,['src/main/java/org/elasticsearch/cluster/routing/allocation/allocator'],80.0,29.0,109.0,1.0,3.0,15.0,59.0,19.0,34.0,3.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,elasticsearch
22408,2012-12-04 04:01:51,IoriH,"It turns into ConstantScore(NotDeleted(_:_)) and matches everything.
Shouldn't it return no hit?

https://gist.github.com/4200358

We are using 0.19.11. Please note that 0.19.4 returns no hit.
",2012-12-07 18:36:48,"[{'commitGitStats': [{'lines': 13, 'insertions': 12, 'deletions': 1, 'filePath': 'src/main/java/org/apache/lucene/queryParser/MapperQueryParser.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['8c75d688312ba5e56a3e4dbee616c42147e38a1a'], 'commitUser': 'kimchy', 'commitDateTime': '2012-12-07 19:37:00', 'commitHash': 'a40137dcb50ad02972d3ece0cbad09ed8b0c4b4f', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 1, 'TOT': 12, 'UPD': 0, 'spoonMethodName': 'org.apache.lucene.queryParser.MapperQueryParser.getWildcardQuery(java.lang.String,java.lang.String)', 'INS': 7, 'MOV': 4}], 'spoonFilePath': 'MapperQueryParser.java'}], 'nameRev': 'a40137dcb50ad02972d3ece0cbad09ed8b0c4b4f tags/v0.20.0~1', 'commitGHEventType': 'referenced', 'commitMessage': 'Wildcard query on non existent field matches all documents\nfixes #2461\n', 'authoredDateTime': '2012-12-07 19:36:40'}, {'commitGitStats': [{'lines': 13, 'insertions': 12, 'deletions': 1, 'filePath': 'src/main/java/org/apache/lucene/queryParser/MapperQueryParser.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['d12d72c6f026ced81a5da28e2acbb417436f4af5'], 'commitUser': 'kimchy', 'commitDateTime': '2012-12-07 19:36:40', 'commitHash': 'a4bf0997e07181c3407d1b712eaec3b5f00f14ab', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 1, 'TOT': 12, 'UPD': 0, 'spoonMethodName': 'org.apache.lucene.queryParser.MapperQueryParser.getWildcardQuery(java.lang.String,java.lang.String)', 'INS': 7, 'MOV': 4}], 'spoonFilePath': 'MapperQueryParser.java'}], 'nameRev': 'a4bf0997e07181c3407d1b712eaec3b5f00f14ab remotes/origin/0.19~5', 'commitGHEventType': 'closed', 'commitMessage': 'Wildcard query on non existent field matches all documents\nfixes #2461\n', 'authoredDateTime': '2012-12-07 19:36:40'}, {'commitGitStats': [{'lines': 13, 'insertions': 12, 'deletions': 1, 'filePath': 'src/main/java/org/apache/lucene/queryparser/classic/MapperQueryParser.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['ea9a4d70cf7140d6cf5c3c12e59fca0718164f4a'], 'commitUser': 'kimchy', 'commitDateTime': '2012-12-07 19:37:26', 'commitHash': '4dec14d5da61a5efd6c0c7b00252aa7bbbedca11', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 1, 'TOT': 12, 'UPD': 0, 'spoonMethodName': 'org.apache.lucene.queryparser.classic.MapperQueryParser.getWildcardQuery(java.lang.String,java.lang.String)', 'INS': 7, 'MOV': 4}], 'spoonFilePath': 'MapperQueryParser.java'}], 'nameRev': '4dec14d5da61a5efd6c0c7b00252aa7bbbedca11 tags/v0.90.0.Beta1~267', 'commitGHEventType': 'referenced', 'commitMessage': 'Wildcard query on non existent field matches all documents\nfixes #2461\n', 'authoredDateTime': '2012-12-07 19:36:40'}]",https://github.com/elastic/elasticsearch/issues/2461,3.000277777777778,"['>bug', 'v0.19.13', 'v0.20.0', 'v0.90.0.Beta1']",Wildcard query on non existent field matches all documents.,1.0,"['org.apache.lucene.queryParser.MapperQueryParser.getWildcardQuery(java.lang.String,java.lang.String)']",['a40137dcb50ad02972d3ece0cbad09ed8b0c4b4f'],,['src/main/java/org/apache/lucene/queryParser'],12.0,1.0,13.0,1.0,0.0,1.0,12.0,4.0,7.0,1.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,elasticsearch
22591,2011-09-02 07:06:38,natoscott,"We came across this little issue in using the node stats API, where the total CPU time values are reported as negative 1 while the user and kernel CPU times are non-zero.  The command used was:

  curl -XGET http://<host>:9200/_cluster/nodes/stats
  ...
        ""process"": {
        ""timestamp"": 1314943670627,
        ""open_file_descriptors"": 112,
        ""cpu"": {
          ""percent"": 1,
          ""sys"": ""343 milliseconds"",
          ""sys_in_millis"": 343,
          ""user"": ""3 seconds and 226 milliseconds"",
          ""user_in_millis"": 3226,
          ""total"": ""-1 milliseconds"",
          ""total_in_millis"": -1
        },

This is on the 0.18 series of elasticsearch, running on a Mac OS X 10.6.8 machine with multiple CPUs.

cheers.
",2011-09-02 07:13:43,"[{'commitGitStats': [{'lines': 1, 'insertions': 1, 'deletions': 0, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/monitor/process/SigarProcessProbe.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['8facdb2e3dc49935a4c4b93967acd33882b113d3'], 'commitUser': 'kimchy', 'commitDateTime': '2011-09-02 10:13:26', 'commitHash': '63f2e84535251afa875736f91d7cce9a81699101', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.monitor.process.SigarProcessProbe.processStats()', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'SigarProcessProbe.java'}], 'nameRev': '63f2e84535251afa875736f91d7cce9a81699101 tags/v0.18.0~174', 'commitGHEventType': 'closed', 'commitMessage': 'Negative total cpu time reported by the node stats REST API, closes #1297.\n', 'authoredDateTime': '2011-09-02 10:13:26'}]",https://github.com/elastic/elasticsearch/issues/1297,0.0002777777777777778,"['>bug', 'v0.17.7', 'v0.18.0']",Negative total cpu time reported by the node stats REST API,1.0,['org.elasticsearch.monitor.process.SigarProcessProbe.processStats()'],['63f2e84535251afa875736f91d7cce9a81699101'],,['modules/elasticsearch/src/main/java/org/elasticsearch/monitor/process'],1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,elasticsearch
22603,2011-08-11 08:31:37,kimchy,"Java API TransportClient can fail on remote node shutdown instead of retrying the next connected node under heavy load
",2011-08-11 08:32:17,"[{'commitGitStats': [{'lines': 66, 'insertions': 66, 'deletions': 0, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java'}, {'lines': 133, 'insertions': 57, 'deletions': 76, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/support/InternalTransportIndicesAdminClient.java'}, {'lines': 86, 'insertions': 86, 'deletions': 0, 'filePath': 'modules/test/integration/src/test/java/org/elasticsearch/test/stress/client/ClientFailover.java'}, {'lines': 77, 'insertions': 33, 'deletions': 44, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/support/InternalTransportClient.java'}, {'lines': 63, 'insertions': 27, 'deletions': 36, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/support/InternalTransportClusterAdminClient.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['0d755472d363de6a96f74edcfb8b4040afd98553'], 'commitUser': 'kimchy', 'commitDateTime': '2011-08-11 11:31:59', 'commitHash': 'fc6e0dd0372b0b434078626feec0c9469cd52902', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.refresh(org.elasticsearch.action.admin.indices.refresh.RefreshRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.updateSettings(org.elasticsearch.action.admin.indices.settings.UpdateSettingsRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteMapping(org.elasticsearch.action.admin.indices.mapping.delete.DeleteMappingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.status(org.elasticsearch.action.admin.indices.status.IndicesStatusRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.status(org.elasticsearch.action.admin.indices.status.IndicesStatusRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putTemplate(org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.refresh(org.elasticsearch.action.admin.indices.refresh.RefreshRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.delete(org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.analyze(org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putTemplate(org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.status(org.elasticsearch.action.admin.indices.status.IndicesStatusRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.optimize(org.elasticsearch.action.admin.indices.optimize.OptimizeRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.segments(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.segments(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.flush(org.elasticsearch.action.admin.indices.flush.FlushRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.delete(org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.gatewaySnapshot(org.elasticsearch.action.admin.indices.gateway.snapshot.GatewaySnapshotRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteMapping(org.elasticsearch.action.admin.indices.mapping.delete.DeleteMappingRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.close(org.elasticsearch.action.admin.indices.close.CloseIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.open(org.elasticsearch.action.admin.indices.open.OpenIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.aliases(org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteTemplate(org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.aliases(org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.exists(org.elasticsearch.action.admin.indices.exists.IndicesExistsRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putTemplate(org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteTemplate(org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.flush(org.elasticsearch.action.admin.indices.flush.FlushRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.segments(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.updateSettings(org.elasticsearch.action.admin.indices.settings.UpdateSettingsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.analyze(org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.updateSettings(org.elasticsearch.action.admin.indices.settings.UpdateSettingsRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.exists(org.elasticsearch.action.admin.indices.exists.IndicesExistsRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.analyze(org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putTemplate(org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.clearCache(org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteMapping(org.elasticsearch.action.admin.indices.mapping.delete.DeleteMappingRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.open(org.elasticsearch.action.admin.indices.open.OpenIndexRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.aliases(org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.flush(org.elasticsearch.action.admin.indices.flush.FlushRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.exists(org.elasticsearch.action.admin.indices.exists.IndicesExistsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.delete(org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.clearCache(org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteTemplate(org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.optimize(org.elasticsearch.action.admin.indices.optimize.OptimizeRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.close(org.elasticsearch.action.admin.indices.close.CloseIndexRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.clearCache(org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteMapping(org.elasticsearch.action.admin.indices.mapping.delete.DeleteMappingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.open(org.elasticsearch.action.admin.indices.open.OpenIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.gatewaySnapshot(org.elasticsearch.action.admin.indices.gateway.snapshot.GatewaySnapshotRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.analyze(org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.gatewaySnapshot(org.elasticsearch.action.admin.indices.gateway.snapshot.GatewaySnapshotRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.close(org.elasticsearch.action.admin.indices.close.CloseIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.delete(org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.aliases(org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.optimize(org.elasticsearch.action.admin.indices.optimize.OptimizeRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.gatewaySnapshot(org.elasticsearch.action.admin.indices.gateway.snapshot.GatewaySnapshotRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.status(org.elasticsearch.action.admin.indices.status.IndicesStatusRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.flush(org.elasticsearch.action.admin.indices.flush.FlushRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.exists(org.elasticsearch.action.admin.indices.exists.IndicesExistsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.optimize(org.elasticsearch.action.admin.indices.optimize.OptimizeRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteTemplate(org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.refresh(org.elasticsearch.action.admin.indices.refresh.RefreshRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.updateSettings(org.elasticsearch.action.admin.indices.settings.UpdateSettingsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.clearCache(org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.segments(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.open(org.elasticsearch.action.admin.indices.open.OpenIndexRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.close(org.elasticsearch.action.admin.indices.close.CloseIndexRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.refresh(org.elasticsearch.action.admin.indices.refresh.RefreshRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}], 'spoonFilePath': 'InternalTransportIndicesAdminClient.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.TransportClientNodesService.execute(org.elasticsearch.client.transport.TransportClientNodesService$NodeCallback)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.TransportClientNodesService', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.TransportClientNodesService.RetryListener', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.TransportClientNodesService.execute(org.elasticsearch.client.transport.TransportClientNodesService$NodeListenerCallback,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'TransportClientNodesService.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.multiGet(org.elasticsearch.action.get.MultiGetRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.percolate(org.elasticsearch.action.percolate.PercolateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.moreLikeThis(org.elasticsearch.action.mlt.MoreLikeThisRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.bulk(org.elasticsearch.action.bulk.BulkRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.moreLikeThis(org.elasticsearch.action.mlt.MoreLikeThisRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.searchScroll(org.elasticsearch.action.search.SearchScrollRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.deleteByQuery(org.elasticsearch.action.deletebyquery.DeleteByQueryRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.percolate(org.elasticsearch.action.percolate.PercolateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.get(org.elasticsearch.action.get.GetRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.search(org.elasticsearch.action.search.SearchRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.count(org.elasticsearch.action.count.CountRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.get(org.elasticsearch.action.get.GetRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.search(org.elasticsearch.action.search.SearchRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.bulk(org.elasticsearch.action.bulk.BulkRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.moreLikeThis(org.elasticsearch.action.mlt.MoreLikeThisRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.multiGet(org.elasticsearch.action.get.MultiGetRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.multiGet(org.elasticsearch.action.get.MultiGetRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.search(org.elasticsearch.action.search.SearchRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.count(org.elasticsearch.action.count.CountRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.get(org.elasticsearch.action.get.GetRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.deleteByQuery(org.elasticsearch.action.deletebyquery.DeleteByQueryRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.percolate(org.elasticsearch.action.percolate.PercolateRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.count(org.elasticsearch.action.count.CountRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.get(org.elasticsearch.action.get.GetRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.deleteByQuery(org.elasticsearch.action.deletebyquery.DeleteByQueryRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.searchScroll(org.elasticsearch.action.search.SearchScrollRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.index(org.elasticsearch.action.index.IndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.index(org.elasticsearch.action.index.IndexRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.index(org.elasticsearch.action.index.IndexRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.count(org.elasticsearch.action.count.CountRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.index(org.elasticsearch.action.index.IndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.searchScroll(org.elasticsearch.action.search.SearchScrollRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.search(org.elasticsearch.action.search.SearchRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.moreLikeThis(org.elasticsearch.action.mlt.MoreLikeThisRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.searchScroll(org.elasticsearch.action.search.SearchScrollRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.bulk(org.elasticsearch.action.bulk.BulkRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.bulk(org.elasticsearch.action.bulk.BulkRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.percolate(org.elasticsearch.action.percolate.PercolateRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.deleteByQuery(org.elasticsearch.action.deletebyquery.DeleteByQueryRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClient.multiGet(org.elasticsearch.action.get.MultiGetRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}], 'spoonFilePath': 'InternalTransportClient.java'}, {'spoonMethods': [{'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.state(org.elasticsearch.action.admin.cluster.state.ClusterStateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesShutdown(org.elasticsearch.action.admin.cluster.node.shutdown.NodesShutdownRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesInfo(org.elasticsearch.action.admin.cluster.node.info.NodesInfoRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesShutdown(org.elasticsearch.action.admin.cluster.node.shutdown.NodesShutdownRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.health(org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.health(org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.state(org.elasticsearch.action.admin.cluster.state.ClusterStateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesStats(org.elasticsearch.action.admin.cluster.node.stats.NodesStatsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesInfo(org.elasticsearch.action.admin.cluster.node.info.NodesInfoRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesRestart(org.elasticsearch.action.admin.cluster.node.restart.NodesRestartRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.single.SinglePingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesStats(org.elasticsearch.action.admin.cluster.node.stats.NodesStatsRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.single.SinglePingRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesRestart(org.elasticsearch.action.admin.cluster.node.restart.NodesRestartRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.broadcast.BroadcastPingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.single.SinglePingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesStats(org.elasticsearch.action.admin.cluster.node.stats.NodesStatsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.health(org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.broadcast.BroadcastPingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.state(org.elasticsearch.action.admin.cluster.state.ClusterStateRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.replication.ReplicationPingRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesInfo(org.elasticsearch.action.admin.cluster.node.info.NodesInfoRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesShutdown(org.elasticsearch.action.admin.cluster.node.shutdown.NodesShutdownRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.replication.ReplicationPingRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesRestart(org.elasticsearch.action.admin.cluster.node.restart.NodesRestartRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesStats(org.elasticsearch.action.admin.cluster.node.stats.NodesStatsRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.broadcast.BroadcastPingRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.broadcast.BroadcastPingRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.health(org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.state(org.elasticsearch.action.admin.cluster.state.ClusterStateRequest,org.elasticsearch.action.ActionListener).<unknown>', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.single.SinglePingRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesRestart(org.elasticsearch.action.admin.cluster.node.restart.NodesRestartRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.replication.ReplicationPingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesShutdown(org.elasticsearch.action.admin.cluster.node.shutdown.NodesShutdownRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.replication.ReplicationPingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'INS': 0, 'MOV': 0}, {'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesInfo(org.elasticsearch.action.admin.cluster.node.info.NodesInfoRequest,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'InternalTransportClusterAdminClient.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.test.stress.client.ClientFailover', 'INS': 1, 'MOV': 0}], 'spoonFilePath': 'ClientFailover.java'}], 'nameRev': 'fc6e0dd0372b0b434078626feec0c9469cd52902 tags/v0.18.0~270', 'commitGHEventType': 'closed', 'commitMessage': 'Java API TransportClient can fail on remote node shutdown instead of retrying the next connected node under heavy load, closes #1229.\n', 'authoredDateTime': '2011-08-11 11:31:59'}, {'commitGitStats': [{'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java'}, {'lines': 10, 'insertions': 8, 'deletions': 2, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java'}, {'lines': 17, 'insertions': 12, 'deletions': 5, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['a4339d675107a3ca9953c99328039f9c343b161c'], 'commitUser': 'kimchy', 'commitDateTime': '2011-08-11 22:35:55', 'commitHash': '3202af0dc15835f3980a3c357dbdfd14d45c129a', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 8, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.node.DiscoveryNodes.resolveNodes(java.lang.String[])', 'INS': 4, 'MOV': 4}], 'spoonFilePath': 'DiscoveryNodes.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.TransportClientNodesService.execute(org.elasticsearch.client.transport.TransportClientNodesService$NodeCallback)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.TransportClientNodesService.RetryListener.onFailure(java.lang.Throwable)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 3, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.TransportClientNodesService.execute(org.elasticsearch.client.transport.TransportClientNodesService$NodeListenerCallback,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 1}], 'spoonFilePath': 'TransportClientNodesService.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.action.support.single.shard.TransportShardSingleOperationAction.AsyncSingleAction.perform(java.lang.Exception)', 'INS': 0, 'MOV': 0}], 'spoonFilePath': 'TransportShardSingleOperationAction.java'}], 'nameRev': '3202af0dc15835f3980a3c357dbdfd14d45c129a tags/v0.18.0~266', 'commitGHEventType': 'referenced', 'commitMessage': 'when fixing #1229, we should also handle a case where the node is closing when connected from another node\n', 'authoredDateTime': '2011-08-11 22:35:55'}, {'commitGitStats': [{'lines': 2, 'insertions': 1, 'deletions': 1, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/action/support/single/shard/TransportShardSingleOperationAction.java'}, {'lines': 10, 'insertions': 8, 'deletions': 2, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node/DiscoveryNodes.java'}, {'lines': 17, 'insertions': 12, 'deletions': 5, 'filePath': 'modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/TransportClientNodesService.java'}], 'spoonStatsSkippedReason': '', 'commitParents': ['0b774ecfa1b211cb089fef48179d3d874f9511e9'], 'commitUser': 'kimchy', 'commitDateTime': '2011-08-11 22:41:18', 'commitHash': '3eef582408f0aa1dc402568ce1d93c5c13564cb4', 'commitSpoonAstDiffStats': [{'spoonMethods': [{'DEL': 0, 'TOT': 8, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.cluster.node.DiscoveryNodes.resolveNodes(java.lang.String[])', 'INS': 4, 'MOV': 4}], 'spoonFilePath': 'DiscoveryNodes.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 2, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.TransportClientNodesService.execute(org.elasticsearch.client.transport.TransportClientNodesService$NodeCallback)', 'INS': 1, 'MOV': 0}, {'DEL': 1, 'TOT': 2, 'UPD': 0, 'spoonMethodName': 'org.elasticsearch.client.transport.TransportClientNodesService.RetryListener.onFailure(java.lang.Throwable)', 'INS': 1, 'MOV': 0}, {'DEL': 0, 'TOT': 3, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.client.transport.TransportClientNodesService.execute(org.elasticsearch.client.transport.TransportClientNodesService$NodeListenerCallback,org.elasticsearch.action.ActionListener)', 'INS': 1, 'MOV': 1}], 'spoonFilePath': 'TransportClientNodesService.java'}, {'spoonMethods': [{'DEL': 0, 'TOT': 1, 'UPD': 1, 'spoonMethodName': 'org.elasticsearch.action.support.single.shard.TransportShardSingleOperationAction.AsyncSingleAction.perform(java.lang.Exception)', 'INS': 0, 'MOV': 0}], 'spoonFilePath': 'TransportShardSingleOperationAction.java'}], 'nameRev': '3eef582408f0aa1dc402568ce1d93c5c13564cb4 tags/v0.17.5~7', 'commitGHEventType': 'referenced', 'commitMessage': 'when fixing #1229, we should also handle a case where the node is closing when connected from another node\n', 'authoredDateTime': '2011-08-11 22:35:55'}]",https://github.com/elastic/elasticsearch/issues/1229,0.0002777777777777778,"['>bug', 'v0.17.5', 'v0.18.0']",Java API TransportClient can fail on remote node shutdown instead of retrying the next connected node under heavy load,2.0,"['org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.refresh(org.elasticsearch.action.admin.indices.refresh.RefreshRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.moreLikeThis(org.elasticsearch.action.mlt.MoreLikeThisRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesShutdown(org.elasticsearch.action.admin.cluster.node.shutdown.NodesShutdownRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.moreLikeThis(org.elasticsearch.action.mlt.MoreLikeThisRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClient.searchScroll(org.elasticsearch.action.search.SearchScrollRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.health(org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.status(org.elasticsearch.action.admin.indices.status.IndicesStatusRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.search(org.elasticsearch.action.search.SearchRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesRestart(org.elasticsearch.action.admin.cluster.node.restart.NodesRestartRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.refresh(org.elasticsearch.action.admin.indices.refresh.RefreshRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.get(org.elasticsearch.action.get.GetRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putTemplate(org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.status(org.elasticsearch.action.admin.indices.status.IndicesStatusRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.bulk(org.elasticsearch.action.bulk.BulkRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.segments(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteTemplate(org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.segments(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.single.SinglePingRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.moreLikeThis(org.elasticsearch.action.mlt.MoreLikeThisRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.multiGet(org.elasticsearch.action.get.MultiGetRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteMapping(org.elasticsearch.action.admin.indices.mapping.delete.DeleteMappingRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.single.SinglePingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClient.search(org.elasticsearch.action.search.SearchRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.index(org.elasticsearch.action.index.IndexRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.multiGet(org.elasticsearch.action.get.MultiGetRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.flush(org.elasticsearch.action.admin.indices.flush.FlushRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.count(org.elasticsearch.action.count.CountRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.aliases(org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.TransportClientNodesService', 'org.elasticsearch.client.transport.support.InternalTransportClient.percolate(org.elasticsearch.action.percolate.PercolateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteTemplate(org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesShutdown(org.elasticsearch.action.admin.cluster.node.shutdown.NodesShutdownRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.close(org.elasticsearch.action.admin.indices.close.CloseIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.exists(org.elasticsearch.action.admin.indices.exists.IndicesExistsRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putTemplate(org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesInfo(org.elasticsearch.action.admin.cluster.node.info.NodesInfoRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.updateSettings(org.elasticsearch.action.admin.indices.settings.UpdateSettingsRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.deleteByQuery(org.elasticsearch.action.deletebyquery.DeleteByQueryRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.multiGet(org.elasticsearch.action.get.MultiGetRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClient.count(org.elasticsearch.action.count.CountRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.get(org.elasticsearch.action.get.GetRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.updateSettings(org.elasticsearch.action.admin.indices.settings.UpdateSettingsRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesStats(org.elasticsearch.action.admin.cluster.node.stats.NodesStatsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.TransportClientNodesService.execute(org.elasticsearch.client.transport.TransportClientNodesService$NodeCallback)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesInfo(org.elasticsearch.action.admin.cluster.node.info.NodesInfoRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.segments(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.health(org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.close(org.elasticsearch.action.admin.indices.close.CloseIndexRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.clearCache(org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteMapping(org.elasticsearch.action.admin.indices.mapping.delete.DeleteMappingRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.searchScroll(org.elasticsearch.action.search.SearchScrollRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.aliases(org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.gatewaySnapshot(org.elasticsearch.action.admin.indices.gateway.snapshot.GatewaySnapshotRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.exists(org.elasticsearch.action.admin.indices.exists.IndicesExistsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.close(org.elasticsearch.action.admin.indices.close.CloseIndexRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.action.support.single.shard.TransportShardSingleOperationAction.AsyncSingleAction.perform(java.lang.Exception)', 'org.elasticsearch.client.transport.support.InternalTransportClient.percolate(org.elasticsearch.action.percolate.PercolateRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.broadcast.BroadcastPingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.clearCache(org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteMapping(org.elasticsearch.action.admin.indices.mapping.delete.DeleteMappingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesStats(org.elasticsearch.action.admin.cluster.node.stats.NodesStatsRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.gatewaySnapshot(org.elasticsearch.action.admin.indices.gateway.snapshot.GatewaySnapshotRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putTemplate(org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.open(org.elasticsearch.action.admin.indices.open.OpenIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClient.delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.open(org.elasticsearch.action.admin.indices.open.OpenIndexRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.delete(org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.state(org.elasticsearch.action.admin.cluster.state.ClusterStateRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.aliases(org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesInfo(org.elasticsearch.action.admin.cluster.node.info.NodesInfoRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesRestart(org.elasticsearch.action.admin.cluster.node.restart.NodesRestartRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.TransportClientNodesService.execute(org.elasticsearch.client.transport.TransportClientNodesService$NodeListenerCallback,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.status(org.elasticsearch.action.admin.indices.status.IndicesStatusRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.searchScroll(org.elasticsearch.action.search.SearchScrollRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.optimize(org.elasticsearch.action.admin.indices.optimize.OptimizeRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.updateSettings(org.elasticsearch.action.admin.indices.settings.UpdateSettingsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.clearCache(org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.bulk(org.elasticsearch.action.bulk.BulkRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.gatewaySnapshot(org.elasticsearch.action.admin.indices.gateway.snapshot.GatewaySnapshotRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.replication.ReplicationPingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClient.search(org.elasticsearch.action.search.SearchRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesShutdown(org.elasticsearch.action.admin.cluster.node.shutdown.NodesShutdownRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.get(org.elasticsearch.action.get.GetRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClient.index(org.elasticsearch.action.index.IndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.single.SinglePingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClient.get(org.elasticsearch.action.get.GetRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.replication.ReplicationPingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.deleteByQuery(org.elasticsearch.action.deletebyquery.DeleteByQueryRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClient.percolate(org.elasticsearch.action.percolate.PercolateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesRestart(org.elasticsearch.action.admin.cluster.node.restart.NodesRestartRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesStats(org.elasticsearch.action.admin.cluster.node.stats.NodesStatsRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.count(org.elasticsearch.action.count.CountRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.delete(org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.analyze(org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.optimize(org.elasticsearch.action.admin.indices.optimize.OptimizeRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.test.stress.client.ClientFailover', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.exists(org.elasticsearch.action.admin.indices.exists.IndicesExistsRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.flush(org.elasticsearch.action.admin.indices.flush.FlushRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.exists(org.elasticsearch.action.admin.indices.exists.IndicesExistsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.count(org.elasticsearch.action.count.CountRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.multiGet(org.elasticsearch.action.get.MultiGetRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.segments(org.elasticsearch.action.admin.indices.segments.IndicesSegmentsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesStats(org.elasticsearch.action.admin.cluster.node.stats.NodesStatsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.TransportClientNodesService.RetryListener.onFailure(java.lang.Throwable)', 'org.elasticsearch.client.transport.support.InternalTransportClient.index(org.elasticsearch.action.index.IndexRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.status(org.elasticsearch.action.admin.indices.status.IndicesStatusRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.gatewaySnapshot(org.elasticsearch.action.admin.indices.gateway.snapshot.GatewaySnapshotRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.moreLikeThis(org.elasticsearch.action.mlt.MoreLikeThisRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.delete(org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.aliases(org.elasticsearch.action.admin.indices.alias.IndicesAliasesRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.searchScroll(org.elasticsearch.action.search.SearchScrollRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.health(org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.state(org.elasticsearch.action.admin.cluster.state.ClusterStateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.single.SinglePingRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.state(org.elasticsearch.action.admin.cluster.state.ClusterStateRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteMapping(org.elasticsearch.action.admin.indices.mapping.delete.DeleteMappingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.cluster.node.DiscoveryNodes.resolveNodes(java.lang.String[])', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.analyze(org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesShutdown(org.elasticsearch.action.admin.cluster.node.shutdown.NodesShutdownRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.updateSettings(org.elasticsearch.action.admin.indices.settings.UpdateSettingsRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putMapping(org.elasticsearch.action.admin.indices.mapping.put.PutMappingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.broadcast.BroadcastPingRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.putTemplate(org.elasticsearch.action.admin.indices.template.put.PutIndexTemplateRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.refresh(org.elasticsearch.action.admin.indices.refresh.RefreshRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesInfo(org.elasticsearch.action.admin.cluster.node.info.NodesInfoRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.open(org.elasticsearch.action.admin.indices.open.OpenIndexRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.flush(org.elasticsearch.action.admin.indices.flush.FlushRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.delete(org.elasticsearch.action.admin.indices.delete.DeleteIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.create(org.elasticsearch.action.admin.indices.create.CreateIndexRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.search(org.elasticsearch.action.search.SearchRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.optimize(org.elasticsearch.action.admin.indices.optimize.OptimizeRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.analyze(org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.open(org.elasticsearch.action.admin.indices.open.OpenIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.TransportClientNodesService.RetryListener', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteTemplate(org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.broadcast.BroadcastPingRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.analyze(org.elasticsearch.action.admin.indices.analyze.AnalyzeRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.clearCache(org.elasticsearch.action.admin.indices.cache.clear.ClearIndicesCacheRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.health(org.elasticsearch.action.admin.cluster.health.ClusterHealthRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.close(org.elasticsearch.action.admin.indices.close.CloseIndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClient.delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.replication.ReplicationPingRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.optimize(org.elasticsearch.action.admin.indices.optimize.OptimizeRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.refresh(org.elasticsearch.action.admin.indices.refresh.RefreshRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.replication.ReplicationPingRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.bulk(org.elasticsearch.action.bulk.BulkRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.flush(org.elasticsearch.action.admin.indices.flush.FlushRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.deleteByQuery(org.elasticsearch.action.deletebyquery.DeleteByQueryRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportIndicesAdminClient.deleteTemplate(org.elasticsearch.action.admin.indices.template.delete.DeleteIndexTemplateRequest,org.elasticsearch.action.ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.ping(org.elasticsearch.action.admin.cluster.ping.broadcast.BroadcastPingRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.delete(org.elasticsearch.action.delete.DeleteRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.state(org.elasticsearch.action.admin.cluster.state.ClusterStateRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.index(org.elasticsearch.action.index.IndexRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClusterAdminClient.nodesRestart(org.elasticsearch.action.admin.cluster.node.restart.NodesRestartRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode)', 'org.elasticsearch.client.transport.support.InternalTransportClient.percolate(org.elasticsearch.action.percolate.PercolateRequest,org.elasticsearch.action.ActionListener).<unknown>', 'org.elasticsearch.client.transport.support.InternalTransportClient.deleteByQuery(org.elasticsearch.action.deletebyquery.DeleteByQueryRequest,org.elasticsearch.action.ActionListener).<unknown>.doWithNode(org.elasticsearch.cluster.node.DiscoveryNode,ActionListener)', 'org.elasticsearch.client.transport.support.InternalTransportClient.bulk(org.elasticsearch.action.bulk.BulkRequest,org.elasticsearch.action.ActionListener).<unknown>']","['3202af0dc15835f3980a3c357dbdfd14d45c129a', 'fc6e0dd0372b0b434078626feec0c9469cd52902']",,"['modules/elasticsearch/src/main/java/org/elasticsearch/cluster/node', 'modules/elasticsearch/src/main/java/org/elasticsearch/action/support/single', 'modules/elasticsearch/src/main/java/org/elasticsearch/client/transport', 'modules/elasticsearch/src/main/java/org/elasticsearch/client/transport/support']",204.0,164.0,368.0,6.0,120.0,164.0,255.0,5.0,90.0,40.0,7.0,0.0,0.0,0.0,1.0,0.0,0.0,elasticsearch
23206,2014-02-12 20:44:03,elbertbautista,"java.lang.NullPointerException
at org.broadleafcommerce.core.payment.service.OrderToPaymentRequestDTOServiceImpl.populateDefaultLineItemsAndSubtotal(OrderToPaymentRequestDTOServiceImpl.java:241)

There may be a state where totals are null
",2014-02-12 20:50:08,"[{'commitUser': 'elbertbautista', 'commitDateTime': '2014-02-12 14:49:20', 'commitHash': '9284bbbe91178453833610b194f6741e3a1648e5', 'commitParents': ['6f54f85be68b77d4f53ba8c86ff39f7172ecb058'], 'commitGHEventType': 'referenced', 'nameRev': '9284bbbe91178453833610b194f6741e3a1648e5 tags/broadleaf-3.1.1-GA~200', 'commitGitStats': [{'insertions': 6, 'lines': 7, 'filePath': 'core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/payment/service/OrderToPaymentRequestDTOServiceImpl.java', 'deletions': 1}], 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 4, 'DEL': 0, 'INS': 3, 'MOV': 1, 'spoonMethodName': 'org.broadleafcommerce.core.payment.service.OrderToPaymentRequestDTOServiceImpl.populateDefaultLineItemsAndSubtotal(org.broadleafcommerce.core.order.domain.Order,org.broadleafcommerce.common.payment.dto.PaymentRequestDTO)'}], 'spoonFilePath': 'OrderToPaymentRequestDTOServiceImpl.java'}], 'commitMessage': '#705 - fixing NPE in OrderToPaymentRequestDTOService in cases where totals are null on the order\n', 'spoonStatsSkippedReason': '', 'authoredDateTime': '2014-02-12 14:49:20'}]",https://github.com/BroadleafCommerce/BroadleafCommerce/issues/705,0.0002777777777777778,"['affects-3.1.x-GA', 'difficulty-easy', 'module-core', 'type-bug']",NPE OrderToPaymentRequestDTOServiceImpl for a certain state of order,1.0,"['org.broadleafcommerce.core.payment.service.OrderToPaymentRequestDTOServiceImpl.populateDefaultLineItemsAndSubtotal(org.broadleafcommerce.core.order.domain.Order,org.broadleafcommerce.common.payment.dto.PaymentRequestDTO)']",['9284bbbe91178453833610b194f6741e3a1648e5'],,['core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/payment/service'],6.0,1.0,7.0,1.0,0.0,1.0,4.0,1.0,3.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,BroadleafCommerce
23297,2013-11-05 00:03:33,e-iceman,"In the 3.0.x source there is currently a @JoinTable annotation on both OrderImpl.addedOfferCodes and OfferCodeImpl.orders which I believe is invalid according to the hibernate documentation:

""As seen previously, the other side don't have to (must not) describe the physical mapping: a simple mappedBy argument containing the owner side property name bind the two."" -
http://docs.jboss.org/hibernate/core/4.1/manual/en-US/html/ch07.html#d5e5537

This seems to be the cause of some strange behavior I have been seeing where duplicate records are intermittently being added to this mapping table.  You may want to remove one of them.
",2013-11-07 06:48:18,"[{'commitUser': 'phillipuniverse', 'commitDateTime': '2013-11-06 21:43:17', 'commitHash': '14407868a5121f69f44e8bd224a0fe86b6c78f14', 'commitParents': ['d654e0650e1bddcfee892fdc69da9511f8dbb520'], 'commitGHEventType': 'referenced', 'nameRev': '14407868a5121f69f44e8bd224a0fe86b6c78f14 tags/broadleaf-3.0.4-GA~12', 'commitGitStats': [{'insertions': 1, 'lines': 6, 'filePath': 'core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/offer/domain/OfferCodeImpl.java', 'deletions': 5}], 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 2, 'DEL': 1, 'INS': 1, 'MOV': 0, 'spoonMethodName': 'org.broadleafcommerce.core.offer.domain.OfferCodeImpl'}], 'spoonFilePath': 'OfferCodeImpl.java'}], 'commitMessage': 'Fixes #497 - Use a mappedBy for the @ManyToMany relationship from OfferCode -> Order. Order should be the owning side of the relationship\n', 'spoonStatsSkippedReason': '', 'authoredDateTime': '2013-11-06 21:43:17'}]",https://github.com/BroadleafCommerce/BroadleafCommerce/issues/497,2.000277777777778,"['affects-3.0.x-GA', 'difficulty-easy', 'module-core', 'severity-minor', 'type-bug']",Duplicate JoinTable mapping on OfferCodeImpl.orders,1.0,['org.broadleafcommerce.core.offer.domain.OfferCodeImpl'],['14407868a5121f69f44e8bd224a0fe86b6c78f14'],,['core/broadleaf-framework/src/main/java/org/broadleafcommerce/core/offer/domain'],1.0,5.0,6.0,1.0,0.0,1.0,2.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,BroadleafCommerce
25082,2014-03-13 14:23:29,carloprad,"according to the default value of the ""storage.diskCache.pageSize"" directive (64k), during an ""import database"" test I observed these write bytes size distribution:

```
     value  ------------- Distribution ------------- count
           0 |                                         0
           1 |@@@@@@@@@@@@@@@@@@@@@@@@@                8811
           2 |                                         0
           4 |                                         0
           8 |@                                        407
          16 |                                         77
          32 |@                                        182
          64 |                                         6
         128 |                                         0
         256 |                                         13
         512 |                                         12
        1024 |                                         26
        2048 |                                         47
        4096 |                                         35
        8192 |                                         0
       16384 |                                         0
       32768 |                                         0
       65536 |@@@@@@@@@@@@                             4363
      131072 |                                         0
```

It means that there were 8811 writes of 1 byte and 4363 writes of 65536 bytes (as expected), and so on.

After setting the ""storage.diskCache.pageSize"" value to ""32"", I observed these details  for the same process:

 zfs pwrite /zones/orientdbZone/root/opt/orientdb-community-1.6.4/databases

```
       value  ------------- Distribution ------------- count
           0 |                                         0
           1 |@@@@@                                    275
           2 |                                         0
           4 |                                         0
           8 |@@@@@@@                                  399
          16 |                                         0
          32 |                                         0
          64 |                                         0
         128 |                                         0
         256 |                                         13
         512 |                                         12
        1024 |                                         26
        2048 |@                                        47
        4096 |@                                        35
        8192 |                                         0
       16384 |                                         0
       32768 |@@@@@@@@@@@@@@@@@@@@@@@@@@@              1604
       65536 |                                         0
```

 zfs write /zones/orientdbZone/root/opt/orientdb-community-1.6.4/databases

```
       value  ------------- Distribution ------------- count
           0 |                                         0
           1 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        8536
           2 |                                         0
           4 |                                         0
           8 |                                         8
          16 |                                         77
          32 |@                                        182
          64 |                                         6
         128 |                                         0
         256 |                                         0
         512 |                                         0
        1024 |                                         0
        2048 |                                         0
        4096 |                                         0
        8192 |                                         0
       16384 |                                         0
       32768 |                                         0
       65536 |@@@@@@                                   1526
      131072 |                                         0
```

It seems that the pwrite() function respects the new page size setup, but the write() function doesn't.

I traced the syscalls during a simple ""create database"", trying to investigate the JVM at the same time:

zfs pwrite /zones/orientdbZone/root/opt/orientdb-community-1.6.4/databases

```
       value  ------------- Distribution ------------- count
           0 |                                         0
           1 |@@@@                                     26
           2 |                                         0
           4 |                                         0
           8 |@@@@@@@                                  39
          16 |                                         0
          32 |                                         0
          64 |                                         0
         128 |                                         0
         256 |@@                                       13
         512 |                                         0
        1024 |                                         0
        2048 |                                         0
        4096 |                                         0
        8192 |                                         0
       16384 |                                         0
       32768 |@@@@@@@@@@@@@@@@@@@@@@@@@@@              160
       65536 |                                         0
```

 zfs write /zones/orientdbZone/root/opt/orientdb-community-1.6.4/databases

```
       value  ------------- Distribution ------------- count
           0 |                                         0
           1 |@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         460
           2 |                                         0
           4 |                                         0
           8 |                                         4
          16 |@                                        18
          32 |                                         3
          64 |                                         0
         128 |                                         0
         256 |                                         0
         512 |                                         0
        1024 |                                         0
        2048 |                                         0
        4096 |                                         0
        8192 |                                         0
       16384 |                                         0
       32768 |                                         0
       65536 |@@@@@@                                   92
      131072 |                                         0
```

Here the JVM methods executed a suspicious number of times, during the ""create database"" process:

METHODS EXECUTED 460 TIMES (1 B)

java/io/RandomAccessFile.write0

METHODS EXECUTED 92 TIMES (64K)

com/orientechnologies/orient/core/db/ODatabaseWrapperAbstract.getName
com/orientechnologies/orient/core/storage/impl/local/paginated/wal/OWALPage.getFilledUpTo
 com/orientechnologies/orient/core/storage/impl/local/paginated/wal/OWriteAheadLog$LogSegment$FlushTask.flushPage
java/lang/StringBuffer.append
java/util/concurrent/ConcurrentLinkedQueue$Itr.next

METHODS EXECUTED 26 TIMES (1B)

com/orientechnologies/orient/core/storage/fs/OAbstractFile.<init>
com/orientechnologies/orient/core/storage/fs/OAbstractFile.create
com/orientechnologies/orient/core/storage/fs/OAbstractFile.lock
com/orientechnologies/orient/core/storage/fs/OAbstractFile.openChannel
com/orientechnologies/orient/core/storage/fs/OAbstractFile.setHeaderDirty
com/orientechnologies/orient/core/storage/fs/OFileClassic.<init>
com/orientechnologies/orient/core/storage/fs/OFileClassic.create
com/orientechnologies/orient/core/storage/fs/OFileClassic.getBuffer
com/orientechnologies/orient/core/storage/fs/OFileClassic.setFilledUpTo
com/orientechnologies/orient/core/storage/fs/OFileClassic.setSize
com/orientechnologies/orient/core/storage/fs/OFileClassic.setSoftlyClosed
com/orientechnologies/orient/core/storage/fs/OFileClassic.setVersion
com/orientechnologies/orient/core/storage/impl/local/paginated/OLocalPaginatedStorage.getMode

METHODS EXECUTED 39 TIMES (8B)

com/orientechnologies/orient/core/storage/fs/OFileClassic.getWriteBuffer

METHODS EXECUTED 13 TIMES (256B)

com/orientechnologies/orient/core/storage/fs/OFileClassic.writeInt
java/io/OutputStream.<init>
",2016-03-22 10:13:14,"[{'commitUser': 'laa', 'commitDateTime': '2016-03-22 12:12:09', 'commitHash': 'a88403ad6c0363afb9ec6609d2ab34af2ab8ce69', 'commitParents': ['4578b11c5abcce130a9c4a39ab11dfc24e1d74fd'], 'commitGHEventType': 'referenced', 'nameRev': 'a88403ad6c0363afb9ec6609d2ab34af2ab8ce69 tags/2.1.19~120', 'commitGitStats': [{'insertions': 11, 'lines': 21, 'filePath': 'core/src/main/java/com/orientechnologies/orient/core/storage/impl/local/paginated/wal/OWALPage.java', 'deletions': 10}, {'insertions': 4, 'lines': 7, 'filePath': 'core/src/test/java/com/orientechnologies/orient/core/storage/impl/local/paginated/LocalPaginatedClusterTest.java', 'deletions': 3}], 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 2, 'DEL': 1, 'INS': 1, 'MOV': 0, 'spoonMethodName': 'com.orientechnologies.orient.core.storage.impl.local.paginated.LocalPaginatedClusterTest.testAddOneBigRecord()'}, {'UPD': 0, 'TOT': 4, 'DEL': 2, 'INS': 2, 'MOV': 0, 'spoonMethodName': 'com.orientechnologies.orient.core.storage.impl.local.paginated.LocalPaginatedClusterTest.testUpdateOneBigRecord()'}], 'spoonFilePath': 'LocalPaginatedClusterTest.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 2, 'DEL': 1, 'INS': 1, 'MOV': 0, 'spoonMethodName': 'com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OWALPage'}], 'spoonFilePath': 'OWALPage.java'}], 'commitMessage': 'Issue #2121 was fixed.\n', 'spoonStatsSkippedReason': '', 'authoredDateTime': '2016-03-22 12:12:09'}]",https://github.com/orientechnologies/orientdb/issues/2121,739.0002777777778,['bug'],"ODB server doesn't totally respect the ""storage.diskCache.pageSize"" directive",1.0,['com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OWALPage'],['a88403ad6c0363afb9ec6609d2ab34af2ab8ce69'],,['core/src/main/java/com/orientechnologies/orient/core/storage/impl'],11.0,10.0,21.0,1.0,0.0,1.0,2.0,0.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,orientdb
26076,2017-04-27 15:29:04,jlink,"## Bug description
```
String idString = uniqueIdFromMethodDescriptorWithArrayParameter.toString();
UniqueId id = UniqueId.parse(idString);
```
will fail with `PreconditionViolation` since array types are described with an `[` in front but `[` chars are currently forbidden as segment values.

## Suggested Solution

Change representation of array types in `ReflectionUtils.findMethod(clazz, methodName, parameterTypeNames)` and `StringUtils.nullSafeToString(classes)`. 

Alternative: Don't use `[` as separator char in unique IDs. But some 3rd party tools might already have committed to the current format.

## Deliverables

- [ ] Encode `segmentType` and `value` in constructor and decode in `parse`.",2017-06-15 20:56:37,"[{'commitUser': 'sormuras', 'commitDateTime': '', 'commitHash': 'a156a09bc80e9ae2fb5958b106325eed72a59989', 'commitParents': [], 'commitGHEventType': 'referenced', 'nameRev': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'commitMessage': '', 'spoonStatsSkippedReason': '', 'authoredDateTime': ''}, {'commitUser': 'sormuras', 'commitDateTime': '2017-06-15 22:56:36', 'commitHash': 'f5b0169bb2b8a9eb265c5b6e7540ebb8eccc623c', 'commitParents': ['12e980a840c1dfbc97ad12f93fc4d260d30e0e26'], 'commitGHEventType': 'referenced', 'nameRev': 'f5b0169bb2b8a9eb265c5b6e7540ebb8eccc623c tags/r5.0.0-M5~77', 'commitGitStats': [{'insertions': 8, 'lines': 10, 'filePath': 'junit-platform-engine/src/test/java/org/junit/platform/engine/test/event/ExecutionEventConditions.java', 'deletions': 2}, {'insertions': 49, 'lines': 54, 'filePath': 'junit-platform-engine/src/main/java/org/junit/platform/engine/UniqueIdFormat.java', 'deletions': 5}, {'insertions': 62, 'lines': 62, 'filePath': 'junit-jupiter-engine/src/test/java/org/junit/jupiter/engine/execution/ArrayTests.java', 'deletions': 0}, {'insertions': 4, 'lines': 4, 'filePath': 'documentation/src/docs/asciidoc/release-notes-5.0.0-M5.adoc', 'deletions': 0}, {'insertions': 25, 'lines': 25, 'filePath': 'platform-tests/src/test/java/org/junit/platform/engine/UniqueIdTests.java', 'deletions': 0}], 'commitSpoonAstDiffStats': [{'spoonMethods': [{'UPD': 0, 'TOT': 4, 'DEL': 0, 'INS': 2, 'MOV': 2, 'spoonMethodName': 'org.junit.platform.engine.UniqueIdFormat.createSegment(java.lang.String)'}, {'UPD': 0, 'TOT': 1, 'DEL': 0, 'INS': 1, 'MOV': 0, 'spoonMethodName': 'org.junit.platform.engine.UniqueIdFormat.decode(java.lang.String)'}, {'UPD': 0, 'TOT': 1, 'DEL': 0, 'INS': 1, 'MOV': 0, 'spoonMethodName': 'org.junit.platform.engine.UniqueIdFormat.encode(java.lang.String)'}, {'UPD': 1, 'TOT': 7, 'DEL': 1, 'INS': 2, 'MOV': 3, 'spoonMethodName': 'org.junit.platform.engine.UniqueIdFormat.describe(org.junit.platform.engine.UniqueId.Segment)'}, {'UPD': 0, 'TOT': 1, 'DEL': 0, 'INS': 1, 'MOV': 0, 'spoonMethodName': 'org.junit.platform.engine.UniqueIdFormat.encode(char)'}, {'UPD': 0, 'TOT': 8, 'DEL': 0, 'INS': 8, 'MOV': 0, 'spoonMethodName': 'org.junit.platform.engine.UniqueIdFormat'}], 'spoonFilePath': 'UniqueIdFormat.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'DEL': 0, 'INS': 1, 'MOV': 0, 'spoonMethodName': 'org.junit.platform.engine.UniqueIdTests.ParsingAndFormatting.ensureDefaultToStringAndParsingIsIdempotent(java.lang.String)'}, {'UPD': 0, 'TOT': 1, 'DEL': 0, 'INS': 1, 'MOV': 0, 'spoonMethodName': 'org.junit.platform.engine.UniqueIdTests.ParsingAndFormatting.ensureDefaultUniqueIdFormatDecodingEncodedSegmentParts()'}, {'UPD': 0, 'TOT': 1, 'DEL': 0, 'INS': 1, 'MOV': 0, 'spoonMethodName': 'org.junit.platform.engine.UniqueIdTests.ParsingAndFormatting.ensureDefaultUniqueIdFormatCanHandleAllCharacters()'}], 'spoonFilePath': 'UniqueIdTests.java'}, {'spoonMethods': [{'UPD': 0, 'TOT': 1, 'DEL': 0, 'INS': 1, 'MOV': 0, 'spoonMethodName': 'org.junit.jupiter.engine.execution.ArrayTests'}], 'spoonFilePath': 'ArrayTests.java'}, {'spoonMethods': [{'UPD': 2, 'TOT': 6, 'DEL': 1, 'INS': 2, 'MOV': 1, 'spoonMethodName': 'org.junit.platform.engine.test.event.ExecutionEventConditions.uniqueIdSubstring(java.lang.String)'}], 'spoonFilePath': 'ExecutionEventConditions.java'}], 'commitMessage': 'URL encode ""forbidden"" characters in UniqueId segment strings\n\nPrior to this commit segment strings could contain characters that are\nused by the toString-representation syntax of UniqueIdFormat. Now these\n""forbidden"" (reserved) characters are URL encoded, as well as decoded\nwhen parsing unique ids.\n\nFixes #810\n', 'spoonStatsSkippedReason': '', 'authoredDateTime': '2017-06-14 00:34:33'}, {'commitUser': 'sormuras', 'commitDateTime': '', 'commitHash': 'ea1c832ca6ba1af9948f974d2e601749e38435a5', 'commitParents': [], 'commitGHEventType': 'referenced', 'nameRev': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'commitMessage': '', 'spoonStatsSkippedReason': '', 'authoredDateTime': ''}, {'commitUser': 'sormuras', 'commitDateTime': '', 'commitHash': '411bf2b68c0604f3645d867336d7c0d9995d9bd5', 'commitParents': [], 'commitGHEventType': 'referenced', 'nameRev': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'commitMessage': '', 'spoonStatsSkippedReason': '', 'authoredDateTime': ''}, {'commitUser': 'sormuras', 'commitDateTime': '', 'commitHash': '13632f168be8ff19b12d20d06d3864f736ae2fe2', 'commitParents': [], 'commitGHEventType': 'referenced', 'nameRev': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'commitMessage': '', 'spoonStatsSkippedReason': '', 'authoredDateTime': ''}, {'commitUser': 'sormuras', 'commitDateTime': '', 'commitHash': 'fa23d954c4691af76385d6f2b0323861b45ee7a3', 'commitParents': [], 'commitGHEventType': 'referenced', 'nameRev': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'commitMessage': '', 'spoonStatsSkippedReason': '', 'authoredDateTime': ''}, {'commitUser': 'sormuras', 'commitDateTime': '', 'commitHash': '4cc84b7b9c866bf2affb76d6b01e7f76250471db', 'commitParents': [], 'commitGHEventType': 'referenced', 'nameRev': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'commitMessage': '', 'spoonStatsSkippedReason': '', 'authoredDateTime': ''}, {'commitUser': 'sormuras', 'commitDateTime': '', 'commitHash': 'a39c945925d6dde411dab1f55b4bba58a7e34ca8', 'commitParents': [], 'commitGHEventType': 'referenced', 'nameRev': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'commitMessage': '', 'spoonStatsSkippedReason': '', 'authoredDateTime': ''}, {'commitUser': 'sormuras', 'commitDateTime': '', 'commitHash': '3e9e4fcc4b3e407d56db04ab4163dd06c3c43944', 'commitParents': [], 'commitGHEventType': 'referenced', 'nameRev': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'commitMessage': '', 'spoonStatsSkippedReason': '', 'authoredDateTime': ''}]",https://github.com/junit-team/junit5/issues/810,49.000277777777775,"['component: Platform', 'theme: discovery', 'type: bug']",UniqueId.parse fails for methods with array type parameters,1.0,"['org.junit.platform.engine.UniqueIdFormat.createSegment(java.lang.String)', 'org.junit.platform.engine.UniqueIdFormat.decode(java.lang.String)', 'org.junit.platform.engine.test.event.ExecutionEventConditions.uniqueIdSubstring(java.lang.String)', 'org.junit.platform.engine.UniqueIdFormat.encode(java.lang.String)', 'org.junit.platform.engine.UniqueIdFormat.describe(org.junit.platform.engine.UniqueId.Segment)', 'org.junit.platform.engine.UniqueIdFormat.encode(char)', 'org.junit.platform.engine.UniqueIdFormat']",['f5b0169bb2b8a9eb265c5b6e7540ebb8eccc623c'],,['junit-platform-engine/src/main/java/org/junit/platform/engine'],49.0,5.0,54.0,1.0,3.0,7.0,28.0,6.0,17.0,2.0,2.0,0.0,0.0,0.0,8.0,0.0,0.0,junit5
26428,2019-09-09 14:56:15,NiklasRentzCAU,"```
node n {
	algorithm:box
	minimalNodeSize:""(60.0,60.0)""
	elk.padding:""[top=25.0,left=25.0,bottom=0.0,right=0.0]""
	node ni {
		layout[size:10,10]
	}
}
```
Drawing this graph I would expect a parent node with size 60x60 and a node inside that with a padding of 25 from the top left, putting it in the center of the 60x60 parent node.
Instead, a 35*35 node is drawn with the inner node locked in the bottom right corner.

I tracked down where this issue comes from and found [this commit](https://github.com/eclipse/elk/commit/89caa5cd53bf6a2a51534281f16702cb12cb82d1). In there, the BoxLayoutProvider was changed to not read the individual width and height and work on local copies of that, but change the x and y values of the instance stored in the minimum node size property directly. That causes the minimum size constraint to get messed with during box layout if a padding is configured. That should not happen.
The version previous to that commit looks good to me, or just to not put the values for the box layouter back into the bounds instance.",2019-11-04 15:11:58,"[{'commitHash': '7028118320427ea12914d0e7a15e58dcf4864684', 'commitGHEventType': 'referenced', 'commitUser': 'le-cds', 'commitParents': ['938283d768b8cbad3ae16f304a23fcf172fcd70f'], 'nameRev': '7028118320427ea12914d0e7a15e58dcf4864684 tags/v0.6.0~32', 'commitMessage': 'Core: Fixes box layout interfering with minimum node size. #457\n\nThe box layouter changed the minimum node size of nodes with paddings.\n', 'commitDateTime': '2019-11-04 16:10:47', 'authoredDateTime': '2019-11-04 16:10:47', 'commitGitStats': [{'filePath': 'plugins/org.eclipse.elk.core/src/org/eclipse/elk/core/util/BoxLayoutProvider.java', 'insertions': 5, 'deletions': 3, 'lines': 8}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'BoxLayoutProvider.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.elk.core.util.BoxLayoutProvider.placeBoxes(java.util.List,org.eclipse.elk.graph.ElkNode,double,org.eclipse.elk.core.math.ElkPadding,boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.elk.core.util.BoxLayoutProvider.placeBoxesGrouping(org.eclipse.elk.graph.ElkNode,float,org.eclipse.elk.core.math.ElkPadding,boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/eclipse/elk/issues/457,56.000277777777775,['bug'],Box layout algorithm interferes with set minumum size,1.0,"['org.eclipse.elk.core.util.BoxLayoutProvider.placeBoxesGrouping(org.eclipse.elk.graph.ElkNode,float,org.eclipse.elk.core.math.ElkPadding,boolean)', 'org.eclipse.elk.core.util.BoxLayoutProvider.placeBoxes(java.util.List,org.eclipse.elk.graph.ElkNode,double,org.eclipse.elk.core.math.ElkPadding,boolean)']",['7028118320427ea12914d0e7a15e58dcf4864684'],,['plugins/org.eclipse.elk.core/src/org/eclipse/elk/core/util'],5.0,3.0,8.0,1.0,0.0,2.0,4.0,2.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,elk
29073,2017-11-17 16:34:04,karussell,"There is a minor problem when reducing the size and if size is 0

```
 /route
java.lang.ArrayIndexOutOfBoundsException: -1
        at com.graphhopper.util.PointList.add(PointList.java:260)
        at com.graphhopper.util.PathMerger.doWork(PathMerger.java:119)
        at com.graphhopper.routing.template.ViaRoutingTemplate.isReady(ViaRoutingTemplate.java:155)
        at com.graphhopper.GraphHopper.calcPaths(GraphHopper.java:1072)
```",2017-11-21 05:51:06,"[{'commitHash': '77cf5139650d326e6835a8ab638d3d4d93d0f0dc', 'commitGHEventType': 'referenced', 'commitUser': 'karussell', 'commitParents': ['157ce0ce798b4f7c0b6fd24147e4930a6e72d4c2'], 'nameRev': '77cf5139650d326e6835a8ab638d3d4d93d0f0dc tags/0.10.alpha3~4^2', 'commitMessage': 'avoid problem with via point and disconnected area, fixes #1223\n', 'commitDateTime': '2017-11-18 19:08:26', 'authoredDateTime': '2017-11-18 19:08:26', 'commitGitStats': [{'filePath': 'core/files/krautsand.osm.gz', 'insertions': 0, 'deletions': 0, 'lines': 0}, {'filePath': 'core/src/main/java/com/graphhopper/util/PathMerger.java', 'insertions': 4, 'deletions': 0, 'lines': 4}, {'filePath': 'core/src/main/java/com/graphhopper/util/PointList.java', 'insertions': 4, 'deletions': 1, 'lines': 5}, {'filePath': 'core/src/test/java/com/graphhopper/util/PointListTest.java', 'insertions': 13, 'deletions': 7, 'lines': 20}, {'filePath': 'reader-osm/src/test/java/com/graphhopper/routing/RoutingAlgorithmWithOSMIT.java', 'insertions': 15, 'deletions': 0, 'lines': 15}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'PathMerger.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.util.PathMerger.doWork(com.graphhopper.PathWrapper,java.util.List,com.graphhopper.util.Translation)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'PointList.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.util.PointList.removeLastPoint()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'PointListTest.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.util.PointListTest.testRemoveLast()', 'TOT': 5, 'UPD': 0, 'INS': 5, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RoutingAlgorithmWithOSMIT.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.routing.RoutingAlgorithmWithOSMIT.testDisconnectedAreaAndMultiplePoints()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.routing.RoutingAlgorithmWithOSMIT.runAlgo(com.graphhopper.routing.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/graphhopper/graphhopper/issues/1223,3.000277777777778,['bug'],Path Details produces ArrayIndexOutOfBoundsException,1.0,"['com.graphhopper.routing.RoutingAlgorithmWithOSMIT.runAlgo(com.graphhopper.routing.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)', 'com.graphhopper.util.PathMerger.doWork(com.graphhopper.PathWrapper,java.util.List,com.graphhopper.util.Translation)', 'com.graphhopper.routing.RoutingAlgorithmWithOSMIT.testDisconnectedAreaAndMultiplePoints()', 'com.graphhopper.util.PointList.removeLastPoint()']",['77cf5139650d326e6835a8ab638d3d4d93d0f0dc'],,"['core/files/krautsand.osm.gz', 'core/src/main/java/com/graphhopper/util']",8.0,1.0,9.0,3.0,0.0,4.0,4.0,0.0,4.0,0.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,graphhopper
29171,2014-11-06 21:01:35,karussell,"As reported [here](https://lists.openstreetmap.org/pipermail/graphhopper/2014-November/001342.html) there is a problem with turn cost weighting.
- [x] virtual edges should have the same turn costs associated as the original edge! keep in mind that there could be multiple points on one edge => more than 2 virtual edges per original edge
- [x] In RoutingAlgorithmIT.testMoscowTurnCosts we should do some minor work to finally resolve the TODOs -> we can include this once we have fixed the previous issue
- [x] u-turn restrictions do not seem to work, probably due to the if 'edgeId != edgeIdFrom'
",2015-01-14 15:36:19,"[{'commitHash': '57d4b7775601df55f44c752c8bb7e671456574e6', 'commitGHEventType': 'referenced', 'commitUser': 'karussell', 'commitParents': ['a731fbfca4109819d654c05ab1b2b5c5727e2959'], 'nameRev': '57d4b7775601df55f44c752c8bb7e671456574e6 tags/0.4.1~96', 'commitMessage': 'fixing u-turn bug found in #282\n', 'commitDateTime': '2014-11-20 12:09:14', 'authoredDateTime': '2014-11-20 12:09:14', 'commitGitStats': [{'filePath': 'core/src/main/java/com/graphhopper/reader/OSMTurnRelation.java', 'insertions': 4, 'deletions': 5, 'lines': 9}, {'filePath': 'core/src/test/java/com/graphhopper/reader/OSMReaderTest.java', 'insertions': 10, 'deletions': 6, 'lines': 16}, {'filePath': 'core/src/test/resources/com/graphhopper/reader/test-restrictions.xml', 'insertions': 2, 'deletions': 2, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'OSMTurnRelation.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.reader.OSMTurnRelation.getRestrictionAsEntries(com.graphhopper.routing.util.TurnCostEncoder,com.graphhopper.util.EdgeExplorer,com.graphhopper.util.EdgeExplorer,com.graphhopper.reader.OSMReader)', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}]}, {'spoonFilePath': 'OSMReaderTest.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.reader.OSMReaderTest.testTurnRestrictions()', 'TOT': 8, 'UPD': 0, 'INS': 3, 'MOV': 5, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '40855ec1d97fdeb60baecd5c9ebcccab0ba3bc05', 'commitGHEventType': 'referenced', 'commitUser': 'karussell', 'commitParents': ['75a6b9c9c915224c1643ea4f29d800cc6659cfe7'], 'nameRev': '40855ec1d97fdeb60baecd5c9ebcccab0ba3bc05 tags/0.4.1~82', 'commitMessage': 'preparation for #282\n', 'commitDateTime': '2014-12-03 11:57:52', 'authoredDateTime': '2014-12-03 11:57:52', 'commitGitStats': [{'filePath': 'core/src/main/java/com/graphhopper/GraphHopper.java', 'insertions': 23, 'deletions': 14, 'lines': 37}, {'filePath': 'core/src/main/java/com/graphhopper/reader/OSMReader.java', 'insertions': 3, 'deletions': 3, 'lines': 6}, {'filePath': 'core/src/main/java/com/graphhopper/routing/AlgorithmOptions.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'core/src/main/java/com/graphhopper/routing/QueryGraph.java', 'insertions': 10, 'deletions': 3, 'lines': 13}, {'filePath': 'core/src/main/java/com/graphhopper/routing/util/TestAlgoCollector.java', 'insertions': 9, 'deletions': 3, 'lines': 12}, {'filePath': 'core/src/main/java/com/graphhopper/routing/util/TurnWeighting.java', 'insertions': 7, 'deletions': 7, 'lines': 14}, {'filePath': 'core/src/main/java/com/graphhopper/storage/Graph.java', 'insertions': 5, 'deletions': 0, 'lines': 5}, {'filePath': 'core/src/main/java/com/graphhopper/storage/GraphBuilder.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'core/src/main/java/com/graphhopper/storage/{ExtendedStorage.java => GraphExtension.java}', 'insertions': 4, 'deletions': 4, 'lines': 8}, {'filePath': 'core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java', 'insertions': 4, 'deletions': 4, 'lines': 8}, {'filePath': 'core/src/main/java/com/graphhopper/storage/GraphStorage.java', 'insertions': 0, 'deletions': 5, 'lines': 5}, {'filePath': 'core/src/main/java/com/graphhopper/storage/{TurnCostStorage.java => TurnCostExtension.java}', 'insertions': 8, 'deletions': 7, 'lines': 15}, {'filePath': 'core/src/test/java/com/graphhopper/reader/OSMReaderTest.java', 'insertions': 5, 'deletions': 5, 'lines': 10}, {'filePath': 'core/src/test/java/com/graphhopper/routing/EdgeBasedRoutingAlgorithmTest.java', 'insertions': 6, 'deletions': 6, 'lines': 12}, {'filePath': 'core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java', 'insertions': 4, 'deletions': 3, 'lines': 7}, {'filePath': 'core/src/test/java/com/graphhopper/storage/GraphHopperStorageWithTurnCostsTest.java', 'insertions': 2, 'deletions': 2, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'GraphHopper.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)', 'TOT': 11, 'UPD': 4, 'INS': 3, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'com.graphhopper.GraphHopper.load(java.lang.String)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.GraphHopper.createWeighting(com.graphhopper.WeightingMap,com.graphhopper.FlagEncoder)', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'com.graphhopper.GraphHopper.createTurnWeighting(com.graphhopper.Weighting,com.graphhopper.Graph,com.graphhopper.FlagEncoder)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'OSMReader.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.reader.OSMReader.processRelation(com.graphhopper.reader.OSMRelation)', 'TOT': 4, 'UPD': 4, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'AlgorithmOptions.java', 'spoonMethods': []}, {'spoonFilePath': 'QueryGraph.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.routing.QueryGraph.getExtension()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'TestAlgoCollector.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.routing.util.TestAlgoCollector.assertDistance(com.graphhopper.routing.util.TestAlgoCollector$AlgoHelperEntry,java.util.List,com.graphhopper.routing.util.TestAlgoCollector$OneRun)', 'TOT': 6, 'UPD': 3, 'INS': 3, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'TurnWeighting.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.routing.util.TurnWeighting', 'TOT': 7, 'UPD': 7, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int,int,int)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Graph.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.storage.getExtension()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'GraphBuilder.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.storage.GraphBuilder.build()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'GraphExtension.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.storage', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.copyTo(com.graphhopper.storage.ExtendedStorage)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.NoExtendedStorage.copyTo(com.graphhopper.storage.ExtendedStorage)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'GraphHopperStorage.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.storage.GraphHopperStorage.getExtendedStorage()', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.GraphHopperStorage', 'TOT': 3, 'UPD': 3, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'GraphStorage.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.storage.getExtendedStorage()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}]}, {'spoonFilePath': 'TurnCostExtension.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage', 'TOT': 12, 'UPD': 12, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.copyTo(com.graphhopper.storage.ExtendedStorage)', 'TOT': 6, 'UPD': 6, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.addTurnInfo(int,int,int,long)', 'TOT': 24, 'UPD': 24, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.nextTurnCostEntryIndex()', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.setSegmentSize(int)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.create(long)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.flush()', 'TOT': 5, 'UPD': 5, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.close()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.loadExisting()', 'TOT': 5, 'UPD': 5, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.getTurnCostFlags(int,int,int)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.nextCostFlags(int,int,int)', 'TOT': 12, 'UPD': 12, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.ensureTurnCostIndex(int)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.getDefaultNodeFieldValue()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.init(com.graphhopper.storage.GraphStorage)', 'TOT': 5, 'UPD': 5, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.TurnCostStorage.getCapacity()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'OSMReaderTest.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.reader.OSMReaderTest.testTurnRestrictions()', 'TOT': 4, 'UPD': 4, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.reader.OSMReaderTest.newGraph(java.lang.String,com.graphhopper.reader.EncodingManager,boolean,boolean)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'EdgeBasedRoutingAlgorithmTest.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.initTurnRestrictions(com.graphhopper.storage.Graph,com.graphhopper.storage.TurnCostStorage,com.graphhopper.routing.TurnCostEncoder)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.createWeighting(com.graphhopper.routing.FlagEncoder,com.graphhopper.storage.TurnCostStorage)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.testBasicTurnRestriction()', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.testUTurns()', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.testBasicTurnCosts()', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RoutingAlgorithmIT.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.routing.RoutingAlgorithmIT.runAlgo(com.graphhopper.routing.util.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'GraphHopperStorageWithTurnCostsTest.java', 'spoonMethods': [{'spoonMethodName': 'com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.newGraph(com.graphhopper.storage.Directory,boolean)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '6fa2557f1b581c438352a9e1b94ee5011a8d70ca', 'commitGHEventType': 'closed', 'commitUser': 'karussell', 'commitParents': ['83705c23a4c58d5755428e2b095adb739b6b76e2'], 'nameRev': '6fa2557f1b581c438352a9e1b94ee5011a8d70ca tags/0.4.1~50', 'commitMessage': 'fixed #282, issues with turn restrictions, also important refactoring: using nodeVia always as second parameter\n', 'commitDateTime': '2015-01-14 16:36:12', 'authoredDateTime': '2015-01-14 16:36:12', 'commitGitStats': [{'filePath': 'core/src/main/java/com/graphhopper/routing/QueryGraph.java', 'insertions': 58, 'deletions': 359, 'lines': 417}, {'filePath': 'core/src/main/java/com/graphhopper/routing/VirtualEdgeIState.java', 'insertions': 195, 'deletions': 0, 'lines': 195}, {'filePath': 'core/src/main/java/com/graphhopper/routing/VirtualEdgeIterator.java', 'insertions': 198, 'deletions': 0, 'lines': 198}, {'filePath': 'core/src/main/java/com/graphhopper/routing/util/TurnWeighting.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'core/src/main/java/com/graphhopper/storage/TurnCostExtension.java', 'insertions': 5, 'deletions': 5, 'lines': 10}, {'filePath': 'core/src/test/java/com/graphhopper/reader/OSMReaderTest.java', 'insertions': 13, 'deletions': 13, 'lines': 26}, {'filePath': 'core/src/test/java/com/graphhopper/routing/QueryGraphTest.java', 'insertions': 43, 'deletions': 3, 'lines': 46}, {'filePath': 'core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java', 'insertions': 2, 'deletions': 4, 'lines': 6}, {'filePath': 'core/src/test/java/com/graphhopper/storage/GraphHopperStorageWithTurnCostsTest.java', 'insertions': 4, 'deletions': 4, 'lines': 8}], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': 'tooManyChanges'}]",https://github.com/graphhopper/graphhopper/issues/282,68.00027777777778,['bug'],Turn Costs improvements necessary,3.0,"['com.graphhopper.GraphHopper.createTurnWeighting(com.graphhopper.Weighting,com.graphhopper.Graph,com.graphhopper.FlagEncoder)', 'com.graphhopper.routing.QueryGraph.getExtension()', 'com.graphhopper.storage.TurnCostStorage.addTurnInfo(int,int,int,long)', 'com.graphhopper.storage.TurnCostStorage.ensureTurnCostIndex(int)', 'com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int,int,int)', 'com.graphhopper.GraphHopper.createWeighting(com.graphhopper.WeightingMap,com.graphhopper.FlagEncoder)', 'com.graphhopper.storage.GraphHopperStorage.getExtendedStorage()', 'com.graphhopper.storage', 'com.graphhopper.reader.OSMTurnRelation.getRestrictionAsEntries(com.graphhopper.routing.util.TurnCostEncoder,com.graphhopper.util.EdgeExplorer,com.graphhopper.util.EdgeExplorer,com.graphhopper.reader.OSMReader)', 'com.graphhopper.storage.TurnCostStorage.copyTo(com.graphhopper.storage.ExtendedStorage)', 'com.graphhopper.storage.TurnCostStorage.flush()', 'com.graphhopper.routing.RoutingAlgorithmIT.runAlgo(com.graphhopper.routing.util.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)', 'com.graphhopper.storage.TurnCostStorage.init(com.graphhopper.storage.GraphStorage)', 'com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)', 'com.graphhopper.storage.TurnCostStorage.getCapacity()', 'com.graphhopper.storage.getExtension()', 'com.graphhopper.storage.NoExtendedStorage.copyTo(com.graphhopper.storage.ExtendedStorage)', 'com.graphhopper.storage.TurnCostStorage.create(long)', 'com.graphhopper.reader.OSMReader.processRelation(com.graphhopper.reader.OSMRelation)', 'com.graphhopper.storage.TurnCostStorage', 'com.graphhopper.storage.GraphHopperStorage', 'com.graphhopper.GraphHopper.load(java.lang.String)', 'com.graphhopper.routing.util.TurnWeighting', 'com.graphhopper.storage.TurnCostStorage.loadExisting()', 'com.graphhopper.storage.copyTo(com.graphhopper.storage.ExtendedStorage)', 'com.graphhopper.storage.TurnCostStorage.nextCostFlags(int,int,int)', 'com.graphhopper.storage.getExtendedStorage()', 'com.graphhopper.storage.TurnCostStorage.getTurnCostFlags(int,int,int)', 'com.graphhopper.storage.GraphBuilder.build()', 'com.graphhopper.storage.TurnCostStorage.setSegmentSize(int)', 'com.graphhopper.storage.TurnCostStorage.getDefaultNodeFieldValue()', 'com.graphhopper.storage.TurnCostStorage.close()', 'com.graphhopper.storage.TurnCostStorage.nextTurnCostEntryIndex()']","['57d4b7775601df55f44c752c8bb7e671456574e6', '40855ec1d97fdeb60baecd5c9ebcccab0ba3bc05', '6fa2557f1b581c438352a9e1b94ee5011a8d70ca']",,"['core/src/main/java/com/graphhopper/routing/util', 'core/src/main/java/com/graphhopper/routing', 'core/src/main/java/com/graphhopper/reader', 'core/src/main/java/com/graphhopper/storage', 'core/src/main/java/com/graphhopper']",527.0,419.0,946.0,15.0,110.0,33.0,128.0,7.0,7.0,4.0,12.0,0.0,0.0,0.0,0.0,0.0,0.0,graphhopper
29398,2017-02-15 02:28:03,bobwenx,"### What version of gRPC are you using?
GRPC 1.1.2

### What JVM are you using (`java -version`)?
1.8.0_112

### What did you do?
Just simply call io.grpc.netty.NettyChannelBuilder#enableKeepAlive(boolean) during channel build. and the grpc always throw NPE exception.

```
java.lang.NullPointerException: null
	at io.grpc.netty.NettyClientTransport.start(NettyClientTransport.java:169)
	at io.grpc.internal.ForwardingConnectionClientTransport.start(ForwardingConnectionClientTransport.java:44)
	at io.grpc.internal.TransportSet.startNewTransport(TransportSet.java:233)
	at io.grpc.internal.TransportSet.obtainActiveTransport(TransportSet.java:203)
	at io.grpc.internal.ManagedChannelImpl$3.getTransport(ManagedChannelImpl.java:739)
	at io.grpc.internal.ManagedChannelImpl$3.getTransport(ManagedChannelImpl.java:677)
	at io.grpc.PickFirstBalancerFactory$PickFirstBalancer$1.get(PickFirstBalancerFactory.java:129)
	at io.grpc.internal.DelayedClientTransport$2.run(DelayedClientTransport.java:271)
	at java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
```

and inspect the code(io.grpc.netty.NettyClientTransport#start):

```java
 @SuppressWarnings(""unchecked"")
  @Override
  public Runnable start(Listener transportListener) {
    lifecycleManager = new ClientTransportLifecycleManager(
        Preconditions.checkNotNull(transportListener, ""listener""));

    if (enableKeepAlive) {
      keepAliveManager = new KeepAliveManager(this, channel.eventLoop(), keepAliveDelayNanos,
          keepAliveTimeoutNanos);
    }
    ....
}
```

i believe the field `channel` is never initialized right now, so NPE is throw by field call `channel.eventLoop()`.",2017-02-16 18:29:53,"[{'commitHash': 'd116cc9875a70a318582327baaf8d9ea2ebafa2f', 'commitGHEventType': 'referenced', 'commitUser': 'ejona86', 'commitParents': ['72923dca87b940a9a7b744b13c124170c43cb2fc'], 'nameRev': 'd116cc9875a70a318582327baaf8d9ea2ebafa2f tags/v1.2.0~43', 'commitMessage': 'netty: Fix NPE in NettyClientTransport\n\nFixes NPE when keepalive is enabled.\n\n* Move creation of keepAliveManager to the bottom of start()\n* Enable keepAlive in NettyClientTransportTest\n* Add test cases checking if keepalive is enabled/disabled, specifically.\n\nFixes #2726\n', 'commitDateTime': '2017-02-16 10:29:52', 'authoredDateTime': '2017-02-16 09:27:55', 'commitGitStats': [{'filePath': 'netty/src/main/java/io/grpc/netty/NettyClientTransport.java', 'insertions': 11, 'deletions': 5, 'lines': 16}, {'filePath': 'netty/src/test/java/io/grpc/netty/NettyClientTransportTest.java', 'insertions': 35, 'deletions': 7, 'lines': 42}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'NettyClientTransport.java', 'spoonMethods': [{'spoonMethodName': 'io.grpc.netty.NettyClientTransport.keepAliveManager()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransport.start(io.grpc.netty.Listener)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'NettyClientTransportTest.java', 'spoonMethods': [{'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.keepAliveEnabled()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.keepAliveDisabled()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.newTransport(io.grpc.netty.ProtocolNegotiator,int,int,java.lang.String,boolean)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.overrideDefaultUserAgent()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.maxMessageSizeShouldBeEnforced()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.maxHeaderListSizeShouldBeEnforcedOnClient()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.newTransport(io.grpc.netty.ProtocolNegotiator)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'c8d21d571f0936e85001b79c9be40121e2323af3', 'commitGHEventType': 'referenced', 'commitUser': 'ejona86', 'commitParents': ['4b819e4514412bcb5945c9fa06d274bef00b6170'], 'nameRev': 'c8d21d571f0936e85001b79c9be40121e2323af3 remotes/origin/v1.1.x~11', 'commitMessage': 'netty: Fix NPE in NettyClientTransport\n\nFixes NPE when keepalive is enabled.\n\n* Move creation of keepAliveManager to the bottom of start()\n* Enable keepAlive in NettyClientTransportTest\n* Add test cases checking if keepalive is enabled/disabled, specifically.\n\nFixes #2726 (Backports #2729)\n', 'commitDateTime': '2017-02-17 11:23:22', 'authoredDateTime': '2017-02-16 09:27:55', 'commitGitStats': [{'filePath': 'netty/src/main/java/io/grpc/netty/NettyClientTransport.java', 'insertions': 11, 'deletions': 5, 'lines': 16}, {'filePath': 'netty/src/test/java/io/grpc/netty/NettyClientTransportTest.java', 'insertions': 35, 'deletions': 7, 'lines': 42}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'NettyClientTransport.java', 'spoonMethods': [{'spoonMethodName': 'io.grpc.netty.NettyClientTransport.keepAliveManager()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransport.start(io.grpc.netty.Listener)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'NettyClientTransportTest.java', 'spoonMethods': [{'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.keepAliveEnabled()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.keepAliveDisabled()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.newTransport(io.grpc.netty.ProtocolNegotiator,int,int,java.lang.String,boolean)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.overrideDefaultUserAgent()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.maxMessageSizeShouldBeEnforced()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.maxHeaderListSizeShouldBeEnforcedOnClient()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.grpc.netty.NettyClientTransportTest.newTransport(io.grpc.netty.ProtocolNegotiator)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/grpc/grpc-java/issues/2726,1.0002777777777778,['bug'],NPE during NettyClientTransport.start() if keepAlive is enabled,1.0,"['io.grpc.netty.NettyClientTransport.keepAliveManager()', 'io.grpc.netty.NettyClientTransport.start(io.grpc.netty.Listener)']",['d116cc9875a70a318582327baaf8d9ea2ebafa2f'],,['netty/src/main/java/io/grpc/netty'],11.0,5.0,16.0,1.0,0.0,2.0,2.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,grpc-java
30963,2019-01-08 23:54:21,gokhanoner,"Please see: https://stackoverflow.com/questions/54095774/hazelcast-not-working-correctly-with-sqlpredicate-and-index-on-optional-field

The problem here, when initializing `TypeConverter` inside the index, if the indexed property is in a collection and when

 - the collection is null
 - the collection is empty
 - the collection is not empty but the attribute is null for all entries

Then `QueryableEntry.getConverter` returns `IDENTITY_CONVERTER`. This causes wrong converter type initialization and causing SqlPredicate to return wrong results.

Suggested Fix:

from `getConverter` method:

```
 else {
            AttributeType attributeType = extractAttributeType(attributeName, attribute);
            return attributeType == null ? IDENTITY_CONVERTER : attributeType.getConverter();
        }
```

The only case `attributeType` is null is when the `attribute` is the type of `MultiResult` and either all values in it is null or it is an instance of `ImmutableMultiResut` which means Collection itself is null or empty. In this case, we should return `NULL_CONVERTER` instead of `IDENTITY_CONVERTER` so that index can continue to find correct TypeConverter with next entry.

Simple reproducer:
```
    public static void main(String[] args) {
        Config config = new Config();
        final MapConfig mapConfig = config.getMapConfig(""data"");
        mapConfig.addMapIndexConfig(new MapIndexConfig(""nested[any].number"", false));

        HazelcastInstance instance = Hazelcast.newHazelcastInstance(config);

        IMap<Integer, Data> map = instance.getMap(""data"");

        Data data1 = new Data(Collections.emptyList());
        Data data2 = new Data(Arrays.asList(new SubData(1)));

        Predicate equalPredicate = Predicates.equal(""nested[any].number"", 1);
        Predicate sqlPredicate = new SqlPredicate(""nested[any].number=1"");


        map.put(1, data1);
        map.put(2, data2);

        Collection<Data> equalResults = map.values(equalPredicate);
        Collection<Data> sqlResults = map.values(sqlPredicate);

        assertEquals(1, equalResults.size()); // contains ""1""
        assertEquals(1, sqlResults.size());   // --> this fails, it returns en empty list
    }

    static class Data implements Serializable {
        private final List<SubData> nested;

        public Data(List<SubData> nested) {
            this.nested = nested;
        }

        public List<SubData> getNested() {
            return nested;
        }
    }

    static class SubData implements Serializable {
        private final Integer number;

        public SubData(Integer number) {
            this.number = number;
        }

        public Integer getNumber() {
            return number;
        }
    }
```",2019-02-28 07:34:24,"[{'commitHash': '186d1b2266faa4ac3a5cac47a91ba4534b3e0578', 'commitGHEventType': 'referenced', 'commitUser': 'taburet', 'commitParents': ['d679e3915bf354c6a5ab5828ca3fc6f27024a1f8'], 'nameRev': '186d1b2266faa4ac3a5cac47a91ba4534b3e0578 tags/v3.12-BETA-2~49', 'commitMessage': 'Fix empty and null collection indexing (#14503)\n\nFixes: https://github.com/hazelcast/hazelcast/issues/14358', 'commitDateTime': '2019-02-28 14:34:23', 'authoredDateTime': '2019-02-28 14:34:23', 'commitGitStats': [{'filePath': 'hazelcast/src/main/java/com/hazelcast/query/impl/QueryableEntry.java', 'insertions': 27, 'deletions': 28, 'lines': 55}, {'filePath': 'hazelcast/src/main/java/com/hazelcast/query/impl/getters/ReflectionHelper.java', 'insertions': 0, 'deletions': 4, 'lines': 4}, {'filePath': 'hazelcast/src/test/java/com/hazelcast/query/impl/IndexIntegrationTest.java', 'insertions': 29, 'deletions': 1, 'lines': 30}, {'filePath': 'hazelcast/src/test/java/com/hazelcast/query/impl/IndexTest.java', 'insertions': 1, 'deletions': 5, 'lines': 6}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'QueryableEntry.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.query.impl.QueryableEntry.extractAttributeTypeFromMultiResult(com.hazelcast.query.impl.getters.MultiResult)', 'TOT': 7, 'UPD': 4, 'INS': 0, 'MOV': 2, 'DEL': 1}, {'spoonMethodName': 'com.hazelcast.query.impl.QueryableEntry.extractAttributeType(java.lang.Object)', 'TOT': 6, 'UPD': 1, 'INS': 0, 'MOV': 4, 'DEL': 1}, {'spoonMethodName': 'com.hazelcast.query.impl.QueryableEntry.extractAttributeTypeFromSingleResult(java.lang.Object)', 'TOT': 4, 'UPD': 0, 'INS': 0, 'MOV': 2, 'DEL': 2}, {'spoonMethodName': 'com.hazelcast.query.impl.QueryableEntry.getConverter(java.lang.String)', 'TOT': 10, 'UPD': 0, 'INS': 3, 'MOV': 6, 'DEL': 1}]}, {'spoonFilePath': 'ReflectionHelper.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.query.impl.getters.ReflectionHelper.getAttributeType(java.lang.Class)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}]}, {'spoonFilePath': 'IndexIntegrationTest.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.query.impl.IndexIntegrationTest.testEmptyAndNullCollectionIndexing()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.hazelcast.query.impl.IndexIntegrationTest.Body', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'IndexTest.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.query.impl.IndexTest.QueryRecord.getAttributeType(java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'com.hazelcast.query.impl.IndexTest.QueryRecord.getAttributeValue(java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/hazelcast/hazelcast/issues/14358,50.000277777777775,"['Module: IMap', 'Module: Query', 'Priority: High', 'Source: Internal', 'Team: Core', 'Type: Defect']",Collection attributes indexed with [any] causes wrong SqlQuery results if first data inserted to map has no value for the attribute or the collection is empty,1.0,"['com.hazelcast.query.impl.QueryableEntry.getConverter(java.lang.String)', 'com.hazelcast.query.impl.QueryableEntry.extractAttributeTypeFromSingleResult(java.lang.Object)', 'com.hazelcast.query.impl.QueryableEntry.extractAttributeType(java.lang.Object)', 'com.hazelcast.query.impl.getters.ReflectionHelper.getAttributeType(java.lang.Class)', 'com.hazelcast.query.impl.QueryableEntry.extractAttributeTypeFromMultiResult(com.hazelcast.query.impl.getters.MultiResult)']",['186d1b2266faa4ac3a5cac47a91ba4534b3e0578'],,"['hazelcast/src/main/java/com/hazelcast/query/impl/getters', 'hazelcast/src/main/java/com/hazelcast/query/impl']",27.0,32.0,59.0,2.0,5.0,5.0,28.0,14.0,3.0,6.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,hazelcast
32134,2014-09-22 15:33:47,dbrimley,"Running the sample code on 3.3 for EventListeners (ListeningMember,ModifyingMember)

The EntryEvent returns nulls in the toString().

If you access the properties directly via get it returns correctly.
",2014-09-22 17:58:44,"[{'commitHash': 'a138f413bfacf65e913a5ad035355b63bbabf793', 'commitGHEventType': 'referenced', 'commitUser': 'serkan-ozal', 'commitParents': ['d167e488dc2c7fb399cf36028aa8ef314a983dd4'], 'nameRev': 'a138f413bfacf65e913a5ad035355b63bbabf793 tags/v3.3.1~28', 'commitMessage': 'fix for issue #3633\n', 'commitDateTime': '2014-09-22 20:55:48', 'authoredDateTime': '2014-09-22 20:55:48', 'commitGitStats': [{'filePath': 'hazelcast/src/main/java/com/hazelcast/core/EntryEvent.java', 'insertions': 0, 'deletions': 1, 'lines': 1}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'EntryEvent.java', 'spoonMethods': []}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'af75d48982fbc4134b17a47c98bcfccb6ffa97b0', 'commitGHEventType': 'referenced', 'commitUser': 'serkan-ozal', 'commitParents': ['f83f1807b723ed2f6da313f196bcdfbaa98abf2c'], 'nameRev': 'af75d48982fbc4134b17a47c98bcfccb6ffa97b0 tags/v3.4-EA~287', 'commitMessage': 'fix for issue #3633 on master branch\n', 'commitDateTime': '2014-09-22 20:57:06', 'authoredDateTime': '2014-09-22 20:57:06', 'commitGitStats': [{'filePath': 'hazelcast/src/main/java/com/hazelcast/core/EntryEvent.java', 'insertions': 3, 'deletions': 4, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'EntryEvent.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.core.EntryEvent.toString()', 'TOT': 6, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 3}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/hazelcast/hazelcast/issues/3633,0.0002777777777777778,"['Source: Internal', 'Type: Defect']",EntryEvent toString returns nulls,2.0,['com.hazelcast.core.EntryEvent.toString()'],"['a138f413bfacf65e913a5ad035355b63bbabf793', 'af75d48982fbc4134b17a47c98bcfccb6ffa97b0']",,['hazelcast/src/main/java/com/hazelcast/core'],3.0,5.0,8.0,1.0,0.0,1.0,6.0,0.0,3.0,3.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,hazelcast
32684,2012-08-30 10:17:11,mdogan,"See;

https://groups.google.com/d/topic/hazelcast/6kTxlw1z148/discussion
",2012-08-31 11:28:20,"[{'commitHash': 'da8621558cec422b99eeb47bb4522e80be87d520', 'commitGHEventType': 'closed', 'commitUser': 'mdogan', 'commitParents': ['0b08ef830b8b0c4b3425d1b96b6ed1e574f43383'], 'nameRev': 'da8621558cec422b99eeb47bb4522e80be87d520 tags/v2.3.1~3^2', 'commitMessage': 'Fixes #258.\n', 'commitDateTime': '2012-08-30 13:19:30', 'authoredDateTime': '2012-08-30 13:19:30', 'commitGitStats': [{'filePath': 'hazelcast/src/main/java/com/hazelcast/impl/AddressPicker.java', 'insertions': 3, 'deletions': 1, 'lines': 4}, {'filePath': 'hazelcast/src/main/java/com/hazelcast/impl/TcpIpJoiner.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AddressPicker.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.impl.AddressPicker.createAddress(com.hazelcast.impl.AddressPicker$AddressDefinition,int)', 'TOT': 6, 'UPD': 0, 'INS': 1, 'MOV': 4, 'DEL': 1}]}, {'spoonFilePath': 'TcpIpJoiner.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.impl.TcpIpJoiner.getPossibleAddresses()', 'TOT': 4, 'UPD': 0, 'INS': 2, 'MOV': 1, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'f550c84e2cba17b3019f213f1566e4814e50b592', 'commitGHEventType': 'referenced', 'commitUser': 'mdogan', 'commitParents': ['88a786c7b5184710319b8e32c921e9488505cf16'], 'nameRev': 'f550c84e2cba17b3019f213f1566e4814e50b592 tags/v2.3.1~2', 'commitMessage': 'Fixes #258.\n', 'commitDateTime': '2012-08-31 09:48:25', 'authoredDateTime': '2012-08-31 09:48:25', 'commitGitStats': [{'filePath': 'hazelcast/src/main/java/com/hazelcast/nio/SocketConnector.java', 'insertions': 2, 'deletions': 1, 'lines': 3}, {'filePath': 'hazelcast/src/main/java/com/hazelcast/util/AddressUtil.java', 'insertions': 3, 'deletions': 3, 'lines': 6}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'SocketConnector.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.nio.SocketConnector.run()', 'TOT': 3, 'UPD': 0, 'INS': 2, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'AddressUtil.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.util.AddressUtil.getPossibleInetAddressesFor(java.net.Inet6Address)', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '9bbfd33ff7246db9118fa0590d78544d25513452', 'commitGHEventType': 'referenced', 'commitUser': 'mdogan', 'commitParents': ['3e7404252b37b7c3e802bbf6bff69e2f415da669'], 'nameRev': '9bbfd33ff7246db9118fa0590d78544d25513452 tags/v3.0-RC1~527', 'commitMessage': 'Merged fix for issue #258 from master.\n', 'commitDateTime': '2012-09-14 11:00:24', 'authoredDateTime': '2012-09-14 11:00:24', 'commitGitStats': [{'filePath': 'hazelcast/src/main/java/com/hazelcast/impl/AddressPicker.java', 'insertions': 9, 'deletions': 1, 'lines': 10}, {'filePath': 'hazelcast/src/main/java/com/hazelcast/impl/Joiner.java', 'insertions': 2, 'deletions': 2, 'lines': 4}, {'filePath': 'hazelcast/src/main/java/com/hazelcast/impl/TcpIpJoiner.java', 'insertions': 3, 'deletions': 3, 'lines': 6}, {'filePath': 'hazelcast/src/main/java/com/hazelcast/nio/SocketConnector.java', 'insertions': 3, 'deletions': 2, 'lines': 5}, {'filePath': 'hazelcast/src/main/java/com/hazelcast/util/AddressUtil.java', 'insertions': 3, 'deletions': 3, 'lines': 6}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AddressPicker.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.impl.AddressPicker.createAddress(com.hazelcast.impl.AddressPicker$AddressDefinition,int)', 'TOT': 6, 'UPD': 0, 'INS': 1, 'MOV': 4, 'DEL': 1}, {'spoonMethodName': 'com.hazelcast.impl.AddressPicker.pickAddress()', 'TOT': 3, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Joiner.java', 'spoonMethods': []}, {'spoonFilePath': 'TcpIpJoiner.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.impl.TcpIpJoiner.searchForOtherClusters(com.hazelcast.impl.SplitBrainHandler)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.hazelcast.impl.TcpIpJoiner.getPossibleAddresses()', 'TOT': 4, 'UPD': 0, 'INS': 2, 'MOV': 1, 'DEL': 1}]}, {'spoonFilePath': 'SocketConnector.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.nio.SocketConnector.run()', 'TOT': 3, 'UPD': 0, 'INS': 2, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'com.hazelcast.nio.SocketConnector.tryToConnect(java.net.InetSocketAddress,int)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'AddressUtil.java', 'spoonMethods': [{'spoonMethodName': 'com.hazelcast.util.AddressUtil.getPossibleInetAddressesFor(java.net.Inet6Address)', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/hazelcast/hazelcast/issues/258,1.0002777777777778,"['Source: Internal', 'Type: Defect']",After upgrading HZC to 2.3 IPv6 is no longer working with TCP join. ,2.0,"['com.hazelcast.impl.AddressPicker.createAddress(com.hazelcast.impl.AddressPicker$AddressDefinition,int)', 'com.hazelcast.impl.TcpIpJoiner.getPossibleAddresses()', 'com.hazelcast.impl.TcpIpJoiner.searchForOtherClusters(com.hazelcast.impl.SplitBrainHandler)', 'com.hazelcast.nio.SocketConnector.tryToConnect(java.net.InetSocketAddress,int)', 'com.hazelcast.nio.SocketConnector.run()', 'com.hazelcast.impl.AddressPicker.pickAddress()', 'com.hazelcast.util.AddressUtil.getPossibleInetAddressesFor(java.net.Inet6Address)']","['da8621558cec422b99eeb47bb4522e80be87d520', '9bbfd33ff7246db9118fa0590d78544d25513452']",,"['hazelcast/src/main/java/com/hazelcast/impl', 'hazelcast/src/main/java/com/hazelcast/util', 'hazelcast/src/main/java/com/hazelcast/nio']",24.0,13.0,37.0,5.0,2.0,7.0,33.0,14.0,12.0,5.0,4.0,0.0,0.0,0.0,1.0,0.0,0.0,hazelcast
32789,2020-05-28 11:59:05,sophokles73,"When trying to retrieve the last known gateway for a device, the DeviceConnectionService returns a 500 error code if no entry for the device exists. However, according to the API spec it should return a 404 in that case.",2020-05-28 12:23:54,"[{'commitHash': '69be65eb2ad51188c29abf09c38a22990a2214b3', 'commitGHEventType': 'closed', 'commitUser': 'sophokles73', 'commitParents': ['8d40e142fc5ead20a941c25d67d2874fdc3bebe3'], 'nameRev': '69be65eb2ad51188c29abf09c38a22990a2214b3 tags/1.3.0-M2~26', 'commitMessage': '[#1988] Fix handling of null result from cache\n\nThe CacheBasedDeviceConnectionInfo now correctly returns a 404\nClientErrorException if no entry is found in the cache instead of a 500\nServerErrorException.\n\nFixes #1988\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>', 'commitDateTime': '2020-05-28 14:22:58', 'authoredDateTime': '2020-05-28 14:17:55', 'commitGitStats': [{'filePath': 'client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfo.java', 'insertions': 5, 'deletions': 5, 'lines': 10}, {'filePath': 'client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java', 'insertions': 28, 'deletions': 3, 'lines': 31}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'CacheBasedDeviceConnectionInfo.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfo.getLastKnownGatewayForDevice(java.lang.String,java.lang.String,io.opentracing.SpanContext)', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}]}, {'spoonFilePath': 'CacheBasedDeviceConnectionInfoTest.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFails(io.vertx.junit5.VertxTestContext)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFailsForNonExistingEntry(io.vertx.junit5.VertxTestContext)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFailsForCacheAccessException(io.vertx.junit5.VertxTestContext)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '8dfd7806fa6a486bcf563f157138d6b4d3f6498d', 'commitGHEventType': 'referenced', 'commitUser': 'sophokles73', 'commitParents': ['220172543a4c812b3bc528f27202cc67f808bcdd'], 'nameRev': '8dfd7806fa6a486bcf563f157138d6b4d3f6498d tags/1.2.3~10', 'commitMessage': '[#1988] Fix handling of null result from cache\n\nThe CacheBasedDeviceConnectionInfo now correctly returns a 404\nClientErrorException if no entry is found in the cache instead of a 500\nServerErrorException.\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>', 'commitDateTime': '2020-05-28 17:18:27', 'authoredDateTime': '2020-05-28 16:48:11', 'commitGitStats': [{'filePath': 'client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java', 'insertions': 5, 'deletions': 5, 'lines': 10}, {'filePath': 'client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfoTest.java', 'insertions': 36, 'deletions': 7, 'lines': 43}, {'filePath': 'site/homepage/content/release-notes.md', 'insertions': 6, 'deletions': 0, 'lines': 6}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HotrodBasedDeviceConnectionInfo.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfo.getLastKnownGatewayForDevice(java.lang.String,java.lang.String,io.opentracing.SpanContext)', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}]}, {'spoonFilePath': 'HotrodBasedDeviceConnectionInfoTest.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFails(io.vertx.junit5.VertxTestContext)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFailsForNonExistingEntry(io.vertx.junit5.VertxTestContext)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testSetLastKnownGatewayFails(io.vertx.junit5.VertxTestContext)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testGetLastKnownGatewaySucceeds(io.vertx.junit5.VertxTestContext)', 'TOT': 3, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.testGetLastKnownGatewayFailsForCacheAccessException(io.vertx.junit5.VertxTestContext)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.hono.deviceconnection.infinispan.client.HotrodBasedDeviceConnectionInfoTest.setUp()', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 2, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'c02daeb04d4d765045f67f9ca6155a22069861ff', 'commitGHEventType': 'referenced', 'commitUser': 'sophokles73', 'commitParents': ['1d03e37c576b68af91253a9b551e2cbe2e22de04'], 'nameRev': 'c02daeb04d4d765045f67f9ca6155a22069861ff tags/1.3.0-M2~23', 'commitMessage': '[#1988] Document fix in release notes\n\nSigned-off-by: Kai Hudalla <kai.hudalla@bosch.io>', 'commitDateTime': '2020-05-28 17:25:21', 'authoredDateTime': '2020-05-28 17:24:41', 'commitGitStats': [{'filePath': 'site/homepage/content/release-notes.md', 'insertions': 3, 'deletions': 0, 'lines': 3}], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}]",https://github.com/eclipse/hono/issues/1988,0.0002777777777777778,"['Device Connection', 'bug']",DeviceConnectionService returns 500 for non-existing last-gateway entry,1.0,"['org.eclipse.hono.deviceconnection.infinispan.client.CacheBasedDeviceConnectionInfo.getLastKnownGatewayForDevice(java.lang.String,java.lang.String,io.opentracing.SpanContext)']","['69be65eb2ad51188c29abf09c38a22990a2214b3', 'c02daeb04d4d765045f67f9ca6155a22069861ff']",,['client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client'],5.0,5.0,10.0,1.0,0.0,1.0,5.0,3.0,1.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,hono
32844,2019-07-17 09:53:50,jbtrystram,"When I want to ceate a tenant or a device using the ID generation feature from the device registry, i would expect it to work even if the request body is empty. A workaround is to provide an empty JsonObject in the request body.",2019-07-18 12:43:07,"[{'commitHash': '833d4e6d5100fcfd7f7ab02787f25ef9e7b760e3', 'commitGHEventType': 'referenced', 'commitUser': 'sophokles73', 'commitParents': ['417fd1bd465abc60336f08fff4261e0377d5d6ab'], 'nameRev': '833d4e6d5100fcfd7f7ab02787f25ef9e7b760e3 tags/1.0-M6~40', 'commitMessage': '[#1370] Allow empty request body when creating tenant or device with generated id\n\nFixes #1370 \r\n\r\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>', 'commitDateTime': '2019-07-18 14:43:06', 'authoredDateTime': '2019-07-18 14:43:06', 'commitGitStats': [{'filePath': 'service-base/src/main/java/org/eclipse/hono/service/http/AbstractHttpEndpoint.java', 'insertions': 17, 'deletions': 0, 'lines': 17}, {'filePath': 'service-base/src/main/java/org/eclipse/hono/service/management/device/DeviceManagementHttpEndpoint.java', 'insertions': 2, 'deletions': 4, 'lines': 6}, {'filePath': 'service-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementHttpEndpoint.java', 'insertions': 2, 'deletions': 5, 'lines': 7}, {'filePath': 'tests/src/test/java/org/eclipse/hono/tests/registry/DeviceRegistrationHttpIT.java', 'insertions': 15, 'deletions': 3, 'lines': 18}, {'filePath': 'tests/src/test/java/org/eclipse/hono/tests/registry/TenantHttpIT.java', 'insertions': 3, 'deletions': 3, 'lines': 6}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AbstractHttpEndpoint.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.hono.service.http.AbstractHttpEndpoint.getDefaultResponseHandler(io.vertx.ext.web.RoutingContext,java.util.function.Predicate,io.vertx.core.Handler)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.hono.service.http.AbstractHttpEndpoint.getDefaultResponseHandler(io.vertx.ext.web.RoutingContext,java.util.function.Predicate,java.util.function.BiConsumer)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.hono.service.http.AbstractHttpEndpoint.extractOptionalJsonPayload(io.vertx.ext.web.RoutingContext)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DeviceManagementHttpEndpoint.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.hono.service.management.device.DeviceManagementHttpEndpoint.addRoutes(io.vertx.ext.web.Router)', 'TOT': 4, 'UPD': 0, 'INS': 0, 'MOV': 2, 'DEL': 2}]}, {'spoonFilePath': 'TenantManagementHttpEndpoint.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.hono.service.management.tenant.TenantManagementHttpEndpoint.addRoutes(io.vertx.ext.web.Router)', 'TOT': 7, 'UPD': 0, 'INS': 0, 'MOV': 4, 'DEL': 3}]}, {'spoonFilePath': 'DeviceRegistrationHttpIT.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.hono.tests.registry.DeviceRegistrationHttpIT.testAddDeviceFailsForMissingBody(io.vertx.ext.unit.TestContext)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.hono.tests.registry.DeviceRegistrationHttpIT.testAddDeviceSucceedsForEmptyBodyAndContentType(io.vertx.ext.unit.TestContext)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'TenantHttpIT.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantFailsForEmptyBody(io.vertx.ext.unit.TestContext)', 'TOT': 3, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/eclipse/hono/issues/1370,1.0002777777777778,"['Device Registry', 'Management API', 'bug']",Creating a tenant or device with a generated ID refuses an empty body,1.0,"['org.eclipse.hono.service.management.tenant.TenantManagementHttpEndpoint.addRoutes(io.vertx.ext.web.Router)', 'org.eclipse.hono.service.http.AbstractHttpEndpoint.getDefaultResponseHandler(io.vertx.ext.web.RoutingContext,java.util.function.Predicate,java.util.function.BiConsumer)', 'org.eclipse.hono.tests.registry.DeviceRegistrationHttpIT.testAddDeviceSucceedsForEmptyBodyAndContentType(io.vertx.ext.unit.TestContext)', 'org.eclipse.hono.tests.registry.TenantHttpIT.testAddTenantFailsForEmptyBody(io.vertx.ext.unit.TestContext)', 'org.eclipse.hono.service.http.AbstractHttpEndpoint.extractOptionalJsonPayload(io.vertx.ext.web.RoutingContext)', 'org.eclipse.hono.tests.registry.DeviceRegistrationHttpIT.testAddDeviceFailsForMissingBody(io.vertx.ext.unit.TestContext)', 'org.eclipse.hono.service.management.device.DeviceManagementHttpEndpoint.addRoutes(io.vertx.ext.web.Router)', 'org.eclipse.hono.service.http.AbstractHttpEndpoint.getDefaultResponseHandler(io.vertx.ext.web.RoutingContext,java.util.function.Predicate,io.vertx.core.Handler)']",['833d4e6d5100fcfd7f7ab02787f25ef9e7b760e3'],,"['service-base/src/main/java/org/eclipse/hono/service/management/tenant', 'service-base/src/main/java/org/eclipse/hono/service/http', 'service-base/src/main/java/org/eclipse/hono/service/management/device']",21.0,9.0,30.0,3.0,6.0,8.0,20.0,6.0,2.0,6.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,hono
33715,2019-07-14 11:16:19,sergey-wowwow,"**Checks before report**
- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)
- [+] search existing issues by exception message
- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki

**Describe error**
Open ``` AndroidManifest.xml ```, its contents
```
Error decode manifest
java.lang.ArrayIndexOutOfBoundsException: Index 6286 out of bounds for length 6284
	at jadx.core.xmlgen.CommonBinaryParser.skipStrLen8(CommonBinaryParser.java:89)
	at jadx.core.xmlgen.CommonBinaryParser.extractString8(CommonBinaryParser.java:59)
	at jadx.core.xmlgen.CommonBinaryParser.parseStringPoolNoType(CommonBinaryParser.java:37)
	at jadx.core.xmlgen.BinaryXMLParser.decode(BinaryXMLParser.java:117)
	at jadx.core.xmlgen.BinaryXMLParser.parse(BinaryXMLParser.java:92)
	at jadx.api.ResourcesLoader.loadContent(ResourcesLoader.java:97)
	at jadx.api.ResourcesLoader.lambda$loadContent$0(ResourcesLoader.java:82)
	at jadx.api.ResourcesLoader.decodeStream(ResourcesLoader.java:71)
	at jadx.api.ResourcesLoader.loadContent(ResourcesLoader.java:82)
	at jadx.api.ResourceFile.loadContent(ResourceFile.java:60)
```
APK: https://drive.google.com/file/d/1z12cxMHh_ifo0tIzfGmQLxnGsa2jPZSv/view?usp=sharing",2019-07-15 19:14:37,"[{'commitHash': '8e8a2faa1073e6d7fceabe99d223a9553a1d7506', 'commitGHEventType': 'referenced', 'commitUser': 'skylot', 'commitParents': ['0c2784bb42ec906a0877f22dcf39458a92f106c1'], 'nameRev': '8e8a2faa1073e6d7fceabe99d223a9553a1d7506 tags/v1.1.0~67', 'commitMessage': 'fix(res): skip string if parsing failed (#712)\n', 'commitDateTime': '2019-07-14 17:06:19', 'authoredDateTime': '2019-07-14 17:06:19', 'commitGitStats': [{'filePath': 'jadx-core/src/main/java/jadx/core/xmlgen/CommonBinaryParser.java', 'insertions': 3, 'deletions': 1, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'CommonBinaryParser.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.xmlgen.CommonBinaryParser.parseStringPoolNoType()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'jadx.core.xmlgen.CommonBinaryParser.extractString8(byte[],int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '15d56abeb659538f793e6e16dade3ce4e2f9e121', 'commitGHEventType': 'referenced', 'commitUser': 'skylot', 'commitParents': ['d89ec67888fc86a82eb7d26d06a4689f8499f321'], 'nameRev': '15d56abeb659538f793e6e16dade3ce4e2f9e121 tags/v1.1.0~64', 'commitMessage': 'fix: read correct buffer size for string pool parsing (#712)\n', 'commitDateTime': '2019-07-15 21:19:58', 'authoredDateTime': '2019-07-15 21:19:58', 'commitGitStats': [{'filePath': 'jadx-core/src/main/java/jadx/core/xmlgen/CommonBinaryParser.java', 'insertions': 4, 'deletions': 12, 'lines': 16}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'CommonBinaryParser.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.xmlgen.CommonBinaryParser.parseStringPoolNoType()', 'TOT': 13, 'UPD': 8, 'INS': 0, 'MOV': 3, 'DEL': 2}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/skylot/jadx/issues/712,1.0002777777777778,"['Core', 'bug']",[core] xmlgen throws ArrayIndexOutOfBoundsException,2.0,"['jadx.core.xmlgen.CommonBinaryParser.parseStringPoolNoType()', 'jadx.core.xmlgen.CommonBinaryParser.extractString8(byte[],int)']","['8e8a2faa1073e6d7fceabe99d223a9553a1d7506', '15d56abeb659538f793e6e16dade3ce4e2f9e121']",,['jadx-core/src/main/java/jadx/core/xmlgen'],7.0,13.0,20.0,1.0,8.0,2.0,15.0,3.0,1.0,3.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,jadx
33716,2019-07-13 21:17:10,sergey-wowwow,"**Checks before report**
- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)
- [+] search existing issues by exception message
- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki

**Describe error**
Please open the attached APK, and browse to sources. You will see reserved names in root package names e.g. ``` if ```, ``` for ```, ``` do ```

```java
         do.int.if.AffideliceauChablis.m35920a((java.lang.Object) settings, (java.lang.String) ""webView.settings"");
```

https://drive.google.com/file/d/1FezWyJKTexSoO4lFNDhnRvS7K4elD6bE/view?usp=sharing",2019-07-14 17:01:11,"[{'commitHash': 'c555cd082552c04dbf48e6b62820618c4594df8d', 'commitGHEventType': 'referenced', 'commitUser': 'skylot', 'commitParents': ['92e28326a4f5ba68485d86d6f7f29c397d46d883'], 'nameRev': 'c555cd082552c04dbf48e6b62820618c4594df8d tags/v1.1.0~69', 'commitMessage': 'fix: rename packages with reserved names (#711)\n', 'commitDateTime': '2019-07-14 13:13:00', 'authoredDateTime': '2019-07-14 13:13:00', 'commitGitStats': [{'filePath': 'jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java', 'insertions': 29, 'deletions': 7, 'lines': 36}, {'filePath': 'jadx-core/src/main/java/jadx/core/dex/visitors/RenameVisitor.java', 'insertions': 28, 'deletions': 16, 'lines': 44}, {'filePath': 'jadx-core/src/main/java/jadx/core/utils/CodeGenUtils.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'jadx-core/src/test/java/jadx/tests/integration/names/TestReservedPackageNames.java', 'insertions': 59, 'deletions': 0, 'lines': 59}, {'filePath': 'jadx-core/src/test/smali/names/TestReservedPackageNames/a.smali', 'insertions': 2, 'deletions': 0, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'Deobfuscator.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.deobf.Deobfuscator.doPkg(jadx.core.deobf.PackageNode,java.lang.String)', 'TOT': 8, 'UPD': 3, 'INS': 0, 'MOV': 5, 'DEL': 0}, {'spoonMethodName': 'jadx.core.deobf.Deobfuscator.preProcessClass(jadx.core.dex.nodes.ClassNode)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.deobf.Deobfuscator.getPkgAlias(jadx.core.dex.nodes.ClassNode)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.deobf.Deobfuscator.processPackageFull(jadx.core.deobf.PackageNode,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RenameVisitor.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.dex.visitors.RenameVisitor.checkClassName(jadx.core.deobf.Deobfuscator,jadx.core.dex.nodes.ClassNode,jadx.api.JadxArgs)', 'TOT': 9, 'UPD': 0, 'INS': 2, 'MOV': 5, 'DEL': 2}, {'spoonMethodName': 'jadx.core.dex.visitors.RenameVisitor.checkPackage(jadx.core.deobf.Deobfuscator,jadx.core.dex.nodes.ClassNode,jadx.core.dex.info.ClassInfo,jadx.api.JadxArgs)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'CodeGenUtils.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.utils.CodeGenUtils.addRenamedComment(jadx.core.codegen.CodeWriter,jadx.core.dex.attributes.AttrNode,java.lang.String)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'TestReservedPackageNames.java', 'spoonMethods': [{'spoonMethodName': 'jadx.tests.integration.names.TestReservedPackageNames', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/skylot/jadx/issues/711,0.0002777777777777778,"['Core', 'bug']","[core] if, do, for package names",1.0,"['jadx.core.dex.visitors.RenameVisitor.checkPackage(jadx.core.deobf.Deobfuscator,jadx.core.dex.nodes.ClassNode,jadx.core.dex.info.ClassInfo,jadx.api.JadxArgs)', 'jadx.core.deobf.Deobfuscator.getPkgAlias(jadx.core.dex.nodes.ClassNode)', 'jadx.core.deobf.Deobfuscator.doPkg(jadx.core.deobf.PackageNode,java.lang.String)', 'jadx.core.deobf.Deobfuscator.preProcessClass(jadx.core.dex.nodes.ClassNode)', 'jadx.core.dex.visitors.RenameVisitor.checkClassName(jadx.core.deobf.Deobfuscator,jadx.core.dex.nodes.ClassNode,jadx.api.JadxArgs)', 'jadx.core.deobf.Deobfuscator.processPackageFull(jadx.core.deobf.PackageNode,java.lang.String)', 'jadx.core.utils.CodeGenUtils.addRenamedComment(jadx.core.codegen.CodeWriter,jadx.core.dex.attributes.AttrNode,java.lang.String)']",['c555cd082552c04dbf48e6b62820618c4594df8d'],,"['jadx-core/src/main/java/jadx/core/dex/visitors', 'jadx-core/src/main/java/jadx/core/deobf', 'jadx-core/src/main/java/jadx/core/utils']",58.0,24.0,82.0,3.0,5.0,7.0,23.0,10.0,6.0,2.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,jadx
33733,2019-06-08 15:42:34,sergey-wowwow,"Example in class ``` com.mercadolibre.android.cx.support.yoshi.p271a.p272a.C5475c ``` (original class ``` com.mercadolibre.android.cx.support.yoshi.a.a.c ```), but tons of examples
```java
    public C5475c(com.mercadolibre.android.cx.support.yoshi.p271a.C5472a aVar, java.lang.String str, java.lang.String... strArr) {
        kotlin.jvm.internal.C12967g.m60316b(aVar, ""intentResolver"");
        kotlin.jvm.internal.C12967g.m60316b(str, ""mainUrlExpression"");
        kotlin.jvm.internal.C12967g.m60316b(strArr, ""otherValidUrlExpressions"");
        super(aVar, str, strArr);
    }
```
Usually all those statements before constructor and super constructor invocations are synthetic, and can be placed after invocs or even removed.

I know about that bug for a long time, but only now I noticed that it prevents binding resolutions :(

Example apk: https://drive.google.com/file/d/17kvvsl22CFsFzpcOUO4f0Szl_rdjTT1T/view?usp=sharing",2019-07-06 09:26:17,"[{'commitHash': 'c6c54f90dc31d5a784828906ef25666675447e4a', 'commitGHEventType': 'referenced', 'commitUser': 'skylot', 'commitParents': ['0f5fd4e48abbbc3a508082fdf209c1c499939330'], 'nameRev': 'c6c54f90dc31d5a784828906ef25666675447e4a tags/v1.1.0~89', 'commitMessage': 'fix: comment out instructions before super call in constructor (#685)\n', 'commitDateTime': '2019-07-03 14:39:21', 'authoredDateTime': '2019-07-03 14:27:21', 'commitGitStats': [{'filePath': 'jadx-core/src/main/java/jadx/core/codegen/InsnGen.java', 'insertions': 3, 'deletions': 0, 'lines': 3}, {'filePath': 'jadx-core/src/main/java/jadx/core/dex/attributes/AFlag.java', 'insertions': 3, 'deletions': 1, 'lines': 4}, {'filePath': 'jadx-core/src/main/java/jadx/core/dex/visitors/PrepareForCodeGen.java', 'insertions': 37, 'deletions': 0, 'lines': 37}, {'filePath': 'jadx-core/src/test/java/jadx/tests/integration/others/TestInsnsBeforeSuper.java', 'insertions': 41, 'deletions': 0, 'lines': 41}, {'filePath': 'jadx-core/src/test/smali/others/TestInsnsBeforeSuper/A.smali', 'insertions': 14, 'deletions': 0, 'lines': 14}, {'filePath': 'jadx-core/src/test/smali/others/TestInsnsBeforeSuper/B.smali', 'insertions': 30, 'deletions': 0, 'lines': 30}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'InsnGen.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.codegen.InsnGen.makeInsn(jadx.core.dex.nodes.InsnNode,jadx.core.codegen.CodeWriter,jadx.core.codegen.InsnGen$Flags)', 'TOT': 5, 'UPD': 0, 'INS': 2, 'MOV': 3, 'DEL': 0}]}, {'spoonFilePath': 'AFlag.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.dex.attributes.AFlag', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'PrepareForCodeGen.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsBeforeSuper(jadx.core.dex.nodes.MethodNode)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.visit(jadx.core.dex.nodes.MethodNode)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'TestInsnsBeforeSuper.java', 'spoonMethods': [{'spoonMethodName': 'jadx.tests.integration.others.TestInsnsBeforeSuper', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '533b686e0b95012e42ccb9e1ff29446a71568eb6', 'commitGHEventType': 'referenced', 'commitUser': 'skylot', 'commitParents': ['c6c54f90dc31d5a784828906ef25666675447e4a'], 'nameRev': '533b686e0b95012e42ccb9e1ff29446a71568eb6 tags/v1.1.0~88', 'commitMessage': 'fix: comment out instructions also before other constructor call (#685)\n', 'commitDateTime': '2019-07-05 17:05:38', 'authoredDateTime': '2019-07-03 17:23:06', 'commitGitStats': [{'filePath': 'jadx-core/src/main/java/jadx/core/codegen/RegionGen.java', 'insertions': 14, 'deletions': 2, 'lines': 16}, {'filePath': 'jadx-core/src/main/java/jadx/core/dex/visitors/PrepareForCodeGen.java', 'insertions': 78, 'deletions': 18, 'lines': 96}, {'filePath': 'jadx-core/src/test/java/jadx/tests/api/IntegrationTest.java', 'insertions': 17, 'deletions': 9, 'lines': 26}, {'filePath': 'jadx-core/src/test/java/jadx/tests/integration/others/TestInsnsBeforeSuper.java', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'jadx-core/src/test/java/jadx/tests/integration/others/TestInsnsBeforeThis.java', 'insertions': 40, 'deletions': 0, 'lines': 40}, {'filePath': 'jadx-core/src/test/smali/others/TestInsnsBeforeThis.smali', 'insertions': 39, 'deletions': 0, 'lines': 39}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RegionGen.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.codegen.RegionGen.makeIf(jadx.core.dex.regions.conditions.IfRegion,jadx.core.codegen.CodeWriter,boolean)', 'TOT': 13, 'UPD': 0, 'INS': 5, 'MOV': 8, 'DEL': 0}]}, {'spoonFilePath': 'PrepareForCodeGen.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsBeforeSuper(jadx.core.dex.nodes.MethodNode)', 'TOT': 9, 'UPD': 4, 'INS': 0, 'MOV': 4, 'DEL': 1}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IBlock)', 'TOT': 14, 'UPD': 5, 'INS': 0, 'MOV': 8, 'DEL': 1}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.visit(jadx.core.dex.nodes.MethodNode)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor.commentOutInsns(jadx.core.dex.nodes.IBlock,jadx.core.dex.nodes.InsnNode)', 'TOT': 7, 'UPD': 4, 'INS': 0, 'MOV': 1, 'DEL': 2}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor', 'TOT': 3, 'UPD': 0, 'INS': 0, 'MOV': 2, 'DEL': 1}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IBlock)', 'TOT': 5, 'UPD': 0, 'INS': 5, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsInConstructor(jadx.core.dex.nodes.MethodNode)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.dex.visitors.PrepareForCodeGen.searchConstructorCall(jadx.core.dex.nodes.MethodNode)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'IntegrationTest.java', 'spoonMethods': [{'spoonMethodName': 'jadx.tests.api.IntegrationTest.decompileAndCheck(jadx.api.JadxDecompiler,java.util.List)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'jadx.tests.api.IntegrationTest.checkCode(jadx.core.dex.nodes.ClassNode)', 'TOT': 3, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'jadx.tests.api.IntegrationTest.hasErrors(jadx.core.dex.attributes.IAttributeNode)', 'TOT': 6, 'UPD': 0, 'INS': 2, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'jadx.tests.api.IntegrationTest', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.tests.api.IntegrationTest.allowWarnInCode()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'TestInsnsBeforeSuper.java', 'spoonMethods': [{'spoonMethodName': 'jadx.tests.integration.others.TestInsnsBeforeSuper.test()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'TestInsnsBeforeThis.java', 'spoonMethods': [{'spoonMethodName': 'jadx.tests.integration.others.TestInsnsBeforeThis', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '8410e625317e73569abec394cc6fc95e9bee84ea', 'commitGHEventType': 'referenced', 'commitUser': 'skylot', 'commitParents': ['533b686e0b95012e42ccb9e1ff29446a71568eb6'], 'nameRev': '8410e625317e73569abec394cc6fc95e9bee84ea tags/v1.1.0~87', 'commitMessage': 'fix: force one branch ternary in constructors (#685)\n', 'commitDateTime': '2019-07-05 17:14:46', 'authoredDateTime': '2019-07-05 17:08:15', 'commitGitStats': [{'filePath': 'jadx-core/src/main/java/jadx/core/dex/visitors/regions/TernaryMod.java', 'insertions': 67, 'deletions': 1, 'lines': 68}, {'filePath': 'jadx-core/src/test/java/jadx/tests/integration/conditions/TestTernaryOneBranchInConstructor.java', 'insertions': 51, 'deletions': 0, 'lines': 51}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'TernaryMod.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.dex.visitors.regions.TernaryMod.makeTernaryInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion)', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}, {'spoonMethodName': 'jadx.core.dex.visitors.regions.TernaryMod.processOneBranchTernary(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.dex.visitors.regions.TernaryMod.replaceWithTernary(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'TestTernaryOneBranchInConstructor.java', 'spoonMethods': [{'spoonMethodName': 'jadx.tests.integration.conditions.TestTernaryOneBranchInConstructor', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '424a8ffaf4a123beba126c46960c1433c879a67d', 'commitGHEventType': 'referenced', 'commitUser': 'skylot', 'commitParents': ['8410e625317e73569abec394cc6fc95e9bee84ea'], 'nameRev': '424a8ffaf4a123beba126c46960c1433c879a67d tags/v1.1.0~86', 'commitMessage': 'fix: inline constant strings (#685)\n', 'commitDateTime': '2019-07-05 19:10:57', 'authoredDateTime': '2019-07-05 17:13:12', 'commitGitStats': [{'filePath': 'jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java', 'insertions': 6, 'deletions': 0, 'lines': 6}, {'filePath': 'jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnWrapArg.java', 'insertions': 5, 'deletions': 0, 'lines': 5}, {'filePath': 'jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlineVisitor.java', 'insertions': 66, 'deletions': 41, 'lines': 107}, {'filePath': 'jadx-core/src/main/java/jadx/core/dex/visitors/shrink/CodeShrinkVisitor.java', 'insertions': 44, 'deletions': 42, 'lines': 86}, {'filePath': 'jadx-core/src/test/java/jadx/tests/integration/conditions/TestTernaryOneBranchInConstructor2.java', 'insertions': 37, 'deletions': 0, 'lines': 37}, {'filePath': 'jadx-core/src/test/smali/conditions/TestTernaryOneBranchInConstructor2.smali', 'insertions': 42, 'deletions': 0, 'lines': 42}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'InsnArg.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.dex.instructions.args.InsnArg.copyCommonParams(jadx.core.dex.instructions.args.InsnArg)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'InsnWrapArg.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.dex.instructions.args.InsnWrapArg.duplicate()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ConstInlineVisitor.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.dex.visitors.ConstInlineVisitor.replaceConst(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,long,java.util.List)', 'TOT': 3, 'UPD': 3, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,long,jadx.core.dex.nodes.InsnNode,java.util.List)', 'TOT': 12, 'UPD': 3, 'INS': 0, 'MOV': 9, 'DEL': 0}, {'spoonMethodName': 'jadx.core.dex.visitors.ConstInlineVisitor.checkInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,java.util.List)', 'TOT': 23, 'UPD': 6, 'INS': 3, 'MOV': 10, 'DEL': 4}, {'spoonMethodName': 'jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.nodes.InsnNode,java.util.List)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'CodeShrinkVisitor.java', 'spoonMethods': [{'spoonMethodName': 'jadx.core.dex.visitors.shrink.CodeShrinkVisitor.shrinkBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)', 'TOT': 38, 'UPD': 0, 'INS': 3, 'MOV': 30, 'DEL': 5}, {'spoonMethodName': 'jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.utils.InsnList,java.util.List,jadx.core.dex.visitors.shrink.ArgsInfo,jadx.core.dex.instructions.args.RegisterArg)', 'TOT': 4, 'UPD': 0, 'INS': 4, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'TestTernaryOneBranchInConstructor2.java', 'spoonMethods': [{'spoonMethodName': 'jadx.tests.integration.conditions.TestTernaryOneBranchInConstructor2', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/skylot/jadx/issues/685,27.00027777777778,"['Core', 'bug']",[core] Constructor and super constructor invocations should be first statements,4.0,"['jadx.core.dex.visitors.PrepareForCodeGen.visit(jadx.core.dex.nodes.MethodNode)', 'jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor', 'jadx.core.dex.visitors.PrepareForCodeGen', 'jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsBeforeSuper(jadx.core.dex.nodes.MethodNode)', 'jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.nodes.InsnNode,java.util.List)', 'jadx.core.codegen.RegionGen.makeIf(jadx.core.dex.regions.conditions.IfRegion,jadx.core.codegen.CodeWriter,boolean)', 'jadx.core.dex.visitors.ConstInlineVisitor.replaceConst(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,long,java.util.List)', 'jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor.commentOutInsns(jadx.core.dex.nodes.IBlock,jadx.core.dex.nodes.InsnNode)', 'jadx.core.codegen.InsnGen.makeInsn(jadx.core.dex.nodes.InsnNode,jadx.core.codegen.CodeWriter,jadx.core.codegen.InsnGen$Flags)', 'jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor', 'jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IBlock)', 'jadx.core.dex.visitors.shrink.CodeShrinkVisitor.shrinkBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)', 'jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IBlock)', 'jadx.core.dex.instructions.args.InsnWrapArg.duplicate()', 'jadx.core.dex.attributes.AFlag', 'jadx.core.dex.visitors.PrepareForCodeGen.searchConstructorCall(jadx.core.dex.nodes.MethodNode)', 'jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsInConstructor(jadx.core.dex.nodes.MethodNode)', 'jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,long,jadx.core.dex.nodes.InsnNode,java.util.List)', 'jadx.core.dex.visitors.regions.TernaryMod.replaceWithTernary(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)', 'jadx.core.dex.visitors.regions.TernaryMod.makeTernaryInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion)', 'jadx.core.dex.visitors.regions.TernaryMod.processOneBranchTernary(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion)', 'jadx.core.dex.visitors.ConstInlineVisitor.checkInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,java.util.List)', 'jadx.core.dex.instructions.args.InsnArg.copyCommonParams(jadx.core.dex.instructions.args.InsnArg)', 'jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.utils.InsnList,java.util.List,jadx.core.dex.visitors.shrink.ArgsInfo,jadx.core.dex.instructions.args.RegisterArg)']","['c6c54f90dc31d5a784828906ef25666675447e4a', '533b686e0b95012e42ccb9e1ff29446a71568eb6', '8410e625317e73569abec394cc6fc95e9bee84ea', '424a8ffaf4a123beba126c46960c1433c879a67d']",,"['jadx-core/src/main/java/jadx/core/dex/visitors', 'jadx-core/src/main/java/jadx/core/dex/visitors/regions', 'jadx-core/src/main/java/jadx/core/dex/visitors/shrink', 'jadx-core/src/main/java/jadx/core/codegen', 'jadx-core/src/main/java/jadx/core/dex/attributes', 'jadx-core/src/main/java/jadx/core/dex/instructions/args']",323.0,105.0,428.0,9.0,26.0,24.0,157.0,78.0,37.0,16.0,9.0,0.0,0.0,0.0,0.0,0.0,0.0,jadx
33770,2019-04-08 08:05:28,rajib010,I have 264 frames. I have recorded those with FFmpegFrameRecorder at 60 frame rate. The video length should be 4.4(264/60) seconds but the video length is 4.38. what is the problem???,2019-04-08 09:12:25,"[{'commitHash': '5b5655a7ff37fcde48efce5df41836ff0a9a56e0', 'commitGHEventType': 'referenced', 'commitUser': 'saudet', 'commitParents': ['bfaeb872898701e4a70c9aee4666a7937fe2aa87'], 'nameRev': '5b5655a7ff37fcde48efce5df41836ff0a9a56e0 tags/1.5~3', 'commitMessage': ' * Fix sample rate in output of `FFmpegFrameRecorder` by setting deprecated `AVStream.codec.time_base` (issue #1179)\n', 'commitDateTime': '2019-04-08 18:18:46', 'authoredDateTime': '2019-04-08 18:18:46', 'commitGitStats': [{'filePath': 'CHANGELOG.md', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'src/main/java/org/bytedeco/javacv/FFmpegFrameRecorder.java', 'insertions': 6, 'deletions': 2, 'lines': 8}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'FFmpegFrameRecorder.java', 'spoonMethods': [{'spoonMethodName': 'org.bytedeco.javacv.FFmpegFrameRecorder.startUnsafe()', 'TOT': 12, 'UPD': 1, 'INS': 5, 'MOV': 4, 'DEL': 2}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/bytedeco/javacv/issues/1179,0.0002777777777777778,"['bug', 'duplicate']",Video duration is not accurate with FFmpegFrameRecorder,1.0,['org.bytedeco.javacv.FFmpegFrameRecorder.startUnsafe()'],['5b5655a7ff37fcde48efce5df41836ff0a9a56e0'],,['src/main/java/org/bytedeco/javacv'],6.0,2.0,8.0,1.0,1.0,1.0,12.0,4.0,5.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,javacv
34998,2019-05-13 13:28:07,ptrthomas,"the `--name` option works for IDE (IntelliJ) but nowhere else. it should be honored when running something like `mvn test -Dkarate.options=""classpath:myfeature.feature --name ^first$""`",2019-06-10 01:43:32,"[{'commitHash': '6634ec3792663c90bfc4f7f33390483a99216993', 'commitGHEventType': 'referenced', 'commitUser': 'ptrthomas', 'commitParents': ['42d6724f7280164377927daf74817624076fc30c'], 'nameRev': '6634ec3792663c90bfc4f7f33390483a99216993 tags/v0.9.3~56', 'commitMessage': 'name command-line option should work for junit / parallel suite runner #773\n', 'commitDateTime': '2019-05-13 19:00:42', 'authoredDateTime': '2019-05-13 19:00:42', 'commitGitStats': [{'filePath': 'karate-core/src/main/java/com/intuit/karate/Runner.java', 'insertions': 9, 'deletions': 6, 'lines': 15}, {'filePath': 'karate-core/src/main/java/com/intuit/karate/cucumber/CucumberRunner.java', 'insertions': 2, 'deletions': 2, 'lines': 4}, {'filePath': 'karate-core/src/test/java/com/intuit/karate/core/ScenarioHookTest.java', 'insertions': 2, 'deletions': 2, 'lines': 4}, {'filePath': 'karate-junit4/src/main/java/com/intuit/karate/junit4/Karate.java', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'karate-junit5/src/main/java/com/intuit/karate/junit5/Karate.java', 'insertions': 1, 'deletions': 0, 'lines': 1}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'Runner.java', 'spoonMethods': [{'spoonMethodName': 'com.intuit.karate.Runner.parallel(java.util.List,java.util.List,java.lang.String,java.util.Collection,int,java.lang.String)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.intuit.karate.Runner.parallel(java.lang.String,java.util.List,java.lang.String,java.util.Collection,int,java.lang.String)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.intuit.karate.Runner.parallel(java.lang.Class,int,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.intuit.karate.Runner.parallel(java.util.List,java.util.List,int,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.intuit.karate.Runner.parallel(java.lang.String,java.util.List,int,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'CucumberRunner.java', 'spoonMethods': [{'spoonMethodName': 'com.intuit.karate.cucumber.CucumberRunner.parallel(java.util.List,java.util.List,java.util.Collection,int,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.intuit.karate.cucumber.CucumberRunner.parallel(java.lang.String,java.util.List,java.util.Collection,int,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ScenarioHookTest.java', 'spoonMethods': [{'spoonMethodName': 'com.intuit.karate.core.ScenarioHookTest.testStopIfScenarioHasNoTags()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.intuit.karate.core.ScenarioHookTest.testHookForExamplesWithTags()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Karate.java', 'spoonMethods': [{'spoonMethodName': 'com.intuit.karate.junit5.Karate.iterator()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '7cbbc932edfcd51ee7c1ad981a1ea4c1c66e9d03', 'commitGHEventType': 'referenced', 'commitUser': 'ptrthomas', 'commitParents': ['2478e801fe921e308db356ec9143ad6152223f31'], 'nameRev': '7cbbc932edfcd51ee7c1ad981a1ea4c1c66e9d03 tags/v0.9.3~51', 'commitMessage': 'run scenario by name added to standalone jar #773\nalso was able to add custom classpath addition to standalone\nwhich will be very useful if you want to use classpath or experiment on maven structure projects\n', 'commitDateTime': '2019-05-14 18:43:40', 'authoredDateTime': '2019-05-14 18:43:40', 'commitGitStats': [{'filePath': 'karate-core/src/main/java/com/intuit/karate/FileUtils.java', 'insertions': 13, 'deletions': 2, 'lines': 15}, {'filePath': 'karate-netty/README.md', 'insertions': 21, 'deletions': 0, 'lines': 21}, {'filePath': 'karate-netty/src/main/java/com/intuit/karate/netty/Main.java', 'insertions': 17, 'deletions': 1, 'lines': 18}, {'filePath': 'karate-netty/src/test/java/com/intuit/karate/netty/MainTestRunner.java', 'insertions': 14, 'deletions': 0, 'lines': 14}, {'filePath': 'karate-netty/src/test/java/com/intuit/karate/netty/test-cp.feature', 'insertions': 22, 'deletions': 0, 'lines': 22}, {'filePath': 'karate-netty/src/test/java/com/intuit/karate/netty/test-cp2.json', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'karate-netty/src/test/java/test-cp1.json', 'insertions': 1, 'deletions': 0, 'lines': 1}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'FileUtils.java', 'spoonMethods': [{'spoonMethodName': 'com.intuit.karate.FileUtils.addToClasspath(java.io.File)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Main.java', 'spoonMethods': [{'spoonMethodName': 'com.intuit.karate.netty.Main', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.intuit.karate.netty.Main.call()', 'TOT': 3, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'MainTestRunner.java', 'spoonMethods': [{'spoonMethodName': 'com.intuit.karate.netty.MainTestRunner.testScenarioName()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.intuit.karate.netty.MainTestRunner.testScenarioLine()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/intuit/karate/issues/773,27.00027777777778,"['bug', 'fixed']",karate.options scenario name not honored when using suite / parallel runner,2.0,"['com.intuit.karate.Runner.parallel(java.lang.String,java.util.List,int,java.lang.String)', 'com.intuit.karate.netty.Main.call()', 'com.intuit.karate.Runner.parallel(java.lang.String,java.util.List,java.lang.String,java.util.Collection,int,java.lang.String)', 'com.intuit.karate.Runner.parallel(java.util.List,java.util.List,int,java.lang.String)', 'com.intuit.karate.netty.Main', 'com.intuit.karate.cucumber.CucumberRunner.parallel(java.lang.String,java.util.List,java.util.Collection,int,java.lang.String)', 'com.intuit.karate.junit5.Karate.iterator()', 'com.intuit.karate.cucumber.CucumberRunner.parallel(java.util.List,java.util.List,java.util.Collection,int,java.lang.String)', 'com.intuit.karate.Runner.parallel(java.lang.Class,int,java.lang.String)', 'com.intuit.karate.Runner.parallel(java.util.List,java.util.List,java.lang.String,java.util.Collection,int,java.lang.String)', 'com.intuit.karate.FileUtils.addToClasspath(java.io.File)']","['6634ec3792663c90bfc4f7f33390483a99216993', '7cbbc932edfcd51ee7c1ad981a1ea4c1c66e9d03']",,"['karate-junit5/src/main/java/com/intuit/karate/junit5', 'karate-core/src/main/java/com/intuit/karate/cucumber', 'karate-junit4/src/main/java/com/intuit/karate/junit4', 'karate-core/src/main/java/com/intuit/karate', 'karate-netty/src/main/java/com/intuit/karate/netty']",43.0,11.0,54.0,6.0,0.0,11.0,16.0,0.0,16.0,0.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,karate
35069,2017-11-14 16:48:32,AmirGhahrai,"I have an XML response which contains 
!DOCTYPE USER SYSTEM ""http://127.0.0.1:5000/login/dtd""



and when I try to parse the XML it complains about DTD not being available.

Karate should be able to bypass the need for DTD to validate XML response.",2017-12-05 03:27:37,"[{'commitHash': '881aa71051a91e5be003942d3af63500b7a47928', 'commitGHEventType': 'closed', 'commitUser': 'ptrthomas', 'commitParents': ['07fd7ade321505c701cdc1aebb15e977fe3fe026'], 'nameRev': '881aa71051a91e5be003942d3af63500b7a47928 tags/v0.6.2~33', 'commitMessage': 'xml dtd validation disabling which fixes #244\n', 'commitDateTime': '2017-11-14 22:24:29', 'authoredDateTime': '2017-11-14 22:24:29', 'commitGitStats': [{'filePath': 'karate-core/src/main/java/com/intuit/karate/Script.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'karate-core/src/main/java/com/intuit/karate/XmlUtils.java', 'insertions': 14, 'deletions': 1, 'lines': 15}, {'filePath': 'karate-junit4/src/test/java/com/intuit/karate/junit4/demos/dev.feature', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature', 'insertions': 4, 'deletions': 0, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'Script.java', 'spoonMethods': [{'spoonMethodName': 'com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.ScriptContext,boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'XmlUtils.java', 'spoonMethods': [{'spoonMethodName': 'com.intuit.karate.XmlUtils.toXmlDoc(java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '56055c5b2f4125acbebd42651c31ba90ec30e82f', 'commitGHEventType': 'referenced', 'commitUser': 'ptrthomas', 'commitParents': ['5cadd873653dce918c6d9d15b3d26546ed10cf96'], 'nameRev': '56055c5b2f4125acbebd42651c31ba90ec30e82f tags/v0.7.0~228', 'commitMessage': 'additional test for xml with dtd workaround, refer #244\n', 'commitDateTime': '2017-12-05 15:37:07', 'authoredDateTime': '2017-12-05 15:37:07', 'commitGitStats': [{'filePath': 'karate-junit4/src/test/java/com/intuit/karate/junit4/xml/xml.feature', 'insertions': 14, 'deletions': 1, 'lines': 15}], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}]",https://github.com/intuit/karate/issues/244,20.00027777777778,"['bug', 'fixed']",Cannot Parse/Validate XML if there is a reference to DTD,1.0,"['com.intuit.karate.Script.evalXmlEmbeddedExpressions(org.w3c.dom.Node,com.intuit.karate.ScriptContext,boolean)', 'com.intuit.karate.XmlUtils.toXmlDoc(java.lang.String)']","['881aa71051a91e5be003942d3af63500b7a47928', '56055c5b2f4125acbebd42651c31ba90ec30e82f']",,['karate-core/src/main/java/com/intuit/karate'],15.0,2.0,17.0,2.0,0.0,2.0,3.0,1.0,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,karate
35746,2019-10-15 17:16:22,fbricon,"```
[ERROR] Failures:
[ERROR]   XMLSchemaCompletionExtensionsTest.completionWithXMLSchemaContentChanged:396 expected:<4> but was:<5>
[ERROR]   XMLSchemaCompletionExtensionsTest.xsAny:752 expected:<8> but was:<6>
[ERROR]   XMLValidationPoolCacheTest.dtd:240->testDiagnosticsFor:246 Unexpected diagnostics:
[] expected:<[Diagnostic [
  range = Range [
    start = Position [
      line = 2
      character = 1
    ]
    end = Position [
      line = 2
      character = 5
    ]
  ]
  severity = null
  code = ""MSG_CONTENT_INCOMPLETE""
  source = null
  message = """"
  relatedInformation = null
]]> but was:<[]>
[ERROR]   XMLValidationPoolCacheTest.includedSchemaLocation:139->testDiagnosticsFor:246 Unexpected diagnostics:
[Diagnostic [
  range = Range [
    start = Position [
      line = 2
      character = 2
    ]
    end = Position [
      line = 2
      character = 5
    ]
  ]
  severity = Error
  code = ""cvc-complex-type.2.4.b""
  source = ""xml""
  message = ""Child elements are missing from element:\n - Bar\n\nThe following elements are expected:\n - FooBar\n\nError indicated by\n {the schema}\nwith code:""
  relatedInformation = null
]] expected:<[Diagnostic [
  range = Range [
    start = Position [
      line = 2
      character = 6
    ]
    end = Position [
      line = 4
      character = 1
    ]
  ]
  severity = null
  code = ""cvc-complex-type.2.1""
  source = null
  message = """"
  relatedInformation = null
]]> but was:<[Diagnostic [
  range = Range [
    start = Position [
      line = 2
      character = 2
    ]
    end = Position [
      line = 2
      character = 5
    ]
  ]
  severity = null
  code = ""cvc-complex-type.2.4.b""
  source = null
  message = """"
  relatedInformation = null
]]>
[INFO]
[ERROR] Tests run: 802, Failures: 4, Errors: 0, Skipped: 3
```",2019-10-17 13:18:30,"[{'commitHash': '99baf46a0e74b2b9d91640e36782c716d8ee497f', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '86bf832a2cd66f9531c457789b51a14cce36249a', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '3ffd90b2829ddbf785d31eb6e5f2ec30cdb0a634', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '98d855662f4080c2845bf6b4b3a18578934e4a37', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '69b444c2f0cb8d61c7500ae6c9172333d9ca292e', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '3e9d047d35a5b3b7b81247a481b4530ba4bf4094', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '403464c22f618983ebb02afc7b6370ed800b977d', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '97cc1e7da9cd15f0ec12173ee7ce81e70f8da225', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '20a099cfd0db315c8b670235efe6ecf1d91b38d9', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'ccdbadb2410ae873cca35c8e0ca096658fdaea71', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '967c2d7f158484f08e40d3830091f640b568e558', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '65ed4dbc8f9b4ce25f9c09d9a7b229860e25daa8', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '5f2c98c17026b0509a4dbbe218112c980d56fd5b', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '1c58c81250e316b3ae88ff08caeb94223f3cf2b7', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '0014c02b7fabc2deaae441da35412fba9a24f119', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '9a7c426cb30fd8e9e6917006c74e5a6ab2737565', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '179e3d6020873a40f6eb192a8392ec99fc57b357', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '4d8fc3f8d0d82abe71b54262039743a811e12bd2', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'df09da9d6033f8d50d5ec237fc4aea96a549a84e', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '99364f13904af6769db99245d51fb565673a9174', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '3176e2de1a969a1546450a75ec1a3ff9b97f1df5', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'cf9574a91a7ddb9c64f0f2fdc574cfcd67bd27ae', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '792eca31f0cdbada371e616993cf2986d0847519', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '15cf0d6497d03a538975518d7857bfc875a14474', 'commitGHEventType': 'referenced', 'commitUser': 'angelozerr', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '13a577344ce9637ab44ffaf3647d63c5ac6f3e1a', 'commitGHEventType': 'referenced', 'commitUser': 'fbricon', 'commitParents': ['f8a2c15d7758454eebb8234a6923622746f86e10'], 'nameRev': '13a577344ce9637ab44ffaf3647d63c5ac6f3e1a tags/0.9.1~1', 'commitMessage': 'Wait for 1 second in test when file changed\n\nFixes #574\n\nSigned-off-by: azerr <azerr@redhat.com>', 'commitDateTime': '2019-10-17 15:18:29', 'authoredDateTime': '2019-10-16 08:10:53', 'commitGitStats': [{'filePath': 'org.eclipse.lsp4xml/src/main/java/org/eclipse/lsp4xml/extensions/contentmodel/model/FilesChangedTracker.java', 'insertions': 3, 'deletions': 3, 'lines': 6}, {'filePath': 'org.eclipse.lsp4xml/src/test/java/org/eclipse/lsp4xml/extensions/contentmodel/BaseFileTempTest.java', 'insertions': 27, 'deletions': 6, 'lines': 33}, {'filePath': 'org.eclipse.lsp4xml/src/test/java/org/eclipse/lsp4xml/extensions/contentmodel/ContentModelManagerCacheTest.java', 'insertions': 2, 'deletions': 1, 'lines': 3}, {'filePath': 'org.eclipse.lsp4xml/src/test/java/org/eclipse/lsp4xml/extensions/contentmodel/XMLSchemaCompletionExtensionsTest.java', 'insertions': 1, 'deletions': 4, 'lines': 5}, {'filePath': 'org.eclipse.lsp4xml/src/test/java/org/eclipse/lsp4xml/extensions/contentmodel/XMLValidationPoolCacheTest.java', 'insertions': 4, 'deletions': 4, 'lines': 8}, {'filePath': 'org.eclipse.lsp4xml/src/test/java/org/eclipse/lsp4xml/extensions/contentmodel/model/FilesChangedTrackerTest.java', 'insertions': 40, 'deletions': 0, 'lines': 40}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'FilesChangedTracker.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.lsp4xml.extensions.contentmodel.model.FilesChangedTracker.FileChangedTracker.isDirty()', 'TOT': 3, 'UPD': 3, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'BaseFileTempTest.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.lsp4xml.extensions.contentmodel.BaseFileTempTest', 'TOT': 6, 'UPD': 2, 'INS': 1, 'MOV': 1, 'DEL': 2}, {'spoonMethodName': 'org.eclipse.lsp4xml.extensions.contentmodel.BaseFileTempTest.createFile(java.lang.String,java.lang.String)', 'TOT': 10, 'UPD': 5, 'INS': 1, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'org.eclipse.lsp4xml.extensions.contentmodel.BaseFileTempTest.updateFile(java.lang.String,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ContentModelManagerCacheTest.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.lsp4xml.extensions.contentmodel.ContentModelManagerCacheTest.testXSDCache()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'XMLSchemaCompletionExtensionsTest.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.lsp4xml.extensions.contentmodel.XMLSchemaCompletionExtensionsTest.completionWithXMLSchemaContentChanged()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'XMLValidationPoolCacheTest.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.lsp4xml.extensions.contentmodel.XMLValidationPoolCacheTest.includedSchemaLocation()', 'TOT': 3, 'UPD': 3, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.lsp4xml.extensions.contentmodel.XMLValidationPoolCacheTest.dtd()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'FilesChangedTrackerTest.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.lsp4xml.extensions.contentmodel.model.FilesChangedTrackerTest', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/eclipse/lemminx/issues/574,1.0002777777777778,['bug'],Test failures on Mac OS,1.0,['org.eclipse.lsp4xml.extensions.contentmodel.model.FilesChangedTracker.FileChangedTracker.isDirty()'],['13a577344ce9637ab44ffaf3647d63c5ac6f3e1a'],,['org.eclipse.lsp4xml/src/main/java/org/eclipse/lsp4xml/extensions/contentmodel/model'],3.0,3.0,6.0,1.0,3.0,1.0,3.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,24.0,0.0,0.0,lemminx
36283,2015-12-11 11:12:12,devemux86,"As reported in [Atlas forum](https://groups.google.com/forum/#!topic/atlas-app/JMpKAAiXf7o) we have broken multipolygons in latest Mapsforge dev.
(screenshot by Christian)

I found that the issue arises at the change in closed way calculation from Euclidean distance to spherical distance (see [here](https://github.com/mapsforge/mapsforge/commit/f9b6059bb57ebe737eae32c3db4dc25a77338e66#diff-64dc68a7bd488ca2fd0f2124e1a5f8b8R126)).

@ludwigb can you explain why the change?
~~In a closed way the start and end points are extremely close (if not equal), so we can continue using the Pythagorean formula.~~

![multipolygons](https://cloud.githubusercontent.com/assets/3484020/11742260/149bf7b0-a007-11e5-8eb3-4b7b81ce2fb6.png)
",2015-12-11 18:05:02,"[{'commitHash': '62c71b3fd5c712f326f341e58589524319c806de', 'commitGHEventType': 'referenced', 'commitUser': 'devemux86', 'commitParents': ['83ccbd9e0aae1e3eab776e113c318816bb9a203c'], 'nameRev': '62c71b3fd5c712f326f341e58589524319c806de tags/0.6.1-rc1~2^2~155', 'commitMessage': 'Fix closed ways calculation causing broken multipolygons #753\n', 'commitDateTime': '2015-12-11 19:58:23', 'authoredDateTime': '2015-12-11 19:58:23', 'commitGitStats': [{'filePath': 'mapsforge-core/src/main/java/org/mapsforge/core/util/LatLongUtils.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'LatLongUtils.java', 'spoonMethods': [{'spoonMethodName': 'org.mapsforge.core.util.LatLongUtils.isClosedWay(org.mapsforge.core.model.LatLong[])', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/mapsforge/mapsforge/issues/753,0.0002777777777777778,['bug'],Multipolygons broken in latest Mapsforge,1.0,['org.mapsforge.core.util.LatLongUtils.isClosedWay(org.mapsforge.core.model.LatLong[])'],['62c71b3fd5c712f326f341e58589524319c806de'],,['mapsforge-core/src/main/java/org/mapsforge/core/util'],1.0,1.0,2.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,mapsforge
37172,2013-06-10 20:11:13,amitter77,"Since I upgraded to mybatis 3.2.2, one of my sql is failing. It used to work prior to upgrading to 3.2.2. 

To reproduce this issue, make a slight modification to the src\test\java\org\apache\ibatis\submitted\basetest\Mapper.xml file to ""getUser"" Select statement:

```
<select id=""getUser"" parameterType=""java.lang.String"" resultType=""org.apache.ibatis.submitted.basetest.User"">
        select * from users 
       <if test=""value not in {null, ''}"">
       where name = #{value}
      </if>
</select>
```

Once the above change is made, in BaseTest.java, line 57 is changed to:
`final User user = mapper.getUser(""User1"");`

When you run the test, you will now get the following error that did not used to occur before the upgrade to 3.2.2:

```
Type handler was null on parameter mapping for property 'value'. It was either not specified and/or could not be found for the javaType / jdbcType combination specified.
```
",2013-06-13 09:44:09,"[{'commitHash': '2f56fdf9daf4a9483cc327101f5b5f4adac61499', 'commitGHEventType': 'referenced', 'commitUser': 'emacarron', 'commitParents': ['9745e2b6ced726dac339e6919004cf43ab47f408'], 'nameRev': '2f56fdf9daf4a9483cc327101f5b5f4adac61499 tags/mybatis-3.2.3~32', 'commitMessage': 'Failing test for issue #61. This is a regression caused in 448 (see it\nin gcode).', 'commitDateTime': '2013-06-13 09:49:56', 'authoredDateTime': '2013-06-13 09:49:56', 'commitGitStats': [{'filePath': 'src/test/java/org/apache/ibatis/submitted/ognlstatic/Mapper.java', 'insertions': 2, 'deletions': 1, 'lines': 3}, {'filePath': 'src/test/java/org/apache/ibatis/submitted/ognlstatic/Mapper.xml', 'insertions': 16, 'deletions': 10, 'lines': 26}, {'filePath': 'src/test/java/org/apache/ibatis/submitted/ognlstatic/OgnlStaticTest.java', 'insertions': 16, 'deletions': 2, 'lines': 18}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'Mapper.java', 'spoonMethods': [{'spoonMethodName': 'org.apache.ibatis.submitted.ognlstatic.getUser(java.lang.Integer)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.apache.ibatis.submitted.ognlstatic.getUserIfNode(java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'OgnlStaticTest.java', 'spoonMethods': [{'spoonMethodName': 'org.apache.ibatis.submitted.ognlstatic.OgnlStaticTest.shouldGetAUser()', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.apache.ibatis.submitted.ognlstatic.OgnlStaticTest.shouldGetAUserWithIfNode()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'dc6b29bf9e11fac4443cab641599cdf1da9fb8fc', 'commitGHEventType': 'referenced', 'commitUser': 'emacarron', 'commitParents': ['43039bf2693c7597e3a85eaa69a2e01a606f83d4'], 'nameRev': 'dc6b29bf9e11fac4443cab641599cdf1da9fb8fc tags/mybatis-3.2.3~30', 'commitMessage': 'Fix for issue #61', 'commitDateTime': '2013-06-13 11:43:08', 'authoredDateTime': '2013-06-13 11:43:08', 'commitGitStats': [{'filePath': 'src/main/java/org/apache/ibatis/scripting/xmltags/DynamicContext.java', 'insertions': 9, 'deletions': 3, 'lines': 12}, {'filePath': 'src/test/java/org/apache/ibatis/submitted/ognlstatic/OgnlStaticTest.java', 'insertions': 2, 'deletions': 2, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DynamicContext.java', 'spoonMethods': [{'spoonMethodName': 'org.apache.ibatis.scripting.xmltags.DynamicContext.ContextMap.get(java.lang.Object)', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 2}, {'spoonMethodName': 'org.apache.ibatis.scripting.xmltags.DynamicContext.ContextMap.put(java.lang.String,java.lang.Object)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'OgnlStaticTest.java', 'spoonMethods': [{'spoonMethodName': 'org.apache.ibatis.submitted.ognlstatic.OgnlStaticTest.shouldGetAUserWithIfNode()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.apache.ibatis.submitted.ognlstatic.OgnlStaticTest.shouldGetAUserStatic()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '9f85c37d987d280a33c20b8db69c4a652e5637f4', 'commitGHEventType': 'referenced', 'commitUser': 'emacarron', 'commitParents': ['0b94647d38074d9cdc6c8f021949ea7db524a24d'], 'nameRev': '9f85c37d987d280a33c20b8db69c4a652e5637f4 tags/mybatis-3.2.3~15', 'commitMessage': 'Related to #61', 'commitDateTime': '2013-07-16 08:12:38', 'authoredDateTime': '2013-07-16 08:12:38', 'commitGitStats': [{'filePath': 'src/test/java/org/apache/ibatis/submitted/call_setters_on_nulls/CallSettersOnNullsTest.java', 'insertions': 14, 'deletions': 15, 'lines': 29}, {'filePath': 'src/test/java/org/apache/ibatis/submitted/call_setters_on_nulls/CreateDB.sql', 'insertions': 0, 'deletions': 1, 'lines': 1}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'CallSettersOnNullsTest.java', 'spoonMethods': [{'spoonMethodName': 'org.apache.ibatis.submitted.call_setters_on_nulls.CallSettersOnNullsTest.shouldCallNullOnMapForSingleColumn()', 'TOT': 7, 'UPD': 3, 'INS': 1, 'MOV': 2, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/mybatis/mybatis-3/issues/61,2.000277777777778,['bug'],Parameter Mapping issue with Mybatis 3.2.2,1.0,"['org.apache.ibatis.scripting.xmltags.DynamicContext.ContextMap.put(java.lang.String,java.lang.Object)', 'org.apache.ibatis.submitted.ognlstatic.getUserIfNode(java.lang.String)', 'org.apache.ibatis.scripting.xmltags.DynamicContext.ContextMap.get(java.lang.Object)', 'org.apache.ibatis.submitted.ognlstatic.getUser(java.lang.Integer)']","['2f56fdf9daf4a9483cc327101f5b5f4adac61499', 'dc6b29bf9e11fac4443cab641599cdf1da9fb8fc', '9f85c37d987d280a33c20b8db69c4a652e5637f4']",,['src/main/java/org/apache/ibatis/scripting/xmltags'],9.0,3.0,12.0,1.0,1.0,4.0,8.0,2.0,3.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,mybatis-3
37236,2019-08-29 09:59:22,mmews-n4,"This issue happens only on the windows platform when compiling N4JS code which compiles fine on MacOS platform.

`@issue: ERROR:Cannot resolve import target :: resolving simple module import : found no matching modules (file:///C:/.../node_modules/n4js-runtime-ecma402/src/n4js/Date.n4jsd line : 13 column : 37)`",2019-09-02 11:42:01,"[{'commitHash': 'e0cf3d0297a7dc3c578619515ef30f0aa55003ac', 'commitGHEventType': 'referenced', 'commitUser': 'mmews-n4', 'commitParents': ['a32ef3c398046b87b14641773a1811ef3bfe1f9b'], 'nameRev': 'e0cf3d0297a7dc3c578619515ef30f0aa55003ac remotes/origin/GH-1592~70', 'commitMessage': 'GH-1443: On Windows some imports cannot be resolved (#1446)\n\n* fix wrong separator in URIs\r\n\r\n* support backslashes on non-windows systems; convert on windows\r\n', 'commitDateTime': '2019-09-02 13:41:53', 'authoredDateTime': '2019-09-02 13:41:53', 'commitGitStats': [{'filePath': 'plugins/org.eclipse.n4js/src/org/eclipse/n4js/internal/N4JSProjectSourceContainer.java', 'insertions': 5, 'deletions': 1, 'lines': 6}, {'filePath': 'plugins/org.eclipse.n4js/src/org/eclipse/n4js/projectModel/locations/SafeURI.java', 'insertions': 9, 'deletions': 7, 'lines': 16}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'N4JSProjectSourceContainer.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.n4js.internal.N4JSProjectSourceContainer.getLocation()', 'TOT': 3, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 1}]}, {'spoonFilePath': 'SafeURI.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.n4js.projectModel.locations.SafeURI.validate(org.eclipse.emf.common.util.URI)', 'TOT': 12, 'UPD': 0, 'INS': 3, 'MOV': 8, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '03acbf80cd3c14fbb67b8696d97089adab78b006', 'commitGHEventType': 'referenced', 'commitUser': 'dbo', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}]",https://github.com/eclipse/n4js/issues/1443,4.000277777777778,['bug'],On Windows some imports cannot be resolved,1.0,"['org.eclipse.n4js.internal.N4JSProjectSourceContainer.getLocation()', 'org.eclipse.n4js.projectModel.locations.SafeURI.validate(org.eclipse.emf.common.util.URI)']",['e0cf3d0297a7dc3c578619515ef30f0aa55003ac'],,"['plugins/org.eclipse.n4js/src/org/eclipse/n4js/projectModel/locations', 'plugins/org.eclipse.n4js/src/org/eclipse/n4js/internal']",14.0,8.0,22.0,2.0,0.0,2.0,15.0,8.0,5.0,2.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,n4js
37404,2018-02-07 14:14:27,mor-n4,"```javascript
class A {
    public a: number;

    public f(): void {}
}

var a: ~A = { a: 2, f: function () {} };
let x = 5;

// XPECT FIXME errors --> ""instanceof cannot be used with use site structural typing."" at ""~A""
// Getting: constructor{A} is not a subtype of number.
//          number is not a subtype of union{Function,type{Object},type{N4Enum}}.
a instanceof ~A;

// XPECT FIXME errors  --> ""instanceof cannot be used with use site structural typing."" at ""~~A""
// Getting: number is not a subtype of union{Function,type{Object},type{N4Enum}}.
a instanceof ~~A;

// The following tests are only to ensure that existing correct functionality is maintained:

// XPECT errors --> ""number is not a subtype of union{Function,type{Object},type{N4Enum}}."" at ""--x""
a instanceof --x;


// This needs to work! XPECT noerrors --> 
a instanceof A;

// XPECT errors --> ""instanceof cannot be used with primitive types."" at ""number"" 
a instanceof number; 
```
This is due to ~ being parsed as the INV (inverse, i.e. XOR) operator.

We need to do the following things:

Adjust the ExpectedTypeJudgment to get rid of wrong errors:
1. turn off expected type error for RelationalExpression, if operator is INSTANCEOF and right hand side is an UnaryExpression. We can do this by simply expecting anytype
2. turn off expected type error for UnaryExpression if parent is RelationalExpression and operator is INSTANCEOF. Same trick as in 1.

Add a new validation (in N4JSExpressionValidator) for exactly this case, extending the current INSTANCEOF validation. We need a new error message ""'instanceof' cannot be used with use site structural typing."", since the error now stems from use site structural typeing (and not definition site, note that the typing strategy is not correctly parsed anyway.)

## Acceptance Criteria

The tests above must work.

## Hints
- the message is defined in message.properties, file IssuesCodes.xtend (in same package) must be touched to be recompiled
- in order to debug, run N4JS in debug mode. Unfortunately changing xtend code requires a restart. Do not simply ""terminate"" the runtime instance, but instead disable breakpoints and correctly quit the application




(moved from internal bug tracker, IDEBUG-163 and NumberFour/n4js#9; original reporter: @alisa-lisovskaya)",2019-11-25 08:42:53,"[{'commitHash': 'f7a396dcc5034dcbcd0dec7249b1c4cbbe448655', 'commitGHEventType': 'referenced', 'commitUser': 'mor-n4', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'fac8919c2d8bdaf198a00a0c66604d09ce9de113', 'commitGHEventType': 'referenced', 'commitUser': 'mor-n4', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '053ca01dfb8708c75a856d7abcbbdbc92f6acbff', 'commitGHEventType': 'referenced', 'commitUser': 'jpilgrim', 'commitParents': ['558e2ff09d7cab2b36065b7d29127c448c44e0d9'], 'nameRev': '053ca01dfb8708c75a856d7abcbbdbc92f6acbff remotes/origin/GH-1592~20', 'commitMessage': 'GH-560: As a user I need informative error messages for instance operator with use-site structural type (#1530)\n\n* GH-560 structural typing ExpectedTypeJudgment\r\n* GH-560 test StructuralAndInstanceof\r\n* GH-560 remove incorrect issues\r\n* GH-560 add new issue and show\r\n* GH-560 update test\r\n* GH-560 make sure only INV is treated\r\n* GH-560 add issue to non-numeric terms only\r\n* GH-560 correctly handle ~~ eg double unary\r\n* GH-560 add issue to ~~ eg double unary\r\n* only .tau once\r\n* only use tau if op combi is instanceof and inv\r\n* same for relationalexpression\r\n* GH-560 add helper method\r\n\r\nSigned-off-by: Eduard Veit <eclipse@ev21.de>\r\nSigned-off-by: Rodrigo Ehlers <rodrigoehlers@outlook.com>', 'commitDateTime': '2019-11-25 09:41:34', 'authoredDateTime': '2019-11-25 09:41:34', 'commitGitStats': [{'filePath': 'plugins/org.eclipse.n4js/src/org/eclipse/n4js/typesystem/ExpectedTypeJudgment.java', 'insertions': 59, 'deletions': 1, 'lines': 60}, {'filePath': 'plugins/org.eclipse.n4js/src/org/eclipse/n4js/validation/messages.properties', 'insertions': 2, 'deletions': 0, 'lines': 2}, {'filePath': 'plugins/org.eclipse.n4js/src/org/eclipse/n4js/validation/validators/N4JSExpressionValidator.xtend', 'insertions': 16, 'deletions': 2, 'lines': 18}, {'filePath': 'tests/org.eclipse.n4js.spec.tests/xpect-tests/Ch05_05_StructuralTyping/Req76_3_StructuralAndInstanceof.n4js.xt', 'insertions': 38, 'deletions': 14, 'lines': 52}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ExpectedTypeJudgment.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.n4js.typesystem.ExpectedTypeJudgment.ExpectedTypeJudgmentSwitch.isInstanceOfWithStructuralTyping(org.eclipse.n4js.n4JS.UnaryExpression)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.n4js.typesystem.ExpectedTypeJudgment.ExpectedTypeJudgmentSwitch.caseRelationalExpression(org.eclipse.n4js.n4JS.RelationalExpression)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.n4js.typesystem.ExpectedTypeJudgment.ExpectedTypeJudgmentSwitch.caseUnaryExpression(org.eclipse.n4js.n4JS.UnaryExpression)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/eclipse/n4js/issues/560,655.0002777777778,"['HAW', 'bug', 'prio-low']",As a user I need informative error message for instanceof operator with use-site structural type,1.0,"['org.eclipse.n4js.typesystem.ExpectedTypeJudgment.ExpectedTypeJudgmentSwitch.caseRelationalExpression(org.eclipse.n4js.n4JS.RelationalExpression)', 'org.eclipse.n4js.typesystem.ExpectedTypeJudgment.ExpectedTypeJudgmentSwitch.isInstanceOfWithStructuralTyping(org.eclipse.n4js.n4JS.UnaryExpression)', 'org.eclipse.n4js.typesystem.ExpectedTypeJudgment.ExpectedTypeJudgmentSwitch.caseUnaryExpression(org.eclipse.n4js.n4JS.UnaryExpression)']",['053ca01dfb8708c75a856d7abcbbdbc92f6acbff'],,"['plugins/org.eclipse.n4js/src/org/eclipse/n4js/validation/messages.properties', 'plugins/org.eclipse.n4js/src/org/eclipse/n4js/typesystem', 'plugins/org.eclipse.n4js/src/org/eclipse/n4js/validation/validators/N4JSExpressionValidator.xtend', 'tests/org.eclipse.n4js.spec.tests/xpect-tests/Ch05_05_StructuralTyping/Req76_3_StructuralAndInstanceof.n4js.xt']",115.0,17.0,132.0,4.0,0.0,3.0,5.0,1.0,4.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,n4js
37432,2018-01-03 08:39:03,kduske-n4,"Some NPMs have a directory structure such as

```
/package.json
/dist/this.js
/dist/that.js
...
```

Note that the .js files are inside a directory called `dist` here. During the adaptation process, the N4JSD files should be put alongside the .js files into the dist directory, which is currently accomplished correctly if the following two conditions are met:

- The main module is set in the NPM package.json (see `NpmPackageToProjectAdapter#computeMainModule).
- The directory structure of the N4JSD project is

```
/<version>/.project
/<version>/manifest.n4mf
/<version>/manifest.fragment
/src/this.n4jsd
/src/that.n4jsd
```

Note that the `src` folder does not reflect the structure of the NPM package, that is, there is no `dist` folder inside it. But to facilitate the shadowing necessary to edit the N4JSD project inside the workspace, and for reasons of coherence, the directory structure inside the `src` folder should reflect the directory structure inside the NPM package, i.e., it should be

```
/<version>/.project
/<version>/manifest.n4mf
/<version>/manifest.fragment
/src/dist/this.n4jsd
/src/dist/that.n4jsd
```

But in that case, the n4jsd files are put into the wrong place after adaptation has taken place. This is because the adaptation process takes the main module directive into account when computing the target path for the n4jsd files.

To allow the correct directory structure in the N4JSD project, the adaptation process should not evaluate the main module directive and just merge the contents of the `src` folder into the NPM package.",2018-01-04 17:16:20,"[{'commitHash': '5948a4b9ac4b4914b6de9877483b1e493e069365', 'commitGHEventType': 'referenced', 'commitUser': 'kduske-n4', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '2024b0529a9f12f8b83c2446249fd00fd134a8a1', 'commitGHEventType': 'referenced', 'commitUser': 'kduske-n4', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '771444a9d3cfd0f8b80dba2e111d7cd32ffd4d43', 'commitGHEventType': 'referenced', 'commitUser': 'kduske-n4', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'e3c0b18564bacf92ef54d8713e8f81512191d228', 'commitGHEventType': 'referenced', 'commitUser': 'kduske-n4', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '679f02abf07c64b79fe37cd98914e134a0b4b0ec', 'commitGHEventType': 'referenced', 'commitUser': 'kduske-n4', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '1c6839c4c23116839963997917d62de202bfd24d', 'commitGHEventType': 'referenced', 'commitUser': 'kduske-n4', 'commitParents': ['562650845a4725a5300a06d407f595e245984d44'], 'nameRev': '1c6839c4c23116839963997917d62de202bfd24d remotes/origin/postponed-GH-1275~400', 'commitMessage': 'GH-435: Wrong directory structure after NPM package adaptation (#436)\n\n* GH-435: Adapt N4JSD project structure to NPM project structure.\r\n\r\n* GH-435: Minor changes.\r\n\r\n* GH-435: Only copy over N4JSD files during NPM package adaptation.\r\n\r\n* GH-435: Fix path filter for N4JSD files.\r\n\r\n* GH-435: Set N4JSD repo branch to master again.\r\n', 'commitDateTime': '2018-01-04 18:16:19', 'authoredDateTime': '2018-01-04 18:16:19', 'commitGitStats': [{'filePath': 'plugins/org.eclipse.n4js/src/org/eclipse/n4js/external/NpmPackageToProjectAdapter.java', 'insertions': 16, 'deletions': 38, 'lines': 54}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'NpmPackageToProjectAdapter.java', 'spoonMethods': [{'spoonMethodName': 'org.eclipse.n4js.external.NpmPackageToProjectAdapter', 'TOT': 4, 'UPD': 1, 'INS': 1, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'org.eclipse.n4js.external.NpmPackageToProjectAdapter.addTypeDefinitions(java.io.File,org.eclipse.n4js.external.libraries.PackageJson,java.io.File,java.io.File)', 'TOT': 13, 'UPD': 9, 'INS': 1, 'MOV': 2, 'DEL': 1}, {'spoonMethodName': 'org.eclipse.n4js.external.NpmPackageToProjectAdapter.addTypeDefinitions(java.io.File,org.eclipse.n4js.external.libraries.PackageJson,java.lang.String,java.io.File,java.io.File)', 'TOT': 5, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 4}, {'spoonMethodName': 'org.eclipse.n4js.external.NpmPackageToProjectAdapter.adaptPackages(java.lang.Iterable)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.eclipse.n4js.external.NpmPackageToProjectAdapter.2.apply(java.nio.file.Path)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/eclipse/n4js/issues/435,1.0002777777777778,['bug'],Wrong directory structure after NPM package adaptation,1.0,"['org.eclipse.n4js.external.NpmPackageToProjectAdapter.2.apply(java.nio.file.Path)', 'org.eclipse.n4js.external.NpmPackageToProjectAdapter.adaptPackages(java.lang.Iterable)', 'org.eclipse.n4js.external.NpmPackageToProjectAdapter.addTypeDefinitions(java.io.File,org.eclipse.n4js.external.libraries.PackageJson,java.lang.String,java.io.File,java.io.File)', 'org.eclipse.n4js.external.NpmPackageToProjectAdapter', 'org.eclipse.n4js.external.NpmPackageToProjectAdapter.addTypeDefinitions(java.io.File,org.eclipse.n4js.external.libraries.PackageJson,java.io.File,java.io.File)']",['1c6839c4c23116839963997917d62de202bfd24d'],,['plugins/org.eclipse.n4js/src/org/eclipse/n4js/external'],16.0,38.0,54.0,1.0,11.0,5.0,24.0,4.0,3.0,6.0,1.0,0.0,0.0,0.0,5.0,0.0,0.0,n4js
37636,2017-10-23 08:06:20,jianyuanzh,"### Expected behavior
Hostname configured with both IPv4 and IPv6 dns records. Netty dns resolver is configured to prefer IPv4 addresses, so I should always get IPv4 address.

### Actual behavior
but after several minutes run, it can only return ipv6 record.

### Steps to reproduce
Create a NettyDns resolver with DefaultDnsCache, and keep it running for several minutes. You can see finally only ipv6 record can be got.


### Minimal yet complete reproducer code (or URL to code)
the url have the issue is ""mirrors.servercentral.com""

### Netty version
4.1.15.Final

### JVM version (e.g. `java -version`)
```
java -version
java version ""1.8.0_131""
Java(TM) SE Runtime Environment (build 1.8.0_131-b11)
Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)
```
### OS version (e.g. `uname -a`)
```
uname -a
Darwin zhangjianyuans-MacBook-Pro.local 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64
```
",2018-01-31 13:40:28,"[{'commitHash': '3fb41ff7e16590de2c6e79372d8d12889664bd7f', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'b874edbf65e146cefd0f769767c587931e9f2552', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['d2bd36fc4c9e200e7371c487b95b761bc9f3cd27'], 'nameRev': 'b874edbf65e146cefd0f769767c587931e9f2552 tags/netty-4.1.21.Final~12', 'commitMessage': 'DefaultDnsCache should expire all records per hostname when one TTL is reached.\n\nMotivation:\n\nAt the moment DefaultDnsCache will expire each record dependong on its own TTL. This may result in unexpected results for the end-user especially if the user for example uses IPV4_PREFERED but the cached AAAA records has a higher TTL then the A records and so the A record was removed. In this case we would only return the AAAA record and not even try to refresh.\n\nModifications:\n\nAlways expire all records for a hostname when one TTL is reached.\n\nResult:\n\nFixes [#7329]\n', 'commitDateTime': '2018-01-31 14:39:31', 'authoredDateTime': '2018-01-30 15:55:07', 'commitGitStats': [{'filePath': 'resolver-dns/src/main/java/io/netty/resolver/dns/DefaultDnsCache.java', 'insertions': 17, 'deletions': 44, 'lines': 61}, {'filePath': 'resolver-dns/src/test/java/io/netty/resolver/dns/DefaultDnsCacheTest.java', 'insertions': 58, 'deletions': 0, 'lines': 58}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DefaultDnsCache.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.resolver.dns.DefaultDnsCache.Entries.cancelExpiration()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.resolver.dns.DefaultDnsCache.clear()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.resolver.dns.DefaultDnsCache.clear(java.lang.String)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.resolver.dns.DefaultDnsCache.cache0(io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry,int,io.netty.channel.EventLoop)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.resolver.dns.DefaultDnsCache.scheduleCacheExpiration(io.netty.resolver.dns.DefaultDnsCache$Entries,io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry,int,io.netty.channel.EventLoop)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.resolver.dns.DefaultDnsCache.scheduleCacheExpiration(io.netty.resolver.dns.DefaultDnsCache$Entries,io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry,int,io.netty.channel.EventLoop).1.run()', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.resolver.dns.DefaultDnsCache.Entries.remove(io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.resolver.dns.DefaultDnsCache.scheduleCacheExpiration(io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry,int,io.netty.channel.EventLoop).1.run()', 'TOT': 3, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DefaultDnsCacheTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.resolver.dns.DefaultDnsCacheTest', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/7329,100.00027777777778,"['defect', 'improvement']",Expiry strategy improvement request for DefaultDnsCache,1.0,"['io.netty.resolver.dns.DefaultDnsCache.Entries.remove(io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry)', 'io.netty.resolver.dns.DefaultDnsCache.Entries.cancelExpiration()', 'io.netty.resolver.dns.DefaultDnsCache.scheduleCacheExpiration(io.netty.resolver.dns.DefaultDnsCache$Entries,io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry,int,io.netty.channel.EventLoop).1.run()', 'io.netty.resolver.dns.DefaultDnsCache.cache0(io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry,int,io.netty.channel.EventLoop)', 'io.netty.resolver.dns.DefaultDnsCache.clear(java.lang.String)', 'io.netty.resolver.dns.DefaultDnsCache.scheduleCacheExpiration(io.netty.resolver.dns.DefaultDnsCache$Entries,io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry,int,io.netty.channel.EventLoop)', 'io.netty.resolver.dns.DefaultDnsCache.scheduleCacheExpiration(io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry,int,io.netty.channel.EventLoop).1.run()', 'io.netty.resolver.dns.DefaultDnsCache.clear()']",['b874edbf65e146cefd0f769767c587931e9f2552'],,['resolver-dns/src/main/java/io/netty/resolver/dns'],17.0,44.0,61.0,1.0,3.0,8.0,11.0,1.0,3.0,4.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,netty
37656,2017-09-05 07:53:55,Apache9,"### Expected behavior
The `ChannelHandler` which is used to construct `Http2MultiplexCodecBuilder` should only be added to remotely-created streams.
### Actual behavior
It is also added to out bound streams.
### Steps to reproduce
Modify `Http2MultiplexCodecBuilderTest`, replace the code in `setUp`

```
        Bootstrap cb = new Bootstrap()
                .channel(LocalChannel.class)
                .group(group)
                .handler(new Http2MultiplexCodecBuilder(false, new TestChannelInitializer()).build());
```
to
```
        Bootstrap cb = new Bootstrap()
                .channel(LocalChannel.class)
                .group(group)
                .handler(new Http2MultiplexCodecBuilder(false, new ChannelInitializer<Channel>() {

                    @Override
                    protected void initChannel(Channel ch) throws Exception {
                        throw new RuntimeException(""should not be call for outbound stream"");
                    }
                }).build());
```
Then `createOutboundStream` and `multipleOutboundStreams` will both fail.
### Minimal yet complete reproducer code (or URL to code)
Just apply this patch
https://github.com/Apache9/netty/commit/2dcbae3109bbab5699dbfd64176694c8d43f69ca
### Netty version
4.1.15.Final
### JVM version (e.g. `java -version`)
java version ""1.8.0_121""
Java(TM) SE Runtime Environment (build 1.8.0_121-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)
### OS version (e.g. `uname -a`)
Linux zhangduo-ubuntu 4.4.0-93-generic #116-Ubuntu SMP Fri Aug 11 21:17:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux",2017-09-06 06:37:58,"[{'commitHash': '88cbbfc907303a6d02b9b6886c934227c0c92263', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '870b5f5e4b4eef8ea3baf650fa9c592533b2fda2', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['5c572f0f63da22392d477697c4c289072915d483'], 'nameRev': '870b5f5e4b4eef8ea3baf650fa9c592533b2fda2 tags/netty-4.1.16.Final~31', 'commitMessage': 'Not add inboundStreamHandler for outbound streams created by Http2MultiplexCodec.\n\nMotivation:\n\nWe must not add the inboundStreamHandler for outbound streams creates by Http2MultiplexCodec as the user will specify a handler via Http2StreamChannelBootstrap.\n\nModifications:\n\n- Check if the stream is for outbound and if so not add the inboundStreamHandler to the pipeline\n- Update tests so this is covered.\n\nResult:\n\nFixes [#7178]\n', 'commitDateTime': '2017-09-06 08:37:29', 'authoredDateTime': '2017-09-05 18:34:34', 'commitGitStats': [{'filePath': 'codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodec.java', 'insertions': 9, 'deletions': 5, 'lines': 14}, {'filePath': 'codec-http2/src/test/java/io/netty/handler/codec/http2/Http2MultiplexCodecBuilderTest.java', 'insertions': 7, 'deletions': 1, 'lines': 8}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'Http2MultiplexCodec.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http2.Http2MultiplexCodec.newOutboundStream()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2StreamStateChanged(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2FrameStream)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http2.Http2MultiplexCodec.DefaultHttp2StreamChannel', 'TOT': 3, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http2.Http2MultiplexCodec.DefaultHttp2StreamChannel.Http2ChannelUnsafe.register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'Http2MultiplexCodecBuilderTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http2.Http2MultiplexCodecBuilderTest.setUp()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/7178,0.0002777777777777778,['defect'],The ChannelHandler which is used to construct Http2MultiplexCodecBuilder will also be added to out bound streams,1.0,"['io.netty.handler.codec.http2.Http2MultiplexCodec.onHttp2StreamStateChanged(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2FrameStream)', 'io.netty.handler.codec.http2.Http2MultiplexCodec.DefaultHttp2StreamChannel.Http2ChannelUnsafe.register(io.netty.channel.EventLoop,io.netty.channel.ChannelPromise)', 'io.netty.handler.codec.http2.Http2MultiplexCodec.DefaultHttp2StreamChannel', 'io.netty.handler.codec.http2.Http2MultiplexCodec.newOutboundStream()']",['870b5f5e4b4eef8ea3baf650fa9c592533b2fda2'],,['codec-http2/src/main/java/io/netty/handler/codec/http2'],9.0,5.0,14.0,1.0,2.0,4.0,7.0,1.0,4.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,netty
37657,2017-08-31 23:15:19,mosesn,"### Expected behavior
No null pointer exceptions

### Actual behavior
When an HTTP/1.1 upgrade request comes in, we call `onHttpServerUpgrade` in Http2ConnectionHandler.  This makes us create a stream, which eventually calls `new DefaultHttp2StreamChannel`, which is fine, except that it assumes that handlerAdded has already been called on Http2MultiplexCodec . . . which is always true except when we're doing a cleartext upgrade.

### Steps to reproduce

Make an HttpServerUpgradeHandler, with an Http2MultiplexCodec.  Send an h2c upgrade request.

### Minimal yet complete reproducer code (or URL to code)

Try to upgrade this to netty 4.1.15.

https://github.com/twitter/finagle/blob/develop/finagle-http2/src/main/scala/com/twitter/finagle/http2/Http2CleartextServerInitializer.scala#L74

### Netty version
4.1.15.Final",2017-09-14 15:24:49,"[{'commitHash': '14db2a076ddf78cc0f0874a419b1c61ebd680a8e', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'df7cd4bfec6e6c48dffdbc8c829523d1ca93a61e', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '16e0382555cb1d038c32e4689bdd321205426de9', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'f53d3748ce94348b1b28fcae96bf151db1ee6beb', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'd7d06068e4bd6a99fcee33b087633bb9ae0bbf6d', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '863e865d5ef13d56a3bc01d379cf68a841cf650b', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '291901cb836b8d35bb6562ae151a67b49eb719c3', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '3b40791dff2a817605d36fae8016577e8e9d5f4e', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '15611dadbbf8f8c217c03ce33da89beb54602023', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['de9e666493469d40fa9107a78f9ae421a05f9cf4'], 'nameRev': '15611dadbbf8f8c217c03ce33da89beb54602023 tags/netty-4.1.16.Final~24', 'commitMessage': 'Fix NPE when using Http2ServerUpgradeCodec with Http2FrameCodec and Http2MultiplexCodec\n\nMotiviation:\n\nAt the moment an NPE is thrown if someone tries to use the Http2ServerUpgradeCodec with Http2FrameCodec and Http2MultiplexCodec.\n\nModifications:\n\n- Ensure the handler was added to the pipeline before calling on*Upgrade(...) methods.\n- Add tests\n- Fix adding of handlers after upgrade.\n\nResult:\n\nFixes [#7173].\n', 'commitDateTime': '2017-09-14 08:23:53', 'authoredDateTime': '2017-09-07 08:22:12', 'commitGitStats': [{'filePath': 'codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java', 'insertions': 14, 'deletions': 4, 'lines': 18}, {'filePath': 'codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ServerUpgradeCodec.java', 'insertions': 32, 'deletions': 23, 'lines': 55}, {'filePath': 'codec-http2/src/test/java/io/netty/handler/codec/http2/CleartextHttp2ServerUpgradeHandlerTest.java', 'insertions': 17, 'deletions': 1, 'lines': 18}, {'filePath': 'codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionHandlerTest.java', 'insertions': 23, 'deletions': 0, 'lines': 23}, {'filePath': 'codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ServerUpgradeCodecTest.java', 'insertions': 82, 'deletions': 0, 'lines': 82}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'Http2ConnectionHandler.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http2.Http2ConnectionHandler.onHttpClientUpgrade()', 'TOT': 5, 'UPD': 1, 'INS': 1, 'MOV': 2, 'DEL': 1}, {'spoonMethodName': 'io.netty.handler.codec.http2.Http2ConnectionHandler.onHttpServerUpgrade(io.netty.handler.codec.http2.Http2Settings)', 'TOT': 5, 'UPD': 1, 'INS': 1, 'MOV': 2, 'DEL': 1}]}, {'spoonFilePath': 'Http2ServerUpgradeCodec.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http2.Http2ServerUpgradeCodec', 'TOT': 28, 'UPD': 5, 'INS': 9, 'MOV': 7, 'DEL': 7}, {'spoonMethodName': 'io.netty.handler.codec.http2.Http2ServerUpgradeCodec.upgradeTo(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest)', 'TOT': 4, 'UPD': 1, 'INS': 2, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http2.Http2ServerUpgradeCodec.decodeSettings(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf).2', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http2.Http2ServerUpgradeCodec.prepareUpgradeResponse(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders)', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 2}, {'spoonMethodName': 'io.netty.handler.codec.http2.Http2ServerUpgradeCodec.1.handlerAdded(io.netty.channel.ChannelHandlerContext)', 'TOT': 3, 'UPD': 0, 'INS': 0, 'MOV': 3, 'DEL': 0}]}, {'spoonFilePath': 'CleartextHttp2ServerUpgradeHandlerTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandlerTest.upgrade()', 'TOT': 8, 'UPD': 0, 'INS': 8, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Http2ConnectionHandlerTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http2.Http2ConnectionHandlerTest.onHttpServerUpgradeWithoutHandlerAdded()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http2.Http2ConnectionHandlerTest.onHttpClientUpgradeWithoutHandlerAdded()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Http2ServerUpgradeCodecTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http2.Http2ServerUpgradeCodecTest', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/7173,13.000277777777777,['defect'],NPE in cleartext upgrade,1.0,"['io.netty.handler.codec.http2.Http2ServerUpgradeCodec.prepareUpgradeResponse(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders)', 'io.netty.handler.codec.http2.Http2ServerUpgradeCodec.decodeSettings(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf).2', 'io.netty.handler.codec.http2.Http2ConnectionHandler.onHttpServerUpgrade(io.netty.handler.codec.http2.Http2Settings)', 'io.netty.handler.codec.http2.Http2ConnectionHandler.onHttpClientUpgrade()', 'io.netty.handler.codec.http2.Http2ServerUpgradeCodec.upgradeTo(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest)', 'io.netty.handler.codec.http2.Http2ServerUpgradeCodec', 'io.netty.handler.codec.http2.Http2ServerUpgradeCodec.1.handlerAdded(io.netty.channel.ChannelHandlerContext)']",['15611dadbbf8f8c217c03ce33da89beb54602023'],,['codec-http2/src/main/java/io/netty/handler/codec/http2'],46.0,27.0,73.0,2.0,9.0,7.0,51.0,17.0,14.0,11.0,2.0,0.0,0.0,0.0,8.0,0.0,0.0,netty
37659,2017-08-27 18:44:23,axtavt,"### Expected behavior
According to [SOCKS 5 spec](https://www.ietf.org/rfc/rfc1928.txt), dstPort = 0 is a valid value in case of UDP ASSOCIATE command:

> If the client is not in possesion of the information at the time of the UDP ASSOCIATE, the client MUST use a port number and address of all zeros.

### Actual behavior
However, constructor of DefaultSocks5CommandRequest rejects this value as invalid:

    if (dstPort <= 0 || dstPort >= 65536) {
            throw new IllegalArgumentException(""dstPort: "" + dstPort + "" (expected: 1~65535)"");
    }

### Netty version
4.1.15.Final",2017-08-29 13:03:36,"[{'commitHash': 'aedacf06a8329fab7bf30a93ed8fbed876eb381b', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '93e6d2e66506416b886092ee708e864d46d1076f', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'f5bea11ee486640f28e96d38d066a7813666e27c', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['d9d0e633dc69b9b93139d822eaa17b97ff3826ab'], 'nameRev': 'f5bea11ee486640f28e96d38d066a7813666e27c tags/netty-4.1.16.Final~40', 'commitMessage': 'DefaultSocks5CommandRequest incorrectly rejects SOCKS5 commands with dstPort=0\n\nMotivation:\n\nAccording to SOCKS 5 spec, dstPort = 0 is a valid value in case of UDP ASSOCIATE.\n\nModifications:\n\n- Allow 0 as port.\n- Add unit tests.\n\nResult:\n\nFixes [#7156].\n', 'commitDateTime': '2017-08-29 15:03:09', 'authoredDateTime': '2017-08-28 10:58:34', 'commitGitStats': [{'filePath': 'codec-socks/src/main/java/io/netty/handler/codec/socksx/v5/DefaultSocks5CommandRequest.java', 'insertions': 2, 'deletions': 2, 'lines': 4}, {'filePath': 'codec-socks/src/test/java/io/netty/handler/codec/socksx/v5/DefaultSocks5CommandRequestTest.java', 'insertions': 6, 'deletions': 1, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DefaultSocks5CommandRequest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.socksx.v5.DefaultSocks5CommandRequest', 'TOT': 4, 'UPD': 4, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DefaultSocks5CommandRequestTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.socksx.v5.DefaultSocks5CommandRequestTest.testValidPortRange()', 'TOT': 3, 'UPD': 0, 'INS': 2, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/7156,1.0002777777777778,['defect'],DefaultSocks5CommandRequest incorrectly rejects SOCKS5 commands with dstPort=0,1.0,['io.netty.handler.codec.socksx.v5.DefaultSocks5CommandRequest'],['f5bea11ee486640f28e96d38d066a7813666e27c'],,['codec-socks/src/main/java/io/netty/handler/codec/socksx/v5'],2.0,2.0,4.0,1.0,4.0,1.0,4.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,netty
37744,2017-01-26 16:14:10,isdom,"I found some PoolArena allocations value was incorrect, more specifically is:

    long numTinyAllocations();
    long numSmallAllocations();
    long numNormalAllocations();

and

    long numNormalDeallocations();

When I alloc Pooled ByteBuf & and release all these Bufs,

### Expected behavior
 
PoolArena's Metric SHOULD meet the following conditions:
```
           numTinyAllocations() == numTinyDeallocations()
     &&   numSmallAllocations() == numSmallDeallocations()
     &&   numNormalAllocations() == numNormalDeallocations()
```
### Actual behavior

BUT now result:
```
           numTinyAllocations() < numTinyDeallocations()
     &&   numSmallAllocations() < numSmallDeallocations()
     &&   numNormalAllocations() > numNormalDeallocations()
```
It seems some tiny & small allocations increase normal's counter,  I export PoolArenaMetric as MBean by [code](https://github.com/isdom/jocean-http/blob/9d8d528a2a3ee6bf2ca12f04054523dec94d3507/jocean-http/src/main/java/org/jocean/http/util/NettyStats.java) and show MBean by Web using zkoss, see below:

<img width=""905"" alt=""2017-01-25 11 23 34"" src=""https://cloud.githubusercontent.com/assets/2010691/22338996/a21ee320-e423-11e6-8575-0fee497ae401.png"">

In this case, 

`numAllocations(2404) == numDeallocations(2404)`

BUT  
```
   (numTinyDeallocations - numTinyAllocations)       //  == 17
+ (numSmallDeallocations - numSmallAllocations)       //  == 9
```
equals

` (numNormalAllocations - numNormalDeallocations)       // == 26`

### Steps to reproduce

I start test code with VM flag (disable thread local cache): 
```
-XX:MaxDirectMemorySize=96M
-Dio.netty.allocator.tinyCacheSize=0 
-Dio.netty.allocator.smallCacheSize=0 
-Dio.netty.allocator.normalCacheSize=0 
-Dio.netty.allocator.type=pooled
```
then alloc some ByteBuf and release Bufs.

### Minimal yet complete reproducer code (or URL to code)

TestCase to reproduce: https://github.com/isdom/jocean-http/blob/6bc6cfa9ae1e71395a4dd52355b1b0a8365bb530/jocean-http/src/test/java/org/jocean/netty/buffer/PooledByteBufAllocatorTestCase.java

and make sure run this test with VM flag: -XX:MaxDirectMemorySize=96M

It fail at:

```
assertEquals(metric.numTinyDeallocations(), metric.numTinyAllocations());
assertEquals(metric.numSmallDeallocations(), metric.numSmallAllocations());
assertEquals(metric.numNormalDeallocations(), metric.numNormalAllocations());
```
output : 
```
java.lang.AssertionError: expected:<1> but was:<0>
	at org.junit.Assert.fail(Assert.java:88)
```

If this is confirmed as a issue，I can open a PR to fix it.

### Netty version

netty-all-4.1.7.Final

### JVM version (e.g. `java -version`)

java version ""1.8.0_102""
Java(TM) SE Runtime Environment (build 1.8.0_102-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)

### OS version (e.g. `uname -a`)

Linux xxx 3.10.0-327.22.2.el7.x86_64 #1 SMP Thu Jun 23 17:05:11 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux
",2017-01-30 09:34:05,"[{'commitHash': 'f10f8a31318a2e408b979de6a8ed49caa615d86a', 'commitGHEventType': 'closed', 'commitUser': 'normanmaurer', 'commitParents': ['94cb389c04bd084f698345aac4cb70b02e5da086'], 'nameRev': 'f10f8a31318a2e408b979de6a8ed49caa615d86a tags/netty-4.1.8.Final~2', 'commitMessage': ""Calculate correct count for tiny/small/normal allocation\n\nMotivation:\n\nDisable ThreadLocal Cache, then allocate Pooled ByteBuf and release all these buffers, PoolArena's tiny/small/normal allocation count is incorrect.\n\nModifications:\n\n- Calculate PoolArena's tiny/small/normal allocation one time\n- Add testAllocationCounter TestCase\n\nResult:\n\nFixes #6282 .\n"", 'commitDateTime': '2017-01-30 10:32:58', 'authoredDateTime': '2017-01-27 16:28:19', 'commitGitStats': [{'filePath': 'buffer/src/main/java/io/netty/buffer/PoolArena.java', 'insertions': 20, 'deletions': 11, 'lines': 31}, {'filePath': 'buffer/src/test/java/io/netty/buffer/PoolArenaTest.java', 'insertions': 45, 'deletions': 0, 'lines': 45}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'PoolArena.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.buffer.PoolArena.allocateNormal(io.netty.buffer.PooledByteBuf,int,int)', 'TOT': 3, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 2}, {'spoonMethodName': 'io.netty.buffer.PoolArena.incTinySmallAllocation(boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.buffer.PoolArena.allocate(io.netty.buffer.PoolThreadCache,io.netty.buffer.PooledByteBuf,int)', 'TOT': 7, 'UPD': 0, 'INS': 4, 'MOV': 3, 'DEL': 0}]}, {'spoonFilePath': 'PoolArenaTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.buffer.PoolArenaTest.testAllocationCounter()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '025e656fd954d8aa93a7b025ef8d30235c5f0eca', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['bb1440759fbcd8221c772404f8269b748e667b1c'], 'nameRev': '025e656fd954d8aa93a7b025ef8d30235c5f0eca tags/netty-4.0.44.Final~2', 'commitMessage': ""Calculate correct count for tiny/small/normal allocation\n\nMotivation:\n\nDisable ThreadLocal Cache, then allocate Pooled ByteBuf and release all these buffers, PoolArena's tiny/small/normal allocation count is incorrect.\n\nModifications:\n\n- Calculate PoolArena's tiny/small/normal allocation one time\n- Add testAllocationCounter TestCase\n\nResult:\n\nFixes #6282 .\n"", 'commitDateTime': '2017-01-30 10:34:12', 'authoredDateTime': '2017-01-27 16:28:19', 'commitGitStats': [{'filePath': 'buffer/src/main/java/io/netty/buffer/PoolArena.java', 'insertions': 20, 'deletions': 11, 'lines': 31}, {'filePath': 'buffer/src/test/java/io/netty/buffer/PoolArenaTest.java', 'insertions': 45, 'deletions': 0, 'lines': 45}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'PoolArena.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.buffer.PoolArena.allocateNormal(io.netty.buffer.PooledByteBuf,int,int)', 'TOT': 3, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 2}, {'spoonMethodName': 'io.netty.buffer.PoolArena.incTinySmallAllocation(boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.buffer.PoolArena.allocate(io.netty.buffer.PoolThreadCache,io.netty.buffer.PooledByteBuf,int)', 'TOT': 7, 'UPD': 0, 'INS': 4, 'MOV': 3, 'DEL': 0}]}, {'spoonFilePath': 'PoolArenaTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.buffer.PoolArenaTest.testAllocationCounter()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/6282,3.000277777777778,['defect'],Incorrect allocations value for PoolArena (tiny / small / normal),1.0,"['io.netty.buffer.PoolArena.allocate(io.netty.buffer.PoolThreadCache,io.netty.buffer.PooledByteBuf,int)', 'io.netty.buffer.PoolArena.allocateNormal(io.netty.buffer.PooledByteBuf,int,int)', 'io.netty.buffer.PoolArena.incTinySmallAllocation(boolean)']",['f10f8a31318a2e408b979de6a8ed49caa615d86a'],,['buffer/src/main/java/io/netty/buffer'],20.0,11.0,31.0,1.0,0.0,3.0,11.0,4.0,5.0,2.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,netty
37890,2016-03-26 03:14:48,ohmygodlin,"Directly run http/websocketx/server sample in netty-example-4.0.35.Final-sources would get ""socket is closed"" error. Then i try to modify:
1. WebSocketServerInitializer.java add websocket handler：
        pipeline.addLast(new WebSocketIndexPageHandler(WEBSOCKET_PATH));
        **pipeline.addLast(new WebSocketServerProtocolHandler(WEBSOCKET_PATH));**
        pipeline.addLast(new WebSocketFrameHandler());
2. WebSocketIndexPageHandler.java add exclude websocket response, and pass request to next handler as:
      *\* if (websocketPath.equals(req.getUri()))**
        **{**
            **ctx.fireChannelRead(req.retain());**
        **}**
        // Send the index page
        *_else *_if (""/"".equals(req.getUri()) || ""/index.html"".equals(req.getUri())) {

Please verify whether the step is fine, or i miss anything, thanks!

BTW, if i want to just use websocket server function. could i just import netty-codec-http-4.0.35.Final.jar, not import netty-all-4.0.35.Final.jar?
",2016-03-30 08:31:51,"[{'commitHash': '949bfdf8c532e23c0925f08e4c0d9662857c0e3c', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['6a4a9f7493165a8a96b6dd30b0eed0e4e52f0f66'], 'nameRev': '949bfdf8c532e23c0925f08e4c0d9662857c0e3c tags/netty-4.0.36.Final~6', 'commitMessage': '[#5045] Fix websockets server example which was broken by 2e6544f\n\nMotivation:\n\nWhile backport the change from 4.1 to 4.0 I somehow missed to port one line and so broke the example.\n\nModifications:\n\nAdd needed handler which was missing due bad merge commit.\n\nResult:\n\nExample works again in 4.0\n', 'commitDateTime': '2016-03-30 10:23:32', 'authoredDateTime': '2016-03-30 10:23:32', 'commitGitStats': [{'filePath': 'example/src/main/java/io/netty/example/http/websocketx/server/WebSocketServerInitializer.java', 'insertions': 2, 'deletions': 0, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'WebSocketServerInitializer.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.example.http.websocketx.server.WebSocketServerInitializer.initChannel(io.netty.channel.socket.SocketChannel)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/5045,4.000277777777778,['defect'],websocket server sample does not work for netty-example-4.0.35.Final-sources,1.0,['io.netty.example.http.websocketx.server.WebSocketServerInitializer.initChannel(io.netty.channel.socket.SocketChannel)'],['949bfdf8c532e23c0925f08e4c0d9662857c0e3c'],,['example/src/main/java/io/netty/example/http/websocketx/server'],2.0,0.0,2.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,netty
37980,2015-09-23 20:52:27,willisblackburn,"Example:

```
public void test() {
    HttpHeaders headers = new DefaultHttpHeaders();
    headers.add(""foo"", ""bar"");
    headers.add(headers);
    // This will never end
    headers.forEach(entry -> {});
}
```
",2015-09-30 07:00:25,"[{'commitHash': '9345dfd2074547ebec719494540aef0b2a1fea00', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'd4079d1403711ac9b85903da9a8c6310dee99e6f', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['f96777312d299483b2b547c489dbfcc24f7f080f'], 'nameRev': 'd4079d1403711ac9b85903da9a8c6310dee99e6f tags/netty-4.0.32.Final~3', 'commitMessage': '[#4265] Not allow to add/set DefaultHttpHeaders to itself.\n\nMotivation:\n\nWe should prevent to add/set DefaultHttpHeaders to itself to prevent unexpected side-effects.\n\nModifications:\n\nThrow IllegalArgumentException if user tries to pass the same instance to set/add.\n\nResult:\n\nNo surprising side-effects.\n', 'commitDateTime': '2015-09-30 08:45:44', 'authoredDateTime': '2015-09-24 08:33:51', 'commitGitStats': [{'filePath': 'codec-http/src/main/java/io/netty/handler/codec/http/DefaultHttpHeaders.java', 'insertions': 6, 'deletions': 0, 'lines': 6}, {'filePath': 'codec-http/src/test/java/io/netty/handler/codec/http/HttpHeadersTest.java', 'insertions': 12, 'deletions': 0, 'lines': 12}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DefaultHttpHeaders.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.DefaultHttpHeaders.add(io.netty.handler.codec.http.HttpHeaders)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.DefaultHttpHeaders.set(io.netty.handler.codec.http.HttpHeaders)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'HttpHeadersTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.HttpHeadersTest.testAddSelf()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.HttpHeadersTest.testSetSelf()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'ca44436ce6c5bf7a7b58c1842f82a4f6aa3ae2d6', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['2adf6e5358eed27144f9582fdc652a5bf0eb49ce'], 'nameRev': 'ca44436ce6c5bf7a7b58c1842f82a4f6aa3ae2d6 tags/netty-4.1.0.Beta7~12', 'commitMessage': '[#4265] Not allow to add/set DefaultHttpHeaders to itself.\n\nMotivation:\n\nWe should prevent to add/set DefaultHttpHeaders to itself to prevent unexpected side-effects.\n\nModifications:\n\nThrow IllegalArgumentException if user tries to pass the same instance to set/add.\n\nResult:\n\nNo surprising side-effects.\n', 'commitDateTime': '2015-09-30 08:57:53', 'authoredDateTime': '2015-09-24 08:33:51', 'commitGitStats': [{'filePath': 'codec-http/src/test/java/io/netty/handler/codec/http/HttpHeadersTest.java', 'insertions': 12, 'deletions': 0, 'lines': 12}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/DefaultHeaders.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'codec/src/test/java/io/netty/handler/codec/DefaultHeadersTest.java', 'insertions': 12, 'deletions': 0, 'lines': 12}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpHeadersTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.HttpHeadersTest.testAddSelf()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.HttpHeadersTest.testSetSelf()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DefaultHeaders.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.DefaultHeaders.set(io.netty.handler.codec.Headers)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}]}, {'spoonFilePath': 'DefaultHeadersTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.DefaultHeadersTest.testAddSelf()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.DefaultHeadersTest.testSetSelf()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'b6c6e1570a1a6a6e7cd12f6bfd5a0a061c953fbe', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['acf6693b1909ab5a04978bc03610934de3a0563b'], 'nameRev': 'b6c6e1570a1a6a6e7cd12f6bfd5a0a061c953fbe remotes/origin/master_deprecated~133', 'commitMessage': '[#4265] Not allow to add/set DefaultHttpHeaders to itself.\n\nMotivation:\n\nWe should prevent to add/set DefaultHttpHeaders to itself to prevent unexpected side-effects.\n\nModifications:\n\nThrow IllegalArgumentException if user tries to pass the same instance to set/add.\n\nResult:\n\nNo surprising side-effects.\n', 'commitDateTime': '2015-09-30 08:58:37', 'authoredDateTime': '2015-09-24 08:33:51', 'commitGitStats': [{'filePath': 'codec-http/src/test/java/io/netty/handler/codec/http/HttpHeadersTest.java', 'insertions': 12, 'deletions': 0, 'lines': 12}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/DefaultHeaders.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'codec/src/test/java/io/netty/handler/codec/DefaultHeadersTest.java', 'insertions': 12, 'deletions': 0, 'lines': 12}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpHeadersTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.HttpHeadersTest.testAddSelf()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.HttpHeadersTest.testSetSelf()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DefaultHeaders.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.DefaultHeaders.set(io.netty.handler.codec.Headers)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}]}, {'spoonFilePath': 'DefaultHeadersTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.DefaultHeadersTest.testAddSelf()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.DefaultHeadersTest.testSetSelf()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/4265,6.000277777777778,['defect'],Adding DefaultHttpHeaders to itself creates infinite loop,1.0,"['io.netty.handler.codec.http.DefaultHttpHeaders.add(io.netty.handler.codec.http.HttpHeaders)', 'io.netty.handler.codec.http.DefaultHttpHeaders.set(io.netty.handler.codec.http.HttpHeaders)']",['d4079d1403711ac9b85903da9a8c6310dee99e6f'],,['codec-http/src/main/java/io/netty/handler/codec/http'],6.0,0.0,6.0,1.0,0.0,2.0,2.0,0.0,2.0,0.0,1.0,0.0,0.0,0.0,3.0,0.0,0.0,netty
37983,2015-09-21 17:41:31,silvaran,"A change between 4.1.0 beta5 and 4.1.0 beta6 changed the way keys are compared in DefaultHeaders:

https://github.com/netty/netty/blame/4f204009dedac6104f67188348b1cfc27e358109/codec/src/main/java/io/netty/handler/codec/DefaultHeaders.java#L113

ByteString.equals() always fails when given a String (and vice versa).  beta5 used keyComparator.compare() which would accommodate a mixture of Strings and ByteString (AsciiString).

Ultimately, I can no longer do [StompFrame] frame.headers().get( StompHeaders.ACCEPT_VERSION ) as it will always return null.
",2015-09-23 23:47:32,"[{'commitHash': '7adc1f9eb424b1a52187e25f6671af9f58474fca', 'commitGHEventType': 'referenced', 'commitUser': 'Scottmitch', 'commitParents': ['24c94070801d480d2b719de54181b3d60abf0444'], 'nameRev': '7adc1f9eb424b1a52187e25f6671af9f58474fca tags/netty-4.1.0.Beta7~29', 'commitMessage': 'STOMP Headers Name Comparator\n\nMotivation:\nThe HashingStrategy for DefaultStompHeaders was using the java .equals() method which would fail to compare String, AsciiString, and other CharSequence objects as equal.\n\nModification:\n- Use AsciiString.CASE_SENSITIVE_HASHER for DefaultStompHeaders\n\nResult:\nDefaultStompHeaders work with all CharSequence objects.\nFixes https://github.com/netty/netty/issues/4247\n', 'commitDateTime': '2015-09-23 16:47:09', 'authoredDateTime': '2015-09-21 16:20:28', 'commitGitStats': [{'filePath': 'codec-stomp/src/main/java/io/netty/handler/codec/stomp/DefaultStompHeaders.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'codec-stomp/src/test/java/io/netty/handler/codec/stomp/StompHeadersTest.java', 'insertions': 35, 'deletions': 0, 'lines': 35}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/DefaultHeaders.java', 'insertions': 6, 'deletions': 1, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DefaultStompHeaders.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.stomp.DefaultStompHeaders', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'StompHeadersTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.stomp.StompHeadersTest', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DefaultHeaders.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.DefaultHeaders', 'TOT': 9, 'UPD': 0, 'INS': 5, 'MOV': 4, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '1c14e5bd4c7b265e2c7be5f57ce62f71a43ca352', 'commitGHEventType': 'closed', 'commitUser': 'Scottmitch', 'commitParents': ['55d805e19935da161a3889d48d6abfc2b9308622'], 'nameRev': '1c14e5bd4c7b265e2c7be5f57ce62f71a43ca352 remotes/origin/master_deprecated~150', 'commitMessage': 'STOMP Headers Name Comparator\n\nMotivation:\nThe HashingStrategy for DefaultStompHeaders was using the java .equals() method which would fail to compare String, AsciiString, and other CharSequence objects as equal.\n\nModification:\n- Use AsciiString.CASE_SENSITIVE_HASHER for DefaultStompHeaders\n\nResult:\nDefaultStompHeaders work with all CharSequence objects.\nFixes https://github.com/netty/netty/issues/4247\n', 'commitDateTime': '2015-09-23 16:47:22', 'authoredDateTime': '2015-09-21 16:20:28', 'commitGitStats': [{'filePath': 'codec-stomp/src/main/java/io/netty/handler/codec/stomp/DefaultStompHeaders.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'codec-stomp/src/test/java/io/netty/handler/codec/stomp/StompHeadersTest.java', 'insertions': 35, 'deletions': 0, 'lines': 35}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/DefaultHeaders.java', 'insertions': 6, 'deletions': 1, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DefaultStompHeaders.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.stomp.DefaultStompHeaders', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'StompHeadersTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.stomp.StompHeadersTest', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DefaultHeaders.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.DefaultHeaders', 'TOT': 9, 'UPD': 0, 'INS': 5, 'MOV': 4, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/4247,2.000277777777778,['defect'],StompHeaders constants can no longer be used to fetch headers from DefaultHeaders,1.0,"['io.netty.handler.codec.DefaultHeaders', 'io.netty.handler.codec.stomp.DefaultStompHeaders']",['7adc1f9eb424b1a52187e25f6671af9f58474fca'],,"['codec-stomp/src/main/java/io/netty/handler/codec/stomp', 'codec/src/main/java/io/netty/handler/codec']",7.0,2.0,9.0,2.0,0.0,2.0,10.0,4.0,6.0,0.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,netty
37997,2015-08-29 00:04:50,ninja-,"a small (visual) regression when doing nio vs epoll: 

When _proxy_ is running on epoll, and the connection to backend is disconnected, the backend server shows a message:
Player lost connection: Internal Exception: java.io.IOException: Error while read(...): Connection reset by peer

instead of ""Player lost connection: disconnected""

Any idea of what could be the cause?
(I'll update when I find the piece of code in epoll that could cause this regression)

random guess: there should be a shutdown() syscall before close().
where to look for comparsion: java nio socketchannel.close()
",2015-09-25 18:06:31,"[{'commitHash': '5fce95c8d516f032ba9abba4fc991afc54a337dd', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '161e65f20bb6c64e1e67bfcbeded670efac6d7eb', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '6e4ec334cda041f27c79829e3bea9f2d25b17288', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '3e4cc9d23f2f18a649cbed6c95456494023540bc', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['3de876860116729db8aca23ed80b96714ae7512a'], 'nameRev': '3e4cc9d23f2f18a649cbed6c95456494023540bc tags/netty-4.0.32.Final~6', 'commitMessage': '[#4170] Shutdown socket before close fd when using epoll transport\n\nMotivation:\n\nWe should call shutdown(...) on the socket before closing the filedescriptor to ensure it is closed gracefully.\n\nModifications:\n\nCall shutdown(...) before close.\n\nResult:\n\nSockets are gracefully shutdown when using native transport.\n', 'commitDateTime': '2015-09-25 20:05:01', 'authoredDateTime': '2015-09-22 17:00:16', 'commitGitStats': [{'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java', 'insertions': 15, 'deletions': 3, 'lines': 18}, {'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java', 'insertions': 5, 'deletions': 0, 'lines': 5}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AbstractEpollChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollChannel.doClose()', 'TOT': 5, 'UPD': 0, 'INS': 3, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollChannel.shutdown(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'AbstractEpollStreamChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollStreamChannel.shutdown(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '747533408dbf3fa04fe0753e0f20cf80b8ac66ed', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['956a757d37c52d550aebdbfaf3d68863baa2a765'], 'nameRev': '747533408dbf3fa04fe0753e0f20cf80b8ac66ed tags/netty-4.1.0.Beta7~19', 'commitMessage': '[#4170] Shutdown socket before close fd when using epoll transport\n\nMotivation:\n\nWe should call shutdown(...) on the socket before closing the filedescriptor to ensure it is closed gracefully.\n\nModifications:\n\nCall shutdown(...) before close.\n\nResult:\n\nSockets are gracefully shutdown when using native transport.\n', 'commitDateTime': '2015-09-25 20:05:14', 'authoredDateTime': '2015-09-22 17:00:16', 'commitGitStats': [{'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java', 'insertions': 15, 'deletions': 3, 'lines': 18}, {'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java', 'insertions': 5, 'deletions': 0, 'lines': 5}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AbstractEpollChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollChannel.doClose()', 'TOT': 5, 'UPD': 0, 'INS': 3, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollChannel.shutdown(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'AbstractEpollStreamChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollStreamChannel.shutdown(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '50086ca9027a886250ec3c868d434204aca3c07b', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['f746f0c57ac6e1465b0f42f197a3b52aa521e81d'], 'nameRev': '50086ca9027a886250ec3c868d434204aca3c07b remotes/origin/master_deprecated~140', 'commitMessage': '[#4170] Shutdown socket before close fd when using epoll transport\n\nMotivation:\n\nWe should call shutdown(...) on the socket before closing the filedescriptor to ensure it is closed gracefully.\n\nModifications:\n\nCall shutdown(...) before close.\n\nResult:\n\nSockets are gracefully shutdown when using native transport.\n', 'commitDateTime': '2015-09-25 20:05:28', 'authoredDateTime': '2015-09-22 17:00:16', 'commitGitStats': [{'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java', 'insertions': 15, 'deletions': 3, 'lines': 18}, {'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java', 'insertions': 5, 'deletions': 0, 'lines': 5}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AbstractEpollChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollChannel.doClose()', 'TOT': 5, 'UPD': 0, 'INS': 3, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollChannel.shutdown(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'AbstractEpollStreamChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollStreamChannel.shutdown(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '8dbf5d02e53a72c42467b8dc0a5e1482d5f49af4', 'commitGHEventType': 'referenced', 'commitUser': 'Scottmitch', 'commitParents': ['01835fdf18d2e40b1ac13682995a119edc05d590'], 'nameRev': '8dbf5d02e53a72c42467b8dc0a5e1482d5f49af4 tags/netty-4.1.0.CR4~15', 'commitMessage': ""EPOLL SO_LINGER=0 sends FIN+RST\n\nMotivation:\nIf SO_LINGER is set to 0 the EPOLL transport will send a FIN followed by a RST. This is not consistent with the behavior of the NIO transport. This variation in behavior can cause protocol violations in streaming protocols (e.g. HTTP) where a FIN may be interpreted as a valid end to a data stream, but RST may be treated as the data is corrupted and should be discarded.\n\nhttps://github.com/netty/netty/issues/4170 Claims the behavior of NIO always issues a shutdown when close occurs. I could not find any evidence of this in Netty's NIO transport nor in the JDK's SocketChannel.close() implementation.\n\nModifications:\n- AbstractEpollChannel should be consistent with the NIO transport and not force a shutdown on every close\n- FileDescriptor to keep state in a consistent manner with the JDK and not allow a shutdown after a close\n- Unit tests for NIO and EPOLL to ensure consistent behavior\n\nResult:\nEPOLL is capable of sending just a RST to terminate a connection.\n"", 'commitDateTime': '2016-03-16 22:35:04', 'authoredDateTime': '2016-03-09 18:16:29', 'commitGitStats': [{'filePath': 'testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketRstTest.java', 'insertions': 144, 'deletions': 0, 'lines': 144}, {'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java', 'insertions': 2, 'deletions': 12, 'lines': 14}, {'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/unix/FileDescriptor.java', 'insertions': 59, 'deletions': 13, 'lines': 72}, {'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/unix/Socket.java', 'insertions': 47, 'deletions': 46, 'lines': 93}, {'filePath': 'transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketRstTest.java', 'insertions': 49, 'deletions': 0, 'lines': 49}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'SocketRstTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.testsuite.transport.socket.SocketRstTest', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'AbstractEpollChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollChannel.doClose()', 'TOT': 6, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 4}]}, {'spoonFilePath': 'FileDescriptor.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.unix.FileDescriptor', 'TOT': 13, 'UPD': 7, 'INS': 6, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.close()', 'TOT': 9, 'UPD': 1, 'INS': 2, 'MOV': 5, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.isOpen()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.casState(int,int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.isClosed(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.isInputShutdown(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.isOutputShutdown(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.shouldAttemptShutdown(int,boolean,boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.calculateShutdownState(int,boolean,boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Socket.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.unix.Socket', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 2}, {'spoonMethodName': 'io.netty.channel.unix.Socket.shutdown()', 'TOT': 5, 'UPD': 0, 'INS': 2, 'MOV': 1, 'DEL': 2}, {'spoonMethodName': 'io.netty.channel.unix.Socket.shutdown0(boolean,boolean)', 'TOT': 6, 'UPD': 0, 'INS': 0, 'MOV': 4, 'DEL': 2}, {'spoonMethodName': 'io.netty.channel.unix.Socket.shutdown(boolean,boolean)', 'TOT': 9, 'UPD': 0, 'INS': 2, 'MOV': 6, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isInputShutdown()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isOutputShutdown()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.sendTo(java.nio.ByteBuffer,int,int,java.net.InetAddress,int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.sendToAddress(long,int,int,java.net.InetAddress,int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.sendToAddresses(long,int,java.net.InetAddress,int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.recvFrom(java.nio.ByteBuffer,int,int)', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.recvFromAddress(long,int,int)', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.connect(java.net.SocketAddress)', 'TOT': 4, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 2}, {'spoonMethodName': 'io.netty.channel.unix.Socket.finishConnect()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.bind(java.net.SocketAddress)', 'TOT': 4, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 2}, {'spoonMethodName': 'io.netty.channel.unix.Socket.listen(int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.accept(byte[])', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.remoteAddress()', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.localAddress()', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.getReceiveBufferSize()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.getSendBufferSize()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isKeepAlive()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isTcpNoDelay()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isTcpCork()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.getSoLinger()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.getTcpDeferAccept()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isTcpQuickAck()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.getSoError()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setKeepAlive(boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setReceiveBufferSize(int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setSendBufferSize(int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setTcpNoDelay(boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setTcpCork(boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setSoLinger(int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setTcpDeferAccept(int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setTcpQuickAck(boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.toString()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isShutdown()', 'TOT': 4, 'UPD': 0, 'INS': 3, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'EpollSocketRstTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.epoll.EpollSocketRstTest', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '9b9b38bf8961e02924712516cca00c6d01c9b9c3', 'commitGHEventType': 'referenced', 'commitUser': 'Scottmitch', 'commitParents': ['4784f2761a1e18c24bbf6bdf3b901873aa598c68'], 'nameRev': '9b9b38bf8961e02924712516cca00c6d01c9b9c3 tags/netty-4.0.35.Final~8', 'commitMessage': ""EPOLL SO_LINGER=0 sends FIN+RST\n\nMotivation:\nIf SO_LINGER is set to 0 the EPOLL transport will send a FIN followed by a RST. This is not consistent with the behavior of the NIO transport. This variation in behavior can cause protocol violations in streaming protocols (e.g. HTTP) where a FIN may be interpreted as a valid end to a data stream, but RST may be treated as the data is corrupted and should be discarded.\n\nhttps://github.com/netty/netty/issues/4170 Claims the behavior of NIO always issues a shutdown when close occurs. I could not find any evidence of this in Netty's NIO transport nor in the JDK's SocketChannel.close() implementation.\n\nModifications:\n- AbstractEpollChannel should be consistent with the NIO transport and not force a shutdown on every close\n- FileDescriptor to keep state in a consistent manner with the JDK and not allow a shutdown after a close\n- Unit tests for NIO and EPOLL to ensure consistent behavior\n\nResult:\nEPOLL is capable of sending just a RST to terminate a connection.\n"", 'commitDateTime': '2016-03-16 22:35:31', 'authoredDateTime': '2016-03-09 18:16:29', 'commitGitStats': [{'filePath': 'testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketRstTest.java', 'insertions': 144, 'deletions': 0, 'lines': 144}, {'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java', 'insertions': 2, 'deletions': 12, 'lines': 14}, {'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/unix/FileDescriptor.java', 'insertions': 59, 'deletions': 13, 'lines': 72}, {'filePath': 'transport-native-epoll/src/main/java/io/netty/channel/unix/Socket.java', 'insertions': 47, 'deletions': 46, 'lines': 93}, {'filePath': 'transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketRstTest.java', 'insertions': 49, 'deletions': 0, 'lines': 49}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'SocketRstTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.testsuite.transport.socket.SocketRstTest', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'AbstractEpollChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.epoll.AbstractEpollChannel.doClose()', 'TOT': 6, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 4}]}, {'spoonFilePath': 'FileDescriptor.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.unix.FileDescriptor', 'TOT': 13, 'UPD': 7, 'INS': 6, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.close()', 'TOT': 9, 'UPD': 1, 'INS': 2, 'MOV': 5, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.isOpen()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.casState(int,int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.isClosed(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.isInputShutdown(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.isOutputShutdown(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.shouldAttemptShutdown(int,boolean,boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.unix.FileDescriptor.calculateShutdownState(int,boolean,boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Socket.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.unix.Socket', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 2}, {'spoonMethodName': 'io.netty.channel.unix.Socket.shutdown()', 'TOT': 5, 'UPD': 0, 'INS': 2, 'MOV': 1, 'DEL': 2}, {'spoonMethodName': 'io.netty.channel.unix.Socket.shutdown0(boolean,boolean)', 'TOT': 6, 'UPD': 0, 'INS': 0, 'MOV': 4, 'DEL': 2}, {'spoonMethodName': 'io.netty.channel.unix.Socket.shutdown(boolean,boolean)', 'TOT': 9, 'UPD': 0, 'INS': 2, 'MOV': 6, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isInputShutdown()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isOutputShutdown()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.sendTo(java.nio.ByteBuffer,int,int,java.net.InetAddress,int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.sendToAddress(long,int,int,java.net.InetAddress,int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.sendToAddresses(long,int,java.net.InetAddress,int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.recvFrom(java.nio.ByteBuffer,int,int)', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.recvFromAddress(long,int,int)', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.connect(java.net.SocketAddress)', 'TOT': 4, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 2}, {'spoonMethodName': 'io.netty.channel.unix.Socket.finishConnect()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.bind(java.net.SocketAddress)', 'TOT': 4, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 2}, {'spoonMethodName': 'io.netty.channel.unix.Socket.listen(int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.accept(byte[])', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.remoteAddress()', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.localAddress()', 'TOT': 5, 'UPD': 0, 'INS': 1, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.getReceiveBufferSize()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.getSendBufferSize()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isKeepAlive()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isTcpNoDelay()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isTcpCork()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.getSoLinger()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.getTcpDeferAccept()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isTcpQuickAck()', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.getSoError()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setKeepAlive(boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setReceiveBufferSize(int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setSendBufferSize(int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setTcpNoDelay(boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setTcpCork(boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setSoLinger(int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setTcpDeferAccept(int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.setTcpQuickAck(boolean)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.toString()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.netty.channel.unix.Socket.isShutdown()', 'TOT': 4, 'UPD': 0, 'INS': 3, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'EpollSocketRstTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.epoll.EpollSocketRstTest', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/4170,27.00027777777778,['defect'],epoll force closes connection,2.0,"['io.netty.channel.epoll.AbstractEpollChannel.doClose()', 'io.netty.channel.unix.Socket.recvFrom(java.nio.ByteBuffer,int,int)', 'io.netty.channel.unix.Socket.sendTo(java.nio.ByteBuffer,int,int,java.net.InetAddress,int)', 'io.netty.channel.unix.Socket.recvFromAddress(long,int,int)', 'io.netty.channel.unix.Socket.shutdown(boolean,boolean)', 'io.netty.channel.unix.Socket.remoteAddress()', 'io.netty.channel.unix.FileDescriptor.isInputShutdown(int)', 'io.netty.channel.epoll.AbstractEpollChannel.shutdown(int)', 'io.netty.channel.unix.FileDescriptor.close()', 'io.netty.channel.unix.Socket.setTcpDeferAccept(int)', 'io.netty.channel.unix.Socket.listen(int)', 'io.netty.channel.unix.Socket.getSoLinger()', 'io.netty.channel.unix.Socket.getSendBufferSize()', 'io.netty.channel.unix.Socket.isKeepAlive()', 'io.netty.channel.unix.Socket', 'io.netty.channel.unix.Socket.getTcpDeferAccept()', 'io.netty.channel.unix.Socket.isInputShutdown()', 'io.netty.channel.unix.Socket.setTcpCork(boolean)', 'io.netty.channel.unix.Socket.bind(java.net.SocketAddress)', 'io.netty.channel.unix.FileDescriptor.calculateShutdownState(int,boolean,boolean)', 'io.netty.channel.unix.Socket.shutdown()', 'io.netty.channel.unix.FileDescriptor.casState(int,int)', 'io.netty.channel.unix.Socket.isTcpCork()', 'io.netty.channel.unix.Socket.finishConnect()', 'io.netty.channel.unix.Socket.isShutdown()', 'io.netty.channel.epoll.AbstractEpollStreamChannel.shutdown(int)', 'io.netty.channel.unix.Socket.shutdown0(boolean,boolean)', 'io.netty.channel.unix.FileDescriptor', 'io.netty.channel.unix.Socket.toString()', 'io.netty.channel.unix.FileDescriptor.isOpen()', 'io.netty.channel.unix.Socket.sendToAddresses(long,int,java.net.InetAddress,int)', 'io.netty.channel.unix.Socket.connect(java.net.SocketAddress)', 'io.netty.channel.unix.Socket.isTcpNoDelay()', 'io.netty.channel.unix.Socket.isOutputShutdown()', 'io.netty.channel.unix.Socket.setTcpNoDelay(boolean)', 'io.netty.channel.unix.FileDescriptor.isOutputShutdown(int)', 'io.netty.channel.unix.Socket.setReceiveBufferSize(int)', 'io.netty.channel.unix.Socket.setSendBufferSize(int)', 'io.netty.channel.unix.Socket.setKeepAlive(boolean)', 'io.netty.channel.unix.FileDescriptor.isClosed(int)', 'io.netty.channel.unix.Socket.accept(byte[])', 'io.netty.channel.unix.Socket.setTcpQuickAck(boolean)', 'io.netty.channel.unix.FileDescriptor.shouldAttemptShutdown(int,boolean,boolean)', 'io.netty.channel.unix.Socket.isTcpQuickAck()', 'io.netty.channel.unix.Socket.sendToAddress(long,int,int,java.net.InetAddress,int)', 'io.netty.channel.unix.Socket.getSoError()', 'io.netty.channel.unix.Socket.getReceiveBufferSize()', 'io.netty.channel.unix.Socket.setSoLinger(int)', 'io.netty.channel.unix.Socket.localAddress()']","['3e4cc9d23f2f18a649cbed6c95456494023540bc', '8dbf5d02e53a72c42467b8dc0a5e1482d5f49af4']",,"['transport-native-epoll/src/main/java/io/netty/channel/epoll', 'transport-native-epoll/src/main/java/io/netty/channel/unix']",128.0,74.0,202.0,4.0,8.0,49.0,160.0,42.0,62.0,48.0,4.0,0.0,0.0,0.0,6.0,0.0,0.0,netty
38252,2014-06-06 08:39:32,andreypanasenko,"In case when multipart entity ends with odd number of '0x0D' bytes, Netty HttpPostRequestDecoder append one more '0x0D' byte.

Multipart POST decodes as follow:

<pre>
HttpDataFactory factory = new DefaultHttpDataFactory(DefaultHttpDataFactory.MINSIZE);
HttpPostRequestDecoder decoder = new HttpPostRequestDecoder(factory, request);
InterfaceHttpData data = decoder.getBodyHttpData(HTTP_TEST_ATTRIBUTE);
Attribute attribute = (Attribute) data;
requestData = attribute.get();
</pre>


Problem seems in _HttpPostMultipartRequestDecoder.java_
There is how packet looks in wireshark:
![nettycrcrbugwiresharksnapshot](https://cloud.githubusercontent.com/assets/7781410/3198180/aa80af20-ed55-11e3-87b9-ab0558a38e48.png)

and _attribute.get()_ return 17 bytes with 0x0D additional in end.
",2014-06-08 09:52:44,"[{'commitHash': 'c16de8fcbcbdb5c88fbb2a645469d984b96b7513', 'commitGHEventType': 'referenced', 'commitUser': 'fredericBregier', 'commitParents': ['bcb180b08dcc62254e335daf055bb96d9cb1da83'], 'nameRev': 'c16de8fcbcbdb5c88fbb2a645469d984b96b7513 tags/netty-5.0.0.Alpha2~619', 'commitMessage': '[#2544] Correctly parse Multipart-mixed POST HTTP request in case of entity ends with odd number of 0x0D\n\nMotivation:\nWhen an attribute is ending with an odd number of CR (0x0D), the decoder\nadd an extra CR in the decoded attribute and should not.\n\nModifications:\nEach time a CR is detected, the next byte was tested to be LF or not. If\nnot, in a number of places, the CR byte was lost while it should not be.\nWhen a CR is detected, if the next byte is not LF, the CR byte should be\nsaved as the position point to the next byte (not LF). When a CR is\ndetected, if there is not yet other available bytes, the position is\nreset to the position of CR (since a LF could follow).\n\nA new Junit test case is added, using DECODER and variable number of CR\nin the final attribute (testMultipartCodecWithCRasEndOfAttribute).\n\nResult:\nThe attribute is now correctly decoded with the right number of CR\nending bytes.\n', 'commitDateTime': '2014-06-08 11:22:51', 'authoredDateTime': '2014-06-07 12:13:32', 'commitGitStats': [{'filePath': 'codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java', 'insertions': 41, 'deletions': 1, 'lines': 42}, {'filePath': 'codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java', 'insertions': 47, 'deletions': 0, 'lines': 47}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpPostMultipartRequestDecoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readLineStandard()', 'TOT': 3, 'UPD': 1, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readLine()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.loadFieldMultipartStandard(java.lang.String)', 'TOT': 9, 'UPD': 0, 'INS': 4, 'MOV': 5, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readDelimiter(java.lang.String)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.loadFieldMultipart(java.lang.String)', 'TOT': 6, 'UPD': 0, 'INS': 2, 'MOV': 4, 'DEL': 0}]}, {'spoonFilePath': 'HttpPostRequestDecoderTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoderTest.testMultipartCodecWithCRasEndOfAttribute()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'f402350d76e764ee0667b1d02563abe53df7eb6a', 'commitGHEventType': 'referenced', 'commitUser': 'fredericBregier', 'commitParents': ['61dbc353ca17af026d346b6fa83788a3ddcf8317'], 'nameRev': 'f402350d76e764ee0667b1d02563abe53df7eb6a tags/netty-4.1.0.Beta1~93', 'commitMessage': '[#2544] Correctly parse Multipart-mixed POST HTTP request in case of entity ends with odd number of 0x0D\n\nMotivation:\nWhen an attribute is ending with an odd number of CR (0x0D), the decoder\nadd an extra CR in the decoded attribute and should not.\n\nModifications:\nEach time a CR is detected, the next byte was tested to be LF or not. If\nnot, in a number of places, the CR byte was lost while it should not be.\nWhen a CR is detected, if the next byte is not LF, the CR byte should be\nsaved as the position point to the next byte (not LF). When a CR is\ndetected, if there is not yet other available bytes, the position is\nreset to the position of CR (since a LF could follow).\n\nA new Junit test case is added, using DECODER and variable number of CR\nin the final attribute (testMultipartCodecWithCRasEndOfAttribute).\n\nResult:\nThe attribute is now correctly decoded with the right number of CR\nending bytes.\n', 'commitDateTime': '2014-06-08 11:24:18', 'authoredDateTime': '2014-06-07 12:13:32', 'commitGitStats': [{'filePath': 'codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java', 'insertions': 41, 'deletions': 1, 'lines': 42}, {'filePath': 'codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java', 'insertions': 47, 'deletions': 0, 'lines': 47}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpPostMultipartRequestDecoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readLineStandard()', 'TOT': 3, 'UPD': 1, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readLine()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.loadFieldMultipartStandard(java.lang.String)', 'TOT': 9, 'UPD': 0, 'INS': 4, 'MOV': 5, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readDelimiter(java.lang.String)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.loadFieldMultipart(java.lang.String)', 'TOT': 6, 'UPD': 0, 'INS': 2, 'MOV': 4, 'DEL': 0}]}, {'spoonFilePath': 'HttpPostRequestDecoderTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoderTest.testMultipartCodecWithCRasEndOfAttribute()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'a0a8f1032b55d4ba5487a22e55a08638cefbdef9', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['4ad3984c8b725ef59856d174d09d1209d65933fc'], 'nameRev': 'a0a8f1032b55d4ba5487a22e55a08638cefbdef9 tags/netty-4.0.20.Final~6', 'commitMessage': ""[#2544] Correctly parse Multipart-mixed POST HTTP request in case of entity ends with odd number of 0x0D. Port of @fredericBregier 's work.\n\nMotivation:\nWhen an attribute is ending with an odd number of CR (0x0D), the decoder\nadd an extra CR in the decoded attribute and should not.\n\nModifications:\nEach time a CR is detected, the next byte was tested to be LF or not. If\nnot, in a number of places, the CR byte was lost while it should not be.\nWhen a CR is detected, if the next byte is not LF, the CR byte should be\nsaved as the position point to the next byte (not LF). When a CR is\ndetected, if there is not yet other available bytes, the position is\nreset to the position of CR (since a LF could follow).\n\nA new Junit test case is added, using DECODER and variable number of CR\nin the final attribute (testMultipartCodecWithCRasEndOfAttribute).\n\nResult:\nThe attribute is now correctly decoded with the right number of CR\nending bytes.\n"", 'commitDateTime': '2014-06-08 11:50:58', 'authoredDateTime': '2014-06-08 11:50:58', 'commitGitStats': [{'filePath': 'codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoder.java', 'insertions': 41, 'deletions': 1, 'lines': 42}, {'filePath': 'codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java', 'insertions': 47, 'deletions': 0, 'lines': 47}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpPostRequestDecoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.readLineStandard()', 'TOT': 3, 'UPD': 1, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.readLine()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.loadFieldMultipartStandard(java.lang.String)', 'TOT': 9, 'UPD': 0, 'INS': 4, 'MOV': 5, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.readDelimiter(java.lang.String)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.loadFieldMultipart(java.lang.String)', 'TOT': 6, 'UPD': 0, 'INS': 2, 'MOV': 4, 'DEL': 0}]}, {'spoonFilePath': 'HttpPostRequestDecoderTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoderTest.testMultipartCodecWithCRasEndOfAttribute()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '129c17aaa4ac5c611519ef480c35a12e8282b807', 'commitGHEventType': 'referenced', 'commitUser': 'fredericBregier', 'commitParents': ['dde0df99556990ba6a034bfa278ccb90dbe5f245'], 'nameRev': '129c17aaa4ac5c611519ef480c35a12e8282b807 tags/netty-3.9.2.Final~3', 'commitMessage': ""[#2544] Correctly parse Multipart-mixed POST HTTP request in case of entity ends with odd number of 0x0D. Port of @fredericBregier 's work.\n\nMotivation:\nWhen an attribute is ending with an odd number of CR (0x0D), the decoder\nadd an extra CR in the decoded attribute and should not.\n\nModifications:\nEach time a CR is detected, the next byte was tested to be LF or not. If\nnot, in a number of places, the CR byte was lost while it should not be.\nWhen a CR is detected, if the next byte is not LF, the CR byte should be\nsaved as the position point to the next byte (not LF). When a CR is\ndetected, if there is not yet other available bytes, the position is\nreset to the position of CR (since a LF could follow).\n\nA new Junit test case is added, using DECODER and variable number of CR\nin the final attribute (testMultipartCodecWithCRasEndOfAttribute).\n\nResult:\nThe attribute is now correctly decoded with the right number of CR\nending bytes.\n"", 'commitDateTime': '2014-06-09 10:18:38', 'authoredDateTime': '2014-06-08 17:51:51', 'commitGitStats': [{'filePath': 'src/main/java/org/jboss/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java', 'insertions': 41, 'deletions': 1, 'lines': 42}, {'filePath': 'src/test/java/org/jboss/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java', 'insertions': 44, 'deletions': 0, 'lines': 44}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpPostMultipartRequestDecoder.java', 'spoonMethods': [{'spoonMethodName': 'org.jboss.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readLineStandard()', 'TOT': 3, 'UPD': 1, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.jboss.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readLine()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.jboss.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.loadFieldMultipartStandard(java.lang.String)', 'TOT': 9, 'UPD': 0, 'INS': 4, 'MOV': 5, 'DEL': 0}, {'spoonMethodName': 'org.jboss.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readDelimiter(java.lang.String)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.jboss.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.loadFieldMultipart(java.lang.String)', 'TOT': 6, 'UPD': 0, 'INS': 2, 'MOV': 4, 'DEL': 0}]}, {'spoonFilePath': 'HttpPostRequestDecoderTest.java', 'spoonMethods': [{'spoonMethodName': 'org.jboss.netty.handler.codec.http.multipart.HttpPostRequestDecoderTest.testMultipartCodecWithCRasEndOfAttribute()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/2544,2.000277777777778,['defect'],Netty has error when parses Multipart-mixed POST HTTP request in case of entity ends with odd number of 0x0D ,2.0,"['io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readLine()', 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.readLineStandard()', 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readDelimiter(java.lang.String)', 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.loadFieldMultipart(java.lang.String)', 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.loadFieldMultipartStandard(java.lang.String)', 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.loadFieldMultipart(java.lang.String)', 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.loadFieldMultipartStandard(java.lang.String)', 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.readLine()', 'io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.readDelimiter(java.lang.String)', 'io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.readLineStandard()']","['c16de8fcbcbdb5c88fbb2a645469d984b96b7513', 'a0a8f1032b55d4ba5487a22e55a08638cefbdef9']",,['codec-http/src/main/java/io/netty/handler/codec/http/multipart'],82.0,2.0,84.0,2.0,2.0,10.0,42.0,18.0,22.0,0.0,2.0,0.0,0.0,0.0,2.0,0.0,0.0,netty
38287,2014-02-20 11:30:54,JatinderSingh,"private constructor

private AppendableCharSequence(char[] chars) {
        this.chars = chars;
}

does not update position as a result of which subsequence method gives unusable AppendableCharSequence.
",2014-03-03 19:04:00,"[{'commitHash': '6e1cee654f53912406f4b7d67799127ee6811a88', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['6513859a794a6e487642a9ffa1adbc21c6b9ab9f'], 'nameRev': '6e1cee654f53912406f4b7d67799127ee6811a88 tags/netty-4.0.18.Final~47', 'commitMessage': '[#2252] Fix bug where AppendableCharSequence private constructor does not set correct position\n', 'commitDateTime': '2014-03-03 19:58:22', 'authoredDateTime': '2014-03-03 17:04:59', 'commitGitStats': [{'filePath': 'common/src/main/java/io/netty/util/internal/AppendableCharSequence.java', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'common/src/test/java/io/netty/util/internal/AppendableCharSequenceTest.java', 'insertions': 7, 'deletions': 0, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AppendableCharSequence.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.util.internal.AppendableCharSequence', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'AppendableCharSequenceTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.util.internal.AppendableCharSequenceTest.testSubSequence()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '6b4cd6f7d143f9b4810d0388b4e3aa5fbf3b6ebf', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['5bdfbbc7d1fc9ac1133fb93df24b68277fdd4eca'], 'nameRev': '6b4cd6f7d143f9b4810d0388b4e3aa5fbf3b6ebf tags/netty-5.0.0.Alpha2~836', 'commitMessage': '[#2252] Fix bug where AppendableCharSequence private constructor does not set correct position\n', 'commitDateTime': '2014-03-03 20:03:14', 'authoredDateTime': '2014-03-03 17:04:59', 'commitGitStats': [{'filePath': 'common/src/main/java/io/netty/util/internal/AppendableCharSequence.java', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'common/src/test/java/io/netty/util/internal/AppendableCharSequenceTest.java', 'insertions': 7, 'deletions': 0, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AppendableCharSequence.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.util.internal.AppendableCharSequence', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'AppendableCharSequenceTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.util.internal.AppendableCharSequenceTest.testSubSequence()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '8afc2cd3787b72ea141b137f25a1aab4128cd8ff', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['918dd54a721458f46888ef8beb2c8f9b2911dee0'], 'nameRev': '8afc2cd3787b72ea141b137f25a1aab4128cd8ff tags/netty-4.1.0.Beta1~285', 'commitMessage': '[#2252] Fix bug where AppendableCharSequence private constructor does not set correct position\n', 'commitDateTime': '2014-03-03 20:03:24', 'authoredDateTime': '2014-03-03 17:04:59', 'commitGitStats': [{'filePath': 'common/src/main/java/io/netty/util/internal/AppendableCharSequence.java', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'common/src/test/java/io/netty/util/internal/AppendableCharSequenceTest.java', 'insertions': 7, 'deletions': 0, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AppendableCharSequence.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.util.internal.AppendableCharSequence', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'AppendableCharSequenceTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.util.internal.AppendableCharSequenceTest.testSubSequence()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/2252,11.000277777777777,"['defect', 'help wanted']",AppendableCharSequence private constructor does not set correct position,1.0,['io.netty.util.internal.AppendableCharSequence'],['6e1cee654f53912406f4b7d67799127ee6811a88'],,['common/src/main/java/io/netty/util/internal'],1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,netty
38331,2013-11-29 02:19:06,craigday,"If the message is great than 8k the message is not flushed.
",2013-11-29 02:44:58,"[{'commitHash': '8b495bb6e14becb5bda5e8b80257d5d186e18181', 'commitGHEventType': 'referenced', 'commitUser': 'trustin', 'commitParents': ['4ea39aa9df93003f51a304adadc4adffa296d5be'], 'nameRev': '8b495bb6e14becb5bda5e8b80257d5d186e18181 tags/netty-5.0.0.Alpha1~80', 'commitMessage': 'Fix bugs in ZLIB codec where they produce malformed stream or their streams are not flushed on time\n\n- Fixes #2014\n- Add the tests that mix JDK ZLIB codec and JZlib codecs\n- Fix a bug where JdkZlibEncoder does not encode the GZIP header when nothing was written to te channel\n- Fix a bug where the encoders do not consider the overhead of the wrapper format when calculating the estimated compressed output size.\n- Fix a bug where the decoders do not discard the received data after the compressed stream is finished\n', 'commitDateTime': '2013-11-29 18:08:34', 'authoredDateTime': '2013-11-29 18:08:34', 'commitGitStats': [{'filePath': 'codec/src/main/java/io/netty/handler/codec/compression/JZlibDecoder.java', 'insertions': 7, 'deletions': 3, 'lines': 10}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/compression/JZlibEncoder.java', 'insertions': 6, 'deletions': 1, 'lines': 7}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/compression/JdkZlibDecoder.java', 'insertions': 10, 'deletions': 4, 'lines': 14}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java', 'insertions': 39, 'deletions': 14, 'lines': 53}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/compression/ZlibUtil.java', 'insertions': 19, 'deletions': 0, 'lines': 19}, {'filePath': 'codec/src/test/java/io/netty/handler/codec/compression/ZlibCrossTest1.java', 'insertions': 29, 'deletions': 0, 'lines': 29}, {'filePath': 'codec/src/test/java/io/netty/handler/codec/compression/ZlibCrossTest2.java', 'insertions': 49, 'deletions': 0, 'lines': 49}, {'filePath': 'codec/src/test/java/io/netty/handler/codec/compression/ZlibTest.java', 'insertions': 45, 'deletions': 9, 'lines': 54}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'JZlibDecoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.JZlibDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'JZlibEncoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.JZlibEncoder', 'TOT': 3, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.JZlibEncoder.encode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'JdkZlibDecoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibDecoder.readGZIPFooter(io.netty.buffer.ByteBuf)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}, {'spoonFilePath': 'JdkZlibEncoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibEncoder', 'TOT': 10, 'UPD': 4, 'INS': 2, 'MOV': 2, 'DEL': 2}, {'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibEncoder.finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)', 'TOT': 14, 'UPD': 2, 'INS': 3, 'MOV': 7, 'DEL': 2}, {'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibEncoder.encode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)', 'TOT': 24, 'UPD': 0, 'INS': 1, 'MOV': 22, 'DEL': 1}, {'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibEncoder.deflate(io.netty.buffer.ByteBuf)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ZlibUtil.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.ZlibUtil.wrapperOverhead(io.netty.handler.codec.compression.ZlibWrapper)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ZlibCrossTest1.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.ZlibCrossTest1', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ZlibCrossTest2.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.ZlibCrossTest2', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ZlibTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testCompress0(io.netty.handler.codec.compression.ZlibWrapper,io.netty.handler.codec.compression.ZlibWrapper,byte[])', 'TOT': 4, 'UPD': 1, 'INS': 1, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest', 'TOT': 10, 'UPD': 4, 'INS': 1, 'MOV': 4, 'DEL': 1}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testCompressNone(io.netty.handler.codec.compression.ZlibWrapper,io.netty.handler.codec.compression.ZlibWrapper)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testZLIB()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testNONE()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testGZIP()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testZLIB_OR_NONE()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testZLIB_OR_NONE2()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testZLIB_OR_NONE3()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '3f7b674db8c9c2fc562b95327e089bb3603c9009', 'commitGHEventType': 'referenced', 'commitUser': 'trustin', 'commitParents': ['6cf2748dbb49485b7f0851054dd0ad1776f0c5bd'], 'nameRev': '3f7b674db8c9c2fc562b95327e089bb3603c9009 tags/netty-4.0.14.Beta1~2', 'commitMessage': 'Fix bugs in ZLIB codec where they produce malformed stream or their streams are not flushed on time\n\n- Fixes #2014\n- Add the tests that mix JDK ZLIB codec and JZlib codecs\n- Fix a bug where JdkZlibEncoder does not encode the GZIP header when nothing was written to te channel\n- Fix a bug where the encoders do not consider the overhead of the wrapper format when calculating the estimated compressed output size.\n- Fix a bug where the decoders do not discard the received data after the compressed stream is finished\n', 'commitDateTime': '2013-11-29 18:09:04', 'authoredDateTime': '2013-11-29 18:08:34', 'commitGitStats': [{'filePath': 'codec/src/main/java/io/netty/handler/codec/compression/JZlibDecoder.java', 'insertions': 7, 'deletions': 3, 'lines': 10}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/compression/JZlibEncoder.java', 'insertions': 6, 'deletions': 1, 'lines': 7}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/compression/JdkZlibDecoder.java', 'insertions': 10, 'deletions': 4, 'lines': 14}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java', 'insertions': 39, 'deletions': 14, 'lines': 53}, {'filePath': 'codec/src/main/java/io/netty/handler/codec/compression/ZlibUtil.java', 'insertions': 19, 'deletions': 0, 'lines': 19}, {'filePath': 'codec/src/test/java/io/netty/handler/codec/compression/ZlibCrossTest1.java', 'insertions': 29, 'deletions': 0, 'lines': 29}, {'filePath': 'codec/src/test/java/io/netty/handler/codec/compression/ZlibCrossTest2.java', 'insertions': 49, 'deletions': 0, 'lines': 49}, {'filePath': 'codec/src/test/java/io/netty/handler/codec/compression/ZlibTest.java', 'insertions': 45, 'deletions': 9, 'lines': 54}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'JZlibDecoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.JZlibDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'JZlibEncoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.JZlibEncoder', 'TOT': 3, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.JZlibEncoder.encode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'JdkZlibDecoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibDecoder.readGZIPFooter(io.netty.buffer.ByteBuf)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}, {'spoonFilePath': 'JdkZlibEncoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibEncoder', 'TOT': 10, 'UPD': 4, 'INS': 2, 'MOV': 2, 'DEL': 2}, {'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibEncoder.finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)', 'TOT': 14, 'UPD': 2, 'INS': 3, 'MOV': 7, 'DEL': 2}, {'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibEncoder.encode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)', 'TOT': 24, 'UPD': 0, 'INS': 1, 'MOV': 22, 'DEL': 1}, {'spoonMethodName': 'io.netty.handler.codec.compression.JdkZlibEncoder.deflate(io.netty.buffer.ByteBuf)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ZlibUtil.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.ZlibUtil.wrapperOverhead(io.netty.handler.codec.compression.ZlibWrapper)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ZlibCrossTest1.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.ZlibCrossTest1', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ZlibCrossTest2.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.ZlibCrossTest2', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ZlibTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testCompress0(io.netty.handler.codec.compression.ZlibWrapper,io.netty.handler.codec.compression.ZlibWrapper,byte[])', 'TOT': 4, 'UPD': 1, 'INS': 1, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest', 'TOT': 10, 'UPD': 4, 'INS': 1, 'MOV': 4, 'DEL': 1}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testCompressNone(io.netty.handler.codec.compression.ZlibWrapper,io.netty.handler.codec.compression.ZlibWrapper)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testZLIB()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testNONE()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testGZIP()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testZLIB_OR_NONE()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testZLIB_OR_NONE2()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.codec.compression.ZlibTest.testZLIB_OR_NONE3()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/2014,0.0002777777777777778,['defect'],JDKZlibEncoder hangs (fails to flush) on large messages,1.0,"['io.netty.handler.codec.compression.JdkZlibEncoder', 'io.netty.handler.codec.compression.JZlibDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)', 'io.netty.handler.codec.compression.ZlibUtil.wrapperOverhead(io.netty.handler.codec.compression.ZlibWrapper)', 'io.netty.handler.codec.compression.JZlibEncoder.encode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)', 'io.netty.handler.codec.compression.JdkZlibEncoder.finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)', 'io.netty.handler.codec.compression.JdkZlibDecoder.decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)', 'io.netty.handler.codec.compression.JdkZlibEncoder.deflate(io.netty.buffer.ByteBuf)', 'io.netty.handler.codec.compression.JZlibEncoder', 'io.netty.handler.codec.compression.JdkZlibDecoder.readGZIPFooter(io.netty.buffer.ByteBuf)', 'io.netty.handler.codec.compression.JdkZlibEncoder.encode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)']",['8b495bb6e14becb5bda5e8b80257d5d186e18181'],,['codec/src/main/java/io/netty/handler/codec/compression'],81.0,22.0,103.0,5.0,7.0,10.0,61.0,34.0,14.0,6.0,5.0,0.0,0.0,0.0,1.0,0.0,0.0,netty
38345,2013-10-08 04:38:33,normanmaurer,"ChunkedWriteHandler should not call fireExceptionCaught(..) but just fail the ChannelPromise
",2013-10-08 08:03:04,"[{'commitHash': '23998048b1a3d0842739bd3b9d4fa37ea3c7c5a4', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['cd2eaebd923f2da029a54d08df3ac4d9a1dc6bae'], 'nameRev': '23998048b1a3d0842739bd3b9d4fa37ea3c7c5a4 tags/netty-5.0.0.Alpha1~184', 'commitMessage': '[#1898] No call fireExceptionCaught but just fail the write promise\n', 'commitDateTime': '2013-10-08 06:39:21', 'authoredDateTime': '2013-10-08 06:39:21', 'commitGitStats': [{'filePath': 'handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java', 'insertions': 0, 'deletions': 11, 'lines': 11}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ChunkedWriteHandler.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).3', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).4', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).5', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).5.operationComplete(io.netty.channel.ChannelFuture)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'beda02fad051e95f030f7b548bf10bb9b13595ac', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['1c73be21fca57474c8fb1db61e32c311ebd4beff'], 'nameRev': 'beda02fad051e95f030f7b548bf10bb9b13595ac tags/netty-4.0.11.Final~19', 'commitMessage': '[#1898] No call fireExceptionCaught but just fail the write promise\n', 'commitDateTime': '2013-10-08 10:02:50', 'authoredDateTime': '2013-10-08 06:39:21', 'commitGitStats': [{'filePath': 'handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java', 'insertions': 0, 'deletions': 11, 'lines': 11}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ChunkedWriteHandler.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).3', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).4', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).5', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).5.operationComplete(io.netty.channel.ChannelFuture)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/1898,0.0002777777777777778,['defect'],ChunkedWriteHandler should not call fireExceptionCaught,1.0,"['io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext)', 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).5.operationComplete(io.netty.channel.ChannelFuture)', 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).5', 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).4', 'io.netty.handler.stream.ChunkedWriteHandler.doFlush(io.netty.channel.ChannelHandlerContext).3']",['23998048b1a3d0842739bd3b9d4fa37ea3c7c5a4'],,['handler/src/main/java/io/netty/handler/stream'],0.0,11.0,11.0,1.0,4.0,5.0,5.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,netty
38356,2013-09-11 12:49:47,normanmaurer,"It's completely legal to use DatagramChannel.write(new DatagramPacket) even if its not bound. At the moment this fails with NotYetConnectedException in doFlush(..). 

This is because NioDatagramChannel.isActive() returns false if its not bound. The same is true for OioDatagramChannel. I think isActive should return true as long as it was not closed yet.
",2013-09-24 09:57:22,"[{'commitHash': 'f4f04a08c26092050ff8d0687ebc7f28bee718f4', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['7d9388a3cc90b322eb1e9ea048a16e31beaad387'], 'nameRev': 'f4f04a08c26092050ff8d0687ebc7f28bee718f4 tags/netty-4.0.10.Final~26', 'commitMessage': 'Make DatagramChannel impls .isActive() return true when the underlying Channel is open. This also fixes [#1830]\n', 'commitDateTime': '2013-09-11 20:37:21', 'authoredDateTime': '2013-09-11 20:37:21', 'commitGitStats': [{'filePath': 'transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'transport/src/main/java/io/netty/channel/socket/oio/OioDatagramChannel.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'NioDatagramChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.nio.NioDatagramChannel.isActive()', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 1}]}, {'spoonFilePath': 'OioDatagramChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.oio.OioDatagramChannel.isActive()', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '50106f3d4192a6ee4c9ca45f0dbadc5a9af42de8', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['98633e0aee46d8f03214bf26782e300ff7bc386c'], 'nameRev': '50106f3d4192a6ee4c9ca45f0dbadc5a9af42de8 tags/netty-5.0.0.Alpha1~224', 'commitMessage': 'Make DatagramChannel impls .isActive() return true when the underlying Channel is open. This also fixes [#1830]\n', 'commitDateTime': '2013-09-11 20:38:04', 'authoredDateTime': '2013-09-11 20:37:21', 'commitGitStats': [{'filePath': 'transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'transport/src/main/java/io/netty/channel/socket/oio/OioDatagramChannel.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'NioDatagramChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.nio.NioDatagramChannel.isActive()', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 1}]}, {'spoonFilePath': 'OioDatagramChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.oio.OioDatagramChannel.isActive()', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '357677d8fac857aae4e4b4b92d79dd37be81bb26', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['f4f04a08c26092050ff8d0687ebc7f28bee718f4'], 'nameRev': '357677d8fac857aae4e4b4b92d79dd37be81bb26 tags/netty-4.0.10.Final~25', 'commitMessage': '[#1830] Add testcase for write to not bound DatagramChannel impls and revert change in OIO as it breaks things as the udnerlying socket lazy binds\n', 'commitDateTime': '2013-09-12 09:27:43', 'authoredDateTime': '2013-09-12 09:27:43', 'commitGitStats': [{'filePath': 'testsuite/src/test/java/io/netty/testsuite/transport/socket/DatagramUnicastTest.java', 'insertions': 33, 'deletions': 0, 'lines': 33}, {'filePath': 'transport/src/main/java/io/netty/channel/socket/oio/OioDatagramChannel.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DatagramUnicastTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSendWithoutBind()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSendWithoutBind(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.Bootstrap)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'OioDatagramChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.oio.OioDatagramChannel.isActive()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '87a6a68059f27b3118d56f76f0d98621f4a618be', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['50106f3d4192a6ee4c9ca45f0dbadc5a9af42de8'], 'nameRev': '87a6a68059f27b3118d56f76f0d98621f4a618be tags/netty-5.0.0.Alpha1~223', 'commitMessage': '[#1830] Add testcase for write to not bound DatagramChannel impls and revert change in OIO as it breaks things as the udnerlying socket lazy binds\n', 'commitDateTime': '2013-09-12 09:29:40', 'authoredDateTime': '2013-09-12 09:27:43', 'commitGitStats': [{'filePath': 'testsuite/src/test/java/io/netty/testsuite/transport/socket/DatagramUnicastTest.java', 'insertions': 33, 'deletions': 0, 'lines': 33}, {'filePath': 'transport/src/main/java/io/netty/channel/socket/oio/OioDatagramChannel.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DatagramUnicastTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSendWithoutBind()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSendWithoutBind(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.Bootstrap)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'OioDatagramChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.oio.OioDatagramChannel.isActive()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'ae904a1f56d80cb3f4ad160006c05319e73d173a', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['29d34c672c1cd64c153add03a5340574fdcb7cfe'], 'nameRev': 'ae904a1f56d80cb3f4ad160006c05319e73d173a tags/netty-4.0.10.Final~13', 'commitMessage': ""Introduce a new ChannelOption called DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION. Related to [#1830]\n\nThis ChannelOption allows to tell the DatagramChannel implementation to be active as soon as they are registrated to their EventLoop. This can be used to make it possible to write to a not bound DatagramChannel.\nThe ChannelOption is marked as @deprecated as I'm looking for a better solution in master which breaks default behaviour with 4.0 branch.\n"", 'commitDateTime': '2013-09-24 11:46:49', 'authoredDateTime': '2013-09-24 11:42:58', 'commitGitStats': [{'filePath': 'testsuite/src/test/java/io/netty/testsuite/transport/socket/DatagramUnicastTest.java', 'insertions': 3, 'deletions': 1, 'lines': 4}, {'filePath': 'transport/src/main/java/io/netty/channel/ChannelOption.java', 'insertions': 3, 'deletions': 0, 'lines': 3}, {'filePath': 'transport/src/main/java/io/netty/channel/socket/DefaultDatagramChannelConfig.java', 'insertions': 13, 'deletions': 2, 'lines': 15}, {'filePath': 'transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java', 'insertions': 4, 'deletions': 1, 'lines': 5}, {'filePath': 'transport/src/main/java/io/netty/channel/socket/oio/OioDatagramChannel.java', 'insertions': 3, 'deletions': 1, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DatagramUnicastTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSendWithoutBind()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSendWithoutBind(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.Bootstrap)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ChannelOption.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.ChannelOption', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DefaultDatagramChannelConfig.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.DefaultDatagramChannelConfig', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.socket.DefaultDatagramChannelConfig.setActiveOnOpen(boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.socket.DefaultDatagramChannelConfig.getOption(io.netty.channel.ChannelOption)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.socket.DefaultDatagramChannelConfig.getOptions()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.socket.DefaultDatagramChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)', 'TOT': 6, 'UPD': 0, 'INS': 3, 'MOV': 3, 'DEL': 0}]}, {'spoonFilePath': 'NioDatagramChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.nio.NioDatagramChannel.isActive()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'OioDatagramChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.oio.OioDatagramChannel.isActive()', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'cd5f9a22122e3daaac01124908f2baf582679393', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['5aa2b7e9f7fc3165bd846beb6be385f4cae73e3d'], 'nameRev': 'cd5f9a22122e3daaac01124908f2baf582679393 tags/netty-5.0.0.Alpha1~210', 'commitMessage': ""Introduce a new ChannelOption called DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION. Related to [#1830]\n\nThis ChannelOption allows to tell the DatagramChannel implementation to be active as soon as they are registrated to their EventLoop. This can be used to make it possible to write to a not bound DatagramChannel.\nThe ChannelOption is marked as @deprecated as I'm looking for a better solution in master which breaks default behaviour with 4.0 branch.\n"", 'commitDateTime': '2013-09-24 11:51:54', 'authoredDateTime': '2013-09-24 11:42:58', 'commitGitStats': [{'filePath': 'testsuite/src/test/java/io/netty/testsuite/transport/socket/DatagramUnicastTest.java', 'insertions': 3, 'deletions': 1, 'lines': 4}, {'filePath': 'transport/src/main/java/io/netty/channel/ChannelOption.java', 'insertions': 3, 'deletions': 0, 'lines': 3}, {'filePath': 'transport/src/main/java/io/netty/channel/socket/DefaultDatagramChannelConfig.java', 'insertions': 13, 'deletions': 2, 'lines': 15}, {'filePath': 'transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java', 'insertions': 4, 'deletions': 1, 'lines': 5}, {'filePath': 'transport/src/main/java/io/netty/channel/socket/oio/OioDatagramChannel.java', 'insertions': 3, 'deletions': 1, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DatagramUnicastTest.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSendWithoutBind()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.testsuite.transport.socket.DatagramUnicastTest.testSimpleSendWithoutBind(io.netty.bootstrap.Bootstrap,io.netty.bootstrap.Bootstrap)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ChannelOption.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.ChannelOption', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DefaultDatagramChannelConfig.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.DefaultDatagramChannelConfig', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.socket.DefaultDatagramChannelConfig.setActiveOnOpen(boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.socket.DefaultDatagramChannelConfig.getOption(io.netty.channel.ChannelOption)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.socket.DefaultDatagramChannelConfig.getOptions()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.socket.DefaultDatagramChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)', 'TOT': 6, 'UPD': 0, 'INS': 3, 'MOV': 3, 'DEL': 0}]}, {'spoonFilePath': 'NioDatagramChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.nio.NioDatagramChannel.isActive()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'OioDatagramChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.socket.oio.OioDatagramChannel.isActive()', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/1830,12.000277777777777,['defect'],Using DatagramChannel.write(...) without bind the channel fails.,3.0,"['io.netty.channel.socket.oio.OioDatagramChannel.isActive()', 'io.netty.channel.socket.nio.NioDatagramChannel.isActive()', 'io.netty.channel.socket.DefaultDatagramChannelConfig.setActiveOnOpen(boolean)', 'io.netty.channel.socket.DefaultDatagramChannelConfig.getOptions()', 'io.netty.channel.socket.DefaultDatagramChannelConfig.getOption(io.netty.channel.ChannelOption)', 'io.netty.channel.socket.DefaultDatagramChannelConfig', 'io.netty.channel.socket.DefaultDatagramChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)', 'io.netty.channel.ChannelOption']","['f4f04a08c26092050ff8d0687ebc7f28bee718f4', '357677d8fac857aae4e4b4b92d79dd37be81bb26', 'ae904a1f56d80cb3f4ad160006c05319e73d173a']",,"['transport/src/main/java/io/netty/channel/socket/oio', 'transport/src/main/java/io/netty/channel/socket/nio', 'transport/src/main/java/io/netty/channel/socket', 'transport/src/main/java/io/netty/channel']",26.0,7.0,33.0,4.0,0.0,8.0,23.0,9.0,11.0,3.0,4.0,0.0,0.0,0.0,3.0,0.0,0.0,netty
38482,2013-05-24 04:04:32,trustin,"From an e-mail:

> Netty + RXTX works well on windows 7, but while we porting it to Linux(tested on both Digi Embedded Linux and Ubuntu 12), an important problem has meet.
> 
> Because RxtxChannel is using oiochannel framework, which has only one thread for a channel, and rxtx in linux is doing blocking read(readArray() from RXTX won't return unless there is data input). This will unable RXTXChannel from executing any task else - most significantly, can't write data to channel.
> 
> We consider this problem as a bug from RXTX(as its behavior is inconsistent cross platforms), and triggered by netty. We didn't find a proper workaround with current framework. Maybe currently this problem described above can be documented as known limitation to somewhere?

OioByteChannel should call `InputStream.read()` only when `InputStream.available()` returns a non-zero value.  It's probably that the `InputStream` implementation of rxtx is not correct.
",2013-06-10 16:56:50,"[{'commitHash': 'b1b1a906f066fd5bf4508928a5c9a7574276ac71', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['bf5960e9eb08396b7fdf17aad963f5e0c4dd1557'], 'nameRev': 'b1b1a906f066fd5bf4508928a5c9a7574276ac71 tags/netty-4.0.0.CR4~43', 'commitMessage': '[#1390] Make sure RxtxChannel does not block forever when reading\n', 'commitDateTime': '2013-06-10 18:56:33', 'authoredDateTime': '2013-06-10 18:56:33', 'commitGitStats': [{'filePath': 'transport-rxtx/src/main/java/io/netty/channel/rxtx/DefaultRxtxChannelConfig.java', 'insertions': 20, 'deletions': 0, 'lines': 20}, {'filePath': 'transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelConfig.java', 'insertions': 10, 'deletions': 0, 'lines': 10}, {'filePath': 'transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannelOption.java', 'insertions': 3, 'deletions': 0, 'lines': 3}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DefaultRxtxChannelConfig.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.rxtx.DefaultRxtxChannelConfig', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.rxtx.DefaultRxtxChannelConfig.setReadTimeout(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.rxtx.DefaultRxtxChannelConfig.getReadTimeout()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.rxtx.DefaultRxtxChannelConfig.getOption(io.netty.channel.ChannelOption)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.rxtx.DefaultRxtxChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)', 'TOT': 6, 'UPD': 0, 'INS': 3, 'MOV': 3, 'DEL': 0}]}, {'spoonFilePath': 'RxtxChannelConfig.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.rxtx.setReadTimeout(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'io.netty.channel.rxtx.getReadTimeout()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RxtxChannelOption.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.rxtx.RxtxChannelOption', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'cc4198971e08cc28c662589e90ed1a10a5be9ab4', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['8c68c5a3ae4d3d907528b64ec4b3daa5512d4be6'], 'nameRev': 'cc4198971e08cc28c662589e90ed1a10a5be9ab4 tags/netty-4.1.0.Beta1~297', 'commitMessage': 'Apply receive timeout to commPort when using RxtxChannel. Part of [#1390]\n', 'commitDateTime': '2014-02-23 16:31:34', 'authoredDateTime': '2014-02-22 13:04:11', 'commitGitStats': [{'filePath': 'transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RxtxChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.rxtx.RxtxChannel.doConnect(java.net.SocketAddress,java.net.SocketAddress)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'd21197e0fca45851de3a2bd9bbdbdec2e5233554', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['c538fd5098342b2d3e4278d6340e6eb0b91800e7'], 'nameRev': 'd21197e0fca45851de3a2bd9bbdbdec2e5233554 tags/netty-4.0.17.Final~2', 'commitMessage': 'Apply receive timeout to commPort when using RxtxChannel. Part of [#1390]\n', 'commitDateTime': '2014-02-23 16:34:17', 'authoredDateTime': '2014-02-22 13:04:11', 'commitGitStats': [{'filePath': 'transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RxtxChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.rxtx.RxtxChannel.doConnect(java.net.SocketAddress,java.net.SocketAddress)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '75bb6d075cc77bad9c0ef4d1ce743796004e5ac7', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['01cd5929da8172c845330b9a94843cef5981b385'], 'nameRev': '75bb6d075cc77bad9c0ef4d1ce743796004e5ac7 tags/netty-5.0.0.Alpha2~851', 'commitMessage': 'Apply receive timeout to commPort when using RxtxChannel. Part of [#1390]\n', 'commitDateTime': '2014-02-23 16:35:35', 'authoredDateTime': '2014-02-22 13:04:11', 'commitGitStats': [{'filePath': 'transport-rxtx/src/main/java/io/netty/channel/rxtx/RxtxChannel.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RxtxChannel.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.channel.rxtx.RxtxChannel.doConnect(java.net.SocketAddress,java.net.SocketAddress)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/1390,17.00027777777778,['defect'],RxtxChannel blocks forever when reading.,2.0,"['io.netty.channel.rxtx.DefaultRxtxChannelConfig.getOption(io.netty.channel.ChannelOption)', 'io.netty.channel.rxtx.DefaultRxtxChannelConfig.getReadTimeout()', 'io.netty.channel.rxtx.DefaultRxtxChannelConfig.setOption(io.netty.channel.ChannelOption,java.lang.Object)', 'io.netty.channel.rxtx.DefaultRxtxChannelConfig', 'io.netty.channel.rxtx.DefaultRxtxChannelConfig.setReadTimeout(int)', 'io.netty.channel.rxtx.RxtxChannelOption', 'io.netty.channel.rxtx.getReadTimeout()', 'io.netty.channel.rxtx.RxtxChannel.doConnect(java.net.SocketAddress,java.net.SocketAddress)', 'io.netty.channel.rxtx.setReadTimeout(int)']","['b1b1a906f066fd5bf4508928a5c9a7574276ac71', 'cc4198971e08cc28c662589e90ed1a10a5be9ab4']",,['transport-rxtx/src/main/java/io/netty/channel/rxtx'],34.0,1.0,35.0,4.0,0.0,9.0,14.0,3.0,11.0,0.0,4.0,0.0,0.0,0.0,2.0,0.0,0.0,netty
38566,2013-03-08 20:17:44,dajac,"SSLHandler doesn't handle SSLEngineResult.Status.BUFFER_OVERFLOW when it unwrap the buffer with the SSLEngine so it ends up in an infinite loop when buffer is larger than the default size used. I've noticed this behavior from time to time in our production system when it's use the Facebook API. Unfortunately, I'm not able to reproduce it locally.

BUFFER_OVERFLOW is issued here: https://github.com/netty/netty/blob/netty-3.6.3.Final/src/main/java/org/jboss/netty/handler/ssl/SslHandler.java#L1216

Let me know if I can help to fix it or if you need more input from me.
",2013-03-27 11:30:06,"[{'commitHash': 'def55f53583583eea6f6951fe3777594a08758ff', 'commitGHEventType': 'referenced', 'commitUser': 'trustin', 'commitParents': ['067a0a8a78603050c8a454594e205ecd754b37ad'], 'nameRev': 'def55f53583583eea6f6951fe3777594a08758ff tags/netty-3.6.4.Final~19', 'commitMessage': 'Fix an infinite loop in SslHandler due to mysterious BUFFER_OVERFLOW state\n\n- Fixes #1134\n', 'commitDateTime': '2013-03-14 18:12:12', 'authoredDateTime': '2013-03-14 18:12:12', 'commitGitStats': [{'filePath': 'src/main/java/org/jboss/netty/handler/ssl/SslHandler.java', 'insertions': 3, 'deletions': 0, 'lines': 3}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'SslHandler.java', 'spoonMethods': [{'spoonMethodName': 'org.jboss.netty.handler.ssl.SslHandler.unwrap(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer,int,int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/1134,18.00027777777778,['defect'],[3.6.3] Infinite loop in SSLHandler,1.0,"['org.jboss.netty.handler.ssl.SslHandler.unwrap(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer,int,int)']",['def55f53583583eea6f6951fe3777594a08758ff'],,['src/main/java/org/jboss/netty/handler/ssl'],3.0,0.0,3.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,netty
38647,2012-11-26 05:42:22,coltnz,"As per spec  http://tools.ietf.org/html/rfc2616#section-14.11 

The default (identity) encoding; the use of no transformation whatsoever. This content-coding is used only in the Accept- Encoding header, and SHOULD NOT be used in the Content-Encoding header.

Offending code is I think in 4.0.0.Alpha7
HttpContentDecoder//getTargetContentEncoding

I need to look further at subclass behaviour though.
",2013-01-02 15:17:19,"[{'commitHash': '218afba1f25de7883a5e9edd3f48f081a7b36e30', 'commitGHEventType': 'closed', 'commitUser': 'trustin', 'commitParents': ['7d80182e512ab01d7348ef0ca71c85073d837a0a'], 'nameRev': '218afba1f25de7883a5e9edd3f48f081a7b36e30 tags/netty-4.0.0.Beta1~309', 'commitMessage': ""Do not set 'Content-Encoding' if the target encoding is 'identity'\n\n- Fixes #769\n"", 'commitDateTime': '2013-01-01 15:13:35', 'authoredDateTime': '2013-01-01 15:13:35', 'commitGitStats': [{'filePath': 'codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecoder.java', 'insertions': 8, 'deletions': 3, 'lines': 11}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpContentDecoder.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.HttpContentDecoder.decode(io.netty.channel.ChannelHandlerContext,java.lang.Object)', 'TOT': 6, 'UPD': 0, 'INS': 2, 'MOV': 3, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'a2b13e4a61fd023ca91c1df09ab43d6b445d1350', 'commitGHEventType': 'referenced', 'commitUser': 'trustin', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'b1e287e9799824bf452125ad93631a7f42be67d4', 'commitGHEventType': 'referenced', 'commitUser': 'trustin', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': 'd183c1b24adcf16fe3fa7dba3958e9b3f5e5bab6', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['725a54d07a8dbb47d3f18a180a6c3eed45b9cbf5'], 'nameRev': 'd183c1b24adcf16fe3fa7dba3958e9b3f5e5bab6 tags/netty-3.6.1.Final~1', 'commitMessage': ""[#769] Do not set 'Content-Encoding' if the target encoding is 'identity'\n"", 'commitDateTime': '2013-01-02 16:16:49', 'authoredDateTime': '2013-01-02 16:16:49', 'commitGitStats': [{'filePath': 'src/main/java/org/jboss/netty/handler/codec/http/HttpContentDecoder.java', 'insertions': 8, 'deletions': 3, 'lines': 11}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpContentDecoder.java', 'spoonMethods': [{'spoonMethodName': 'org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)', 'TOT': 6, 'UPD': 0, 'INS': 2, 'MOV': 3, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/769,37.000277777777775,['defect'],"ContentEncoding header should not return ""identity""",2.0,"['org.jboss.netty.handler.codec.http.HttpContentDecoder.messageReceived(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)', 'io.netty.handler.codec.http.HttpContentDecoder.decode(io.netty.channel.ChannelHandlerContext,java.lang.Object)']","['218afba1f25de7883a5e9edd3f48f081a7b36e30', 'd183c1b24adcf16fe3fa7dba3958e9b3f5e5bab6']",,"['codec-http/src/main/java/io/netty/handler/codec/http', 'src/main/java/org/jboss/netty/handler/codec/http']",16.0,6.0,22.0,2.0,0.0,2.0,12.0,6.0,4.0,2.0,1.0,0.0,0.0,0.0,2.0,0.0,0.0,netty
38768,2012-04-22 07:38:17,94c3,"I'm using org.jboss.netty.example.http.websocketx.client.WebSocketClient to talk to the lastest version of Chromium. I get the following stack trace:

> Apr 22, 2012 3:34:41 AM org.jboss.netty.example.http.websocketx.client.WebSocketClient
> INFO: WebSocket Client connecting
> Apr 22, 2012 3:34:41 AM org.jboss.netty.example.http.websocketx.client.WebSocketClient
> INFO: WebSocket Client sending message
> Apr 22, 2012 3:34:41 AM org.jboss.netty.example.http.websocketx.client.WebSocketClient
> INFO: WebSocket Client sending ping
> org.jboss.netty.handler.codec.http.websocketx.WebSocketHandshakeException: Invalid handshake response upgrade: WebSocket
>         at org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13.finishHandshake(WebSocketClientHandshaker13.java:182)

[The line in question](https://github.com/netty/netty/blob/master/codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13.java#L181). Is it intentional that ""websocket"" is a valid response but not ""WebSocket""?
",2012-04-22 10:56:59,"[{'commitHash': '172f24cfa8aea620bee8210b3e9115614cdf83fa', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['0b26a5a2f0b1bd7ac110c4d253fedcdf6a87b22b'], 'nameRev': '172f24cfa8aea620bee8210b3e9115614cdf83fa tags/netty-3.4.2.Final~16', 'commitMessage': 'Upgrade and Connection header must be matched in a case-insensitive manner in WebSocket 08 and 13. See #278\n', 'commitDateTime': '2012-04-22 12:53:00', 'authoredDateTime': '2012-04-22 12:53:00', 'commitGitStats': [{'filePath': 'src/main/java/org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java', 'insertions': 6, 'deletions': 2, 'lines': 8}, {'filePath': 'src/main/java/org/jboss/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13.java', 'insertions': 6, 'deletions': 2, 'lines': 8}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'WebSocketClientHandshaker08.java', 'spoonMethods': [{'spoonMethodName': 'org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08.finishHandshake(org.jboss.netty.channel.Channel,org.jboss.netty.handler.codec.http.HttpResponse)', 'TOT': 6, 'UPD': 0, 'INS': 3, 'MOV': 3, 'DEL': 0}]}, {'spoonFilePath': 'WebSocketClientHandshaker13.java', 'spoonMethods': [{'spoonMethodName': 'org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13.finishHandshake(org.jboss.netty.channel.Channel,org.jboss.netty.handler.codec.http.HttpResponse)', 'TOT': 6, 'UPD': 0, 'INS': 3, 'MOV': 3, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '77d2f9c4ef5ae5070123cee4bca9870ff5f4c5fa', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['980d96cf581493124028bb60cc4dc213c3f2737e'], 'nameRev': '77d2f9c4ef5ae5070123cee4bca9870ff5f4c5fa tags/netty-4.0.0.Alpha1~336^2~58', 'commitMessage': 'Upgrade and Connection header must be matched in a case-insensitive manner in WebSocket 08 and 13. See #278\n', 'commitDateTime': '2012-04-22 12:56:37', 'authoredDateTime': '2012-04-22 12:56:37', 'commitGitStats': [{'filePath': 'codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java', 'insertions': 7, 'deletions': 3, 'lines': 10}, {'filePath': 'codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13.java', 'insertions': 6, 'deletions': 2, 'lines': 8}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'WebSocketClientHandshaker08.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08.finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpResponse)', 'TOT': 6, 'UPD': 0, 'INS': 3, 'MOV': 3, 'DEL': 0}]}, {'spoonFilePath': 'WebSocketClientHandshaker13.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13.finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpResponse)', 'TOT': 6, 'UPD': 0, 'INS': 3, 'MOV': 3, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'ec43aa121f1642c709310411a410460ba0f6fc78', 'commitGHEventType': 'referenced', 'commitUser': 'trustin', 'commitParents': ['1d7067719b5bc0318b58bdfed885057aface9d83'], 'nameRev': 'ec43aa121f1642c709310411a410460ba0f6fc78 tags/netty-4.0.0.Alpha1~296', 'commitMessage': 'Case-insensitive matching for Upgrade and Connection header (#278)', 'commitDateTime': '2012-05-30 16:43:04', 'authoredDateTime': '2012-05-30 16:43:04', 'commitGitStats': [{'filePath': 'codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00.java', 'insertions': 2, 'deletions': 2, 'lines': 4}, {'filePath': 'codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java', 'insertions': 2, 'deletions': 2, 'lines': 4}, {'filePath': 'codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13.java', 'insertions': 2, 'deletions': 2, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'WebSocketClientHandshaker00.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00.finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpResponse)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'WebSocketClientHandshaker08.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08.finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpResponse)', 'TOT': 3, 'UPD': 2, 'INS': 0, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'WebSocketClientHandshaker13.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13.finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpResponse)', 'TOT': 3, 'UPD': 2, 'INS': 0, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/278,0.0002777777777777778,['defect'],"""websocket"" valid upgrade request, but not ""WebSocket""?",2.0,"['io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08.finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpResponse)', 'org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13.finishHandshake(org.jboss.netty.channel.Channel,org.jboss.netty.handler.codec.http.HttpResponse)', 'io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00.finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpResponse)', 'io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker13.finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.HttpResponse)', 'org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker08.finishHandshake(org.jboss.netty.channel.Channel,org.jboss.netty.handler.codec.http.HttpResponse)']","['172f24cfa8aea620bee8210b3e9115614cdf83fa', 'ec43aa121f1642c709310411a410460ba0f6fc78']",,"['codec-http/src/main/java/io/netty/handler/codec/http/websocketx', 'src/main/java/org/jboss/netty/handler/codec/http/websocketx']",18.0,10.0,28.0,5.0,6.0,5.0,20.0,8.0,6.0,0.0,3.0,0.0,0.0,0.0,1.0,0.0,0.0,netty
38776,2012-04-13 10:10:58,rpelissier,"I am using Netty 3.3.1.Final for our needs of a custom server. Our execution is blocked in an infinite loop at: org.jboss.netty.buffer.DynamicChannelBuffer.ensureWritableBytes(DynamicChannelBuffer.java:75)

Going into the code with the debuger will show an infinite loop starting with the initial values: minNewCapacity=2147483647 newCapacity=256
(Binary 1111111111111111111111111111111)
(Binary 0000000000000000000000100000000)

The reason is <<= operator will cause newCapacity to reach a maximum value of 1000000000000000000000000000000 and at the next step newCapacity will become 0 for ever.

This part of the code lacks documentation so I cannot go deeper in my analyzis, but I would like to know if this is a known issue, and if I can use another version of netty?

``` java
    @Override
    public void ensureWritableBytes(int minWritableBytes) {
        if (minWritableBytes <= writableBytes()) {
            return;
        }

        int newCapacity;
        if (capacity() == 0) {
            newCapacity = 1;
        } else {
            newCapacity = capacity();
        }
        int minNewCapacity = writerIndex() + minWritableBytes;
        //INFINITE LOOP HERE
        while (newCapacity < minNewCapacity) {
            newCapacity <<= 1;
        }

        ChannelBuffer newBuffer = factory().getBuffer(order(), newCapacity);
        newBuffer.writeBytes(buffer, 0, writerIndex());
        buffer = newBuffer;
    }
```

Thanks for your help,

Renaud

Added comment:

This is method causing the minNewCapacity to be so high wich seems not good because it will lead to a huge memory buffer... org.jboss.netty.ReplayingDecoderBuffer.readableBytes(ReplayingDecoderBuffer.java:301)

``` java
public int readableBytes() {
        if (terminated) {
            return buffer.readableBytes();
        } else {
            return Integer.MAX_VALUE - buffer.readerIndex();
        }
    }
```

Added comment 2012/04/13

I finally decided to not use the ReplayingDecoder because it leads to some very strange behaviour. In particular, it looks like it is not safe to use the mark() and reset() methods of the ChannelBuffer argument in the decode() method. When I tried to use buffer.slice() to wrap the ChannelBuffer in a ""private"" container, I got an exception, something like ""Slice is not a replayable method..."".

Below is what I do right now: I am using a custom FrameDecoder as a ReplayingDecoder, but I am loosing the Checkpoint facilities. Codec is an interface I introduced to be able to combine different Protocol layer:

``` java
public static ChannelUpstreamHandler decoder(final Codec codec) {
        return new FrameDecoder() {

            @Override
            protected Object decode(ChannelHandlerContext ctx, Channel channel, ChannelBuffer buffer) throws Exception {
                try {
                    //Wrap the argument buffer inside a private buffer with other readerIndex and writerIndex.
                    ChannelBuffer privateBuffer = ChannelBuffers.wrappedBuffer(buffer);
                    Object result = codec.decode(privateBuffer);
                    buffer.skipBytes(privateBuffer.readerIndex());
                    return result;
                } catch (Exception e) {
                    return null;
                }
            }
        };
    }
```
",2012-04-16 07:55:32,"[{'commitHash': '8bf84a873714cf934a01a6de119e8b741f4681a6', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['fdc27db45d5b5f23c26cd8c4b3ed9315b971fdae'], 'nameRev': '8bf84a873714cf934a01a6de119e8b741f4681a6 tags/netty-3.4.1.Final~16', 'commitMessage': 'Throw IllegalStateException if DynamicChannelBuffer exceed the maximum\nChannelBuffer size of 2gb. See #258', 'commitDateTime': '2012-04-16 09:52:34', 'authoredDateTime': '2012-04-16 09:52:34', 'commitGitStats': [{'filePath': 'src/main/java/org/jboss/netty/buffer/DynamicChannelBuffer.java', 'insertions': 8, 'deletions': 0, 'lines': 8}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DynamicChannelBuffer.java', 'spoonMethods': [{'spoonMethodName': 'org.jboss.netty.buffer.DynamicChannelBuffer.ensureWritableBytes(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '05615c4779e4c8bd98ac9b15097ab5fef4916c78', 'commitGHEventType': 'referenced', 'commitUser': 'normanmaurer', 'commitParents': ['f25453cd364a9d403ce63b05bd75a499d5255dc0'], 'nameRev': '05615c4779e4c8bd98ac9b15097ab5fef4916c78 tags/netty-4.0.0.Alpha1~336^2~76', 'commitMessage': 'Throw IllegalStateException if DynamicChannelBuffer exceed the maximum\nChannelBuffer size of 2gb. See #258', 'commitDateTime': '2012-04-16 09:55:03', 'authoredDateTime': '2012-04-16 09:55:03', 'commitGitStats': [{'filePath': 'buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java', 'insertions': 9, 'deletions': 0, 'lines': 9}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DynamicChannelBuffer.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.buffer.DynamicChannelBuffer.ensureWritableBytes(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'b5d715343a24be61be13a1546908ff9dbd3a743c', 'commitGHEventType': 'referenced', 'commitUser': 'trustin', 'commitParents': ['8eda2280b3555bf6ef81c0c7090bbd5270e51094'], 'nameRev': 'b5d715343a24be61be13a1546908ff9dbd3a743c tags/netty-4.0.0.Alpha1~304', 'commitMessage': 'Fail if DynamicChannelBuffer attempts to exceed the max capacity (#258)\n\n- Contributed by @normanmaurer', 'commitDateTime': '2012-05-30 15:51:24', 'authoredDateTime': '2012-05-30 15:51:24', 'commitGitStats': [{'filePath': 'buffer/src/main/java/io/netty/buffer/DynamicChannelBuffer.java', 'insertions': 7, 'deletions': 0, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DynamicChannelBuffer.java', 'spoonMethods': [{'spoonMethodName': 'io.netty.buffer.DynamicChannelBuffer.ensureWritableBytes(int)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/netty/netty/issues/258,2.000277777777778,['defect'],"Java Netty 3.3.1.Final, DynamicChannelBuffer.java:75, infinite loop, a bug?",2.0,"['io.netty.buffer.DynamicChannelBuffer.ensureWritableBytes(int)', 'org.jboss.netty.buffer.DynamicChannelBuffer.ensureWritableBytes(int)']","['8bf84a873714cf934a01a6de119e8b741f4681a6', 'b5d715343a24be61be13a1546908ff9dbd3a743c']",,"['src/main/java/org/jboss/netty/buffer', 'buffer/src/main/java/io/netty/buffer']",15.0,0.0,15.0,2.0,0.0,2.0,2.0,0.0,2.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,netty
39358,2019-04-04 21:48:34,ygnessin,"After upgrading our android app from okhttp 3.12.2 to 3.14.0, we started seeing this error (stacktrace below) coming through Crashlytics in production at a very high rate. Because we upgraded directly from 3.12 to 3.14, I'm not sure if this error was introduced in 3.13 or 3.14.

With an admittedly small sample size, the crash was affecting over 10% of sessions and over 20% of users, so we were forced to roll back. It appeared across Android versions 7, 8, 9, and Q.

Unfortunately, I wasn't able to reproduce it locally. However, it seems very similar to this issue from 2 years ago, which appears to have been re-introduced to the library: https://github.com/square/okhttp/issues/3308

I am not sure if this is related but we are compiling our app with R8 version 1.4.72

Our app uses Java 8, min SDK 21, and the latest version of retrofit (2.5.0).

Hopefully this information and the stack trace below is enough to be helpful, apologies for not being able to include a reproducible case outside of production.

Thank you for the amazing library and everything you do for android open source!

```
Fatal Exception: java.util.NoSuchElementException
       at okhttp3.internal.connection.RouteSelector.next(RouteSelector.java:75)
       at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:187)
       at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:107)
       at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:87)
       at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:162)
       at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41)
       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)
       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)
       at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)
       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)
       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)
       at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)
       at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)
       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)
       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)
       at com.redacted.myapp.MyNetworkingModule.doRequestWithExceptionCatching(MyNetworkingModule.java:150)
       at com.redacted.myapp.MyNetworkingModule.lambda$provideOkhttpClient$0(MyNetworkingModule.java:99)
       at com.redacted.myapp.-$$Lambda$MyNetworkingModule$f9YhFuxMEYBUFTv_jyu3YSQWZX8.intercept(-.java:2)
       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)
       at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)
       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:221)
       at okhttp3.RealCall$AsyncCall.execute(RealCall.java:172)
       at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)
       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
       at java.lang.Thread.run(Thread.java:764)
```",2020-05-07 21:12:31,"[{'commitHash': '33f0d028a4355af49a23dfb946d87cca5c336105', 'commitGHEventType': 'referenced', 'commitUser': 'swankjesse', 'commitParents': ['0f87d95c7de96ae028fb403f57ade0c7f8fca33f'], 'nameRev': '33f0d028a4355af49a23dfb946d87cca5c336105 tags/parent-3.14.1~4^2', 'commitMessage': ""Don't crash on retry when there are no more routes (3.x branch)\n\nhttps://github.com/square/okhttp/issues/4875\n"", 'commitDateTime': '2019-04-07 21:30:11', 'authoredDateTime': '2019-04-07 21:30:09', 'commitGitStats': [{'filePath': 'okhttp-tests/src/test/java/okhttp3/CallTest.java', 'insertions': 26, 'deletions': 0, 'lines': 26}, {'filePath': 'okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java', 'insertions': 8, 'deletions': 3, 'lines': 11}, {'filePath': 'okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java', 'insertions': 4, 'deletions': 2, 'lines': 6}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'CallTest.java', 'spoonMethods': [{'spoonMethodName': 'okhttp3.CallTest.canRetryNormalRequestBody()', 'TOT': 11, 'UPD': 1, 'INS': 1, 'MOV': 9, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cancelLater(okhttp3.Call,long)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().3', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().4', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cancelWhileRequestHeadersAreSent().7', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cancelInFlightBeforeResponseReadThrowsIOE().8', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().9', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure().10', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce().11', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.asyncResponseCanBeConsumedLater().12', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().13', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.requestBody(boolean,long,int).14', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.postWithFileNotFound().16', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.makeFailingCall().19', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cancelLater(okhttp3.Call,long).20', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.socketFactoryWithCipherSuite(javax.net.ssl.SSLSocketFactory,okhttp3.CipherSuite).21', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().15', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canRetryNormalRequestBody().5', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.requestBodyThrowsUnrelatedToNetwork().17', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.lateCancelCallsOnFailure().18', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().13.writeTo(okio.BufferedSink)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().4.writeTo(okio.BufferedSink)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().15.onFailure(okhttp3.Call,java.io.IOException)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cancelWhileRequestHeadersAreSent().7.requestHeadersStart(okhttp3.Call)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().9.dispatch(okhttp3.mockwebserver.RecordedRequest)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canRetryNormalRequestBody().5.writeTo(okio.BufferedSink)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cannotRetryOneShotRequestBody()', 'TOT': 10, 'UPD': 0, 'INS': 0, 'MOV': 9, 'DEL': 1}, {'spoonMethodName': 'okhttp3.CallTest.interceptorRecoversWhenRoutesExhausted()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cannotRetryOneShotRequestBody().6.isOneShot()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'ExchangeFinder.java', 'spoonMethods': [{'spoonMethodName': 'okhttp3.internal.connection.ExchangeFinder.canRetry()', 'TOT': 3, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'okhttp3.internal.connection.ExchangeFinder.hasStreamFailure()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Transmitter.java', 'spoonMethods': [{'spoonMethodName': 'okhttp3.internal.connection.Transmitter.canRetry()', 'TOT': 3, 'UPD': 1, 'INS': 1, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'okhttp3.internal.connection.Transmitter.prepareToConnect(okhttp3.Request)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '79c23e3e567e2e17ca3e2e1e6163e8070270fb9f', 'commitGHEventType': 'referenced', 'commitUser': 'swankjesse', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '56557a8732ba68c6e7946b0399ba23a61ca581bf', 'commitGHEventType': 'referenced', 'commitUser': 'swankjesse', 'commitParents': ['677511daccefac94458df59d1f5fbdcc5442bcc7'], 'nameRev': '56557a8732ba68c6e7946b0399ba23a61ca581bf tags/parent-4.0.0-ALPHA01~57^2', 'commitMessage': ""Don't crash on retry when there are no more routes (4.x branch)\n\nhttps://github.com/square/okhttp/issues/4875\n"", 'commitDateTime': '2019-04-08 06:34:41', 'authoredDateTime': '2019-04-07 21:30:09', 'commitGitStats': [{'filePath': 'okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java', 'insertions': 8, 'deletions': 3, 'lines': 11}, {'filePath': 'okhttp/src/main/java/okhttp3/internal/connection/Transmitter.java', 'insertions': 4, 'deletions': 2, 'lines': 6}, {'filePath': 'okhttp/src/test/java/okhttp3/CallTest.java', 'insertions': 26, 'deletions': 0, 'lines': 26}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ExchangeFinder.java', 'spoonMethods': [{'spoonMethodName': 'okhttp3.internal.connection.ExchangeFinder.canRetry()', 'TOT': 3, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'okhttp3.internal.connection.ExchangeFinder.hasStreamFailure()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Transmitter.java', 'spoonMethods': [{'spoonMethodName': 'okhttp3.internal.connection.Transmitter.canRetry()', 'TOT': 3, 'UPD': 1, 'INS': 1, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'okhttp3.internal.connection.Transmitter.prepareToConnect(okhttp3.Request)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'CallTest.java', 'spoonMethods': [{'spoonMethodName': 'okhttp3.CallTest.canRetryNormalRequestBody()', 'TOT': 11, 'UPD': 1, 'INS': 1, 'MOV': 9, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cancelLater(okhttp3.Call,long)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().3', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().4', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue().5', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue().6', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cancelWhileRequestHeadersAreSent().9', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cancelInFlightBeforeResponseReadThrowsIOE().10', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().11', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canceledBeforeResponseReadSignalsOnFailure().12', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canceledAfterResponseIsDeliveredBreaksStreamButSignalsOnce().13', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.asyncResponseCanBeConsumedLater().14', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().15', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.requestBody(boolean,long,int).16', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.postWithFileNotFound().18', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.makeFailingCall().21', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cancelLater(okhttp3.Call,long).22', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.socketFactoryWithCipherSuite(javax.net.ssl.SSLSocketFactory,okhttp3.CipherSuite).23', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().17', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canRetryNormalRequestBody().7', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.requestBodyThrowsUnrelatedToNetwork().19', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.lateCancelCallsOnFailure().20', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.failingCallsDoNotInterfereWithConnection().15.writeTo(okio.BufferedSink)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.reusedSinksGetIndependentTimeoutInstances().4.writeTo(okio.BufferedSink)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.asyncLeakedResponseBodyLogsStackTrace().17.onFailure(okhttp3.Call,java.io.IOException)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cancelWhileRequestHeadersAreSent().9.requestHeadersStart(okhttp3.Call)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.recoverWhenRetryOnConnectionFailureIsTrue().5.dispatch(okhttp3.mockwebserver.RecordedRequest)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canceledBeforeIOSignalsOnFailure().11.dispatch(okhttp3.mockwebserver.RecordedRequest)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.canRetryNormalRequestBody().7.writeTo(okio.BufferedSink)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cannotRetryOneShotRequestBody()', 'TOT': 10, 'UPD': 0, 'INS': 0, 'MOV': 9, 'DEL': 1}, {'spoonMethodName': 'okhttp3.CallTest.interceptorRecoversWhenRoutesExhausted()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'okhttp3.CallTest.cannotRetryOneShotRequestBody().8.isOneShot()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'ebe5c601304414f0794aaf67203baa0b0cd7de9a', 'commitGHEventType': 'referenced', 'commitUser': 'swankjesse', 'commitParents': ['3ec8537bf5fda689136660704d5529bb383293ab'], 'nameRev': 'ebe5c601304414f0794aaf67203baa0b0cd7de9a tags/parent-3.14.2~1^2~1', 'commitMessage': 'Reproduce NoSuchElementException in RouteSelector.next() in a test\n\nI was unable to write a test that reproduces https://github.com/square/okhttp/issues/4875 consistently, but this is the closest I got. When I run it repeatedly in IntelliJ, it fails about 1 out of 5 times.\n', 'commitDateTime': '2019-05-18 22:14:21', 'authoredDateTime': '2019-05-04 17:50:55', 'commitGitStats': [{'filePath': 'okhttp-tests/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java', 'insertions': 37, 'deletions': 0, 'lines': 37}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpOverHttp2Test.java', 'spoonMethods': [{'spoonMethodName': 'okhttp3.internal.http2.HttpOverHttp2Test.shutdownAfterLateCoalescing()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '48f62889cf3924285fc7ebc4a84c04ee5458fdd7', 'commitGHEventType': 'referenced', 'commitUser': 'swankjesse', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '5ecec36c2e0c01b466daebd925c64e4c4457f34f', 'commitGHEventType': 'referenced', 'commitUser': 'swankjesse', 'commitParents': ['ebe5c601304414f0794aaf67203baa0b0cd7de9a'], 'nameRev': '5ecec36c2e0c01b466daebd925c64e4c4457f34f tags/parent-3.14.2~1^2', 'commitMessage': 'Lock in a route in hasRouteToTry() (3.14.x branch)\n\nOtherwise we end up making multiple calls to retryCurrentRoute()\nand if it returns true then false we can fail to find a route on\na retry.\n\nCloses: https://github.com/square/okhttp/issues/4875\n', 'commitDateTime': '2019-05-18 22:15:56', 'authoredDateTime': '2019-05-18 22:10:32', 'commitGitStats': [{'filePath': 'okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.java', 'insertions': 15, 'deletions': 8, 'lines': 23}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ExchangeFinder.java', 'spoonMethods': [{'spoonMethodName': 'okhttp3.internal.connection.ExchangeFinder.findConnection(int,int,int,int,boolean)', 'TOT': 11, 'UPD': 0, 'INS': 2, 'MOV': 6, 'DEL': 3}, {'spoonMethodName': 'okhttp3.internal.connection.ExchangeFinder.hasRouteToTry()', 'TOT': 5, 'UPD': 0, 'INS': 2, 'MOV': 2, 'DEL': 1}, {'spoonMethodName': 'okhttp3.internal.connection.ExchangeFinder', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'befd58408ae5b9be906c1ec40fc9c35bcd8b15ab', 'commitGHEventType': 'referenced', 'commitUser': 'swankjesse', 'commitParents': [], 'nameRev': '', 'commitMessage': '', 'commitDateTime': '', 'authoredDateTime': '', 'commitGitStats': [], 'commitSpoonAstDiffStats': [], 'spoonStatsSkippedReason': ''}, {'commitHash': '6ed894cb6c2cb1326d1d1d7992b43f90bbf94937', 'commitGHEventType': 'referenced', 'commitUser': 'swankjesse', 'commitParents': ['cf5ebfddf6c16a9971fd3055df67d050adfa3ce4'], 'nameRev': '6ed894cb6c2cb1326d1d1d7992b43f90bbf94937 tags/parent-4.0.0-alpha02~40^2', 'commitMessage': 'Lock in a route in hasRouteToTry()\n\nOtherwise we end up making multiple calls to retryCurrentRoute()\nand if it returns true then false we can fail to find a route on\na retry.\n\nCloses: https://github.com/square/okhttp/issues/4875\n', 'commitDateTime': '2019-05-19 13:23:06', 'authoredDateTime': '2019-05-19 13:22:17', 'commitGitStats': [{'filePath': 'okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt', 'insertions': 15, 'deletions': 13, 'lines': 28}, {'filePath': 'okhttp/src/test/java/okhttp3/internal/http2/HttpOverHttp2Test.java', 'insertions': 0, 'deletions': 2, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpOverHttp2Test.java', 'spoonMethods': [{'spoonMethodName': 'okhttp3.internal.http2.HttpOverHttp2Test.shutdownAfterLateCoalescing()', 'TOT': 3, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 2}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/square/okhttp/issues/4875,398.0002777777778,"['bug', 'needs info']",NoSuchElementException coming from RouteSelector after upgrading 3.12 -> 3.14,4.0,"['okhttp3.internal.connection.ExchangeFinder.hasStreamFailure()', 'okhttp3.internal.connection.ExchangeFinder.canRetry()', 'okhttp3.internal.connection.Transmitter.canRetry()', 'okhttp3.internal.connection.Transmitter.prepareToConnect(okhttp3.Request)', 'okhttp3.internal.connection.ExchangeFinder', 'okhttp3.internal.connection.ExchangeFinder.hasRouteToTry()', 'okhttp3.internal.connection.ExchangeFinder.findConnection(int,int,int,int,boolean)']","['33f0d028a4355af49a23dfb946d87cca5c336105', '56557a8732ba68c6e7946b0399ba23a61ca581bf', 'ebe5c601304414f0794aaf67203baa0b0cd7de9a', '5ecec36c2e0c01b466daebd925c64e4c4457f34f', '6ed894cb6c2cb1326d1d1d7992b43f90bbf94937']",,"['okhttp/src/main/java/okhttp3/internal/connection', 'okhttp/src/main/java/okhttp3/internal/connection/ExchangeFinder.kt']",54.0,31.0,85.0,3.0,4.0,7.0,35.0,14.0,11.0,6.0,2.0,0.0,0.0,0.0,3.0,0.0,0.0,okhttp
40058,2019-02-19 15:26:51,simoelmou,"#### What version of pinpoint are you using?
1.8.1

#### Describe the bug
There is an exception in the pinpoint agent logs, and it concerns Spring Cassandra library. In fact, Applications that communicate with Cassandra are not linked to each other and I think it's because of this exception.
For example normally the request flow is : 
App 1 > App 2 > Cassandra
but pinpoint web shows it like this : 
App 1
App 2 > Cassandra
So the traceId is lost between the App 1 and App 2

#### Logs
You can see the logs here: https://gist.github.com/simoelmou/7123f75eb341023750daf11675df4284

#### Additional context
I'm using version 1.8.0 for the Collector and Web.",2019-03-27 09:32:39,"[{'commitHash': '131e73cda844daa09f6caac48f14463e72d07fbc', 'commitGHEventType': 'referenced', 'commitUser': 'Xylus', 'commitParents': ['c8cb5ed3dea4d29abc0457e21444dd5b58181976'], 'nameRev': '131e73cda844daa09f6caac48f14463e72d07fbc tags/v2.0.0-RC1~479', 'commitMessage': '[#5261] Add workaround for scanning classes in nested jars\n', 'commitDateTime': '2019-03-18 19:49:57', 'authoredDateTime': '2019-03-14 16:42:15', 'commitGitStats': [{'filePath': 'profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/classloading/JarProfilerPluginClassInjector.java', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/scanner/ClassScannerFactory.java', 'insertions': 32, 'deletions': 2, 'lines': 34}, {'filePath': 'profiler/src/test/java/com/navercorp/pinpoint/profiler/instrument/scanner/ClassScannerFactoryTest.java', 'insertions': 12, 'deletions': 0, 'lines': 12}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'JarProfilerPluginClassInjector.java', 'spoonMethods': [{'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.classloading.JarProfilerPluginClassInjector.getResourceAsStream(java.lang.ClassLoader,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ClassScannerFactory.java', 'spoonMethods': [{'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory.isNestedJar(java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory.forceClassLoaderScanner()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory.newScanner(java.security.ProtectionDomain,java.lang.ClassLoader)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ClassScannerFactoryTest.java', 'spoonMethods': [{'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactoryTest.isNestedJar()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '4b033f0b205f07a737f729309c4eea3435cae2d6', 'commitGHEventType': 'referenced', 'commitUser': 'Xylus', 'commitParents': ['1e58c4b55f4a7f981bbf90d88a4112973f3ecf5f'], 'nameRev': '4b033f0b205f07a737f729309c4eea3435cae2d6 tags/1.8.3~2', 'commitMessage': '[#5261] Add workaround for scanning classes in nested jars\n', 'commitDateTime': '2019-03-18 19:50:05', 'authoredDateTime': '2019-03-18 17:36:15', 'commitGitStats': [{'filePath': 'profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/scanner/ClassScannerFactory.java', 'insertions': 32, 'deletions': 0, 'lines': 32}, {'filePath': 'profiler/src/test/java/com/navercorp/pinpoint/profiler/instrument/scanner/ClassScannerFactoryTest.java', 'insertions': 12, 'deletions': 0, 'lines': 12}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ClassScannerFactory.java', 'spoonMethods': [{'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory.isNestedJar(java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory.forceClassLoaderScanner()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory.newScanner(java.security.ProtectionDomain,java.lang.ClassLoader)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ClassScannerFactoryTest.java', 'spoonMethods': [{'spoonMethodName': 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactoryTest.isNestedJar()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/naver/pinpoint/issues/5261,35.000277777777775,"['bug', 'module:agent']",Pinpoint agent not working for nested jars,1.0,"['com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory.newScanner(java.security.ProtectionDomain,java.lang.ClassLoader)', 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory.isNestedJar(java.lang.String)', 'com.navercorp.pinpoint.profiler.instrument.classloading.JarProfilerPluginClassInjector.getResourceAsStream(java.lang.ClassLoader,java.lang.String)', 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory.forceClassLoaderScanner()', 'com.navercorp.pinpoint.profiler.instrument.scanner.ClassScannerFactory']",['131e73cda844daa09f6caac48f14463e72d07fbc'],,"['profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/scanner', 'profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/classloading']",33.0,2.0,35.0,2.0,0.0,5.0,6.0,0.0,6.0,0.0,2.0,0.0,0.0,0.0,1.0,0.0,0.0,pinpoint
40146,2016-12-06 15:59:52,ofauchon,"Hi. 

I use Pinpoint RC2

No idea why my scatter chart is not working anymore (It was fine for a couple of weeks)

![image](https://cloud.githubusercontent.com/assets/561441/20931919/0fa15564-bbd3-11e6-860f-fa790eb5066c.png)

... Maybe after I set Y Axis to 30 ms , but I can't change it anymore, as I can't click on options gear 
(the cursor is in crosshair mode, no click possible)

I could find that the following request: http://server/getScatterData.pinpoint?to=1481038925000&from=1481038625000&limit=5000&filter=&application=APPLICATION&xGroupUnit=987&yGroupUnit=0

returns: 

""java.lang.IllegalArgumentException: **yGroupUnit(0)** must be positive number\r\n\tat com.navercorp.pinpoint.web.controller.ScatterChartController.getScatterData(ScatterChartController.java:156)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:222)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:137)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:110)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:775)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:705)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:959)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:893)\r\n\tat 
....


Could you please tell me: 

- Where are stored these GUI settings (they seem permanent) and how to reset to defaults ? 
- What is yGroupUnit ? Is it related to Y max value on the graph ? 

Thanks 


",2016-12-09 08:52:51,"[{'commitHash': '56eb10db6cf31de2cc3ec2e1c37dd3822304d621', 'commitGHEventType': 'referenced', 'commitUser': 'koo-taejin', 'commitParents': ['81ebb90849ce25ab24eaf7b05d5e1c202eb5d777'], 'nameRev': '56eb10db6cf31de2cc3ec2e1c37dd3822304d621 tags/1.6.0~2', 'commitMessage': 'Fixed scatter chart stuck #2299\n\nFixed scatter chart stuck when the ms value per pixel is less than 1 ms\n', 'commitDateTime': '2016-12-07 14:56:42', 'authoredDateTime': '2016-12-07 14:54:11', 'commitGitStats': [{'filePath': 'web/src/main/java/com/navercorp/pinpoint/web/controller/ScatterChartController.java', 'insertions': 20, 'deletions': 21, 'lines': 41}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ScatterChartController.java', 'spoonMethods': [{'spoonMethodName': 'com.navercorp.pinpoint.web.controller.ScatterChartController.getScatterData(java.lang.String,long,long,int,int,int,boolean,java.lang.String,java.lang.String,int)', 'TOT': 6, 'UPD': 2, 'INS': 2, 'MOV': 2, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/naver/pinpoint/issues/2299,2.000277777777778,['bug'],"Scatter chart stuck, how to reset settings",1.0,"['com.navercorp.pinpoint.web.controller.ScatterChartController.getScatterData(java.lang.String,long,long,int,int,int,boolean,java.lang.String,java.lang.String,int)']",['56eb10db6cf31de2cc3ec2e1c37dd3822304d621'],,['web/src/main/java/com/navercorp/pinpoint/web/controller'],20.0,21.0,41.0,1.0,2.0,1.0,6.0,2.0,2.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,pinpoint
40262,2019-08-26 10:00:11,regrog,"**Affects PMD Version:** 6.17

**Rule:** TooManyStaticImports (but maybe the problem is not related to the rule)

**Description:**
I updated my Gradle version to 5.6 and started to use incremental analysis flag.
https://docs.gradle.org/5.6/release-notes.html#support-for-pmd-incremental-analysis
It seems that the rule reference is wrong but the description is right.
Also the priority field is from the wrong rule.
Here 2 example of xml. Unfortunately I can't give you my project to test this issue, sorry.


**Code Sample demonstrating the issue:**
**right example**
```
<?xml version=""1.0"" encoding=""UTF-8""?>
<pmd xmlns=""http://pmd.sourceforge.net/report/2.0.0""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd""
    version=""6.17.0"" timestamp=""2019-08-26T11:46:19.393"">
<file name=""MyFile.java"">
<violation beginline=""1"" endline=""457"" begincolumn=""1"" endcolumn=""2"" rule=""TooManyStaticImports"" ruleset=""Code Style"" package=""my.package"" class=""MyFile"" externalInfoUrl=""https://pmd.github.io/pmd-6.17.0/pmd_rules_java_codestyle.html#toomanystaticimports"" priority=""5"">
Too many static imports may lead to messy code
</violation>
</file>
</pmd>
```
**wrong example**
```
<?xml version=""1.0"" encoding=""UTF-8""?>
<pmd xmlns=""http://pmd.sourceforge.net/report/2.0.0""
    xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
    xsi:schemaLocation=""http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd""
    version=""6.17.0"" timestamp=""2019-08-26T10:35:33.313"">
<file name=""MyFile.java"">
<violation beginline=""1"" endline=""457"" begincolumn=""1"" endcolumn=""2"" rule=""ByteInstantiation"" ruleset=""Performance"" package=""my.package"" class=""MyFile"" externalInfoUrl=""https://pmd.github.io/pmd-6.17.0/pmd_rules_java_performance.html#byteinstantiation"" priority=""2"">
Too many static imports may lead to messy code
</violation>
<violation beginline=""1"" endline=""457"" begincolumn=""1"" endcolumn=""2"" rule=""ByteInstantiation"" ruleset=""Performance"" package=""my.package"" class=""MyFile"" externalInfoUrl=""https://pmd.github.io/pmd-6.17.0/pmd_rules_java_performance.html#byteinstantiation"" priority=""2"">
Too many static imports may lead to messy code
</violation>
<violation beginline=""1"" endline=""457"" begincolumn=""1"" endcolumn=""2"" rule=""ByteInstantiation"" ruleset=""Performance"" package=""my.package"" class=""MyFile"" externalInfoUrl=""https://pmd.github.io/pmd-6.17.0/pmd_rules_java_performance.html#byteinstantiation"" priority=""2"">
Too many static imports may lead to messy code
</violation>
<violation beginline=""1"" endline=""457"" begincolumn=""1"" endcolumn=""2"" rule=""ByteInstantiation"" ruleset=""Performance"" package=""my.package"" class=""MyFile"" externalInfoUrl=""https://pmd.github.io/pmd-6.17.0/pmd_rules_java_performance.html#byteinstantiation"" priority=""2"">
Too many static imports may lead to messy code
</violation>
</file>
</pmd>
```
I also executed pmd different times:
**first launch**
```
<file name=""MyFile.java"">
<violation beginline=""1"" endline=""442"" begincolumn=""1"" endcolumn=""2"" rule=""ByteInstantiation"" ruleset=""Performance"" package=""my.package"" class=""MyFile"" externalInfoUrl=""https://pmd.github.io/pmd-6.17.0/pmd_rules_java_performance.html#byteinstantiation"" priority=""2"">
Too many static imports may lead to messy code
</violation>
```
**second launch**
```
<file name=""MyFile.java"">
<violation beginline=""1"" endline=""457"" begincolumn=""1"" endcolumn=""2"" rule=""ProperCloneImplementation"" ruleset=""Error Prone"" package=""my.package"" class=""MyFile"" externalInfoUrl=""https://pmd.github.io/pmd-6.17.0/pmd_rules_java_errorprone.html#propercloneimplementation"" priority=""2"">
Too many static imports may lead to messy code
</violation>
```
**third launch after clean**
```
<file name=""MyFile.java"">
<violation beginline=""1"" endline=""457"" begincolumn=""1"" endcolumn=""2"" rule=""JUnitStaticSuite"" ruleset=""Error Prone"" package=""my.package"" class=""MyFile"" externalInfoUrl=""https://pmd.github.io/pmd-6.17.0/pmd_rules_java_errorprone.html#junitstaticsuite"" priority=""3"">
Too many static imports may lead to messy code
</violation>
```
**fourth launch after clean**
rule reference changed again: **WhileLoopWithLiteralBoolean**

**Running PMD through:** Gradle 5.6

O.S. both linux and windows
JDK 1.8",2019-08-29 20:18:11,"[{'commitHash': 'b85d71f632dbcd14d4824ea6e0c60cb41800f022', 'commitGHEventType': 'closed', 'commitUser': 'oowekyala', 'commitParents': ['056b0f73a8fb9110ceb9472766902ca56c360255'], 'nameRev': 'b85d71f632dbcd14d4824ea6e0c60cb41800f022 tags/pmd_releases/6.18.0~32^2~2', 'commitMessage': '[core] Resolve cached rule instances by more than class name\n\n - Fixes #1990\n', 'commitDateTime': '2019-08-27 11:02:27', 'authoredDateTime': '2019-08-27 11:00:33', 'commitGitStats': [{'filePath': 'pmd-core/src/main/java/net/sourceforge/pmd/cache/CachedRuleMapper.java', 'insertions': 14, 'deletions': 5, 'lines': 19}, {'filePath': 'pmd-core/src/main/java/net/sourceforge/pmd/cache/CachedRuleViolation.java', 'insertions': 14, 'deletions': 5, 'lines': 19}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'CachedRuleMapper.java', 'spoonMethods': [{'spoonMethodName': 'net.sourceforge.pmd.cache.CachedRuleMapper', 'TOT': 3, 'UPD': 1, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'net.sourceforge.pmd.cache.CachedRuleMapper.getRuleForClass(java.lang.String)', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'net.sourceforge.pmd.cache.CachedRuleMapper.initialize(net.sourceforge.pmd.RuleSets)', 'TOT': 5, 'UPD': 1, 'INS': 2, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'net.sourceforge.pmd.cache.CachedRuleMapper.getRuleKey(java.lang.String,java.lang.String,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'net.sourceforge.pmd.cache.CachedRuleMapper.getRuleForClass(java.lang.String,java.lang.String,java.lang.String)', 'TOT': 3, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'CachedRuleViolation.java', 'spoonMethods': [{'spoonMethodName': 'net.sourceforge.pmd.cache.CachedRuleViolation.loadFromStream(java.io.DataInputStream,java.lang.String,net.sourceforge.pmd.cache.CachedRuleMapper)', 'TOT': 3, 'UPD': 1, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'net.sourceforge.pmd.cache.CachedRuleViolation', 'TOT': 6, 'UPD': 0, 'INS': 6, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'net.sourceforge.pmd.cache.CachedRuleViolation.storeToStream(java.io.DataOutputStream,net.sourceforge.pmd.RuleViolation)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'net.sourceforge.pmd.cache.CachedRuleViolation.getRule()', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/pmd/pmd/issues/1990,3.000277777777778,"['a:bug', 'has:pr']",[core] Incremental analysis mixes XPath rule violations,1.0,"['net.sourceforge.pmd.cache.CachedRuleMapper.getRuleForClass(java.lang.String)', 'net.sourceforge.pmd.cache.CachedRuleMapper.getRuleKey(java.lang.String,java.lang.String,java.lang.String)', 'net.sourceforge.pmd.cache.CachedRuleViolation', 'net.sourceforge.pmd.cache.CachedRuleViolation.loadFromStream(java.io.DataInputStream,java.lang.String,net.sourceforge.pmd.cache.CachedRuleMapper)', 'net.sourceforge.pmd.cache.CachedRuleViolation.getRule()', 'net.sourceforge.pmd.cache.CachedRuleMapper', 'net.sourceforge.pmd.cache.CachedRuleViolation.storeToStream(java.io.DataOutputStream,net.sourceforge.pmd.RuleViolation)', 'net.sourceforge.pmd.cache.CachedRuleMapper.initialize(net.sourceforge.pmd.RuleSets)', 'net.sourceforge.pmd.cache.CachedRuleMapper.getRuleForClass(java.lang.String,java.lang.String,java.lang.String)']",['b85d71f632dbcd14d4824ea6e0c60cb41800f022'],,['pmd-core/src/main/java/net/sourceforge/pmd/cache'],28.0,10.0,38.0,2.0,4.0,9.0,27.0,3.0,20.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,pmd
42193,2019-07-05 03:44:33,luckyQing,"class：org.redisson.spring.data.connection.RedissonConnection.java 
code line：882 
code segment：
<T> T write(byte[] key, Codec codec, RedisCommand<?> command, Object... params) {
	RFuture<T> f = executorService.writeAsync(key, codec, command, params);
	indexCommand(command);
	return sync(f);
}

bug：return null when not used in pipeline / transaction.

### Expected behavior
not return null when not used in pipeline / transaction.
### Actual behavior
return null when not used in pipeline / transaction.
### Steps to reproduce or test case
public Boolean setNx(String key, String value, long expireMillis) {
	return stringRedisTemplate.execute(new RedisCallback<Boolean>() {
		@Override
		public Boolean doInRedis(RedisConnection connection) throws DataAccessException {
			return connection.set(key.getBytes(), value.getBytes(), Expiration.milliseconds(expireMillis),
					SetOption.SET_IF_ABSENT);
		}
	}, true);
}
### Redis version
Redis-x64-3.0.500
### Redisson version
3.11.1
### Redisson configuration",2019-07-08 07:05:42,"[{'commitHash': '22ddb6a6711acda0e088db99b961c0d60801bc7c', 'commitGHEventType': 'referenced', 'commitUser': 'mrniko', 'commitParents': ['343b3f813cfb6a3ff4b679e01ac38dec2a4a2eda'], 'nameRev': '22ddb6a6711acda0e088db99b961c0d60801bc7c tags/redisson-3.11.2~23', 'commitMessage': 'Fixed - RedissonConnection.set returns null if invoked with expiration parameter. #2217\n', 'commitDateTime': '2019-07-08 10:06:28', 'authoredDateTime': '2019-07-08 10:06:28', 'commitGitStats': [{'filePath': 'redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java', 'insertions': 3, 'deletions': 6, 'lines': 9}, {'filePath': 'redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection/RedissonConnection.java', 'insertions': 3, 'deletions': 3, 'lines': 6}, {'filePath': 'redisson-spring-data/redisson-spring-data-21/src/test/java/org/redisson/spring/data/connection/RedissonConnectionTest.java', 'insertions': 8, 'deletions': 0, 'lines': 8}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RedissonConnection.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.spring.data.connection.RedissonConnection.set(byte[],byte[],org.springframework.data.redis.core.types.Expiration,org.redisson.spring.data.connection.SetOption)', 'TOT': 6, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 3}]}, {'spoonFilePath': 'RedissonConnectionTest.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.spring.data.connection.RedissonConnectionTest.testSetExpiration()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/redisson/redisson/issues/2217,3.000277777777778,['bug'],return null when not used in pipeline / transaction,1.0,"['org.redisson.spring.data.connection.RedissonConnection.set(byte[],byte[],org.springframework.data.redis.core.types.Expiration,org.redisson.spring.data.connection.SetOption)']",['22ddb6a6711acda0e088db99b961c0d60801bc7c'],,"['redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection', 'redisson-spring-data/redisson-spring-data-21/src/main/java/org/redisson/spring/data/connection']",6.0,9.0,15.0,2.0,0.0,1.0,6.0,0.0,3.0,3.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,redisson
42201,2019-06-07 02:23:14,wangtora,"What I want to do is depending on PRINCIPAL_NAME_INDEX_NAME in redis to control the Spring Security's maximum session management through SpringSessionBackedSessionRegistry class.

The first look at RedissonSessionRepository.save() confused me that it is an empty method which says ""session changes are stored in real-time"". In comparison, the standard RedisOperationsSessionRepository.save() of spring-session-data-redis has codes to create PRINCIPAL_NAME_INDEX_NAME. In fact, these codes are in RedisOperationsSessionRepository$RedisSession.saveDelta().

### Expected behavior
The PRINCIPAL_NAME_INDEX_NAME key is created with Spring Security's principal information

### Actual behavior
The PRINCIPAL_NAME_INDEX_NAME key is not created

### Steps to reproduce or test case
Using Spring Boot 2.1.3/Spring Security 5.1.4/Spring Session 2.1.4, during which the Spring Session java configuration is:
```java
@EnableRedissonHttpSession(keyPrefix = ""xxx:"")
public class SessionConfig {
    @Bean
    public static ConfigureRedisAction configureRedisAction() {
        return ConfigureRedisAction.NO_OP;
    }
}
```

### Redis version
5.0.0 on AWS Elasticache
### Redisson version
3.11.0
### Redisson configuration
```yaml
clusterServersConfig:
   retryAttempts: 6
   retryInterval: 20000
   readMode: ""MASTER_SLAVE""
   nodeAddresses:
   - ""redis://xxx.xxxxxx.clustercfg.apne1.cache.amazonaws.com:6379""
   scanInterval: 5000
```",2019-06-12 07:51:34,"[{'commitHash': '8d78bf5197076927a1f9c81defbece346a9f0359', 'commitGHEventType': 'referenced', 'commitUser': 'mrniko', 'commitParents': ['d1a8936aecc1880f48831bf55862f749bf833348'], 'nameRev': '8d78bf5197076927a1f9c81defbece346a9f0359 tags/redisson-3.11.1~30', 'commitMessage': 'Fixed - PRINCIPAL_NAME_INDEX_NAME key is not created in redis. SessionExpiredEvent is not triggered. #2153\n', 'commitDateTime': '2019-06-12 10:51:40', 'authoredDateTime': '2019-06-12 10:51:40', 'commitGitStats': [{'filePath': 'redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java', 'insertions': 69, 'deletions': 47, 'lines': 116}, {'filePath': 'redisson/src/main/java/org/redisson/spring/session/config/RedissonHttpSessionConfiguration.java', 'insertions': 0, 'deletions': 2, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RedissonSessionRepository.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.findById(java.lang.String)', 'TOT': 7, 'UPD': 3, 'INS': 2, 'MOV': 0, 'DEL': 2}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.updateExpiration()', 'TOT': 8, 'UPD': 3, 'INS': 1, 'MOV': 3, 'DEL': 1}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.deleteById(java.lang.String)', 'TOT': 5, 'UPD': 1, 'INS': 2, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.onMessage(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)', 'TOT': 24, 'UPD': 4, 'INS': 8, 'MOV': 8, 'DEL': 4}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.delete()', 'TOT': 3, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.load()', 'TOT': 17, 'UPD': 2, 'INS': 0, 'MOV': 14, 'DEL': 1}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession', 'TOT': 10, 'UPD': 0, 'INS': 2, 'MOV': 6, 'DEL': 2}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.setAttribute(java.lang.String,java.lang.Object)', 'TOT': 6, 'UPD': 0, 'INS': 2, 'MOV': 2, 'DEL': 2}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.removeAttribute(java.lang.String)', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.getSessionAttrNameKey(java.lang.String)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.loadSession(java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.getExpiredKey(java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.getExpiredKeyPrefix()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.changeSessionId()', 'TOT': 6, 'UPD': 0, 'INS': 6, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RedissonHttpSessionConfiguration.java', 'spoonMethods': []}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'e356c1e3d4b8d3787a6876a3aaf1157e953fb835', 'commitGHEventType': 'referenced', 'commitUser': 'mrniko', 'commitParents': ['8d78bf5197076927a1f9c81defbece346a9f0359'], 'nameRev': 'e356c1e3d4b8d3787a6876a3aaf1157e953fb835 tags/redisson-3.11.1~29', 'commitMessage': 'Fixed - SessionExpiredEvent is not triggered. #2153\n', 'commitDateTime': '2019-06-13 15:58:57', 'authoredDateTime': '2019-06-13 15:58:57', 'commitGitStats': [{'filePath': 'redisson/src/main/java/org/redisson/spring/session/RedissonSessionRepository.java', 'insertions': 1, 'deletions': 0, 'lines': 1}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RedissonSessionRepository.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.updateExpiration()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/redisson/redisson/issues/2153,5.000277777777778,['bug'],The PRINCIPAL_NAME_INDEX_NAME key is not created in redis,2.0,"['org.redisson.spring.session.RedissonSessionRepository.RedissonSession.updateExpiration()', 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.delete()', 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.load()', 'org.redisson.spring.session.RedissonSessionRepository.getExpiredKeyPrefix()', 'org.redisson.spring.session.RedissonSessionRepository', 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.setAttribute(java.lang.String,java.lang.Object)', 'org.redisson.spring.session.RedissonSessionRepository.getExpiredKey(java.lang.String)', 'org.redisson.spring.session.RedissonSessionRepository.onMessage(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)', 'org.redisson.spring.session.RedissonSessionRepository.deleteById(java.lang.String)', 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.removeAttribute(java.lang.String)', 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession', 'org.redisson.spring.session.RedissonSessionRepository.getSessionAttrNameKey(java.lang.String)', 'org.redisson.spring.session.RedissonSessionRepository.loadSession(java.lang.String)', 'org.redisson.spring.session.RedissonSessionRepository.RedissonSession.changeSessionId()', 'org.redisson.spring.session.RedissonSessionRepository.findById(java.lang.String)']","['8d78bf5197076927a1f9c81defbece346a9f0359', 'e356c1e3d4b8d3787a6876a3aaf1157e953fb835']",,"['redisson/src/main/java/org/redisson/spring/session', 'redisson/src/main/java/org/redisson/spring/session/config']",70.0,49.0,119.0,2.0,14.0,15.0,96.0,37.0,30.0,15.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,redisson
42524,2016-09-30 11:57:30,mrniko,,2016-09-30 11:57:54,"[{'commitHash': '2e9f59b2ab6b8633fb8d2a68be20383bb7e373e9', 'commitGHEventType': 'referenced', 'commitUser': 'mrniko', 'commitParents': ['5912e3a081776af53a84ce07e4b8a28aa417e4b9'], 'nameRev': '2e9f59b2ab6b8633fb8d2a68be20383bb7e373e9 tags/redisson-parent-2.5.0~31', 'commitMessage': 'Cyclic dependencies during LiveObjectService.detach process lead to stackoverflow #642\n', 'commitDateTime': '2016-09-30 14:57:47', 'authoredDateTime': '2016-09-30 14:57:47', 'commitGitStats': [{'filePath': 'redisson/src/main/java/org/redisson/RedissonLiveObjectService.java', 'insertions': 24, 'deletions': 3, 'lines': 27}, {'filePath': 'redisson/src/test/java/org/redisson/RedissonLiveObjectServiceTest.java', 'insertions': 35, 'deletions': 1, 'lines': 36}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RedissonLiveObjectService.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.RedissonLiveObjectService.detach(java.lang.Object)', 'TOT': 9, 'UPD': 0, 'INS': 1, 'MOV': 5, 'DEL': 3}, {'spoonMethodName': 'org.redisson.RedissonLiveObjectService.detach(java.lang.Object,java.util.Map)', 'TOT': 7, 'UPD': 0, 'INS': 7, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RedissonLiveObjectServiceTest.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.RedissonLiveObjectServiceTest.testCyclicRefsDuringDetach()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.redisson.RedissonLiveObjectServiceTest.Order', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.redisson.RedissonLiveObjectServiceTest.Order.setCustomer(org.redisson.RedissonLiveObjectServiceTest$Customer)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.redisson.RedissonLiveObjectServiceTest.Order.getCustomer()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/redisson/redisson/issues/642,0.0002777777777777778,['bug'],Cyclic dependencies during LiveObjectService.detach process lead to stackoverflow,1.0,"['org.redisson.RedissonLiveObjectService.detach(java.lang.Object)', 'org.redisson.RedissonLiveObjectService.detach(java.lang.Object,java.util.Map)']",['2e9f59b2ab6b8633fb8d2a68be20383bb7e373e9'],,['redisson/src/main/java/org/redisson'],24.0,3.0,27.0,1.0,0.0,2.0,16.0,5.0,8.0,3.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,redisson
42546,2016-05-30 09:54:38,ursbrbalaji,"After updating to version 2.2.14 RKeys.getKeysByPattern is doing infinite scans when there is not even 1 key by this pattern. It was working fine earlier.

1464601787.027739 [0 127.0.0.1:53406] ""SCAN"" ""14"" ""MATCH"" ""XXX__""
1464601787.027892 [0 127.0.0.1:53405] ""SCAN"" ""0"" ""MATCH"" ""XXX__""
1464601787.028022 [0 127.0.0.1:53401] ""SCAN"" ""14"" ""MATCH"" ""XXX__""
1464601787.028161 [0 127.0.0.1:53402] ""SCAN"" ""0"" ""MATCH"" ""XXX__""
1464601787.028317 [0 127.0.0.1:53407] ""SCAN"" ""14"" ""MATCH"" ""XXX__""
1464601787.028456 [0 127.0.0.1:53406] ""SCAN"" ""0"" ""MATCH"" ""XXX__""
1464601787.028631 [0 127.0.0.1:53405] ""SCAN"" ""14"" ""MATCH"" ""XXX__""
1464601787.028775 [0 127.0.0.1:53401] ""SCAN"" ""0"" ""MATCH"" ""XXX__""
1464601787.028944 [0 127.0.0.1:53402] ""SCAN"" ""14"" ""MATCH"" ""XXX__""
1464601787.029096 [0 127.0.0.1:53407] ""SCAN"" ""0"" ""MATCH"" ""XXX__""
1464601787.029262 [0 127.0.0.1:53406] ""SCAN"" ""14"" ""MATCH"" ""XXX_*""

It works fine when there is at least 1 key with this pattern
",2016-06-08 10:50:06,"[{'commitHash': '645b1240dce40e4757eb20a85b2da165dd710fda', 'commitGHEventType': 'referenced', 'commitUser': 'mrniko', 'commitParents': ['f8dfdb715490e3b8a3bc44a412e8df95538cc041'], 'nameRev': '645b1240dce40e4757eb20a85b2da165dd710fda tags/redisson-2.2.15~4', 'commitMessage': 'Infinity loop with iterator fixed. #515\n', 'commitDateTime': '2016-06-01 14:34:19', 'authoredDateTime': '2016-06-01 14:34:19', 'commitGitStats': [{'filePath': 'src/main/java/org/redisson/RedissonBaseIterator.java', 'insertions': 12, 'deletions': 6, 'lines': 18}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RedissonBaseIterator.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.RedissonBaseIterator.hasNext()', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'eeba238f42ed707979afe85b095d9c4e3cd0531a', 'commitGHEventType': 'referenced', 'commitUser': 'mrniko', 'commitParents': ['6a263fc41ff1810691c02b77a5e2743f8f5b8886'], 'nameRev': 'eeba238f42ed707979afe85b095d9c4e3cd0531a tags/redisson-2.2.15~2', 'commitMessage': 'Map iterator fixed. #515\n', 'commitDateTime': '2016-06-08 13:40:04', 'authoredDateTime': '2016-06-08 13:40:04', 'commitGitStats': [{'filePath': 'src/main/java/org/redisson/RedissonBaseMapIterator.java', 'insertions': 12, 'deletions': 6, 'lines': 18}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RedissonBaseMapIterator.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.RedissonBaseMapIterator.hasNext()', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'a4f0473514c654a597017cd4c10aec07c4f467ca', 'commitGHEventType': 'referenced', 'commitUser': 'mrniko', 'commitParents': ['eeba238f42ed707979afe85b095d9c4e3cd0531a'], 'nameRev': 'a4f0473514c654a597017cd4c10aec07c4f467ca tags/redisson-2.2.15~1', 'commitMessage': 'Iterator infinite scan test added.  #515\n', 'commitDateTime': '2016-06-08 13:49:56', 'authoredDateTime': '2016-06-08 13:49:56', 'commitGitStats': [{'filePath': 'src/test/java/org/redisson/RedissonTest.java', 'insertions': 28, 'deletions': 0, 'lines': 28}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RedissonTest.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.RedissonTest.testConnectionListener().1', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.redisson.RedissonTest.testConnectionListener().1.onDisconnect(java.net.InetSocketAddress)', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.redisson.RedissonTest.testConnectionListener().1.onConnect(java.net.InetSocketAddress)', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.redisson.RedissonTest.testIterator()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/redisson/redisson/issues/515,9.000277777777777,['bug'],RKeys.getKeysByPattern infinite scan when no keys are present,2.0,"['org.redisson.RedissonBaseIterator.hasNext()', 'org.redisson.RedissonBaseMapIterator.hasNext()']","['645b1240dce40e4757eb20a85b2da165dd710fda', 'eeba238f42ed707979afe85b095d9c4e3cd0531a', 'a4f0473514c654a597017cd4c10aec07c4f467ca']",,['src/main/java/org/redisson'],24.0,12.0,36.0,2.0,0.0,2.0,8.0,4.0,2.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,redisson
42629,2014-12-04 15:27:38,alycecil,"line 629 uses addMapValues for sadd rather than addValues

This causes JsonJacksonCodec to fail on Longs stored with the mapObjectMapper to fail to be deparsed by objectMapper; 

Change line 629
-         CommandArgs<K, V> args = new CommandArgs<K, V>(codec).addKey(key).addMapValues(members);
-        CommandArgs<K, V> args = new CommandArgs<K, V>(codec).addKey(key).addValues(members);

---

Test code follows : 

import org.junit.Ignore;

@Ignore
public class SimpleBean {
    private Long lng;

```
public Long getLng() {
    return lng;
}
```

}

---

@Test
    public void saveLong() {
        SimpleBean cdb = new SimpleBean();
        cdb.setLng(5l);

```
    String name = ""IS_DEBUG_SET"";

    {
        Redisson redis = RedissonUtil.getRedissonClient();
        RSet<Object> set = redis.getSet(name);

        set.clear();
    }
    {
        Redisson redis = RedissonUtil.getRedissonClient();
        RSet<SimpleBean> set = redis.getSet(name);
        set.add(cdb);
    }
    {
        Redisson redis = RedissonUtil.getRedissonClient();
        RSet<SimpleBean> set = redis.getSet(name);

        assertFalse(""set may not be empty"", set.isEmpty());
        for (SimpleBean e : set) {
            assertEquals(""key must be a long"", (Long.class), e.getLng());
            assertEquals(""keys must be identical by value"", cdb.getLng(), e.getLng());
        }
    }

}
```
",2014-12-15 17:36:10,"[{'commitHash': 'aec7ec18a63c1b336e279016925b283d6b7b35e0', 'commitGHEventType': 'referenced', 'commitUser': 'mrniko', 'commitParents': ['05d2a7cf8cf7de1c91e9ec8766eb5b3afb939152'], 'nameRev': 'aec7ec18a63c1b336e279016925b283d6b7b35e0 tags/redisson-1.1.7~9', 'commitMessage': 'RSet.add serialization fixed. #102\n', 'commitDateTime': '2014-12-04 19:55:37', 'authoredDateTime': '2014-12-04 19:55:37', 'commitGitStats': [{'filePath': 'src/main/java/com/lambdaworks/redis/RedisAsyncConnection.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'src/test/java/org/redisson/RedissonSetTest.java', 'insertions': 28, 'deletions': 5, 'lines': 33}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RedisAsyncConnection.java', 'spoonMethods': [{'spoonMethodName': 'com.lambdaworks.redis.RedisAsyncConnection.sadd(java.lang.Object,java.lang.Object[])', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RedissonSetTest.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.RedissonSetTest.SimpleBean', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.redisson.RedissonSetTest.testAddBean()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '0401d7b811ecec1a81a2cc927aab58569b89a501', 'commitGHEventType': 'referenced', 'commitUser': 'mrniko', 'commitParents': ['3355310d57b1ed6d083c707616cada0fc974b7f4'], 'nameRev': '0401d7b811ecec1a81a2cc927aab58569b89a501 tags/redisson-1.1.7~3', 'commitMessage': 'RSet iteration fixed. #102\n', 'commitDateTime': '2014-12-15 16:54:25', 'authoredDateTime': '2014-12-15 16:54:25', 'commitGitStats': [{'filePath': 'src/main/java/com/lambdaworks/redis/RedisAsyncConnection.java', 'insertions': 3, 'deletions': 2, 'lines': 5}, {'filePath': 'src/main/java/com/lambdaworks/redis/output/ValueSetScanOutput.java', 'insertions': 23, 'deletions': 0, 'lines': 23}, {'filePath': 'src/test/java/org/redisson/RedissonSetTest.java', 'insertions': 18, 'deletions': 0, 'lines': 18}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RedisAsyncConnection.java', 'spoonMethods': [{'spoonMethodName': 'com.lambdaworks.redis.RedisAsyncConnection.sadd(java.lang.Object,java.lang.Object[])', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ValueSetScanOutput.java', 'spoonMethods': [{'spoonMethodName': 'com.lambdaworks.redis.output.ValueSetScanOutput', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RedissonSetTest.java', 'spoonMethods': [{'spoonMethodName': 'org.redisson.RedissonSetTest.testAddLong()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/redisson/redisson/issues/102,11.000277777777777,['bug'],SAdd in RedisAsyncConnection uses wrong AddValues ,2.0,"['com.lambdaworks.redis.RedisAsyncConnection.sadd(java.lang.Object,java.lang.Object[])', 'com.lambdaworks.redis.output.ValueSetScanOutput']","['aec7ec18a63c1b336e279016925b283d6b7b35e0', '0401d7b811ecec1a81a2cc927aab58569b89a501']",,"['src/main/java/com/lambdaworks/redis', 'src/main/java/com/lambdaworks/redis/output']",27.0,3.0,30.0,2.0,2.0,2.0,3.0,0.0,1.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,redisson
42729,2016-10-18 00:11:26,consp1racy,"Version used: 1.0.0

UUID (persisted as `ByteArray`) cannot be used with `eq` method. Are byte arrays compared by reference?
",2016-10-21 03:33:50,"[{'commitHash': 'f36e23b44ff6bbb933cc7287463c0916b203aff3', 'commitGHEventType': 'closed', 'commitUser': 'npurushe', 'commitParents': ['a48558cd68d4b6d43cc6c9027dae6f86d1f25000'], 'nameRev': 'f36e23b44ff6bbb933cc7287463c0916b203aff3 tags/1.0.1~4', 'commitMessage': 'Resolve #303 Android inline blob literals when used in query statements\n', 'commitDateTime': '2016-10-20 20:37:36', 'authoredDateTime': '2016-10-20 20:37:36', 'commitGitStats': [{'filePath': 'requery-android/src/main/java/io/requery/android/sqlcipher/SqlCipherPreparedStatement.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'requery-android/src/main/java/io/requery/android/sqlite/BasePreparedStatement.java', 'insertions': 18, 'deletions': 1, 'lines': 19}, {'filePath': 'requery-android/src/main/java/io/requery/android/sqlite/SqlitePreparedStatement.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'requery-android/src/main/java/io/requery/android/sqlitex/SqlitexPreparedStatement.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'SqlCipherPreparedStatement.java', 'spoonMethods': [{'spoonMethodName': 'io.requery.android.sqlcipher.SqlCipherPreparedStatement.bindBlob(int,byte[])', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}, {'spoonFilePath': 'BasePreparedStatement.java', 'spoonMethods': [{'spoonMethodName': 'io.requery.android.sqlite.BasePreparedStatement', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'io.requery.android.sqlite.BasePreparedStatement.bindBlobLiteral(int,byte[])', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'SqlitePreparedStatement.java', 'spoonMethods': [{'spoonMethodName': 'io.requery.android.sqlite.SqlitePreparedStatement.bindBlob(int,byte[])', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}, {'spoonFilePath': 'SqlitexPreparedStatement.java', 'spoonMethods': [{'spoonMethodName': 'io.requery.android.sqlitex.SqlitexPreparedStatement.bindBlob(int,byte[])', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/requery/requery/issues/303,3.000277777777778,['bug'],Cannot compare persisted UUID,1.0,"['io.requery.android.sqlite.SqlitePreparedStatement.bindBlob(int,byte[])', 'io.requery.android.sqlite.BasePreparedStatement', 'io.requery.android.sqlite.BasePreparedStatement.bindBlobLiteral(int,byte[])', 'io.requery.android.sqlitex.SqlitexPreparedStatement.bindBlob(int,byte[])', 'io.requery.android.sqlcipher.SqlCipherPreparedStatement.bindBlob(int,byte[])']",['f36e23b44ff6bbb933cc7287463c0916b203aff3'],,"['requery-android/src/main/java/io/requery/android/sqlite', 'requery-android/src/main/java/io/requery/android/sqlcipher', 'requery-android/src/main/java/io/requery/android/sqlitex']",21.0,4.0,25.0,4.0,0.0,5.0,14.0,6.0,4.0,4.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,requery
42861,2015-03-18 12:13:48,theprivateland,"Guys Im testing migration from jersey and have tested few frameworks with angle of smooth workflow.

Restlet is a winner - most flexible, doesn't do any oddity with memory and server shuts down nicely.

However, embarasingly, its has seriosuly annoying bug:

```
java.lang.IllegalArgumentException: URLDecoder: Illegal hex characters in escape (%) pattern [...]

```

It tries to double encode request parameters (I think its form parameters case or query) when used with standard jax-rs services.

None of other libraries has this problem. 

Is there a way it can be fixed any time soon? It is something it's been reported at 2.09 version... very annoying. 

I wish I can use Restlet but this bug is a deal breaker.

I know @Encode will stop decoding the parameter, but I need to decode it from url encoding...
",2015-05-08 10:08:29,"[{'commitHash': 'c60c99b70812868301e90b08582207e16d2cd05e', 'commitGHEventType': 'referenced', 'commitUser': 'thboileau', 'commitParents': ['c9090548faf247b2ca02db242ec3dbd2c556f070'], 'nameRev': 'c60c99b70812868301e90b08582207e16d2cd05e tags/2.3.2~12', 'commitMessage': 'Fixed Restlet JAX-RS encoding problem when using @FormParam annotation. Issue #1038.\n', 'commitDateTime': '2015-04-18 17:55:53', 'authoredDateTime': '2015-04-18 17:55:53', 'commitGitStats': [{'filePath': 'build/tmpl/text/changes.txt', 'insertions': 2, 'deletions': 0, 'lines': 2}, {'filePath': 'modules/org.restlet.ext.jaxrs/src/org/restlet/ext/jaxrs/internal/wrappers/params/ParameterList.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ParameterList.java', 'spoonMethods': [{'spoonMethodName': 'org.restlet.ext.jaxrs.internal.wrappers.params.ParameterList.FormParamGetter.getParamValue()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/restlet/restlet-framework-java/issues/1038,50.000277777777775,"['Extension: JAX-RS', 'Priority: critical', 'State: new', 'Type: bug']",Restlet JAX-RS encoding problem - CRITICAL.,1.0,['org.restlet.ext.jaxrs.internal.wrappers.params.ParameterList.FormParamGetter.getParamValue()'],['c60c99b70812868301e90b08582207e16d2cd05e'],,['modules/org.restlet.ext.jaxrs/src/org/restlet/ext/jaxrs/internal/wrappers/params'],1.0,1.0,2.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,restlet-framework-java
44094,2018-05-03 15:26:00,Pyknic,The generated `hashCode()` attempts to take `Integer.hashCode(myEntity.getMyIntField())` even though `myEntity.getMyIntField()` returns an `OptionalInt`.,2018-05-03 15:40:48,"[{'commitHash': 'c5cb445c41f9cf456f6ae81796e6c3042ded3e31', 'commitGHEventType': 'referenced', 'commitUser': 'Pyknic', 'commitParents': ['18415ee8d86b7013903343b25d46171b34f6de98'], 'nameRev': 'c5cb445c41f9cf456f6ae81796e6c3042ded3e31 tags/3.1.0~3^2~27', 'commitMessage': 'generator-standard: Fix #628 handle Optionals properly in generated hashCode\n\n', 'commitDateTime': '2018-05-03 17:40:32', 'authoredDateTime': '2018-05-03 17:40:32', 'commitGitStats': [{'filePath': 'generator-parent/generator-standard/src/main/java/com/speedment/generator/standard/entity/GeneratedEntityImplTranslator.java', 'insertions': 22, 'deletions': 9, 'lines': 31}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'GeneratedEntityImplTranslator.java', 'spoonMethods': [{'spoonMethodName': 'com.speedment.generator.standard.entity.GeneratedEntityImplTranslator.hashCodeMethod()', 'TOT': 3, 'UPD': 2, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'com.speedment.generator.standard.entity.GeneratedEntityImplTranslator.equalsMethod()', 'TOT': 6, 'UPD': 2, 'INS': 1, 'MOV': 3, 'DEL': 0}, {'spoonMethodName': 'com.speedment.generator.standard.entity.GeneratedEntityImplTranslator.hashCodeMethod(com.speedment.common.codegen.model.File)', 'TOT': 6, 'UPD': 0, 'INS': 6, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'com.speedment.generator.standard.entity.GeneratedEntityImplTranslator.makeCodeGenModel(com.speedment.common.codegen.model.File)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/speedment/speedment/issues/628,0.0002777777777777778,"['bug', 'fixed']",Generated code doesn't compile when custom type mapper maps to a nullable primitive type,1.0,"['com.speedment.generator.standard.entity.GeneratedEntityImplTranslator.hashCodeMethod()', 'com.speedment.generator.standard.entity.GeneratedEntityImplTranslator.equalsMethod()', 'com.speedment.generator.standard.entity.GeneratedEntityImplTranslator.makeCodeGenModel(com.speedment.common.codegen.model.File)', 'com.speedment.generator.standard.entity.GeneratedEntityImplTranslator.hashCodeMethod(com.speedment.common.codegen.model.File)']",['c5cb445c41f9cf456f6ae81796e6c3042ded3e31'],,['generator-parent/generator-standard/src/main/java/com/speedment/generator/standard/entity'],22.0,9.0,31.0,1.0,4.0,4.0,16.0,4.0,8.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,speedment
44284,2016-05-06 22:48:16,Pyknic,"If a table has a column that is nullable and has a foreign key to another table, hierarchial JsonEncoders for that table will crash if given a null reference. This is easily fixed.
",2016-05-11 16:20:39,"[{'commitHash': '4b8ee7c7a162cc3855a63863e89c078bbc9e5fb6', 'commitGHEventType': 'closed', 'commitUser': 'minborg', 'commitParents': ['b5aa5c1470d5d5ef2d86465df1b066d2b66a6dcd'], 'nameRev': '4b8ee7c7a162cc3855a63863e89c078bbc9e5fb6 tags/2.3.3^2~4', 'commitMessage': 'Fix #200 if given entity is null, return ""null"" instead of throwing exception\n', 'commitDateTime': '2016-05-06 15:49:12', 'authoredDateTime': '2016-05-06 15:49:07', 'commitGitStats': [{'filePath': 'src/main/java/com/speedment/encoder/JsonEncoder.java', 'insertions': 1, 'deletions': 2, 'lines': 3}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'JsonEncoder.java', 'spoonMethods': [{'spoonMethodName': 'com.speedment.encoder.JsonEncoder.apply(java.lang.Object)', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/speedment/speedment/issues/200,4.000277777777778,"['bug', 'fixed']","If JsonEncoder is used to create hierarchial objects, it may crash on NULL columns",1.0,['com.speedment.encoder.JsonEncoder.apply(java.lang.Object)'],['4b8ee7c7a162cc3855a63863e89c078bbc9e5fb6'],,['src/main/java/com/speedment/encoder'],1.0,2.0,3.0,1.0,0.0,1.0,3.0,1.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,speedment
44537,2020-05-25 08:46:11,qwazer,"**Bug description**
AbstractCursorItemReader has parameter ""connectionAutoCommit"" that is not configurable with JdbcCursorItemReaderBuilder

**Expected behavior**
""connectionAutoCommit"" can be configured with JdbcCursorItemReaderBuilder

**Additional info**
The parameter ""connectionAutoCommit""  was added in https://github.com/spring-projects/spring-batch/pull/446
",2020-06-03 09:22:39,"[{'commitHash': 'bbabe0263ac60777f65a6ba7ea1fbf323e7d8f81', 'commitGHEventType': 'referenced', 'commitUser': 'benas', 'commitParents': ['8a6a2bd19a0ab8a39d356520d84a3e2575ad3591'], 'nameRev': 'bbabe0263ac60777f65a6ba7ea1fbf323e7d8f81 tags/4.3.0-M1~8', 'commitMessage': 'Add connectionAutoCommit property in JdbcCursorItemReaderBuilder\n\nIssue #3717\n', 'commitDateTime': '2020-06-02 21:13:28', 'authoredDateTime': '2020-05-26 18:43:20', 'commitGitStats': [{'filePath': 'spring-batch-infrastructure/src/main/java/org/springframework/batch/item/database/builder/JdbcCursorItemReaderBuilder.java', 'insertions': 19, 'deletions': 1, 'lines': 20}, {'filePath': 'spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/builder/JdbcCursorItemReaderBuilderTests.java', 'insertions': 4, 'deletions': 1, 'lines': 5}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'JdbcCursorItemReaderBuilder.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder.connectionAutoCommit(boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder.build()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'JdbcCursorItemReaderBuilderTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilderTests.testOtherProperties()', 'TOT': 3, 'UPD': 0, 'INS': 2, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '6052852db6f3e7b6f1606d57fd5a90f0b0acc74e', 'commitGHEventType': 'referenced', 'commitUser': 'benas', 'commitParents': ['fe222d323e5f958fa503b6cd74e993c10318ecf8'], 'nameRev': '6052852db6f3e7b6f1606d57fd5a90f0b0acc74e tags/4.2.3.RELEASE~3', 'commitMessage': 'Add connectionAutoCommit property in JdbcCursorItemReaderBuilder\n\nIssue #3717\n', 'commitDateTime': '2020-06-03 11:12:57', 'authoredDateTime': '2020-05-26 18:43:20', 'commitGitStats': [{'filePath': 'spring-batch-infrastructure/src/main/java/org/springframework/batch/item/database/builder/JdbcCursorItemReaderBuilder.java', 'insertions': 19, 'deletions': 1, 'lines': 20}, {'filePath': 'spring-batch-infrastructure/src/test/java/org/springframework/batch/item/database/builder/JdbcCursorItemReaderBuilderTests.java', 'insertions': 4, 'deletions': 1, 'lines': 5}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'JdbcCursorItemReaderBuilder.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder.connectionAutoCommit(boolean)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder.build()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'JdbcCursorItemReaderBuilderTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilderTests.testOtherProperties()', 'TOT': 3, 'UPD': 0, 'INS': 2, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-batch/issues/3717,9.000277777777777,"['has: backports', 'in: infrastructure', 'type: bug']","Unable to set ""connectionAutoCommit"" parameter with JdbcCursorItemReaderBuilder",1.0,"['org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder.connectionAutoCommit(boolean)', 'org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder', 'org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder.build()']",['bbabe0263ac60777f65a6ba7ea1fbf323e7d8f81'],,['spring-batch-infrastructure/src/main/java/org/springframework/batch/item/database/builder'],19.0,1.0,20.0,1.0,0.0,3.0,3.0,0.0,3.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,spring-batch
45625,2019-10-10 14:28:36,spring-issuemaster,"**[Mahmoud Ben Hassine](https://jira.spring.io/secure/ViewProfile.jspa?name=mbenhassine)** opened **[BATCH-2848](https://jira.spring.io/browse/BATCH-2848?redirect=false)** and commented

Using the `FlatFileItemReaderBuilder`, when I provide a `LineTokenizer` but no `FieldSetMapper`, the error message I get is `No LineTokenizer implementation was provided` while it should be `No FieldSetMapper implementation was provided` instead. Here is a failing test:

```java
@Test
public void testErrorMessageWhenNoFieldSetMapperIsProvided() {
	try {
		new FlatFileItemReaderBuilder<Foo>()
				.name(""fooReader"")
				.resource(getResource(""1;2;3""))
				.lineTokenizer(line -> new DefaultFieldSet(line.split("";"")))
				.build();
	} catch (IllegalStateException exception) {
		String exceptionMessage = exception.getMessage();
		if (exceptionMessage.equals(""No LineTokenizer implementation was provided."")) {
			fail(""Should not throw 'No LineTokenizer implementation was provided.'"" + 
				 "" exception when a LineTokenizer is provided"");
		}
		assertEquals(""No FieldSetMapper implementation was provided."", exceptionMessage);
	}
}
```

This test fails with `java.lang.IllegalStateException: No LineTokenizer implementation was provided.` which is obviously incorrect since I provided an implementation of `LineTokenizer`. In this particular case, it should rather fail with `No FieldSetMapper implementation was provided.` since I did not provide a `FieldSetMapper`.

---

**Affects:** 4.2.0, 4.0.3, 4.1.2
",2020-03-17 22:45:16,"[{'commitHash': 'f94446878ba7e070c95b3b7e53d1f8491f1126c5', 'commitGHEventType': 'closed', 'commitUser': 'benas', 'commitParents': ['6ab141bb44bb86ee7aacd5d604fd37971a7344ee'], 'nameRev': 'f94446878ba7e070c95b3b7e53d1f8491f1126c5 tags/4.3.0-M1~52', 'commitMessage': 'Fix line tokenizer validation in FlatFileItemReaderBuilder\n\nResolves #766\n', 'commitDateTime': '2020-03-17 23:27:47', 'authoredDateTime': '2020-03-17 23:27:47', 'commitGitStats': [{'filePath': 'spring-batch-infrastructure/src/main/java/org/springframework/batch/item/file/builder/FlatFileItemReaderBuilder.java', 'insertions': 2, 'deletions': 2, 'lines': 4}, {'filePath': 'spring-batch-infrastructure/src/test/java/org/springframework/batch/item/file/builder/FlatFileItemReaderBuilderTests.java', 'insertions': 19, 'deletions': 1, 'lines': 20}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'FlatFileItemReaderBuilder.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.batch.item.file.builder.FlatFileItemReaderBuilder.build()', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 1}]}, {'spoonFilePath': 'FlatFileItemReaderBuilderTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.batch.item.file.builder.FlatFileItemReaderBuilderTests.testErrorMessageWhenNoFieldSetMapperIsProvided()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-batch/issues/766,159.00027777777777,"['has: backports', 'in: infrastructure', 'type: bug']",Incorrect error message when no FieldSetMapper is provided [BATCH-2848],1.0,['org.springframework.batch.item.file.builder.FlatFileItemReaderBuilder.build()'],['f94446878ba7e070c95b3b7e53d1f8491f1126c5'],,['spring-batch-infrastructure/src/main/java/org/springframework/batch/item/file/builder'],2.0,2.0,4.0,1.0,0.0,1.0,2.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-batch
45828,2020-01-27 17:32:45,nebhale,"Currently, when attempting to use the Maven plugin to build an image using Cloud Native Buildpacks (`spring-boot:build-image`) if one of the phases results in a failure, the plugin continues on rather than failing immediately.  As an example, specifying an invalid value for  `$BP_JAVA_VERSION` results in the build failing but some sort of image being exported:

```shell
 > Running builder
    [builder]     
    [builder]     Cloud Foundry OpenJDK Buildpack v1.0.80
    [builder]     
    [builder]     Cloud Foundry OpenJDK Buildpack v1.0.80
    [builder]       no valid dependencies for openjdk-jre, 13.0.2, and io.buildpacks.stacks.bionic in [(openjdk-jre, 8.0.232, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (openjdk-jre, 11.0.5, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (openjdk-jre, 13.0.1, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (openjdk-jdk, 8.0.232, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (openjdk-jdk, 11.0.5, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (openjdk-jdk, 13.0.1, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3])]
    [builder]     ERROR: failed to build: exit status 102
 > Running exporter
    [exporter]    Adding layer 'app'
    [exporter]    Adding layer 'config'
    [exporter]    Reusing layer 'launcher'
    [exporter]    Reusing layer 'org.cloudfoundry.openjdk:openjdk-jre'
    [exporter]    Reusing layer 'org.cloudfoundry.jvmapplication:executable-jar'
    [exporter]    Reusing layer 'org.cloudfoundry.springboot:spring-boot'
    [exporter]    Reusing layer 'org.cloudfoundry.springautoreconfiguration:auto-reconfiguration'
    [exporter]    ERROR: failed to export: read build metadata: open /layers/config/metadata.toml: no such file or directory
 > Running cacher
    [cacher]      Reusing layer 'org.cloudfoundry.openjdk:2f08c469c9a8adea1b6ee3444ba2a8242a7e99d87976a077faf037a9eb7f884b'
    [cacher]      Reusing layer 'org.cloudfoundry.jvmapplication:executable-jar'
    [cacher]      Reusing layer 'org.cloudfoundry.springboot:spring-boot'
    [cacher]      Reusing layer 'org.cloudfoundry.springautoreconfiguration:46ab131165317d91fd4ad3186abf755222744e2d277dc413def06f3ad45ab150'
Successfully built image 'docker.io/library/build-image-test:0.0.1-SNAPSHOT'
```

The same failure simulated on `pack` results in the following:

```shell
$ pack build applications/jar --path applications/jar --builder cloudfoundry/cnb:bionic --env BP_JAVA_VERSION=""13.0.1""
bionic: Pulling from cloudfoundry/cnb
Digest: sha256:efe9b17ac151ab53d8eaa1149d0fd44357f9cd0842a7bfb5a2894c02ae143ab7
Status: Image is up to date for cloudfoundry/cnb:bionic
base-cnb: Pulling from cloudfoundry/run
Digest: sha256:ba9998ae4bb32ab43a7966c537aa1be153092ab0c7536eeef63bcd6336cbd0db
Status: Image is up to date for cloudfoundry/run:base-cnb
===> DETECTING
[detector] 6 of 13 buildpacks participating
[detector] org.cloudfoundry.openjdk                   v1.1.8
[detector] org.cloudfoundry.jvmapplication            v1.0.136
[detector] org.cloudfoundry.tomcat                    v1.1.102
[detector] org.cloudfoundry.springboot                v1.1.2
[detector] org.cloudfoundry.distzip                   v1.0.171
[detector] org.cloudfoundry.springautoreconfiguration v1.0.187
===> ANALYZING
[analyzer] Restoring metadata for ""org.cloudfoundry.openjdk:java-security-properties"" from app image
[analyzer] Restoring metadata for ""org.cloudfoundry.openjdk:jvmkill"" from app image
[analyzer] Restoring metadata for ""org.cloudfoundry.openjdk:link-local-dns"" from app image
[analyzer] Restoring metadata for ""org.cloudfoundry.openjdk:memory-calculator"" from app image
[analyzer] Restoring metadata for ""org.cloudfoundry.openjdk:openjdk-jre"" from app image
[analyzer] Restoring metadata for ""org.cloudfoundry.openjdk:security-provider-configurer"" from app image
[analyzer] Restoring metadata for ""org.cloudfoundry.openjdk:class-counter"" from app image
[analyzer] Restoring metadata for ""org.cloudfoundry.openjdk:a3092627b082cb3cdbbe4b255d35687126aa604e6b613dcda33be9f7e1277162"" from cache
[analyzer] Restoring metadata for ""org.cloudfoundry.openjdk:897f16fe8e056395209e35d2384013bd1ff250e717465769079e3f4793628c34"" from cache
[analyzer] Restoring metadata for ""org.cloudfoundry.openjdk:90d40eab6959a7b4059c6409c4505040e8a04f75a481f7282e53430df3edda3e"" from cache
===> RESTORING
[restorer] Restoring data for ""org.cloudfoundry.openjdk:897f16fe8e056395209e35d2384013bd1ff250e717465769079e3f4793628c34"" from cache
[restorer] Restoring data for ""org.cloudfoundry.openjdk:90d40eab6959a7b4059c6409c4505040e8a04f75a481f7282e53430df3edda3e"" from cache
[restorer] Restoring data for ""org.cloudfoundry.openjdk:a3092627b082cb3cdbbe4b255d35687126aa604e6b613dcda33be9f7e1277162"" from cache
===> BUILDING
[builder] 
[builder] Cloud Foundry OpenJDK Buildpack v1.1.8
[builder] 
[builder] Cloud Foundry OpenJDK Buildpack v1.1.8
[builder]   no valid dependencies for openjdk-jre, 13.0.1, and io.buildpacks.stacks.bionic in [(openjdk-jre, 8.0.242, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (openjdk-jre, 11.0.6, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (openjdk-jre, 13.0.2, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (openjdk-jdk, 8.0.242, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (openjdk-jdk, 11.0.6, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (openjdk-jdk, 13.0.2, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (jvmkill, 1.16.0, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3]), (memory-calculator, 4.0.0, [io.buildpacks.stacks.bionic org.cloudfoundry.stacks.cflinuxfs3])]
[builder] ERROR: failed to build: exit status 102
ERROR: failed with status code: 7
```

Any failure state generated by the lifecycle should cause failure of the build of the image.",2020-01-30 00:38:41,"[{'commitHash': 'c6a6024062f9b581f56ef71d358b45fa1b715052', 'commitGHEventType': 'closed', 'commitUser': 'scottfrederick', 'commitParents': ['dc542b29d84b79351b0b94e7d67f4c780b0ad490'], 'nameRev': 'c6a6024062f9b581f56ef71d358b45fa1b715052 tags/v2.3.0.M2~148', 'commitMessage': 'Stop image building on error from builder\n\nPreviously, the image builder used by the build tool plugins ignored\nerrors from lifecycle phases and continued with subsequent phases.\n\nThis commit inspects the status of the builder container after each\nlifecycle phase and aborts the image building process if the exit\nstatus of the container after any phase is non-zero.\n\nFixes #19949\n', 'commitDateTime': '2020-01-29 17:51:32', 'authoredDateTime': '2020-01-29 17:51:32', 'commitGitStats': [{'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/BuilderException.java', 'insertions': 62, 'deletions': 0, 'lines': 62}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/build/Lifecycle.java', 'insertions': 6, 'deletions': 0, 'lines': 6}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/DockerApi.java', 'insertions': 14, 'deletions': 0, 'lines': 14}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatus.java', 'insertions': 75, 'deletions': 0, 'lines': 75}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderExceptionTests.java', 'insertions': 46, 'deletions': 0, 'lines': 46}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/BuilderTests.java', 'insertions': 45, 'deletions': 3, 'lines': 48}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/build/LifecycleTests.java', 'insertions': 16, 'deletions': 2, 'lines': 18}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/DockerApiTests.java', 'insertions': 21, 'deletions': 6, 'lines': 27}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/test/java/org/springframework/boot/buildpack/platform/docker/type/ContainerStatusTests.java', 'insertions': 46, 'deletions': 0, 'lines': 46}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/test/resources/org/springframework/boot/buildpack/platform/docker/container-wait-response.json', 'insertions': 3, 'deletions': 0, 'lines': 3}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/test/resources/org/springframework/boot/buildpack/platform/docker/type/container-status-error.json', 'insertions': 6, 'deletions': 0, 'lines': 6}, {'filePath': 'spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/test/resources/org/springframework/boot/buildpack/platform/docker/type/container-status-success.json', 'insertions': 3, 'deletions': 0, 'lines': 3}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'BuilderException.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.BuilderException', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Lifecycle.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.Lifecycle.run(org.springframework.boot.buildpack.platform.build.Phase)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DockerApi.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.buildpack.platform.docker.DockerApi.ContainerApi.wait(org.springframework.boot.buildpack.platform.docker.type.ContainerReference)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ContainerStatus.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.buildpack.platform.docker.type.ContainerStatus', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'BuilderExceptionTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.BuilderExceptionTests', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'BuilderTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.BuilderTests.buildInvokesBuildpack()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.BuilderTests.buildWhenBuilderReturnsErrorThrowsException()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.BuilderTests.mockDockerApiLifecycleError()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.BuilderTests.mockDockerApi()', 'TOT': 6, 'UPD': 0, 'INS': 4, 'MOV': 2, 'DEL': 0}]}, {'spoonFilePath': 'LifecycleTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.LifecycleTests.getCommand(org.springframework.boot.buildpack.platform.docker.type.ContainerConfig)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.LifecycleTests.executeWhenBuilderReturnsErrorThrowsException()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.LifecycleTests.executeExecutesPhases()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.LifecycleTests.executeOnlyUploadsContentOnce()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.LifecycleTests.executeWhenAleadyRunThrowsException()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.build.LifecycleTests.executeWhenCleanCacheClearsCache()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'DockerApiTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.buildpack.platform.docker.DockerApiTests.ContainerDockerApiTests.removeWhenReferenceIsNulllThrowsException()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.docker.DockerApiTests.emptyResponse()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.docker.DockerApiTests.responseOf(java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.docker.DockerApiTests.responseOf(java.lang.String).1.close()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.docker.DockerApiTests.responseOf(java.lang.String).1.getContent()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.docker.DockerApiTests.ContainerDockerApiTests.waitWhenReferenceIsNullThrowsException()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.buildpack.platform.docker.DockerApiTests.ContainerDockerApiTests.waitReturnsStatus()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ContainerStatusTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.buildpack.platform.docker.type.ContainerStatusTests', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/19949,2.000277777777778,['type: bug'],Image building ignores failures in CNB build phases,1.0,"['org.springframework.boot.buildpack.platform.build.Lifecycle.run(org.springframework.boot.buildpack.platform.build.Phase)', 'org.springframework.boot.buildpack.platform.build.BuilderException', 'org.springframework.boot.buildpack.platform.docker.type.ContainerStatus', 'org.springframework.boot.buildpack.platform.docker.DockerApi.ContainerApi.wait(org.springframework.boot.buildpack.platform.docker.type.ContainerReference)']",['c6a6024062f9b581f56ef71d358b45fa1b715052'],,['spring-boot-project/spring-boot-tools/spring-boot-buildpack-platform/src/main/java/org/springframework/boot/buildpack'],157.0,0.0,157.0,4.0,0.0,4.0,5.0,0.0,5.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
45906,2019-11-07 05:03:38,yimlin,"when ServletComponentRegisteringPostProcessor add @WebServlet, it requires an ScannedGenericBeanDefinition from an ClassPathScanningCandidateComponentProvider.

it works fine without Context-Indexer but wrong with Context-Indexer.
ClassPathScanningCandidateComponentProvider will return an AnnotatedGenericBeanDefinition, when their is an spring.components file.

",2019-11-07 09:34:24,"[{'commitHash': 'd1ead884c42d187ca23f51a3af4c3ea92f0d6b19', 'commitGHEventType': 'closed', 'commitUser': 'wilkinsona', 'commitParents': ['8d3df1b4b88467611b0729ac6d8428fce7677d79'], 'nameRev': 'd1ead884c42d187ca23f51a3af4c3ea92f0d6b19 tags/v2.1.11.RELEASE~63', 'commitMessage': 'Fix @ServletComponentScan with a component index\n\nPreviously @ServletComponentScan did not work when there was a\ncomponent index on the classpath as it made an assumption about\nthe concrete type of the BeanDefinitions produced by scanning that\ndoes not hold true when an index is present.\n\nThis commit updates the scanning and the handlers to correct the\nassumpution by working with a bean definition type that is produced\nby scanning both when there is and when there is not an index present.\n\nTo prevent the problem from reoccuring, a test that uses and index\nhas been added and the import of ScannedGenericBeanDefinition is now\nprohibited by Checkstyle.\n\nCloses gh-18910\n', 'commitDateTime': '2019-11-07 09:20:19', 'authoredDateTime': '2019-11-07 09:13:46', 'commitGitStats': [{'filePath': 'spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentHandler.java', 'insertions': 3, 'deletions': 3, 'lines': 6}, {'filePath': 'spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentRegisteringPostProcessor.java', 'insertions': 3, 'deletions': 3, 'lines': 6}, {'filePath': 'spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/WebFilterHandler.java', 'insertions': 2, 'deletions': 2, 'lines': 4}, {'filePath': 'spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/WebListenerHandler.java', 'insertions': 2, 'deletions': 2, 'lines': 4}, {'filePath': 'spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/WebServletHandler.java', 'insertions': 3, 'deletions': 3, 'lines': 6}, {'filePath': 'spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/ServletComponentScanIntegrationTests.java', 'insertions': 43, 'deletions': 0, 'lines': 43}, {'filePath': 'spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/WebFilterHandlerTests.java', 'insertions': 26, 'deletions': 19, 'lines': 45}, {'filePath': 'spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/WebListenerHandlerTests.java', 'insertions': 9, 'deletions': 4, 'lines': 13}, {'filePath': 'spring-boot-project/spring-boot/src/test/java/org/springframework/boot/web/servlet/WebServletHandlerTests.java', 'insertions': 24, 'deletions': 17, 'lines': 41}, {'filePath': 'src/checkstyle/checkstyle.xml', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ServletComponentHandler.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.servlet.ServletComponentHandler.handle(org.springframework.context.annotation.ScannedGenericBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.ServletComponentHandler.doHandle(java.util.Map,org.springframework.context.annotation.ScannedGenericBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ServletComponentRegisteringPostProcessor.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor.scanPackage(org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider,java.lang.String)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'WebFilterHandler.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandler.doHandle(java.util.Map,org.springframework.context.annotation.ScannedGenericBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'WebListenerHandler.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.servlet.WebListenerHandler.doHandle(java.util.Map,org.springframework.context.annotation.ScannedGenericBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'WebServletHandler.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandler.doHandle(java.util.Map,org.springframework.context.annotation.ScannedGenericBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandler.determineMultipartConfig(org.springframework.context.annotation.ScannedGenericBeanDefinition)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ServletComponentScanIntegrationTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.servlet.ServletComponentScanIntegrationTests', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.ServletComponentScanIntegrationTests.indexedComponentsAreRegistered()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.ServletComponentScanIntegrationTests.writeIndex()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'WebFilterHandlerTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.getBeanDefinition(java.lang.Class)', 'TOT': 10, 'UPD': 5, 'INS': 0, 'MOV': 5, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.defaultFilterConfiguration()', 'TOT': 6, 'UPD': 5, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.filterWithCustomName()', 'TOT': 5, 'UPD': 4, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.asyncSupported()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.dispatcherTypes()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.initParameters()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.servletNames()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.urlPatterns()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.urlPatternsFromValue()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.urlPatternsDeclaredTwice()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebFilterHandlerTests.handleBeanDefinitionForClass(java.lang.Class)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'WebListenerHandlerTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.servlet.WebListenerHandlerTests.listener()', 'TOT': 6, 'UPD': 3, 'INS': 2, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'WebServletHandlerTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandlerTests.getBeanDefinition(java.lang.Class)', 'TOT': 13, 'UPD': 5, 'INS': 0, 'MOV': 8, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandlerTests.defaultServletConfiguration()', 'TOT': 6, 'UPD': 5, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandlerTests.servletWithCustomName()', 'TOT': 5, 'UPD': 4, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandlerTests.asyncSupported()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandlerTests.initParameters()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandlerTests.urlMappings()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandlerTests.urlMappingsFromValue()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandlerTests.urlPatternsDeclaredTwice()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.servlet.WebServletHandlerTests.handleBeanDefinitionForClass(java.lang.Class)', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/18910,0.0002777777777777778,['type: bug'],@ServletComponentScan does not work with a component index,1.0,"['org.springframework.boot.web.servlet.WebFilterHandler.doHandle(java.util.Map,org.springframework.context.annotation.ScannedGenericBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)', 'org.springframework.boot.web.servlet.WebListenerHandler.doHandle(java.util.Map,org.springframework.context.annotation.ScannedGenericBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)', 'org.springframework.boot.web.servlet.WebServletHandler.doHandle(java.util.Map,org.springframework.context.annotation.ScannedGenericBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)', 'org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor.scanPackage(org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider,java.lang.String)', 'org.springframework.boot.web.servlet.ServletComponentHandler.handle(org.springframework.context.annotation.ScannedGenericBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)', 'org.springframework.boot.web.servlet.WebServletHandler.determineMultipartConfig(org.springframework.context.annotation.ScannedGenericBeanDefinition)', 'org.springframework.boot.web.servlet.ServletComponentHandler.doHandle(java.util.Map,org.springframework.context.annotation.ScannedGenericBeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry)']",['d1ead884c42d187ca23f51a3af4c3ea92f0d6b19'],,['spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet'],13.0,13.0,26.0,5.0,7.0,7.0,7.0,0.0,0.0,0.0,5.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
46356,2018-04-25 11:59:24,gautamceg,"SpringBoot version - 1.5.10.RELEASE
I'm using Spring Centralized Configuration to store my application configuration and it works fine for single valued properties but for MultiValued properties remote config is not able to override local properties.

remote config file: test-cloud-config.yml

```yaml
test:
  empty:
    strKey: 
    listKey: []
```

SpringBoot resource local: application.yml

```yaml
test:
  empty:
    strKey: local str Key
    listKey: localOne, localTwo
```

My spring boot class:-

   

```java
@Component
public class TestRemoteConfig {
    
    @Value(""${test.empty.strKey}"")
    private String testEmptyStrKey;
    	
    @Value(""${test.empty.listKey}"")
    private String[] testEmptyListKey;
    	
    @PostConstruct
    public void init(){
        System.out.println(""Test override EmptyStrKey's value :- ""+ testEmptyStrKey);
        System.out.println(""Test override EmptyListKey's value :- ""+ Arrays.asList(testEmptyListKey));
    }

}
```

Output

```
Test override EmptyStrKey's value :- 
Test override EmptyListKey's value :- [localOne, localTwo]
```

but I expect 'testEmptyListKey' to be empty.

> Note: This works when I use .properties in place of .yml as config file",2018-05-11 15:53:13,"[{'commitHash': '3992dacdc803aa573a617f38d3349aa42aaac79d', 'commitGHEventType': 'closed', 'commitUser': 'wilkinsona', 'commitParents': ['45f4e8795ecede105007a45dad81979948dee3ad'], 'nameRev': '3992dacdc803aa573a617f38d3349aa42aaac79d tags/v2.0.3.RELEASE~151', 'commitMessage': 'Bind empty string to empty collection or array of rich types\n\nPreviously, when an empty String was bound to a collection or\narray of rich types it would fail as there was no converter capable\nof creating a Collection<RichType> or RichType[] from the String.\n\nThis commit updates IndexedElementsBinder to apply special treatment\nto empty String values. Now, when such a value is being processed,\nan empty Collection or array is the result.\n\nCloses gh-12965\n', 'commitDateTime': '2018-05-11 16:41:37', 'authoredDateTime': '2018-05-11 16:41:37', 'commitGitStats': [{'filePath': 'spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/IndexedElementsBinder.java', 'insertions': 13, 'deletions': 5, 'lines': 18}, {'filePath': 'spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/bind/CollectionBinderTests.java', 'insertions': 13, 'deletions': 0, 'lines': 13}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'IndexedElementsBinder.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.context.properties.bind.IndexedElementsBinder.bindIndexed(org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder,org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier,org.springframework.core.ResolvableType,org.springframework.core.ResolvableType)', 'TOT': 11, 'UPD': 0, 'INS': 4, 'MOV': 5, 'DEL': 2}]}, {'spoonFilePath': 'CollectionBinderTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.context.properties.bind.CollectionBinderTests.bindToNestedCollectionWhenEmptyStringShouldReturnEmptyCollection()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/12965,16.00027777777778,['type: bug'],Empty YAML array does not override property from source with lower precedence,1.0,"['org.springframework.boot.context.properties.bind.IndexedElementsBinder.bindIndexed(org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable,org.springframework.boot.context.properties.bind.AggregateElementBinder,org.springframework.boot.context.properties.bind.IndexedElementsBinder$IndexedCollectionSupplier,org.springframework.core.ResolvableType,org.springframework.core.ResolvableType)']",['3992dacdc803aa573a617f38d3349aa42aaac79d'],,['spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties'],13.0,5.0,18.0,1.0,0.0,1.0,11.0,5.0,4.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
46390,2018-03-12 19:41:18,jkschneider,See https://github.com/micrometer-metrics/micrometer/issues/486 for a reproducible example. ,2018-06-04 14:45:24,"[{'commitHash': 'ea51cfabcad13b3b1bff63d899ec4f2ebba76078', 'commitGHEventType': 'closed', 'commitUser': 'wilkinsona', 'commitParents': ['bc59434bcc5b0607b3bd1acadc50127474d08867'], 'nameRev': 'ea51cfabcad13b3b1bff63d899ec4f2ebba76078 tags/v2.0.3.RELEASE~66', 'commitMessage': 'Avoid uri tag explosion when use of path variable is undetected\n\nPreviously, WebMvcTags would fall back to using the request’s path\ninfo if Spring MVC’s best matching path pattern attribute was not\navailable. For non-Spring MVC web frameworks that support path\nvariables, such as Jersey, this led to an explosion of URI tags that\ncould exhaust the heap.\n\nCloses gh-12447\n', 'commitDateTime': '2018-06-04 15:43:48', 'authoredDateTime': '2018-06-04 15:43:38', 'commitGitStats': [{'filePath': 'spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/servlet/WebMvcTags.java', 'insertions': 3, 'deletions': 3, 'lines': 6}, {'filePath': 'spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/web/servlet/WebMvcTagsTests.java', 'insertions': 17, 'deletions': 6, 'lines': 23}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'WebMvcTags.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.metrics.web.servlet.WebMvcTags.uri(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}]}, {'spoonFilePath': 'WebMvcTagsTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcTagsTests.uriTrailingSlashesAreSuppressed()', 'TOT': 6, 'UPD': 3, 'INS': 0, 'MOV': 3, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcTagsTests.uriTagValueIsRootWhenRequestHasNoPatternOrPathInfo()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.actuate.endpoint.web.servlet.WebMvcTagsTests.uriTagValueIsUnknownWhenRequestHasNoPatternAndNonRootPathInfo()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '95e26ffcb9f6abd991655e1ae90013f4d4b1f330', 'commitGHEventType': 'referenced', 'commitUser': 'bclozel', 'commitParents': ['0e13fd039d85110ca0bf91f4c59ae7a8bc60f0c1'], 'nameRev': '95e26ffcb9f6abd991655e1ae90013f4d4b1f330 tags/v2.0.8.RELEASE~20', 'commitMessage': 'Avoid uri tag explosion when use of path variable is undetected\n\nThis commit aligns the Spring WebFlux instrumentation on Spring MVC\nsince gh-12447.\nFrom now on, if the best matching path pattern is not found,\nthe recorded uri tag will be ""UNKNOWN"".\n\nNote that for WebFlux.fn, the pattern information is properly\nrecorded as of SPR-17395.\n\nCloses gh-15609\n', 'commitDateTime': '2019-01-08 21:45:06', 'authoredDateTime': '2019-01-08 21:30:09', 'commitGitStats': [{'filePath': 'spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics/web/reactive/server/WebFluxTags.java', 'insertions': 15, 'deletions': 4, 'lines': 19}, {'filePath': 'spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/metrics/web/reactive/server/WebFluxTagsTests.java', 'insertions': 23, 'deletions': 1, 'lines': 24}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'WebFluxTags.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTags.uri(org.springframework.web.server.ServerWebExchange)', 'TOT': 6, 'UPD': 1, 'INS': 2, 'MOV': 2, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTags', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTags.getPathInfo(org.springframework.web.server.ServerWebExchange)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'WebFluxTagsTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsTests.uriTagValueIsRootWhenRequestHasNoPatternOrPathInfo()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsTests.uriTagValueIsRootWhenRequestHasNoPatternAndSlashPathInfo()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsTests.uriTagValueIsUnknownWhenRequestHasNoPatternAndNonRootPathInfo()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/12447,83.00027777777778,['type: bug'],Templated requests with Jersey may cause an explosion of URI tag values,1.0,"['org.springframework.boot.actuate.metrics.web.servlet.WebMvcTags.uri(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)']",['ea51cfabcad13b3b1bff63d899ec4f2ebba76078'],,['spring-boot-project/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/metrics'],3.0,3.0,6.0,1.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,spring-boot
46556,2017-07-19 21:32:00,JakobFels,"Hi,

I was playing around with `RestTemplateBuilder` and it's `RequestFactory` auto detection.
While doing this I noticed that for netty, the resulting `Netty4ClientHttpRequestFactory` will be misconfigured, resulting in ssl/https calls being broken with such a client.

The reason is that `Netty4ClientHttpRequestFactory` sets up it's sslContext in an `afterPropertiesSet` method, which the `RestTemplateBuilder` never calls.

Declaring `Netty4ClientHttpRequestFactory` as a bean an setting it on the builder via `requestFactory(ClientHttpRequestFactory requestFactory)` will result in a working RestTemplate.

Affected versions:
* Verified on Spring boot 1.5.4
* Looking at the code, seems to be still in 2.0.0

Steps to reproduce:
* Have spring-boot-starter-web and netty-all on the classpath.
* Construct a Resttemplate via `new RestTemplateBuilder().build()`
* Try to access an HTTPS Url

Result:
```
2017-07-19 23:30:00.864  WARN 11639 --- [ntLoopGroup-2-1] io.netty.channel.ChannelInitializer      : Failed to initialize a channel. Closing: [id: 0x98b62de7]

java.lang.IllegalArgumentException: sslContext should not be null
```",2017-07-22 07:18:17,"[{'commitHash': '8207852bcd6749275a840683bfa64ec49000ab1f', 'commitGHEventType': 'closed', 'commitUser': 'wilkinsona', 'commitParents': ['a8ad68ebc1e3de9b244354605d21de0a498d6935'], 'nameRev': '8207852bcd6749275a840683bfa64ec49000ab1f tags/v1.5.5.RELEASE~20', 'commitMessage': 'Ensure that detected request factories are initialized\n\nCloses gh-9797\n', 'commitDateTime': '2017-07-22 08:10:04', 'authoredDateTime': '2017-07-22 08:10:04', 'commitGitStats': [{'filePath': 'spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java', 'insertions': 17, 'deletions': 1, 'lines': 18}, {'filePath': 'spring-boot/src/test/java/org/springframework/boot/web/client/RestTemplateBuilderNettyTests.java', 'insertions': 49, 'deletions': 0, 'lines': 49}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RestTemplateBuilder.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.client.RestTemplateBuilder.initializeIfNecessary(org.springframework.http.client.ClientHttpRequestFactory)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.web.client.RestTemplateBuilder.detectRequestFactory()', 'TOT': 4, 'UPD': 0, 'INS': 3, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'RestTemplateBuilderNettyTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.web.client.RestTemplateBuilderNettyTests', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/9797,2.000277777777778,['type: bug'],RestTemplateBuilder auto detecting netty results in broken ssl,1.0,"['org.springframework.boot.web.client.RestTemplateBuilder.initializeIfNecessary(org.springframework.http.client.ClientHttpRequestFactory)', 'org.springframework.boot.web.client.RestTemplateBuilder.detectRequestFactory()']",['8207852bcd6749275a840683bfa64ec49000ab1f'],,['spring-boot/src/main/java/org/springframework/boot/web/client'],17.0,1.0,18.0,1.0,0.0,2.0,5.0,1.0,4.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
46887,2016-03-29 01:03:42,artembilan,"The `MessageChannelMetricWriter` `@Bean` in the `MetricsChannelAutoConfiguration` must be marked with the `@ExportMetricWriter`, otherwise it is skipped by the `MetricExportAutoConfiguration`:

``` java
@Autowired(required = false)
@ExportMetricWriter
private Map<String, GaugeWriter> writers = Collections.emptyMap();
```

After declaring the former in my own config:

``` java
@Bean
public MessageChannel metricsChannel() {
    return new DirectChannel();
}

@Bean
@ExportMetricWriter
public MessageChannelMetricWriter messageChannelMetricWriter() {
    return new MessageChannelMetricWriter(metricsChannel());
}

@Bean
@ServiceActivator(inputChannel = ""metricsChannel"")
public MessageHandler metricsHandler() {
    return System.out::println;
}
```

The metrics are started to appear in the STDOUT periodically as it is declared by the `MetricExportProperties`.

Also see http://stackoverflow.com/questions/36272482/write-out-spring-boot-metrics-to-stdout-or-aggregator.
",2016-04-10 06:54:07,"[{'commitHash': '3ca365cff061f32f27513092382230cae00512b1', 'commitGHEventType': 'closed', 'commitUser': 'philwebb', 'commitParents': ['02764b8ff3f530d8b1ecefcd0cd1a6a05e9cfa2e'], 'nameRev': '3ca365cff061f32f27513092382230cae00512b1 tags/v1.4.0.M2~9^2~6', 'commitMessage': 'Export MessageChannel metric writer\n\nUpdate the auto-configured MessageChannelMetricWriter with\n@ExportMetricWriter so that metrics are actually exported.\n\nFixes gh-5517\n', 'commitDateTime': '2016-04-09 23:32:38', 'authoredDateTime': '2016-04-09 22:04:58', 'commitGitStats': [{'filePath': 'spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricsChannelAutoConfiguration.java', 'insertions': 2, 'deletions': 1, 'lines': 3}, {'filePath': 'spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfigurationTests.java', 'insertions': 3, 'deletions': 1, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'MetricsChannelAutoConfiguration.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.autoconfigure.MetricsChannelAutoConfiguration.messageChannelMetricWriter(org.springframework.messaging.MessageChannel)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'MetricExportAutoConfigurationTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfigurationTests.defaultExporterWhenMessageChannelAvailable()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/5517,12.000277777777777,"['type: bug', 'type: regression']",MessageChannelMetricWriter and @ExportMetricWriter,1.0,['org.springframework.boot.actuate.autoconfigure.MetricsChannelAutoConfiguration.messageChannelMetricWriter(org.springframework.messaging.MessageChannel)'],['3ca365cff061f32f27513092382230cae00512b1'],,['spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure'],2.0,1.0,3.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
46978,2015-11-19 09:22:14,fguerout,"Regex support added in boot v1.3 does not handle correctly null metrics value due to :

https://github.com/spring-projects/spring-boot/blob/8ca5635b69109fba898a094abd5970c906d29060/spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MetricsMvcEndpoint.java#L75

Consequently, it results in a 404 HTTP error code.
",2015-12-01 17:12:28,"[{'commitHash': '8e0d3ed0eb012b71adf2ca6708a73bbaef45cdf7', 'commitGHEventType': 'closed', 'commitUser': 'wilkinsona', 'commitParents': ['f25a5e3b770b7fe242a6b4775da702142efbd824'], 'nameRev': '8e0d3ed0eb012b71adf2ca6708a73bbaef45cdf7 tags/v1.3.1.RELEASE~142', 'commitMessage': 'Don’t return 404 when metric or env regex matches entry with null value\n\nPreviously, if a regular expression was used when calling the metrics or\nenvironment endpoints, a metric or property with a null value would\nresult in a 404 response.\n\nThis commit updates the two affected endpoints so that any metric or\nproperty whose name matches the regular expression but has a null value\nis ignored. This allows all of the matching metrics or properties with\nnon-null values to be returned in a 200 OK response.\n\nCloses gh-4552\n', 'commitDateTime': '2015-12-01 17:12:07', 'authoredDateTime': '2015-12-01 17:09:39', 'commitGitStats': [{'filePath': 'spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/EnvironmentMvcEndpoint.java', 'insertions': 9, 'deletions': 0, 'lines': 9}, {'filePath': 'spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/MetricsMvcEndpoint.java', 'insertions': 12, 'deletions': 2, 'lines': 14}, {'filePath': 'spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc/NamePatternFilter.java', 'insertions': 6, 'deletions': 1, 'lines': 7}, {'filePath': 'spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/EnvironmentMvcEndpointTests.java', 'insertions': 9, 'deletions': 0, 'lines': 9}, {'filePath': 'spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/MetricsMvcEndpointTests.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'spring-boot-actuator/src/test/java/org/springframework/boot/actuate/endpoint/mvc/NamePatternFilterTests.java', 'insertions': 5, 'deletions': 0, 'lines': 5}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'EnvironmentMvcEndpoint.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.NamePatternEnvironmentFilter.getOptionalValue(org.springframework.core.env.Environment,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'MetricsMvcEndpoint.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.NamePatternMapFilter.getOptionalValue(java.util.Map,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.NamePatternMapFilter.getNames(java.util.Map,org.springframework.boot.actuate.endpoint.mvc.NameCallback)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.NamePatternMapFilter.getValue(java.util.Map,java.lang.String)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'NamePatternFilter.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.endpoint.mvc.NamePatternFilter.ResultCollectingNameCallback.addName(java.lang.String)', 'TOT': 7, 'UPD': 0, 'INS': 2, 'MOV': 4, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.actuate.endpoint.mvc.NamePatternFilter.getOptionalValue(java.lang.Object,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'EnvironmentMvcEndpointTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpointTests.regex()', 'TOT': 3, 'UPD': 0, 'INS': 3, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'MetricsMvcEndpointTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpointTests.TestConfiguration.endpoint().1.metrics()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'NamePatternFilterTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.endpoint.mvc.NamePatternFilterTests.MockNamePatternFilter.getOptionalValue(java.lang.Object,java.lang.String)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/4552,12.000277777777777,['type: bug'],"Regex support on /metrics returns ""not found"" if metrics value is null",1.0,"['org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.NamePatternMapFilter.getValue(java.util.Map,java.lang.String)', 'org.springframework.boot.actuate.endpoint.mvc.NamePatternFilter.getOptionalValue(java.lang.Object,java.lang.String)', 'org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.NamePatternMapFilter.getNames(java.util.Map,org.springframework.boot.actuate.endpoint.mvc.NameCallback)', 'org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.NamePatternMapFilter.getOptionalValue(java.util.Map,java.lang.String)', 'org.springframework.boot.actuate.endpoint.mvc.NamePatternFilter.ResultCollectingNameCallback.addName(java.lang.String)', 'org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.NamePatternEnvironmentFilter.getOptionalValue(org.springframework.core.env.Environment,java.lang.String)']",['8e0d3ed0eb012b71adf2ca6708a73bbaef45cdf7'],,['spring-boot-actuator/src/main/java/org/springframework/boot/actuate/endpoint/mvc'],27.0,3.0,30.0,3.0,0.0,6.0,14.0,6.0,7.0,1.0,3.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
47166,2015-01-12 20:32:39,jfarcand,"`javax.websocket.server.ServerContainer` from ServletContext is `null` when SpringBoot is used (without Spring WebSocket).  Spring WebSocket shoudn't be required to support it as underlying Tomcat(or Jetty) does exposed it like the Servlet Specification is required. More info [here](https://github.com/Atmosphere/atmosphere/issues/1836), sample [here](https://github.com/henri-tremblay/hipster-atmosphere)
",2015-01-13 23:43:02,"[{'commitHash': '735b6277c29c8d70d8369293170b378f163704e0', 'commitGHEventType': 'referenced', 'commitUser': 'philwebb', 'commitParents': ['01444a03ab82976135994f070e900903d964dcc5'], 'nameRev': '735b6277c29c8d70d8369293170b378f163704e0 tags/v1.2.2.RELEASE~148', 'commitMessage': 'Relax WebSocket auto-configuration conditions\n\nUpdate WebSocketAutoConfiguration so that spring-websocket is no longer\nrequired for WebSocket support.\n\nSee gh-2341\n', 'commitDateTime': '2015-01-13 15:42:14', 'authoredDateTime': '2015-01-13 15:02:41', 'commitGitStats': [{'filePath': 'spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/websocket/WebSocketAutoConfiguration.java', 'insertions': 10, 'deletions': 7, 'lines': 17}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'WebSocketAutoConfiguration.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '43d577aa4cfb024dad0facad4fc80f0b604cb29e', 'commitGHEventType': 'closed', 'commitUser': 'philwebb', 'commitParents': ['735b6277c29c8d70d8369293170b378f163704e0'], 'nameRev': '43d577aa4cfb024dad0facad4fc80f0b604cb29e tags/v1.2.2.RELEASE~147', 'commitMessage': 'Add Atmosphere sample application\n\nAdd Atmosphere example application based on\nhttp://github.com/Atmosphere/atmosphere-samples/tree/master/samples/chat\n\nCloses gh-2341\n', 'commitDateTime': '2015-01-13 15:42:14', 'authoredDateTime': '2015-01-13 15:06:16', 'commitGitStats': [{'filePath': 'spring-boot-samples/pom.xml', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'spring-boot-samples/spring-boot-sample-atmosphere/pom.xml', 'insertions': 61, 'deletions': 0, 'lines': 61}, {'filePath': 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/java/sample/ChatService.java', 'insertions': 83, 'deletions': 0, 'lines': 83}, {'filePath': 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/java/sample/Message.java', 'insertions': 52, 'deletions': 0, 'lines': 52}, {'filePath': 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/java/sample/SampleAtmosphereApplication.java', 'insertions': 83, 'deletions': 0, 'lines': 83}, {'filePath': 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/resources/application.properties', 'insertions': 1, 'deletions': 0, 'lines': 1}, {'filePath': 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/resources/static/home.html', 'insertions': 72, 'deletions': 0, 'lines': 72}, {'filePath': 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/resources/static/javascript/application.js', 'insertions': 168, 'deletions': 0, 'lines': 168}, {'filePath': 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/resources/static/javascript/jquery-1.9.0.js', 'insertions': 9555, 'deletions': 0, 'lines': 9555}, {'filePath': 'spring-boot-samples/spring-boot-sample-atmosphere/src/test/java/sample/SampleAtmosphereApplicationTests.java', 'insertions': 134, 'deletions': 0, 'lines': 134}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ChatService.java', 'spoonMethods': [{'spoonMethodName': 'sample.ChatService', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'Message.java', 'spoonMethods': [{'spoonMethodName': 'sample.Message', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'SampleAtmosphereApplication.java', 'spoonMethods': [{'spoonMethodName': 'sample.SampleAtmosphereApplication', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'SampleAtmosphereApplicationTests.java', 'spoonMethods': [{'spoonMethodName': 'sample.SampleAtmosphereApplicationTests', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/2341,1.0002777777777778,['type: bug'],`javax.websocket.server.ServerContainer` is missing from ServletContext for pure SpringBoot application,2.0,"['sample.Message', 'sample.ChatService', 'org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration', 'sample.SampleAtmosphereApplication']","['735b6277c29c8d70d8369293170b378f163704e0', '43d577aa4cfb024dad0facad4fc80f0b604cb29e']",,"['spring-boot-samples/spring-boot-sample-atmosphere/src/main/java/sample', 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/resources/application.properties', 'spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/websocket', 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/resources/static/javascript/application.js', 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/resources/static/home.html', 'spring-boot-samples/spring-boot-sample-atmosphere/src/main/resources/static/javascript/jquery-1.9.0.js']",10024.0,7.0,10031.0,8.0,1.0,4.0,4.0,0.0,3.0,0.0,4.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
47185,2014-12-23 07:50:37,demongloom,"After change https://github.com/spring-projects/spring-boot/commit/f4fbc3e33955c34aae21e93d8b235d9914213080 the new logic disrespects configuration option `fork=false` if hotswap classloader (springloaded) present.
",2014-12-23 10:23:09,"[{'commitHash': 'f4fbc3e33955c34aae21e93d8b235d9914213080', 'commitGHEventType': 'referenced', 'commitUser': 'demongloom', 'commitParents': ['9f31e09cf0eb035341103471b0e51df96ac9f13c'], 'nameRev': 'f4fbc3e33955c34aae21e93d8b235d9914213080 tags/v1.2.1.RELEASE~109', 'commitMessage': 'Fix Maven Spring Loaded detection logic\n\nEnsure that the Maven plugin RunMojo attempts to detect the Spring\nLoaded agent before deciding if the JVM should be forked.\n\nFixes gh-2140\n', 'commitDateTime': '2014-12-15 13:10:33', 'authoredDateTime': '2014-12-15 13:08:17', 'commitGitStats': [{'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/RunMojo.java', 'insertions': 4, 'deletions': 3, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RunMojo.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.maven.RunMojo.run(java.lang.String)', 'TOT': 6, 'UPD': 0, 'INS': 4, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.maven.RunMojo.addAgents(java.util.List)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'dbb795298c1948c619b6653e89cde9635accc4e9', 'commitGHEventType': 'closed', 'commitUser': 'snicoll', 'commitParents': ['8628adcb7449588b38b0ffa3e80056ee97b27e4a'], 'nameRev': 'dbb795298c1948c619b6653e89cde9635accc4e9 tags/v1.2.1.RELEASE~65', 'commitMessage': 'Restore proper use of the fork parameter\n\nPreviously, disabling forking was not possible if JVM arguments or an\nagent are specified, even if the fork attribute is explicitly set to\n`false`.\n\nThe  fork attribute is now detected as it should and forking is disabled\nwhen the fork attribute is set to false, even if JVM arguments or an\nagent is either specified or discovered.\n\nFixes gh-2220\n', 'commitDateTime': '2014-12-23 11:15:12', 'authoredDateTime': '2014-12-23 11:15:12', 'commitGitStats': [{'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/it/run-disable-fork/pom.xml', 'insertions': 32, 'deletions': 0, 'lines': 32}, {'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/it/run-disable-fork/src/main/java/org/test/SampleApplication.java', 'insertions': 29, 'deletions': 0, 'lines': 29}, {'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/it/run-disable-fork/verify.groovy', 'insertions': 6, 'deletions': 0, 'lines': 6}, {'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/RunMojo.java', 'insertions': 10, 'deletions': 3, 'lines': 13}, {'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/site/apt/examples/run-debug.apt.vm', 'insertions': 7, 'deletions': 5, 'lines': 12}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'SampleApplication.java', 'spoonMethods': [{'spoonMethodName': 'org.test.SampleApplication', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RunMojo.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.maven.RunMojo', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.maven.RunMojo.run(java.lang.String)', 'TOT': 10, 'UPD': 1, 'INS': 4, 'MOV': 4, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/2220,0.0002777777777777778,"['type: bug', 'type: regression']",Forking cannot be disabled if Spring Loaded is present,2.0,"['org.springframework.boot.maven.RunMojo.run(java.lang.String)', 'org.springframework.boot.maven.RunMojo', 'org.test.SampleApplication', 'org.springframework.boot.maven.RunMojo.addAgents(java.util.List)']","['f4fbc3e33955c34aae21e93d8b235d9914213080', 'dbb795298c1948c619b6653e89cde9635accc4e9']",,"['spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven', 'spring-boot-tools/spring-boot-maven-plugin/src/it/run-disable-fork/verify.groovy', 'spring-boot-tools/spring-boot-maven-plugin/src/it/run-disable-fork/src/main/java/org/test', 'spring-boot-tools/spring-boot-maven-plugin/src/site/apt/examples/run-debug.apt.vm']",56.0,11.0,67.0,4.0,2.0,4.0,20.0,7.0,9.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
47186,2014-12-22 17:59:38,philwebb,"Raised in Gitter:

> Think I figured out the issue with WAS and the datasource. I get an exception:
> NoClassDefFoundError: org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform
> This is because I am using Hibernate 4.2 and the packages for AbstractJtaPlatform changed between 4.2 & 4.3. Should be org.hibernate.service.jta.platform.internal.AbstractJtaPlatform. So potential bug in configureJtaPlatform() in HibernateJpaAutoConfiguration class?
",2014-12-30 08:57:47,"[{'commitHash': 'ef621c9271186047f895a387c7f710f5998a86aa', 'commitGHEventType': 'closed', 'commitUser': 'philwebb', 'commitParents': ['fd97c7553c8caef286ada0de8ac7490bec7286e8'], 'nameRev': 'ef621c9271186047f895a387c7f710f5998a86aa tags/v1.2.1.RELEASE~67', 'commitMessage': 'Protect against NoClassDefFoundError on WAS\n\nUpdate HibernateJpaAutoConfiguration to catch NoClassDefFoundError when\nsetting the JTA_PLATFORM. The exception can occur when running on WAS\nsince it ships with Hibernate 4.2 and SpringJtaPlatform extends from\nAbstractJtaPlatform which is not present.\n\nThe exception is now ignored if a JDNI environment is available,\notherwise it is re-thrown.\n\nFixes gh-2218\n', 'commitDateTime': '2014-12-22 21:32:54', 'authoredDateTime': '2014-12-22 21:28:11', 'commitGitStats': [{'filePath': 'spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaAutoConfiguration.java', 'insertions': 35, 'deletions': 2, 'lines': 37}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HibernateJpaAutoConfiguration.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.configureJtaPlatform(java.util.Map)', 'TOT': 7, 'UPD': 0, 'INS': 2, 'MOV': 4, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.isUsingJndi()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/2218,7.000277777777778,['type: bug'],Unable to deploy JPA application to WAS 8 due to Hibernate 4.2,1.0,"['org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration', 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.isUsingJndi()', 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration.configureJtaPlatform(java.util.Map)']",['ef621c9271186047f895a387c7f710f5998a86aa'],,['spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/orm/jpa'],35.0,2.0,37.0,1.0,0.0,3.0,9.0,4.0,4.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
47408,2014-05-10 08:37:34,guidograzioli,"I have a spring boot (1.0.0.RC3) application with an embedded jetty (9.1.0.v20131115). 

When trying to start on windows, while on Linux works normally, I get this exception on jetty WebAppContext startup:

```
java.net.URISyntaxException: Illegal character in opaque part at index 11: 
```

While debugging I noticed that the urls returned from LaunchedURLClassLoader.getUrls() on line 97 of org.eclipse.jetty.webapp.WebInfConfiguration are in this format (note the single backslash):

```
jar:file:C:\path_to_jar.jar!/webapp
```

I could workaround the problem by extending WebInfConfiguration changing line 110 from:

```
containerUris[i] = new URI(u.toString().replaceAll("" "", ""%20""));
```

to

```
containerUris[i] = new URI(u.toString().replaceAll("" "", ""%20"").replace('\\', '/'));
```

and:

```
WebAppContext ctx = new WebAppContext();
ctx.setConfigurationClasses(new String[] {   
    ""au.com......MyEmbeddedWebInfConfiguration"",  [... default classes ...] });
```

Is  jar:file:C:\path_to_jar.jar!/webapp a valid URL at all? 
Shouldn't it be with escaped backslashes or forward slashes?
",2014-05-16 14:05:13,"[{'commitHash': '6a644e2e23052c2ed42ff245729699b66750cdfa', 'commitGHEventType': 'closed', 'commitUser': 'philwebb', 'commitParents': ['845a86d5488d93d4efc9addce43f502b150df89d'], 'nameRev': '6a644e2e23052c2ed42ff245729699b66750cdfa tags/v1.1.0.M2~19^2~7', 'commitMessage': 'Protect against malformed URLs on Windows\n\nUpdate JarFile to correctly create system independent URLs to prevent\npotential URISyntaxExceptions when running on Windows.\n\nFixes gh-836\n', 'commitDateTime': '2014-05-16 14:51:06', 'authoredDateTime': '2014-05-16 14:17:26', 'commitGitStats': [{'filePath': 'spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/JarFile.java', 'insertions': 36, 'deletions': 11, 'lines': 47}, {'filePath': 'spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/jar/JarFileTests.java', 'insertions': 0, 'deletions': 2, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'JarFile.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.loader.jar.JarFile.getName()', 'TOT': 4, 'UPD': 0, 'INS': 1, 'MOV': 2, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.loader.jar.JarFile.getUrl()', 'TOT': 8, 'UPD': 0, 'INS': 3, 'MOV': 4, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.loader.jar.JarFile.getName(org.springframework.boot.loader.jar.JarFile$PathForm)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.loader.jar.JarFile.PathForm', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.loader.jar.JarFile.toString()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'JarFileTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.loader.jar.JarFileTests.jdkJarFile()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.loader.jar.JarFileTests.getSpecialResourceViaClassLoader()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/836,6.000277777777778,['type: bug'],spring-boot-tools LaunchedURLClassLoader getUrls() returns invalid jar:file: urls on windows,1.0,"['org.springframework.boot.loader.jar.JarFile.getName(org.springframework.boot.loader.jar.JarFile$PathForm)', 'org.springframework.boot.loader.jar.JarFile.getName()', 'org.springframework.boot.loader.jar.JarFile.toString()', 'org.springframework.boot.loader.jar.JarFile.PathForm', 'org.springframework.boot.loader.jar.JarFile.getUrl()']",['6a644e2e23052c2ed42ff245729699b66750cdfa'],,['spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar'],36.0,11.0,47.0,1.0,0.0,5.0,15.0,7.0,6.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
47464,2013-12-04 22:25:50,dturanski,"You can get an NPE when `SpringApplication` is trying to report errors if it hasn't got very  far in its lifecycle yet. See the example [here](https://github.com/dturanski/boot-yaml-issue)
",2013-12-05 08:55:23,"[{'commitHash': 'f57c8f52bf5485aa0690bfe09066ac4b6cce8b7b', 'commitGHEventType': 'closed', 'commitUser': 'dsyer', 'commitParents': ['33c38b3a512d432b0a00a4b70313cf09443832ac'], 'nameRev': 'f57c8f52bf5485aa0690bfe09066ac4b6cce8b7b tags/v0.5.0.M7~64', 'commitMessage': 'Check for null before trying to use ApplicationContext\n\nFixes gh-145\n', 'commitDateTime': '2013-12-05 08:54:13', 'authoredDateTime': '2013-12-05 08:54:13', 'commitGitStats': [{'filePath': 'spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializer.java', 'insertions': 4, 'deletions': 0, 'lines': 4}, {'filePath': 'spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/AutoConfigurationReportLoggingInitializerTests.java', 'insertions': 7, 'deletions': 0, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AutoConfigurationReportLoggingInitializer.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.autoconfigure.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(boolean)', 'TOT': 7, 'UPD': 0, 'INS': 3, 'MOV': 3, 'DEL': 1}]}, {'spoonFilePath': 'AutoConfigurationReportLoggingInitializerTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.autoconfigure.AutoConfigurationReportLoggingInitializerTests.noErrorIfNotInitialized()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/145,0.0002777777777777778,['type: bug'],AutoConfigurationReportLoggingInitializer error handling not defensive enough,1.0,['org.springframework.boot.autoconfigure.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(boolean)'],['f57c8f52bf5485aa0690bfe09066ac4b6cce8b7b'],,['spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure'],4.0,0.0,4.0,1.0,0.0,1.0,7.0,3.0,3.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
47465,2013-12-02 13:12:06,dsyer,,2013-12-02 14:11:37,"[{'commitHash': 'f39b044cf78b84077dcf205cc205f48804480ae6', 'commitGHEventType': 'closed', 'commitUser': 'dsyer', 'commitParents': ['40bfd295eb293010a0037c69e31de67334362634'], 'nameRev': 'f39b044cf78b84077dcf205cc205f48804480ae6 tags/v0.5.0.M7~71', 'commitMessage': 'Fix packaging for Layout.NONE\n\nFixes gh-139\n', 'commitDateTime': '2013-12-02 14:10:56', 'authoredDateTime': '2013-12-02 14:10:56', 'commitGitStats': [{'filePath': 'spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools/Repackager.java', 'insertions': 3, 'deletions': 1, 'lines': 4}, {'filePath': 'spring-boot-tools/spring-boot-loader-tools/src/test/java/org/springframework/boot/loader/tools/RepackagerTests.java', 'insertions': 2, 'deletions': 0, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'Repackager.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.loader.tools.Repackager.repackage(java.util.jar.JarFile,java.io.File,org.springframework.boot.loader.tools.Libraries)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'RepackagerTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.loader.tools.RepackagerTests.noMainClassAndLayoutIsNone()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.loader.tools.RepackagerTests.noMainClassAndLayoutIsNoneWithNoMain()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/139,0.0002777777777777778,['type: bug'],Gradle plugin still includes *Launcher classes with Layout.NONE,1.0,"['org.springframework.boot.loader.tools.Repackager.repackage(java.util.jar.JarFile,java.io.File,org.springframework.boot.loader.tools.Libraries)']",['f39b044cf78b84077dcf205cc205f48804480ae6'],,['spring-boot-tools/spring-boot-loader-tools/src/main/java/org/springframework/boot/loader/tools'],3.0,1.0,4.0,1.0,0.0,1.0,2.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
47566,2018-10-02 19:35:30,philwebb,"Raised by @spencergibb in a Spring Cloud originally but ultimately the problem is in `ConfigurationPropertyName` as shown by the following test:

```java
    @Test
    public void equalsWhenStartsWith() {
        ConfigurationPropertyName n1 = ConfigurationPropertyName.of(""my.sources[0].xame"");
        ConfigurationPropertyName n2 = ConfigurationPropertyName
                .of(""my.sources[0].xamespace"");
        assertThat(n1).isNotEqualTo(n2);
    }
```",2018-10-02 21:01:18,"[{'commitHash': '7afde2ba43ef7b8125e0fce59d63d2289a0998f7', 'commitGHEventType': 'referenced', 'commitUser': 'philwebb', 'commitParents': ['923e47e978ef555232f38cb1ea75fad421c388bd'], 'nameRev': '7afde2ba43ef7b8125e0fce59d63d2289a0998f7 tags/v2.0.6.RELEASE~112', 'commitMessage': 'Add another ConfigurationPropertyName.equals test\n\nInclude an additional test to ensure that `.equals` works for names\nstarting with the same value.\n\nSee gh-14665\n', 'commitDateTime': '2018-10-02 13:58:31', 'authoredDateTime': '2018-10-02 13:58:31', 'commitGitStats': [{'filePath': 'spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/ConfigurationPropertyNameTests.java', 'insertions': 9, 'deletions': 0, 'lines': 9}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ConfigurationPropertyNameTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.context.properties.source.ConfigurationPropertyNameTests.equalsWhenStartsWith()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '7f35f8a98258ad87aebe45b6b9a88e269d19e5de', 'commitGHEventType': 'closed', 'commitUser': 'philwebb', 'commitParents': ['aa6a58d24cb7f1bc1a6d04a37bac4f9b5362bea7'], 'nameRev': '7f35f8a98258ad87aebe45b6b9a88e269d19e5de tags/v2.1.0.RC1~242', 'commitMessage': 'Fix ConfigurationPropertyName.equals\n\nFix a regression in `ConfigurationPropertyName.equals` that was causing\nincorrect results.\n\nCloses gh-14665\n', 'commitDateTime': '2018-10-02 14:00:22', 'authoredDateTime': '2018-10-02 13:57:28', 'commitGitStats': [{'filePath': 'spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ConfigurationPropertyName.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.context.properties.source.ConfigurationPropertyName.elementEquals(org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements,org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements,int)', 'TOT': 2, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'bab111b37eabceeb2a52ef45d0c1a431570110a7', 'commitGHEventType': 'referenced', 'commitUser': 'philwebb', 'commitParents': ['dbf09de2034e546f8fe6ca0aed41469fe26e66fb'], 'nameRev': 'bab111b37eabceeb2a52ef45d0c1a431570110a7 tags/v2.1.1.RELEASE~127', 'commitMessage': ""Fix ConfigurationPropertyName.equals for uppercase\n\nCommit 7f35f8a9 for gh-14665 was unfortunately incomplete as it didn't\naccount for uppercase values. The run-off while loop should have used\n`Character.toLowerCase` in the same way as the main while loop.\n\nFixes gh-15152\n"", 'commitDateTime': '2018-11-15 13:48:20', 'authoredDateTime': '2018-11-15 13:48:20', 'commitGitStats': [{'filePath': 'spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'spring-boot-project/spring-boot/src/test/java/org/springframework/boot/context/properties/source/ConfigurationPropertyNameTests.java', 'insertions': 20, 'deletions': 0, 'lines': 20}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ConfigurationPropertyName.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.context.properties.source.ConfigurationPropertyName.elementEquals(org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements,org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements,int)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'ConfigurationPropertyNameTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.context.properties.source.ConfigurationPropertyNameTests.equalsWhenStartsWithOfAdaptedName()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.context.properties.source.ConfigurationPropertyNameTests.equalsWhenStartsWithOfAdaptedNameOfIllegalChars()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/14665,0.0002777777777777778,"['type: blocker', 'type: regression']",ConfigurationPropertyName equals method fails when values start the same,2.0,"['org.springframework.boot.context.properties.source.ConfigurationPropertyName.elementEquals(org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements,org.springframework.boot.context.properties.source.ConfigurationPropertyName$Elements,int)']","['7afde2ba43ef7b8125e0fce59d63d2289a0998f7', '7f35f8a98258ad87aebe45b6b9a88e269d19e5de', 'bab111b37eabceeb2a52ef45d0c1a431570110a7']",,['spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties'],2.0,2.0,4.0,1.0,0.0,1.0,4.0,2.0,1.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
47674,2016-03-29 01:03:42,artembilan,"The `MessageChannelMetricWriter` `@Bean` in the `MetricsChannelAutoConfiguration` must be marked with the `@ExportMetricWriter`, otherwise it is skipped by the `MetricExportAutoConfiguration`:

``` java
@Autowired(required = false)
@ExportMetricWriter
private Map<String, GaugeWriter> writers = Collections.emptyMap();
```

After declaring the former in my own config:

``` java
@Bean
public MessageChannel metricsChannel() {
    return new DirectChannel();
}

@Bean
@ExportMetricWriter
public MessageChannelMetricWriter messageChannelMetricWriter() {
    return new MessageChannelMetricWriter(metricsChannel());
}

@Bean
@ServiceActivator(inputChannel = ""metricsChannel"")
public MessageHandler metricsHandler() {
    return System.out::println;
}
```

The metrics are started to appear in the STDOUT periodically as it is declared by the `MetricExportProperties`.

Also see http://stackoverflow.com/questions/36272482/write-out-spring-boot-metrics-to-stdout-or-aggregator.
",2016-04-10 06:54:07,"[{'commitHash': '3ca365cff061f32f27513092382230cae00512b1', 'commitGHEventType': 'closed', 'commitUser': 'philwebb', 'commitParents': ['02764b8ff3f530d8b1ecefcd0cd1a6a05e9cfa2e'], 'nameRev': '3ca365cff061f32f27513092382230cae00512b1 tags/v1.4.0.M2~9^2~6', 'commitMessage': 'Export MessageChannel metric writer\n\nUpdate the auto-configured MessageChannelMetricWriter with\n@ExportMetricWriter so that metrics are actually exported.\n\nFixes gh-5517\n', 'commitDateTime': '2016-04-09 23:32:38', 'authoredDateTime': '2016-04-09 22:04:58', 'commitGitStats': [{'filePath': 'spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure/MetricsChannelAutoConfiguration.java', 'insertions': 2, 'deletions': 1, 'lines': 3}, {'filePath': 'spring-boot-actuator/src/test/java/org/springframework/boot/actuate/autoconfigure/MetricExportAutoConfigurationTests.java', 'insertions': 3, 'deletions': 1, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'MetricsChannelAutoConfiguration.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.autoconfigure.MetricsChannelAutoConfiguration.messageChannelMetricWriter(org.springframework.messaging.MessageChannel)', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'MetricExportAutoConfigurationTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfigurationTests.defaultExporterWhenMessageChannelAvailable()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/5517,12.000277777777777,"['type: bug', 'type: regression']",MessageChannelMetricWriter and @ExportMetricWriter,1.0,['org.springframework.boot.actuate.autoconfigure.MetricsChannelAutoConfiguration.messageChannelMetricWriter(org.springframework.messaging.MessageChannel)'],['3ca365cff061f32f27513092382230cae00512b1'],,['spring-boot-actuator/src/main/java/org/springframework/boot/actuate/autoconfigure'],2.0,1.0,3.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
47695,2014-12-23 07:50:37,demongloom,"After change https://github.com/spring-projects/spring-boot/commit/f4fbc3e33955c34aae21e93d8b235d9914213080 the new logic disrespects configuration option `fork=false` if hotswap classloader (springloaded) present.
",2014-12-23 10:23:09,"[{'commitHash': 'f4fbc3e33955c34aae21e93d8b235d9914213080', 'commitGHEventType': 'referenced', 'commitUser': 'demongloom', 'commitParents': ['9f31e09cf0eb035341103471b0e51df96ac9f13c'], 'nameRev': 'f4fbc3e33955c34aae21e93d8b235d9914213080 tags/v1.2.1.RELEASE~109', 'commitMessage': 'Fix Maven Spring Loaded detection logic\n\nEnsure that the Maven plugin RunMojo attempts to detect the Spring\nLoaded agent before deciding if the JVM should be forked.\n\nFixes gh-2140\n', 'commitDateTime': '2014-12-15 13:10:33', 'authoredDateTime': '2014-12-15 13:08:17', 'commitGitStats': [{'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/RunMojo.java', 'insertions': 4, 'deletions': 3, 'lines': 7}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RunMojo.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.maven.RunMojo.run(java.lang.String)', 'TOT': 6, 'UPD': 0, 'INS': 4, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'org.springframework.boot.maven.RunMojo.addAgents(java.util.List)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'dbb795298c1948c619b6653e89cde9635accc4e9', 'commitGHEventType': 'closed', 'commitUser': 'snicoll', 'commitParents': ['8628adcb7449588b38b0ffa3e80056ee97b27e4a'], 'nameRev': 'dbb795298c1948c619b6653e89cde9635accc4e9 tags/v1.2.1.RELEASE~65', 'commitMessage': 'Restore proper use of the fork parameter\n\nPreviously, disabling forking was not possible if JVM arguments or an\nagent are specified, even if the fork attribute is explicitly set to\n`false`.\n\nThe  fork attribute is now detected as it should and forking is disabled\nwhen the fork attribute is set to false, even if JVM arguments or an\nagent is either specified or discovered.\n\nFixes gh-2220\n', 'commitDateTime': '2014-12-23 11:15:12', 'authoredDateTime': '2014-12-23 11:15:12', 'commitGitStats': [{'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/it/run-disable-fork/pom.xml', 'insertions': 32, 'deletions': 0, 'lines': 32}, {'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/it/run-disable-fork/src/main/java/org/test/SampleApplication.java', 'insertions': 29, 'deletions': 0, 'lines': 29}, {'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/it/run-disable-fork/verify.groovy', 'insertions': 6, 'deletions': 0, 'lines': 6}, {'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/RunMojo.java', 'insertions': 10, 'deletions': 3, 'lines': 13}, {'filePath': 'spring-boot-tools/spring-boot-maven-plugin/src/site/apt/examples/run-debug.apt.vm', 'insertions': 7, 'deletions': 5, 'lines': 12}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'SampleApplication.java', 'spoonMethods': [{'spoonMethodName': 'org.test.SampleApplication', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RunMojo.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.boot.maven.RunMojo', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 1}, {'spoonMethodName': 'org.springframework.boot.maven.RunMojo.run(java.lang.String)', 'TOT': 10, 'UPD': 1, 'INS': 4, 'MOV': 4, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-boot/issues/2220,0.0002777777777777778,"['type: bug', 'type: regression']",Forking cannot be disabled if Spring Loaded is present,2.0,"['org.springframework.boot.maven.RunMojo.run(java.lang.String)', 'org.springframework.boot.maven.RunMojo', 'org.test.SampleApplication', 'org.springframework.boot.maven.RunMojo.addAgents(java.util.List)']","['f4fbc3e33955c34aae21e93d8b235d9914213080', 'dbb795298c1948c619b6653e89cde9635accc4e9']",,"['spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven', 'spring-boot-tools/spring-boot-maven-plugin/src/it/run-disable-fork/verify.groovy', 'spring-boot-tools/spring-boot-maven-plugin/src/it/run-disable-fork/src/main/java/org/test', 'spring-boot-tools/spring-boot-maven-plugin/src/site/apt/examples/run-debug.apt.vm']",56.0,11.0,67.0,4.0,2.0,4.0,20.0,7.0,9.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-boot
47817,2019-11-26 21:47:59,jesty,"I'm trying RSocket and I'm using:

```xml
<parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.2.BUILD-SNAPSHOT</version>
        <relativePath/>
</parent>
```

My client code looks like:

```java
requester
        .route(""test"")
        .retrieveFlow<Int>()
        .collect({
            println(""Receiving $it"")
        })
```

Starting from today I'm facing this exception:

```java.lang.NullPointerException: null
	at java.util.Objects.requireNonNull(Objects.java:203) ~[na:1.8.0_202]
	at reactor.core.publisher.FluxSource.<init>(FluxSource.java:46) ~[reactor-core-3.3.1.BUILD-SNAPSHOT.jar:3.3.1.BUILD-SNAPSHOT]
	at reactor.core.publisher.Flux.wrap(Flux.java:9869) ~[reactor-core-3.3.1.BUILD-SNAPSHOT.jar:3.3.1.BUILD-SNAPSHOT]
	at reactor.core.publisher.Flux.from(Flux.java:961) ~[reactor-core-3.3.1.BUILD-SNAPSHOT.jar:3.3.1.BUILD-SNAPSHOT]
	at io.rsocket.RSocketRequester.requestChannel(RSocketRequester.java:174) ~[rsocket-core-1.0.0-RC5.jar:na]
	at io.rsocket.util.RSocketProxy.requestChannel(RSocketProxy.java:50) ~[rsocket-core-1.0.0-RC5.jar:na]
	at io.rsocket.util.MultiSubscriberRSocket.lambda$requestChannel$3(MultiSubscriberRSocket.java:47) ~[rsocket-core-1.0.0-RC5.jar:na]
	at reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:46) ~[reactor-core-3.3.1.BUILD-SNAPSHOT.jar:3.3.1.BUILD-SNAPSHOT]
	at reactor.core.publisher.Flux.subscribe(Flux.java:8128) ~[reactor-core-3.3.1.BUILD-SNAPSHOT.jar:3.3.1.BUILD-SNAPSHOT]
	at kotlinx.coroutines.reactive.PublisherAsFlow.collect(ReactiveFlow.kt:77) ~[kotlinx-coroutines-reactive-1.3.2.jar:na]
	at kotlinx.coroutines.flow.FlowKt__TransformKt$onEach$$inlined$unsafeTransform$1.collect(SafeCollector.kt:127) ~[kotlinx-coroutines-core-1.3.2.jar:na]
	at kotlinx.coroutines.flow.FlowKt__CollectKt.collect(Collect.kt:30) ~[kotlinx-coroutines-core-1.3.2.jar:na]
	at kotlinx.coroutines.flow.FlowKt.collect(Unknown Source) ~[kotlinx-coroutines-core-1.3.2.jar:na]
```

Some days ago everything works as expected, after replacing 2.2.2.BUILD-SNAPSHOT with 2.2.1.BUILD-SNAPSHOT, everything works again.

After debugging the problem seems to be in:

```
Flux<Payload> payloadFlux = this.payloadMono != null ?
					this.payloadMono.flatMapMany(rsocket::requestStream) :
					rsocket.requestChannel(this.payloadFlux);
```
With 2.2.1.BUILD-SNAPSHOT the null check returns true, while with 2.2.2.BUILD-SNAPSHOT the null check returns false.

I think that this happens because on [this commit](https://github.com/spring-projects/spring-framework/commit/996f7290cf97df2938287630ca956fe5ac35fdc8#diff-194716dad2f2306d0e70620b51d1779a) someone remove `emptyPayload()`:

```java
@Nullable
private Mono<Payload> payloadMono = emptyPayload();
```",2019-11-27 07:36:54,"[{'commitHash': '26d800cc936a9e1f6d326c3b48022267bb30ed0f', 'commitGHEventType': 'closed', 'commitUser': 'rstoyanchev', 'commitParents': ['5a552f16708192334de3b4d4a3cbf8a1c9027ebe'], 'nameRev': '26d800cc936a9e1f6d326c3b48022267bb30ed0f tags/v5.2.2.RELEASE~37', 'commitMessage': 'Fix empty payload handling in RSocketRequester\n\nCloses gh-24088\n', 'commitDateTime': '2019-11-27 07:35:45', 'authoredDateTime': '2019-11-27 07:35:45', 'commitGitStats': [{'filePath': 'spring-messaging/src/main/java/org/springframework/messaging/rsocket/DefaultRSocketRequester.java', 'insertions': 26, 'deletions': 25, 'lines': 51}, {'filePath': 'spring-messaging/src/test/java/org/springframework/messaging/rsocket/DefaultRSocketRequesterTests.java', 'insertions': 19, 'deletions': 10, 'lines': 29}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'DefaultRSocketRequester.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.messaging.rsocket.DefaultRSocketRequester', 'TOT': 5, 'UPD': 3, 'INS': 1, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.messaging.rsocket.DefaultRSocketRequester.DefaultRequestSpec.getPayloadMonoRequired()', 'TOT': 7, 'UPD': 3, 'INS': 0, 'MOV': 2, 'DEL': 2}, {'spoonMethodName': 'org.springframework.messaging.rsocket.DefaultRSocketRequester.DefaultRequestSpec.send()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.messaging.rsocket.DefaultRSocketRequester.DefaultRequestSpec.retrieveMono(org.springframework.core.ResolvableType)', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.messaging.rsocket.DefaultRSocketRequester.DefaultRequestSpec.createPayload(java.lang.Object,org.springframework.core.ResolvableType)', 'TOT': 11, 'UPD': 7, 'INS': 1, 'MOV': 2, 'DEL': 1}, {'spoonMethodName': 'org.springframework.messaging.rsocket.DefaultRSocketRequester.DefaultRequestSpec.retrieveFlux(org.springframework.core.ResolvableType)', 'TOT': 6, 'UPD': 0, 'INS': 2, 'MOV': 3, 'DEL': 1}]}, {'spoonFilePath': 'DefaultRSocketRequesterTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.messaging.rsocket.DefaultRSocketRequesterTests.sendMonoWithoutData()', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.messaging.rsocket.DefaultRSocketRequesterTests.fluxToMonoIsRejected()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.messaging.rsocket.DefaultRSocketRequesterTests.retrieveFluxWithoutData()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-framework/issues/24088,0.0002777777777777778,"['in: messaging', 'type: bug']",Null pointer when connecting to RSocket,1.0,"['org.springframework.messaging.rsocket.DefaultRSocketRequester.DefaultRequestSpec.retrieveMono(org.springframework.core.ResolvableType)', 'org.springframework.messaging.rsocket.DefaultRSocketRequester.DefaultRequestSpec.send()', 'org.springframework.messaging.rsocket.DefaultRSocketRequester.DefaultRequestSpec.getPayloadMonoRequired()', 'org.springframework.messaging.rsocket.DefaultRSocketRequester.DefaultRequestSpec.retrieveFlux(org.springframework.core.ResolvableType)', 'org.springframework.messaging.rsocket.DefaultRSocketRequester.DefaultRequestSpec.createPayload(java.lang.Object,org.springframework.core.ResolvableType)', 'org.springframework.messaging.rsocket.DefaultRSocketRequester']",['26d800cc936a9e1f6d326c3b48022267bb30ed0f'],,['spring-messaging/src/main/java/org/springframework/messaging/rsocket'],26.0,25.0,51.0,1.0,15.0,6.0,32.0,9.0,4.0,4.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-framework
47931,2019-03-15 17:27:36,phillipuniverse,"<!--
!!! For Security Vulnerabilities, please go to https://pivotal.io/security !!!
-->
**Affects:** 5.1.5.RELEASE

---

I am trying to receive a `Locale` into a required `@RequestParam`. The happy path parsing works great, but I am receiving `null` into my `@RequestMapping` when `Locale` parsing fails. Here's my currently-failing test (run against Spring Boot 2.1.3.RELEASE):

```java
@WebMvcTest
public class LocaleDeserializationTest {

    @Configuration
    static class Config {

        @RestController
        static class LocaleController {

            @GetMapping(""/request-param"")
            public String requestParam(@RequestParam Locale locale) {
                return locale.toLanguageTag();
            }
        }
    }

    @Autowired
    MockMvc mockMvc;

    @Test
    public void badLocaleRequestParam() throws Exception {
        mockMvc.perform(get(""/request-param"").param(""locale"", ""thiswillbebadrequest""))
                .andExpect(status().isBadRequest());
    }
}
```

This in fact throws a `NullPointerException` because `locale` is null within the execution of the `requestParam()` method. I also tried marking the argument as `@NonNull` (the Spring variant) but that also still allowed `null` to come in for `Locale`.

A bit of investigation led me to the `StringToLocaleConverter`, and `StringUtils.parseLocale()` correctly returns null. I would expect that since my `@RequestParam` is a _required_ parameter, this would end up returning a 400 client response.

The same thing happens with `@PathVariable`, but I would expect that one would actually be a 404 not found.",2019-03-25 14:06:56,"[{'commitHash': '507d4ba8252056ce7771250ee845f60f67fa70db', 'commitGHEventType': 'closed', 'commitUser': 'jhoeller', 'commitParents': ['8d7676a5ec53a52738c9dee9e419a7941c72be64'], 'nameRev': '507d4ba8252056ce7771250ee845f60f67fa70db tags/v5.1.6.RELEASE~37', 'commitMessage': 'StringUtils.parseLocale consistently handles invalid locale values\n\nCloses gh-22603\n', 'commitDateTime': '2019-03-25 13:53:54', 'authoredDateTime': '2019-03-25 13:53:54', 'commitGitStats': [{'filePath': 'spring-core/src/main/java/org/springframework/util/StringUtils.java', 'insertions': 3, 'deletions': 1, 'lines': 4}, {'filePath': 'spring-core/src/test/java/org/springframework/util/StringUtilsTests.java', 'insertions': 17, 'deletions': 1, 'lines': 18}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'StringUtils.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.util.StringUtils.parseLocale(java.lang.String)', 'TOT': 5, 'UPD': 0, 'INS': 2, 'MOV': 2, 'DEL': 1}]}, {'spoonFilePath': 'StringUtilsTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.util.StringUtilsTests.testInvalidLocaleWithLocaleString()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.util.StringUtilsTests.testInvalidLocaleWithLanguageTag()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': 'f68ad7957f4ea35cdf36603289ebf2e55a9ad618', 'commitGHEventType': 'referenced', 'commitUser': 'jhoeller', 'commitParents': ['5fcf662a05741483b5a6825d196ed0f92f536af6'], 'nameRev': 'f68ad7957f4ea35cdf36603289ebf2e55a9ad618 tags/v5.0.13.RELEASE~16', 'commitMessage': 'StringUtils.parseLocale consistently handles invalid locale values\n\nCloses gh-22603\n', 'commitDateTime': '2019-03-26 17:18:36', 'authoredDateTime': '2019-03-25 13:53:54', 'commitGitStats': [{'filePath': 'spring-core/src/main/java/org/springframework/util/StringUtils.java', 'insertions': 5, 'deletions': 3, 'lines': 8}, {'filePath': 'spring-core/src/test/java/org/springframework/util/StringUtilsTests.java', 'insertions': 17, 'deletions': 1, 'lines': 18}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'StringUtils.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.util.StringUtils.delimitedListToStringArray(java.lang.String,java.lang.String,java.lang.String)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.util.StringUtils.parseLocaleTokens(java.lang.String,java.lang.String[])', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.util.StringUtils.parseLocale(java.lang.String)', 'TOT': 8, 'UPD': 0, 'INS': 2, 'MOV': 4, 'DEL': 2}]}, {'spoonFilePath': 'StringUtilsTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.util.StringUtilsTests.testInvalidLocaleWithLocaleString()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.util.StringUtilsTests.testInvalidLocaleWithLanguageTag()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-framework/issues/22603,9.000277777777777,"['in: core', 'status: backported', 'type: bug']",Locale inconsistently resolves to null for invalid input value,1.0,['org.springframework.util.StringUtils.parseLocale(java.lang.String)'],['507d4ba8252056ce7771250ee845f60f67fa70db'],,['spring-core/src/main/java/org/springframework/util'],3.0,1.0,4.0,1.0,0.0,1.0,5.0,2.0,2.0,1.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,spring-framework
51906,2020-04-03 17:15:37,sbrannen,"## Overview

Prior to Spring Framework 5.2, some of our annotation utilities would not _synthesize_ an annotation if it was already synthesized or not _synthesizable_.

It appears that we may have lost this functionality with the introduction of the new `MergedAnnotations` API. This issue is therefore labeled as a _potential_ regression.

## Deliverables

- [x] Determine if annotations are synthesized unnecessarily and decide where to go from there.
",2020-04-23 17:12:30,"[{'commitHash': '31fa1569c54649c7f3cbf7ec330e2a7232c7cd3a', 'commitGHEventType': 'closed', 'commitUser': 'sbrannen', 'commitParents': ['8d31dcaa297c3e9001a6e8470b400641ae1c49d0'], 'nameRev': '31fa1569c54649c7f3cbf7ec330e2a7232c7cd3a tags/v5.2.6.RELEASE~33', 'commitMessage': 'Avoid synthesizing annotations unnecessarily\n\nPrior to Spring Framework 5.2, some of our annotation utilities would\nnot synthesize an annotation if it was already synthesized or not\nsynthesizable (i.e., did not declare local aliases via @AliasFor and\ndid not declare attributes that could override attributes in the\nmeta-annotation hierarchy above the given annotation); however, we lost\nmost of this functionality with the introduction of the new\nMergedAnnotations API.\n\nThis commit revises the implementation of createSynthesized() in\nTypeMappedAnnotation so that, for invocations of\nMergedAnnotation.synthesize() and indirectly for invocations of\nAnnotatedElementUtils.findMergedAnnotation(), etc.:\n\n1. An annotation that was previously synthesized will not be\n   synthesized again.\n\n2. An annotation that is not ""synthesizable"" will not be synthesized.\n\nFor both of the above use cases, the original annotation is now\nreturned from createSynthesized().\n\nCloses gh-24861\n', 'commitDateTime': '2020-04-21 13:31:06', 'authoredDateTime': '2020-04-20 15:30:48', 'commitGitStats': [{'filePath': 'spring-core/src/main/java/org/springframework/core/annotation/TypeMappedAnnotation.java', 'insertions': 11, 'deletions': 0, 'lines': 11}, {'filePath': 'spring-core/src/test/java/org/springframework/core/annotation/MergedAnnotationsTests.java', 'insertions': 57, 'deletions': 0, 'lines': 57}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'TypeMappedAnnotation.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.core.annotation.TypeMappedAnnotation.createSynthesized()', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'MergedAnnotationsTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.core.annotation.MergedAnnotationsTests.synthesizeShouldNotSynthesizeNonsynthesizableAnnotations()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.core.annotation.MergedAnnotationsTests.synthesizeShouldNotResynthesizeAlreadySynthesizedAnnotations()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.core.annotation.MergedAnnotationsTests', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.core.annotation.MergedAnnotationsTests.getId()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '8265db0ae1d83a1e204e602fa96e542c2677977f', 'commitGHEventType': 'closed', 'commitUser': 'sbrannen', 'commitParents': ['0520ee0fb62464687b74e7ad3bc234c30baa3732'], 'nameRev': '8265db0ae1d83a1e204e602fa96e542c2677977f tags/v5.2.6.RELEASE~27', 'commitMessage': 'Avoid synthesizing annotations unnecessarily\n\nCommit 31fa1569c5 introduced initial support for avoiding unnecessary\nannotation synthesis in the MergedAnnotation API; however, it only\navoided synthesis for annotations that do not declare any attributes.\n\nThis commit reworks this support to avoid unnecessary annotation\nsynthesis for annotations that declare attributes.\n\nSpecifically, this commit introduces a new `isSynthesizable()` method\nin AnnotationTypeMapping that allows the ""synthesizable"" flag to be\ncomputed once and cached along with the other metadata already cached\nin AnnotationTypeMapping instances. TypeMappedAnnotation now delegates\nto this new method when determining whether it should synthesize an\nannotation.\n\nCloses gh-24861\n', 'commitDateTime': '2020-04-23 19:09:30', 'authoredDateTime': '2020-04-23 18:51:45', 'commitGitStats': [{'filePath': 'spring-core/src/main/java/org/springframework/core/annotation/AnnotationTypeMapping.java', 'insertions': 55, 'deletions': 0, 'lines': 55}, {'filePath': 'spring-core/src/main/java/org/springframework/core/annotation/MergedAnnotation.java', 'insertions': 19, 'deletions': 5, 'lines': 24}, {'filePath': 'spring-core/src/main/java/org/springframework/core/annotation/TypeMappedAnnotation.java', 'insertions': 10, 'deletions': 9, 'lines': 19}, {'filePath': 'spring-core/src/test/java/org/springframework/core/annotation/MergedAnnotationsTests.java', 'insertions': 20, 'deletions': 3, 'lines': 23}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'AnnotationTypeMapping.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.core.annotation.AnnotationTypeMapping', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.core.annotation.AnnotationTypeMapping.computeSynthesizableFlag()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.core.annotation.AnnotationTypeMapping.isSynthesizable()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'MergedAnnotation.java', 'spoonMethods': []}, {'spoonFilePath': 'TypeMappedAnnotation.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.core.annotation.TypeMappedAnnotation.createSynthesized()', 'TOT': 19, 'UPD': 1, 'INS': 3, 'MOV': 11, 'DEL': 4}, {'spoonMethodName': 'org.springframework.core.annotation.TypeMappedAnnotation.isSynthesizable()', 'TOT': 2, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'MergedAnnotationsTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.core.annotation.MergedAnnotationsTests', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.core.annotation.MergedAnnotationsTests.synthesizeShouldNotSynthesizeNonsynthesizableAnnotations()', 'TOT': 6, 'UPD': 0, 'INS': 6, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.core.annotation.MergedAnnotationsTests.getId()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-framework/issues/24861,19.00027777777778,"['in: core', 'type: regression']",Annotation searches potentially synthesize annotations unnecessarily,1.0,['org.springframework.core.annotation.TypeMappedAnnotation.createSynthesized()'],['31fa1569c54649c7f3cbf7ec330e2a7232c7cd3a'],,['spring-core/src/main/java/org/springframework/core/annotation'],11.0,0.0,11.0,1.0,0.0,1.0,2.0,0.0,2.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,spring-framework
51967,2019-08-30 14:07:48,wilkinsona,"**Affects:** 5.1.9.RELEASE

The entry set returned from the result of calling `HttpHeaders.readOnlyHttpHeaders(HttpHeaders)` does not maintain the original headers' ordering. This is a regression from 5.1.0 that I think was introduced in 5.1.1 in https://github.com/spring-projects/spring-framework/commit/ce7278aaf4f20348862267c2081c20dc5bd77128. I believe the set is unordered due to the use of `Collectors.toSet()` which creats an unordered `Set`:

https://github.com/spring-projects/spring-framework/blob/1ea6ce72bb3b1139abc370f6dc32c51fc27ae90b/spring-web/src/main/java/org/springframework/http/ReadOnlyHttpHeaders.java#L146",2019-08-31 11:25:01,"[{'commitHash': '9729b460f1a418997843c946ff5cdbfc870b0094', 'commitGHEventType': 'closed', 'commitUser': 'sbrannen', 'commitParents': ['a4963537700db2ef671d563638de577e18465f65'], 'nameRev': '9729b460f1a418997843c946ff5cdbfc870b0094 tags/v5.2.0.RC2~9^2~6', 'commitMessage': ""Retain entry set order in read-only HttpHeaders\n\nPrior to this commit, the entry set of read-only HttpHeaders lost the\noriginal headers' ordering.\n\nThe changes in commit ce7278aaf4 introduced a regression in the read-only\nHttpHeaders support. Specifically, the implementation of entrySet() in\nthe internal ReadOnlyHttpHeaders class converted the original entry set\nto an immutable, non-ordered set of immutable entries.\n\nThis commit fixes this issue by converting the original entry set to an\nimmutable, ordered set of immutable entries.\n\nCloses gh-23551\n"", 'commitDateTime': '2019-08-31 13:10:07', 'authoredDateTime': '2019-08-31 12:26:06', 'commitGitStats': [{'filePath': 'spring-web/src/main/java/org/springframework/http/ReadOnlyHttpHeaders.java', 'insertions': 7, 'deletions': 4, 'lines': 11}, {'filePath': 'spring-web/src/test/java/org/springframework/http/HttpHeadersTests.java', 'insertions': 18, 'deletions': 0, 'lines': 18}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ReadOnlyHttpHeaders.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.http.ReadOnlyHttpHeaders.entrySet()', 'TOT': 6, 'UPD': 3, 'INS': 0, 'MOV': 3, 'DEL': 0}]}, {'spoonFilePath': 'HttpHeadersTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.http.HttpHeadersTests.readOnlyHttpHeadersRetainEntrySetOrder()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '0103fec5de0fa621c55a39d1025f40592ac7515e', 'commitGHEventType': 'referenced', 'commitUser': 'sbrannen', 'commitParents': ['5a22eafcb4d97520a01d26a15bc05c41615463a0'], 'nameRev': '0103fec5de0fa621c55a39d1025f40592ac7515e tags/v5.2.0.RC2~76', 'commitMessage': 'Convert assertions to AssertJ\n\nSee gh-23551\n', 'commitDateTime': '2019-08-31 13:13:44', 'authoredDateTime': '2019-08-31 13:13:44', 'commitGitStats': [{'filePath': 'spring-web/src/test/java/org/springframework/http/HttpHeadersTests.java', 'insertions': 2, 'deletions': 2, 'lines': 4}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpHeadersTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.http.HttpHeadersTests.readOnlyHttpHeadersRetainEntrySetOrder()', 'TOT': 10, 'UPD': 6, 'INS': 0, 'MOV': 2, 'DEL': 2}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-framework/issues/23551,0.0002777777777777778,"['in: web', 'type: regression']",Entry set of read-only HttpHeaders loses original headers' ordering,1.0,['org.springframework.http.ReadOnlyHttpHeaders.entrySet()'],"['9729b460f1a418997843c946ff5cdbfc870b0094', '0103fec5de0fa621c55a39d1025f40592ac7515e']",,['spring-web/src/main/java/org/springframework/http'],7.0,4.0,11.0,1.0,3.0,1.0,6.0,3.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-framework
52613,2018-08-27 19:26:08,rwinch,"<!--
For Security Vulnerabilities, please use https://pivotal.io/security#reporting
-->

### Summary

BearerTokenServerAuthenticationEntryPoint should not do any work until something subscribes",2018-08-27 19:28:24,"[{'commitHash': '713e1e33567e8bf5ac16fa986426d7b48f601942', 'commitGHEventType': 'closed', 'commitUser': 'rwinch', 'commitParents': ['362c2ef1f25bcf727fefd587555504ad48f557ae'], 'nameRev': '713e1e33567e8bf5ac16fa986426d7b48f601942 tags/5.1.0.RC2~44', 'commitMessage': 'BearerTokenServerAuthenticationEntryPoint waits for subscriber\n\nFixes: gh-5742\n', 'commitDateTime': '2018-08-27 14:26:45', 'authoredDateTime': '2018-08-27 14:26:45', 'commitGitStats': [{'filePath': 'oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server/resource/web/server/BearerTokenServerAuthenticationEntryPoint.java', 'insertions': 10, 'deletions': 8, 'lines': 18}, {'filePath': 'oauth2/oauth2-resource-server/src/test/java/org/springframework/security/oauth2/server/resource/web/server/BearerTokenServerAuthenticationEntryPointTests.java', 'insertions': 8, 'deletions': 0, 'lines': 8}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'BearerTokenServerAuthenticationEntryPoint.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.security.oauth2.server.resource.web.server.BearerTokenServerAuthenticationEntryPoint.commence(org.springframework.web.server.ServerWebExchange,org.springframework.security.core.AuthenticationException)', 'TOT': 20, 'UPD': 3, 'INS': 2, 'MOV': 11, 'DEL': 4}, {'spoonMethodName': 'org.springframework.security.oauth2.server.resource.web.server.BearerTokenServerAuthenticationEntryPoint.computeWWWAuthenticateHeaderValue(java.util.Map)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'BearerTokenServerAuthenticationEntryPointTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.security.oauth2.server.resource.web.server.BearerTokenServerAuthenticationEntryPointTests.commenceWhenNoSubscriberThenNothingHappens()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-security/issues/5742,0.0002777777777777778,"['in: web', 'type: bug']",BearerTokenServerAuthenticationEntryPoint should delay work,1.0,"['org.springframework.security.oauth2.server.resource.web.server.BearerTokenServerAuthenticationEntryPoint.commence(org.springframework.web.server.ServerWebExchange,org.springframework.security.core.AuthenticationException)', 'org.springframework.security.oauth2.server.resource.web.server.BearerTokenServerAuthenticationEntryPoint.computeWWWAuthenticateHeaderValue(java.util.Map)']",['713e1e33567e8bf5ac16fa986426d7b48f601942'],,['oauth2/oauth2-resource-server/src/main/java/org/springframework/security/oauth2/server'],10.0,8.0,18.0,1.0,4.0,2.0,21.0,11.0,2.0,4.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-security
52671,2018-03-28 00:06:18,jgrandja,`HttpSessionOAuth2AuthorizationRequestRepository.loadAuthorizationRequest()` asserts the `state` parameter as required which is incorrect. If the `state` parameter is not available in the `request` than it should simply return `null`.,2018-03-28 00:11:50,"[{'commitHash': 'ce2f669245cfa733b3e3b2499a26668cea534403', 'commitGHEventType': 'closed', 'commitUser': 'jgrandja', 'commitParents': ['ec46b7dbe1d48ef8cd4dc730369bb97dfdf2823c'], 'nameRev': 'ce2f669245cfa733b3e3b2499a26668cea534403 tags/5.1.0.M1~92', 'commitMessage': 'Remove state assertion when loading OAuth2AuthorizationRequest\n\nFixes gh-5163\n', 'commitDateTime': '2018-03-27 20:06:30', 'authoredDateTime': '2018-03-27 17:16:18', 'commitGitStats': [{'filePath': 'oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client/web/HttpSessionOAuth2AuthorizationRequestRepository.java', 'insertions': 5, 'deletions': 3, 'lines': 8}, {'filePath': 'oauth2/oauth2-client/src/test/java/org/springframework/security/oauth2/client/web/HttpSessionOAuth2AuthorizationRequestRepositoryTests.java', 'insertions': 5, 'deletions': 6, 'lines': 11}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'HttpSessionOAuth2AuthorizationRequestRepository.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizationRequestRepository.loadAuthorizationRequest(javax.servlet.http.HttpServletRequest)', 'TOT': 4, 'UPD': 0, 'INS': 2, 'MOV': 0, 'DEL': 2}, {'spoonMethodName': 'org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizationRequestRepository.removeAuthorizationRequest(javax.servlet.http.HttpServletRequest)', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}]}, {'spoonFilePath': 'HttpSessionOAuth2AuthorizationRequestRepositoryTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizationRequestRepositoryTests.loadAuthorizationRequestWhenSavedAndStateParameterNullThenThrowIllegalArgumentException()', 'TOT': 6, 'UPD': 4, 'INS': 0, 'MOV': 2, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-security/issues/5163,0.0002777777777777778,"['in: oauth2', 'type: bug']",Incorrect assertion in loading OAuth2AuthorizationRequest,1.0,"['org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizationRequestRepository.removeAuthorizationRequest(javax.servlet.http.HttpServletRequest)', 'org.springframework.security.oauth2.client.web.HttpSessionOAuth2AuthorizationRequestRepository.loadAuthorizationRequest(javax.servlet.http.HttpServletRequest)']",['ce2f669245cfa733b3e3b2499a26668cea534403'],,['oauth2/oauth2-client/src/main/java/org/springframework/security/oauth2/client'],5.0,3.0,8.0,1.0,0.0,2.0,6.0,0.0,3.0,3.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-security
52715,2017-11-06 15:22:54,rwinch,"### Summary

If `PasswordEncoder` is set twice the password is double encoded",2017-11-06 15:48:15,"[{'commitHash': 'd9abd2e44317a8b3a11cf53074c13b0ad85afe0b', 'commitGHEventType': 'closed', 'commitUser': 'rwinch', 'commitParents': ['21aec19d427580eceeb65a7fcdce739084ef1682'], 'nameRev': 'd9abd2e44317a8b3a11cf53074c13b0ad85afe0b tags/5.0.0.RELEASE~103', 'commitMessage': 'User.UserBuilder only encodes once\n\nFixes gh-4794\n', 'commitDateTime': '2017-11-06 09:47:37', 'authoredDateTime': '2017-11-06 09:27:03', 'commitGitStats': [{'filePath': 'core/src/main/java/org/springframework/security/core/userdetails/User.java', 'insertions': 4, 'deletions': 4, 'lines': 8}, {'filePath': 'core/src/test/java/org/springframework/security/core/userdetails/UserTests.java', 'insertions': 14, 'deletions': 0, 'lines': 14}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'User.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.security.core.userdetails.User.UserBuilder.password(java.lang.String)', 'TOT': 3, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'org.springframework.security.core.userdetails.User.UserBuilder.passwordEncoder(java.util.function.Function)', 'TOT': 3, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'org.springframework.security.core.userdetails.User.UserBuilder.build()', 'TOT': 3, 'UPD': 0, 'INS': 2, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'UserTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.security.core.userdetails.UserTests.withUsernameWhenPasswordAndPasswordEncoderTwiceThenEncodesOnce()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-security/issues/4794,0.0002777777777777778,"['in: core', 'type: bug']",UserBuilder.password can be double encoded,1.0,"['org.springframework.security.core.userdetails.User.UserBuilder.password(java.lang.String)', 'org.springframework.security.core.userdetails.User.UserBuilder.passwordEncoder(java.util.function.Function)', 'org.springframework.security.core.userdetails.User.UserBuilder.build()']",['d9abd2e44317a8b3a11cf53074c13b0ad85afe0b'],,['core/src/main/java/org/springframework/security/core/userdetails'],4.0,4.0,8.0,1.0,1.0,3.0,9.0,3.0,3.0,2.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-security
54355,2016-11-10 22:55:38,rwinch,"If I run the following from the root project

NOTE: It does not happen if I run from the specific samples

```bash
$ gradlew clean check
```

I get the exception

```
:samples:httpsession-gemfire-clientserver:integrationTomcatStop
Invocation of destroy method failed on bean with name 'gemfirePool'
java.lang.IllegalStateException: Pool could not be destroyed because it is still in use by 1 regions
	at com.gemstone.gemfire.cache.client.internal.PoolImpl.destroy(PoolImpl.java:501)
	at org.springframework.data.gemfire.client.PoolFactoryBean.destroy(PoolFactoryBean.java:158)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)
	at org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:581)
	at org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:116)
	at org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:5061)
	at org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5719)
	at org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)
	at org.apache.catalina.Lifecycle$stop$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)
	at org.apache.catalina.Lifecycle$stop$0.call(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callSafe(AbstractCallSite.java:80)
	at com.bmuschko.gradle.tomcat.embedded.BaseTomcatServerImpl.stop(BaseTomcatServerImpl.groovy:61)
	at com.bmuschko.gradle.tomcat.embedded.TomcatServer$stop$8.call(Unknown Source)
	at com.bmuschko.gradle.tomcat.internal.ShutdownMonitor.run(ShutdownMonitor.groovy:75)
```

The tests still pass, but this error should not be happening
",2016-11-11 02:20:22,"[{'commitHash': 'dd3a57149477274cc6fca7e9e054eefb87671a28', 'commitGHEventType': 'closed', 'commitUser': 'jxblum', 'commitParents': ['e4fe53abf8207663f34f506a3bb8b7acde5fbcaa'], 'nameRev': 'dd3a57149477274cc6fca7e9e054eefb87671a28 tags/1.3.0.RC1~24', 'commitMessage': 'Avoid premature destruction of the GemFire Pool used by the client Sessions Region.\n\nFixes gh-665\n', 'commitDateTime': '2016-11-10 18:09:39', 'authoredDateTime': '2016-11-10 17:36:42', 'commitGitStats': [{'filePath': 'gradle.properties', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'samples/httpsession-gemfire-clientserver-xml/src/main/webapp/WEB-INF/spring/session-client.xml', 'insertions': 2, 'deletions': 2, 'lines': 4}, {'filePath': 'samples/httpsession-gemfire-clientserver/src/main/java/sample/ClientConfig.java', 'insertions': 13, 'deletions': 20, 'lines': 33}, {'filePath': 'samples/httpsession-gemfire-clientserver/src/main/java/sample/ServerConfig.java', 'insertions': 0, 'deletions': 1, 'lines': 1}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'ClientConfig.java', 'spoonMethods': [{'spoonMethodName': 'sample.ClientConfig.gemfirePool(int)', 'TOT': 9, 'UPD': 9, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'sample.ClientConfig.gemfireCache()', 'TOT': 5, 'UPD': 0, 'INS': 0, 'MOV': 4, 'DEL': 1}, {'spoonMethodName': 'sample.ClientConfig', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'ServerConfig.java', 'spoonMethods': [{'spoonMethodName': 'sample.ServerConfig.gemfireProperties()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-session/issues/665,0.0002777777777777778,"['in: docs', 'in: gemfire', 'type: bug']",GemFire Samples throw IllegalStateException on Shutdown,1.0,"['sample.ClientConfig.gemfireCache()', 'sample.ClientConfig.gemfirePool(int)', 'sample.ClientConfig', 'sample.ServerConfig.gemfireProperties()']",['dd3a57149477274cc6fca7e9e054eefb87671a28'],,"['samples/httpsession-gemfire-clientserver/src/main/java/sample', 'gradle.properties']",14.0,22.0,36.0,3.0,9.0,4.0,16.0,4.0,1.0,2.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-session
54401,2015-02-19 22:45:27,rwinch,"If the session id changes, the session id needs to be sent back to the client.

Originally reported on #136 but only want part of the suggestions in the PR (i.e. do not want commit for flag to always send the cookie).
",2015-02-19 22:49:52,"[{'commitHash': '29ad2383079bbcfe6d6ec0bd2a5d8640c35c3fad', 'commitGHEventType': 'closed', 'commitUser': 'rwinch', 'commitParents': ['ae03fac4684e267ef6f2dfbb5aaec4c6dabb2fff'], 'nameRev': '29ad2383079bbcfe6d6ec0bd2a5d8640c35c3fad tags/1.0.1.RELEASE~30', 'commitMessage': 'Invoke HttpSessionStrategy.onNewSession if session id changed\n\nFixes gh-154\n', 'commitDateTime': '2015-02-19 16:49:38', 'authoredDateTime': '2015-02-19 16:07:57', 'commitGitStats': [{'filePath': 'spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java', 'insertions': 1, 'deletions': 1, 'lines': 2}, {'filePath': 'spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java', 'insertions': 32, 'deletions': 0, 'lines': 32}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'SessionRepositoryFilter.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 1, 'DEL': 0}]}, {'spoonFilePath': 'SessionRepositoryFilterTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError()', 'TOT': 3, 'UPD': 2, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage()', 'TOT': 4, 'UPD': 2, 'INS': 0, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect()', 'TOT': 4, 'UPD': 2, 'INS': 0, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush()', 'TOT': 3, 'UPD': 2, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionNew()', 'TOT': 4, 'UPD': 1, 'INS': 0, 'MOV': 3, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueNew()', 'TOT': 3, 'UPD': 1, 'INS': 0, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseNew()', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings()', 'TOT': 3, 'UPD': 1, 'INS': 1, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse()', 'TOT': 4, 'UPD': 1, 'INS': 1, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr()', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession()', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId()', 'TOT': 4, 'UPD': 1, 'INS': 0, 'MOV': 3, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId()', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId()', 'TOT': 3, 'UPD': 1, 'INS': 0, 'MOV': 2, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionNew().24', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueNew().25', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseNew().26', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings().29', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().28', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().30', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().31', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().32', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().33', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().34', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().35', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().36', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().37', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().38', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().39', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().40', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().41', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().42', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().43', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().44', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId().45', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext().46', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext().47', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval().48', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().49', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().50', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId().51', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId().52', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId().53', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().54', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().55', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().56', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().58', 'TOT': 2, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().62', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().63', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().64', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().65', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).66', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).67', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().28.doFilter(javax.servlet.http.HttpServletRequest)', 'TOT': 1, 'UPD': 1, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().30.doFilter(javax.servlet.http.HttpServletRequest)', 'TOT': 4, 'UPD': 4, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().32.doFilter(javax.servlet.http.HttpServletRequest)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().50.doFilter(javax.servlet.http.HttpServletRequest)', 'TOT': 2, 'UPD': 2, 'INS': 0, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().56.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)', 'TOT': 6, 'UPD': 1, 'INS': 0, 'MOV': 5, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().55.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)', 'TOT': 6, 'UPD': 1, 'INS': 0, 'MOV': 5, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().54.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)', 'TOT': 7, 'UPD': 1, 'INS': 0, 'MOV': 6, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().58.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)', 'TOT': 6, 'UPD': 0, 'INS': 0, 'MOV': 6, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().57.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().59.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush().60.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}, {'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().61.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 1, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '020fbdaf4f3982d03af041026fae73b3f1386ce6', 'commitGHEventType': 'referenced', 'commitUser': 'rwinch', 'commitParents': ['369e98c7eff46d229c5e84b9252590239a53f625'], 'nameRev': '020fbdaf4f3982d03af041026fae73b3f1386ce6 tags/1.0.1.RELEASE~28', 'commitMessage': 'Polish gh-154\n', 'commitDateTime': '2015-02-19 17:06:25', 'authoredDateTime': '2015-02-19 17:06:25', 'commitGitStats': [{'filePath': 'spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java', 'insertions': 1, 'deletions': 0, 'lines': 1}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'SessionRepositoryFilterTests.java', 'spoonMethods': [{'spoonMethodName': 'org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/spring-projects/spring-session/issues/154,0.0002777777777777778,['type: bug'],Invoke HttpSessionStrategy.onNewSession if session id changed,1.0,['org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()'],"['29ad2383079bbcfe6d6ec0bd2a5d8640c35c3fad', '020fbdaf4f3982d03af041026fae73b3f1386ce6']",,['spring-session/src/main/java/org/springframework/session/web/http'],1.0,1.0,2.0,1.0,0.0,1.0,2.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,spring-session
54577,2015-06-04 18:30:03,dmzaytsev,"RqMultipart.Base incorrect handles non-printable ASCII characters
to reproduce it just make a small changes in `RqMultipartTest.handlesRequestInTime()`
https://github.com/yegor256/takes/blob/master/src/test/java/org/takes/rq/RqMultipartTest.java#L357

change 

```
for (int ind = 0; ind < length; ++ind) {
            bwr.write(""X"");
}
```

to

```
Random rnd = new Random();
for (int ind = 0; ind < length; ++ind) {
    bwr.write(String.format(""%c"", rnd.nextInt(128)));         
}
```

`bwr.write(String.format(""%c"", rnd.nextInt(108)+20));` will work fine.
so problem in the non-printable characters from 0 to 19
",2015-06-08 07:36:16,"[{'commitHash': '36b63d4db710cf0b50c2f1b38d76659beec3c9a8', 'commitGHEventType': 'referenced', 'commitUser': 'yegor256', 'commitParents': ['364e80ea18fa618eb5065d3b47dd2ece6045afca'], 'nameRev': '36b63d4db710cf0b50c2f1b38d76659beec3c9a8 tags/0.20.1~4', 'commitMessage': '#331 reproduced\n', 'commitDateTime': '2015-06-07 11:39:24', 'authoredDateTime': '2015-06-07 11:39:24', 'commitGitStats': [{'filePath': 'src/test/java/org/takes/rq/RqMultipartTest.java', 'insertions': 1, 'deletions': 1, 'lines': 2}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RqMultipartTest.java', 'spoonMethods': [{'spoonMethodName': 'org.takes.rq.RqMultipartTest.handlesRequestInTime()', 'TOT': 2, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '6cab52e43f2a54364ef5751e85d46a3f4cc48314', 'commitGHEventType': 'referenced', 'commitUser': 'yegor256', 'commitParents': ['36b63d4db710cf0b50c2f1b38d76659beec3c9a8'], 'nameRev': '6cab52e43f2a54364ef5751e85d46a3f4cc48314 tags/0.20.1~3', 'commitMessage': '#331 test disabled\n', 'commitDateTime': '2015-06-07 11:47:34', 'authoredDateTime': '2015-06-07 11:47:34', 'commitGitStats': [{'filePath': 'src/main/java/org/takes/rq/RqMultipart.java', 'insertions': 2, 'deletions': 6, 'lines': 8}, {'filePath': 'src/test/java/org/takes/rq/RqMultipartTest.java', 'insertions': 4, 'deletions': 1, 'lines': 5}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RqMultipart.java', 'spoonMethods': [{'spoonMethodName': 'org.takes.rq.Fake.1.head()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}, {'spoonFilePath': 'RqMultipartTest.java', 'spoonMethods': [{'spoonMethodName': 'org.takes.rq.RqMultipartTest.handlesRequestInTime()', 'TOT': 1, 'UPD': 0, 'INS': 1, 'MOV': 0, 'DEL': 0}]}], 'spoonStatsSkippedReason': ''}, {'commitHash': '51aa5b851896a0e68f352f3120bc297b6e9a5524', 'commitGHEventType': 'referenced', 'commitUser': 'yegor256', 'commitParents': ['2343702000005a94b8e7e765fc7fbaaadb5fffc9'], 'nameRev': '51aa5b851896a0e68f352f3120bc297b6e9a5524 tags/0.20.1', 'commitMessage': '#331 polished and removed timeouts\n', 'commitDateTime': '2015-06-07 22:57:32', 'authoredDateTime': '2015-06-07 22:57:32', 'commitGitStats': [{'filePath': 'src/test/java/org/takes/rq/RqMultipartTest.java', 'insertions': 3, 'deletions': 6, 'lines': 9}], 'commitSpoonAstDiffStats': [{'spoonFilePath': 'RqMultipartTest.java', 'spoonMethods': [{'spoonMethodName': 'org.takes.rq.RqMultipartTest.notDistortContent()', 'TOT': 3, 'UPD': 1, 'INS': 0, 'MOV': 1, 'DEL': 1}, {'spoonMethodName': 'org.takes.rq.RqMultipartTest.handlesRequestInTime()', 'TOT': 1, 'UPD': 0, 'INS': 0, 'MOV': 0, 'DEL': 1}]}], 'spoonStatsSkippedReason': ''}]",https://github.com/yegor256/takes/issues/331,3.000277777777778,"['30 mins', '@dmzaytsev', 'DEV', 'bug', 'urgent']",RqMultipart.Base incorrect handles non-printable ASCII characters,1.0,['org.takes.rq.Fake.1.head()'],"['36b63d4db710cf0b50c2f1b38d76659beec3c9a8', '6cab52e43f2a54364ef5751e85d46a3f4cc48314', '51aa5b851896a0e68f352f3120bc297b6e9a5524']",,['src/main/java/org/takes/rq'],2.0,6.0,8.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,takes
