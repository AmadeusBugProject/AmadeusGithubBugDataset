{"projectName": "skylot/jadx", "bugLabels": ["bug"], "captureTime": "Sat Jul  4 18:20:52 2020", "issues": [{"title": "[core] Loading of APK files slow", "body": "Using the latest unstable version jadx-1.1.0-b1301-65553c15 loading larger APK files, such as Spotify or any other APK files has become very slow.\r\n\r\nI noticed that while the initial loading process dozens of temporary zipfs* temporary files are created and deleted next to the APK file. Mostly the temporary files I have seen are just a few KB large, hence processing them in-memory would be preferable instead of creating a temporary file that lives just a few milliseconds. ", "url": "https://github.com/skylot/jadx/issues/950", "user": "jpstotz", "labels": ["Core", "bug"], "created": "2020-06-10 10:16:23", "closed": "2020-06-11 14:39:26", "commits": {"a83ca1f85b240a79c045b2aa27785ef114c17ed0": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "a83ca1f85b240a79c045b2aa27785ef114c17ed0", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["65553c156cd0edbf5c75770e76de621984891255"], "nameRev": "a83ca1f85b240a79c045b2aa27785ef114c17ed0 master~4", "commitMessage": "fix: don't use FileChannel on ZipFs to avoid creation of temp files (#950)\n", "commitDateTime": "2020-06-10 22:39:56", "authoredDateTime": "2020-06-10 20:43:39", "commitGitStats": [{"filePath": "jadx-plugins/jadx-dex-input/src/main/java/jadx/plugins/input/dex/DexFileLoader.java", "insertions": 18, "deletions": 22, "lines": 40}, {"filePath": "jadx-plugins/jadx-dex-input/src/main/java/jadx/plugins/input/dex/DexReader.java", "insertions": 3, "deletions": 21, "lines": 24}, {"filePath": "jadx-plugins/jadx-dex-input/src/main/java/jadx/plugins/input/dex/sections/DexConsts.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DexFileLoader.java", "spoonMethods": [{"spoonMethodName": "jadx.plugins.input.dex.DexFileLoader.isStartWithBytes(java.nio.channels.FileChannel,byte[])", "TOT": 9, "UPD": 5, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "jadx.plugins.input.dex.DexFileLoader.loadDexFromPath(java.nio.file.Path,int)", "TOT": 11, "UPD": 9, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.plugins.input.dex.DexFileLoader.isDex(java.nio.channels.FileChannel)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.plugins.input.dex.DexFileLoader.isZip(java.nio.channels.FileChannel)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.plugins.input.dex.DexFileLoader.isStartWithBytes(byte[],byte[])", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DexReader.java", "spoonMethods": [{"spoonMethodName": "jadx.plugins.input.dex.DexReader", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 5}, {"spoonMethodName": "jadx.plugins.input.dex.DexReader.loadIntoByteBuffer(java.nio.channels.FileChannel)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.plugins.input.dex.DexReader.close()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DexConsts.java", "spoonMethods": [{"spoonMethodName": "jadx.plugins.input.dex.sections.DexConsts", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a83ca1f85b240a79c045b2aa27785ef114c17ed0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 23, "deletions": 43, "lines": 66, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 36, "UPD": 14, "INS": 8, "MOV": 4, "DEL": 10, "spoonFilesChanged": 3, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-plugins/jadx-dex-input/src/main/java/jadx/plugins/input/dex/sections", "jadx-plugins/jadx-dex-input/src/main/java/jadx/plugins/input/dex"], "changesInPackagesSPOON": ["jadx.plugins.input.dex.sections.DexConsts", "jadx.plugins.input.dex.DexFileLoader.isStartWithBytes(java.nio.channels.FileChannel,byte[])", "jadx.plugins.input.dex.DexReader.loadIntoByteBuffer(java.nio.channels.FileChannel)", "jadx.plugins.input.dex.DexFileLoader.isDex(java.nio.channels.FileChannel)", "jadx.plugins.input.dex.DexFileLoader.isStartWithBytes(byte[],byte[])", "jadx.plugins.input.dex.DexReader.close()", "jadx.plugins.input.dex.DexFileLoader.loadDexFromPath(java.nio.file.Path,int)", "jadx.plugins.input.dex.DexReader", "jadx.plugins.input.dex.DexFileLoader.isZip(java.nio.channels.FileChannel)"]}, {"title": "[core] Method code generation error", "body": "Class `android.support.v4.content.ModernAsyncTask`\r\n\r\n```java\r\n    public final ModernAsyncTask<Params, Progress, Result> executeOnExecutor(Executor executor, Params... paramsArr) {\r\n        Executor executor2 = executor;\r\n        Params[] paramsArr2 = paramsArr;\r\n        if (this.mStatus != Status.PENDING) {\r\n            switch (this.mStatus) {\r\n                case Status.RUNNING\r\n                /*  JADX ERROR: Method code generation error\r\n                    java.lang.ClassCastException: class jadx.core.dex.nodes.InsnNode cannot be cast to class jadx.api.plugins.input.data.annotations.EncodedValue (jadx.core.dex.nodes.InsnNode and jadx.api.plugins.input.data.annotations.EncodedValue are in unnamed module of loader 'app')\r\n                    \tat jadx.core.dex.attributes.FieldInitAttr.getEncodedValue(FieldInitAttr.java:35)\r\n                    \tat jadx.core.codegen.RegionGen.addCaseKey(RegionGen.java:291)\r\n                    \tat jadx.core.codegen.RegionGen.makeSwitch(RegionGen.java:270)\r\n                    \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:65)\r\n                    \tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:93)\r\n                    \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:59)\r\n                    \tat jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:99)\r\n                    \tat jadx.core.codegen.RegionGen.makeIf(RegionGen.java:143)\r\n                    \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:63)\r\n                    \tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:93)\r\n                    \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:59)\r\n                    \tat jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:244)\r\n                    \tat jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:237)\r\n                    \tat jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:347)\r\n                    \tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:300)\r\n                    \tat jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$3(ClassGen.java:269)\r\n                    \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n                    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n                    \tat java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)\r\n                    \tat java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)\r\n                    */\r\n                /*\r\n                    this = this;\r\n                    r0 = r7\r\n                    r1 = r8\r\n                    r2 = r9\r\n                    r3 = r0\r\n                    android.support.v4.content.ModernAsyncTask$Status r3 = r3.mStatus\r\n                    android.support.v4.content.ModernAsyncTask$Status r4 = android.support.v4.content.ModernAsyncTask.Status.PENDING\r\n                    if (r3 == r4) goto L_0x0039\r\n                    int[] r3 = android.support.v4.content.ModernAsyncTask.AnonymousClass4.$SwitchMap$android$support$v4$content$ModernAsyncTask$Status\r\n                    r4 = r0\r\n                    android.support.v4.content.ModernAsyncTask$Status r4 = r4.mStatus\r\n                    int r4 = r4.ordinal()\r\n                    r3 = r3[r4]\r\n                    switch(r3) {\r\n                        case 1: goto L_0x0023;\r\n                        case 2: goto L_0x002e;\r\n                        default: goto L_0x0018;\r\n                    }\r\n                L_0x0018:\r\n                    java.lang.IllegalStateException r3 = new java.lang.IllegalStateException\r\n                    r6 = r3\r\n                    r3 = r6\r\n                    r4 = r6\r\n                    java.lang.String r5 = \"We should never reach this state\"\r\n                    r4.<init>(r5)\r\n                    throw r3\r\n                L_0x0023:\r\n                    java.lang.IllegalStateException r3 = new java.lang.IllegalStateException\r\n                    r6 = r3\r\n                    r3 = r6\r\n                    r4 = r6\r\n                    java.lang.String r5 = \"Cannot execute task: the task is already running.\"\r\n                    r4.<init>(r5)\r\n                    throw r3\r\n                L_0x002e:\r\n                    java.lang.IllegalStateException r3 = new java.lang.IllegalStateException\r\n                    r6 = r3\r\n                    r3 = r6\r\n                    r4 = r6\r\n                    java.lang.String r5 = \"Cannot execute task: the task has already been executed (a task can be executed only once)\"\r\n                    r4.<init>(r5)\r\n                    throw r3\r\n                L_0x0039:\r\n                    r3 = r0\r\n                    android.support.v4.content.ModernAsyncTask$Status r4 = android.support.v4.content.ModernAsyncTask.Status.RUNNING\r\n                    r3.mStatus = r4\r\n                    r3 = r0\r\n                    r3.onPreExecute()\r\n                    r3 = r0\r\n                    android.support.v4.content.ModernAsyncTask$WorkerRunnable<Params, Result> r3 = r3.mWorker\r\n                    r4 = r2\r\n                    r3.mParams = r4\r\n                    r3 = r1\r\n                    r4 = r0\r\n                    java.util.concurrent.FutureTask<Result> r4 = r4.mFuture\r\n                    r3.execute(r4)\r\n                    r3 = r0\r\n                    r0 = r3\r\n                    return r0\r\n                    switch-data {1->0x0023, 2->0x002e, }\r\n                */\r\n                throw new UnsupportedOperationException(\"Method not decompiled: android.support.v4.content.ModernAsyncTask.executeOnExecutor(java.util.concurrent.Executor, java.lang.Object[]):android.support.v4.content.ModernAsyncTask\");\r\n            }\r\n```\r\n\r\n### Additional info\r\n - This regression was introduced in build 1299 (ae31fee8).\r\n - This app was built with AIDE.\r\n - The same error is seen several times in the code.\r\n - Even after turning on \"Show inconsistent code\" option it still gives that error.\r\n\r\nAPK: https://drive.google.com/file/d/1RQesxeywrcHQveXEZGFiv9EfIczF2Q3X/view", "url": "https://github.com/skylot/jadx/issues/946", "user": "alissonlauffer", "labels": ["Core", "bug"], "created": "2020-06-01 20:13:08", "closed": "2020-06-01 21:36:39", "commits": {"5e62b9077aecb9448bea5459b308d836893d21f3": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "440357d2e832b823616dfc809d44881eabcb4ddd": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5e62b9077aecb9448bea5459b308d836893d21f3", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["6192ced214dc05f6848ca786d2d38a900f717bbe"], "nameRev": "5e62b9077aecb9448bea5459b308d836893d21f3 master~7", "commitMessage": "fix: resolve ClassCastException on encoded value access (#946)\n", "commitDateTime": "2020-06-01 23:39:18", "authoredDateTime": "2020-06-01 21:38:52", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/RegionGen.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/info/ConstStorage.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegionGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.RegionGen.addCaseKey(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnArg,java.lang.Object)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "ConstStorage.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.info.ConstStorage.processConstFields(jadx.core.dex.nodes.ClassNode,java.util.List)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "440357d2e832b823616dfc809d44881eabcb4ddd", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["5e62b9077aecb9448bea5459b308d836893d21f3"], "nameRev": "440357d2e832b823616dfc809d44881eabcb4ddd master~6", "commitMessage": "fix: allow cross-block move inline (#946)\n\nSigned-off-by: Skylot <skylot@gmail.com>\n", "commitDateTime": "2020-06-01 22:24:42", "authoredDateTime": "2020-06-01 22:24:42", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/Jadx.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/MoveInlineVisitor.java", "insertions": 14, "deletions": 24, "lines": 38}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/TestReturnWrapping.java", "insertions": 8, "deletions": 14, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Jadx.java", "spoonMethods": [{"spoonMethodName": "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MoveInlineVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.MoveInlineVisitor.processMove(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode,int)", "TOT": 11, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.visitors.MoveInlineVisitor.moveInline(jadx.core.dex.nodes.MethodNode)", "TOT": 12, "UPD": 0, "INS": 1, "MOV": 8, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.visitors.MoveInlineVisitor.fromThisBlock(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.MoveInlineVisitor.processMove(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestReturnWrapping.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.TestReturnWrapping.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.TestReturnWrapping.TestCls.f2(java.lang.Object,int)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5e62b9077aecb9448bea5459b308d836893d21f3", "440357d2e832b823616dfc809d44881eabcb4ddd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 18, "deletions": 31, "lines": 49, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 38, "UPD": 2, "INS": 6, "MOV": 20, "DEL": 10, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core", "jadx-core/src/main/java/jadx/core/dex/info", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/dex/visitors"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.MoveInlineVisitor.fromThisBlock(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode,int)", "jadx.core.dex.info.ConstStorage.processConstFields(jadx.core.dex.nodes.ClassNode,java.util.List)", "jadx.core.dex.visitors.MoveInlineVisitor.processMove(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode,int)", "jadx.core.codegen.RegionGen.addCaseKey(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnArg,java.lang.Object)", "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "jadx.core.dex.visitors.MoveInlineVisitor.processMove(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.visitors.MoveInlineVisitor.moveInline(jadx.core.dex.nodes.MethodNode)"]}, {"title": "[core] Possible issue: parsed APK has a reference to an adaptive icon that has no files to reference to", "body": "Sadly I can't fill this form correctly, because I use the online tool which doesn't even seem to show the version of Jadx:\r\n\r\nhttp://www.javadecompilers.com/\r\n\r\nThe problematic file is:\r\n\r\n[base.zip](https://github.com/skylot/jadx/files/4708416/base.zip)\r\n\r\nThe website shows that the app icon is \"adaptiveproduct_one\":\r\n\r\n![image](https://user-images.githubusercontent.com/5357526/83362498-7ddabe00-a39a-11ea-89d8-9c4cc881a14b.png)\r\n\r\nThis file doesn't exist when I extract the APK file. In fact there are almost no resource folders, no \"mipmap\" or \"drawable\" folders at all.\r\n\r\nUsing a different tool ([here](https://github.com/hsiafan/apk-parser/)), I got 2 different candidates for icons:\r\n\r\n1. \"res/xm.png\" , but this file is just this one:\r\n![xm](https://user-images.githubusercontent.com/5357526/83362540-c3978680-a39a-11ea-9fe1-f8957fbc44c3.png)\r\n\r\n2. \"res/uG.xml\" , and even though it failed to get its content as adaptive icon, on the website I got this:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<adaptive-icon xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:aapt=\"http://schemas.android.com/aapt\">\r\n    <background>\r\n        <bitmap android:src=\"@mipmap/adaptiveproduct_one_background_color_108\"/>\r\n    </background>\r\n    <foreground>\r\n        <bitmap android:src=\"@mipmap/adaptiveproduct_one_foreground_color_108\"/>\r\n    </foreground>\r\n</adaptive-icon>\r\n```\r\nBut, again, \"mipmap\" folder doesn't exist, and even the file \"adaptiveproduct_one_foreground_color_108\" doesn't exist anywhere using Jadx...\r\n\r\nSo, what I did is to try another website, [here](https://www.apkdecompilers.com/), and this is what I got from it:\r\n\r\n[base.apk.zip](https://github.com/skylot/jadx/files/4708480/base.apk.zip)\r\n\r\nSeems it has 2 resource folders: \"res\" and \"resourced/res\" (the one I saw before, without mipmap and drawable folders). Looking at \"res\", I can finally see \"adaptiveproduct_one_foreground_color_108\" file.\r\n\r\nHow could it be? Where did this folder and its files come from?  Are those all in \"resources.arsc\" file somehow?\r\n", "url": "https://github.com/skylot/jadx/issues/944", "user": "AndroidDeveloperLB", "labels": ["Core", "bug"], "created": "2020-05-31 21:16:17", "closed": "2020-06-02 17:54:23", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Problem while building jadx-0.7.0", "body": "Hii,\r\n\r\nI'm trying to build the package for version 0.7.0, which has Gradle support of 4.x.\r\n\r\nWhile, on building the package locally on my system, I'm getting the following error:\r\n\r\n```\r\n* What went wrong:\r\nA problem occurred evaluating project ':jadx-gui'.\r\n> Could not resolve all files for configuration ':jadx-gui:compile'.\r\n   > Could not resolve uk.com.robust-it:cloning:1.9.9.\r\n     Required by:\r\n         project :jadx-gui > project :jadx-core\r\n      > No cached version of uk.com.robust-it:cloning:1.9.9 available for offline mode.\r\n      > No cached version of uk.com.robust-it:cloning:1.9.9 available for offline mode.\r\n* Try:\r\nRun with --debug option to get more log output. Run with --scan to get full insights.\r\n\r\n* Exception is:\r\norg.gradle.api.GradleScriptException: A problem occurred evaluating project ':jadx-gui'.\r\n\tat org.gradle.groovy.scripts.internal.DefaultScriptRunnerFactory$ScriptRunnerImpl.run(DefaultScriptRunnerFactory.java:92)\r\n\tat org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl$2.run(DefaultScriptPluginFactory.java:199)\r\n\tat org.gradle.configuration.ProjectScriptTarget.addConfiguration(ProjectScriptTarget.java:77)\r\n\tat org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:204)\r\n\tat org.gradle.configuration.BuildOperationScriptPlugin$1.run(BuildOperationScriptPlugin.java:61)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n\tat org.gradle.configuration.BuildOperationScriptPlugin.apply(BuildOperationScriptPlugin.java:58)\r\n\tat org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:41)\r\n\tat org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:26)\r\n\tat org.gradle.configuration.project.ConfigureActionsProjectEvaluator.evaluate(ConfigureActionsProjectEvaluator.java:34)\r\n\tat org.gradle.configuration.project.LifecycleProjectEvaluator.doConfigure(LifecycleProjectEvaluator.java:64)\r\n\tat org.gradle.configuration.project.LifecycleProjectEvaluator.access$100(LifecycleProjectEvaluator.java:34)\r\n```\r\nAny pointers why it is failing?\r\n", "url": "https://github.com/skylot/jadx/issues/943", "user": "samyak-jn", "labels": ["Core", "bug"], "created": "2020-05-29 14:49:42", "closed": "2020-06-03 10:27:31", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "[core] Multi-variable type inference failed", "body": "Class `android.support.constraint.ConstraintLayout`\r\n```java\r\n    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r2v4, resolved type: android.util.SparseArray<android.view.View>} */\r\n    /* JADX WARNING: Multi-variable type inference failed */\r\n    /* Code decompiled incorrectly, please refer to instructions dump. */\r\n    public void setId(int r6) {\r\n        /*\r\n            r5 = this;\r\n            r0 = r5\r\n            r1 = r6\r\n            r2 = r0\r\n            android.util.SparseArray<android.view.View> r2 = r2.mChildrenByIds\r\n            r3 = r0\r\n            int r3 = r3.getId()\r\n            r2.remove(r3)\r\n            r2 = r0\r\n            r3 = r1\r\n            super.setId(r3)\r\n            r2 = r0\r\n            android.util.SparseArray<android.view.View> r2 = r2.mChildrenByIds\r\n            r3 = r0\r\n            int r3 = r3.getId()\r\n            r4 = r0\r\n            r2.put(r3, r4)\r\n            return\r\n        */\r\n        throw new UnsupportedOperationException(\"Method not decompiled: android.support.constraint.ConstraintLayout.setId(int):void\");\r\n    }\r\n```\r\n\r\n### Additional info\r\n - This regression was introduced in build 1285 (7cd77ae3). In build 1284 it decompiles fine.\r\n - This app was built with AIDE.\r\n - The same error is seen several times in the code.\r\n\r\nAPK: https://drive.google.com/file/d/1RQesxeywrcHQveXEZGFiv9EfIczF2Q3X/view", "url": "https://github.com/skylot/jadx/issues/932", "user": "alissonlauffer", "labels": ["Core", "bug"], "created": "2020-05-13 10:53:23", "closed": "2020-05-18 19:23:17", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "[core] Decompilation res, the style have no parent info.", "body": "Decompilation res, open values/styles.xml, the style have no parent info.\r\nLike \r\n\r\n    <style name=\"CustomizableHomeTheme\" parent=\"@android:style/Theme.DeviceDefault\">\r\n\r\nuse apktool_2.4.1.jar to decompilation the apk , the parent is complete, use jadx, only have \r\n\r\n    <style name=\"CustomizableHomeTheme\">\r\n\r\nI find some drawable by xml is lost.\r\n", "url": "https://github.com/skylot/jadx/issues/931", "user": "weimings", "labels": ["Core", "bug"], "created": "2020-05-13 03:22:30", "closed": "2020-05-13 17:44:48", "commits": {"c7a12ad75b93be2c27a6befa6d7e27c98b72bd19": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c7a12ad75b93be2c27a6befa6d7e27c98b72bd19", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["7cd77ae379065bed253e11e7bce24c5d9252b7e8"], "nameRev": "c7a12ad75b93be2c27a6befa6d7e27c98b72bd19 master~19", "commitMessage": "fix(res): resource XML generation for parent attribute added (PR #933, #931)\n\n", "commitDateTime": "2020-05-13 20:25:45", "authoredDateTime": "2020-05-13 19:25:45", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/ResXmlGen.java", "insertions": 9, "deletions": 2, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResXmlGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.xmlgen.ResXmlGen.addValue(jadx.core.codegen.CodeWriter,jadx.core.xmlgen.entry.ResourceEntry)", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[BUG] Opening class on hover cursor", "body": "Latest beta version. When you hold down the Ctrl key and hover over the class name in GUI- this class opens. But opening a class should only be when you click the mouse. And no way when you hover.", "url": "https://github.com/skylot/jadx/issues/929", "user": "amspeople", "labels": ["Core", "bug"], "created": "2020-05-08 14:16:32", "closed": "2020-05-08 19:14:38", "commits": {"45b73046309a2e40728a1a82a74551ef43295795": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "45b73046309a2e40728a1a82a74551ef43295795", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["692536c584d36a3c9f2cae6ed218b60a8acb0372"], "nameRev": "45b73046309a2e40728a1a82a74551ef43295795 master~29", "commitMessage": "fix: workaround for link clicks in RSyntaxTextArea (#929)\n", "commitDateTime": "2020-05-08 20:01:20", "authoredDateTime": "2020-05-08 19:53:20", "commitGitStats": [{"filePath": "jadx-gui/src/main/java/jadx/gui/ui/codearea/CodeArea.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "jadx-gui/src/main/java/jadx/gui/ui/codearea/CodeLinkGenerator.java", "insertions": 38, "deletions": 18, "lines": 56}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CodeArea.java", "spoonMethods": [{"spoonMethodName": "jadx.gui.ui.codearea.CodeArea", "TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CodeLinkGenerator.java", "spoonMethods": [{"spoonMethodName": "jadx.gui.ui.codearea.CodeLinkGenerator.hyperlinkUpdate(javax.swing.event.HyperlinkEvent)", "TOT": 8, "UPD": 6, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.gui.ui.codearea.CodeLinkGenerator", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "jadx.gui.ui.codearea.CodeLinkGenerator.getJumpLinkAtOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.gui.ui.codearea.CodeLinkGenerator.getLinkSourceOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.gui.ui.codearea.CodeLinkGenerator.isLinkAtOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "jadx.gui.ui.codearea.CodeLinkGenerator.getJumpBySourceOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["45b73046309a2e40728a1a82a74551ef43295795"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 57, "deletions": 21, "lines": 78, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 25, "UPD": 10, "INS": 6, "MOV": 6, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-gui/src/main/java/jadx/gui/ui/codearea"], "changesInPackagesSPOON": ["jadx.gui.ui.codearea.CodeLinkGenerator.getLinkSourceOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)", "jadx.gui.ui.codearea.CodeLinkGenerator.getJumpLinkAtOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)", "jadx.gui.ui.codearea.CodeLinkGenerator.isLinkAtOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)", "jadx.gui.ui.codearea.CodeLinkGenerator.getJumpBySourceOffset(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)", "jadx.gui.ui.codearea.CodeArea", "jadx.gui.ui.codearea.CodeLinkGenerator", "jadx.gui.ui.codearea.CodeLinkGenerator.hyperlinkUpdate(javax.swing.event.HyperlinkEvent)"]}, {"title": "[core] Variables with the new keyword don't get properly assigned (App built with AIDE)", "body": "Class `dev.lauffer.aideapp.MainActivity`\r\n\r\n```java\r\npublic class MainActivity extends Activity {\r\n    /* access modifiers changed from: protected */\r\n    @Override\r\n    public void onCreate(Bundle bundle) {\r\n        Boolean bool;\r\n        StringBuffer stringBuffer;\r\n        ADRTLogCatReader.onContext(this, \"com.aide.ui\");\r\n        super.onCreate(bundle);\r\n        setContentView((int) R.layout.main);\r\n        new Boolean(\"just testing\");\r\n        boolean booleanValue = bool.booleanValue();\r\n        new StringBuffer();\r\n        Toast.makeText(this, stringBuffer.append(\"\").append(booleanValue).toString(), 0).show();\r\n    }\r\n\r\n    public MainActivity() {\r\n    }\r\n}\r\n```\r\nLook at the `bool` and `stringBuffer` variables. They aren't assigned by any class and its objects are sparse inside the decompiled code.\r\n\r\nThese issues only occurred when I built the app with [AIDE](https://play.google.com/store/apps/details?id=com.aide.ui). (Maybe they are using an older or different smali implementation).\r\n\r\nAPK: https://drive.google.com/file/d/1kVECPMQa4uVZeOD57oaGLzhM2luUumiu/view\r\n", "url": "https://github.com/skylot/jadx/issues/927", "user": "alissonlauffer", "labels": ["Core", "bug"], "created": "2020-05-05 12:17:57", "closed": "2020-05-09 15:16:10", "commits": {"e22474e0a70609d311a0abde4da7048979ef515b": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "b1d5ed0066a7b8a250f806d555d4145580d77dc7": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "404136cd72cca845e7cccbc57ffdd6aec31b572e": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "e22474e0a70609d311a0abde4da7048979ef515b", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["45b73046309a2e40728a1a82a74551ef43295795"], "nameRev": "e22474e0a70609d311a0abde4da7048979ef515b master~28", "commitMessage": "fix: inline move instructions to help process constructors (#927)\n", "commitDateTime": "2020-05-09 15:38:18", "authoredDateTime": "2020-05-09 15:38:18", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/Jadx.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ConstructorVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/MoveInlineVisitor.java", "insertions": 103, "deletions": 0, "lines": 103}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/variables/ProcessVariables.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestConstructorWithMoves.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "jadx-core/src/test/smali/invoke/TestConstructorWithMoves.smali", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Jadx.java", "spoonMethods": [{"spoonMethodName": "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegisterArg.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.RegisterArg.duplicate(jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.instructions.args.RegisterArg.duplicate(int,jadx.core.dex.instructions.args.SSAVar)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.instructions.args.RegisterArg.duplicate(int,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.SSAVar)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.InsnNode.canRemoveResult()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConstructorVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ConstructorVisitor", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MoveInlineVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.MoveInlineVisitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessVariables.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.variables.ProcessVariables.removeUnusedResults(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.regions.variables.ProcessVariables.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestConstructorWithMoves.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.invoke.TestConstructorWithMoves", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b1d5ed0066a7b8a250f806d555d4145580d77dc7", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["e22474e0a70609d311a0abde4da7048979ef515b"], "nameRev": "b1d5ed0066a7b8a250f806d555d4145580d77dc7 master~27", "commitMessage": "fix: don't modify method argument types in MethodInvokeVisitor (#927 #836)\n", "commitDateTime": "2020-05-09 21:10:37", "authoredDateTime": "2020-05-09 21:10:37", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/utils/TypeUtils.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/MethodInvokeVisitor.java", "insertions": 36, "deletions": 13, "lines": 49}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/methods/MutableMethodDetails.java", "insertions": 83, "deletions": 0, "lines": 83}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MethodNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.MethodNode.initMethodTypes()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TypeUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.utils.TypeUtils.replaceTypeVariablesUsingMap(jadx.core.dex.instructions.args.ArgType,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodInvokeVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.MethodInvokeVisitor.resolveTypeVariablesInMethodArgs(jadx.core.dex.instructions.BaseInvokeNode,jadx.core.dex.nodes.IMethodDetails,java.util.List)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.MethodInvokeVisitor.resolveTypeVars(jadx.core.dex.nodes.IMethodDetails,java.util.Map)", "TOT": 14, "UPD": 3, "INS": 11, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.MethodInvokeVisitor.processOverloaded(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.BaseInvokeNode,jadx.core.dex.nodes.IMethodDetails)", "TOT": 17, "UPD": 5, "INS": 5, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "MutableMethodDetails.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.methods.MutableMethodDetails", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "404136cd72cca845e7cccbc57ffdd6aec31b572e", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["b1d5ed0066a7b8a250f806d555d4145580d77dc7"], "nameRev": "404136cd72cca845e7cccbc57ffdd6aec31b572e master~26", "commitMessage": "fix: improve type inference for generics in invoke insn (#927)\n", "commitDateTime": "2020-05-10 14:20:27", "authoredDateTime": "2020-05-10 14:20:27", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeBoundInvokeUse.java", "insertions": 78, "deletions": 0, "lines": 78}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java", "insertions": 20, "deletions": 6, "lines": 26}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdate.java", "insertions": 61, "deletions": 18, "lines": 79}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestGenerics5.java", "insertions": 44, "deletions": 0, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TypeBoundInvokeUse.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeBoundInvokeUse", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeInferenceVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.makeUseBound(jadx.core.dex.instructions.args.RegisterArg)", "TOT": 9, "UPD": 3, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.makeInvokeUseBound(jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.BaseInvokeNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeUpdate.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.invokeListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 54, "UPD": 16, "INS": 16, "MOV": 18, "DEL": 4}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.checkCastListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 12, "UPD": 0, "INS": 5, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "TestGenerics5.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestGenerics5", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e22474e0a70609d311a0abde4da7048979ef515b", "404136cd72cca845e7cccbc57ffdd6aec31b572e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 304, "deletions": 26, "lines": 330, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 89, "UPD": 19, "INS": 35, "MOV": 28, "DEL": 7, "spoonFilesChanged": 9, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference", "jadx-core/src/main/java/jadx/core/dex/instructions/args", "jadx-core/src/main/java/jadx/core", "jadx-core/src/main/java/jadx/core/dex/visitors/regions/variables"], "changesInPackagesSPOON": ["jadx.core.dex.instructions.args.RegisterArg.duplicate(jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.instructions.args.RegisterArg.duplicate(int,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.makeUseBound(jadx.core.dex.instructions.args.RegisterArg)", "jadx.core.dex.visitors.regions.variables.ProcessVariables.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "jadx.core.dex.visitors.typeinference.TypeUpdate.invokeListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.regions.variables.ProcessVariables.removeUnusedResults(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.instructions.args.RegisterArg.duplicate(int,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.nodes.InsnNode.canRemoveResult()", "jadx.core.dex.visitors.ConstructorVisitor", "jadx.core.dex.visitors.typeinference.TypeBoundInvokeUse", "jadx.core.dex.visitors.MoveInlineVisitor", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.makeInvokeUseBound(jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.BaseInvokeNode)", "jadx.core.dex.visitors.typeinference.TypeUpdate.checkCastListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)"]}, {"title": "[core] Use of static fields instead of enum constants", "body": "Class `com.google.android.gms.internal.vision.zzjd`\r\n```java\r\npackage com.google.android.gms.internal.vision;\r\n\r\n/*  JADX ERROR: JadxRuntimeException in pass: EnumVisitor\r\n    jadx.core.utils.exceptions.JadxRuntimeException: Method arg registers not loaded: com.google.android.gms.internal.vision.zzje.<init>(java.lang.String, int, com.google.android.gms.internal.vision.zzji, int):void, class status: NOT_LOADED\r\n    \tat jadx.core.dex.nodes.MethodNode.getArgRegs(MethodNode.java:293)\r\n    \tat jadx.core.dex.attributes.nodes.SkipMethodArgsAttr.<init>(SkipMethodArgsAttr.java:47)\r\n    \tat jadx.core.dex.attributes.nodes.SkipMethodArgsAttr.skipArg(SkipMethodArgsAttr.java:27)\r\n    \tat jadx.core.dex.visitors.EnumVisitor.markArgsForSkip(EnumVisitor.java:346)\r\n    \tat jadx.core.dex.visitors.EnumVisitor.createEnumFieldByConstructor(EnumVisitor.java:302)\r\n    \tat jadx.core.dex.visitors.EnumVisitor.processEnumFieldByField(EnumVisitor.java:249)\r\n    \tat jadx.core.dex.visitors.EnumVisitor.extractEnumFields(EnumVisitor.java:216)\r\n    \tat jadx.core.dex.visitors.EnumVisitor.convertToEnum(EnumVisitor.java:142)\r\n    \tat jadx.core.dex.visitors.EnumVisitor.visit(EnumVisitor.java:77)\r\n    */\r\npublic enum zzjd {\r\n    public static final com.google.android.gms.internal.vision.zzjd zzabu = new com.google.android.gms.internal.vision.zzjd(com.google.android.gms.internal.vision.zzji.DOUBLE, 1);\r\n    public static final com.google.android.gms.internal.vision.zzjd zzabv = new com.google.android.gms.internal.vision.zzjd(com.google.android.gms.internal.vision.zzji.FLOAT, 5);\r\n    public static final com.google.android.gms.internal.vision.zzjd zzabw = new com.google.android.gms.internal.vision.zzjd(com.google.android.gms.internal.vision.zzji.LONG, 0);\r\n    //...\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1ICfL4A22K-KhVkw5RwvWdLJA8111iYvG/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/924", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-05-04 10:35:49", "closed": "2020-05-04 14:46:17", "commits": {"87852328daf4a14dfeef997543214f06d3bf31d8": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "4e3d85887ca905956469688abaea576f6082e580": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "87852328daf4a14dfeef997543214f06d3bf31d8", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["2207cd7b52a1f0b60dc0d83ceb298694d242485b"], "nameRev": "87852328daf4a14dfeef997543214f06d3bf31d8 master~32", "commitMessage": "fix: resolve error in SkipMethodArgsAttr if method not yet loaded (#924)\n", "commitDateTime": "2020-05-04 11:50:31", "authoredDateTime": "2020-05-04 11:50:31", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/SkipMethodArgsAttr.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SkipMethodArgsAttr.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.SkipMethodArgsAttr", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4e3d85887ca905956469688abaea576f6082e580", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["87852328daf4a14dfeef997543214f06d3bf31d8"], "nameRev": "4e3d85887ca905956469688abaea576f6082e580 master~31", "commitMessage": "fix: correctly process extended enums if class is not inner (#924)\n", "commitDateTime": "2020-05-04 15:19:17", "authoredDateTime": "2020-05-04 14:55:11", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java", "insertions": 26, "deletions": 25, "lines": 51}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/InsnRemover.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/IntegrationTest.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EnumVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.createEnumFieldByConstructor(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.FieldNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "TOT": 33, "UPD": 11, "INS": 1, "MOV": 21, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.processEnumInnerCls(jadx.core.dex.instructions.mods.ConstructorInsn,jadx.core.dex.attributes.nodes.EnumClassAttr.EnumField,jadx.core.dex.nodes.ClassNode)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.convertToEnum(jadx.core.dex.nodes.ClassNode)", "TOT": 8, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.usesValuesField(jadx.core.dex.nodes.MethodNode,jadx.core.dex.info.FieldInfo)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.processConstructorInsn(jadx.core.dex.nodes.ClassNode,jadx.core.dex.attributes.nodes.EnumClassAttr.EnumField,jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnRemover.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.InsnRemover.removeWithoutUnbind(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "IntegrationTest.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.api.IntegrationTest.checkCode(jadx.core.dex.nodes.ClassNode)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["87852328daf4a14dfeef997543214f06d3bf31d8", "4e3d85887ca905956469688abaea576f6082e580"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 30, "deletions": 27, "lines": 57, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 49, "UPD": 18, "INS": 3, "MOV": 25, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/attributes/nodes", "jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/dex/visitors"], "changesInPackagesSPOON": ["jadx.core.utils.InsnRemover.removeWithoutUnbind(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.attributes.nodes.SkipMethodArgsAttr", "jadx.core.dex.visitors.EnumVisitor.usesValuesField(jadx.core.dex.nodes.MethodNode,jadx.core.dex.info.FieldInfo)", "jadx.core.dex.visitors.EnumVisitor.createEnumFieldByConstructor(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.FieldNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "jadx.core.dex.visitors.EnumVisitor.processConstructorInsn(jadx.core.dex.nodes.ClassNode,jadx.core.dex.attributes.nodes.EnumClassAttr.EnumField,jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.EnumVisitor.convertToEnum(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.visitors.EnumVisitor.processEnumInnerCls(jadx.core.dex.instructions.mods.ConstructorInsn,jadx.core.dex.attributes.nodes.EnumClassAttr.EnumField,jadx.core.dex.nodes.ClassNode)"]}, {"title": "[core] Use of empty missing constructors in enum constant declarations", "body": "Hi, class `com.ebay.mobile.dcs.DcsBoolean`\r\n```java\r\npublic enum DcsBoolean implements com.ebay.nautilus.domain.dcs.DcsPropBoolean {\r\n    KillSwitch, // DcsBoolean() constructor is missing\r\n    SearchRefineLocking,\r\n    SearchEEKEnabled,\r\n    SearchLocalOnlyConstraint,\r\n    SearchUsePickupDropOffHack,\r\n    SearchExpansionEnabled(true),\r\n    //....\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1ICfL4A22K-KhVkw5RwvWdLJA8111iYvG/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/922", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-04-29 13:41:39", "closed": "2020-05-03 19:33:45", "commits": {"f3cd4e38d764de87e8848425c653b717cfd3d487": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "f3cd4e38d764de87e8848425c653b717cfd3d487", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["2dce1c0ad920c4cc3f6aaa84cf3f2124dd97ad2d"], "nameRev": "f3cd4e38d764de87e8848425c653b717cfd3d487 master~34", "commitMessage": "fix: check enum constructor content before removing (#922)\n", "commitDateTime": "2020-05-03 22:32:32", "authoredDateTime": "2020-05-03 18:16:59", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/ClassGen.java", "insertions": 17, "deletions": 3, "lines": 20}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumClassAttr.java", "insertions": 1, "deletions": 7, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/SkipMethodArgsAttr.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java", "insertions": 29, "deletions": 9, "lines": 38}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestEnums2a.java", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestEnums6.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestEnums7.java", "insertions": 41, "deletions": 0, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClassGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.ClassGen.addEnumFields(jadx.core.codegen.CodeWriter)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 2}, {"spoonMethodName": "jadx.core.codegen.ClassGen.getEnumCtrSkipArgsCount(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnumClassAttr.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.EnumClassAttr.EnumField", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.attributes.nodes.EnumClassAttr.EnumField.getStartArg()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SkipMethodArgsAttr.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.SkipMethodArgsAttr.getSkipCount()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnumVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.createEnumFieldByConstructor(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.FieldNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "TOT": 11, "UPD": 2, "INS": 4, "MOV": 3, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.removeEnumMethods(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.nodes.FieldNode)", "TOT": 12, "UPD": 1, "INS": 2, "MOV": 4, "DEL": 5}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.markArgsForSkip(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.isDefaultConstructor(jadx.core.dex.nodes.MethodNode,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestEnums2a.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.enums.TestEnums2a", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestEnums6.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.enums.TestEnums6", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestEnums7.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.enums.TestEnums7", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f3cd4e38d764de87e8848425c653b717cfd3d487"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 51, "deletions": 19, "lines": 70, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 37, "UPD": 3, "INS": 13, "MOV": 8, "DEL": 13, "spoonFilesChanged": 4, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/attributes/nodes", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/dex/visitors"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.EnumVisitor.removeEnumMethods(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.nodes.FieldNode)", "jadx.core.dex.attributes.nodes.EnumClassAttr.EnumField", "jadx.core.dex.attributes.nodes.EnumClassAttr.EnumField.getStartArg()", "jadx.core.codegen.ClassGen.getEnumCtrSkipArgsCount(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.EnumVisitor.isDefaultConstructor(jadx.core.dex.nodes.MethodNode,java.lang.String)", "jadx.core.codegen.ClassGen.addEnumFields(jadx.core.codegen.CodeWriter)", "jadx.core.dex.visitors.EnumVisitor.createEnumFieldByConstructor(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.FieldNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "jadx.core.dex.attributes.nodes.SkipMethodArgsAttr.getSkipCount()", "jadx.core.dex.visitors.EnumVisitor.markArgsForSkip(jadx.core.dex.nodes.MethodNode)"]}, {"title": "[core] Bug: showing invalid resource names in some specific APK files", "body": "**Describe error**\r\n- full name of method or class with error\r\n- full java stacktrace (no need to copy method fallback code (commented pseudocode))\r\nI used the online version, so I don't know what causes it:\r\nhttp://www.javadecompilers.com/result?currentfile=resources/AndroidManifest.xml\r\n\r\n- **IMPORTANT!** attach or provide link to apk file (double check apk version)\r\nAttached here:\r\n[GoogleExtServices.zip](https://github.com/skylot/jadx/files/4551000/GoogleExtServices.zip)\r\n\r\nThe bug is that I get these:\r\n\r\n```\r\n    <application android:label=\"  ?0x7 131072\" android:defaultToDeviceProtectedStorage=\"true\" android:directBootAware=\"true\">\r\n```\r\n\r\n```\r\n        <service android:label=\"  ?0x7 131073\" android:name=\"android.ext.services.notification.Assistant\" android:permission=\"android.permission.BIND_NOTIFICATION_ASSISTANT_SERVICE\" android:exported=\"true\">\r\n\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/5357526/80583959-a842ff80-8a19-11ea-9c53-b66795eb194d.png)\r\n\r\n\r\nThe label is invalid.", "url": "https://github.com/skylot/jadx/issues/919", "user": "AndroidDeveloperLB", "labels": ["Core", "bug"], "created": "2020-04-29 10:08:15", "closed": "2020-04-29 18:47:21", "commits": {"258ecad277d390dd7916ebe02749288aa97477b5": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "258ecad277d390dd7916ebe02749288aa97477b5", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["7f5092c0d59604dca757f76afaa748fa1af41628"], "nameRev": "258ecad277d390dd7916ebe02749288aa97477b5 master~36", "commitMessage": "fix(res): XML parsing: handling of TYPE_DYNAMIC_REFERENCE entries (#919, PR #923)\n\n", "commitDateTime": "2020-04-29 21:47:20", "authoredDateTime": "2020-04-29 20:47:20", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/ParserConstants.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/entry/ValuesParser.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ParserConstants.java", "spoonMethods": [{"spoonMethodName": "jadx.core.xmlgen.ParserConstants", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ValuesParser.java", "spoonMethods": [{"spoonMethodName": "jadx.core.xmlgen.entry.ValuesParser.decodeValue(int,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[core] Use of registers in enum constant declaration argument", "body": "Hi, I've noticed an error\r\n```java\r\npackage com.google.zxing;\r\n\r\npublic enum DecodeHintType {\r\n    OTHER(java.lang.Object.class),\r\n    PURE_BARCODE(java.lang.Void.class),\r\n    POSSIBLE_FORMATS(java.util.List.class),\r\n    TRY_HARDER(java.lang.Void.class),\r\n    CHARACTER_SET(java.lang.String.class),\r\n    ALLOWED_LENGTHS(r0), // <<<\r\n    ASSUME_CODE_39_CHECK_DIGIT(java.lang.Void.class),\r\n    ASSUME_GS1(java.lang.Void.class),\r\n    RETURN_CODABAR_START_END(java.lang.Void.class),\r\n    NEED_RESULT_POINT_CALLBACK(com.google.zxing.ResultPointCallback.class),\r\n    ALLOWED_EAN_EXTENSIONS(r0); // <<<\r\n    \r\n    private final java.lang.Class<?> valueType;\r\n\r\n    static {\r\n        java.lang.Class<int[]> cls = int[].class; // weird useless declaration\r\n    }\r\n\r\n    private DecodeHintType(java.lang.Class<?> cls) {\r\n        this.valueType = cls;\r\n    }\r\n\r\n    public java.lang.Class<?> getValueType() {\r\n        return this.valueType;\r\n    }\r\n}\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1ICfL4A22K-KhVkw5RwvWdLJA8111iYvG/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/916", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-04-28 08:32:39", "closed": "2020-05-03 19:35:20", "commits": {"2207cd7b52a1f0b60dc0d83ceb298694d242485b": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "2207cd7b52a1f0b60dc0d83ceb298694d242485b", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["f3cd4e38d764de87e8848425c653b717cfd3d487"], "nameRev": "2207cd7b52a1f0b60dc0d83ceb298694d242485b master~33", "commitMessage": "fix: inline class constants to fix enum transform (#916)\n", "commitDateTime": "2020-05-03 22:32:32", "authoredDateTime": "2020-05-03 19:27:54", "commitGitStats": [{"filePath": ".gitignore", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlineVisitor.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConstInlineVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.checkInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EnumVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.createEnumFieldByConstructor(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.FieldNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2207cd7b52a1f0b60dc0d83ceb298694d242485b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 0, "lines": 13, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": [".gitignore", "jadx-core/src/main/java/jadx/core/dex/visitors"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.ConstInlineVisitor.checkInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,java.util.List)", "jadx.core.dex.visitors.EnumVisitor.createEnumFieldByConstructor(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.FieldNode,jadx.core.dex.instructions.mods.ConstructorInsn)"]}, {"title": "[core] Use of incorrect Object type in synthetic methods", "body": "Hi, I've noticed that many synthetic methods are corrupted. Example in class `com.google.android.gms.internal.measurement.Df`\r\n```java\r\npublic final class Df implements android.os.Parcelable.Creator<com.google.android.gms.internal.measurement.zzx> {\r\n    public final /* synthetic */ java.lang.Object createFromParcel(android.os.Parcel parcel) {\r\n```\r\n```java\r\n    public final /* synthetic */ java.lang.Object[] newArray(int i) {\r\n```\r\n\r\nType `com.google.android.gms.internal.measurement.zzx` should be used instead of `java.lang.Object`\r\n\r\nAPK: https://drive.google.com/file/d/1ICfL4A22K-KhVkw5RwvWdLJA8111iYvG/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/913", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-04-23 15:16:08", "closed": "2020-05-11 20:51:23", "commits": {"0692464b85f29c762064612e2ea5208238d23a33": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "85760cc844be7b7092cf8be37be8b9759ab31d8d": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "7cd77ae379065bed253e11e7bce24c5d9252b7e8": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "09e267f8bcf88daa262a6f968a674af48d1b8caf": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "6192ced214dc05f6848ca786d2d38a900f717bbe": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "0692464b85f29c762064612e2ea5208238d23a33", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["3968222744b1fb40d1f57006d59c58c562218669"], "nameRev": "0692464b85f29c762064612e2ea5208238d23a33 master~23", "commitMessage": "fix: mark override methods and fix return type (#913)\n", "commitDateTime": "2020-05-11 21:35:00", "authoredDateTime": "2020-05-11 20:42:06", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/Jadx.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java", "insertions": 29, "deletions": 21, "lines": 50}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/ClassGen.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/MethodGen.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AType.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/MethodOverrideAttr.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/utils/TypeUtils.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/OverrideMethodVisitor.java", "insertions": 148, "deletions": 0, "lines": 148}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeSearch.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/IntegrationTest.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestEnums2.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestEnumsInterface.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/generics/TestGenericsMthOverride.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/generics/TestMethodOverride.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "jadx-core/src/test/smali/generics/TestMethodOverride.smali", "insertions": 38, "deletions": 0, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Jadx.java", "spoonMethods": [{"spoonMethodName": "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClspGraph.java", "spoonMethods": [{"spoonMethodName": "jadx.core.clsp.ClspGraph", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.clsp.ClspGraph.addAncestorsNames(jadx.core.clsp.ClspClass,java.util.Set)", "TOT": 12, "UPD": 3, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "jadx.core.clsp.ClspGraph.getAncestors(java.lang.String)", "TOT": 20, "UPD": 6, "INS": 0, "MOV": 12, "DEL": 2}, {"spoonMethodName": "jadx.core.clsp.ClspGraph.isImplements(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.clsp.ClspGraph.getCommonAncestor(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.clsp.ClspGraph.getSuperTypes(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.clsp.ClspGraph.putInSuperTypesCache(java.lang.String,java.util.Set)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.ClassGen.addMethodCode(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.MethodNode)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "MethodGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.MethodGen.addOverrideAnnotation(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.MethodGen.addDefinition(jadx.core.codegen.CodeWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AType.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.AType", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodOverrideAttr.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.MethodOverrideAttr", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ArgType.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.ArgType.isCastNeeded(jadx.core.dex.nodes.RootNode,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.ArgType)", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "MethodNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.MethodNode.updateReturnType(jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.initMethodTypes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.utils.TypeUtils.replaceClassGenerics(jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.ArgType)", "TOT": 9, "UPD": 1, "INS": 2, "MOV": 5, "DEL": 1}]}, {"spoonFilePath": "OverrideMethodVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.OverrideMethodVisitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeInferenceVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryWiderObjects(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeSearch.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.getWiderTypes(jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IntegrationTest.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.api.IntegrationTest.removeLineComments(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestEnums2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.enums.TestEnums2.test()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.tests.integration.enums.TestEnums2.TestCls.Operation.1.apply(int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.enums.TestEnums2.TestCls.Operation.2.apply(int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestEnumsInterface.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.enums.TestEnumsInterface.test()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "TestGenericsMthOverride.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.generics.TestGenericsMthOverride.test()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestMethodOverride.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.generics.TestMethodOverride", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "85760cc844be7b7092cf8be37be8b9759ab31d8d", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["0692464b85f29c762064612e2ea5208238d23a33"], "nameRev": "85760cc844be7b7092cf8be37be8b9759ab31d8d master~22", "commitMessage": "fix: replace type variables in arrays (#913)\n", "commitDateTime": "2020-05-12 19:16:52", "authoredDateTime": "2020-05-12 17:17:22", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/utils/TypeUtils.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "jadx-core/src/test/java/jadx/core/dex/nodes/utils/TypeUtilsTest.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/generics/TestMethodOverride.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "jadx-core/src/test/smali/generics/TestMethodOverride.smali", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ArgType.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.ArgType.array(jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.utils.TypeUtils.replaceTypeVariablesUsingMap(jadx.core.dex.instructions.args.ArgType,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeUtilsTest.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.utils.TypeUtilsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestMethodOverride.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.generics.TestMethodOverride.test()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7cd77ae379065bed253e11e7bce24c5d9252b7e8", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["d59c99ddfed8c5f3104c3da112adb2948da9f247"], "nameRev": "7cd77ae379065bed253e11e7bce24c5d9252b7e8 master~20", "commitMessage": "fix: try raw types to help type inference (#913)\n", "commitDateTime": "2020-05-12 19:23:49", "authoredDateTime": "2020-05-12 19:23:49", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/SSAVar.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java", "insertions": 56, "deletions": 4, "lines": 60}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SSAVar.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.SSAVar.getDetailedVarInfo(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TypeInferenceVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runMultiVariableSearch(jadx.core.dex.nodes.MethodNode)", "TOT": 13, "UPD": 1, "INS": 4, "MOV": 4, "DEL": 4}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.resolveTypes(jadx.core.dex.nodes.MethodNode)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryRemoveGenerics(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryRawType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.checkRawType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "09e267f8bcf88daa262a6f968a674af48d1b8caf", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["58722d372e739cd8a0fbc897e55e035358349123"], "nameRev": "09e267f8bcf88daa262a6f968a674af48d1b8caf master~15", "commitMessage": "fix: resolve generic types in method arguments (#913)\n", "commitDateTime": "2020-05-17 14:58:34", "authoredDateTime": "2020-05-17 14:58:34", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/GenericInfoAttr.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/MethodInvokeVisitor.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/OverrideMethodVisitor.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdate.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GenericInfoAttr.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.GenericInfoAttr.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.MethodNode.updateArgTypes(java.util.List,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodInvokeVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.MethodInvokeVisitor.resolveTypeVars(jadx.core.dex.nodes.IMethodDetails,java.util.Map)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.MethodInvokeVisitor.getTypeVarsMapping(jadx.core.dex.instructions.BaseInvokeNode)", "TOT": 16, "UPD": 0, "INS": 2, "MOV": 11, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.visitors.MethodInvokeVisitor.getClsCallType(jadx.core.dex.instructions.BaseInvokeNode,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OverrideMethodVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.OverrideMethodVisitor.fixMethodArgTypes(jadx.core.dex.nodes.MethodNode,java.util.List,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.OverrideMethodVisitor.updateArgTypes(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IMethodDetails,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.OverrideMethodVisitor.updateArgType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IMethodDetails,java.util.List,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.OverrideMethodVisitor.fixMethodReturnType(jadx.core.dex.nodes.MethodNode,java.util.List,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.OverrideMethodVisitor.visit(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeUpdate.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.invokeListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.initListenerRegistry()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6192ced214dc05f6848ca786d2d38a900f717bbe", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["ae31fee8dd8d58e8fa007d0c201f11649966af5d"], "nameRev": "6192ced214dc05f6848ca786d2d38a900f717bbe master~8", "commitMessage": "fix: improve type inference of type variables in method invoke (#913)\n", "commitDateTime": "2020-06-01 23:39:12", "authoredDateTime": "2020-06-01 19:59:28", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/Consts.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AType.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/MethodTypeVarsAttr.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/utils/TypeUtils.java", "insertions": 37, "deletions": 2, "lines": 39}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo/DebugInfoApplyVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java", "insertions": 40, "deletions": 37, "lines": 77}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeSearch.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdate.java", "insertions": 77, "deletions": 40, "lines": 117}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdateInfo.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestCastInOverloadedInvoke.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestHierarchyOverloadedInvoke.java", "insertions": 1, "deletions": 11, "lines": 12}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestGenerics6.java", "insertions": 70, "deletions": 0, "lines": 70}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Consts.java", "spoonMethods": [{"spoonMethodName": "jadx.core.Consts", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AType.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.AType", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodTypeVarsAttr.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.MethodTypeVarsAttr", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ArgType.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.ArgType.visitTypes(java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.ClassNode.visitParentClasses(java.util.function.Consumer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.utils.TypeUtils.getClassGenerics(jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.nodes.utils.TypeUtils.getKnownTypeVarsAtMethod(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.utils.TypeUtils.collectKnownTypeVarsAtMethod(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.utils.TypeUtils.addTypeVarsFromCls(java.util.Set,jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DebugInfoApplyVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.debuginfo.DebugInfoApplyVisitor.applyDebugInfo(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeInferenceVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setImmutableType(jadx.core.dex.instructions.args.SSAVar)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.applyImmutableType(jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runTypePropagation(jadx.core.dex.nodes.MethodNode)", "TOT": 19, "UPD": 2, "INS": 6, "MOV": 5, "DEL": 6}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runMultiVariableSearch(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.calculateFromBounds(jadx.core.dex.instructions.args.SSAVar)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.addBound(jadx.core.dex.visitors.typeinference.TypeInfo,jadx.core.dex.visitors.typeinference.ITypeBound)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setImmutableType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setBestType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.applyImmutableType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.calculateFromBounds(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryPossibleTypes(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryDeduceType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.checkRawType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryWiderObjects(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.processIncompatiblePrimitives(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "TypeSearch.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.search(java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.applyResolvedVars()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeUpdate.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.apply(jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.visitors.typeinference.TypeUpdateFlags)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.invokeListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 56, "UPD": 11, "INS": 2, "MOV": 41, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.applyInvokeTypes(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.BaseInvokeNode,int,java.util.Set,java.util.function.Supplier,java.util.function.Function)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.checkType(java.util.Set,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.apply(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.applyWithWiderAllow(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.applyWithWiderIgnSame(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.apply(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.visitors.typeinference.TypeUpdateFlags)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeUpdateInfo.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdateInfo", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdateInfo.getMth()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestCastInOverloadedInvoke.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.invoke.TestCastInOverloadedInvoke.testNYI()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "TestHierarchyOverloadedInvoke.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.invoke.TestHierarchyOverloadedInvoke.test2()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "TestGenerics6.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestGenerics6", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0692464b85f29c762064612e2ea5208238d23a33", "85760cc844be7b7092cf8be37be8b9759ab31d8d", "7cd77ae379065bed253e11e7bce24c5d9252b7e8", "09e267f8bcf88daa262a6f968a674af48d1b8caf", "6192ced214dc05f6848ca786d2d38a900f717bbe"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 5, "gitStatsSummary": {"insertions": 648, "deletions": 135, "lines": 783, "gitFilesChange": 21}, "spoonStatsSummary": {"TOT": 282, "UPD": 48, "INS": 99, "MOV": 105, "DEL": 30, "spoonFilesChanged": 21, "spoonMethodsChanged": 78}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/typeinference", "jadx-core/src/main/java/jadx/core/dex/instructions/args", "jadx-core/src/main/java/jadx/core/dex/nodes/utils", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/dex/attributes", "jadx-core/src/main/java/jadx/core", "jadx-core/src/main/java/jadx/core/dex/attributes/nodes", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/clsp", "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo"], "changesInPackagesSPOON": ["jadx.core.dex.attributes.AType", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.checkRawType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryWiderObjects(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runMultiVariableSearch(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeUpdate.invokeListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeSearch.applyResolvedVars()", "jadx.core.dex.nodes.ClassNode.visitParentClasses(java.util.function.Consumer)", "jadx.core.dex.visitors.OverrideMethodVisitor.updateArgType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IMethodDetails,java.util.List,int)", "jadx.core.dex.visitors.typeinference.TypeUpdate.applyWithWiderIgnSame(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.attributes.nodes.GenericInfoAttr.toString()", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryRemoveGenerics(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeUpdate.applyInvokeTypes(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.BaseInvokeNode,int,java.util.Set,java.util.function.Supplier,java.util.function.Function)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runTypePropagation(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.calculateFromBounds(jadx.core.dex.instructions.args.SSAVar)", "jadx.core.Consts", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setImmutableType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.clsp.ClspGraph.isImplements(java.lang.String,java.lang.String)", "jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.addBound(jadx.core.dex.visitors.typeinference.TypeInfo,jadx.core.dex.visitors.typeinference.ITypeBound)", "jadx.core.dex.nodes.utils.TypeUtils.replaceClassGenerics(jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryPossibleTypes(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.clsp.ClspGraph.putInSuperTypesCache(java.lang.String,java.util.Set)", "jadx.core.dex.visitors.MethodInvokeVisitor.resolveTypeVars(jadx.core.dex.nodes.IMethodDetails,java.util.Map)", "jadx.core.dex.visitors.debuginfo.DebugInfoApplyVisitor.applyDebugInfo(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType,java.lang.String)", "jadx.core.dex.attributes.nodes.MethodTypeVarsAttr", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.calculateFromBounds(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.instructions.args.ArgType.visitTypes(java.util.function.Function)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.resolveTypes(jadx.core.dex.nodes.MethodNode)", "jadx.core.codegen.MethodGen.addOverrideAnnotation(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeUpdateInfo", "jadx.core.dex.visitors.typeinference.TypeUpdateInfo.getMth()", "jadx.core.dex.visitors.typeinference.TypeSearch.run()", "jadx.core.dex.visitors.typeinference.TypeSearch.getWiderTypes(jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.OverrideMethodVisitor.fixMethodArgTypes(jadx.core.dex.nodes.MethodNode,java.util.List,java.util.List)", "jadx.core.dex.nodes.utils.TypeUtils.replaceTypeVariablesUsingMap(jadx.core.dex.instructions.args.ArgType,java.util.Map)", "jadx.core.dex.visitors.MethodInvokeVisitor.getTypeVarsMapping(jadx.core.dex.instructions.BaseInvokeNode)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryRawType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.applyImmutableType(jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.nodes.MethodNode.initMethodTypes()", "jadx.core.dex.nodes.MethodNode.updateReturnType(jadx.core.dex.instructions.args.ArgType)", "jadx.core.clsp.ClspGraph.getSuperTypes(java.lang.String)", "jadx.core.codegen.ClassGen.addMethodCode(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeUpdate.applyWithWiderAllow(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.nodes.utils.TypeUtils.getKnownTypeVarsAtMethod(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.OverrideMethodVisitor.fixMethodReturnType(jadx.core.dex.nodes.MethodNode,java.util.List,java.util.List)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.processIncompatiblePrimitives(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.applyImmutableType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.clsp.ClspGraph.getCommonAncestor(java.lang.String,java.lang.String)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setBestType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.clsp.ClspGraph.addAncestorsNames(jadx.core.clsp.ClspClass,java.util.Set)", "jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.instructions.args.SSAVar.getDetailedVarInfo(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.nodes.utils.TypeUtils.collectKnownTypeVarsAtMethod(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeUpdate.initListenerRegistry()", "jadx.core.dex.visitors.OverrideMethodVisitor.visit(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.OverrideMethodVisitor.updateArgTypes(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IMethodDetails,java.util.List)", "jadx.core.dex.visitors.OverrideMethodVisitor", "jadx.core.dex.nodes.utils.TypeUtils.addTypeVarsFromCls(java.util.Set,jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.nodes.utils.TypeUtils.getClassGenerics(jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeUpdate.checkType(java.util.Set,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.MethodInvokeVisitor.getClsCallType(jadx.core.dex.instructions.BaseInvokeNode,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeSearch.search(java.util.List)", "jadx.core.dex.visitors.typeinference.TypeUpdate.apply(jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.visitors.typeinference.TypeUpdateFlags)", "jadx.core.dex.instructions.args.ArgType.array(jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeUpdate.apply(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.visitors.typeinference.TypeUpdateFlags)", "jadx.core.dex.instructions.args.ArgType.isCastNeeded(jadx.core.dex.nodes.RootNode,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.ArgType)", "jadx.core.clsp.ClspGraph.getAncestors(java.lang.String)", "jadx.core.codegen.MethodGen.addDefinition(jadx.core.codegen.CodeWriter)", "jadx.core.dex.attributes.nodes.MethodOverrideAttr", "jadx.core.clsp.ClspGraph", "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.nodes.MethodNode.updateArgTypes(java.util.List,java.lang.String)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryDeduceType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeUpdate.apply(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setImmutableType(jadx.core.dex.instructions.args.SSAVar)"]}, {"title": "[core] Multiple errors during decompilation", "body": "```\r\nINFO  - loading ...\r\nINFO  - processing ...\r\nERROR - StackOverflow in pass: RegionMakerVisitor in method: androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser, android.content.res.Resources):androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry, dex: classes.dex\r\n```", "url": "https://github.com/skylot/jadx/issues/908", "user": "angervision", "labels": ["Core", "bug"], "created": "2020-04-18 15:20:07", "closed": "2020-04-18 15:22:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unable to process android.os.AsyncTask class", "body": "version : 1.1.0\r\nerror : \r\nprivate class DecodeTask extends AsyncTask<String, Void, Void> {\r\n        private DecodeTask() {\r\n        }\r\n\r\n        /* access modifiers changed from: protected */\r\n        /* JADX WARNING: Removed duplicated region for block: B:21:0x005d A[SYNTHETIC, Splitter:B:21:0x005d] */\r\n        /* JADX WARNING: Removed duplicated region for block: B:29:0x006a A[SYNTHETIC, Splitter:B:29:0x006a] */\r\n        /* Code decompiled incorrectly, please refer to instructions dump. */\r\n        public java.lang.Void doInBackground(java.lang.String... r6) {\r\n            /*\r\n                r5 = this;\r\n                r0 = 0\r\n                r1 = 0\r\n                r6 = r6[r0]     // Catch:{ Exception -> 0x004b, all -> 0x0049 }\r\n                java.lang.String r0 = \"://\"\r\n                boolean r0 = r6.contains(r0)     // Catch:{ Exception -> 0x004b, all -> 0x0049 }\r\n                if (r0 != 0) goto L_0x001d\r\n                java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x004b, all -> 0x0049 }\r\n                r0.<init>()     // Catch:{ Exception -> 0x004b, all -> 0x0049 }\r\n                java.lang.String r2 = \"file://\"\r\n                r0.append(r2)     // Catch:{ Exception -> 0x004b, all -> 0x0049 }\r\n                r0.append(r6)     // Catch:{ Exception -> 0x004b, all -> 0x0049 }\r\n                java.lang.String r6 = r0.toString()     // Catch:{ Exception -> 0x004b, all -> 0x0049 }\r\n            L_0x001d:\r\n                java.net.URL r0 = new java.net.URL     // Catch:{ Exception -> 0x004b, all -> 0x0049 }\r\n                r0.<init>(r6)     // Catch:{ Exception -> 0x004b, all -> 0x0049 }\r\n                java.io.InputStream r6 = r0.openStream()     // Catch:{ Exception -> 0x004b, all -> 0x0049 }\r\n                com.king.kvast.ImageItem r0 = com.king.kvast.ImageItem.this     // Catch:{ Exception -> 0x0044, all -> 0x0040 }\r\n                android.graphics.Bitmap r2 = android.graphics.BitmapFactory.decodeStream(r6)     // Catch:{ Exception -> 0x0044, all -> 0x0040 }\r\n                android.graphics.Bitmap unused = r0.mBitmap = r2     // Catch:{ Exception -> 0x0044, all -> 0x0040 }\r\n                com.king.kvast.ImageItem r0 = com.king.kvast.ImageItem.this     // Catch:{ Exception -> 0x0044, all -> 0x0040 }\r\n                com.king.kvast.ImageItem r2 = com.king.kvast.ImageItem.this     // Catch:{ Exception -> 0x0044, all -> 0x0040 }\r\n                long r2 = r2.mInstance     // Catch:{ Exception -> 0x0044, all -> 0x0040 }\r\n                r0.onPrefetched(r2)     // Catch:{ Exception -> 0x0044, all -> 0x0040 }\r\n                if (r6 == 0) goto L_0x0065\r\n                r6.close()     // Catch:{ Exception -> 0x0061 }\r\n                goto L_0x0065\r\n            L_0x0040:\r\n                r0 = move-exception\r\n                r1 = r6\r\n                r6 = r0\r\n                goto L_0x0068\r\n            L_0x0044:\r\n                r0 = move-exception\r\n                r4 = r0\r\n                r0 = r6\r\n                r6 = r4\r\n                goto L_0x004d\r\n            L_0x0049:\r\n                r6 = move-exception\r\n                goto L_0x0068\r\n            L_0x004b:\r\n                r6 = move-exception\r\n                r0 = r1\r\n            L_0x004d:\r\n                r6.printStackTrace()     // Catch:{ all -> 0x0066 }\r\n                com.king.kvast.ImageItem r6 = com.king.kvast.ImageItem.this     // Catch:{ all -> 0x0066 }\r\n                com.king.kvast.ImageItem r2 = com.king.kvast.ImageItem.this     // Catch:{ all -> 0x0066 }\r\n                long r2 = r2.mInstance     // Catch:{ all -> 0x0066 }\r\n                r6.onError(r2)     // Catch:{ all -> 0x0066 }\r\n                if (r0 == 0) goto L_0x0065\r\n                r0.close()     // Catch:{ Exception -> 0x0061 }\r\n                goto L_0x0065\r\n            L_0x0061:\r\n                r6 = move-exception\r\n                r6.printStackTrace()\r\n            L_0x0065:\r\n                return r1\r\n            L_0x0066:\r\n                r6 = move-exception\r\n                r1 = r0\r\n            L_0x0068:\r\n                if (r1 == 0) goto L_0x0072\r\n                r1.close()     // Catch:{ Exception -> 0x006e }\r\n                goto L_0x0072\r\n            L_0x006e:\r\n                r0 = move-exception\r\n                r0.printStackTrace()\r\n            L_0x0072:\r\n                throw r6\r\n            */\r\n            throw new UnsupportedOperationException(\"Method not decompiled: com.king.kvast.ImageItem.DecodeTask.doInBackground(java.lang.String[]):java.lang.Void\");\r\n        }\r\n    }\r\n\r\n***********************************************************\r\n /* access modifiers changed from: protected */\r\n    /* JADX WARNING: Can't wrap try/catch for region: R(3:14|15|16) */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:12:0x0063, code lost:\r\n        if (r4.mConnection != null) goto L_0x0075;\r\n     */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:13:0x0066, code lost:\r\n        r5 = move-exception;\r\n     */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:15:?, code lost:\r\n        r4.mListener.onFailed(r4.mId, r5, 404);\r\n     */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:19:0x007c, code lost:\r\n        return null;\r\n     */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:21:0x007f, code lost:\r\n        if (r4.mConnection != null) goto L_0x0081;\r\n     */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:22:0x0081, code lost:\r\n        r4.mConnection.disconnect();\r\n        r4.mConnection = null;\r\n     */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:23:0x0088, code lost:\r\n        throw r5;\r\n     */\r\n    /* JADX WARNING: Failed to process nested try/catch */\r\n    /* JADX WARNING: Missing exception handler attribute for start block: B:14:0x0068 */\r\n    /* Code decompiled incorrectly, please refer to instructions dump. */\r\n    public java.lang.String doInBackground(java.lang.String... r5) {\r\n        /*\r\n            r4 = this;\r\n            r0 = 0\r\n            r5 = r5[r0]\r\n            r0 = 0\r\n            java.lang.String r1 = \"GET\"\r\n            java.net.HttpURLConnection r1 = r4.connect(r5, r1)     // Catch:{ Exception -> 0x0068 }\r\n            r4.mConnection = r1     // Catch:{ Exception -> 0x0068 }\r\n            java.net.HttpURLConnection r1 = r4.mConnection     // Catch:{ Exception -> 0x0068 }\r\n            int r1 = r1.getResponseCode()     // Catch:{ Exception -> 0x0068 }\r\n            r2 = 200(0xc8, float:2.8E-43)\r\n            if (r1 == r2) goto L_0x0054\r\n            com.king.kvast.http.HttpTask$HttpListener r1 = r4.mListener     // Catch:{ Exception -> 0x0068 }\r\n            int r2 = r4.mId     // Catch:{ Exception -> 0x0068 }\r\n            java.net.HttpURLConnection r3 = r4.mConnection     // Catch:{ Exception -> 0x0068 }\r\n            int r3 = r3.getResponseCode()     // Catch:{ Exception -> 0x0068 }\r\n            r1.onFailed(r2, r5, r3)     // Catch:{ Exception -> 0x0068 }\r\n            java.lang.StringBuilder r1 = new java.lang.StringBuilder     // Catch:{ Exception -> 0x0068 }\r\n            r1.<init>()     // Catch:{ Exception -> 0x0068 }\r\n            java.lang.String r2 = \"Server returned HTTP \"\r\n            r1.append(r2)     // Catch:{ Exception -> 0x0068 }\r\n            java.net.HttpURLConnection r2 = r4.mConnection     // Catch:{ Exception -> 0x0068 }\r\n            int r2 = r2.getResponseCode()     // Catch:{ Exception -> 0x0068 }\r\n            r1.append(r2)     // Catch:{ Exception -> 0x0068 }\r\n            java.lang.String r2 = \" \"\r\n            r1.append(r2)     // Catch:{ Exception -> 0x0068 }\r\n            java.net.HttpURLConnection r2 = r4.mConnection     // Catch:{ Exception -> 0x0068 }\r\n            java.lang.String r2 = r2.getResponseMessage()     // Catch:{ Exception -> 0x0068 }\r\n            r1.append(r2)     // Catch:{ Exception -> 0x0068 }\r\n            java.lang.String r5 = r1.toString()     // Catch:{ Exception -> 0x0068 }\r\n            java.net.HttpURLConnection r1 = r4.mConnection\r\n            if (r1 == 0) goto L_0x0053\r\n            java.net.HttpURLConnection r1 = r4.mConnection\r\n            r1.disconnect()\r\n            r4.mConnection = r0\r\n        L_0x0053:\r\n            return r5\r\n        L_0x0054:\r\n            com.king.kvast.http.HttpTask$HttpListener r1 = r4.mListener     // Catch:{ Exception -> 0x0068 }\r\n            int r2 = r4.mId     // Catch:{ Exception -> 0x0068 }\r\n            java.net.HttpURLConnection r3 = r4.mConnection     // Catch:{ Exception -> 0x0068 }\r\n            byte[] r3 = r4.getResponseData(r3)     // Catch:{ Exception -> 0x0068 }\r\n            r1.onGetSuccess(r2, r5, r3)     // Catch:{ Exception -> 0x0068 }\r\n            java.net.HttpURLConnection r5 = r4.mConnection\r\n            if (r5 == 0) goto L_0x007c\r\n            goto L_0x0075\r\n        L_0x0066:\r\n            r5 = move-exception\r\n            goto L_0x007d\r\n        L_0x0068:\r\n            com.king.kvast.http.HttpTask$HttpListener r1 = r4.mListener     // Catch:{ all -> 0x0066 }\r\n            int r2 = r4.mId     // Catch:{ all -> 0x0066 }\r\n            r3 = 404(0x194, float:5.66E-43)\r\n            r1.onFailed(r2, r5, r3)     // Catch:{ all -> 0x0066 }\r\n            java.net.HttpURLConnection r5 = r4.mConnection\r\n            if (r5 == 0) goto L_0x007c\r\n        L_0x0075:\r\n            java.net.HttpURLConnection r5 = r4.mConnection\r\n            r5.disconnect()\r\n            r4.mConnection = r0\r\n        L_0x007c:\r\n            return r0\r\n        L_0x007d:\r\n            java.net.HttpURLConnection r1 = r4.mConnection\r\n            if (r1 == 0) goto L_0x0088\r\n            java.net.HttpURLConnection r1 = r4.mConnection\r\n            r1.disconnect()\r\n            r4.mConnection = r0\r\n        L_0x0088:\r\n            throw r5\r\n        */\r\n\r\n", "url": "https://github.com/skylot/jadx/issues/906", "user": "renkchina", "labels": ["Core", "bug"], "created": "2020-04-16 07:37:21", "closed": "2020-04-28 14:31:39", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Caused by: jadx.core.utils.exceptions.JadxException: Java to dex conversion error, code: 1", "body": "```\r\n jadx --version\r\n1.1.0\r\n\r\n jadx -ds srcpsu_for_weblogic10.3.6/psu_200414/p30857748_1036_Generic/Q3ZB.jar\r\nINFO  - loading ...\r\nERROR - jadx error: Error load file: weblogic/psu_for_weblogic10.3.6/psu_200414/p30857748_1036_Generic/Q3ZB.jar\r\njadx.core.utils.exceptions.JadxRuntimeException: Error load file: weblogic/psu_for_weblogic10.3.6/psu_200414/p30857748_1036_Generic/Q3ZB.jar\r\n        at jadx.api.JadxDecompiler.loadFiles(JadxDecompiler.java:121)\r\n        at jadx.api.JadxDecompiler.load(JadxDecompiler.java:88)\r\n        at jadx.cli.JadxCLI.processAndSave(JadxCLI.java:34)\r\n        at jadx.cli.JadxCLI.main(JadxCLI.java:19)\r\nCaused by: jadx.core.utils.exceptions.DecodeException: java class to dex conversion error:\r\n dx exception: Java to dex conversion error, code: 1\r\n        at jadx.core.utils.files.InputFile.loadFromJar(InputFile.java:200)\r\n        at jadx.core.utils.files.InputFile.searchDexFiles(InputFile.java:80)\r\n        at jadx.core.utils.files.InputFile.addFilesFrom(InputFile.java:40)\r\n        at jadx.api.JadxDecompiler.loadFiles(JadxDecompiler.java:119)\r\n        ... 3 common frames omitted\r\nCaused by: jadx.core.utils.exceptions.JadxException: dx exception: Java to dex conversion error, code: 1\r\n        at jadx.core.utils.files.JavaToDex.convert(JavaToDex.java:63)\r\n        at jadx.core.utils.files.InputFile.loadFromJar(InputFile.java:191)\r\n        ... 6 common frames omitted\r\nCaused by: jadx.core.utils.exceptions.JadxException: Java to dex conversion error, code: 1\r\n        at jadx.core.utils.files.JavaToDex.convert(JavaToDex.java:52)\r\n        ... 7 common frames omitted\r\n```", "url": "https://github.com/skylot/jadx/issues/905", "user": "hktalent", "labels": ["Core", "bug"], "created": "2020-04-16 02:22:31", "closed": "2020-04-19 11:13:14", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[core] decompile Base64.class in apk file error", "body": "- jadx-1.1.0-b1265-2da772df.zip\r\n- jdk-14_windows-x64_bin.zip, Windows 10\r\n- [apk download](https://android-apps.pp.cn/fs08/2019/11/27/7/120_b5c35a31f2362e1da3d7a1c7e1a8ba38.apk?yingid=web_space&packageid=400842159&md5=35bb5507a547ae381be74d04d45e0e5f&minSDK=19&size=52996131&shortMd5=89adcba2f540179718b746454434ea5c&crc32=2037693019&did=a92202aefdfffc29dd23ca323cbb3a9b) on https://www.wandoujia.com/apps/318883/history_v9602\r\n- com.e\u200bl\u200bo\u200bn\u200bg.base.utils.encrypt.Base64\r\n\r\n```java\r\n    /* renamed from: a */\r\n    public static String m12995a(byte[] bArr, int i, int i2) {\r\n        PatchProxyResult proxy = PatchProxy.proxy(new Object[]{bArr, new Integer(i), new Integer(i2)}, null, f12080a, true, 7761, new Class[]{byte[].class, Integer.TYPE, Integer.TYPE}, String.class);\r\n        if (proxy.isSupported) {\r\n            return (String) proxy.result;\r\n        }\r\n        if (i2 <= 0) {\r\n            return \"\";\r\n        }\r\n        char[] cArr = new char[(((i2 / 3) * 4) + 4)];\r\n        int i3 = 0;\r\n        while (i2 >= 3) {\r\n            int i4 = ((bArr[i] & DeviceInfos.NETWORK_TYPE_UNCONNECTED) << 16) + ((bArr[i + 1] & DeviceInfos.NETWORK_TYPE_UNCONNECTED) << 8) + (bArr[i + 2] & DeviceInfos.NETWORK_TYPE_UNCONNECTED);\r\n            int i5 = i3 + 1;\r\n            cArr[i3] = f12081b[i4 >> 18];\r\n            int i6 = i5 + 1;\r\n            cArr[i5] = f12081b[(i4 >> 12) & 63];\r\n            int i7 = i6 + 1;\r\n            cArr[i6] = f12081b[(i4 >> 6) & 63];\r\n            i3 = i7 + 1;\r\n            cArr[i7] = f12081b[i4 & 63];\r\n            i += 3;\r\n            i2 -= 3;\r\n        }\r\n        if (i2 == 1) {\r\n            byte b = bArr[i] & DeviceInfos.NETWORK_TYPE_UNCONNECTED;\r\n            int i8 = i3 + 1;\r\n            cArr[i3] = f12081b[b >> 2];\r\n            int i9 = i8 + 1;\r\n            cArr[i8] = f12081b[(b << 4) & 63];\r\n            int i10 = i9 + 1;\r\n            cArr[i9] = '=';\r\n            i3 = i10 + 1;\r\n            cArr[i10] = '=';\r\n        } else if (i2 == 2) {\r\n            int i11 = ((bArr[i] & DeviceInfos.NETWORK_TYPE_UNCONNECTED) << 8) + (bArr[i + 1] & DeviceInfos.NETWORK_TYPE_UNCONNECTED);\r\n            int i12 = i3 + 1;\r\n            cArr[i3] = f12081b[i11 >> 10];\r\n            int i13 = i12 + 1;\r\n            cArr[i12] = f12081b[(i11 >> 4) & 63];\r\n            int i14 = i13 + 1;\r\n            cArr[i13] = f12081b[(i11 << 2) & 63];\r\n            i3 = i14 + 1;\r\n            cArr[i14] = '=';\r\n        }\r\n        return new String(cArr, 0, i3);\r\n    }\r\n```\r\n```java\r\npublic static final byte NETWORK_TYPE_UNCONNECTED = -1;\r\n```\r\n\r\n----\r\n- Error: `byte b = bArr[i] & DeviceInfos.NETWORK_TYPE_UNCONNECTED;`\r\n- Right: `int b = bArr[i] & 0xFF;` see [a similar](https://github.com/showcode-shutup/bins-repos/blob/c390ee810d11674c9f42cfd78e3e45ba1d4dfd15/src/main/java/com/bin/brother/encryptDecode/boshi/Base64.java#L112)", "url": "https://github.com/skylot/jadx/issues/901", "user": "gMan1990", "labels": ["Core", "bug"], "created": "2020-04-05 10:51:35", "closed": "2020-04-28 15:20:20", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "[core] Type inference failed for a simple method", "body": "Class ``` com.ebay.db.foundations.dcs.DcsDao_Impl ```\r\n```java\r\n        /* JADX INFO: additional move instructions added (1) to help type inference */\r\n        /* JADX WARN: Type inference failed for: r2v0 */\r\n        /* JADX WARN: Type inference failed for: r2v1, types: [java.util.Date] */\r\n        /* JADX WARN: Type inference failed for: r2v2, types: [java.lang.Long] */\r\n        /* JADX WARN: Type inference failed for: r2v5 */\r\n        /* JADX WARN: Type inference failed for: r2v6 */\r\n        /* JADX WARNING: Multi-variable type inference failed */\r\n        /* JADX WARNING: Unknown variable types count: 1 */\r\n        public java.util.Date call() throws java.lang.Exception {\r\n            ? r2 = 0;\r\n            android.database.Cursor query = androidx.room.util.DBUtil.query(com.ebay.db.foundations.dcs.DcsDao_Impl.this.__db, this.val$_statement, false, null);\r\n            try {\r\n                if (query.moveToFirst()) {\r\n                    if (!query.isNull(0)) {\r\n                        r2 = java.lang.Long.valueOf(query.getLong(0));\r\n                    }\r\n                    r2 = com.ebay.db.foundations.dcs.DcsDao_Impl.this.__dateTypeConverter.toDate(r2);\r\n                }\r\n                return r2;\r\n            } finally {\r\n                query.close();\r\n            }\r\n        }\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1qC3tlWs9AtPBpyS6iU9kcSphLryfJOxi/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/900", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-04-05 07:52:47", "closed": "2020-04-26 20:29:22", "commits": {"a7f315f596c6850c680711282e519f91b8ca5468": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "a7f315f596c6850c680711282e519f91b8ca5468", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["4dc4aa122b0f156be71278d532687e6c5f43da41"], "nameRev": "a7f315f596c6850c680711282e519f91b8ca5468 master~38", "commitMessage": "fix: split CONST used in PHI to help type inference (#900)\n", "commitDateTime": "2020-04-26 20:37:34", "authoredDateTime": "2020-04-26 20:36:27", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/PhiInsn.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java", "insertions": 73, "deletions": 17, "lines": 90}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/BlockUtils.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestTypeResolver14.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "jadx-core/src/test/smali/types/TestTypeResolver14.smali", "insertions": 63, "deletions": 0, "lines": 63}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PhiInsn.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.PhiInsn.getArgBySsaVar(jadx.core.dex.instructions.args.SSAVar)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeInferenceVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 29, "UPD": 5, "INS": 2, "MOV": 19, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.resolveTypes(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.trySplitConstInsns(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.checkAndSplitConstInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryInsertAdditionalMove(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BlockUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.BlockUtils.insertAfterInsn(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTypeResolver14.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver14", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a7f315f596c6850c680711282e519f91b8ca5468"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 101, "deletions": 17, "lines": 118, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 38, "UPD": 5, "INS": 11, "MOV": 19, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/dex/instructions", "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.checkAndSplitConstInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.instructions.PhiInsn.getArgBySsaVar(jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.trySplitConstInsns(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryInsertAdditionalMove(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.resolveTypes(jadx.core.dex.nodes.MethodNode)", "jadx.core.utils.BlockUtils.insertAfterInsn(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.InsnNode)"]}, {"title": "[core] jadx-cli Error saving class", "body": "Hi, when i trying to solve [https://github.com/skylot/jadx/issues/896](url), I got another bug with jadx-cli\r\n\r\n- provide full name of method or class with error\r\n> ERROR - Error saving class: com.ebay.mobile.dcs.Dcs\r\n\r\n- provide full java stacktrace\r\n\r\n`INFO  - loading ...\r\nINFO  - processing ...\r\nERROR - Error saving class: com.ebay.mobile.dcs.Dcs\r\njadx.core.utils.exceptions.JadxRuntimeException: Failed to generate code for class: com.ebay.mobile.dcs.Dcs\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:65)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:273)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:830)\r\nCaused by: java.lang.StackOverflowError: null\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:91)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:697)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)\r\nERROR - finished with errors, count: 34\r\n`\r\n\r\nAPK: \r\n[https://drive.google.com/file/d/1qC3tlWs9AtPBpyS6iU9kcSphLryfJOxi/view?usp=sharing](https://drive.google.com/file/d/1qC3tlWs9AtPBpyS6iU9kcSphLryfJOxi/view?usp=sharing)", "url": "https://github.com/skylot/jadx/issues/899", "user": "deluser8", "labels": ["Core", "bug"], "created": "2020-04-05 04:49:01", "closed": "2020-04-28 15:12:26", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "[core] \"super\" is used alone", "body": "Class ``` com.ebay.app.AlertDialogFragment ```\r\n```java\r\n    public void onCancel(android.content.DialogInterface dialogInterface) {\r\n        if (getTargetFragment() != null && (getTargetFragment() instanceof com.ebay.app.DialogFragmentCallback)) {\r\n            ((com.ebay.app.DialogFragmentCallback) getTargetFragment()).onDialogFragmentResult(/* >>> */ super, getTargetRequestCode(), 3);\r\n        } else if (getActivity() instanceof com.ebay.app.DialogFragmentCallback) {\r\n            ((com.ebay.app.DialogFragmentCallback) getActivity()).onDialogFragmentResult(/* >>> */ super, getTargetRequestCode(), 3);\r\n        }\r\n    }\r\n```\r\nAPK: https://drive.google.com/file/d/1qC3tlWs9AtPBpyS6iU9kcSphLryfJOxi/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/897", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-04-04 09:11:52", "closed": "2020-04-27 21:48:49", "commits": {"7f5092c0d59604dca757f76afaa748fa1af41628": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "7f5092c0d59604dca757f76afaa748fa1af41628", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["a7f315f596c6850c680711282e519f91b8ca5468"], "nameRev": "7f5092c0d59604dca757f76afaa748fa1af41628 master~37", "commitMessage": "fix: redone shadowed fields handling (#897)\n", "commitDateTime": "2020-04-27 22:29:34", "authoredDateTime": "2020-04-27 22:10:21", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/Jadx.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/FindSuperUsageVisitor.java", "insertions": 0, "deletions": 49, "lines": 49}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ShadowFieldVisitor.java", "insertions": 181, "deletions": 0, "lines": 181}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestShadowingSuperMember.java", "insertions": 29, "deletions": 21, "lines": 50}, {"filePath": "jadx-core/src/test/smali/others/TestShadowingSuperMember/A.smali", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "jadx-core/src/test/smali/others/TestShadowingSuperMember/B.smali", "insertions": 0, "deletions": 25, "lines": 25}, {"filePath": "jadx-core/src/test/smali/others/TestShadowingSuperMember/C.smali", "insertions": 0, "deletions": 12, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Jadx.java", "spoonMethods": [{"spoonMethodName": "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FindSuperUsageVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.FindSuperUsageVisitor", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ShadowFieldVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ShadowFieldVisitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestShadowingSuperMember.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestShadowingSuperMember", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.others.TestShadowingSuperMember.test()", "TOT": 19, "UPD": 8, "INS": 2, "MOV": 8, "DEL": 1}, {"spoonMethodName": "jadx.tests.integration.others.TestShadowingSuperMember.TestCls", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7f5092c0d59604dca757f76afaa748fa1af41628"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 182, "deletions": 52, "lines": 234, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core", "jadx-core/src/main/java/jadx/core/dex/visitors"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.FindSuperUsageVisitor", "jadx.core.dex.visitors.ShadowFieldVisitor", "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)"]}, {"title": "[core]Decompilation error", "body": "jadx: latest unstable build\r\n\r\napk link: https://drive.google.com/open?id=1V9DjCn5ytJ1aHLHRJc0HHVmXBbU_zWiJ\r\n\r\nclass: `com.key.keyproject.KeyUtils`\r\nmethod: `dealArray`\r\n\r\nin jadx:\r\n![image](https://user-images.githubusercontent.com/42903751/77524635-a2aa4500-6ec2-11ea-92d7-bde78097ef8a.png)\r\n\r\nin GDA\uff1a\r\n![image](https://user-images.githubusercontent.com/42903751/77524728-ccfc0280-6ec2-11ea-89c4-ded236c2a31b.png)\r\n", "url": "https://github.com/skylot/jadx/issues/893", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2020-03-25 10:03:57", "closed": "2020-04-04 07:51:49", "commits": {"a5ea560edc72c81b574ea2d83c473c6c53353780": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "a5ea560edc72c81b574ea2d83c473c6c53353780", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["e09e933f9ca719c05d647367198878ddc70f02ac"], "nameRev": "a5ea560edc72c81b574ea2d83c473c6c53353780 master~45", "commitMessage": "fix: preserve code semantics on array-for-each transform (#893)\n", "commitDateTime": "2020-03-31 21:41:36", "authoredDateTime": "2020-03-30 17:21:57", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/RegionGen.java", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/LoopInfo.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/ConstStringNode.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/InsnType.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/LiteralArg.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/regions/loops/ForEachLoop.java", "insertions": 22, "deletions": 7, "lines": 29}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockProcessor.java", "insertions": 34, "deletions": 1, "lines": 35}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/LoopRegionVisitor.java", "insertions": 18, "deletions": 17, "lines": 35}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/InsnRemover.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/InsnUtils.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/StringUtils.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/loops/TestBreakWithLabel.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/loops/TestLoopRestore.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestGenerics2.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "jadx-core/src/test/smali/loops/TestLoopRestore.smali", "insertions": 74, "deletions": 0, "lines": 74}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.makeInsn(jadx.core.dex.nodes.InsnNode,jadx.core.codegen.CodeWriter,jadx.core.codegen.InsnGen$Flags)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegionGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.RegionGen.makeLoop(jadx.core.dex.regions.loops.LoopRegion,jadx.core.codegen.CodeWriter)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "LoopInfo.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.LoopInfo.getPreHeader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConstStringNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.ConstStringNode.toString()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "InsnType.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.InsnType", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LiteralArg.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.LiteralArg", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.instructions.args.LiteralArg.toString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "InsnNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.InsnNode.containsWrappedInsn()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ForEachLoop.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.regions.loops.ForEachLoop", "TOT": 18, "UPD": 6, "INS": 7, "MOV": 2, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.regions.loops.ForEachLoop.getVarArg()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.regions.loops.ForEachLoop.getIterableArg()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.regions.loops.ForEachLoop.injectFakeInsns(jadx.core.dex.regions.loops.LoopRegion)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BlockProcessor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.insertPreHeader(jadx.core.dex.nodes.MethodNode,jadx.core.dex.attributes.nodes.LoopInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.checkLoops(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LoopRegionVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.LoopRegionVisitor.checkArrayForEach(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.loops.LoopRegion,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.InsnNode,jadx.core.dex.regions.conditions.IfCondition)", "TOT": 18, "UPD": 1, "INS": 10, "MOV": 6, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.regions.LoopRegionVisitor.checkForIndexedLoop(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.loops.LoopRegion,jadx.core.dex.regions.conditions.IfCondition)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.regions.LoopRegionVisitor.checkIterableForEach(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.loops.LoopRegion,jadx.core.dex.regions.conditions.IfCondition)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "InsnRemover.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.InsnRemover.remove(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.InsnUtils.dontGenerateIfNotUsed(jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StringUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.StringUtils", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.StringUtils.getInstance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestBreakWithLabel.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.loops.TestBreakWithLabel.test()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TestLoopRestore.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.loops.TestLoopRestore", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestGenerics2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestGenerics2.test()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a5ea560edc72c81b574ea2d83c473c6c53353780"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 121, "deletions": 42, "lines": 163, "gitFilesChange": 13}, "spoonStatsSummary": {"TOT": 75, "UPD": 8, "INS": 37, "MOV": 18, "DEL": 12, "spoonFilesChanged": 13, "spoonMethodsChanged": 21}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/dex/instructions/args", "jadx-core/src/main/java/jadx/core/dex/attributes/nodes", "jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/dex/instructions", "jadx-core/src/main/java/jadx/core/dex/regions/loops"], "changesInPackagesSPOON": ["jadx.core.dex.instructions.InsnType", "jadx.core.dex.instructions.ConstStringNode.toString()", "jadx.core.dex.regions.loops.ForEachLoop.getVarArg()", "jadx.core.codegen.RegionGen.makeLoop(jadx.core.dex.regions.loops.LoopRegion,jadx.core.codegen.CodeWriter)", "jadx.core.dex.regions.loops.ForEachLoop.injectFakeInsns(jadx.core.dex.regions.loops.LoopRegion)", "jadx.core.codegen.InsnGen.makeInsn(jadx.core.dex.nodes.InsnNode,jadx.core.codegen.CodeWriter,jadx.core.codegen.InsnGen$Flags)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.insertPreHeader(jadx.core.dex.nodes.MethodNode,jadx.core.dex.attributes.nodes.LoopInfo)", "jadx.core.dex.attributes.nodes.LoopInfo.getPreHeader()", "jadx.core.dex.visitors.regions.LoopRegionVisitor.checkIterableForEach(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.loops.LoopRegion,jadx.core.dex.regions.conditions.IfCondition)", "jadx.core.dex.visitors.regions.LoopRegionVisitor.checkArrayForEach(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.loops.LoopRegion,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.InsnNode,jadx.core.dex.regions.conditions.IfCondition)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.checkLoops(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.nodes.InsnNode.containsWrappedInsn()", "jadx.core.dex.regions.loops.ForEachLoop", "jadx.core.utils.StringUtils.getInstance()", "jadx.core.dex.instructions.args.LiteralArg.toString()", "jadx.core.utils.InsnRemover.remove(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "jadx.core.utils.StringUtils", "jadx.core.dex.regions.loops.ForEachLoop.getIterableArg()", "jadx.core.utils.InsnUtils.dontGenerateIfNotUsed(jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.instructions.args.LiteralArg", "jadx.core.dex.visitors.regions.LoopRegionVisitor.checkForIndexedLoop(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.loops.LoopRegion,jadx.core.dex.regions.conditions.IfCondition)"]}, {"title": "Method not decompiled: com.paypal.android.foundation.auth.operations.ChecksumUtil.addMfsAuthCheckSumInParams(...)", "body": "Hi @skylot , when I open `com.paypal.android.foundation.auth.operations.ChecksumUtil.addMfsAuthCheckSumInParams(...)` I see:\r\n\r\n```java\r\n/* JADX WARNING: Code restructure failed: missing block: B:14:0x003d, code lost:\r\n        return;\r\n     */\r\n    /* Code decompiled incorrectly, please refer to instructions dump. */\r\n    public static synchronized void addMfsAuthCheckSumInParams(com.paypal.android.foundation.auth.operations.SecurityOperation.GrantType r3, com.paypal.android.foundation.auth.AccountCredentials r4, java.util.Map<java.lang.String, java.lang.String> r5) {\r\n        /*\r\n            java.lang.Class<com.paypal.android.foundation.auth.operations.ChecksumUtil> r0 = com.paypal.android.foundation.auth.operations.ChecksumUtil.class\r\n            monitor-enter(r0)\r\n            com.paypal.android.foundation.core.CommonContracts.requireNonNull(r3)     // Catch:{ all -> 0x003e }\r\n            com.paypal.android.foundation.core.CommonContracts.requireAny(r4)     // Catch:{ all -> 0x003e }\r\n            com.paypal.android.foundation.core.CommonContracts.requireNonNull(r5)     // Catch:{ all -> 0x003e }\r\n            com.paypal.android.foundation.auth.operations.SecurityOperation$GrantType r1 = com.paypal.android.foundation.auth.operations.SecurityOperation.GrantType.Password     // Catch:{ all -> 0x003e }\r\n            boolean r3 = r1.equals(r3)     // Catch:{ all -> 0x003e }\r\n            if (r3 == 0) goto L_0x003c\r\n            long r1 = java.lang.System.currentTimeMillis()     // Catch:{ all -> 0x003e }\r\n            java.lang.String r3 = composeChecksumInputForGrantTypePasswordOrPin(r4, r1)     // Catch:{ all -> 0x003e }\r\n            boolean r4 = android.text.TextUtils.isEmpty(r3)     // Catch:{ all -> 0x003e }\r\n            if (r4 == 0) goto L_0x0024\r\n            monitor-exit(r0)\r\n            return\r\n        L_0x0024:\r\n            java.lang.String r3 = getAuthCheckSum(r3)     // Catch:{ all -> 0x003e }\r\n            boolean r4 = android.text.TextUtils.isEmpty(r3)     // Catch:{ all -> 0x003e }\r\n            if (r4 != 0) goto L_0x003c\r\n            java.lang.String r4 = \"authNonce\"\r\n            r5.put(r4, r3)     // Catch:{ all -> 0x003e }\r\n            java.lang.String r3 = \"timeStamp\"\r\n            java.lang.String r4 = java.lang.Long.toString(r1)     // Catch:{ all -> 0x003e }\r\n            r5.put(r3, r4)     // Catch:{ all -> 0x003e }\r\n        L_0x003c:\r\n            monitor-exit(r0)\r\n            return\r\n        L_0x003e:\r\n            r3 = move-exception\r\n            monitor-exit(r0)\r\n            throw r3\r\n        */\r\n        throw new UnsupportedOperationException(\"Method not decompiled: com.paypal.android.foundation.auth.operations.ChecksumUtil.addMfsAuthCheckSumInParams(com.paypal.android.foundation.auth.operations.SecurityOperation$GrantType, com.paypal.android.foundation.auth.AccountCredentials, java.util.Map):void\");\r\n    }\r\n```\r\n\r\nCan you look at it? Thanks\r\n\r\nAPK: https://drive.google.com/open?id=1phN944Dgr7E7yU5oashvQOWGf13A1kTA", "url": "https://github.com/skylot/jadx/issues/891", "user": "hackerftsg", "labels": ["Core", "bug"], "created": "2020-03-18 18:16:38", "closed": "2020-04-28 20:27:47", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "[core] Incorrect decompiling", "body": "\r\n[classes5.zip](https://github.com/skylot/jadx/files/4333179/classes5.zip)\r\nUse jadx latest unstable.\r\n- class: com.xiaomi.hm.health.bt.device.HMDeviceSource\r\n![image](https://user-images.githubusercontent.com/5773978/76688171-8d6c2580-663b-11ea-9b32-8b1e300abe03.png)\r\nInstead of lines:\r\n`put(Integer.valueOf(HMDeviceSource.a(50, 256)), HMDeviceSource.OTHER_MOZART);\r\n`\r\nMust be code using method **b**, not **a**:\r\n`put(Integer.valueOf(HMDeviceSource.b(50, 256)), HMDeviceSource.OTHER_MOZART);\r\n`\r\n\r\nSample from Luyten:\r\n![image](https://user-images.githubusercontent.com/5773978/76688218-eb990880-663b-11ea-9031-fc7f9522bcc9.png)\r\n", "url": "https://github.com/skylot/jadx/issues/884", "user": "amspeople", "labels": ["Core", "bug"], "created": "2020-03-14 18:37:25", "closed": "2020-03-16 20:48:31", "commits": {"9d8066f4b80885fe973e31dc262d536bdbef1790": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "2f780da305fdd2528c744d1188095152011f8084": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "9d8066f4b80885fe973e31dc262d536bdbef1790", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["2cc49256a9abe370e28382c8f557ee3c3f12ea15"], "nameRev": "9d8066f4b80885fe973e31dc262d536bdbef1790 master~51", "commitMessage": "fix: don't remove synthetic methods from enum (#884)\n", "commitDateTime": "2020-03-16 19:06:52", "authoredDateTime": "2020-03-16 19:06:52", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java", "insertions": 1, "deletions": 3, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EnumVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.removeEnumMethods(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2f780da305fdd2528c744d1188095152011f8084", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["9d8066f4b80885fe973e31dc262d536bdbef1790"], "nameRev": "2f780da305fdd2528c744d1188095152011f8084 master~50", "commitMessage": "fix: remove enum methods after instructions check (#884)\n", "commitDateTime": "2020-03-16 20:31:47", "authoredDateTime": "2020-03-16 20:30:37", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java", "insertions": 48, "deletions": 7, "lines": 55}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/InsnUtils.java", "insertions": 72, "deletions": 0, "lines": 72}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestEnumObfuscated.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "jadx-core/src/test/smali/enums/TestEnumObfuscated.smali", "insertions": 81, "deletions": 0, "lines": 81}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EnumVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.removeEnumMethods(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.ArgType)", "TOT": 11, "UPD": 6, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.processEnumFiledByRegister(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.RegisterArg,java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.init(jadx.core.dex.nodes.RootNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.simpleValueOfMth(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.usesValuesField(jadx.core.dex.nodes.MethodNode,jadx.core.dex.info.FieldInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.removeEnumMethods(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.nodes.FieldNode)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.convertToEnum(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.InsnUtils.searchSingleReturnInsn(jadx.core.dex.nodes.MethodNode,java.util.function.Predicate)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.InsnUtils.searchInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.InsnType,java.util.function.Predicate)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.InsnUtils.recursiveInsnCheck(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.InsnType,java.util.function.Predicate)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.InsnUtils.getSingleArg(jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.InsnUtils.checkInsnType(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.InsnType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.InsnUtils.getWrappedInsn(jadx.core.dex.instructions.args.InsnArg)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestEnumObfuscated.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.enums.TestEnumObfuscated", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9d8066f4b80885fe973e31dc262d536bdbef1790", "2f780da305fdd2528c744d1188095152011f8084"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 121, "deletions": 10, "lines": 131, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 27, "UPD": 6, "INS": 13, "MOV": 5, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/utils"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.EnumVisitor.removeEnumMethods(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.ArgType)", "jadx.core.utils.InsnUtils.getSingleArg(jadx.core.dex.nodes.InsnNode)", "jadx.core.utils.InsnUtils.searchInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.InsnType,java.util.function.Predicate)", "jadx.core.utils.InsnUtils.checkInsnType(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.InsnType)", "jadx.core.dex.visitors.EnumVisitor", "jadx.core.dex.visitors.EnumVisitor.removeEnumMethods(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.nodes.FieldNode)", "jadx.core.utils.InsnUtils.searchSingleReturnInsn(jadx.core.dex.nodes.MethodNode,java.util.function.Predicate)", "jadx.core.utils.InsnUtils.getWrappedInsn(jadx.core.dex.instructions.args.InsnArg)", "jadx.core.dex.visitors.EnumVisitor.convertToEnum(jadx.core.dex.nodes.ClassNode)", "jadx.core.utils.InsnUtils.recursiveInsnCheck(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.InsnType,java.util.function.Predicate)", "jadx.core.dex.visitors.EnumVisitor.simpleValueOfMth(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.EnumVisitor.init(jadx.core.dex.nodes.RootNode)", "jadx.core.dex.visitors.EnumVisitor.usesValuesField(jadx.core.dex.nodes.MethodNode,jadx.core.dex.info.FieldInfo)", "jadx.core.dex.visitors.EnumVisitor.processEnumFiledByRegister(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.RegisterArg,java.util.List)"]}, {"title": "[GUI]reproduces a previously resolved bug, search only in short names of methods and fields", "body": "The latest version reproduces a previously resolved bug, link: https://github.com/skylot/jadx/commit/836585547502142dbdfdf4f3f73e273dcb49be59\r\nI found that the bug is related to this Pr, link: https://github.com/skylot/jadx/pull/880\r\n\r\nWhen I search for the method name, if the class name includes this string, jadx will also render. In fact, I only need jadx to match method names instead of class names;\r\nFor example, as shown in the figure:\r\n![image](https://user-images.githubusercontent.com/42903751/76684982-28203080-664b-11ea-81fe-4fee0635e591.png)\r\n", "url": "https://github.com/skylot/jadx/issues/882", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2020-03-14 15:30:48", "closed": "2020-03-17 13:04:44", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "The return value of the function is reversed because a return is missing", "body": "The return value of the function is reversed because a return is missing\r\napp:http://119.3.71.255:7272\r\npackage com.dothantech.labelpaint.activitys;\r\n\r\njadx decompilier code:\r\n```java\r\n    public synchronized boolean connectPrinter(IBluetoothPrinter printer, IBluetoothPrinter.PrinterAddress address) {\r\n        boolean ret;\r\n        if (!(printer == null || address == null)) {\r\n            if (address.macAddress != null && !address.macAddress.isEmpty()) {\r\n                Log.i(TAG, \"initalPrinter\");\r\n                ret = false;\r\n                try {\r\n                    if (BluetoothAdapter.getDefaultAdapter() != null) {\r\n                        ret = printer.connect(address);\r\n                        if (!ret) {\r\n                            Log.e(TAG, \"connectPrinter failed!\");\r\n                        } else {\r\n                            Log.e(TAG, \"connectPrinter suucess!\");\r\n                        }\r\n                    }\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n        Log.i(TAG, \"initalPrinter parm error!\");\r\n        ret = false;\r\n        return ret;\r\n    }\r\n```\r\n\r\njeb decompilier code:\r\n```java\r\npublic boolean connectPrinter(IBluetoothPrinter printer, IBluetoothPrinter.PrinterAddress address) {\r\n    boolean v2;\r\n    synchronized (this) {\r\n        if (printer != null && address != null) {\r\n            if (address.macAddress != null && !address.macAddress.isEmpty()) {\r\n                Log.i(\"MyApp\", \"initalPrinter\");\r\n                v2 = false;\r\n                if (BluetoothAdapter.getDefaultAdapter() != null) {\r\n                    v2 = printer.connect(address);\r\n                    if (!v2) {\r\n                        Log.e(\"MyApp\", \"connectPrinter failed!\");\r\n                        return v2;\r\n                    } else {\r\n                        Log.e(\"MyApp\", \"connectPrinter suucess!\");\r\n                        return v2;\r\n                    }\r\n                } else {\r\n                    return v2;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    Log.i(\"MyApp\", \"initalPrinter parm error!\");\r\n    v2 = false;\r\n    return v2;\r\n}\r\n```", "url": "https://github.com/skylot/jadx/issues/881", "user": "zgfflc", "labels": ["Core", "bug"], "created": "2020-03-12 12:55:44", "closed": "2020-04-28 17:17:41", "commits": {}, "ttf": 47.000277777777775, "commitsDetails": []}, {"title": "[core]Strange java syntax, find references are not available", "body": "jadx version\uff1alatest unstable build\uff08jadx-1.1.0-b1254-3c7be5e9\uff09\r\napk link\uff1ahttps://drive.google.com/open?id=1J7vH3IPu8fVGoevW-K1kvzP6uMD4s7qN\r\n\r\nclass: `com.xmiles.finevideo.ui.widget.dialog.UpgradeVipCancelTipsDialog`\r\nmethod: `onCreate`\r\n\r\n![image](https://user-images.githubusercontent.com/42903751/76182749-ff3e0c80-6200-11ea-839c-e80d8dd31f9d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/42903751/76182786-2f85ab00-6201-11ea-9519-97b8c6deb0b9.png)\r\n\r\n![image](https://user-images.githubusercontent.com/42903751/76182764-13820980-6201-11ea-84fd-a7a414da1b9a.png)\r\n\r\n\r\n\r\nin jeb\uff1a\r\n![image](https://user-images.githubusercontent.com/42903751/76182828-56dc7800-6201-11ea-8fb4-f456e79e7660.png)\r\n\r\n![image](https://user-images.githubusercontent.com/42903751/76182862-63f96700-6201-11ea-95af-1f5c1e487cac.png)\r\n\r\n![image](https://user-images.githubusercontent.com/42903751/76182883-75db0a00-6201-11ea-99e2-08db1b65eb2e.png)\r\n\r\n![image](https://user-images.githubusercontent.com/42903751/76182909-8c816100-6201-11ea-8a27-d2501810c921.png)\r\n\r\n", "url": "https://github.com/skylot/jadx/issues/879", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2020-03-09 04:32:55", "closed": "2020-04-28 15:48:09", "commits": {}, "ttf": 50.000277777777775, "commitsDetails": []}, {"title": "[core] Regions count limit reached for a small method", "body": "Hi, I've noticed that method ``` android.support.v4.content.ModernAsyncTask.executeOnExecutor ``` method is not decompiled, it's source https://android.googlesource.com/platform/frameworks/support/+/android-support-lib-19.1.0/v4/java/android/support/v4/content/ModernAsyncTask.java#404\r\n\r\nBut decompiled to\r\n```java\r\n    /*  JADX ERROR: JadxOverflowException in pass: RegionMakerVisitor\r\n        jadx.core.utils.exceptions.JadxOverflowException: Regions count limit reached\r\n        \tat jadx.core.utils.ErrorsCounter.addError(ErrorsCounter.java:47)\r\n        \tat jadx.core.utils.ErrorsCounter.methodError(ErrorsCounter.java:81)\r\n        */\r\n    /* JADX WARNING: Removed duplicated region for block: B:4:0x0013  */\r\n    /* JADX WARNING: Removed duplicated region for block: B:6:0x001b  */\r\n    /* JADX WARNING: Removed duplicated region for block: B:8:0x0023  */\r\n    public final android.support.v4.content.ModernAsyncTask<Params, Progress, Result> executeOnExecutor(java.util.concurrent.Executor r3, Params... r4) {\r\n        /*\r\n            r2 = this;\r\n            android.support.v4.content.ModernAsyncTask$Status r0 = r2.mStatus\r\n            android.support.v4.content.ModernAsyncTask$Status r1 = android.support.v4.content.ModernAsyncTask.Status.PENDING\r\n            if (r0 == r1) goto L_0x002b\r\n            int[] r3 = android.support.v4.content.ModernAsyncTask.C04244.$SwitchMap$androidx$loader$content$ModernAsyncTask$Status\r\n            android.support.v4.content.ModernAsyncTask$Status r4 = r2.mStatus\r\n            int r4 = r4.ordinal()\r\n            r3 = r3[r4]\r\n            switch(r3) {\r\n                case 1: goto L_0x0023;\r\n                case 2: goto L_0x001b;\r\n                default: goto L_0x0013;\r\n            }\r\n        L_0x0013:\r\n            java.lang.IllegalStateException r3 = new java.lang.IllegalStateException\r\n            java.lang.String r4 = \"We should never reach this state\"\r\n            r3.<init>(r4)\r\n            throw r3\r\n        L_0x001b:\r\n            java.lang.IllegalStateException r3 = new java.lang.IllegalStateException\r\n            java.lang.String r4 = \"Cannot execute task: the task has already been executed (a task can be executed only once)\"\r\n            r3.<init>(r4)\r\n            throw r3\r\n        L_0x0023:\r\n            java.lang.IllegalStateException r3 = new java.lang.IllegalStateException\r\n            java.lang.String r4 = \"Cannot execute task: the task is already running.\"\r\n            r3.<init>(r4)\r\n            throw r3\r\n        L_0x002b:\r\n            android.support.v4.content.ModernAsyncTask$Status r0 = android.support.v4.content.ModernAsyncTask.Status.RUNNING\r\n            r2.mStatus = r0\r\n            r2.onPreExecute()\r\n            android.support.v4.content.ModernAsyncTask$WorkerRunnable<Params, Result> r0 = r2.mWorker\r\n            r0.mParams = r4\r\n            java.util.concurrent.FutureTask<Result> r4 = r2.mFuture\r\n            r3.execute(r4)\r\n            return r2\r\n        */\r\n        throw new UnsupportedOperationException(\"Method not decompiled: android.support.v4.content.ModernAsyncTask.executeOnExecutor(java.util.concurrent.Executor, java.lang.Object[]):android.support.v4.content.ModernAsyncTask\");\r\n    }\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1ipm589ATL0i1BmAWZHq1FfPSJpDM_JJg/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/876", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-03-01 09:24:06", "closed": "2020-03-17 21:47:02", "commits": {"4cdad0e83e0369a82b1e9ed169a5a5d057bcf086": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "2da772df8ec7d5e1a69b36d7a5bb2b0da41bc917": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 16.00027777777778, "commitsDetails": [{"commitHash": "4cdad0e83e0369a82b1e9ed169a5a5d057bcf086", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["2f780da305fdd2528c744d1188095152011f8084"], "nameRev": "4cdad0e83e0369a82b1e9ed169a5a5d057bcf086 master~49", "commitMessage": "fix: correct method exit blocks collection (#876)\n", "commitDateTime": "2020-03-17 19:38:45", "authoredDateTime": "2020-03-17 19:38:45", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockProcessor.java", "insertions": 27, "deletions": 6, "lines": 33}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/switches/TestSwitchWithThrow.java", "insertions": 44, "deletions": 0, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BlockProcessor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.markReturnBlocks(jadx.core.dex.nodes.MethodNode)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.processBlocksTree(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.updateExitBlocks(jadx.core.dex.nodes.MethodNode)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSwitchWithThrow.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.switches.TestSwitchWithThrow", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2da772df8ec7d5e1a69b36d7a5bb2b0da41bc917", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["4cdad0e83e0369a82b1e9ed169a5a5d057bcf086"], "nameRev": "2da772df8ec7d5e1a69b36d7a5bb2b0da41bc917 master~48", "commitMessage": "fix: resolve some cases of switch in loop (#876)\n", "commitDateTime": "2020-03-21 18:42:27", "authoredDateTime": "2020-03-21 18:41:54", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/SwitchNode.java", "insertions": 17, "deletions": 8, "lines": 25}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java", "insertions": 22, "deletions": 6, "lines": 28}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/ErrorsCounter.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/switches/TestSwitchInLoop2.java", "insertions": 34, "deletions": 0, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SwitchNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.SwitchNode.toString()", "TOT": 14, "UPD": 1, "INS": 3, "MOV": 9, "DEL": 1}]}, {"spoonFilePath": "RegionMaker.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMaker.processSwitch(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.SwitchNode,jadx.core.dex.visitors.regions.RegionStack)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "ErrorsCounter.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.ErrorsCounter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.ErrorsCounter.addError(jadx.core.dex.nodes.IDexNode,jadx.core.dex.attributes.IAttributeNode,java.lang.String,java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSwitchInLoop2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.switches.TestSwitchInLoop2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4cdad0e83e0369a82b1e9ed169a5a5d057bcf086", "2da772df8ec7d5e1a69b36d7a5bb2b0da41bc917"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 71, "deletions": 20, "lines": 91, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 38, "UPD": 5, "INS": 12, "MOV": 18, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/instructions", "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker", "jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/utils"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.regions.RegionMaker.processSwitch(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.SwitchNode,jadx.core.dex.visitors.regions.RegionStack)", "jadx.core.utils.ErrorsCounter", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.processBlocksTree(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.updateExitBlocks(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.instructions.SwitchNode.toString()", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.markReturnBlocks(jadx.core.dex.nodes.MethodNode)", "jadx.core.utils.ErrorsCounter.addError(jadx.core.dex.nodes.IDexNode,jadx.core.dex.attributes.IAttributeNode,java.lang.String,java.lang.Throwable)"]}, {"title": "[core] JadxRuntimeException: Method info already added", "body": "Hi, class ``` com.bytedance.jedi.arch.ext.list.LoadStrategyKt$Prepend$1 ```\r\n```java\r\n\r\n    /*  JADX ERROR: Method load error\r\n        jadx.core.utils.exceptions.DecodeException: Load method exception: Method info already added: kotlin.collections.CollectionsKt.plus(java.util.Collection, java.lang.Iterable):java.util.List in method: com.bytedance.jedi.arch.ext.list.LoadStrategyKt$Prepend$1.invoke(java.util.List<? extends T>, java.util.List<? extends T>):java.util.List<T>, dex: classes3.dex\r\n        \tat jadx.core.dex.nodes.MethodNode.load(MethodNode.java:154)\r\n        \tat jadx.core.dex.nodes.ClassNode.load(ClassNode.java:306)\r\n        \tat jadx.core.ProcessClass.process(ProcessClass.java:36)\r\n        \tat jadx.core.ProcessClass.generateCode(ProcessClass.java:58)\r\n        \tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:297)\r\n        \tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:276)\r\n        Caused by: jadx.core.utils.exceptions.JadxRuntimeException: Method info already added: kotlin.collections.CollectionsKt.plus(java.util.Collection, java.lang.Iterable):java.util.List\r\n        \tat jadx.core.dex.info.InfoStorage.putMethod(InfoStorage.java:42)\r\n        \tat jadx.core.dex.info.MethodInfo.fromDex(MethodInfo.java:50)\r\n        \tat jadx.core.dex.instructions.InsnDecoder.invoke(InsnDecoder.java:678)\r\n        \tat jadx.core.dex.instructions.InsnDecoder.decode(InsnDecoder.java:528)\r\n        \tat jadx.core.dex.instructions.InsnDecoder.process(InsnDecoder.java:78)\r\n        \tat jadx.core.dex.nodes.MethodNode.load(MethodNode.java:139)\r\n        \t... 5 more\r\n        */\r\n    public final java.util.List<T> invoke(java.util.List<? extends T> r1, java.util.List<? extends T> r2) {\r\n        /*\r\n            r1 = this;\r\n            java.lang.String r0 = \"list\"\r\n            kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, r0)\r\n            java.lang.String r0 = \"refresh\"\r\n            kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, r0)\r\n            java.util.Collection r3 = (java.util.Collection) r3\r\n            java.lang.Iterable r2 = (java.lang.Iterable) r2\r\n            java.util.List r0 = kotlin.collections.CollectionsKt.plus(r3, r2)\r\n            return r0\r\n        */\r\n        throw new UnsupportedOperationException(\"Method not decompiled: com.bytedance.jedi.arch.ext.list.LoadStrategyKt$Prepend$1.invoke(java.util.List, java.util.List):java.util.List\");\r\n    }\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1wrBR3UgxGNoIpSMmuyqEC1fXcgiFmJvq/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/868", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-02-25 05:13:26", "closed": "2020-02-29 21:06:38", "commits": {"49a82c83887839d126d195c3d34fc6801f3cbe32": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "49a82c83887839d126d195c3d34fc6801f3cbe32", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["26bad4a1cd797c886661a50f9376b8e03be282e8"], "nameRev": "49a82c83887839d126d195c3d34fc6801f3cbe32 master~58", "commitMessage": "fix: method info cache error (#868)\n", "commitDateTime": "2020-02-29 19:22:18", "authoredDateTime": "2020-02-29 19:22:18", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/info/InfoStorage.java", "insertions": 6, "deletions": 4, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InfoStorage.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.info.InfoStorage.putMethod(jadx.core.dex.nodes.DexNode,int,jadx.core.dex.info.MethodInfo)", "TOT": 8, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.info.InfoStorage.getMethod(jadx.core.dex.nodes.DexNode,int)", "TOT": 9, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.info.InfoStorage.generateMethodLookupId(jadx.core.dex.nodes.DexNode,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["49a82c83887839d126d195c3d34fc6801f3cbe32"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 4, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 18, "UPD": 1, "INS": 6, "MOV": 7, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/info"], "changesInPackagesSPOON": ["jadx.core.dex.info.InfoStorage.generateMethodLookupId(jadx.core.dex.nodes.DexNode,int)", "jadx.core.dex.info.InfoStorage.putMethod(jadx.core.dex.nodes.DexNode,int,jadx.core.dex.info.MethodInfo)", "jadx.core.dex.info.InfoStorage.getMethod(jadx.core.dex.nodes.DexNode,int)"]}, {"title": "[core] JadxRuntimeException in pass: MethodInvokeVisitor", "body": "Hi, I've noticed an error that prevents a method from being decompiled, class ``` com.ss.android.e.d$2 ```\r\n```java\r\n\r\n    /* renamed from: com.ss.android.e.d$2 */\r\n    class C11912 implements java.lang.Runnable {\r\n        /*  JADX ERROR: JadxRuntimeException in pass: MethodInvokeVisitor\r\n            jadx.core.utils.exceptions.JadxRuntimeException: Not class type: E\r\n            \tat jadx.core.dex.info.ClassInfo.checkClassType(ClassInfo.java:60)\r\n            \tat jadx.core.dex.info.ClassInfo.fromType(ClassInfo.java:31)\r\n            \tat jadx.core.dex.nodes.DexNode.resolveClass(DexNode.java:143)\r\n            \tat jadx.core.dex.nodes.RootNode.resolveClass(RootNode.java:183)\r\n            \tat jadx.core.dex.nodes.utils.MethodUtils.processMethodArgsOverloaded(MethodUtils.java:75)\r\n            \tat jadx.core.dex.nodes.utils.MethodUtils.collectOverloadedMethods(MethodUtils.java:54)\r\n            \tat jadx.core.dex.visitors.MethodInvokeVisitor.processOverloaded(MethodInvokeVisitor.java:108)\r\n            \tat jadx.core.dex.visitors.MethodInvokeVisitor.processInvoke(MethodInvokeVisitor.java:101)\r\n            \tat jadx.core.dex.visitors.MethodInvokeVisitor.processInsn(MethodInvokeVisitor.java:72)\r\n            \tat jadx.core.dex.visitors.MethodInvokeVisitor.visit(MethodInvokeVisitor.java:65)\r\n            */\r\n        public void run() {\r\n            /*\r\n                r5 = this;\r\n                r4 = 0\r\n                r1 = 0\r\n                com.ss.android.e.d r0 = com.ss.android.p065e.C1189d.this     // Catch:{ Throwable -> 0x0031 }\r\n                com.ss.android.e.d r2 = com.ss.android.p065e.C1189d.this     // Catch:{ Throwable -> 0x0031 }\r\n                com.ss.android.e.e r2 = r2.f1434b     // Catch:{ Throwable -> 0x0031 }\r\n                java.lang.String r2 = r2.modelCachePath()     // Catch:{ Throwable -> 0x0031 }\r\n                com.ss.android.e.d r3 = com.ss.android.p065e.C1189d.this     // Catch:{ Throwable -> 0x0031 }\r\n                com.ss.android.e.e r3 = r3.f1434b     // Catch:{ Throwable -> 0x0031 }\r\n                java.lang.String r3 = r3.modelUrl()     // Catch:{ Throwable -> 0x0031 }\r\n                java.io.InputStream r1 = r0.mo14467a(r2, r3)     // Catch:{ Throwable -> 0x0031 }\r\n                if (r1 != 0) goto L_0x0022\r\n                com.ss.android.p065e.C16114b.closeQuietly(r1)\r\n                com.ss.android.e.d r0 = com.ss.android.p065e.C1189d.this\r\n                r0.isDownloading = r4\r\n            L_0x0021:\r\n                return\r\n            L_0x0022:\r\n                com.ss.android.e.d r0 = com.ss.android.p065e.C1189d.this     // Catch:{ Throwable -> 0x0031 }\r\n                E r0 = r0.f1433a     // Catch:{ Throwable -> 0x0031 }\r\n                r0.loadEvaluator(r1)     // Catch:{ Throwable -> 0x0031 }\r\n                com.ss.android.p065e.C16114b.closeQuietly(r1)\r\n                com.ss.android.e.d r0 = com.ss.android.p065e.C1189d.this\r\n                r0.isDownloading = r4\r\n                goto L_0x0021\r\n            L_0x0031:\r\n                r0 = move-exception\r\n                com.ss.android.e.d r2 = com.ss.android.p065e.C1189d.this     // Catch:{ all -> 0x0059 }\r\n                r3 = 2\r\n                r2.f1435c = r3     // Catch:{ all -> 0x0059 }\r\n                com.ss.android.e.d r2 = com.ss.android.p065e.C1189d.this     // Catch:{ all -> 0x0059 }\r\n                com.ss.android.e.d r3 = com.ss.android.p065e.C1189d.this     // Catch:{ all -> 0x0059 }\r\n                com.ss.android.e.e r3 = r3.f1434b     // Catch:{ all -> 0x0059 }\r\n                java.lang.String r3 = r3.modelCachePath()     // Catch:{ all -> 0x0059 }\r\n                r2.mo14468a(r3)     // Catch:{ all -> 0x0059 }\r\n                com.ss.android.e.d r2 = com.ss.android.p065e.C1189d.this     // Catch:{ all -> 0x0059 }\r\n                com.ss.android.e.g r2 = r2.listener     // Catch:{ all -> 0x0059 }\r\n                if (r2 == 0) goto L_0x0051\r\n                com.ss.android.e.d r2 = com.ss.android.p065e.C1189d.this     // Catch:{ all -> 0x0059 }\r\n                com.ss.android.e.g r2 = r2.listener     // Catch:{ all -> 0x0059 }\r\n                r2.onModelLoadFailed(r0)     // Catch:{ all -> 0x0059 }\r\n            L_0x0051:\r\n                com.ss.android.p065e.C16114b.closeQuietly(r1)\r\n                com.ss.android.e.d r0 = com.ss.android.p065e.C1189d.this\r\n                r0.isDownloading = r4\r\n                goto L_0x0021\r\n            L_0x0059:\r\n                r0 = move-exception\r\n                com.ss.android.p065e.C16114b.closeQuietly(r1)\r\n                com.ss.android.e.d r1 = com.ss.android.p065e.C1189d.this\r\n                r1.isDownloading = r4\r\n                throw r0\r\n            */\r\n            throw new UnsupportedOperationException(\"Method not decompiled: com.ss.android.p065e.C1189d.C11912.run():void\");\r\n        }\r\n\r\n        C11912() {\r\n        }\r\n    }\r\n```\r\nAPK: https://drive.google.com/file/d/1wrBR3UgxGNoIpSMmuyqEC1fXcgiFmJvq/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/867", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-02-25 05:08:44", "closed": "2020-02-29 21:07:03", "commits": {"5eec8f754da9c18258023922998859a172a69272": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "5eec8f754da9c18258023922998859a172a69272", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["49a82c83887839d126d195c3d34fc6801f3cbe32"], "nameRev": "5eec8f754da9c18258023922998859a172a69272 master~57", "commitMessage": "fix: class resolving issues (#867)\n", "commitDateTime": "2020-02-29 19:24:01", "authoredDateTime": "2020-02-29 19:24:01", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/utils/MethodUtils.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RootNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.RootNode.resolveClass(jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.utils.MethodUtils.processMethodArgsOverloaded(jadx.core.dex.instructions.args.ArgType,jadx.core.dex.info.MethodInfo,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5eec8f754da9c18258023922998859a172a69272"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 1, "lines": 8, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/dex/nodes/utils"], "changesInPackagesSPOON": ["jadx.core.dex.nodes.utils.MethodUtils.processMethodArgsOverloaded(jadx.core.dex.instructions.args.ArgType,jadx.core.dex.info.MethodInfo,java.util.List)", "jadx.core.dex.nodes.RootNode.resolveClass(jadx.core.dex.instructions.args.ArgType)"]}, {"title": "Some long functions  decompile error", "body": "in the com.dothantech.bluetoothprinter,some functions can not decompile. onReceive(),handleMessage()\r\nlink: https://pan.baidu.com/s/1GuMcbsV5ExGQN1gV1G1AiQ \r\ncode\uff1ae210", "url": "https://github.com/skylot/jadx/issues/866", "user": "zgfflc", "labels": ["Core", "bug"], "created": "2020-02-24 13:43:15", "closed": "2020-04-28 15:29:32", "commits": {}, "ttf": 64.00027777777778, "commitsDetails": []}, {"title": "Warning: Can't wrap try/catch for region", "body": "> [core] /* JADX WARNING: Can't wrap try/catch for region: R(5:1|2|3|4|(3:5|6|8)) */ /* JADX WARNING: Failed to process nested try/catch */ /* JADX WARNING: Missing exception handler attribute for start block: B:3:0x0009 */ /* JADX WARNING: Missing exception handler attribute for start block: B:5:0x0010 */ /* renamed from: a */ /* Code decompiled incorrectly, please refer to instructions dump. */\r\n\r\nI know that some functions cannot be decommissioned, but I want to point out the full path of this function before anti-obfuscating.\r\n", "url": "https://github.com/skylot/jadx/issues/863", "user": "zgfflc", "labels": ["Core", "bug"], "created": "2020-02-22 16:11:12", "closed": "2020-02-24 12:56:14", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Kotlin Apps Inline Issue[core]", "body": "![image](https://user-images.githubusercontent.com/35992798/75089264-0caa9400-557d-11ea-95b2-10c0e967a088.png)\r\n\r\nHello there, As you can see in the above image, most of the apps which are written in Kotlin give this issue.\r\n\r\nI'm appreciating your great work!. Thank You.", "url": "https://github.com/skylot/jadx/issues/862", "user": "redmi111", "labels": ["Core", "bug"], "created": "2020-02-22 08:45:32", "closed": "2020-04-28 15:38:02", "commits": {}, "ttf": 66.00027777777778, "commitsDetails": []}, {"title": "[GUI]positioning is incorrect and Ctrl + left mouse button cannot enter the corresponding method", "body": "jadx version\uff1alatest unstable build\uff08v1.1.0-b1243-e444ecb2\uff09\r\napk link\uff1ahttps://drive.google.com/open?id=1VEF1jTDYip5SSjLELFbFX6b7N5bk2pdx\r\n\r\nProblem 1: jadx positioning is incorrect\r\nAfter decompiling the apk, search for `settings_purchaseInTrialDesc_singular`, double-click the first result with the left mouse button, and jadx is not positioned to the correct position. I need to continue searching in this class to find the correct location.\r\n\r\nProblem 2: Ctrl + left mouse button cannot enter the corresponding method\r\nninja.sesame.app.edge.iab.d.b()\r\n![image](https://user-images.githubusercontent.com/42903751/75088544-b728b400-5589-11ea-9984-4f9d9800c499.png)\r\n", "url": "https://github.com/skylot/jadx/issues/861", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2020-02-22 07:46:06", "closed": "2020-02-23 15:52:02", "commits": {"fa0a38d3aafa4097d4a85831e97e78248fc8fb62": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "fa0a38d3aafa4097d4a85831e97e78248fc8fb62", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["b56fd4d29adad5525136ba555a3082aa1aac7128"], "nameRev": "fa0a38d3aafa4097d4a85831e97e78248fc8fb62 master~60", "commitMessage": "fix: don't use OS specific new line chars (#861)\n", "commitDateTime": "2020-02-23 15:37:07", "authoredDateTime": "2020-02-23 15:37:07", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AttrList.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/JadxError.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/LocalVarsDebugInfoAttr.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/PhiListAttr.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/MethodInvokeVisitor.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo/DebugInfoParseVisitor.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/DebugChecks.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/DebugUtils.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/InsnRemover.java", "insertions": 9, "deletions": 5, "lines": 14}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/files/InputFile.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "jadx-gui/src/main/java/jadx/gui/treemodel/JResource.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "jadx-gui/src/main/java/jadx/gui/ui/ImagePanel.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AttrList.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.AttrList.toString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JadxError.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.JadxError.toString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LocalVarsDebugInfoAttr.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.LocalVarsDebugInfoAttr.toString()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "PhiListAttr.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.PhiListAttr.toString()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "InsnNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.InsnNode.appendArgs(java.lang.StringBuilder)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "MethodInvokeVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.MethodInvokeVisitor.searchCastTypes(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IMethodDetails,java.util.List,java.util.List)", "TOT": 13, "UPD": 3, "INS": 5, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "DebugInfoParseVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.debuginfo.DebugInfoParseVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DebugChecks.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.DebugChecks.checkVar(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.RegisterArg)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.core.utils.DebugChecks.checkRegisterArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "DebugUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.DebugUtils.printRegion(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IRegion,boolean)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.DebugUtils.printWithAttributes(jadx.core.codegen.CodeWriter,java.lang.String,java.lang.String,jadx.core.dex.attributes.IAttributeNode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.DebugUtils.printInsns(jadx.core.dex.nodes.MethodNode,jadx.core.codegen.CodeWriter,java.lang.String,jadx.core.dex.nodes.IBlock)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnRemover.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.InsnRemover.removeSsaVar(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.core.utils.InsnRemover.removeAll(jadx.core.dex.nodes.MethodNode,java.util.List,java.util.List)", "TOT": 10, "UPD": 2, "INS": 4, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "InputFile.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.files.InputFile.loadFromJar(java.nio.file.Path)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "JResource.java", "spoonMethods": [{"spoonMethodName": "jadx.gui.treemodel.JResource.loadCurrentSingleRes(jadx.core.xmlgen.ResContainer)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "ImagePanel.java", "spoonMethods": [{"spoonMethodName": "jadx.gui.ui.ImagePanel", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fa0a38d3aafa4097d4a85831e97e78248fc8fb62"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 52, "deletions": 26, "lines": 78, "gitFilesChange": 13}, "spoonStatsSummary": {"TOT": 74, "UPD": 16, "INS": 26, "MOV": 18, "DEL": 14, "spoonFilesChanged": 13, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/attributes/nodes", "jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/utils", "jadx-gui/src/main/java/jadx/gui/ui", "jadx-gui/src/main/java/jadx/gui/treemodel", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo", "jadx-core/src/main/java/jadx/core/utils/files", "jadx-core/src/main/java/jadx/core/dex/attributes"], "changesInPackagesSPOON": ["jadx.core.utils.DebugUtils.printInsns(jadx.core.dex.nodes.MethodNode,jadx.core.codegen.CodeWriter,java.lang.String,jadx.core.dex.nodes.IBlock)", "jadx.core.utils.DebugUtils.printWithAttributes(jadx.core.codegen.CodeWriter,java.lang.String,java.lang.String,jadx.core.dex.attributes.IAttributeNode)", "jadx.gui.ui.ImagePanel", "jadx.core.dex.attributes.nodes.LocalVarsDebugInfoAttr.toString()", "jadx.core.dex.nodes.InsnNode.appendArgs(java.lang.StringBuilder)", "jadx.core.dex.visitors.debuginfo.DebugInfoParseVisitor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.gui.treemodel.JResource.loadCurrentSingleRes(jadx.core.xmlgen.ResContainer)", "jadx.core.dex.attributes.nodes.PhiListAttr.toString()", "jadx.core.utils.DebugUtils.printRegion(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IRegion,boolean)", "jadx.core.utils.files.InputFile.loadFromJar(java.nio.file.Path)", "jadx.core.utils.DebugChecks.checkRegisterArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg)", "jadx.core.dex.attributes.nodes.JadxError.toString()", "jadx.core.utils.DebugChecks.checkVar(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.RegisterArg)", "jadx.core.utils.InsnRemover.removeSsaVar(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.attributes.AttrList.toString()", "jadx.core.utils.InsnRemover.removeAll(jadx.core.dex.nodes.MethodNode,java.util.List,java.util.List)", "jadx.core.dex.visitors.MethodInvokeVisitor.searchCastTypes(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IMethodDetails,java.util.List,java.util.List)"]}, {"title": "[bug]Complied class has many useless variables", "body": "I had a test for this problem by using old version and latest version, the problem stays always.\r\n![image](https://user-images.githubusercontent.com/45255699/74814578-8bf85780-5332-11ea-86f5-0cef09ae70f8.png)\r\n\r\nI send the apk to my colleague, his result is good.\r\n![image](https://user-images.githubusercontent.com/45255699/74814696-d5e13d80-5332-11ea-8550-4881a0286110.png)\r\n\r\nThe follow is my running environment.\r\n![image](https://user-images.githubusercontent.com/45255699/74814796-045f1880-5333-11ea-86f3-9d3b3a927833.png)\r\n\r\njava version \"1.8.0_201\"\r\n\r\n\r\nI hope you can solve it, i need Jadx for my work.\r\nThanks.", "url": "https://github.com/skylot/jadx/issues/859", "user": "GvcZhang", "labels": ["Core", "bug"], "created": "2020-02-19 08:17:29", "closed": "2020-02-19 08:54:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[core] NullPointerException in pass: MethodInvokeVisitor", "body": "Hi, error is shown in class ``` com.truecaller.sdk.utils.TcAccountStateProvider ```\r\n```java\r\n    /*  JADX ERROR: NullPointerException in pass: MethodInvokeVisitor\r\n        java.lang.NullPointerException\r\n        */\r\n    public final boolean onCreate() {\r\n        /*\r\n            r3 = this;\r\n            java.lang.StringBuilder r0 = new java.lang.StringBuilder\r\n            java.lang.String r1 = \"content://\"\r\n            r0.<init>(r1)\r\n            android.content.Context r1 = r3.getContext()\r\n            java.lang.Class r2 = r3.getClass()\r\n            java.lang.String r1 = com.truecaller.common.p234c.p236b.C5979b.m18682a(r1, r2)\r\n            r0.append(r1)\r\n            java.lang.String r0 = r0.toString()\r\n            android.net.Uri r0 = android.net.Uri.parse(r0)\r\n            java.lang.String r1 = \"tcAccountState\"\r\n            android.net.Uri r0 = android.net.Uri.withAppendedPath(r0, r1)\r\n            java.lang.String r1 = \"Uri.withAppendedPath(Uri\u2026this.javaClass)}\\\"), PATH)\"\r\n            p311d.p316g.p318b.C7843k.m26261a(r0, r1)\r\n            r3.f49534a = r0\r\n            r0 = 1\r\n            return r0\r\n        */\r\n        throw new UnsupportedOperationException(\"Method not decompiled: com.truecaller.sdk.utils.TcAccountStateProvider.onCreate():boolean\");\r\n    }\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1Rm0nmyWyTbVbOet5Sqk3rUQ3wLNylkIc/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/857", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-02-17 02:51:21", "closed": "2020-02-17 19:50:55", "commits": {"e444ecb2c74869b7dfe23847d32f4c7559098734": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e444ecb2c74869b7dfe23847d32f4c7559098734", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["1336c47d18d2c5f2e176e8c12c650d49afbb6205"], "nameRev": "e444ecb2c74869b7dfe23847d32f4c7559098734 master~63", "commitMessage": "fix: improve wildcard types compare (#857)\n", "commitDateTime": "2020-02-17 19:31:13", "authoredDateTime": "2020-02-17 19:30:29", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeCompare.java", "insertions": 22, "deletions": 1, "lines": 23}, {"filePath": "jadx-core/src/test/java/jadx/core/dex/visitors/typeinference/TypeCompareTest.java", "insertions": 19, "deletions": 3, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TypeCompare.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompare.compareWildcardTypes(jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompare.compareObjects(jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeCompareTest.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompareTest.compareArrays()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompareTest.compareGenerics()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompareTest.compareWildCards()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e444ecb2c74869b7dfe23847d32f4c7559098734"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 1, "lines": 23, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/typeinference"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.typeinference.TypeCompare.compareWildcardTypes(jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeCompare.compareObjects(jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.ArgType)"]}, {"title": "[core]String search exception", "body": "jadx version: the latest unstable build\r\n\r\napk link: https://drive.google.com/open?id=101t04FOij43rKWKiYa4XUITQtfU7rbA1\r\n\r\nSearch `owned`\r\n\r\nin jadx\uff1a\r\n![image](https://user-images.githubusercontent.com/42903751/74600270-daef8400-50c9-11ea-9ac4-22d2cb7840be.png)\r\n\r\nin jeb\uff1a\r\n![image](https://user-images.githubusercontent.com/42903751/74600279-f8245280-50c9-11ea-98aa-029affd5964c.png)\r\n\r\nObviously, `Owned` and `Unowned` were not searched by jadx", "url": "https://github.com/skylot/jadx/issues/853", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2020-02-16 06:40:42", "closed": "2020-02-17 10:24:04", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[core]Decompilation error\uff1f", "body": "the lastest unstable jadx\r\napk\u94fe\u63a5\uff1ahttps://drive.google.com/open?id=1MX9UCAAoro9pYFYLsEANtnT1rhWk2jgQ\r\n\r\nclass name\uff1acom.adobe.libs.services.utils.SVUtils\r\nmethod name\uff1apublic static String getServiceType(SVConstants.SERVICES_VARIANTS serviceVariant)\r\n\r\nLcom/adobe/libs/services/utils/SVUtils;->getServiceType(Lcom/adobe/libs/services/utils/SVConstants$SERVICES_VARIANTS;)Ljava/lang/String;\r\n\r\nin jadx\uff1a\r\n![jadx](https://user-images.githubusercontent.com/42903751/74235580-520fcb80-4d0a-11ea-9ac4-176e4b65630c.png)\r\n\r\nin jeb\uff1a\r\n![jeb](https://user-images.githubusercontent.com/42903751/74235583-54722580-4d0a-11ea-9257-9a0b3910baa3.png)\r\n", "url": "https://github.com/skylot/jadx/issues/850", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2020-02-11 12:10:36", "closed": "2020-02-12 08:11:10", "commits": {"fcb70e69c1e2158a253d130fb16b02b313c5fc8d": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fcb70e69c1e2158a253d130fb16b02b313c5fc8d", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["4859629850c8aeefa7675e2376087902084ad5ed"], "nameRev": "fcb70e69c1e2158a253d130fb16b02b313c5fc8d master~70", "commitMessage": "fix: don't print commented case value if it is an instruction (#850)\n", "commitDateTime": "2020-02-11 22:08:14", "authoredDateTime": "2020-02-11 18:40:25", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/RegionGen.java", "insertions": 6, "deletions": 3, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegionGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.RegionGen.addCaseKey(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnArg,java.lang.Object)", "TOT": 11, "UPD": 1, "INS": 3, "MOV": 5, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fcb70e69c1e2158a253d130fb16b02b313c5fc8d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 3, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 1, "INS": 3, "MOV": 5, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/codegen"], "changesInPackagesSPOON": ["jadx.core.codegen.RegionGen.addCaseKey(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnArg,java.lang.Object)"]}, {"title": "smali code does not include inner classes of inner classes", "body": "the lastest unstable jadx(v1.1.0-b1234-c24a3edb)\r\napk\u94fe\u63a5\uff1ahttps://drive.google.com/open?id=1Ij0MNPby7Jnd1vnvvjvWXE1MRmttdaXm\r\n\r\nclass name\uff1a`flutter.rhes.top.flutterpluginrdsdk9.SdkHandler`\r\nSearch for `success` in java\r\n![image](https://user-images.githubusercontent.com/42903751/74152000-570c4680-4c48-11ea-8330-ecc185a4287a.png)\r\n\r\n\r\nSearch for `success` in smali\r\n![image](https://user-images.githubusercontent.com/42903751/74151701-b584f500-4c47-11ea-8320-d3e9335dea09.png)\r\n\r\n\r\n\r\n", "url": "https://github.com/skylot/jadx/issues/848", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2020-02-10 13:01:09", "closed": "2020-02-10 19:00:33", "commits": {"bd0d248fd01d792076a8767788a3bf9aa09b5aa1": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "4859629850c8aeefa7675e2376087902084ad5ed": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "bd0d248fd01d792076a8767788a3bf9aa09b5aa1", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["c24a3edb4489d008cd771c0f851fdc209b945f21"], "nameRev": "bd0d248fd01d792076a8767788a3bf9aa09b5aa1 master~72", "commitMessage": "fix: additionally show smali code of all inner classes (recursively) (PR #849, #848)\n\n", "commitDateTime": "2020-02-10 22:00:32", "authoredDateTime": "2020-02-10 20:00:32", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java", "insertions": 16, "deletions": 1, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClassNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.ClassNode.getInnerClassesRecursive(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.getSmali()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4859629850c8aeefa7675e2376087902084ad5ed", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["bd0d248fd01d792076a8767788a3bf9aa09b5aa1"], "nameRev": "4859629850c8aeefa7675e2376087902084ad5ed master~71", "commitMessage": "fix: record inlined classes and generate Smali code for them (PR #851, #848)\n\n* fix: additionally show smali code of all inlined classes (recursively)\r\n* variable name corrected\r\n", "commitDateTime": "2020-02-11 22:06:07", "authoredDateTime": "2020-02-11 20:06:07", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java", "insertions": 26, "deletions": 10, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.makeConstructor(jadx.core.dex.instructions.mods.ConstructorInsn,jadx.core.codegen.CodeWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.ClassNode.getInnerClassesRecursive(java.util.Collection)", "TOT": 14, "UPD": 8, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.getSmali()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.addInlinedClass(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.getInnerAndInlinedClassesRecursive(java.util.Set)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[core] Small app is decompiled within long time", "body": "APK: https://drive.google.com/file/d/1MC4DiEojEOLGqKKzt3mspD8jMYQtrBe3/view?usp=sharing\r\n\r\njstack shows the following output\r\n```\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat java.util.BitSet.and(java.base@13.0.1/BitSet.java:921)\r\n\tat jadx.core.utils.BlockUtils.calcPartialPostDominance(BlockUtils.java:713)\r\n\tat jadx.core.utils.BlockUtils.calcPartialImmediatePostDominator(BlockUtils.java:750)\r\n\tat jadx.core.dex.visitors.regions.RegionMaker.calcPostDomOut(RegionMaker.java:869)\r\n\tat jadx.core.dex.visitors.regions.RegionMaker.processSwitch(RegionMaker.java:761)\r\n\tat jadx.core.dex.visitors.regions.RegionMaker.traverse(RegionMaker.java:130)\r\n\tat jadx.core.dex.visitors.regions.RegionMaker.makeRegion(RegionMaker.java:88)\r\n\t//...\r\n```\r\n\r\nMaybe there is an error preventing it from being decompiled much faster?", "url": "https://github.com/skylot/jadx/issues/846", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-02-04 20:30:17", "closed": "2020-02-16 16:35:18", "commits": {"1336c47d18d2c5f2e176e8c12c650d49afbb6205": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "1336c47d18d2c5f2e176e8c12c650d49afbb6205", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["519a74e8d27ae8e738a9f5b7fb940f91a91d3f9f"], "nameRev": "1336c47d18d2c5f2e176e8c12c650d49afbb6205 master~64", "commitMessage": "fix: speed up switch processing by skip not relevant exits (#846)\n", "commitDateTime": "2020-02-16 15:50:02", "authoredDateTime": "2020-02-16 15:50:02", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java", "insertions": 6, "deletions": 4, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegionMaker.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMaker.calcPostDomOut(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,java.util.List)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1336c47d18d2c5f2e176e8c12c650d49afbb6205"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 4, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/regions"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.regions.RegionMaker.calcPostDomOut(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,java.util.List)"]}, {"title": "[core] Code restructure failed for a small method", "body": "The failing code with a missing assignment in class ``` com.antivirus.o.aaf ```\r\n```java\r\n    /* JADX WARNING: Code restructure failed: missing block: B:2:0x0006, code lost:\r\n        r0 = r1.f3523c;\r\n     */\r\n    /* renamed from: h */\r\n    public boolean mo5178h() {\r\n        com.antivirus.p001o.aae aae;\r\n        return super.mo5178h() || (aae != null && aae.mo5178h());\r\n    }\r\n```\r\nits smali\r\n```smali\r\n.method public h()Z\r\n    .registers 2\r\n\r\n    .line 172\r\n    invoke-super {p0}, Lcom/antivirus/o/aac;->h()Z\r\n\r\n    move-result v0\r\n\r\n    if-nez v0, :cond_13\r\n\r\n    iget-object v0, p0, Lcom/antivirus/o/aaf;->c:Lcom/antivirus/o/aae;\r\n\r\n    if-eqz v0, :cond_11\r\n\r\n    invoke-virtual {v0}, Lcom/antivirus/o/aae;->h()Z\r\n\r\n    move-result v0\r\n\r\n    if-eqz v0, :cond_11\r\n\r\n    goto :goto_13\r\n\r\n    :cond_11\r\n    const/4 v0, 0x0\r\n\r\n    goto :goto_14\r\n\r\n    :cond_13\r\n    :goto_13\r\n    const/4 v0, 0x1\r\n\r\n    :goto_14\r\n    return v0\r\n.end method\r\n```\r\n\r\nHope it can help to find a root issue much faster\r\n\r\nAPK: https://drive.google.com/file/d/159bPvATZpnVkOKOm0AiK9lHy1rFVdI1s/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/845", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-02-04 19:47:15", "closed": "2020-02-09 20:11:41", "commits": {"d0f197ea3d495ce3262b524b2ef90f24810fcae0": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "d0f197ea3d495ce3262b524b2ef90f24810fcae0", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["5502d93cd57075c2fd810d38d80d040c39c674ee"], "nameRev": "d0f197ea3d495ce3262b524b2ef90f24810fcae0 master~74", "commitMessage": "fix: shrink code if region maker add FORCE_ASSIGN_INLINE to insn (#845)\n", "commitDateTime": "2020-02-09 14:36:59", "authoredDateTime": "2020-02-09 12:22:16", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMakerVisitor.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/{TestConditions19.java => TestInnerAssign.java}", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestInnerAssign2.java", "insertions": 47, "deletions": 0, "lines": 47}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegionMakerVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMakerVisitor.processForceInlineInsns(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMakerVisitor.postProcessRegions(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInnerAssign.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestConditions19", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.conditions.TestConditions19.test()", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.conditions.TestConditions19.TestCls.runTest(java.lang.String)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.conditions.TestConditions19.TestCls.check()", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.conditions.TestConditions19.TestCls.test(java.lang.String)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInnerAssign2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestInnerAssign2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d0f197ea3d495ce3262b524b2ef90f24810fcae0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 0, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/regions"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.regions.RegionMakerVisitor.postProcessRegions(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.regions.RegionMakerVisitor.processForceInlineInsns(jadx.core.dex.nodes.MethodNode)"]}, {"title": "[core] XML attributes contain unprintable bytes", "body": "APK: https://drive.google.com/file/d/1msaMxk32XHruCtEaQDJNk0IGnb7oOWBo/view?usp=sharing\r\n\r\nOpen ``` AndroidManifest.xml ``` and check attributes e.g. \r\n```xml\r\n    <application android:theme=\"@style/\u0001\" android:label=\"@string/\u0001\" android:icon=\"@mipmap/i_launcher_app\" android:name=\"com.drweb.p000s.App\" android:persistent=\"true\" android:allowBackup=\"false\" android:hardwareAccelerated=\"true\" android:supportsRtl=\"true\" android:roundIcon=\"@mipmap/i_launcher_app_round\" android:appCategory=\"7\" android:appComponentFactory=\"androidx.core.app.CoreComponentFactory\">\r\n```", "url": "https://github.com/skylot/jadx/issues/844", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-02-04 00:32:06", "closed": "2020-04-21 19:34:10", "commits": {"731a40c951aa78e1f4369f7342c22c6c2de7752e": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "315c07d4f68c33f1372d2cb8419cb8879f313794": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 77.00027777777778, "commitsDetails": [{"commitHash": "731a40c951aa78e1f4369f7342c22c6c2de7752e", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "315c07d4f68c33f1372d2cb8419cb8879f313794", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["47dadf0a436f4e8f1cf47152bd63e4689503dd17"], "nameRev": "315c07d4f68c33f1372d2cb8419cb8879f313794 master~42", "commitMessage": "feat(res): rename resources keys if contains unprintable chars or duplicates (#844) (PR #909)\n\n", "commitDateTime": "2020-04-21 22:33:35", "authoredDateTime": "2020-04-21 22:33:35", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/ResTableParser.java", "insertions": 28, "deletions": 0, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResTableParser.java", "spoonMethods": [{"spoonMethodName": "jadx.core.xmlgen.ResTableParser.deobfKeyStrings(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.xmlgen.ResTableParser.makeNewKeyName(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.xmlgen.ResTableParser.parsePackage()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[core] \"IF instruction can be used only in fallback mode\" error", "body": "Hi, class ``` com.uc.base.util.file.c ```\r\n\r\nDecompiled code\r\n```java\r\n\r\n    /* JADX WARNING: type inference failed for: r0v4, types: [java.util.HashMap] */\r\n    /* JADX WARNING: type inference failed for: r1v11, types: [java.util.HashMap, java.lang.Object] */\r\n    /* JADX WARNING: type inference failed for: r0v17 */\r\n    /*  JADX ERROR: IF instruction can be used only in fallback mode\r\n        jadx.core.utils.exceptions.CodegenException: IF instruction can be used only in fallback mode\r\n        \tat jadx.core.codegen.InsnGen.fallbackOnlyInsn(InsnGen.java:581)\r\n        \tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:487)\r\n        \tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)\r\n        \tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)\r\n        \tat jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:110)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:56)\r\n        \tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:93)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:59)\r\n        \tat jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:99)\r\n        \tat jadx.core.codegen.RegionGen.makeIf(RegionGen.java:157)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:63)\r\n        \tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:93)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:59)\r\n        \tat jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:99)\r\n        \tat jadx.core.codegen.RegionGen.makeIf(RegionGen.java:143)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:63)\r\n        \tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:93)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:59)\r\n        \tat jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:99)\r\n        \tat jadx.core.codegen.RegionGen.makeLoop(RegionGen.java:233)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:67)\r\n        \tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:93)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:59)\r\n        \tat jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:99)\r\n        \tat jadx.core.codegen.RegionGen.makeIf(RegionGen.java:143)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:63)\r\n        \tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:93)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:59)\r\n        \tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:93)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:59)\r\n        \tat jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)\r\n        \tat jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)\r\n        \tat jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:322)\r\n        \tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:275)\r\n        \tat jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$3(ClassGen.java:244)\r\n        \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n        \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1507)\r\n        \tat java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)\r\n        \tat java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)\r\n        \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)\r\n        \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\r\n        \tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n        \tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n        \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n        \tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)\r\n        \tat jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:240)\r\n        \tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:231)\r\n        \tat jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:115)\r\n        \tat jadx.core.codegen.ClassGen.makeClass(ClassGen.java:81)\r\n        \tat jadx.core.codegen.CodeGen.wrapCodeGen(CodeGen.java:45)\r\n        \tat jadx.core.codegen.CodeGen.generateJavaCode(CodeGen.java:34)\r\n        \tat jadx.core.codegen.CodeGen.generate(CodeGen.java:22)\r\n        \tat jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n        \tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:288)\r\n        \tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:267)\r\n        */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:50:0x0057, code lost:\r\n        r0 = r0;\r\n     */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:52:0x0057, code lost:\r\n        r0 = r0;\r\n     */\r\n    /* JADX WARNING: Multi-variable type inference failed */\r\n    /* JADX WARNING: Unknown variable types count: 1 */\r\n    private void aE(java.lang.String r7, boolean r8) throws java.io.IOException {\r\n        /*\r\n            r6 = this;\r\n            java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.String>> r0 = r6.Ig\r\n            r0.clear()\r\n            r0 = 0\r\n            if (r8 == 0) goto L_0x0022\r\n            android.content.Context r8 = com.uc.p156a.p157a.p158a.C2723a.PP     // Catch:{ all -> 0x001d }\r\n            android.content.res.AssetManager r8 = r8.getAssets()     // Catch:{ all -> 0x001d }\r\n            java.io.InputStream r7 = r8.open(r7)     // Catch:{ all -> 0x001d }\r\n            java.util.List r8 = com.uc.p156a.p157a.p164g.C2767b.m4810g(r7)     // Catch:{ all -> 0x001a }\r\n            com.uc.p156a.p157a.p164g.C2767b.m4805b(r7)\r\n            goto L_0x002b\r\n        L_0x001a:\r\n            r8 = move-exception\r\n            r0 = r7\r\n            goto L_0x001e\r\n        L_0x001d:\r\n            r8 = move-exception\r\n        L_0x001e:\r\n            com.uc.p156a.p157a.p164g.C2767b.m4805b(r0)\r\n            throw r8\r\n        L_0x0022:\r\n            java.io.File r8 = new java.io.File\r\n            r8.<init>(r7)\r\n            java.util.List r8 = com.uc.p156a.p157a.p164g.C2766a.m4798m(r8)\r\n        L_0x002b:\r\n            if (r8 == 0) goto L_0x00e9\r\n            int r7 = r8.size()\r\n            if (r7 <= 0) goto L_0x00e9\r\n            r7 = 0\r\n            java.lang.Object r1 = r8.get(r7)\r\n            java.lang.String r1 = (java.lang.String) r1\r\n            r2 = 1\r\n            if (r1 == 0) goto L_0x0053\r\n            int r3 = r1.length()\r\n            if (r3 <= 0) goto L_0x0053\r\n            r3 = 65279(0xfeff, float:9.1475E-41)\r\n            char r4 = r1.charAt(r7)\r\n            if (r3 != r4) goto L_0x0053\r\n            java.lang.String r1 = r1.substring(r2)\r\n            r8.set(r7, r1)\r\n        L_0x0053:\r\n            java.util.Iterator r8 = r8.iterator()\r\n        L_0x0057:\r\n            boolean r1 = r8.hasNext()\r\n            if (r1 == 0) goto L_0x00e9\r\n            java.lang.Object r1 = r8.next()\r\n            java.lang.String r1 = (java.lang.String) r1\r\n            java.lang.String r1 = r1.trim()\r\n            boolean r3 = com.uc.p156a.p157a.p170l.C2785a.cs(r1)\r\n            if (r3 != 0) goto L_0x0057\r\n            int r3 = r1.length()\r\n            r4 = 2\r\n            if (r3 < r4) goto L_0x0057\r\n            char r3 = r1.charAt(r7)\r\n            r4 = 91\r\n            if (r3 != r4) goto L_0x00ad\r\n            int r3 = r1.length()\r\n            int r3 = r3 - r2\r\n            char r3 = r1.charAt(r3)\r\n            r4 = 93\r\n            if (r3 != r4) goto L_0x00ad\r\n            java.lang.String r0 = \"[\"\r\n            java.lang.String r3 = \"\"\r\n            java.lang.String r0 = r1.replace(r0, r3)\r\n            java.lang.String r0 = r0.trim()\r\n            java.lang.String r1 = \"]\"\r\n            java.lang.String r3 = \"\"\r\n            java.lang.String r0 = r0.replace(r1, r3)\r\n            java.lang.String r0 = r0.trim()\r\n            java.util.HashMap r1 = new java.util.HashMap\r\n            r1.<init>()\r\n            java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.String>> r3 = r6.Ig\r\n            r3.put(r0, r1)\r\n            r0 = r1\r\n            goto L_0x0057\r\n        L_0x00ad:\r\n            r3 = 61\r\n            int r3 = r1.indexOf(r3)\r\n            if (r3 <= 0) goto L_0x0057\r\n            if (r0 != 0) goto L_0x00c3\r\n            java.util.HashMap r0 = new java.util.HashMap\r\n            r0.<init>()\r\n            java.util.HashMap<java.lang.String, java.util.HashMap<java.lang.String, java.lang.String>> r4 = r6.Ig\r\n            java.lang.String r5 = \"Default\"\r\n            r4.put(r5, r0)\r\n        L_0x00c3:\r\n            java.lang.String r4 = r1.substring(r7, r3)\r\n            if (r4 == 0) goto L_0x00ce\r\n            java.lang.String r4 = r4.trim()\r\n            goto L_0x00d0\r\n        L_0x00ce:\r\n            java.lang.String r4 = \"\"\r\n        L_0x00d0:\r\n            int r3 = r3 + 1\r\n            java.lang.String r1 = r1.substring(r3)\r\n            if (r1 == 0) goto L_0x00e4\r\n            java.lang.String r1 = r1.trim()\r\n            java.lang.String r3 = \"\\\"\"\r\n            java.lang.String r5 = \"\"\r\n            java.lang.String r1 = r1.replace(r3, r5)\r\n        L_0x00e4:\r\n            r0.put(r4, r1)\r\n            goto L_0x0057\r\n        L_0x00e9:\r\n            return\r\n        */\r\n        throw new UnsupportedOperationException(\"Method not decompiled: com.uc.base.util.file.C3892c.aE(java.lang.String, boolean):void\");\r\n    }\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1ALQhK675Y2GTFK-aExkzD_V8wAApSBaH/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/843", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-02-02 19:44:58", "closed": "2020-02-04 19:19:12", "commits": {"5502d93cd57075c2fd810d38d80d040c39c674ee": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "5502d93cd57075c2fd810d38d80d040c39c674ee", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["073fd76aa2c9015e02809aa549faa661d2ad1491"], "nameRev": "5502d93cd57075c2fd810d38d80d040c39c674ee master~75", "commitMessage": "fix: additional checks before insert move to help type inference (#843)\n", "commitDateTime": "2020-02-04 18:45:27", "authoredDateTime": "2020-02-04 18:45:27", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo/DebugInfoApplyVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java", "insertions": 47, "deletions": 28, "lines": 75}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MethodNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.MethodNode.addWarningComment(java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.addWarningComment(java.lang.String,java.lang.Throwable)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.parseSignature()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DebugInfoApplyVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.debuginfo.DebugInfoApplyVisitor.checkTypes(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeInferenceVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.insertMoveForPhi(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.PhiInsn,jadx.core.dex.instructions.args.SSAVar)", "TOT": 19, "UPD": 1, "INS": 0, "MOV": 17, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.checkBlockForInsnInsert(jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryInsertAdditionalInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.insertMoveForPhi(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.PhiInsn,jadx.core.dex.instructions.args.SSAVar,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5502d93cd57075c2fd810d38d80d040c39c674ee"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 52, "deletions": 33, "lines": 85, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 37, "UPD": 7, "INS": 10, "MOV": 18, "DEL": 2, "spoonFilesChanged": 3, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference", "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo"], "changesInPackagesSPOON": ["jadx.core.dex.nodes.MethodNode.addWarningComment(java.lang.String,java.lang.Throwable)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.insertMoveForPhi(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.PhiInsn,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.nodes.MethodNode.addWarningComment(java.lang.String)", "jadx.core.dex.visitors.debuginfo.DebugInfoApplyVisitor.checkTypes(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.nodes.MethodNode.parseSignature()", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.checkBlockForInsnInsert(jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.insertMoveForPhi(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.PhiInsn,jadx.core.dex.instructions.args.SSAVar,boolean)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryInsertAdditionalInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)"]}, {"title": "[core] Decompilation never finishes for Tiktok app", "body": "Hi, I'm trying to decompile Tiktok app (https://drive.google.com/file/d/1lfQvIqsfxXq8Uru6_voDDn50dkx_nBh3/view?usp=sharing) with the following settings\r\n![image](https://user-images.githubusercontent.com/15173437/73224393-65536080-417a-11ea-850f-ee1d2ecc6f0b.png)\r\n\r\nThe only thing I see is repeating outputs like\r\n```\r\nINFO  - JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r5v116, resolved type: java.util.List} in com.ss.android.ugc.aweme.global.config.settings.pojo.IESSettings.ProtoAdapter_IESSettings.decode(com.squareup.wire.ProtoReader, com.ss.android.ugc.aweme.global.config.settings.pojo.IESSettings):com.ss.android.ugc.aweme.global.config.settings.pojo.IESSettings\r\n```\r\n\r\nDecompilation stucks at 99%, I believe there is only one class left which is never finished because of an endless loop", "url": "https://github.com/skylot/jadx/issues/840", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-01-28 00:03:06", "closed": "2020-01-28 21:04:31", "commits": {"1ce8fa8bdd4f3cf14206d7f5675b6c7e07ef7e08": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1ce8fa8bdd4f3cf14206d7f5675b6c7e07ef7e08", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["1bb90233b922e637d7ee52255085c525e72e971e"], "nameRev": "1ce8fa8bdd4f3cf14206d7f5675b6c7e07ef7e08 master~78", "commitMessage": "fix: don't apply types if search failed (#840)\n", "commitDateTime": "2020-01-28 20:07:58", "authoredDateTime": "2020-01-28 20:07:58", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeSearch.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TypeSearch.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.run()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1ce8fa8bdd4f3cf14206d7f5675b6c7e07ef7e08"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 3, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/typeinference"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.typeinference.TypeSearch.run()"]}, {"title": "[core] Cannot open .jar file", "body": "OS: Debian 10 buster\r\nKernel: x86_64 Linux 4.19.0\r\n\r\n```bash\r\ntis@theinterestingsoul-pc:~/\u6587\u6863$ jadx iapp-jar\u5305.jar\r\nINFO  - loading ...\r\nERROR - jadx error: Error load file: iapp-jar\u5305.jar\r\njadx.core.utils.exceptions.JadxRuntimeException: Error load file: iapp-jar\u5305.jar\r\n\tat jadx.api.JadxDecompiler.loadFiles(JadxDecompiler.java:121)\r\n\tat jadx.api.JadxDecompiler.load(JadxDecompiler.java:88)\r\n\tat jadx.cli.JadxCLI.processAndSave(JadxCLI.java:34)\r\n\tat jadx.cli.JadxCLI.main(JadxCLI.java:19)\r\nCaused by: java.util.zip.ZipException: zip END header not found\r\n\tat java.base/java.util.zip.ZipFile$Source.zerror(ZipFile.java:1535)\r\n\tat java.base/java.util.zip.ZipFile$Source.findEND(ZipFile.java:1436)\r\n\tat java.base/java.util.zip.ZipFile$Source.initCEN(ZipFile.java:1443)\r\n\tat java.base/java.util.zip.ZipFile$Source.<init>(ZipFile.java:1274)\r\n\tat java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1237)\r\n\tat java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)\r\n\tat java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)\r\n\tat java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)\r\n\tat java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)\r\n\tat java.base/java.util.zip.ZipFile.<init>(ZipFile.java:191)\r\n\tat jadx.core.utils.files.InputFile.loadFromZip(InputFile.java:99)\r\n\tat jadx.core.utils.files.InputFile.searchDexFiles(InputFile.java:76)\r\n\tat jadx.core.utils.files.InputFile.addFilesFrom(InputFile.java:40)\r\n\tat jadx.api.JadxDecompiler.loadFiles(JadxDecompiler.java:119)\r\n\t... 3 common frames omitted\r\n```\r\n\r\n[File.zip](https://github.com/skylot/jadx/files/4113379/iapp-jar.zip)", "url": "https://github.com/skylot/jadx/issues/838", "user": "TheInterestingSoul", "labels": ["Core", "bug"], "created": "2020-01-26 11:31:28", "closed": "2020-01-27 03:50:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[core] Casts are missing for varargs elements", "body": "Hi, in class ``` com.asus.filemanager.activity.cu ```\r\n```java\r\nclass cu extends android.os.AsyncTask<java.lang.Object, java.lang.Object, java.lang.Void> {\r\n```\r\n```java\r\n    public java.lang.Void doInBackground(java.lang.Object... objArr) {\r\n        int intValue = objArr[0].intValue(); // <<<\r\n        android.app.Activity activity = objArr[1]; // <<<\r\n        publishProgress(new java.lang.Object[]{java.lang.Integer.valueOf(intValue), activity, com.asus.filemanager.activity.HomePageFragment.m1988b(intValue, activity)});\r\n        return null;\r\n    }\r\n```\r\nThey should be explicitly casted to assignable types\r\n\r\nAPK: https://drive.google.com/file/d/1qBUGmvuXQdavGEJe78mAj3EtNWhTOvmP/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/837", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-01-24 19:13:44", "closed": "2020-02-16 15:04:53", "commits": {"1bb90233b922e637d7ee52255085c525e72e971e": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "519a74e8d27ae8e738a9f5b7fb940f91a91d3f9f": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "1bb90233b922e637d7ee52255085c525e72e971e", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["49ce92f540ac36ac81728a86171a5385139e38fe"], "nameRev": "1bb90233b922e637d7ee52255085c525e72e971e master~79", "commitMessage": "test: NYI tests for #836 and #837\n", "commitDateTime": "2020-01-27 19:23:35", "authoredDateTime": "2020-01-27 19:23:35", "commitGitStats": [{"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestTypeResolver11.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestTypeResolver12.java", "insertions": 43, "deletions": 0, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TestTypeResolver11.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver11", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTypeResolver12.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver12", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "519a74e8d27ae8e738a9f5b7fb940f91a91d3f9f", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["dea7714ef3207b0f7e0e434d82998dbf20ae7e18"], "nameRev": "519a74e8d27ae8e738a9f5b7fb940f91a91d3f9f master~65", "commitMessage": "fix: improve type inference for arrays (#837)\n", "commitDateTime": "2020-02-16 17:12:31", "authoredDateTime": "2020-02-16 14:04:42", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdate.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "jadx-core/src/test/java/jadx/core/dex/visitors/typeinference/TypeCompareTest.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestTypeResolver11.java", "insertions": 21, "deletions": 8, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TypeUpdate.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.arrayPutListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "TypeCompareTest.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompareTest.compareArrays()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTypeResolver11.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver11.TestCls.test(java.lang.Object[])", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver11.test()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver11.testNoDebug()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver11.TestCls.test2(java.lang.String,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver11.TestCls.check()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["519a74e8d27ae8e738a9f5b7fb940f91a91d3f9f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 7, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/typeinference"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.typeinference.TypeUpdate.arrayPutListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)"]}, {"title": "[core] Use of Object type instead of template type", "body": "Hi, I've noticed an issue that prevents method resolution. Class ``` com.samsung.knox.securefolder.util.WeakReferenceHandler ```\r\n```java\r\npublic abstract class WeakReferenceHandler<T> extends android.os.Handler {\r\n    private java.lang.ref.WeakReference<T> mReference;\r\n\r\n    public void handleMessage(android.os.Message message) {\r\n        java.lang.Object obj = this.mReference.get(); // should be \"T t = ...\"\r\n        if (obj != null) {\r\n            handleMessage(obj, message);\r\n        }\r\n    }\r\n\r\n    public abstract void handleMessage(T t, android.os.Message message);\r\n```\r\n\r\nthere are many of them, but it could be a simple case\r\n\r\nAPK: https://drive.google.com/file/d/1eEUDrNOTySdg4YCAFhtrG4514KOibJzE/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/836", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-01-24 18:57:46", "closed": "2020-02-16 15:03:59", "commits": {"1bb90233b922e637d7ee52255085c525e72e971e": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "dea7714ef3207b0f7e0e434d82998dbf20ae7e18": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "b1d5ed0066a7b8a250f806d555d4145580d77dc7": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "1bb90233b922e637d7ee52255085c525e72e971e", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["49ce92f540ac36ac81728a86171a5385139e38fe"], "nameRev": "1bb90233b922e637d7ee52255085c525e72e971e master~79", "commitMessage": "test: NYI tests for #836 and #837\n", "commitDateTime": "2020-01-27 19:23:35", "authoredDateTime": "2020-01-27 19:23:35", "commitGitStats": [{"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestTypeResolver11.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestTypeResolver12.java", "insertions": 43, "deletions": 0, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TestTypeResolver11.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver11", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTypeResolver12.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver12", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "dea7714ef3207b0f7e0e434d82998dbf20ae7e18", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["74b88b407e8f127080324a1073a101d359b058b2"], "nameRev": "dea7714ef3207b0f7e0e434d82998dbf20ae7e18 master~66", "commitMessage": "feat: add methods information from standard library, improve generics and varargs restore (#836)\n", "commitDateTime": "2020-02-16 17:12:31", "authoredDateTime": "2020-01-29 16:39:38", "commitGitStats": [{"filePath": "jadx-core/clsp-data/android-29-clst.jar", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "jadx-core/src/main/java/jadx/api/JadxArgs.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/api/JavaMethod.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/Jadx.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/ClsSet.java", "insertions": 284, "deletions": 217, "lines": 501}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/ClspClass.java", "insertions": 101, "deletions": 0, "lines": 101}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java", "insertions": 70, "deletions": 23, "lines": 93}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/ClspMethod.java", "insertions": 122, "deletions": 0, "lines": 122}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/NClass.java", "insertions": 0, "deletions": 96, "lines": 96}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/NMethod.java", "insertions": 0, "deletions": 92, "lines": 92}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/SimpleMethodDetails.java", "insertions": 53, "deletions": 0, "lines": 53}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/ClassGen.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 23, "deletions": 85, "lines": 108}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/MethodGen.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AFlag.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AType.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AttributeStorage.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/IAttribute.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/info/InfoStorage.java", "insertions": 22, "deletions": 4, "lines": 26}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/info/MethodInfo.java", "insertions": 59, "deletions": 43, "lines": 102}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/BaseInvokeNode.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/CallMthInterface.java", "insertions": 0, "deletions": 19, "lines": 19}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/InvokeNode.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java", "insertions": 54, "deletions": 16, "lines": 70}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/mods/ConstructorInsn.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/GenericInfo.java", "insertions": 0, "deletions": 46, "lines": 46}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/GenericTypeParameter.java", "insertions": 55, "deletions": 0, "lines": 55}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/IMethodDetails.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 52, "deletions": 25, "lines": 77}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java", "insertions": 34, "deletions": 57, "lines": 91}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/parser/SignatureParser.java", "insertions": 34, "deletions": 21, "lines": 55}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/utils/MethodUtils.java", "insertions": 125, "deletions": 0, "lines": 125}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/utils/TypeUtils.java", "insertions": 142, "deletions": 0, "lines": 142}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/AttachMethodDetails.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlineVisitor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/DeboxingVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/MethodInvokeVisitor.java", "insertions": 372, "deletions": 0, "lines": 372}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockProcessor.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo/DebugInfoApplyVisitor.java", "insertions": 2, "deletions": 10, "lines": 12}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo/LocalVar.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfRegionVisitor.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/ReturnVisitor.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/TernaryMod.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeBoundInvokeAssign.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeCompare.java", "insertions": 31, "deletions": 5, "lines": 36}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeCompareEnum.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java", "insertions": 20, "deletions": 6, "lines": 26}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdate.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/TypeUtils.java", "insertions": 0, "deletions": 119, "lines": 119}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/Utils.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "jadx-core/src/test/java/jadx/core/dex/instructions/args/ArgTypeTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/core/dex/visitors/typeinference/TypeCompareTest.java", "insertions": 38, "deletions": 13, "lines": 51}, {"filePath": "jadx-core/src/test/java/jadx/core/utils/TypeUtilsTest.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "jadx-core/src/test/java/jadx/tests/functional/JadxClasspathTest.java", "insertions": 11, "deletions": 16, "lines": 27}, {"filePath": "jadx-core/src/test/java/jadx/tests/functional/SignatureParserTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestElseIf.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestCastInOverloadedInvoke.java", "insertions": 13, "deletions": 4, "lines": 17}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestCastInOverloadedInvoke3.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestHierarchyOverloadedInvoke.java", "insertions": 100, "deletions": 0, "lines": 100}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestSuperInvokeWithGenerics.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestDeboxing2.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestLoopInTry2.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestStringBuilderElimination2.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/trycatch/TestTryCatchFinally2.java", "insertions": 11, "deletions": 10, "lines": 21}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestGenerics2.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestGenerics4.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestTypeResolver12.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestTypeResolver13.java", "insertions": 41, "deletions": 0, "lines": 41}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "b1d5ed0066a7b8a250f806d555d4145580d77dc7", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["e22474e0a70609d311a0abde4da7048979ef515b"], "nameRev": "b1d5ed0066a7b8a250f806d555d4145580d77dc7 master~27", "commitMessage": "fix: don't modify method argument types in MethodInvokeVisitor (#927 #836)\n", "commitDateTime": "2020-05-09 21:10:37", "authoredDateTime": "2020-05-09 21:10:37", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/utils/TypeUtils.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/MethodInvokeVisitor.java", "insertions": 36, "deletions": 13, "lines": 49}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/methods/MutableMethodDetails.java", "insertions": 83, "deletions": 0, "lines": 83}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MethodNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.MethodNode.initMethodTypes()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TypeUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.utils.TypeUtils.replaceTypeVariablesUsingMap(jadx.core.dex.instructions.args.ArgType,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodInvokeVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.MethodInvokeVisitor.resolveTypeVariablesInMethodArgs(jadx.core.dex.instructions.BaseInvokeNode,jadx.core.dex.nodes.IMethodDetails,java.util.List)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.MethodInvokeVisitor.resolveTypeVars(jadx.core.dex.nodes.IMethodDetails,java.util.Map)", "TOT": 14, "UPD": 3, "INS": 11, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.MethodInvokeVisitor.processOverloaded(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.BaseInvokeNode,jadx.core.dex.nodes.IMethodDetails)", "TOT": 17, "UPD": 5, "INS": 5, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "MutableMethodDetails.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.methods.MutableMethodDetails", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dea7714ef3207b0f7e0e434d82998dbf20ae7e18"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1891, "deletions": 947, "lines": 2838, "gitFilesChange": 57}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/clsp", "jadx-core/src/main/java/jadx/core/dex/instructions", "jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/clsp-data/android-29-clst.jar", "jadx-core/src/main/java/jadx/core/dex/info", "jadx-core/src/main/java/jadx/core/dex/attributes", "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference", "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo", "jadx-core/src/main/java/jadx/core/dex/nodes/utils", "jadx-core/src/main/java/jadx/core/dex/instructions/mods", "jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core", "jadx-core/src/main/java/jadx/core/dex/instructions/args", "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/dex/nodes/parser", "jadx-core/src/main/java/jadx/api"], "changesInPackagesSPOON": []}, {"title": "[core] Incorrectly inlined instructions", "body": "Hi, class ``` com.samsung.android.sdk.SsdkUnsupportedException ```\r\n```java\r\n    /* JADX WARNING: Illegal instructions before constructor call */\r\n    public SsdkUnsupportedException(java.lang.String str, int i) {\r\n        super(message); // \"message\" is missing here\r\n        java.lang.String message = str;\r\n        int errorType = i;\r\n        java.lang.String str2 = message;\r\n        int i2 = errorType;\r\n        this.mErrorType = errorType;\r\n    }\r\n```\r\n\r\nI believe ``` str ``` can be used instead and such assignment is not needed\r\n\r\nAPK: https://drive.google.com/file/d/1sZlVyv7N4NkuhM355NfXAqObSbmBBP8x/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/835", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2020-01-24 01:41:47", "closed": "2020-01-24 18:44:52", "commits": {"49ce92f540ac36ac81728a86171a5385139e38fe": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "49ce92f540ac36ac81728a86171a5385139e38fe", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["2107da2e1a1041a0b508b30fa5e3a41bec22b2de"], "nameRev": "49ce92f540ac36ac81728a86171a5385139e38fe master~80", "commitMessage": "fix: remove move instructions with unused result (#835)\n", "commitDateTime": "2020-01-24 17:37:53", "authoredDateTime": "2020-01-24 17:37:53", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ssa/SSATransform.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestInsnsBeforeSuper2.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "jadx-core/src/test/smali/others/TestInsnsBeforeSuper2.smali", "insertions": 51, "deletions": 0, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ModVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.iterativeRemoveStep(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.isResultArgNotUsed(jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.removeStep(jadx.core.dex.nodes.MethodNode,jadx.core.utils.InsnRemover)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SSATransform.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ssa.SSATransform.markOneArgAsThis(jadx.core.dex.instructions.args.RegisterArg)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInsnsBeforeSuper2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestInsnsBeforeSuper2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["49ce92f540ac36ac81728a86171a5385139e38fe"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 32, "deletions": 0, "lines": 32, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/visitors/ssa"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.ModVisitor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.ModVisitor.isResultArgNotUsed(jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.visitors.ModVisitor.removeStep(jadx.core.dex.nodes.MethodNode,jadx.core.utils.InsnRemover)", "jadx.core.dex.visitors.ModVisitor.iterativeRemoveStep(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.ssa.SSATransform.markOneArgAsThis(jadx.core.dex.instructions.args.RegisterArg)"]}, {"title": "Mismatching Identifier names in exception handling[core]", "body": "\r\n![image](https://user-images.githubusercontent.com/35992798/72608311-5c77b900-3948-11ea-8244-f5f46aba22bf.png)\r\n\r\nAs you can see in the above image decompiled code have a different identifier from the catch clause' parameter. \r\n\r\nJADX is including non-declared variable ( mostly 'e') everywhere.  \r\n\r\nAlso, see this line: <b>long unused11 = AgentCreateListing.d2 = this.date2.getTime();\r\n</b> Why there is long unused11?\r\n\r\nI appreciate your work, mate. Thanks in Advance.", "url": "https://github.com/skylot/jadx/issues/833", "user": "redmi111", "labels": ["Core", "bug"], "created": "2020-01-17 11:21:03", "closed": "2020-04-28 15:40:42", "commits": {}, "ttf": 102.00027777777778, "commitsDetails": []}, {"title": "Issue with BindView annotation and IDs[core]", "body": "**Checks before report**\r\n \r\n  Verified Everything.\r\n\r\n**Describe error**\r\n![image](https://user-images.githubusercontent.com/35992798/72359495-65804480-3714-11ea-82d3-da57ed4ae329.png)\r\nTake a look at the above image. The BindView annotation have resource ID's integer value from R class instead of exact resource id like <b>@BindView(R.id.myId)</b> not like <b>@BindView(2131....)</b>\r\n\r\nIs there any workaround for this? \r\n", "url": "https://github.com/skylot/jadx/issues/831", "user": "redmi111", "labels": ["Core", "bug"], "created": "2020-01-14 15:58:50", "closed": "2020-01-14 20:27:36", "commits": {"2921c668349986ea802bd9e2c1c4a0cdc5b54a25": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "26bad4a1cd797c886661a50f9376b8e03be282e8": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2921c668349986ea802bd9e2c1c4a0cdc5b54a25", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["7bbb083c36273cfef246a1ba5c8ca9c0a4e8bbaa"], "nameRev": "2921c668349986ea802bd9e2c1c4a0cdc5b54a25 master~86", "commitMessage": "fix: replace constants inside annotations (#831)\n", "commitDateTime": "2020-01-14 19:52:03", "authoredDateTime": "2020-01-14 19:21:31", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/ClassGen.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/inner/TestRFieldRestore3.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/inner/TestReplaceConstsInAnnotations.java", "insertions": 37, "deletions": 0, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClassGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.ClassGen", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.ClassGen.isBodyGenStarted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.ClassGen.setBodyGenStarted(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.ClassGen.addClassBody(jadx.core.codegen.CodeWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.makeStaticFieldAccess(jadx.core.codegen.CodeWriter,jadx.core.dex.info.FieldInfo,jadx.core.codegen.ClassGen)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ModVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.visit(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.replaceConstInAnnotations(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.replaceConstsInAnnotationForAttrNode(jadx.core.dex.nodes.ClassNode,jadx.core.dex.attributes.AttrNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestRFieldRestore3.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.inner.TestRFieldRestore3", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestReplaceConstsInAnnotations.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.inner.TestReplaceConstsInAnnotations", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "26bad4a1cd797c886661a50f9376b8e03be282e8", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["fa0a38d3aafa4097d4a85831e97e78248fc8fb62"], "nameRev": "26bad4a1cd797c886661a50f9376b8e03be282e8 master~59", "commitMessage": "fix: replace constants for arrays in annotations (#831)\n", "commitDateTime": "2020-02-29 18:55:30", "authoredDateTime": "2020-02-29 18:53:34", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java", "insertions": 17, "deletions": 5, "lines": 22}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/inner/TestReplaceConstsInAnnotations2.java", "insertions": 44, "deletions": 0, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ModVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.replaceConstsInAnnotationForAttrNode(jadx.core.dex.nodes.ClassNode,jadx.core.dex.attributes.AttrNode)", "TOT": 23, "UPD": 4, "INS": 1, "MOV": 17, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.replaceConstValue(jadx.core.dex.nodes.ClassNode,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestReplaceConstsInAnnotations2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.inner.TestReplaceConstsInAnnotations2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2921c668349986ea802bd9e2c1c4a0cdc5b54a25", "26bad4a1cd797c886661a50f9376b8e03be282e8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 66, "deletions": 6, "lines": 72, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 33, "UPD": 4, "INS": 10, "MOV": 18, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/codegen"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.ModVisitor.replaceConstsInAnnotationForAttrNode(jadx.core.dex.nodes.ClassNode,jadx.core.dex.attributes.AttrNode)", "jadx.core.codegen.ClassGen.isBodyGenStarted()", "jadx.core.dex.visitors.ModVisitor.replaceConstValue(jadx.core.dex.nodes.ClassNode,java.lang.Object)", "jadx.core.codegen.ClassGen.addClassBody(jadx.core.codegen.CodeWriter)", "jadx.core.dex.visitors.ModVisitor.visit(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.visitors.ModVisitor.replaceConstInAnnotations(jadx.core.dex.nodes.ClassNode)", "jadx.core.codegen.InsnGen.makeStaticFieldAccess(jadx.core.codegen.CodeWriter,jadx.core.dex.info.FieldInfo,jadx.core.codegen.ClassGen)", "jadx.core.codegen.ClassGen.setBodyGenStarted(boolean)", "jadx.core.codegen.ClassGen"]}, {"title": "[core] jadx does not show static enum fields", "body": "```\r\npublic enum d implements x.a.c {\r\n    ;\r\n    \r\n    private static x.a.c sB;\r\n}\r\n```\r\n```\r\n.class public final enum Lx/a/d;\r\n.super Ljava/lang/Enum;\r\n.source \"SourceFile\"\r\n\r\n# interfaces\r\n.implements Lx/a/c;\r\n# static fields\r\n.field public static final enum sA:Lx/a/d;\r\n\r\n.field private static sB:Lx/a/c;\r\n```\r\nAs you can see, sA is dropped", "url": "https://github.com/skylot/jadx/issues/830", "user": "addhaloka", "labels": ["Core", "bug"], "created": "2020-01-13 09:36:44", "closed": "2020-01-19 11:25:03", "commits": {"62ca30bbc61d51e062bd90cf74472a7596c4051e": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "62ca30bbc61d51e062bd90cf74472a7596c4051e", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["5e7388f686684efd6514d770df85ba67feda7944"], "nameRev": "62ca30bbc61d51e062bd90cf74472a7596c4051e master~82", "commitMessage": "fix: additional patterns to restore enum classes (#830)\n", "commitDateTime": "2020-01-19 11:12:23", "authoredDateTime": "2020-01-19 11:12:23", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumClassAttr.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java", "insertions": 210, "deletions": 97, "lines": 307}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/SmaliTest.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/utils/assertj/JadxCodeAssertions.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestEnums5.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestEnumsInterface.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestEnumsWithStaticFields.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/smali/enums/TestEnums5.smali", "insertions": 129, "deletions": 0, "lines": 129}, {"filePath": "jadx-core/src/test/smali/enums/TestEnumsWithStaticFields.smali", "insertions": 174, "deletions": 0, "lines": 174}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["62ca30bbc61d51e062bd90cf74472a7596c4051e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 214, "deletions": 101, "lines": 315, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/attributes/nodes", "jadx-core/src/main/java/jadx/core/dex/visitors"]}, {"title": "[core] Removed duplicated region for block:", "body": "It fails to decompile codes at com -> utils -> ResProguard\r\n\r\n[jar file.zip](https://github.com/skylot/jadx/files/4046072/jar.file.zip)\r\n\r\nIt's a .jar file, not apk\r\n\r\n```\r\nINFO : output directory: a\r\nINFO : loading ...\r\nINFO : converting to dex: a.jar ...\r\nWARN : Removed duplicated region for block: B:17:0x0043 A[SYNTHETIC, Splitter:B:17:0x0043] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:20:0x0048 A[SYNTHETIC, Splitter:B:20:0x0048] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:23:0x004d A[SYNTHETIC, Splitter:B:23:0x004d] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:17:0x0043 A[SYNTHETIC, Splitter:B:17:0x0043] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:20:0x0048 A[SYNTHETIC, Splitter:B:20:0x0048] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:23:0x004d A[SYNTHETIC, Splitter:B:23:0x004d] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:128:? A[ADDED_TO_REGION, RETURN, SYNTHETIC] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:30:0x005d  in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:17:0x0043 A[SYNTHETIC, Splitter:B:17:0x0043] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:20:0x0048 A[SYNTHETIC, Splitter:B:20:0x0048] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:23:0x004d A[SYNTHETIC, Splitter:B:23:0x004d] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:30:0x005d  in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:128:? A[ADDED_TO_REGION, RETURN, SYNTHETIC] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:17:0x0043 A[SYNTHETIC, Splitter:B:17:0x0043] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:20:0x0048 A[SYNTHETIC, Splitter:B:20:0x0048] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:23:0x004d A[SYNTHETIC, Splitter:B:23:0x004d] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:128:? A[ADDED_TO_REGION, RETURN, SYNTHETIC] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:30:0x005d  in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:17:0x0043 A[SYNTHETIC, Splitter:B:17:0x0043] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:20:0x0048 A[SYNTHETIC, Splitter:B:20:0x0048] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:23:0x004d A[SYNTHETIC, Splitter:B:23:0x004d] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:30:0x005d  in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:128:? A[ADDED_TO_REGION, RETURN, SYNTHETIC] in method: com.utils.ResProguard.proguard(java.io.File):java.io.File, dex: a.jar\r\nWARN : Removed duplicated region for block: B:17:0x0048 A[SYNTHETIC, Splitter:B:17:0x0048] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:20:0x004d A[SYNTHETIC, Splitter:B:20:0x004d] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:23:0x0052 A[SYNTHETIC, Splitter:B:23:0x0052] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:17:0x0048 A[SYNTHETIC, Splitter:B:17:0x0048] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:20:0x004d A[SYNTHETIC, Splitter:B:20:0x004d] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:23:0x0052 A[SYNTHETIC, Splitter:B:23:0x0052] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:128:? A[ADDED_TO_REGION, RETURN, SYNTHETIC] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:30:0x0062  in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:17:0x0048 A[SYNTHETIC, Splitter:B:17:0x0048] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:20:0x004d A[SYNTHETIC, Splitter:B:20:0x004d] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:23:0x0052 A[SYNTHETIC, Splitter:B:23:0x0052] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:30:0x0062  in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:128:? A[ADDED_TO_REGION, RETURN, SYNTHETIC] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:17:0x0048 A[SYNTHETIC, Splitter:B:17:0x0048] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:20:0x004d A[SYNTHETIC, Splitter:B:20:0x004d] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:23:0x0052 A[SYNTHETIC, Splitter:B:23:0x0052] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:128:? A[ADDED_TO_REGION, RETURN, SYNTHETIC] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:30:0x0062  in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:17:0x0048 A[SYNTHETIC, Splitter:B:17:0x0048] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:20:0x004d A[SYNTHETIC, Splitter:B:20:0x004d] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:23:0x0052 A[SYNTHETIC, Splitter:B:23:0x0052] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:30:0x0062  in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\nWARN : Removed duplicated region for block: B:128:? A[ADDED_TO_REGION, RETURN, SYNTHETIC] in method: com.utils.ResProguard.proguard(java.lang.String, java.lang.String):void, dex: a.jar\r\n```\r\n", "url": "https://github.com/skylot/jadx/issues/828", "user": "ghost", "labels": ["Core", "bug"], "created": "2020-01-10 14:27:59", "closed": "2020-04-28 17:19:40", "commits": {}, "ttf": 109.00027777777778, "commitsDetails": []}, {"title": "[core]     /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v1, resolved type: byte}", "body": "package com.szcx.lib.encrypt.p205a;\r\n\r\nimport com.bumptech.glide.load.Key;\r\nimport java.security.MessageDigest;\r\n\r\n/* renamed from: com.szcx.lib.encrypt.a.b */\r\npublic class MD5Util {\r\n    /* renamed from: a */\r\n    public static String m17863a(String str) {\r\n        try {\r\n            return m17864a(MessageDigest.getInstance(\"MD5\").digest(str.getBytes(Key.STRING_CHARSET_NAME)));\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v1, resolved type: byte} */\r\n    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v4, resolved type: byte} */\r\n    /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r3v5, resolved type: byte} */\r\n    /* JADX WARNING: Multi-variable type inference failed */\r\n    /* renamed from: a */\r\n    /* Code decompiled incorrectly, please refer to instructions dump. */\r\n    private static java.lang.String m17864a(byte[] r5) {\r\n        /*\r\n            java.lang.StringBuilder r0 = new java.lang.StringBuilder\r\n            r0.<init>()\r\n            int r1 = r5.length\r\n            r2 = 0\r\n        L_0x0007:\r\n            if (r2 >= r1) goto L_0x0022\r\n            byte r3 = r5[r2]\r\n            if (r3 >= 0) goto L_0x000f\r\n            int r3 = r3 + 256\r\n        L_0x000f:\r\n            r4 = 16\r\n            if (r3 >= r4) goto L_0x0018\r\n            java.lang.String r4 = \"0\"\r\n            r0.append(r4)\r\n        L_0x0018:\r\n            java.lang.String r3 = java.lang.Integer.toHexString(r3)\r\n            r0.append(r3)\r\n            int r2 = r2 + 1\r\n            goto L_0x0007\r\n        L_0x0022:\r\n            java.lang.String r5 = r0.toString()\r\n            return r5\r\n        */\r\n        throw new UnsupportedOperationException(\"Method not decompiled: com.szcx.lib.encrypt.p205a.MD5Util.m17864a(byte[]):java.lang.String\");\r\n    }\r\n}", "url": "https://github.com/skylot/jadx/issues/827", "user": "jiongjarjar", "labels": ["Core", "bug"], "created": "2020-01-09 17:39:34", "closed": "2020-04-05 19:39:16", "commits": {}, "ttf": 87.00027777777778, "commitsDetails": []}, {"title": "[core] Switch-case constructs with multiple exits may cause decompilation errors", "body": "After messing around with several decompilation failures, I noticed that `processSwitch()` in **RegionMaker.java** may return `null` for switch-case constructs with multiple exits. In such a case, the dominance frontier of the switch-case contains multiple basic-blocks and `outs.cardinality() > 1`. However, the return value of `processSwitch()`, stored in `out`, is only set in the following `if` clause, which might not be triggered.\r\n\r\n```java\r\nif (outs.cardinality() == 1) {\r\n    out = basicBlocks.get(outs.nextSetBit(0));\r\n    stack.addExit(out);\r\n}\r\n```\r\n\r\nWhen this happens `processSwitch()` returns `null` and `makeRegion()` terminates prematurely, resulting in several errors informing of lost code (a lost basic-block results in all basic-blocks it dominates being lost as well). This is common case in big switch-case constructs and, if I understand correctly, this is the root cause of various decompilation regressions reported by users.\r\n\r\nNow the hard part :) Solving this problem, requires `processSwitch()`, `processIf()` etc in **RegionMaker.java** being modified to return `Collection<BlockNode>` instead of a single `BlockNode`. Alternatively, I think the problem can also be solved by using a stack of blocks in addition to the region stack currently used. In any way, I think the overall logic implemented in **RegionMaker.java** needs to be modified a bit.\r\n\r\nI'm also currently trying to minimize my test-case which is kinda large.\r\n\r\n@skylot feel free to share any thoughts. I have created this issue so that we can coordinate towards solving this.", "url": "https://github.com/skylot/jadx/issues/826", "user": "huku-", "labels": ["Core", "bug"], "created": "2020-01-06 00:31:29", "closed": "2020-01-29 19:20:23", "commits": {"f3098741c3fb1f8eda352a4b62ed0d76151b919a": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "2107da2e1a1041a0b508b30fa5e3a41bec22b2de": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "f3098741c3fb1f8eda352a4b62ed0d76151b919a", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["c97e5046867fc36a0887290b1b88150c27090009"], "nameRev": "f3098741c3fb1f8eda352a4b62ed0d76151b919a master~89", "commitMessage": "test: switch with fallthrough cases (#826)\n", "commitDateTime": "2020-01-08 14:26:40", "authoredDateTime": "2020-01-08 14:25:27", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/SwitchNode.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/switches/TestSwitchFallThrough.java", "insertions": 54, "deletions": 0, "lines": 54}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SwitchNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.SwitchNode.toString()", "TOT": 17, "UPD": 4, "INS": 3, "MOV": 5, "DEL": 5}]}, {"spoonFilePath": "TestSwitchFallThrough.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.switches.TestSwitchFallThrough", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2107da2e1a1041a0b508b30fa5e3a41bec22b2de", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["62ca30bbc61d51e062bd90cf74472a7596c4051e"], "nameRev": "2107da2e1a1041a0b508b30fa5e3a41bec22b2de master~81", "commitMessage": "fix: improve 'out' block detection in switch (#826)\n", "commitDateTime": "2020-01-23 18:58:17", "authoredDateTime": "2020-01-21 18:11:34", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/RegionGen.java", "insertions": 25, "deletions": 21, "lines": 46}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/SwitchNode.java", "insertions": 16, "deletions": 6, "lines": 22}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/regions/SwitchRegion.java", "insertions": 7, "deletions": 23, "lines": 30}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/DotGraphVisitor.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java", "insertions": 131, "deletions": 110, "lines": 241}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/BlockUtils.java", "insertions": 122, "deletions": 2, "lines": 124}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/DebugUtils.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/ImmutableList.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/utils/assertj/JadxCodeAssertions.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/switches/TestSwitch2.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/switches/TestSwitchFallThrough.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/switches/TestSwitchReturnFromCase.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/switches/TestSwitchWithFallThroughCase.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegionGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.RegionGen.makeSwitch(jadx.core.dex.regions.SwitchRegion,jadx.core.codegen.CodeWriter)", "TOT": 24, "UPD": 2, "INS": 3, "MOV": 17, "DEL": 2}, {"spoonMethodName": "jadx.core.codegen.RegionGen.addCaseKey(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnArg,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnDecoder.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.InsnDecoder.decodeSwitch(com.android.dx.io.instructions.DecodedInstruction,int,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SwitchNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.SwitchNode.copy()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.instructions.SwitchNode", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.instructions.SwitchNode.isPacked()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.instructions.SwitchNode.toString()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "SwitchRegion.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.regions.SwitchRegion", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.regions.SwitchRegion.getBranches()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.regions.SwitchRegion.setDefaultCase(jadx.core.dex.nodes.IContainer)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.regions.SwitchRegion.getDefaultCase()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.regions.SwitchRegion.getSubBlocks()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.regions.SwitchRegion.toString()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "DotGraphVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.DotGraphVisitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DotGraphVisitor.DumpDotGraph.escape(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DotGraphVisitor.DumpDotGraph.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegionMaker.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMaker.processSwitch(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.SwitchNode,jadx.core.dex.visitors.regions.RegionStack)", "TOT": 209, "UPD": 69, "INS": 13, "MOV": 101, "DEL": 26}, {"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMaker.searchFallThroughCase(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode,java.util.BitSet)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMaker.getOneIntersectionBlock(jadx.core.dex.nodes.BlockNode,java.util.BitSet,java.util.BitSet)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMaker.calcPostDomOut(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,java.util.List)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMaker.removeEmptyCases(jadx.core.dex.instructions.SwitchNode,jadx.core.dex.regions.SwitchRegion,jadx.core.dex.nodes.BlockNode)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BlockUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.BlockUtils.blocksToBitSet(jadx.core.dex.nodes.MethodNode,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.BlockUtils.newBlocksBitSet(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.BlockUtils.copyBlocksBitSet(jadx.core.dex.nodes.MethodNode,java.util.BitSet)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.BlockUtils.bitSetToOneBlock(jadx.core.dex.nodes.MethodNode,java.util.BitSet)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.BlockUtils.calcPostDominance(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.BlockUtils.calcPartialPostDominance(jadx.core.dex.nodes.MethodNode,java.util.Collection,jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.BlockUtils.calcImmediatePostDominator(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.BlockUtils.calcPartialImmediatePostDominator(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,java.util.Collection,jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.BlockUtils.calcImmediatePostDominator(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.BlockUtils.bitSetToBlocks(jadx.core.dex.nodes.MethodNode,java.util.BitSet)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DebugUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.DebugUtils.printMap(java.util.Map,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ImmutableList.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.ImmutableList.containsAll(java.util.Collection)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JadxCodeAssertions.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.api.utils.assertj.JadxCodeAssertions.containsOne(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSwitch2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.switches.TestSwitch2.TestCls.test(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSwitchFallThrough.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.switches.TestSwitchFallThrough.test()", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "jadx.tests.integration.switches.TestSwitchFallThrough.TestCls.test(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSwitchReturnFromCase.java", "spoonMethods": []}, {"spoonFilePath": "TestSwitchWithFallThroughCase.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f3098741c3fb1f8eda352a4b62ed0d76151b919a", "2107da2e1a1041a0b508b30fa5e3a41bec22b2de"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 339, "deletions": 172, "lines": 511, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 319, "UPD": 80, "INS": 65, "MOV": 131, "DEL": 43, "spoonFilesChanged": 10, "spoonMethodsChanged": 34}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/instructions", "jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/dex/regions", "jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/codegen"], "changesInPackagesSPOON": ["jadx.core.dex.instructions.SwitchNode.toString()", "jadx.core.dex.visitors.regions.RegionMaker.calcPostDomOut(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,java.util.List)", "jadx.core.dex.regions.SwitchRegion.getBranches()", "jadx.core.dex.visitors.DotGraphVisitor.DumpDotGraph.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,boolean)", "jadx.core.dex.visitors.DotGraphVisitor", "jadx.core.codegen.RegionGen.addCaseKey(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnArg,java.lang.Object)", "jadx.core.dex.regions.SwitchRegion.toString()", "jadx.core.utils.BlockUtils.bitSetToOneBlock(jadx.core.dex.nodes.MethodNode,java.util.BitSet)", "jadx.core.dex.visitors.regions.RegionMaker.searchFallThroughCase(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode,java.util.BitSet)", "jadx.core.dex.regions.SwitchRegion.setDefaultCase(jadx.core.dex.nodes.IContainer)", "jadx.core.utils.BlockUtils.calcImmediatePostDominator(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.instructions.SwitchNode.isPacked()", "jadx.core.utils.BlockUtils.calcImmediatePostDominator(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,java.util.Map)", "jadx.core.dex.regions.SwitchRegion.getDefaultCase()", "jadx.core.utils.DebugUtils.printMap(java.util.Map,java.lang.String)", "jadx.core.utils.BlockUtils.bitSetToBlocks(jadx.core.dex.nodes.MethodNode,java.util.BitSet)", "jadx.core.dex.visitors.regions.RegionMaker.getOneIntersectionBlock(jadx.core.dex.nodes.BlockNode,java.util.BitSet,java.util.BitSet)", "jadx.core.dex.visitors.regions.RegionMaker.removeEmptyCases(jadx.core.dex.instructions.SwitchNode,jadx.core.dex.regions.SwitchRegion,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.instructions.SwitchNode.copy()", "jadx.core.dex.regions.SwitchRegion", "jadx.core.utils.BlockUtils.newBlocksBitSet(jadx.core.dex.nodes.MethodNode)", "jadx.core.utils.BlockUtils.calcPartialPostDominance(jadx.core.dex.nodes.MethodNode,java.util.Collection,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.regions.SwitchRegion.getSubBlocks()", "jadx.tests.api.utils.assertj.JadxCodeAssertions.containsOne(java.lang.String)", "jadx.core.utils.BlockUtils.copyBlocksBitSet(jadx.core.dex.nodes.MethodNode,java.util.BitSet)", "jadx.core.codegen.RegionGen.makeSwitch(jadx.core.dex.regions.SwitchRegion,jadx.core.codegen.CodeWriter)", "jadx.core.dex.visitors.regions.RegionMaker.processSwitch(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.SwitchNode,jadx.core.dex.visitors.regions.RegionStack)", "jadx.core.dex.instructions.InsnDecoder.decodeSwitch(com.android.dx.io.instructions.DecodedInstruction,int,boolean)", "jadx.core.dex.visitors.DotGraphVisitor.DumpDotGraph.escape(java.lang.Object)", "jadx.core.utils.ImmutableList.containsAll(java.util.Collection)", "jadx.core.utils.BlockUtils.calcPostDominance(jadx.core.dex.nodes.MethodNode)", "jadx.core.utils.BlockUtils.blocksToBitSet(jadx.core.dex.nodes.MethodNode,java.util.List)", "jadx.core.dex.instructions.SwitchNode", "jadx.core.utils.BlockUtils.calcPartialImmediatePostDominator(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,java.util.Collection,jadx.core.dex.nodes.BlockNode)"]}, {"title": "jadx.core.utils.exceptions.DecodeException: java class to dex conversion error", "body": "I am using the latest version of jadx 1.1.0\r\n\r\nINFO  - loading ...\r\nERROR - jadx error: Error load file: C:\\Users\\ankasani\\Downloads\\files1\\workspace\\test-classes\\com\\automation\\AI\\testBase\\BaseTest.class\r\njadx.core.utils.exceptions.JadxRuntimeException: Error load file: C:\\Users\\ankasani\\Downloads\\files1\\workspace\\test-classes\\com\\automation\\AI\\testBase\\BaseTest.class\r\n        at jadx.api.JadxDecompiler.loadFiles(JadxDecompiler.java:121)\r\n        at jadx.api.JadxDecompiler.load(JadxDecompiler.java:88)\r\n        at jadx.cli.JadxCLI.processAndSave(JadxCLI.java:34)\r\n        at jadx.cli.JadxCLI.main(JadxCLI.java:19)\r\nCaused by: jadx.core.utils.exceptions.DecodeException: java class to dex conversion error:\r\n dx exception: Java to dex conversion error, code: 1\r\n        at jadx.core.utils.files.InputFile.loadFromJar(InputFile.java:200)\r\n        at jadx.core.utils.files.InputFile.loadFromClassFile(InputFile.java:217)\r\n        at jadx.core.utils.files.InputFile.searchDexFiles(InputFile.java:65)\r\n        at jadx.core.utils.files.InputFile.addFilesFrom(InputFile.java:40)\r\n        at jadx.api.JadxDecompiler.loadFiles(JadxDecompiler.java:119)\r\n        ... 3 common frames omitted\r\nCaused by: jadx.core.utils.exceptions.JadxException: dx exception: Java to dex conversion error, code: 1\r\n        at jadx.core.utils.files.JavaToDex.convert(JavaToDex.java:63)\r\n        at jadx.core.utils.files.InputFile.loadFromJar(InputFile.java:191)\r\n        ... 7 common frames omitted\r\nCaused by: jadx.core.utils.exceptions.JadxException: Java to dex conversion error, code: 1\r\n        at jadx.core.utils.files.JavaToDex.convert(JavaToDex.java:52)\r\n        ... 8 common frames omitted\r\n\r\nAny idea why it was causing this issue ?", "url": "https://github.com/skylot/jadx/issues/822", "user": "ankasani", "labels": ["Core", "bug"], "created": "2019-12-31 07:03:05", "closed": "2019-12-31 07:50:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[core] Code restructure failure when merging nested \"if\" regions", "body": "Merging nested `if` regions that contain assignment instructions may lead to the following decompilation error:\r\n\r\n```java\r\n/* JADX WARNING: Code restructure failed: missing block: B:2:0x0005, code lost:\r\n    r2 = null;\r\n */\r\n```\r\n\r\nThe following minified smali test-case can be used to trigger the buggy behavior.\r\n\r\n```\r\n.class public LTest;\r\n.super LTestSuper;\r\n.source \"Test.java\"\r\n\r\n.method public AHc()V\r\n    .locals 5\r\n\r\n    const/4 v0, 0\r\n    const/4 v1, 0\r\n    const/4 v4, 0\r\n\r\n    if-eqz v4, :cond_0\r\n\r\n    const/4 v2, 0\r\n\r\n    invoke-virtual {v2}, LTestClass1;->testMethod()LTestClass2;\r\n\r\n    move-result-object v0\r\n\r\n    if-eqz v0, :cond_0\r\n\r\n    if-eq v1, v0, :cond_0\r\n\r\n    iget-object v3, v2, LTestClass1;->testField:LTestClass3;\r\n\r\n    if-eqz v3, :cond_0\r\n\r\n    :cond_0\r\n    return-void\r\n.end method\r\n```\r\n\r\nNotice that the code above is only meant for debugging purposes and is semantically mundane.\r\n\r\nAs it turns out, this code hits a **TODO** in **CodeShrinkVisitor.java** and, more specifically, in method `checkInline()`:\r\n\r\n```java\r\nif (assignInline) {\r\n    // TODO?\r\n    return;\r\n}\r\n```\r\n\r\nMy current solution to this problem is removing the special check for `assignInline`. If the `if` clause above is commented out, everything seems to be working fine. To make sure that this modification generates sane code, I decompiled a widely used Android application using an upstream and a patched version of jadx. The code generated using the two jadx variants was `diff`'ed and the output was examined by hand.\r\n\r\n@skylot, as usual, I'm still in the process of examining this further :)", "url": "https://github.com/skylot/jadx/issues/820", "user": "huku-", "labels": ["Core", "bug"], "created": "2019-12-28 01:16:37", "closed": "2020-02-09 15:00:29", "commits": {"c24a3edb4489d008cd771c0f851fdc209b945f21": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "c24a3edb4489d008cd771c0f851fdc209b945f21", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["d0f197ea3d495ce3262b524b2ef90f24810fcae0"], "nameRev": "c24a3edb4489d008cd771c0f851fdc209b945f21 master~73", "commitMessage": "fix: inline assignment instruction from same block (#820)\n", "commitDateTime": "2020-02-09 14:40:27", "authoredDateTime": "2020-02-09 14:40:27", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/shrink/CodeShrinkVisitor.java", "insertions": 7, "deletions": 14, "lines": 21}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestInnerAssign3.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/smali/conditions/TestInnerAssign3.smali", "insertions": 30, "deletions": 0, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnArg.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.InsnArg.wrapInsnIntoArg(jadx.core.dex.nodes.InsnNode)", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.instructions.args.InsnArg.wrapArg(jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CodeShrinkVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.assignInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.BlockNode)", "TOT": 10, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.utils.InsnList,java.util.List,jadx.core.dex.visitors.shrink.ArgsInfo,jadx.core.dex.instructions.args.RegisterArg)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.inline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInnerAssign3.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestInnerAssign3", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c24a3edb4489d008cd771c0f851fdc209b945f21"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 19, "lines": 38, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 22, "UPD": 1, "INS": 6, "MOV": 10, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/instructions/args", "jadx-core/src/main/java/jadx/core/dex/visitors/shrink"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.utils.InsnList,java.util.List,jadx.core.dex.visitors.shrink.ArgsInfo,jadx.core.dex.instructions.args.RegisterArg)", "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.inline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.instructions.args.InsnArg.wrapInsnIntoArg(jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.instructions.args.InsnArg.wrapArg(jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.assignInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.BlockNode)"]}, {"title": "Deobuscate Error AndroidMAnifest.xml and .xml and Please add feature Migrate to Androidx", "body": "`ERROR: The minSdk version should not be declared in the android manifest file. You can move the version from the manifest to the defaultConfig in the build.gradle file.`\r\n\r\n![androidmanifest](https://user-images.githubusercontent.com/42468310/71496455-b3abd180-2853-11ea-8432-72aae7bd88a9.png)\r\n\r\nif i'm remove `<uses-sdk android:minSdkVersion=\"19\" android:targetSdkVersion=\"28\"/>`\r\ni'm got error `ERROR: Manifest merger failed with multiple errors, see logs`\r\n\r\n`Found item Animation/? more than one time`\r\n![xml](https://user-images.githubusercontent.com/42468310/71496496-e0f87f80-2853-11ea-97d2-1bac72aa1df3.png)\r\n\r\n![xml](https://user-images.githubusercontent.com/42468310/71497256-be686580-2857-11ea-8327-e0f03d8b672e.png)\r\n", "url": "https://github.com/skylot/jadx/issues/819", "user": "klikpaspor", "labels": ["Core", "bug"], "created": "2019-12-27 01:53:10", "closed": "2020-04-28 17:32:40", "commits": {}, "ttf": 123.00027777777778, "commitsDetails": []}, {"title": "[gui] \"--select-class\" jadx-gui option stopped working - regression.", "body": "**Checks before report**\r\n- check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\nNot fixed.\r\n- check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\nNot out-of-memory problem.\r\n- search existing issues by exception message\r\nNo related issues.\r\n\r\n**Describe error**\r\n- provide full name of method or class with error\r\njadx.gui.JadxWrapper.searchJavaClassByClassName()\r\n- provide full java stacktrace\r\nException in thread \"AWT-EventQueue-1\" java.lang.NullPointerException\r\n        at jadx.gui.JadxWrapper.searchJavaClassByClassName(JadxWrapper.java:146)\r\n        at jadx.gui.ui.MainWindow.processCommandLineArgs(MainWindow.java:204)\r\n        at jadx.gui.ui.MainWindow.init(MainWindow.java:195)\r\n        at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)\r\n        at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)\r\n        at java.awt.EventQueue.access$500(EventQueue.java:97)\r\n        at java.awt.EventQueue$3.run(EventQueue.java:709)\r\n        at java.awt.EventQueue$3.run(EventQueue.java:703)\r\n        at java.security.AccessController.doPrivileged(Native Method)\r\n        at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:74)\r\n        at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)\r\n        at org.GNOME.Accessibility.AtkWrapper$6.dispatchEvent(AtkWrapper.java:705)\r\n        at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:205)\r\n        at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\r\n        at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\r\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\r\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\r\n        at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\r\n\r\n  **Note**: no need to copy method fallback code (commented pseudocode)\r\n- attach or provide link to apk file (double check apk version)\r\nNot apk-specific.\r\n  **Note**: GitHub don't allow attach files with `.apk` extension, but you can change extension by adding `.zip` at the end :)\r\n\r\nHello.\r\n\r\nCommit 9c88f70740b7e8b326534afada316720f48a38a8 broked \"--select-class\" command-line option for jadx-gui.\r\njadx-gui fails to open specified class with the stacktrace above, because file is not loaded yet and decompiler.getClasses() returns null, which causes NPE.\r\n\r\nThank you.", "url": "https://github.com/skylot/jadx/issues/815", "user": "S-trace", "labels": ["Core", "bug"], "created": "2019-12-25 17:47:25", "closed": "2019-12-26 17:29:47", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[gui] full text search does not find all occurrences", "body": "Something similar happened before: \r\nhttps://github.com/skylot/jadx/issues/803#issue-540100836\r\nhttps://github.com/skylot/jadx/issues/742#issue-484938135\r\n\r\njadx version: dev(2019.12.23 the lastest commit\uff01) and jadx-1.1.0-b1197-0c55ab90\r\nTested both my compiled jadx and the unstable version of jadx you posted\r\n\r\napk link: https://drive.google.com/open?id=1ZC4soMkpfcFiGwbHb3bHIm0-PjxY6AQO\r\napk version:`3.3.227-10000227`\r\n\r\nclass:`com.adguard.android.n`\r\nfind:`joke_phrase_0`\r\n![image](https://user-images.githubusercontent.com/42903751/71343146-e2971e80-2599-11ea-85be-bc289fbd9103.png)\r\n\r\n\r\nbut in GDA\uff1a\r\n![image](https://user-images.githubusercontent.com/42903751/71343502-0444d580-259b-11ea-97cf-b70754560390.png)\r\nOpen jadx to the same location\r\nclass:`com.adguard.android.ui.DrawerActivity`\r\nfind:`joke_phrase_0`\r\nmethod:`protected void onPostCreate(android.os.Bundle bundle)`\r\n![image](https://user-images.githubusercontent.com/42903751/71343253-31dd4f00-259a-11ea-93df-2f3c7a00f9cf.png)\r\n\r\nThis is the third time I have encountered the same problem in jadx and I don't know what to do.\r\nI sincerely suggest you think about it: `search based on smali`", "url": "https://github.com/skylot/jadx/issues/812", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2019-12-23 07:49:15", "closed": "2019-12-24 09:32:17", "commits": {"af6f8b53911a02f3ad625e2702c478e0763074de": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "af6f8b53911a02f3ad625e2702c478e0763074de", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["3b9b103c3ff591746a815a064ed4955a93e9caab"], "nameRev": "af6f8b53911a02f3ad625e2702c478e0763074de remotes/origin/rename~37", "commitMessage": "fix(gui): resolve exceptions during index (#812)\n", "commitDateTime": "2019-12-23 22:39:06", "authoredDateTime": "2019-12-23 19:12:00", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/api/JavaClass.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-gui/src/main/java/jadx/gui/utils/CodeUsageInfo.java", "insertions": 13, "deletions": 5, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JavaClass.java", "spoonMethods": [{"spoonMethodName": "jadx.api.JavaClass.loadLists()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CodeUsageInfo.java", "spoonMethods": [{"spoonMethodName": "jadx.gui.utils.CodeUsageInfo", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.gui.utils.CodeUsageInfo.processClass(jadx.api.JavaClass,jadx.gui.utils.CodeLinesInfo,java.util.List)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["af6f8b53911a02f3ad625e2702c478e0763074de"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 6, "lines": 20, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-gui/src/main/java/jadx/gui/utils", "jadx-core/src/main/java/jadx/api"], "changesInPackagesSPOON": ["jadx.gui.utils.CodeUsageInfo", "jadx.api.JavaClass.loadLists()", "jadx.gui.utils.CodeUsageInfo.processClass(jadx.api.JavaClass,jadx.gui.utils.CodeLinesInfo,java.util.List)"]}, {"title": "https://bintray.com/skylot/jadx/unstable/v1.1.0-b1196-9ab003df", "body": "resource.arsc can no longer be opened", "url": "https://github.com/skylot/jadx/issues/810", "user": "Henry2o1o", "labels": ["Core", "bug"], "created": "2019-12-22 16:16:50", "closed": "2019-12-22 16:34:21", "commits": {"0c55ab9001232005da9ce37563b283289cf4c5a6": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0c55ab9001232005da9ce37563b283289cf4c5a6", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["9c88f70740b7e8b326534afada316720f48a38a8"], "nameRev": "0c55ab9001232005da9ce37563b283289cf4c5a6 remotes/origin/rename~39", "commitMessage": "fix: resolve class cast exception introduced in CodeWriter refactoring (#810)\n", "commitDateTime": "2019-12-22 16:19:47", "authoredDateTime": "2019-12-22 16:04:28", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/ResContainer.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/ResTableParser.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResContainer.java", "spoonMethods": [{"spoonMethodName": "jadx.core.xmlgen.ResContainer.resourceTable(java.lang.String,java.util.List,jadx.core.codegen.CodeWriter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ResTableParser.java", "spoonMethods": [{"spoonMethodName": "jadx.core.xmlgen.ResTableParser.makeXmlDump()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.core.xmlgen.ResTableParser.decodeFiles(java.io.InputStream)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0c55ab9001232005da9ce37563b283289cf4c5a6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 6, "lines": 11, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/xmlgen"], "changesInPackagesSPOON": ["jadx.core.xmlgen.ResTableParser.makeXmlDump()", "jadx.core.xmlgen.ResContainer.resourceTable(java.lang.String,java.util.List,jadx.core.codegen.CodeWriter)", "jadx.core.xmlgen.ResTableParser.decodeFiles(java.io.InputStream)"]}, {"title": "[core] Stackoverflows for Twitter app", "body": "Hi, when I try to decompile Twitter app, I see a lot of stackoverflows like\r\n```\r\n\"pool-1-thread-4\" #15 prio=5 os_prio=0 cpu=19984.38ms elapsed=743.20s tid=0x00000023f0927000 nid=0xee4 runnable  [0x0000002382af9000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.HashMap.keySet(java.base@12.0.1/HashMap.java:903)\r\n        at java.util.HashSet.iterator(java.base@12.0.1/HashSet.java:173)\r\n        at java.util.AbstractCollection.addAll(java.base@12.0.1/AbstractCollection.java:351)\r\n        at jadx.core.dex.regions.conditions.IfInfo.merge(IfInfo.java:52)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.mergeIfInfo(IfMakerHelper.java:295)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(IfMakerHelper.java:224)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(IfMakerHelper.java:55)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(IfMakerHelper.java:226)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(IfMakerHelper.java:55)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(IfMakerHelper.java:226)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(IfMakerHelper.java:55)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(IfMakerHelper.java:226)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(IfMakerHelper.java:55)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(IfMakerHelper.java:226)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(IfMakerHelper.java:55)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(IfMakerHelper.java:226)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(IfMakerHelper.java:55)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(IfMakerHelper.java:226)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(IfMakerHelper.java:55)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(IfMakerHelper.java:226)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(IfMakerHelper.java:55)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(IfMakerHelper.java:226)\r\n        at jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(IfMakerHelper.java:55)\r\n```\r\n\r\nArguments\r\n```\r\n--no-replace-consts --show-bad-code --threads-count 4 --no-inline-anonymous --no-imports --deobf --deobf-min 2 --deobf-rewrite-cfg\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1WAf3xb7uznY0XKlL-6UDcfiDVm9_hvUg/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/809", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-12-21 16:40:33", "closed": "2020-01-04 18:46:30", "commits": {"04e309aeffedd8922fc6aae546f03a40404fa89b": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "04e309aeffedd8922fc6aae546f03a40404fa89b", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["99eb31b3125bc70b7d7c411a5b613e50d544fbc8"], "nameRev": "04e309aeffedd8922fc6aae546f03a40404fa89b remotes/origin/rename~34", "commitMessage": "fix: additional checks for 'if' blocks inside loops (#809)\n", "commitDateTime": "2019-12-27 21:20:14", "authoredDateTime": "2019-12-27 15:39:23", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/BlockUtils.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/loops/TestDoWhileBreak2.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/loops/TestDoWhileBreak3.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.makeInsnBody(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.InsnNode,java.util.Set)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "IfMakerHelper.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(jadx.core.dex.regions.conditions.IfInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.regions.IfMakerHelper.getNextIfNodeInfo(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BlockUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.BlockUtils.isFollowBackEdge(jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestDoWhileBreak2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.loops.TestDoWhileBreak2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestDoWhileBreak3.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.loops.TestDoWhileBreak3", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["04e309aeffedd8922fc6aae546f03a40404fa89b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 32, "deletions": 1, "lines": 33, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/codegen"], "changesInPackagesSPOON": ["jadx.core.codegen.InsnGen.makeInsnBody(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.InsnNode,java.util.Set)", "jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(jadx.core.dex.regions.conditions.IfInfo)", "jadx.core.dex.visitors.regions.IfMakerHelper.getNextIfNodeInfo(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode)", "jadx.core.utils.BlockUtils.isFollowBackEdge(jadx.core.dex.nodes.BlockNode)"]}, {"title": "[core] CodegenException when generating code for synthetic constructor call", "body": "When decompiling a major Android application, I get several errors like the one below:\r\n\r\n```\r\nJADX ERROR: Method code generation error\r\njadx.core.utils.exceptions.CodegenException: Error generate insn: 0x0007: CONSTRUCTOR  (r0v5 ? I:BuggyConstructor) =  call: BuggyConstructor.<init>():void type: CONSTRUCTOR in method: Test.<clinit>():void, dex: ssa_1_test.dex\r\n    at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:256)\r\n    at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)\r\n    at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)\r\n    at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)\r\n    at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n    at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n    at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)\r\n    at jadx.core.codegen.RegionGen.makeIf(RegionGen.java:142)\r\n    at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)\r\n    at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n    at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n    at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)\r\n    at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)\r\n    at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)\r\n    at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)\r\n    at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$3(ClassGen.java:240)\r\n    at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n    at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n    at java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)\r\n    at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)\r\n    at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)\r\n    at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\r\n    at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n    at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n    at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n    at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)\r\n    at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)\r\n    at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)\r\n    at jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:112)\r\n    at jadx.core.codegen.ClassGen.makeClass(ClassGen.java:78)\r\n    at jadx.core.codegen.CodeGen.wrapCodeGen(CodeGen.java:44)\r\n    at jadx.core.codegen.CodeGen.generateJavaCode(CodeGen.java:33)\r\n    at jadx.core.codegen.CodeGen.generate(CodeGen.java:21)\r\n    at jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n    at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:287)\r\n    at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:266)\r\nCaused by: jadx.core.utils.exceptions.JadxRuntimeException: Code variable not set in r0v5 ?\r\n    at jadx.core.dex.instructions.args.SSAVar.getCodeVar(SSAVar.java:189)\r\n    at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:620)\r\n    at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)\r\n    at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)\r\n    ... 35 more\r\n```\r\n\r\nI analyzed this bug and managed to create a minimal test-case consisting of 2 smali files. The first one, named **Test.smali** is shown below:\r\n\r\n```\r\n.class public LTest;\r\n.super Ljava/lang/Object;\r\n.source \"Test.java\"\r\n\r\n.field public static final A00:Ljava/lang/Object;\r\n\r\n.method public static constructor <clinit>()V\r\n    .locals 1\r\n    new-instance v0, LBuggyConstructor;\r\n    invoke-direct {v0}, LBuggyConstructor;-><init>()V\r\n.end method\r\n```\r\n\r\nWhile the second, named **BuggyConstructor.smali**, is shown below:\r\n\r\n```\r\n.class public LBuggyConstructor;\r\n.super Ljava/lang/Object;\r\n.source \"BuggyConstructor.java\"\r\n\r\n.implements LInterfaceClass;\r\n\r\n.method public synthetic constructor <init>()V\r\n    .locals 0\r\n    invoke-direct {p0}, Ljava/lang/Object;-><init>()V\r\n    return-void\r\n.end method\r\n```\r\n\r\nTo reproduce the decompilation error, the following commands can be used:\r\n\r\n```\r\njava -jar smali.jar assemble -a 27 -o ssa_1_test.dex Test.smali BuggyConstructor.smali\r\njadx ssa_1_test.dex\r\n```\r\n\r\nIf the `synthetic` keyword is removed from **BuggyConstructor.smali**, the decompilation error disappears.\r\n\r\nAfter studying the source code, I concluded that the problem seems to be in `ConstructorVisitor` and more specifically in method `processInvoke()`.\r\n\r\n```java\r\nConstructorInsn replace = processConstructor(mth, co);\r\nif (replace != null) {\r\n    remover.addAndUnbind(co);\r\n    co = replace;\r\n}\r\n\r\nBlockUtils.replaceInsn(mth, block, indexInBlock, co);\r\n```\r\n\r\nAs far as I understand, the call to `addAndUnbind()` in the `if`-clause destroys the SSA information for the result variable of the constructor call. This seems to be happening in `unbindResult()` of `InsnRemover` via a call to `removeSsaVar()`. However, this information is required in the call to `replaceInsn()`.\r\n\r\nRemoving the call to `addAndUnbind()` seems to be fixing the problem. I'm currently trying to fully understand the semantics of this visitor in order to propose a better solution.", "url": "https://github.com/skylot/jadx/issues/808", "user": "huku-", "labels": ["Core", "bug"], "created": "2019-12-21 16:26:12", "closed": "2019-12-28 09:03:37", "commits": {"02213802c5b3d7ea586feb21fc57126c1f7512da": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "02213802c5b3d7ea586feb21fc57126c1f7512da", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["836585547502142dbdfdf4f3f73e273dcb49be59"], "nameRev": "02213802c5b3d7ea586feb21fc57126c1f7512da remotes/origin/rename~29", "commitMessage": "fix: make correct replacement for synthetic constructor (#808)\n", "commitDateTime": "2019-12-28 08:42:39", "authoredDateTime": "2019-12-28 08:42:39", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ConstructorVisitor.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestSyntheticConstructor.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "jadx-core/src/test/smali/others/TestSyntheticConstructor/BuggyConstructor.smali", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "jadx-core/src/test/smali/others/TestSyntheticConstructor/Test.smali", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConstructorVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ConstructorVisitor.processConstructor(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "TestSyntheticConstructor.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestSyntheticConstructor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["02213802c5b3d7ea586feb21fc57126c1f7512da"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 3, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.ConstructorVisitor.processConstructor(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.mods.ConstructorInsn)"]}, {"title": "[core]find usage error", "body": "jadx version: dev(2019.12.15 the lastest)\r\napk link:`https://drive.google.com/open?id=1K6SD0ZLd3Vidnej4f9a3KnbbjREfpLDy`\r\napk version:`3.2.150-3002150`\r\n\r\nclass:`com.adguard.android.l`\r\nfind:`license_valid_until_end_life`\r\n![1](https://user-images.githubusercontent.com/42903751/71148802-9bdab900-2267-11ea-929c-6fba3fa14332.png)\r\n\r\nbut\r\nclass:`com.adguard.android.ui.DrawerActivity`\r\nfind:`license_valid_until_end_life`\r\nmethod:`public void g()`\r\n![image](https://user-images.githubusercontent.com/42903751/71148866-d2183880-2267-11ea-8938-54a00df39084.png)\r\n\r\n", "url": "https://github.com/skylot/jadx/issues/803", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2019-12-19 06:10:09", "closed": "2019-12-23 05:07:57", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[core]Can't see smali of inner class", "body": "jadx version: dev\r\n\r\nSelect a class file and click the smali tab. You can only see the smali of the external class, but not the smali of the inner class.\r\n", "url": "https://github.com/skylot/jadx/issues/802", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2019-12-16 14:04:24", "closed": "2020-01-05 10:03:00", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "[core]  IndexOutOfBoundsException in RegionMakerVisitor", "body": "Hello,\r\n\r\nSince this is the first time I'm opening an issue in jadx, let me take some time to say thank you for keeping jadx open-source and freely available to us. I guess you have probably heard this prose a million times, but I really mean it.\r\n\r\nSo, I got back to using jadx again after a small break and I thought it would be nice to start looking into the problems that cause the \"Method not decompiled\" exceptions in the output. Unfortunately, due to the nature of my work, I cannot disclose the name of the APK I'm analyzing, but I'll try to be as precise as possible.\r\n\r\nSeveral of the decompilation errors that I get look like this:\r\n\r\n```\r\nJADX ERROR: IndexOutOfBoundsException in pass: RegionMakerVisitor\r\njava.lang.IndexOutOfBoundsException: Index: 0, Size: 0\r\n    at java.util.ArrayList.rangeCheck(ArrayList.java:657)\r\n    at java.util.ArrayList.get(ArrayList.java:433)\r\n    at jadx.core.dex.nodes.InsnNode.getArg(InsnNode.java:101)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:611)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(RegionMaker.java:619)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.processMonitorEnter(RegionMaker.java:561)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverse(RegionMaker.java:133)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.makeRegion(RegionMaker.java:86)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.processIf(RegionMaker.java:693)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverse(RegionMaker.java:123)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.makeRegion(RegionMaker.java:86)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.processIf(RegionMaker.java:693)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.traverse(RegionMaker.java:123)\r\n    at jadx.core.dex.visitors.regions.RegionMaker.makeRegion(RegionMaker.java:86)\r\n    at jadx.core.dex.visitors.regions.RegionMakerVisitor.visit(RegionMakerVisitor.java:49)\r\n```\r\n\r\nThe problem seems to be in `traverseMonitorExits()` in **RegionMaker.java**:\r\n\r\n```java\r\nfor (InsnNode insn : block.getInstructions()) {\r\n    if (insn.getType() == InsnType.MONITOR_EXIT\r\n            && insn.getArg(0).equals(arg)) {\r\n        exits.add(block);\r\n        region.getExitInsns().add(insn);\r\n        return;\r\n    }\r\n}\r\n```\r\n\r\nThe snippet above assumes that there's at least one argument each `MONITOR_EXIT` instruction, which is usually fine. However, sometimes this might not be the case, as mentioned in a comment in `processMonitorEnter()`.\r\n\r\n```java\r\n// remove arg from MONITOR_EXIT to allow inline in MONITOR_ENTER\r\nexitInsn.removeArg(0);\r\nexitInsn.add(AFlag.DONT_GENERATE);\r\n```\r\n\r\nTo solve this problem I just added a check for the number of arguments of `MONITOR_EXIT` instructions in `traverseMonitorExits()`:\r\n\r\n```java\r\nfor (InsnNode insn : block.getInstructions()) {\r\n    if (insn.getType() == InsnType.MONITOR_EXIT\r\n            && insn.getArgsCount() > 0\r\n            && insn.getArg(0).equals(arg)) {\r\n        exits.add(block);\r\n        region.getExitInsns().add(insn);\r\n        return;\r\n    }\r\n}\r\n```\r\n\r\nI guess you could also check for `DONT_GENERATE`, but haven't tried that.\r\n\r\nAnyway, I'm not creating a pull-request as I'm not really sure if this is the most elegant way of fixing this bug. If there's a better way to do it, I'll be happy to know. In the mean time, I'll be studying the source code to determine if there's a deeper root cause that results in this exception.", "url": "https://github.com/skylot/jadx/issues/799", "user": "huku-", "labels": ["Core", "bug"], "created": "2019-12-13 20:48:08", "closed": "2019-12-15 12:29:49", "commits": {"f5d1f288d097ae19d42db34a4a2d0720234b96ed": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "f5d1f288d097ae19d42db34a4a2d0720234b96ed", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["a2df92dd6811d3fe8851d034777a50ef5a79de4a"], "nameRev": "f5d1f288d097ae19d42db34a4a2d0720234b96ed remotes/origin/rename~47", "commitMessage": "fix: don't inline constants in synchronized statement (#799)\n", "commitDateTime": "2019-12-15 12:04:24", "authoredDateTime": "2019-12-15 12:04:24", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlineVisitor.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/utils/assertj/JadxClassNodeAssertions.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/synchronize/TestNestedSynchronize.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "jadx-core/src/test/smali/synchronize/TestNestedSynchronize.smali", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConstInlineVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.checkForSynchronizeBlock(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.checkInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegionMaker.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(jadx.core.dex.regions.SynchronizedRegion,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.nodes.BlockNode,java.util.Set,java.util.Set)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JadxClassNodeAssertions.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.api.utils.assertj.JadxClassNodeAssertions.code()", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TestNestedSynchronize.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.synchronize.TestNestedSynchronize", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f5d1f288d097ae19d42db34a4a2d0720234b96ed"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 0, "lines": 19, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 1, "INS": 5, "MOV": 2, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/dex/visitors"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.ConstInlineVisitor.checkInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,java.util.List)", "jadx.core.dex.visitors.regions.RegionMaker.traverseMonitorExits(jadx.core.dex.regions.SynchronizedRegion,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.nodes.BlockNode,java.util.Set,java.util.Set)", "jadx.core.dex.visitors.ConstInlineVisitor.checkForSynchronizeBlock(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.tests.api.utils.assertj.JadxClassNodeAssertions.code()"]}, {"title": "[core] BinaryXMLParser injects xmlns: from other files on load", "body": "**Checks before report**\r\n- check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\nNot fixed\r\n- check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\nNot out-of-memory problem.\r\n- search existing issues by exception message\r\nNo exception message.\r\n\r\n**Describe error**\r\n- provide full name of method or class with error\r\nNot method.\r\n- provide full java stacktrace\r\nNo stacktrace.\r\n  **Note**: no need to copy method fallback code (commented pseudocode)\r\n- attach or provide link to apk file (double check apk version)\r\n[res.apk.zip](https://github.com/skylot/jadx/files/3957716/res.apk.zip)\r\n\r\n  **Note**: GitHub don't allow attach files with `.apk` extension, but you can change extension by adding `.zip` at the end :)\r\n\r\nHello.\r\n\r\njadx-gui injects xmlns: attribute from another XML files to newly opened files, even if this xmlns: is not present in the opened file.\r\n\r\nTo check: \r\n1. Open attached apk, open abc_fade_in.xml, copy its content to compare tool\r\n2. Close jadx-gui\r\n2. Open attached apk, open avd_show_password.xml then open abc_fade_in.xml, copy its content to compare tool\r\n3. Compare abc_fade_in.xml content from both times, take a note about xmlns:aapt appeared\r\n\r\nI pushed a fix to https://github.com/S-trace/jadx/tree/nsmap_reset\r\n@skylot Could you please review it and allow me to open a pull request?\r\n\r\nThank you.\r\n\r\n", "url": "https://github.com/skylot/jadx/issues/796", "user": "S-trace", "labels": ["Core", "bug"], "created": "2019-12-12 20:36:19", "closed": "2019-12-13 21:00:43", "commits": {"ef5da49bc0e07d92bdcef8c75dc1a0f1f94e7dc5": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "ef5da49bc0e07d92bdcef8c75dc1a0f1f94e7dc5", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["7545625af4254bf745e89c107fa69e45b255392e"], "nameRev": "ef5da49bc0e07d92bdcef8c75dc1a0f1f94e7dc5 remotes/origin/rename~50", "commitMessage": "fix(xml): reset nsMap in parse method (PR #798 #796)\n\nFixes injection of xmlns: attributes from other files (#796)", "commitDateTime": "2019-12-13 21:16:08", "authoredDateTime": "2019-12-13 21:16:08", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BinaryXMLParser.java", "spoonMethods": [{"spoonMethodName": "jadx.core.xmlgen.BinaryXMLParser", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "jadx.core.xmlgen.BinaryXMLParser.parse(java.io.InputStream)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[core] Decompilation of try-with-resources statement fails for multiple resources", "body": "Hi,\r\n\r\nthis method can't be decompiled with jadx v1.1.0-b1181-cc29da8e , sample tested with openjdk8\r\n```\r\n  public void tryWithResouce() {\r\n    try (final FileInputStream f1 = new FileInputStream(\"\"); FileInputStream f2 = new FileInputStream(\"\")) {\r\n    } catch (final IOException e) {\r\n      System.out.println(\"error\");\r\n    } finally {\r\n      System.out.println(\"finally\");\r\n    }\r\n  }\r\n```\r\nI hope such minimal samples helps and are useful for unit tests.\r\n\r\nAdditional question: If the second resource is removed in this sample, the decompiled code looks like this:\r\n```\r\n    public void tryWithResouce() {\r\n        String str;\r\n        try {\r\n            FileInputStream f1 = new FileInputStream(\"\");\r\n            Throwable th = null;\r\n            if (f1 != null) {\r\n                if (th != null) {\r\n                    try {\r\n                        f1.close();\r\n                    } catch (Throwable th2) {\r\n                        th.addSuppressed(th2);\r\n                    }\r\n                } else {\r\n                    f1.close();\r\n                }\r\n            }\r\n        } catch (IOException e) {\r\n            System.out.println(\"error\");\r\n        } finally {\r\n            str = \"finally\";\r\n            System.out.println(str);\r\n        }\r\n    }\r\n```\r\nThe generated code is doing the right thing, but is it possible to generate \"better\" code?\r\n\r\nThank you", "url": "https://github.com/skylot/jadx/issues/790", "user": "nitram84", "labels": ["Core", "bug"], "created": "2019-12-09 22:12:14", "closed": "2020-04-28 17:37:56", "commits": {}, "ttf": 140.00027777777777, "commitsDetails": []}, {"title": "[core] jadx freezes while decompiling APK", "body": "**Describe error**\r\nAPK: https://drive.google.com/file/d/1tm3-zIeQyZwuuyljclKA0FAzWZ59FNbk/view?usp=sharing\r\n\r\nArgs:\r\n```\r\n--no-replace-consts --show-bad-code --threads-count 4 --no-inline-anonymous --no-imports --deobf --deobf-min 2 --deobf-rewrite-cfg\r\n```\r\n\r\nLooks like an infinite loop, ``` jstack ``` shows the following stack trace\r\n```\r\n\"pool-1-thread-1\" #12 prio=5 os_prio=0 cpu=75359.38ms elapsed=103.61s tid=0x000000366ce34800 nid=0xd3c runnable  [0x0000003674773000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:155)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.allSameListener(TypeUpdate.java:343)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$40/0x000000080124f040.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.allSameListener(TypeUpdate.java:348)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$40/0x000000080124f040.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$39/0x000000080124fc40.update(Unknown Source)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.apply(TypeUpdate.java:73)\r\n        at jadx.core.dex.visitors.typeinference.TypeUpdate.applyWithWiderIgnSame(TypeUpdate.java:64)\r\n        at jadx.core.dex.visitors.typeinference.TypeSearch.applyResolvedVars(TypeSearch.java:88)\r\n        at jadx.core.dex.visitors.typeinference.TypeSearch.run(TypeSearch.java:71)\r\n        at jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runMultiVariableSearch(TypeInferenceVisitor.java:121)\r\n        at jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(TypeInferenceVisitor.java:82)\r\n        at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:30)\r\n        at jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:15)\r\n        at jadx.core.dex.visitors.DepthTraversal$$Lambda$80/0x00000008012ad840.accept(Unknown Source)\r\n        at java.util.ArrayList.forEach(java.base@12.0.1/ArrayList.java:1540)\r\n        at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:15)\r\n        at jadx.core.dex.visitors.DepthTraversal.lambda$visit$0(DepthTraversal.java:14)\r\n        at jadx.core.dex.visitors.DepthTraversal$$Lambda$79/0x00000008012ae440.accept(Unknown Source)\r\n        at java.util.ArrayList.forEach(java.base@12.0.1/ArrayList.java:1540)\r\n        at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:41)\r\n        - locked <0x00000004555029c8> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass$$Lambda$124/0x0000000801308440.accept(Unknown Source)\r\n        at java.util.ArrayList.forEach(java.base@12.0.1/ArrayList.java:1540)\r\n        at jadx.core.ProcessClass.generateCode(ProcessClass.java:59)\r\n        at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:273)\r\n        - locked <0x000000044665aaf0> (a jadx.core.dex.nodes.ClassNode)\r\n        at jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n        at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n        at jadx.api.JadxDecompiler$$Lambda$70/0x000000080128e040.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.1/ThreadPoolExecutor.java:1128)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.1/ThreadPoolExecutor.java:628)\r\n        at java.lang.Thread.run(java.base@12.0.1/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n        - <0x0000000461c0c6c8> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n```", "url": "https://github.com/skylot/jadx/issues/786", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-12-05 13:14:08", "closed": "2020-02-17 06:34:20", "commits": {}, "ttf": 73.00027777777778, "commitsDetails": []}, {"title": " Decompilation error", "body": "    public static final class k implements ExpandableListView.OnGroupClickListener {\r\n        final /* synthetic */ b a;\r\n        final /* synthetic */ int b;\r\n        final /* synthetic */ Activity c;\r\n\r\n        k(b bVar, int i, Activity activity) {\r\n            this.a = bVar;\r\n            this.b = i;\r\n            this.c = activity;\r\n        }\r\n\r\n        /* JADX WARNING: Can't fix incorrect switch cases order */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:32:0x00d9, code lost:\r\n            if (r1.isGroupExpanded(r3) != false) goto L_0x021b;\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:43:0x013d, code lost:\r\n            if (r6.equals(\"GroupFix\") != false) goto L_0x0234;\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:45:0x0147, code lost:\r\n            if (r6.equals(com.finogeeks.finochat.model.contact.ContactGroupWrapper.GROUP_NEW_FRIEND_DEF) != false) goto L_0x0234;\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:47:0x014f, code lost:\r\n            if (r6.equals(com.finogeeks.finochat.model.contact.ContactGroupWrapper.GROUP_CREATE_BY_TAGS) != false) goto L_0x0234;\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:66:0x019d, code lost:\r\n            if (r1.isGroupExpanded(r3) != false) goto L_0x021b;\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:75:0x01e2, code lost:\r\n            if (r2 != null) goto L_0x0262;\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:77:0x0208, code lost:\r\n            r1.show();\r\n            kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, \"Toast\\n        .makeText(\u2026         show()\\n        }\");\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:82:0x021b, code lost:\r\n            ((com.finogeeks.utility.views.AnimatedExpandableListView) r1).collapseGroupWithAnimation(r3);\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:85:0x022b, code lost:\r\n            if (r2.equals(\"GroupFix\") != false) goto L_0x0234;\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:87:0x0232, code lost:\r\n            if (r2.equals(com.finogeeks.finochat.model.contact.ContactGroupWrapper.GROUP_CREATE_BY_TAGS) != false) goto L_0x0234;\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:88:0x0234, code lost:\r\n            r4.listener.onClick(r30);\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:96:0x0260, code lost:\r\n            if (r2 != null) goto L_0x0262;\r\n         */\r\n        /* JADX WARNING: Code restructure failed: missing block: B:97:0x0262, code lost:\r\n            r2.pushFragment(r1);\r\n         */\r\n        /* Code decompiled incorrectly, please refer to instructions dump. */\r\n        public boolean onGroupClick(@org.jetbrains.annotations.NotNull android.widget.ExpandableListView r29, @org.jetbrains.annotations.NotNull android.view.View r30, int r31, long r32) {\r\n            /*\r\n                r28 = this;\r\n                r0 = r28\r\n                r1 = r29\r\n                r2 = r30\r\n                r3 = r31\r\n                java.lang.String r4 = \"parent\"\r\n                kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, r4)\r\n                java.lang.String r4 = \"v\"\r\n                kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, r4)\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.b r4 = r0.a\r\n                com.finogeeks.finochat.finocontacts.a.a.a.b r4 = com.finogeeks.finochat.finocontacts.contact.contacts.views.b.b(r4)\r\n                java.lang.Object r4 = r4.getGroup(r3)\r\n                if (r4 == 0) goto L_0x0266\r\n                com.finogeeks.finochat.model.contact.ContactGroupWrapper r4 = (com.finogeeks.finochat.model.contact.ContactGroupWrapper) r4\r\n                com.finogeeks.finochat.model.db.GroupDynamic r5 = r4.groupDynamic\r\n                int r6 = r0.b\r\n                java.lang.String r7 = \"Toast\\n        .makeText(\u2026         show()\\n        }\"\r\n                java.lang.String r8 = \"requireActivity()\"\r\n                java.lang.String r9 = \"\u529f\u80fd\"\r\n                java.lang.String r10 = \"\u5c1a\u672a\u652f\u6301\"\r\n                java.lang.String r12 = \"window\"\r\n                java.lang.String r15 = \"GroupDynamic\"\r\n                java.lang.String r11 = \"GroupContact\"\r\n                java.lang.String r14 = \"GroupFix\"\r\n                java.lang.String r13 = \"GroupCreateByTags\"\r\n                java.lang.String r2 = \"GroupExtContact\"\r\n                r16 = r2\r\n                r2 = 0\r\n                r17 = 1\r\n                if (r6 != 0) goto L_0x0166\r\n                java.lang.String r6 = r4.groupType\r\n                if (r6 != 0) goto L_0x0049\r\n                goto L_0x0265\r\n            L_0x0049:\r\n                int r18 = r6.hashCode()\r\n                switch(r18) {\r\n                    case -1719373186: goto L_0x0153;\r\n                    case -1536142037: goto L_0x014b;\r\n                    case 323843267: goto L_0x0141;\r\n                    case 570981686: goto L_0x0139;\r\n                    case 766418113: goto L_0x0124;\r\n                    case 1939658976: goto L_0x0083;\r\n                    case 2135103696: goto L_0x0052;\r\n                    default: goto L_0x0050;\r\n                }\r\n            L_0x0050:\r\n                goto L_0x0265\r\n            L_0x0052:\r\n                java.lang.String r1 = \"GroupInject\"\r\n                boolean r1 = r6.equals(r1)\r\n                if (r1 == 0) goto L_0x0265\r\n                java.lang.Object r1 = r4.object\r\n                com.finogeeks.finochat.sdk.IPluginManager$MenuItem r1 = (com.finogeeks.finochat.sdk.IPluginManager.MenuItem) r1\r\n                com.finogeeks.finochat.services.ServiceFactory r2 = com.finogeeks.finochat.services.ServiceFactory.getInstance()\r\n                java.lang.String r3 = \"ServiceFactory.getInstance()\"\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r2, r3)\r\n                com.finogeeks.finochat.sdk.IPluginManager r2 = r2.getPluginManager()\r\n                java.lang.String r3 = \"ServiceFactory.getInstan\u2026           .pluginManager\"\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r2, r3)\r\n                com.finogeeks.finochat.sdk.IPluginManager$MenuSelectListener r2 = r2.getContactsMenuSelectListener()\r\n                if (r2 == 0) goto L_0x0265\r\n                android.app.Activity r3 = r0.c\r\n                if (r1 != 0) goto L_0x007d\r\n                kotlin.jvm.internal.Intrinsics.throwNpe()\r\n            L_0x007d:\r\n                r4 = 0\r\n                r2.onMenuSelect(r3, r1, r4)\r\n                goto L_0x0265\r\n            L_0x0083:\r\n                boolean r4 = r6.equals(r15)\r\n                if (r4 == 0) goto L_0x0265\r\n                java.lang.String r4 = r5.onclick\r\n                if (r4 != 0) goto L_0x008f\r\n                goto L_0x0101\r\n            L_0x008f:\r\n                int r6 = r4.hashCode()\r\n                r11 = -787751952(0xffffffffd10bdbf0, float:-3.754315E10)\r\n                if (r6 == r11) goto L_0x00dd\r\n                r11 = 3148801(0x300c01, float:4.41241E-39)\r\n                if (r6 == r11) goto L_0x00cd\r\n                r1 = 3211051(0x30ff2b, float:4.499641E-39)\r\n                if (r6 == r1) goto L_0x00a3\r\n                goto L_0x0101\r\n            L_0x00a3:\r\n                java.lang.String r1 = \"href\"\r\n                boolean r1 = r4.equals(r1)\r\n                if (r1 == 0) goto L_0x0101\r\n                com.finogeeks.finochat.modules.common.WebViewActivity$Companion r18 = com.finogeeks.finochat.modules.common.WebViewActivity.Companion\r\n                android.app.Activity r1 = r0.c\r\n                java.lang.String r2 = r5.url\r\n                java.lang.String r3 = \"groupDynamic.url\"\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r2, r3)\r\n                r21 = 0\r\n                r22 = 0\r\n                r23 = 0\r\n                r24 = 0\r\n                r25 = 0\r\n                r26 = 124(0x7c, float:1.74E-43)\r\n                r27 = 0\r\n                r19 = r1\r\n                r20 = r2\r\n                com.finogeeks.finochat.modules.common.WebViewActivity.Companion.start$default(r18, r19, r20, r21, r22, r23, r24, r25, r26, r27)\r\n                goto L_0x0265\r\n            L_0x00cd:\r\n                java.lang.String r6 = \"fold\"\r\n                boolean r4 = r4.equals(r6)\r\n                if (r4 == 0) goto L_0x0101\r\n                boolean r2 = r1.isGroupExpanded(r3)\r\n                if (r2 == 0) goto L_0x01a1\r\n                goto L_0x021b\r\n            L_0x00dd:\r\n                boolean r1 = r4.equals(r12)\r\n                if (r1 == 0) goto L_0x0101\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.OrganizationActivity$a r1 = com.finogeeks.finochat.finocontacts.contact.contacts.views.OrganizationActivity.f\r\n                android.app.Activity r2 = r0.c\r\n                java.lang.String r3 = r5.id\r\n                java.lang.String r4 = \"groupDynamic.id\"\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r3, r4)\r\n                java.lang.String r4 = r5.type\r\n                java.lang.String r6 = \"groupDynamic.type\"\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r4, r6)\r\n                java.lang.String r5 = r5.name\r\n                java.lang.String r6 = \"groupDynamic.name\"\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r5, r6)\r\n                r1.a(r2, r3, r4, r5)\r\n                goto L_0x0265\r\n            L_0x0101:\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.b r1 = r0.a\r\n                java.lang.StringBuilder r3 = new java.lang.StringBuilder\r\n                r3.<init>()\r\n                r3.append(r10)\r\n                java.lang.String r4 = r5.onclick\r\n                r3.append(r4)\r\n                r3.append(r9)\r\n                java.lang.String r3 = r3.toString()\r\n                androidx.fragment.app.FragmentActivity r1 = r1.requireActivity()\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, r8)\r\n                android.widget.Toast r1 = android.widget.Toast.makeText(r1, r3, r2)\r\n                goto L_0x0208\r\n            L_0x0124:\r\n                boolean r2 = r6.equals(r11)\r\n                if (r2 == 0) goto L_0x0265\r\n                boolean r2 = r1.isGroupExpanded(r3)\r\n                if (r2 == 0) goto L_0x0132\r\n                goto L_0x021b\r\n            L_0x0132:\r\n                com.finogeeks.utility.views.AnimatedExpandableListView r1 = (com.finogeeks.utility.views.AnimatedExpandableListView) r1\r\n                r1.expandGroup(r3)\r\n                goto L_0x0265\r\n            L_0x0139:\r\n                boolean r1 = r6.equals(r14)\r\n                if (r1 == 0) goto L_0x0265\r\n                goto L_0x0234\r\n            L_0x0141:\r\n                java.lang.String r1 = \"GROUP_NEW_FRIEND_DEF\"\r\n                boolean r1 = r6.equals(r1)\r\n                if (r1 == 0) goto L_0x0265\r\n                goto L_0x0234\r\n            L_0x014b:\r\n                boolean r1 = r6.equals(r13)\r\n                if (r1 == 0) goto L_0x0265\r\n                goto L_0x0234\r\n            L_0x0153:\r\n                r1 = r16\r\n                boolean r1 = r6.equals(r1)\r\n                if (r1 == 0) goto L_0x0265\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.OrganizationActivity$a r1 = com.finogeeks.finochat.finocontacts.contact.contacts.views.OrganizationActivity.f\r\n                android.app.Activity r2 = r0.c\r\n                java.lang.String r3 = \"com.finogeeks.ExternalContacts.REQ\"\r\n                r1.a(r2, r3)\r\n                goto L_0x0265\r\n            L_0x0166:\r\n                r6 = r16\r\n                java.lang.String r2 = r4.groupType\r\n                if (r2 != 0) goto L_0x016e\r\n                goto L_0x0265\r\n            L_0x016e:\r\n                int r18 = r2.hashCode()\r\n                switch(r18) {\r\n                    case -1719373186: goto L_0x023c;\r\n                    case -1536142037: goto L_0x022e;\r\n                    case 570981686: goto L_0x0227;\r\n                    case 766418113: goto L_0x020f;\r\n                    case 1939658976: goto L_0x0177;\r\n                    default: goto L_0x0175;\r\n                }\r\n            L_0x0175:\r\n                goto L_0x0265\r\n            L_0x0177:\r\n                boolean r2 = r2.equals(r15)\r\n                if (r2 == 0) goto L_0x0265\r\n                java.lang.String r2 = r5.onclick\r\n                if (r2 != 0) goto L_0x0182\r\n                goto L_0x01e6\r\n            L_0x0182:\r\n                int r4 = r2.hashCode()\r\n                r6 = -787751952(0xffffffffd10bdbf0, float:-3.754315E10)\r\n                if (r4 == r6) goto L_0x01ad\r\n                r6 = 3148801(0x300c01, float:4.41241E-39)\r\n                if (r4 == r6) goto L_0x0191\r\n                goto L_0x01e6\r\n            L_0x0191:\r\n                java.lang.String r4 = \"fold\"\r\n                boolean r2 = r2.equals(r4)\r\n                if (r2 == 0) goto L_0x01e6\r\n                boolean r2 = r1.isGroupExpanded(r3)\r\n                if (r2 == 0) goto L_0x01a1\r\n                goto L_0x021b\r\n            L_0x01a1:\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.b r1 = r0.a\r\n                java.lang.String r2 = \"groupDynamic\"\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r5, r2)\r\n                r1.a((com.finogeeks.finochat.model.db.GroupDynamic) r5, (int) r3)\r\n                goto L_0x0265\r\n            L_0x01ad:\r\n                boolean r1 = r2.equals(r12)\r\n                if (r1 == 0) goto L_0x01e6\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.b r1 = r0.a\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.model.ContactsCallback r1 = r1.p\r\n                if (r1 == 0) goto L_0x01c1\r\n                boolean r1 = r1.isStrangerSelectable()\r\n                r10 = r1\r\n                goto L_0x01c2\r\n            L_0x01c1:\r\n                r10 = 1\r\n            L_0x01c2:\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.c$a r6 = com.finogeeks.finochat.finocontacts.contact.contacts.views.c.m\r\n                java.lang.String r7 = r5.id\r\n                java.lang.String r8 = r5.type\r\n                java.lang.String r1 = \"groupDynamic.type\"\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r8, r1)\r\n                java.lang.String r9 = r5.name\r\n                java.lang.String r1 = \"groupDynamic.name\"\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r9, r1)\r\n                r11 = 0\r\n                r12 = 16\r\n                r13 = 0\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.c r1 = com.finogeeks.finochat.finocontacts.contact.contacts.views.c.a.a((com.finogeeks.finochat.finocontacts.contact.contacts.views.c.a) r6, (java.lang.String) r7, (java.lang.String) r8, (java.lang.String) r9, (boolean) r10, (boolean) r11, (int) r12, (java.lang.Object) r13)\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.b r2 = r0.a\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.model.ContactsCallback r2 = r2.p\r\n                if (r2 == 0) goto L_0x0265\r\n                goto L_0x0262\r\n            L_0x01e6:\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.b r1 = r0.a\r\n                java.lang.StringBuilder r2 = new java.lang.StringBuilder\r\n                r2.<init>()\r\n                r2.append(r10)\r\n                java.lang.String r3 = r5.onclick\r\n                r2.append(r3)\r\n                r2.append(r9)\r\n                java.lang.String r2 = r2.toString()\r\n                androidx.fragment.app.FragmentActivity r1 = r1.requireActivity()\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, r8)\r\n                r3 = 0\r\n                android.widget.Toast r1 = android.widget.Toast.makeText(r1, r2, r3)\r\n            L_0x0208:\r\n                r1.show()\r\n                kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, r7)\r\n                goto L_0x0265\r\n            L_0x020f:\r\n                boolean r2 = r2.equals(r11)\r\n                if (r2 == 0) goto L_0x0265\r\n                boolean r2 = r1.isGroupExpanded(r3)\r\n                if (r2 == 0) goto L_0x0221\r\n            L_0x021b:\r\n                com.finogeeks.utility.views.AnimatedExpandableListView r1 = (com.finogeeks.utility.views.AnimatedExpandableListView) r1\r\n                r1.collapseGroupWithAnimation(r3)\r\n                goto L_0x0265\r\n            L_0x0221:\r\n                com.finogeeks.utility.views.AnimatedExpandableListView r1 = (com.finogeeks.utility.views.AnimatedExpandableListView) r1\r\n                r1.expandGroupWithAnimation(r3)\r\n                goto L_0x0265\r\n            L_0x0227:\r\n                boolean r1 = r2.equals(r14)\r\n                if (r1 == 0) goto L_0x0265\r\n                goto L_0x0234\r\n            L_0x022e:\r\n                boolean r1 = r2.equals(r13)\r\n                if (r1 == 0) goto L_0x0265\r\n            L_0x0234:\r\n                android.view.View$OnClickListener r1 = r4.listener\r\n                r2 = r30\r\n                r1.onClick(r2)\r\n                goto L_0x0265\r\n            L_0x023c:\r\n                r1 = r6\r\n                boolean r1 = r2.equals(r1)\r\n                if (r1 == 0) goto L_0x0265\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.b r1 = r0.a\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.model.ContactsCallback r1 = r1.p\r\n                if (r1 == 0) goto L_0x0250\r\n                boolean r1 = r1.isStrangerSelectable()\r\n                goto L_0x0251\r\n            L_0x0250:\r\n                r1 = 1\r\n            L_0x0251:\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.c$a r2 = com.finogeeks.finochat.finocontacts.contact.contacts.views.c.m\r\n                r3 = 2\r\n                r4 = 0\r\n                r5 = 0\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.c r1 = com.finogeeks.finochat.finocontacts.contact.contacts.views.c.a.a((com.finogeeks.finochat.finocontacts.contact.contacts.views.c.a) r2, (boolean) r1, (boolean) r5, (int) r3, (java.lang.Object) r4)\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.views.b r2 = r0.a\r\n                com.finogeeks.finochat.finocontacts.contact.contacts.model.ContactsCallback r2 = r2.p\r\n                if (r2 == 0) goto L_0x0265\r\n            L_0x0262:\r\n                r2.pushFragment(r1)\r\n            L_0x0265:\r\n                return r17\r\n            L_0x0266:\r\n                kotlin.TypeCastException r1 = new kotlin.TypeCastException\r\n                java.lang.String r2 = \"null cannot be cast to non-null type com.finogeeks.finochat.model.contact.ContactGroupWrapper\"\r\n                r1.<init>(r2)\r\n                throw r1\r\n            */\r\n            throw new UnsupportedOperationException(\"Method not decompiled: com.finogeeks.finochat.finocontacts.contact.contacts.views.b.k.onGroupClick(android.widget.ExpandableListView, android.view.View, int, long):boolean\");\r\n        }\r\n    }", "url": "https://github.com/skylot/jadx/issues/776", "user": "renqingyou", "labels": ["Core", "bug"], "created": "2019-11-06 11:03:07", "closed": "2019-11-09 21:01:39", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[core] Multiple methods are not generated because of \"Code variable not set in r1v0 ?\"", "body": "Open ``` com.ksmobile.launcher.LauncherModel ```, you will see that tons of methods are not generated because of error\r\n```java\r\n        void mo22935a(\r\n/*\r\nMethod generation error in method: com.ksmobile.launcher.LauncherModel.b.a(com.ksmobile.launcher.az, boolean, boolean):void, dex: classes.dex\r\n        jadx.core.utils.exceptions.JadxRuntimeException: Code variable not set in r1v0 ?\r\n        \tat jadx.core.dex.instructions.args.SSAVar.getCodeVar(SSAVar.java:189)\r\n        \tat jadx.core.codegen.MethodGen.addMethodArguments(MethodGen.java:157)\r\n        \tat jadx.core.codegen.MethodGen.addDefinition(MethodGen.java:129)\r\n        \tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:297)\r\n        \tat jadx.core.codegen.ClassGen.addMethods(ClassGen.java:263)\r\n        \tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:226)\r\n        \tat jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:111)\r\n        \tat jadx.core.codegen.ClassGen.addInnerClasses(ClassGen.java:238)\r\n        \tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:225)\r\n        \tat jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:111)\r\n        \tat jadx.core.codegen.ClassGen.makeClass(ClassGen.java:77)\r\n        \tat jadx.core.codegen.CodeGen.wrapCodeGen(CodeGen.java:49)\r\n        \tat jadx.core.codegen.CodeGen.generateJavaCode(CodeGen.java:33)\r\n        \tat jadx.core.codegen.CodeGen.generate(CodeGen.java:21)\r\n        \tat jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n        \tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:273)\r\n        \r\n*/\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1ITPTFbRKIvV9UlcctL-J5OcuMjaR3k8y/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/775", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-11-04 18:34:52", "closed": "2019-11-05 09:48:30", "commits": {"a48ce296b8b291aff4746627967f3bcbf71efb33": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a48ce296b8b291aff4746627967f3bcbf71efb33", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["cf3e17c4b83b68456cbb6c6802f10e57ce355512"], "nameRev": "a48ce296b8b291aff4746627967f3bcbf71efb33 tags/v1.1.0~7", "commitMessage": "fix: resolve code generation error for interface methods (#775)\n", "commitDateTime": "2019-11-05 09:31:12", "authoredDateTime": "2019-11-05 08:45:23", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/NameGen.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/CodeVar.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NameGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.NameGen.getFallbackName(jadx.core.dex.instructions.args.CodeVar)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CodeVar.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.CodeVar.fromMthArg(jadx.core.dex.instructions.args.RegisterArg)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a48ce296b8b291aff4746627967f3bcbf71efb33"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 2, "lines": 10, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 6, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/instructions/args", "jadx-core/src/main/java/jadx/core/codegen"], "changesInPackagesSPOON": ["jadx.core.codegen.NameGen.getFallbackName(jadx.core.dex.instructions.args.CodeVar)", "jadx.core.dex.instructions.args.CodeVar.fromMthArg(jadx.core.dex.instructions.args.RegisterArg)"]}, {"title": "[core]Endless jadx", "body": "**Checks before report**\r\n- check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n- search existing issues by exception message\r\n\r\n**Describe error**\r\napk used is : https://f-droid.org/repo/com.nextcloud.client_30080190.apk \r\n\r\noutput of jadx provide ( on ubuntu 18.04) \r\n`` WARNING: An illegal reflective access operation has occurred\r\nWARNING: Illegal reflective access by com.rits.cloning.Cloner (file:/root/Mobile-Security-Framework-MobSF/StaticAnalyzer/                                                                                                                    tools/jadx/lib/cloning-1.9.12.jar) to field java.util.TreeSet.m\r\nWARNING: Please consider reporting this to the maintainers of com.rits.cloning.Cloner\r\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\r\nWARNING: All illegal access operations will be denied in a future release\r\n^Croot@b7138f185e6e:~/Mobile-Security-Framework-MobSF# ./StaticAnalyzer/tools/jadx/bin/jadx -ds /tmp -r /root/.MobSF/uploads/60ac13724348dac5f1f5ba427f5eebbd/60ac13724348dac5f1f5ba427f5eebbd.apk\r\nWARNING: An illegal reflective access operation has occurred\r\nWARNING: Illegal reflective access by com.rits.cloning.Cloner (file:/root/Mobile-Security-Framework-MobSF/StaticAnalyzer/tools/jadx/lib/cloning-1.9.12.jar) to field java.util.TreeSet.m\r\nWARNING: Please consider reporting this to the maintainers of com.rits.cloning.Cloner\r\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\r\nWARNING: All illegal access operations will be denied in a future release\r\n\r\nand nothing more :(\r\n\r\n  **Note**: no need to copy method fallback code (commented pseudocode)\r\n- attach or provide link to apk file (double check apk version)\r\n\r\n  **Note**: GitHub don't allow attach files with `.apk` extension, but you can change extension by adding `.zip` at the end :)\r\n", "url": "https://github.com/skylot/jadx/issues/769", "user": "superpoussin22", "labels": ["Core", "bug"], "created": "2019-10-22 16:49:58", "closed": "2019-10-22 18:41:06", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Deobfuscation does not know android.support.v4 and similar names", "body": "I am deobfuscating an app containing android.support library, whose classes are obfuscated as a, b, etc. Automatic deobfuscator doesn't recognize android.support.vX as a valid name and renames vX to autogenerated unique name like C0001vX", "url": "https://github.com/skylot/jadx/issues/765", "user": "Sonic-Amiga", "labels": ["Core", "bug"], "created": "2019-10-17 10:22:42", "closed": "2019-10-17 13:33:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[core] Jadx does not load all classes (IndexOutOfBoundsException)", "body": "When loading apk of com.whatsapp 2.19.274 (452992) not all classes within the package `X` are loaded (and are therefore missing in the class tree). There is an exception which silently stops the loading process:\r\n\r\n```\r\njadx.core.utils.exceptions.JadxRuntimeException: Error decode class: X.1cX\r\n\tat jadx.core.dex.nodes.ClassNode.<init>(ClassNode.java:126)\r\n\tat jadx.core.dex.nodes.DexNode.loadClasses(DexNode.java:58)\r\n\tat jadx.core.dex.nodes.RootNode.load(RootNode.java:85)\r\n\tat jadx.api.JadxDecompiler.load(JadxDecompiler.java:91)\r\n\tat jadx.gui.JadxWrapper.openFile(JadxWrapper.java:42)\r\n\tat jadx.gui.ui.MainWindow.open(MainWindow.java:281)\r\n\tat jadx.gui.ui.MainWindow.processCommandLineArgs(MainWindow.java:164)\r\n\tat jadx.gui.ui.MainWindow.init(MainWindow.java:157)\r\n\tat java.desktop/java.awt.event.InvocationEvent.dispatch$$$capture(InvocationEvent.java:313)\r\n\tat java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java)\r\n\tat java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:770)\r\n\tat java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)\r\n\tat java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)\r\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)\r\n\tat java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:740)\r\n\tat java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)\r\n\tat java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)\r\n\tat java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)\r\n\tat java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)\r\n\tat java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\r\n\tat java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)\r\nCaused by: java.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\r\n\tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\r\n\tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:248)\r\n\tat java.base/java.util.Objects.checkIndex(Objects.java:372)\r\n\tat java.base/java.util.ArrayList.get(ArrayList.java:458)\r\n\tat java.base/java.util.Collections$UnmodifiableList.get(Collections.java:1310)\r\n\tat jadx.core.dex.nodes.MethodNode.parseSignature(MethodNode.java:211)\r\n\tat jadx.core.dex.nodes.MethodNode.initMethodTypes(MethodNode.java:177)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n\tat jadx.core.dex.nodes.ClassNode.<init>(ClassNode.java:116)\r\n\t... 21 common frames omitted\r\n```", "url": "https://github.com/skylot/jadx/issues/763", "user": "jpstotz", "labels": ["Core", "bug"], "created": "2019-10-15 15:00:05", "closed": "2019-10-17 14:08:35", "commits": {"916e7e52d86c156ef106554175c1a0e4b7b769fb": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "d9d5633bf85d57257d509126cd72375b61fd6d4a": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "d3ecc1f640cef5d0c708cfa68360e0523715e011": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "00f5e835062049a42b3ebe1dcf05045af16352b7": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "916e7e52d86c156ef106554175c1a0e4b7b769fb", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d9d5633bf85d57257d509126cd72375b61fd6d4a", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d3ecc1f640cef5d0c708cfa68360e0523715e011", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["902247fcdb87e6284778c3ea91ef67674cde751f"], "nameRev": "d3ecc1f640cef5d0c708cfa68360e0523715e011 tags/v1.1.0~20", "commitMessage": "fix: add dummy class if class loading exception occur (#763)\n", "commitDateTime": "2019-10-17 16:51:03", "authoredDateTime": "2019-10-17 13:42:48", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/DexNode.java", "insertions": 22, "deletions": 4, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DexNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.DexNode.loadClasses()", "TOT": 13, "UPD": 4, "INS": 1, "MOV": 7, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "00f5e835062049a42b3ebe1dcf05045af16352b7", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["d3ecc1f640cef5d0c708cfa68360e0523715e011"], "nameRev": "00f5e835062049a42b3ebe1dcf05045af16352b7 tags/v1.1.0~19", "commitMessage": "fix: handle incorrect args count in signature (#763)\n", "commitDateTime": "2019-10-17 16:51:06", "authoredDateTime": "2019-10-17 14:24:24", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 39, "deletions": 14, "lines": 53}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/parser/SignatureParser.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MethodNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.MethodNode.parseSignature()", "TOT": 34, "UPD": 4, "INS": 2, "MOV": 26, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.tryFixArgsCounts(java.util.List,java.util.List)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.addWarningComment(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.addWarningComment(java.lang.String,java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SignatureParser.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.parser.SignatureParser.getSignature()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d3ecc1f640cef5d0c708cfa68360e0523715e011", "00f5e835062049a42b3ebe1dcf05045af16352b7"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 65.0, "deletions": 18.0, "lines": 83.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 53.0, "UPD": 8.0, "INS": 9.0, "MOV": 33.0, "DEL": 3.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/dex/nodes/parser"], "changesInPackagesSPOON": ["jadx.core.dex.nodes.MethodNode.addWarningComment(java.lang.String,java.lang.Throwable)", "jadx.core.dex.nodes.MethodNode.tryFixArgsCounts(java.util.List,java.util.List)", "jadx.core.dex.nodes.MethodNode.parseSignature()", "jadx.core.dex.nodes.parser.SignatureParser.getSignature()", "jadx.core.dex.nodes.DexNode.loadClasses()", "jadx.core.dex.nodes.MethodNode.addWarningComment(java.lang.String)"]}, {"title": "[core] Jadx can NOT be launch on macOS 10.15 : NullPointerException", "body": "I got this error log when I try to launch jadx with \"jadx-gui\" command.\r\n\r\nJadx : \r\n1.0.0\r\n\r\nSystem : \r\nmacOS 10.15 catalina\r\n\r\nJava : java -version\r\njava version \"1.8.0_172\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_172-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.172-b11, mixed mode)\r\n\r\n```java\r\nException in thread \"main\" java.lang.ExceptionInInitializerError\r\n\tat jadx.gui.settings.JadxSettingsAdapter$1.shouldSkipField(JadxSettingsAdapter.java:36)\r\n\tat com.google.gson.internal.Excluder.excludeField(Excluder.java:184)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(ReflectiveTypeAdapterFactory.java:69)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(ReflectiveTypeAdapterFactory.java:65)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(ReflectiveTypeAdapterFactory.java:154)\r\n\tat com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.create(ReflectiveTypeAdapterFactory.java:102)\r\n\tat com.google.gson.Gson.getAdapter(Gson.java:458)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:926)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:892)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:841)\r\n\tat com.google.gson.Gson.fromJson(Gson.java:813)\r\n\tat jadx.gui.settings.JadxSettingsAdapter.fromString(JadxSettingsAdapter.java:88)\r\n\tat jadx.gui.settings.JadxSettingsAdapter.load(JadxSettingsAdapter.java:59)\r\n\tat jadx.gui.JadxGUI.main(JadxGUI.java:21)\r\nCaused by: java.lang.NullPointerException\r\n\tat sun.font.FontDesignMetrics.getDefaultFrc(FontDesignMetrics.java:157)\r\n\tat sun.font.FontDesignMetrics.getMetrics(FontDesignMetrics.java:278)\r\n\tat sun.swing.SwingUtilities2.getFontMetrics(SwingUtilities2.java:1113)\r\n\tat javax.swing.JComponent.getFontMetrics(JComponent.java:1626)\r\n\tat org.fife.ui.rtextarea.RTextAreaBase.updateMarginLineX(RTextAreaBase.java:1187)\r\n\tat org.fife.ui.rtextarea.RTextAreaBase.setFont(RTextAreaBase.java:985)\r\n\tat org.fife.ui.rsyntaxtextarea.RSyntaxTextArea.setFont(RSyntaxTextArea.java:2532)\r\n\tat javax.swing.plaf.basic.BasicTextUI.installDefaults(BasicTextUI.java:307)\r\n\tat javax.swing.plaf.basic.BasicTextAreaUI.installDefaults(BasicTextAreaUI.java:83)\r\n\tat org.fife.ui.rtextarea.RTextAreaUI.installDefaults(RTextAreaUI.java:360)\r\n\tat javax.swing.plaf.basic.BasicTextUI.installUI(BasicTextUI.java:787)\r\n\tat org.fife.ui.rtextarea.RTextAreaUI.installUI(RTextAreaUI.java:419)\r\n\tat javax.swing.JComponent.setUI(JComponent.java:666)\r\n\tat javax.swing.text.JTextComponent.setUI(JTextComponent.java:328)\r\n\tat org.fife.ui.rtextarea.RTextAreaBase.setRTextAreaUI(RTextAreaBase.java:1132)\r\n\tat org.fife.ui.rtextarea.RTextAreaBase.init(RTextAreaBase.java:658)\r\n\tat org.fife.ui.rtextarea.RTextArea.init(RTextArea.java:876)\r\n\tat org.fife.ui.rsyntaxtextarea.RSyntaxTextArea.init(RSyntaxTextArea.java:1937)\r\n\tat org.fife.ui.rtextarea.RTextAreaBase.<init>(RTextAreaBase.java:82)\r\n\tat org.fife.ui.rtextarea.RTextArea.<init>(RTextArea.java:191)\r\n\tat org.fife.ui.rsyntaxtextarea.RSyntaxTextArea.<init>(RSyntaxTextArea.java:355)\r\n\tat jadx.gui.settings.JadxSettings.<clinit>(JadxSettings.java:40)\r\n\t... 14 more\r\n```", "url": "https://github.com/skylot/jadx/issues/762", "user": "amoxicillin", "labels": ["Core", "bug"], "created": "2019-10-15 07:43:54", "closed": "2019-10-17 14:11:29", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[core]", "body": "I use jadx v1.0.0-b1144-bd9e1096,the lastest version\r\ndecompile jar error\r\n\r\nlink: https://raw.githubusercontent.com/xmhwws/AApk/master/charles.jar\r\n\r\nclass:`com.xk72.charles.gui.SplashWindow`\r\n\r\ndetail:\r\n\r\n/*  JADX ERROR: Method load error\r\n        jadx.core.utils.exceptions.DecodeException: Load method exception: Unknown instruction: 'invoke-custom' in method: com.xk72.charles.gui.SplashWindow.showRegistrationStatus():void, dex: charles.jar\r\n        \tat jadx.core.dex.nodes.MethodNode.load(MethodNode.java:151)\r\n        \tat jadx.core.dex.nodes.ClassNode.load(ClassNode.java:286)\r\n        \tat jadx.core.ProcessClass.process(ProcessClass.java:36)\r\n        \tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n        \tat jadx.core.ProcessClass.generateCode(ProcessClass.java:59)\r\n        \tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:273)\r\n        Caused by: jadx.core.utils.exceptions.DecodeException: Unknown instruction: 'invoke-custom'\r\n        \tat jadx.core.dex.instructions.InsnDecoder.decode(InsnDecoder.java:588)\r\n        \tat jadx.core.dex.instructions.InsnDecoder.process(InsnDecoder.java:78)\r\n        \tat jadx.core.dex.nodes.MethodNode.load(MethodNode.java:136)\r\n        \t... 5 more\r\n        */\r\n    public void showRegistrationStatus() {\r\n        /*\r\n        // Can't load method instructions: Load method exception: Unknown instruction: 'invoke-custom' in method: com.xk72.charles.gui.SplashWindow.showRegistrationStatus():void, dex: charles.jar\r\n        */\r\n        throw new UnsupportedOperationException(\"Method not decompiled: com.xk72.charles.gui.SplashWindow.showRegistrationStatus():void\");\r\n    }\r\n\r\nI think this is a protection against JADX, preventing its own important methods from being decompiled by jadx.", "url": "https://github.com/skylot/jadx/issues/759", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2019-10-13 14:32:49", "closed": "2019-10-15 11:54:47", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "lots of Method generation error in method", "body": "jadx 1.0.0\r\n\r\nERROR: Method generation error in method: com.myapp.someclass.-$$Lambda$ITQEjCrpuSIGnLBnCaFYuS4VA5c.run():null, dex: classes.dex\r\njava.lang.NullPointerException: null\r\n\tat jadx.core.codegen.ClassGen.useType(ClassGen.java:442)\r\n\tat jadx.core.codegen.MethodGen.addDefinition(MethodGen.java:109)\r\n\tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:311)\r\n\tat jadx.core.codegen.ClassGen.addMethods(ClassGen.java:262)\r\n\tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:225)\r\n\tat jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:661)\r\n\tat jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:595)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:353)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:223)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:105)\r\n\tat jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:773)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:713)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:357)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:239)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:213)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)\r\n\tat jadx.core.codegen.RegionGen.makeIf(RegionGen.java:138)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:210)\r\n\tat jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:203)\r\n\tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:316)\r\n\tat jadx.core.codegen.ClassGen.addMethods(ClassGen.java:262)\r\n\tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:225)\r\n\tat jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:661)\r\n\tat jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:595)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:353)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:239)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:213)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:210)\r\n\tat jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:203)\r\n\tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:316)\r\n\tat jadx.core.codegen.ClassGen.addMethods(ClassGen.java:262)\r\n\tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:225)\r\n\tat jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:661)\r\n\tat jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:595)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:353)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:223)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:105)\r\n\tat jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:773)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:713)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:357)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:223)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:105)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:88)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:682)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:357)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:223)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:105)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:88)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:682)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:357)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:223)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:105)\r\n\tat jadx.core.codegen.InsnGen.addArgDot(InsnGen.java:88)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:682)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:357)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:239)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:213)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)\r\n\tat jadx.core.codegen.RegionGen.makeIf(RegionGen.java:138)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)\r\n\tat jadx.core.codegen.RegionGen.makeIf(RegionGen.java:138)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:210)\r\n\tat jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:203)\r\n\tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:316)\r\n\tat jadx.core.codegen.ClassGen.addMethods(ClassGen.java:262)\r\n\tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:225)\r\n\tat jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:110)\r\n\tat jadx.core.codegen.ClassGen.makeClass(ClassGen.java:76)\r\n\tat jadx.core.codegen.CodeGen.wrapCodeGen(CodeGen.java:44)\r\n\tat jadx.core.codegen.CodeGen.generateJavaCode(CodeGen.java:32)\r\n\tat jadx.core.codegen.CodeGen.generate(CodeGen.java:20)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:36)\r\n\tat jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:311)\r\n\tat jadx.api.JavaClass.decompile(JavaClass.java:62)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:217)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)", "url": "https://github.com/skylot/jadx/issues/754", "user": "steelbytes", "labels": ["Core", "bug"], "created": "2019-09-25 09:26:29", "closed": "2019-10-29 11:04:45", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "jadx.core.utils.exceptions.JadxRuntimeException: Regions count limit reached", "body": "lots of Regions count limit reached in various classes.  using jadx 1.0.0 (via jadx-gui.bat)\r\n\r\nexample\r\n\r\nERROR: JadxRuntimeException in pass: RegionMakerVisitor in method: com.google.android.exoplayer.extractor.mp3.Mp3Extractor.synchronize(com.google.android.exoplayer.extractor.ExtractorInput, boolean):boolean, dex: classes.dex\r\njadx.core.utils.exceptions.JadxRuntimeException: Regions count limit reached\r\n\tat jadx.core.dex.visitors.regions.RegionMaker.makeRegion(RegionMaker.java:89)\r\n\tat jadx.core.dex.visitors.regions.RegionMaker.makeEndlessLoop(RegionMaker.java:368)\r\n\tat jadx.core.dex.visitors.regions.RegionMaker.processLoop(RegionMaker.java:172)\r\n\tat jadx.core.dex.visitors.regions.RegionMaker.traverse(RegionMaker.java:106)\r\n\tat jadx.core.dex.visitors.regions.RegionMaker.makeRegion(RegionMaker.java:86)\r\n\tat jadx.core.dex.visitors.regions.RegionMakerVisitor.visit(RegionMakerVisitor.java:49)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:27)\r\n\tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:14)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:30)\r\n\tat jadx.core.ProcessClass.lambda$processDependencies$0(ProcessClass.java:49)\r\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\r\n\tat jadx.core.ProcessClass.processDependencies(ProcessClass.java:49)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\tat jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:311)\r\n\tat jadx.api.JavaClass.decompile(JavaClass.java:62)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:217)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n", "url": "https://github.com/skylot/jadx/issues/753", "user": "steelbytes", "labels": ["Core", "bug"], "created": "2019-09-25 09:10:56", "closed": "2019-10-29 11:09:00", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "[core] Jadx not work with JRE 8 221", "body": "**Describe error**\r\nAfter upgrade to jre 8 221, i cannot run jadx, i always get a \"Could not create the Java Virtual Machine. Error: a fatal exception has occured. Program will exit.\"\r\nI have to roolback to JRE 8 152 to get it launch.\r\n\r\n jadx release version 1.0.0\r\n\r\nThanks\r\nregards\r\n", "url": "https://github.com/skylot/jadx/issues/748", "user": "thelittlefireman", "labels": ["Core", "bug"], "created": "2019-09-08 20:34:50", "closed": "2019-09-08 20:38:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[core][bug] case sensitive and insensitive errors", "body": "when running on MacBook Pro, Jadx recognises case sensitive file systems as insensitive file systems and case insensitive file systems as case sensitive.", "url": "https://github.com/skylot/jadx/issues/747", "user": "idoheinemann", "labels": ["Core", "bug"], "created": "2019-09-05 20:36:01", "closed": "2019-09-06 12:49:49", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": " JADX ERROR: UnsupportedOperationException in pass: BlockProcessor", "body": "used version jadx-gui-1.0.0 get two questions\r\n--------------------------------------------------------------------------------------\r\n```java\r\n  JADX ERROR: IndexOutOfBoundsException in pass: ClassModifier\r\n    java.lang.IndexOutOfBoundsException: Index: 0, Size: 0\r\n    \tat java.util.ArrayList.rangeCheck(Unknown Source)\r\n    \tat java.util.ArrayList.get(Unknown Source)\r\n    \tat jadx.core.dex.visitors.ClassModifier.removeFieldUsageFromConstructor(ClassModifier.java:113)\r\n    \tat jadx.core.dex.visitors.ClassModifier.removeSyntheticFields(ClassModifier.java:87)\r\n    \tat jadx.core.dex.visitors.ClassModifier.visit(ClassModifier.java:55)\r\n    \tat jadx.core.dex.visitors.ClassModifier.visit(ClassModifier.java:49)\r\n    \tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:12)\r\n    \tat jadx.core.ProcessClass.process(ProcessClass.java:30)\r\n    \tat jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:311)\r\n    \tat jadx.api.JavaClass.decompile(JavaClass.java:62)\r\n```\r\n```java\r\n  JADX ERROR: UnsupportedOperationException in pass: BlockProcessor\r\n            java.lang.UnsupportedOperationException\r\n            \tat jadx.core.utils.EmptyBitSet.set(EmptyBitSet.java:42)\r\n            \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.calcDominators(BlockProcessor.java:228)\r\n            \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.computeDominators(BlockProcessor.java:212)\r\n            \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.processBlocksTree(BlockProcessor.java:58)\r\n            \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.visit(BlockProcessor.java:45)\r\n            \tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:27)\r\n            \tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:14)\r\n            \tat java.util.ArrayList.forEach(Unknown Source)\r\n            \tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)\r\n            \tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$0(DepthTraversal.java:13)\r\n            \tat java.util.ArrayList.forEach(Unknown Source)\r\n            \tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:13)\r\n            \tat jadx.core.ProcessClass.process(ProcessClass.java:30)\r\n            \tat jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:311)\r\n            \tat jadx.api.JavaClass.decompile(JavaClass.java:62)\r\n```\r\nthen used version jadx-gui-1.0.0-b1141-db892adf get this:\r\n```java\r\n  JADX ERROR: UnsupportedOperationException in pass: BlockProcessor\r\n        java.lang.UnsupportedOperationException\r\n        \tat jadx.core.utils.EmptyBitSet.set(EmptyBitSet.java:42)\r\n        \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.calcDominators(BlockProcessor.java:228)\r\n        \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.computeDominators(BlockProcessor.java:212)\r\n        \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.processBlocksTree(BlockProcessor.java:55)\r\n        \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.visit(BlockProcessor.java:45)\r\n```\r\n[class.zip](https://github.com/skylot/jadx/files/3553700/class.zip)\r\n\r\n", "url": "https://github.com/skylot/jadx/issues/744", "user": "fgfg54321", "labels": ["Core", "bug"], "created": "2019-08-29 03:14:00", "closed": "2019-08-30 14:46:13", "commits": {"bd9e1096cc6b7efc9884c4f551f21130b5fa8463": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "bd9e1096cc6b7efc9884c4f551f21130b5fa8463", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["db892adf343c03cfc19325df014732dae2d14c63"], "nameRev": "bd9e1096cc6b7efc9884c4f551f21130b5fa8463 tags/v1.1.0~22", "commitMessage": "fix: handle methods with all NOPs (#744)\n", "commitDateTime": "2019-08-30 15:37:38", "authoredDateTime": "2019-08-30 15:11:06", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AFlag.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockProcessor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockSplitter.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMakerVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestAllNops.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/smali/others/TestAllNops.smali", "insertions": 92, "deletions": 0, "lines": 92}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AFlag.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.AFlag", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BlockProcessor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BlockSplitter.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockSplitter.splitBasicBlocks(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockSplitter.canRemoveBlock(jadx.core.dex.nodes.BlockNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockSplitter.removeEmptyDetachedBlocks(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RegionMakerVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMakerVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TestAllNops.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestAllNops", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bd9e1096cc6b7efc9884c4f551f21130b5fa8463"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 4, "lines": 12, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 6, "MOV": 4, "DEL": 0, "spoonFilesChanged": 4, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker", "jadx-core/src/main/java/jadx/core/dex/attributes", "jadx-core/src/main/java/jadx/core/dex/visitors/regions"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.blocksmaker.BlockSplitter.splitBasicBlocks(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.attributes.AFlag", "jadx.core.dex.visitors.regions.RegionMakerVisitor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.blocksmaker.BlockSplitter.canRemoveBlock(jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.blocksmaker.BlockSplitter.removeEmptyDetachedBlocks(jadx.core.dex.nodes.MethodNode)"]}, {"title": "[core] Deadlock", "body": "Hi @skylot,\r\n\r\nI've noticed that a lot of apps are not decompiled completely. I caught one of them with a deadlock \r\n\r\njadx-cli args\r\n```\r\n--no-replace-consts --show-bad-code --threads-count 8 --no-inline-anonymous --no-imports --deobf --deobf-min 2 --deobf-rewrite-cfg\r\n```\r\n\r\nOutput of ``` jstack ```\r\n```\r\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (12.0.2+10 mixed mode, sharing):\r\n\r\nThreads class SMR info:\r\n_java_thread_list=0x00007ffec3f45cc0, length=21, elements={\r\n0x00007ffec200b000, 0x00007ffec60b1800, 0x00007ffec2004000, 0x00007ffec5834000,\r\n0x00007ffec5833000, 0x00007ffec5837000, 0x00007ffec5008800, 0x00007ffec5860000,\r\n0x00007ffec508f800, 0x00007ffec2923000, 0x00007ffec662e000, 0x00007ffec7755000,\r\n0x00007ffec30af000, 0x00007ffec30b2000, 0x00007ffec4115000, 0x00007ffec32f3800,\r\n0x00007ffec4116000, 0x00007ffec32fe800, 0x00007ffec5a9a000, 0x00007ffec742f000,\r\n0x00007ffec8341800\r\n}\r\n\r\n\"main\" #1 prio=5 os_prio=31 cpu=6028.67ms elapsed=150.42s tid=0x00007ffec200b000 nid=0x2203 waiting on condition  [0x000070000eb68000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n\tat jdk.internal.misc.Unsafe.park(java.base@12.0.2/Native Method)\r\n\t- parking to wait for  <0x000000046b2754d0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n\tat java.util.concurrent.locks.LockSupport.parkNanos(java.base@12.0.2/LockSupport.java:235)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(java.base@12.0.2/AbstractQueuedSynchronizer.java:2123)\r\n\tat java.util.concurrent.ThreadPoolExecutor.awaitTermination(java.base@12.0.2/ThreadPoolExecutor.java:1454)\r\n\tat jadx.api.JadxDecompiler.save(JadxDecompiler.java:143)\r\n\tat jadx.api.JadxDecompiler.save(JadxDecompiler.java:128)\r\n\tat jadx.cli.JadxCLI.processAndSave(JadxCLI.java:39)\r\n\tat jadx.cli.JadxCLI.main(JadxCLI.java:19)\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"Reference Handler\" #2 daemon prio=10 os_prio=31 cpu=1.32ms elapsed=150.40s tid=0x00007ffec60b1800 nid=0x4403 waiting on condition  [0x000070001007d000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat java.lang.ref.Reference.waitForReferencePendingList(java.base@12.0.2/Native Method)\r\n\tat java.lang.ref.Reference.processPendingReferences(java.base@12.0.2/Reference.java:241)\r\n\tat java.lang.ref.Reference$ReferenceHandler.run(java.base@12.0.2/Reference.java:213)\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"Finalizer\" #3 daemon prio=8 os_prio=31 cpu=0.20ms elapsed=150.40s tid=0x00007ffec2004000 nid=0x3703 in Object.wait()  [0x0000700010f80000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n\tat java.lang.Object.wait(java.base@12.0.2/Native Method)\r\n\t- waiting on <0x000000044479a3d0> (a java.lang.ref.ReferenceQueue$Lock)\r\n\tat java.lang.ref.ReferenceQueue.remove(java.base@12.0.2/ReferenceQueue.java:155)\r\n\t- locked <0x000000044479a3d0> (a java.lang.ref.ReferenceQueue$Lock)\r\n\tat java.lang.ref.ReferenceQueue.remove(java.base@12.0.2/ReferenceQueue.java:176)\r\n\tat java.lang.ref.Finalizer$FinalizerThread.run(java.base@12.0.2/Finalizer.java:170)\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"Signal Dispatcher\" #4 daemon prio=9 os_prio=31 cpu=0.26ms elapsed=150.40s tid=0x00007ffec5834000 nid=0x3d03 runnable  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"C2 CompilerThread0\" #5 daemon prio=9 os_prio=31 cpu=9832.54ms elapsed=150.40s tid=0x00007ffec5833000 nid=0xa903 waiting on condition  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n   No compile task\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"C1 CompilerThread0\" #8 daemon prio=9 os_prio=31 cpu=3159.32ms elapsed=150.40s tid=0x00007ffec5837000 nid=0x5603 waiting on condition  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n   No compile task\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"Sweeper thread\" #9 daemon prio=9 os_prio=31 cpu=82.48ms elapsed=150.40s tid=0x00007ffec5008800 nid=0xa603 runnable  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"Service Thread\" #10 daemon prio=9 os_prio=31 cpu=4.99ms elapsed=150.38s tid=0x00007ffec5860000 nid=0x5903 runnable  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"Common-Cleaner\" #11 daemon prio=8 os_prio=31 cpu=1.34ms elapsed=150.38s tid=0x00007ffec508f800 nid=0x5c03 in Object.wait()  [0x0000700014e95000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n\tat java.lang.Object.wait(java.base@12.0.2/Native Method)\r\n\t- waiting on <no object reference available>\r\n\tat java.lang.ref.ReferenceQueue.remove(java.base@12.0.2/ReferenceQueue.java:155)\r\n\t- locked <0x000000044479ad88> (a java.lang.ref.ReferenceQueue$Lock)\r\n\tat jdk.internal.ref.CleanerImpl.run(java.base@12.0.2/CleanerImpl.java:148)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\tat jdk.internal.misc.InnocuousThread.run(java.base@12.0.2/InnocuousThread.java:134)\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"pool-1-thread-1\" #12 prio=5 os_prio=31 cpu=2235.01ms elapsed=143.88s tid=0x00007ffec2923000 nid=0x8f03 waiting for monitor entry  [0x0000700016ecb000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a58f28> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass$$Lambda$153/0x000000080127a840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x00000004423df9f0> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n\t- <0x000000046b276298> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"pool-1-thread-2\" #13 prio=5 os_prio=31 cpu=4026.55ms elapsed=143.88s tid=0x00007ffec662e000 nid=0x8c03 waiting for monitor entry  [0x0000700017dce000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a53c20> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass$$Lambda$153/0x000000080127a840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x00000004423d76b8> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n\t- <0x000000046b2eadd8> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"pool-1-thread-3\" #14 prio=5 os_prio=31 cpu=2233.49ms elapsed=143.88s tid=0x00007ffec7755000 nid=0x7003 waiting for monitor entry  [0x0000700018cd0000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a58f28> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.dex.nodes.ClassNode.loadAndProcess(ClassNode.java:251)\r\n\tat jadx.core.dex.nodes.RootNode.getClassGenerics(RootNode.java:279)\r\n\tat jadx.core.utils.TypeUtils.replaceClassGenerics(TypeUtils.java:35)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.invokeListener(TypeUpdate.java:296)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$45/0x00000008011adc40.update(Unknown Source)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.apply(TypeUpdate.java:73)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.apply(TypeUpdate.java:50)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.applyImmutableType(TypeInferenceVisitor.java:155)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setImmutableType(TypeInferenceVisitor.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor$$Lambda$126/0x000000080126b840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runTypePropagation(TypeInferenceVisitor.java:102)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(TypeInferenceVisitor.java:71)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:30)\r\n\tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:15)\r\n\tat jadx.core.dex.visitors.DepthTraversal$$Lambda$90/0x0000000801246840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:15)\r\n\tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$0(DepthTraversal.java:14)\r\n\tat jadx.core.dex.visitors.DepthTraversal$$Lambda$89/0x0000000801247440.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:43)\r\n\t- locked <0x0000000444a53c20> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass$$Lambda$153/0x000000080127a840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x00000004422eb2f0> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n\t- <0x000000046b3604f8> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"pool-1-thread-4\" #15 prio=5 os_prio=31 cpu=2264.72ms elapsed=143.88s tid=0x00007ffec30af000 nid=0x8703 waiting for monitor entry  [0x0000700019bd4000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a58f28> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass$$Lambda$153/0x000000080127a840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x00000004423f94e8> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n\t- <0x000000046b3d5550> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"pool-1-thread-5\" #16 prio=5 os_prio=31 cpu=2017.32ms elapsed=143.88s tid=0x00007ffec30b2000 nid=0x7203 waiting for monitor entry  [0x000070001aad7000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a53c20> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass$$Lambda$153/0x000000080127a840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x00000004423a1f28> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n\t- <0x000000046b000360> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"pool-1-thread-6\" #17 prio=5 os_prio=31 cpu=2136.99ms elapsed=143.88s tid=0x00007ffec4115000 nid=0x7303 waiting for monitor entry  [0x000070001b9da000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a53c20> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:60)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x000000044243a208> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n\t- <0x000000046b0eac38> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"pool-1-thread-7\" #18 prio=5 os_prio=31 cpu=2134.24ms elapsed=143.88s tid=0x00007ffec32f3800 nid=0x7403 waiting for monitor entry  [0x000070001c8db000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a53c20> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:27)\r\n\tat jadx.core.dex.nodes.ClassNode.loadAndProcess(ClassNode.java:251)\r\n\tat jadx.core.dex.nodes.RootNode.getClassGenerics(RootNode.java:279)\r\n\tat jadx.core.utils.TypeUtils.replaceClassGenerics(TypeUtils.java:35)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.invokeListener(TypeUpdate.java:296)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$45/0x00000008011adc40.update(Unknown Source)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$36/0x00000008011af840.update(Unknown Source)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$36/0x00000008011af840.update(Unknown Source)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$36/0x00000008011af840.update(Unknown Source)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.apply(TypeUpdate.java:73)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.apply(TypeUpdate.java:50)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.applyImmutableType(TypeInferenceVisitor.java:155)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setImmutableType(TypeInferenceVisitor.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor$$Lambda$126/0x000000080126b840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runTypePropagation(TypeInferenceVisitor.java:102)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(TypeInferenceVisitor.java:71)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:30)\r\n\tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:15)\r\n\tat jadx.core.dex.visitors.DepthTraversal$$Lambda$90/0x0000000801246840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:15)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:43)\r\n\t- locked <0x0000000444a58f28> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:60)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x00000004423a5b08> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n\t- <0x000000046b075828> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"pool-1-thread-8\" #19 prio=5 os_prio=31 cpu=2154.06ms elapsed=143.87s tid=0x00007ffec4116000 nid=0x8003 waiting for monitor entry  [0x000070001d7e0000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a58f28> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass$$Lambda$153/0x000000080127a840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x0000000446a769b8> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n\t- <0x000000046b2eb100> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"Java2D Disposer\" #21 daemon prio=10 os_prio=31 cpu=1.86ms elapsed=141.24s tid=0x00007ffec32fe800 nid=0x7907 in Object.wait()  [0x000070001e6e3000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n\tat java.lang.Object.wait(java.base@12.0.2/Native Method)\r\n\t- waiting on <0x000000046b3d56f8> (a java.lang.ref.ReferenceQueue$Lock)\r\n\tat java.lang.ref.ReferenceQueue.remove(java.base@12.0.2/ReferenceQueue.java:155)\r\n\t- locked <0x000000046b3d56f8> (a java.lang.ref.ReferenceQueue$Lock)\r\n\tat java.lang.ref.ReferenceQueue.remove(java.base@12.0.2/ReferenceQueue.java:176)\r\n\tat sun.java2d.Disposer.run(java.desktop@12.0.2/Disposer.java:144)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"AppKit Thread\" #22 daemon prio=5 os_prio=31 cpu=264.56ms elapsed=141.21s tid=0x00007ffec5a9a000 nid=0x307 runnable  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"Java2D Queue Flusher\" #24 daemon prio=10 os_prio=31 cpu=83.59ms elapsed=140.95s tid=0x00007ffec742f000 nid=0xf507 in Object.wait()  [0x00007000207fb000]\r\n   java.lang.Thread.State: TIMED_WAITING (on object monitor)\r\n\tat java.lang.Object.wait(java.base@12.0.2/Native Method)\r\n\t- waiting on <no object reference available>\r\n\tat sun.java2d.opengl.OGLRenderQueue$QueueFlusher.run(java.desktop@12.0.2/OGLRenderQueue.java:205)\r\n\t- locked <0x000000046b075b48> (a sun.java2d.opengl.OGLRenderQueue$QueueFlusher)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"Attach Listener\" #54 daemon prio=9 os_prio=31 cpu=0.61ms elapsed=0.57s tid=0x00007ffec8341800 nid=0xc063 waiting on condition  [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n\t- None\r\n\r\n\"VM Thread\" os_prio=31 cpu=583.42ms elapsed=150.41s tid=0x00007ffec5832000 nid=0x4503 runnable  \r\n\r\n\"GC Thread#0\" os_prio=31 cpu=357.17ms elapsed=150.42s tid=0x00007ffec581e800 nid=0x4f03 runnable  \r\n\r\n\"GC Thread#1\" os_prio=31 cpu=372.99ms elapsed=149.43s tid=0x00007ffec60a1800 nid=0x5f07 runnable  \r\n\r\n\"GC Thread#2\" os_prio=31 cpu=364.40ms elapsed=149.43s tid=0x00007ffec6158000 nid=0x5e07 runnable  \r\n\r\n\"GC Thread#3\" os_prio=31 cpu=363.83ms elapsed=149.43s tid=0x00007ffec6159000 nid=0x6207 runnable  \r\n\r\n\"GC Thread#4\" os_prio=31 cpu=378.84ms elapsed=149.43s tid=0x00007ffec2018000 nid=0xa003 runnable  \r\n\r\n\"GC Thread#5\" os_prio=31 cpu=374.66ms elapsed=149.43s tid=0x00007ffec6152000 nid=0x6403 runnable  \r\n\r\n\"GC Thread#6\" os_prio=31 cpu=245.64ms elapsed=148.57s tid=0x00007ffec290d000 nid=0x6e03 runnable  \r\n\r\n\"GC Thread#7\" os_prio=31 cpu=247.52ms elapsed=148.57s tid=0x00007ffec304e000 nid=0x9103 runnable  \r\n\r\n\"G1 Main Marker\" os_prio=31 cpu=0.56ms elapsed=150.42s tid=0x00007ffec500a000 nid=0x4d03 runnable  \r\n\r\n\"G1 Conc#0\" os_prio=31 cpu=230.08ms elapsed=150.42s tid=0x00007ffec581f800 nid=0x4a03 runnable  \r\n\r\n\"G1 Conc#1\" os_prio=31 cpu=235.44ms elapsed=148.63s tid=0x00007ffec49d7800 nid=0x6d03 runnable  \r\n\r\n\"G1 Refine#0\" os_prio=31 cpu=285.65ms elapsed=150.41s tid=0x00007ffec60a0000 nid=0x3003 runnable  \r\n\r\n\"G1 Refine#1\" os_prio=31 cpu=116.28ms elapsed=148.85s tid=0x00007ffec3099000 nid=0x9b03 runnable  \r\n\r\n\"G1 Refine#2\" os_prio=31 cpu=81.27ms elapsed=148.85s tid=0x00007ffec5861800 nid=0x9a03 runnable  \r\n\r\n\"G1 Refine#3\" os_prio=31 cpu=56.36ms elapsed=148.85s tid=0x00007ffec309a000 nid=0x9803 runnable  \r\n\r\n\"G1 Refine#4\" os_prio=31 cpu=50.29ms elapsed=148.85s tid=0x00007ffec291f000 nid=0x9603 runnable  \r\n\r\n\"G1 Refine#5\" os_prio=31 cpu=27.60ms elapsed=148.85s tid=0x00007ffec40c3800 nid=0x6a03 runnable  \r\n\r\n\"G1 Refine#6\" os_prio=31 cpu=26.09ms elapsed=148.85s tid=0x00007ffec309a800 nid=0x9403 runnable  \r\n\r\n\"G1 Refine#7\" os_prio=31 cpu=27.13ms elapsed=148.84s tid=0x00007ffec309b800 nid=0x6b03 runnable  \r\n\r\n\"G1 Young RemSet Sampling\" os_prio=31 cpu=129.26ms elapsed=150.41s tid=0x00007ffec60a1000 nid=0x4803 runnable  \r\n\"VM Periodic Task Thread\" os_prio=31 cpu=118.62ms elapsed=150.38s tid=0x00007ffec508e800 nid=0xa303 waiting on condition  \r\n\r\nJNI global refs: 77, weak refs: 2\r\n\r\n\r\nFound one Java-level deadlock:\r\n=============================\r\n\"pool-1-thread-1\":\r\n  waiting to lock monitor 0x000000014600b200 (object 0x0000000444a58f28, a jadx.core.dex.info.ClassInfo),\r\n  which is held by \"pool-1-thread-7\"\r\n\"pool-1-thread-7\":\r\n  waiting to lock monitor 0x0000000145e9ee00 (object 0x0000000444a53c20, a jadx.core.dex.info.ClassInfo),\r\n  which is held by \"pool-1-thread-3\"\r\n\"pool-1-thread-3\":\r\n  waiting to lock monitor 0x000000014600b200 (object 0x0000000444a58f28, a jadx.core.dex.info.ClassInfo),\r\n  which is held by \"pool-1-thread-7\"\r\n\r\nJava stack information for the threads listed above:\r\n===================================================\r\n\"pool-1-thread-1\":\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a58f28> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass$$Lambda$153/0x000000080127a840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x00000004423df9f0> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\"pool-1-thread-7\":\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a53c20> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:27)\r\n\tat jadx.core.dex.nodes.ClassNode.loadAndProcess(ClassNode.java:251)\r\n\tat jadx.core.dex.nodes.RootNode.getClassGenerics(RootNode.java:279)\r\n\tat jadx.core.utils.TypeUtils.replaceClassGenerics(TypeUtils.java:35)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.invokeListener(TypeUpdate.java:296)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$45/0x00000008011adc40.update(Unknown Source)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$36/0x00000008011af840.update(Unknown Source)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$36/0x00000008011af840.update(Unknown Source)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:142)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(TypeUpdate.java:324)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$36/0x00000008011af840.update(Unknown Source)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.apply(TypeUpdate.java:73)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.apply(TypeUpdate.java:50)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.applyImmutableType(TypeInferenceVisitor.java:155)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setImmutableType(TypeInferenceVisitor.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor$$Lambda$126/0x000000080126b840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runTypePropagation(TypeInferenceVisitor.java:102)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(TypeInferenceVisitor.java:71)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:30)\r\n\tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:15)\r\n\tat jadx.core.dex.visitors.DepthTraversal$$Lambda$90/0x0000000801246840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:15)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:43)\r\n\t- locked <0x0000000444a58f28> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:60)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x00000004423a5b08> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\"pool-1-thread-3\":\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n\t- waiting to lock <0x0000000444a58f28> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.dex.nodes.ClassNode.loadAndProcess(ClassNode.java:251)\r\n\tat jadx.core.dex.nodes.RootNode.getClassGenerics(RootNode.java:279)\r\n\tat jadx.core.utils.TypeUtils.replaceClassGenerics(TypeUtils.java:35)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.invokeListener(TypeUpdate.java:296)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate$$Lambda$45/0x00000008011adc40.update(Unknown Source)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.runListeners(TypeUpdate.java:190)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdate(TypeUpdate.java:171)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.requestUpdateForSsaVar(TypeUpdate.java:148)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeForSsaVar(TypeUpdate.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(TypeUpdate.java:116)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.apply(TypeUpdate.java:73)\r\n\tat jadx.core.dex.visitors.typeinference.TypeUpdate.apply(TypeUpdate.java:50)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.applyImmutableType(TypeInferenceVisitor.java:155)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.setImmutableType(TypeInferenceVisitor.java:136)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor$$Lambda$126/0x000000080126b840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runTypePropagation(TypeInferenceVisitor.java:102)\r\n\tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(TypeInferenceVisitor.java:71)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:30)\r\n\tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:15)\r\n\tat jadx.core.dex.visitors.DepthTraversal$$Lambda$90/0x0000000801246840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:15)\r\n\tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$0(DepthTraversal.java:14)\r\n\tat jadx.core.dex.visitors.DepthTraversal$$Lambda$89/0x0000000801247440.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:43)\r\n\t- locked <0x0000000444a53c20> (a jadx.core.dex.info.ClassInfo)\r\n\tat jadx.core.ProcessClass$$Lambda$153/0x000000080127a840.accept(Unknown Source)\r\n\tat java.util.ArrayList.forEach(java.base@12.0.2/ArrayList.java:1540)\r\n\tat jadx.core.ProcessClass.generateCode(ProcessClass.java:61)\r\n\tat jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:262)\r\n\t- locked <0x00000004422eb2f0> (a jadx.core.dex.nodes.ClassNode)\r\n\tat jadx.api.JavaClass.getCodeInfo(JavaClass.java:53)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:201)\r\n\tat jadx.api.JadxDecompiler$$Lambda$74/0x00000008011f0040.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(java.base@12.0.2/ThreadPoolExecutor.java:1128)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(java.base@12.0.2/ThreadPoolExecutor.java:628)\r\n\tat java.lang.Thread.run(java.base@12.0.2/Thread.java:835)\r\n\r\nFound 1 deadlock.\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/18wPwqqSeeppz5LDybFX3CLvAZJ3sB7JJ/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/743", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-08-27 11:04:12", "closed": "2019-08-27 17:31:40", "commits": {"db892adf343c03cfc19325df014732dae2d14c63": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "db892adf343c03cfc19325df014732dae2d14c63", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["1cbaad3ec982032de96a4a7f34033634cf2b7ca0"], "nameRev": "db892adf343c03cfc19325df014732dae2d14c63 tags/v1.1.0~23", "commitMessage": "fix: don't run class process from visitors to avoid deadlock (#743)\n", "commitDateTime": "2019-08-27 17:24:18", "authoredDateTime": "2019-08-27 16:34:43", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/ProcessClass.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 5, "deletions": 18, "lines": 23}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java", "insertions": 23, "deletions": 12, "lines": 35}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ProcessState.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/IntegrationTest.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ProcessClass.java", "spoonMethods": [{"spoonMethodName": "jadx.core.ProcessClass.process(jadx.core.dex.nodes.ClassNode)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.makeConstructor(jadx.core.dex.instructions.mods.ConstructorInsn,jadx.core.codegen.CodeWriter)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.codegen.InsnGen.processOverloadedArg(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,int)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "ClassNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.ClassNode.loadAndProcess()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.initAccessFlags(com.android.dex.ClassDef)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "MethodNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.MethodNode.load()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.initMethodTypes()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.getArgTypes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessState.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.ProcessState.isLoaded()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ProcessState.isProcessed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RootNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.RootNode.getClassGenerics(jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ModVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.processAnonymousConstructor(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "IntegrationTest.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.api.IntegrationTest.decompileWithoutUnload(jadx.api.JadxDecompiler,jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["db892adf343c03cfc19325df014732dae2d14c63"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 46, "deletions": 44, "lines": 90, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 27, "UPD": 4, "INS": 8, "MOV": 9, "DEL": 6, "spoonFilesChanged": 7, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core"], "changesInPackagesSPOON": ["jadx.core.dex.nodes.MethodNode.load()", "jadx.core.ProcessClass.process(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.nodes.MethodNode.initMethodTypes()", "jadx.core.dex.nodes.ProcessState.isProcessed()", "jadx.core.codegen.InsnGen.makeConstructor(jadx.core.dex.instructions.mods.ConstructorInsn,jadx.core.codegen.CodeWriter)", "jadx.core.dex.nodes.ClassNode.loadAndProcess()", "jadx.core.dex.nodes.MethodNode.getArgTypes()", "jadx.core.dex.visitors.ModVisitor.processAnonymousConstructor(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "jadx.core.dex.nodes.RootNode.getClassGenerics(jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.nodes.ClassNode", "jadx.core.dex.nodes.ClassNode.initAccessFlags(com.android.dex.ClassDef)", "jadx.core.dex.nodes.ProcessState.isLoaded()", "jadx.core.codegen.InsnGen.processOverloadedArg(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,int)"]}, {"title": "[core]Decompile an apk, the progress bar has been stuck at 18%", "body": "Decompile an apk, the progress bar has been stuck at 18%\r\n![2019-08-17_21-13-00](https://user-images.githubusercontent.com/42903751/63212301-be7f8880-c134-11e9-8ca1-4aab0249602b.png)\r\nHowever, JEB can successfully decompile the apk.\r\nI guess this should be a bug.\r\nThis apk download \r\n link:https://raw.githubusercontent.com/xmhwws/AApk/master/cool.dingstock.mobile_1.3.4.apk", "url": "https://github.com/skylot/jadx/issues/741", "user": "xmhwws", "labels": ["Core", "bug"], "created": "2019-08-17 13:28:57", "closed": "2019-08-18 10:15:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[core] Use of register instead of variable name", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nFile ``` com/paypal/android/p2pmobile/p2p/common/presenters/P2PStringProvider.java ```\r\n```java\r\n    public int translateKey(String str) {\r\n        try {\r\n            return C2675R.string.class.getField(this.mStringIdPrefix + str).getInt(null);\r\n        } catch (Exception unused) {\r\n            Log.e(LOG_TAG, \"Failure to get string id '\" + r4 + \"'\"); // str should be here?\r\n            return 0;\r\n        }\r\n    }\r\n```\r\nAPK: https://drive.google.com/file/d/1AH04tuU-rwCGpznW5IrjlunnxApQGnLo/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/731", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-31 11:27:21", "closed": "2020-01-24 19:21:18", "commits": {}, "ttf": 177.00027777777777, "commitsDetails": []}, {"title": "[core] Use of a not initialized variable", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nHi, file ``` com/paypal/android/p2pmobile/settings/smc/fragments/SecureMessageCenterFileChooserFragment.java ```\r\n```java\r\n    private void launchPickPhotoFromLibrary() {\r\n        String sb;\r\n        String[] strArr = {\"image/jpeg\", \"image/png\", \"image/gif\", \"application/pdf\"};\r\n        Intent intent = new Intent(\"android.intent.action.GET_CONTENT\");\r\n        intent.addCategory(\"android.intent.category.OPENABLE\");\r\n        if (Build.VERSION.SDK_INT >= 19) {\r\n            intent.setType(\"*/*\");\r\n            intent.putExtra(\"android.intent.extra.MIME_TYPES\", strArr);\r\n        } else {\r\n            StringBuilder sb2 = new StringBuilder();\r\n            for (String append : strArr) {\r\n                sb2.append(append);\r\n                sb2.append(\"|\");\r\n            }\r\n            intent.setType(sb.substring(0, sb2.toString().length() - 1)); // <<< sb is never initialized\r\n        }\r\n        startActivityForResult(Intent.createChooser(intent, null), 2);\r\n    }\r\n```\r\nAPK: https://drive.google.com/file/d/1AH04tuU-rwCGpznW5IrjlunnxApQGnLo/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/730", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-31 11:21:34", "closed": "2020-02-17 06:37:53", "commits": {}, "ttf": 200.00027777777777, "commitsDetails": []}, {"title": "[core] Change class modifiers if used outside the package", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nHi, I've noticed a lot of classes (which in their past life were lambdas/anonymous classes) placed to different package, but have package-private modifiers. Example is in file ``` com/paypal/android/sdk/contactless/reader/tlv/TLVTransformer.java ```\r\n```java\r\n    public static final TLVTransformer<String> TO_HEX_STRING_NO_WHITESPACE = new p000.C3854Zg();\r\n```\r\nand\r\n```java\r\npackage p000;\r\n\r\n/* renamed from: Zg  reason: case insensitive filesystem */\r\nclass C3854Zg implements TLVTransformer<String> {\r\n```\r\n\r\nCan it be changed to ``` public ``` (as a part of ``` --respect-bytecode-access-modifiers ``` argument)?\r\n\r\nAPK: https://drive.google.com/file/d/1AH04tuU-rwCGpznW5IrjlunnxApQGnLo/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/729", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-31 10:39:58", "closed": "2020-05-29 17:15:01", "commits": {"d720179debbb27c7deadbfcb231bcade9176f966": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "15776c4ce30be9ab262b035a36402ce25facfe3f": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "e7b00cc76ec1f72a199911aa6f0cd41ee246b811": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "ae31fee8dd8d58e8fa007d0c201f11649966af5d": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 303.0002777777778, "commitsDetails": [{"commitHash": "d720179debbb27c7deadbfcb231bcade9176f966", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["0d69e0ac971f53fd89dd15db16d7c5dd21c7fbb5"], "nameRev": "d720179debbb27c7deadbfcb231bcade9176f966 master~13", "commitMessage": "fix: collect class usage and fix class access modifiers (#729)\n", "commitDateTime": "2020-05-22 12:29:34", "authoredDateTime": "2020-05-21 21:56:58", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/api/JadxDecompiler.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/Jadx.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "jadx-core/src/main/java/jadx/core/ProcessClass.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java", "insertions": 20, "deletions": 2, "lines": 22}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/DependencyCollector.java", "insertions": 95, "deletions": 49, "lines": 144}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/FixAccessModifiers.java", "insertions": 44, "deletions": 2, "lines": 46}, {"filePath": "jadx-core/src/test/java/jadx/tests/functional/JadxVisitorsOrderTest.java", "insertions": 7, "deletions": 3, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JadxDecompiler.java", "spoonMethods": [{"spoonMethodName": "jadx.api.JadxDecompiler.load()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Jadx.java", "spoonMethods": [{"spoonMethodName": "jadx.core.Jadx.getPreDecompilePassesList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ProcessClass.java", "spoonMethods": [{"spoonMethodName": "jadx.core.ProcessClass.generateCode(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ClassNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.ClassNode", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.isInner()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.getUsedIn()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.setUsedIn(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.compareTo(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RootNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.RootNode.runPreDecompileStage()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.RootNode.getClassesWithoutInner()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DependencyCollector.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.visit(jadx.core.dex.nodes.ClassNode)", "TOT": 15, "UPD": 4, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.processMethod(jadx.core.dex.nodes.RootNode,java.util.Set,jadx.core.dex.nodes.MethodNode)", "TOT": 20, "UPD": 10, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.processInsn(jadx.core.dex.nodes.RootNode,java.util.Set,jadx.core.dex.nodes.InsnNode)", "TOT": 27, "UPD": 17, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.processCustomInsn(jadx.core.dex.nodes.RootNode,java.util.Set,jadx.core.dex.nodes.InsnNode)", "TOT": 33, "UPD": 15, "INS": 0, "MOV": 17, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.processClass(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.RootNode,java.util.Set)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.collectClassDeps(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.processInsn(jadx.core.dex.nodes.RootNode,jadx.api.plugins.input.insns.InsnData,java.util.Set)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.resolveType(jadx.core.dex.nodes.RootNode,java.util.Set,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.resolveMethod(jadx.core.dex.nodes.RootNode,java.util.Set,jadx.api.plugins.input.data.IMethodData)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.resolveField(jadx.core.dex.nodes.RootNode,java.util.Set,jadx.api.plugins.input.data.IFieldData)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.buildUsageList(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector.processInstructions(jadx.core.dex.nodes.MethodNode,java.util.Set)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FixAccessModifiers.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.FixAccessModifiers.fixVisibility(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.FixAccessModifiers.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.FixAccessModifiers.visit(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.FixAccessModifiers.fixClassVisibility(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JadxVisitorsOrderTest.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.functional.JadxVisitorsOrderTest.testOrder()", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "jadx.tests.functional.JadxVisitorsOrderTest.check(java.util.List)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.tests.functional.JadxVisitorsOrderTest.checkPassList(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "15776c4ce30be9ab262b035a36402ce25facfe3f", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["d720179debbb27c7deadbfcb231bcade9176f966"], "nameRev": "15776c4ce30be9ab262b035a36402ce25facfe3f master~12", "commitMessage": "fix: make class public if some method going to be inlined (#729)\n", "commitDateTime": "2020-05-26 21:23:27", "authoredDateTime": "2020-05-24 20:30:39", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/Consts.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/Jadx.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/ProcessClass.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/ClassGen.java", "insertions": 41, "deletions": 5, "lines": 46}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/MethodGen.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java", "insertions": 18, "deletions": 7, "lines": 25}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/FieldNode.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ProcessState.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/DependencyCollector.java", "insertions": 0, "deletions": 186, "lines": 186}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/FixAccessModifiers.java", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/MethodInlineVisitor.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/usage/UsageInfo.java", "insertions": 101, "deletions": 0, "lines": 101}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/usage/UsageInfoVisitor.java", "insertions": 115, "deletions": 0, "lines": 115}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/usage/UseSet.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/SmaliTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/utils/assertj/JadxAssertions.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/inline/TestMethodInline.java", "insertions": 55, "deletions": 0, "lines": 55}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestFixClassAccessModifiers.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "jadx-core/src/test/smali/inline/TestMethodInline/A.smali", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "jadx-core/src/test/smali/inline/TestMethodInline/B.smali", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "jadx-core/src/test/smali/inline/TestMethodInline/C.smali", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "jadx-core/src/test/smali/others/TestFixClassAccessModifiers/Cls.smali", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "jadx-core/src/test/smali/others/TestFixClassAccessModifiers/InnerCls.smali", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "jadx-core/src/test/smali/others/TestFixClassAccessModifiers/TestCls.smali", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Consts.java", "spoonMethods": [{"spoonMethodName": "jadx.core.Consts", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Jadx.java", "spoonMethods": [{"spoonMethodName": "jadx.core.Jadx.getPreDecompilePassesList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessClass.java", "spoonMethods": [{"spoonMethodName": "jadx.core.ProcessClass.generateCode(jadx.core.dex.nodes.ClassNode)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.ClassGen.useClassInternal(jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "jadx.core.codegen.ClassGen.addClassUsageInfo(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.ClassGen.addMthUsageInfo(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.ClassGen.addFieldUsageInfo(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.FieldNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.ClassGen.addClassCode(jadx.core.codegen.CodeWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.ClassGen.addField(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.FieldNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.MethodGen.addDefinition(jadx.core.codegen.CodeWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.ClassNode", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.getUsedIn()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.setUsedIn(java.util.List)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.unload()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.getUseInMth()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.setUseInMth(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FieldNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.FieldNode", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.FieldNode.getUseIn()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.FieldNode.setUseIn(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.MethodNode", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.getUseIn()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.setUseIn(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.compareTo(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessState.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.ProcessState.isLoaded()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.nodes.ProcessState.isProcessed()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.nodes.ProcessState", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DependencyCollector.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.DependencyCollector", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "FixAccessModifiers.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.FixAccessModifiers.fixClassVisibility(jadx.core.dex.nodes.ClassNode)", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodInlineVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.MethodInlineVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 12, "UPD": 0, "INS": 2, "MOV": 9, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.MethodInlineVisitor.canInline(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UsageInfo.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.usage.UsageInfo", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UsageInfoVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.usage.UsageInfoVisitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UseSet.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.usage.UseSet", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SmaliTest.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.api.SmaliTest.compileSmali(java.io.File,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JadxAssertions.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.api.utils.assertj.JadxAssertions.assertThat(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.api.utils.assertj.JadxAssertions.assertThat(jadx.api.ICodeInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestMethodInline.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.inline.TestMethodInline", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestFixClassAccessModifiers.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestFixClassAccessModifiers", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e7b00cc76ec1f72a199911aa6f0cd41ee246b811", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["7d29c5d7663c64c4ca45ef9b94fdf01adda31b09"], "nameRev": "e7b00cc76ec1f72a199911aa6f0cd41ee246b811 master~10", "commitMessage": "fix: add methods and fields types into usage info (#729)\n", "commitDateTime": "2020-05-27 20:55:32", "authoredDateTime": "2020-05-27 20:55:32", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/usage/UsageInfo.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "UsageInfo.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.usage.UsageInfo.methodUse(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.usage.UsageInfo.fieldUse(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.FieldNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ae31fee8dd8d58e8fa007d0c201f11649966af5d", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["e7b00cc76ec1f72a199911aa6f0cd41ee246b811"], "nameRev": "ae31fee8dd8d58e8fa007d0c201f11649966af5d master~9", "commitMessage": "fix: add cast to exact type on field access (#729)\n", "commitDateTime": "2020-05-29 17:53:39", "authoredDateTime": "2020-05-29 17:39:15", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/IndexInsnNode.java", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestFieldAccess.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IndexInsnNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.IndexInsnNode.toString()", "TOT": 13, "UPD": 0, "INS": 7, "MOV": 5, "DEL": 1}]}, {"spoonFilePath": "RootNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.RootNode.getTypeCompare()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ModVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.fixTypeForFieldAccess(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.IndexInsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.replaceStep(jadx.core.dex.nodes.MethodNode,jadx.core.utils.InsnRemover)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestFieldAccess.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestFieldAccess", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d720179debbb27c7deadbfcb231bcade9176f966", "15776c4ce30be9ab262b035a36402ce25facfe3f", "e7b00cc76ec1f72a199911aa6f0cd41ee246b811", "ae31fee8dd8d58e8fa007d0c201f11649966af5d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 4, "gitStatsSummary": {"insertions": 606, "deletions": 278, "lines": 884, "gitFilesChange": 19}, "spoonStatsSummary": {"TOT": 207, "UPD": 61, "INS": 65, "MOV": 68, "DEL": 13, "spoonFilesChanged": 20, "spoonMethodsChanged": 62}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/visitors/usage", "jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/api", "jadx-core/src/main/java/jadx/core/dex/instructions"], "changesInPackagesSPOON": ["jadx.core.dex.nodes.ClassNode", "jadx.core.dex.visitors.DependencyCollector", "jadx.core.dex.nodes.ClassNode.getUsedIn()", "jadx.core.ProcessClass.generateCode(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.visitors.FixAccessModifiers.fixClassVisibility(jadx.core.dex.nodes.ClassNode)", "jadx.core.Jadx.getPreDecompilePassesList()", "jadx.core.dex.nodes.ClassNode.setUsedIn(java.util.List)", "jadx.core.dex.nodes.MethodNode", "jadx.core.dex.nodes.ClassNode.setUseInMth(java.util.List)", "jadx.core.dex.nodes.MethodNode.getUseIn()", "jadx.core.dex.nodes.MethodNode.setUseIn(java.util.List)", "jadx.core.codegen.ClassGen.addFieldUsageInfo(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.FieldNode)", "jadx.core.Consts", "jadx.core.codegen.ClassGen.addClassCode(jadx.core.codegen.CodeWriter)", "jadx.core.dex.nodes.ClassNode.getUseInMth()", "jadx.core.dex.nodes.RootNode.getClassesWithoutInner()", "jadx.core.dex.nodes.ProcessState", "jadx.core.dex.visitors.FixAccessModifiers.fixVisibility(jadx.core.dex.nodes.MethodNode)", "jadx.core.codegen.ClassGen.addClassUsageInfo(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.ClassNode)", "jadx.tests.api.utils.assertj.JadxAssertions.assertThat(jadx.api.ICodeInfo)", "jadx.core.dex.nodes.ProcessState.isProcessed()", "jadx.core.dex.nodes.FieldNode", "jadx.api.JadxDecompiler.load()", "jadx.core.dex.visitors.MethodInlineVisitor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.DependencyCollector.resolveField(jadx.core.dex.nodes.RootNode,java.util.Set,jadx.api.plugins.input.data.IFieldData)", "jadx.core.codegen.ClassGen.addMthUsageInfo(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.DependencyCollector.processInsn(jadx.core.dex.nodes.RootNode,java.util.Set,jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.instructions.IndexInsnNode.toString()", "jadx.core.dex.visitors.DependencyCollector.processInsn(jadx.core.dex.nodes.RootNode,jadx.api.plugins.input.insns.InsnData,java.util.Set)", "jadx.core.dex.visitors.usage.UseSet", "jadx.core.dex.nodes.ProcessState.isLoaded()", "jadx.core.dex.nodes.RootNode.getTypeCompare()", "jadx.core.dex.visitors.DependencyCollector.processInstructions(jadx.core.dex.nodes.MethodNode,java.util.Set)", "jadx.core.dex.nodes.ClassNode.isInner()", "jadx.core.dex.visitors.usage.UsageInfo.methodUse(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.FixAccessModifiers.visit(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.visitors.DependencyCollector.buildUsageList(java.util.List)", "jadx.core.dex.nodes.RootNode.runPreDecompileStage()", "jadx.core.dex.visitors.DependencyCollector.resolveMethod(jadx.core.dex.nodes.RootNode,java.util.Set,jadx.api.plugins.input.data.IMethodData)", "jadx.core.dex.visitors.MethodInlineVisitor.canInline(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.DependencyCollector.visit(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.visitors.usage.UsageInfo", "jadx.tests.api.utils.assertj.JadxAssertions.assertThat(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.nodes.ClassNode.unload()", "jadx.core.dex.nodes.FieldNode.setUseIn(java.util.List)", "jadx.core.dex.visitors.ModVisitor.replaceStep(jadx.core.dex.nodes.MethodNode,jadx.core.utils.InsnRemover)", "jadx.core.dex.visitors.DependencyCollector.processClass(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.RootNode,java.util.Set)", "jadx.core.dex.visitors.DependencyCollector.processCustomInsn(jadx.core.dex.nodes.RootNode,java.util.Set,jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.nodes.FieldNode.getUseIn()", "jadx.core.dex.nodes.MethodNode.compareTo(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.DependencyCollector.collectClassDeps(jadx.core.dex.nodes.ClassNode)", "jadx.core.codegen.ClassGen.addField(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.FieldNode)", "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "jadx.core.codegen.ClassGen.useClassInternal(jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)", "jadx.core.dex.visitors.ModVisitor.fixTypeForFieldAccess(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.IndexInsnNode)", "jadx.core.dex.visitors.usage.UsageInfo.fieldUse(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.FieldNode)", "jadx.core.dex.nodes.ClassNode.compareTo(jadx.core.dex.nodes.ClassNode)", "jadx.core.codegen.MethodGen.addDefinition(jadx.core.codegen.CodeWriter)", "jadx.core.dex.visitors.FixAccessModifiers.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.DependencyCollector.resolveType(jadx.core.dex.nodes.RootNode,java.util.Set,java.lang.String)", "jadx.core.dex.visitors.DependencyCollector.processMethod(jadx.core.dex.nodes.RootNode,java.util.Set,jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.usage.UsageInfoVisitor"]}, {"title": "[core] Code restructure failed", "body": "**Describe error**\r\n- **Class:** c.m.b.a.f.a.D\r\n- **Method:** public final java.lang.String a(byte[] r6, java.io.File r7)\r\n- provide full java stacktrace:\r\n ```\r\n   /* JADX WARNING: Code restructure failed: missing block: B:10:0x001c, code lost:\r\n        r3 = r1;\r\n        r1 = null;\r\n     */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:14:0x0021, code lost:\r\n        r3 = th;\r\n     */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:9:0x001b, code lost:\r\n        r1 = move-exception;\r\n     */\r\n    /* JADX WARNING: Removed duplicated region for block: B:22:0x002d  */\r\n    /* Code decompiled incorrectly, please refer to instructions dump. */\r\n```\r\n\r\n\r\n**APK:**\r\n- https://play.google.com/store/apps/details?id=com.yandex.mobile.drive&hl=ru\r\n\r\n\r\n", "url": "https://github.com/skylot/jadx/issues/727", "user": "amspeople", "labels": ["Core", "bug"], "created": "2019-07-30 18:14:23", "closed": "2020-04-29 12:59:23", "commits": {}, "ttf": 273.0002777777778, "commitsDetails": []}, {"title": "[core] Thread lock", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nHi, I've noticed that an app is never decompiled. I run jadx with the following arguments\r\n```\r\n--no-replace-consts --show-bad-code --threads-count 8 --no-inline-anonymous --no-imports --deobf --deobf-min 2 --deobf-rewrite-cfg\r\n```\r\njstack output\r\n```\r\n2019-07-29 12:53:48\r\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (25.201-b09 mixed mode):\r\n\r\n\"Java2D Disposer\" #16 daemon prio=10 os_prio=2 tid=0x0000000045548800 nid=0xd34 in Object.wait() [0x000000004e0af000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        - waiting on <0x0000000408b02e00> (a java.lang.ref.ReferenceQueue$Lock)\r\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)\r\n        - locked <0x0000000408b02e00> (a java.lang.ref.ReferenceQueue$Lock)\r\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)\r\n        at sun.java2d.Disposer.run(Disposer.java:148)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"pool-1-thread-4\" #14 prio=5 os_prio=0 tid=0x0000000045942000 nid=0xec4 waiting for monitor entry [0x000000004d1ae000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:46)\r\n        - waiting to lock <0x0000000407e3b578> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:25)\r\n        at jadx.core.dex.nodes.ClassNode.loadAndProcess(ClassNode.java:248)\r\n        at jadx.core.codegen.InsnGen.processOverloadedArg(InsnGen.java:794)\r\n        at jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:765)\r\n        at jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:709)\r\n        at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:353)\r\n        at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:235)\r\n        at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:206)\r\n        at jadx.core.dex.visitors.regions.CheckRegions.getBlockInsnStr(CheckRegions.java:93)\r\n        at jadx.core.dex.visitors.regions.CheckRegions.visit(CheckRegions.java:64)\r\n        at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:30)\r\n        at jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:15)\r\n        at jadx.core.dex.visitors.DepthTraversal$$Lambda$31/253399104.accept(Unknown Source)\r\n        at java.util.ArrayList.forEach(ArrayList.java:1257)\r\n        at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:15)\r\n        at jadx.core.dex.visitors.DepthTraversal.lambda$visit$0(DepthTraversal.java:14)\r\n        at jadx.core.dex.visitors.DepthTraversal$$Lambda$30/993888079.accept(Unknown Source)\r\n        at java.util.ArrayList.forEach(ArrayList.java:1257)\r\n        at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:54)\r\n        - locked <0x0000000407f76398> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.generateCode(ProcessClass.java:30)\r\n        at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:255)\r\n        at jadx.api.JavaClass.decompile(JavaClass.java:61)\r\n        - locked <0x000000040a3135d0> (a jadx.api.JavaClass)\r\n        at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:211)\r\n        at jadx.api.JadxDecompiler$$Lambda$24/914942811.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n   Locked ownable synchronizers:\r\n        - <0x0000000408d053d0> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"pool-1-thread-3\" #13 prio=5 os_prio=0 tid=0x0000000045941800 nid=0xe14 waiting for monitor entry [0x000000004c2ae000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:46)\r\n        - waiting to lock <0x0000000407f76398> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.processDependencies(ProcessClass.java:78)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:59)\r\n        - locked <0x0000000407e3b578> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.generateCode(ProcessClass.java:30)\r\n        at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:255)\r\n        at jadx.api.JavaClass.decompile(JavaClass.java:61)\r\n        - locked <0x000000040a313580> (a jadx.api.JavaClass)\r\n        at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:211)\r\n        at jadx.api.JadxDecompiler$$Lambda$24/914942811.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n   Locked ownable synchronizers:\r\n        - <0x0000000408c05780> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"pool-1-thread-2\" #12 prio=5 os_prio=0 tid=0x0000000045940800 nid=0x4f4 waiting for monitor entry [0x000000004b3ae000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:46)\r\n        - waiting to lock <0x0000000407f76398> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.processDependencies(ProcessClass.java:78)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:59)\r\n        - locked <0x00000004082e4090> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.generateCode(ProcessClass.java:30)\r\n        at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:255)\r\n        at jadx.api.JavaClass.decompile(JavaClass.java:61)\r\n        - locked <0x000000040a3135f8> (a jadx.api.JavaClass)\r\n        at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:211)\r\n        at jadx.api.JadxDecompiler$$Lambda$24/914942811.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n   Locked ownable synchronizers:\r\n        - <0x0000000408b02fe0> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"pool-1-thread-1\" #11 prio=5 os_prio=0 tid=0x00000000484bb000 nid=0x7dc waiting for monitor entry [0x000000004a4ae000]\r\n   java.lang.Thread.State: BLOCKED (on object monitor)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:46)\r\n        - waiting to lock <0x0000000407f76398> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.processDependencies(ProcessClass.java:78)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:59)\r\n        - locked <0x0000000407fd04d8> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.generateCode(ProcessClass.java:30)\r\n        at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:255)\r\n        at jadx.api.JavaClass.decompile(JavaClass.java:61)\r\n        - locked <0x000000040a312a18> (a jadx.api.JavaClass)\r\n        at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:211)\r\n        at jadx.api.JadxDecompiler$$Lambda$24/914942811.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n   Locked ownable synchronizers:\r\n        - <0x0000000408d055b8> (a java.util.concurrent.ThreadPoolExecutor$Worker)\r\n\r\n\"Service Thread\" #10 daemon prio=9 os_prio=0 tid=0x000000003ccdd000 nid=0x130c runnable [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"C1 CompilerThread2\" #9 daemon prio=9 os_prio=2 tid=0x000000003cc5a000 nid=0x81c waiting on condition [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"C2 CompilerThread1\" #8 daemon prio=9 os_prio=2 tid=0x000000003cc56000 nid=0x12c8 waiting on condition [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"C2 CompilerThread0\" #7 daemon prio=9 os_prio=2 tid=0x000000003cc54000 nid=0xf64 waiting on condition [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"Attach Listener\" #6 daemon prio=5 os_prio=2 tid=0x000000003cc50000 nid=0xe90 waiting on condition [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"Signal Dispatcher\" #5 daemon prio=9 os_prio=2 tid=0x000000003cc4d000 nid=0x1460 runnable [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"Surrogate Locker Thread (Concurrent GC)\" #4 daemon prio=9 os_prio=0 tid=0x000000003cc4b800 nid=0x1010 waiting on condition [0x0000000000000000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"Finalizer\" #3 daemon prio=8 os_prio=1 tid=0x000000003cc2e800 nid=0xee0 in Object.wait() [0x000000003edaf000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        - waiting on <0x0000000401806718> (a java.lang.ref.ReferenceQueue$Lock)\r\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)\r\n        - locked <0x0000000401806718> (a java.lang.ref.ReferenceQueue$Lock)\r\n        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:165)\r\n        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:216)\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"Reference Handler\" #2 daemon prio=10 os_prio=2 tid=0x000000003cc21000 nid=0x280 in Object.wait() [0x000000003deaf000]\r\n   java.lang.Thread.State: WAITING (on object monitor)\r\n        at java.lang.Object.wait(Native Method)\r\n        - waiting on <0x0000000401705c60> (a java.lang.ref.Reference$Lock)\r\n        at java.lang.Object.wait(Object.java:502)\r\n        at java.lang.ref.Reference.tryHandlePending(Reference.java:191)\r\n        - locked <0x0000000401705c60> (a java.lang.ref.Reference$Lock)\r\n        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:153)\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"main\" #1 prio=5 os_prio=0 tid=0x0000000002d53800 nid=0x1434 waiting on condition [0x0000000002d4f000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x0000000408d05600> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)\r\n        at java.util.concurrent.ThreadPoolExecutor.awaitTermination(ThreadPoolExecutor.java:1475)\r\n        at jadx.api.JadxDecompiler.save(JadxDecompiler.java:153)\r\n        at jadx.api.JadxDecompiler.save(JadxDecompiler.java:138)\r\n        at jadx.cli.JadxCLI.processAndSave(JadxCLI.java:37)\r\n        at jadx.cli.JadxCLI.main(JadxCLI.java:18)\r\n\r\n   Locked ownable synchronizers:\r\n        - None\r\n\r\n\"VM Thread\" os_prio=2 tid=0x000000003cbfc800 nid=0xea4 runnable\r\n\r\n\"Gang worker#0 (Parallel GC Threads)\" os_prio=2 tid=0x0000000002d6c000 nid=0xf18 runnable\r\n\r\n\"Gang worker#1 (Parallel GC Threads)\" os_prio=2 tid=0x0000000002d6d800 nid=0xda0 runnable\r\n\r\n\"Gang worker#2 (Parallel GC Threads)\" os_prio=2 tid=0x0000000002d6f000 nid=0x15c4 runnable\r\n\r\n\"Gang worker#3 (Parallel GC Threads)\" os_prio=2 tid=0x0000000002d71000 nid=0x12b8 runnable\r\n\r\n\"G1 Main Concurrent Mark GC Thread\" os_prio=2 tid=0x0000000002e1f800 nid=0x174c runnable\r\n\r\n\"Gang worker#0 (G1 Parallel Marking Threads)\" os_prio=2 tid=0x0000000002e20800 nid=0xe84 runnable\r\n\r\n\"G1 Concurrent Refinement Thread#0\" os_prio=2 tid=0x0000000002d7c800 nid=0xe24 runnable\r\n\r\n\"G1 Concurrent Refinement Thread#1\" os_prio=2 tid=0x0000000002d7a800 nid=0xbf4 runnable\r\n\r\n\"G1 Concurrent Refinement Thread#2\" os_prio=2 tid=0x0000000002d79000 nid=0xf00 runnable\r\n\r\n\"G1 Concurrent Refinement Thread#3\" os_prio=2 tid=0x0000000002d76000 nid=0x1214 runnable\r\n\r\n\"G1 Concurrent Refinement Thread#4\" os_prio=2 tid=0x0000000002d75000 nid=0x1300 runnable\r\n\r\n\"VM Periodic Task Thread\" os_prio=2 tid=0x000000003ccf6800 nid=0x16d8 waiting on condition\r\n\r\nJNI global references: 517\r\n\r\n\r\nFound one Java-level deadlock:\r\n=============================\r\n\"pool-1-thread-4\":\r\n  waiting to lock monitor 0x0000000047032988 (object 0x0000000407e3b578, a jadx.core.dex.info.ClassInfo),\r\n  which is held by \"pool-1-thread-3\"\r\n\"pool-1-thread-3\":\r\n  waiting to lock monitor 0x0000000048aeb628 (object 0x0000000407f76398, a jadx.core.dex.info.ClassInfo),\r\n  which is held by \"pool-1-thread-4\"\r\n\r\nJava stack information for the threads listed above:\r\n===================================================\r\n\"pool-1-thread-4\":\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:46)\r\n        - waiting to lock <0x0000000407e3b578> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:25)\r\n        at jadx.core.dex.nodes.ClassNode.loadAndProcess(ClassNode.java:248)\r\n        at jadx.core.codegen.InsnGen.processOverloadedArg(InsnGen.java:794)\r\n        at jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:765)\r\n        at jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:709)\r\n        at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:353)\r\n        at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:235)\r\n        at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:206)\r\n        at jadx.core.dex.visitors.regions.CheckRegions.getBlockInsnStr(CheckRegions.java:93)\r\n        at jadx.core.dex.visitors.regions.CheckRegions.visit(CheckRegions.java:64)\r\n        at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:30)\r\n        at jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:15)\r\n        at jadx.core.dex.visitors.DepthTraversal$$Lambda$31/253399104.accept(Unknown Source)\r\n        at java.util.ArrayList.forEach(ArrayList.java:1257)\r\n        at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:15)\r\n        at jadx.core.dex.visitors.DepthTraversal.lambda$visit$0(DepthTraversal.java:14)\r\n        at jadx.core.dex.visitors.DepthTraversal$$Lambda$30/993888079.accept(Unknown Source)\r\n        at java.util.ArrayList.forEach(ArrayList.java:1257)\r\n        at jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:54)\r\n        - locked <0x0000000407f76398> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.generateCode(ProcessClass.java:30)\r\n        at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:255)\r\n        at jadx.api.JavaClass.decompile(JavaClass.java:61)\r\n        - locked <0x000000040a3135d0> (a jadx.api.JavaClass)\r\n        at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:211)\r\n        at jadx.api.JadxDecompiler$$Lambda$24/914942811.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\"pool-1-thread-3\":\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:46)\r\n        - waiting to lock <0x0000000407f76398> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.processDependencies(ProcessClass.java:78)\r\n        at jadx.core.ProcessClass.process(ProcessClass.java:59)\r\n        - locked <0x0000000407e3b578> (a jadx.core.dex.info.ClassInfo)\r\n        at jadx.core.ProcessClass.generateCode(ProcessClass.java:30)\r\n        at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:255)\r\n        at jadx.api.JavaClass.decompile(JavaClass.java:61)\r\n        - locked <0x000000040a313580> (a jadx.api.JavaClass)\r\n        at jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:211)\r\n        at jadx.api.JadxDecompiler$$Lambda$24/914942811.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\nFound 1 deadlock.\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/16KjFNIb20qGCWREbQ64maNHlrsKurWkK/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/726", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-29 10:00:28", "closed": "2019-07-31 10:28:25", "commits": {"068234f0cab197a476cba5b30592aa4d88c50249": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "068234f0cab197a476cba5b30592aa4d88c50249", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["ccb8ed1394e57966aab79f1adc177ccf00b59cc9"], "nameRev": "068234f0cab197a476cba5b30592aa4d88c50249 tags/v1.1.0~43", "commitMessage": "fix: remove synchronization lock for code generation (#726)\n", "commitDateTime": "2019-07-29 14:55:50", "authoredDateTime": "2019-07-29 14:55:50", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/api/JavaClass.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "jadx-core/src/main/java/jadx/core/ProcessClass.java", "insertions": 18, "deletions": 32, "lines": 50}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JavaClass.java", "spoonMethods": [{"spoonMethodName": "jadx.api.JavaClass.load()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.api.JavaClass.getInnerClasses()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.api.JavaClass.getFields()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.api.JavaClass.getMethods()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.api.JavaClass.decompile()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.api.JavaClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.api.JavaClass.unload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessClass.java", "spoonMethods": [{"spoonMethodName": "jadx.core.ProcessClass.generateCode(jadx.core.dex.nodes.ClassNode)", "TOT": 12, "UPD": 3, "INS": 2, "MOV": 6, "DEL": 1}, {"spoonMethodName": "jadx.core.ProcessClass.process(jadx.core.dex.nodes.ClassNode)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "jadx.core.ProcessClass.process(jadx.core.dex.nodes.ClassNode,boolean)", "TOT": 9, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 2}, {"spoonMethodName": "jadx.core.ProcessClass.getSyncObj(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.ProcessClass.processDependencies(jadx.core.dex.nodes.ClassNode)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["068234f0cab197a476cba5b30592aa4d88c50249"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 31, "deletions": 38, "lines": 69, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 38, "UPD": 10, "INS": 6, "MOV": 14, "DEL": 8, "spoonFilesChanged": 2, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core", "jadx-core/src/main/java/jadx/api"], "changesInPackagesSPOON": ["jadx.api.JavaClass.getInnerClasses()", "jadx.api.JavaClass", "jadx.api.JavaClass.load()", "jadx.core.ProcessClass.process(jadx.core.dex.nodes.ClassNode)", "jadx.api.JavaClass.decompile()", "jadx.api.JavaClass.getMethods()", "jadx.core.ProcessClass.getSyncObj(jadx.core.dex.nodes.ClassNode)", "jadx.core.ProcessClass.generateCode(jadx.core.dex.nodes.ClassNode)", "jadx.api.JavaClass.unload()", "jadx.core.ProcessClass.processDependencies(jadx.core.dex.nodes.ClassNode)", "jadx.core.ProcessClass.process(jadx.core.dex.nodes.ClassNode,boolean)", "jadx.api.JavaClass.getFields()"]}, {"title": "[core] Use of null without cast 2", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nFile ``` com/paypal/android/p2pmobile/p2p/sendmoney/activities/ChangeShippingAddressActivity.java ```\r\n```java\r\n    public void onNotApplicableSelected() {\r\n        if (this.mCurrentAddress == null) {\r\n            super.onBackPressed();\r\n            return;\r\n        }\r\n        this.mFlowManager.getUsageTracker().track(\"shippingaddress|selectednoshipping\");\r\n        android.content.Intent intent = new android.content.Intent();\r\n        intent.putExtra(\"result_address\", null); // <<<, putExtra(...) has multiple implementations\r\n        setResult(-1, intent);\r\n        finish();\r\n    }\r\n```\r\nAPK: https://drive.google.com/file/d/1fCN9PXu8Zw4Kdnhgd0_qmzEvgWLfEU-9/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/724", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-26 12:08:05", "closed": "2019-10-28 11:33:46", "commits": {"08f9a90c95e6ca03e8ba51f5c71a8ae86cf4b7da": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 93.00027777777778, "commitsDetails": [{"commitHash": "08f9a90c95e6ca03e8ba51f5c71a8ae86cf4b7da", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["9f06d6744e980cfddfb9df5ddf2d4812d5630d76"], "nameRev": "08f9a90c95e6ca03e8ba51f5c71a8ae86cf4b7da tags/v1.1.0~14", "commitMessage": "fix: force cast for null args in method invoke (temp fix for #724)\n", "commitDateTime": "2019-10-27 16:53:25", "authoredDateTime": "2019-10-27 16:49:41", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 35, "deletions": 30, "lines": 65}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestCastInOverloadedInvoke2.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestDeboxing2.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "jadx-core/src/test/smali/invoke/TestCastInOverloadedInvoke2.smali", "insertions": 18, "deletions": 0, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.processOverloadedArg(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,int)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.InsnGen.generateMethodArguments(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.InsnNode,int,jadx.core.dex.nodes.MethodNode)", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "jadx.core.codegen.InsnGen.isCastNeeded(jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.codegen.InsnGen.isCastNeeded(jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.InsnGen.addArgCast(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,int,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestCastInOverloadedInvoke2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.invoke.TestCastInOverloadedInvoke2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestDeboxing2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestDeboxing2.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["08f9a90c95e6ca03e8ba51f5c71a8ae86cf4b7da"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 35, "deletions": 30, "lines": 65, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 19, "UPD": 1, "INS": 5, "MOV": 11, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/codegen"], "changesInPackagesSPOON": ["jadx.core.codegen.InsnGen.isCastNeeded(jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "jadx.core.codegen.InsnGen.generateMethodArguments(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.InsnNode,int,jadx.core.dex.nodes.MethodNode)", "jadx.core.codegen.InsnGen.addArgCast(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,int,boolean)", "jadx.core.codegen.InsnGen.isCastNeeded(jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType,boolean)", "jadx.core.codegen.InsnGen.processOverloadedArg(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,int)"]}, {"title": "[core] Primitive is compared with null", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\n> But regressions are expected, feel free to report :)\r\n\r\nProbably it's a regression one :)\r\n\r\nFile ``` com/paypal/android/p2pmobile/activityitems/model/ActivityItemsModel.java ```\r\n```java\r\n    /* JADX WARNING: Incorrect type for immutable var: ssa=java.lang.Long, code=long, for r6v0, types: [java.lang.Long] */\r\n    public boolean hasValidItem(com.paypal.android.foundation.activity.model.ActivityItem.Id id, long j) {\r\n        if (j == null) { // <<<\r\n            j = 900000L;\r\n        }\r\n        android.util.Pair pair = (android.util.Pair) this.mItemLruCache.get(id);\r\n        if (pair == null) {\r\n            return false;\r\n        }\r\n        if (java.lang.Long.valueOf(((java.lang.Long) pair.first).longValue() + /* >>> */j.longValue()).longValue() > java.lang.Long.valueOf(android.os.SystemClock.uptimeMillis()).longValue()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n```\r\nAPK: https://drive.google.com/file/d/1fCN9PXu8Zw4Kdnhgd0_qmzEvgWLfEU-9/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/723", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-26 11:51:33", "closed": "2019-07-26 19:29:15", "commits": {"ddedb8d8a00c038780d967bdaa52e00d4d310ba4": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ddedb8d8a00c038780d967bdaa52e00d4d310ba4", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["472aa527067097f8e966c41050ae22184fc7f57a"], "nameRev": "ddedb8d8a00c038780d967bdaa52e00d4d310ba4 tags/v1.1.0~48", "commitMessage": "fix: don't override type of method parameter in const deboxing (#723)\n", "commitDateTime": "2019-07-26 16:14:27", "authoredDateTime": "2019-07-26 15:55:41", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/DeboxingVisitor.java", "insertions": 18, "deletions": 9, "lines": 27}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestDeboxing2.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestDeboxing3.java", "insertions": 60, "deletions": 0, "lines": 60}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DeboxingVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.DeboxingVisitor.checkArgUsage(jadx.core.dex.instructions.args.RegisterArg)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.DeboxingVisitor.checkForReplace(jadx.core.dex.instructions.InvokeNode)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.DeboxingVisitor.canChangeTypeToPrimitive(jadx.core.dex.instructions.args.RegisterArg)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestDeboxing2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestDeboxing2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestDeboxing3.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestDeboxing3", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ddedb8d8a00c038780d967bdaa52e00d4d310ba4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 9, "lines": 27, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.DeboxingVisitor.checkArgUsage(jadx.core.dex.instructions.args.RegisterArg)", "jadx.core.dex.visitors.DeboxingVisitor.checkForReplace(jadx.core.dex.instructions.InvokeNode)", "jadx.core.dex.visitors.DeboxingVisitor.canChangeTypeToPrimitive(jadx.core.dex.instructions.args.RegisterArg)"]}, {"title": "[core] Logic  error when break to label.", "body": "Jdax decompiled:\r\n\r\n                    if (!TextUtils.isEmpty(a2)) {\r\n                        int length = a2.length();\r\n                        if (length > 16) {\r\n                            this.f2574c = a2.substring(0, 16);\r\n                            this.f2575d = a2.substring(length - 16);\r\n                            q.c(f2572a, \"[] check ok resp=\" + Resp + \" authKey:\" + this.f2574c + \" IV:\" + this.f2575d);\r\n                            m2302w();\r\n                        }\r\n                    }\r\n                    this.f2574c = \"blabalbala\";\r\n                    this.f2575d = \"blabalbalabb\";\r\n                    q.c(f2572a, \"[] check ok resp=\" + Resp + \" authKey:\" + this.f2574c + \" IV:\" + this.f2575d);\r\n                    m2302w();\r\n\r\n\r\nFernFlower decompiled:\r\n\r\n             if (var6.length > 0) {\r\n                  label22: {\r\n                     String var7 = ablabala.d.a(var6);\r\n                     if (!TextUtils.isEmpty(var7)) {\r\n                        int var5 = var7.length();\r\n                        if (var5 > 16) {\r\n                           this.c = var7.substring(0, 16);\r\n                           this.d = var7.substring(var5 - 16);\r\n                           break label22;\r\n                        }\r\n                     }\r\n\r\n                     this.c = \"blabalbala\";\r\n                     this.d = \"blabalbalabb\";\r\n                  }\r\n\r\n                  q.c(a, \"[] check ok resp=\" + var1 + \" authKey:\" + this.c + \" V:\" + this.d);\r\n                  this.w();\r\n\r\norg.telegram.b.c\r\npublic boolean a(HandshakeResp var1)\r\n[issue dex](https://c-t.work/s/78f8a494220d4b)", "url": "https://github.com/skylot/jadx/issues/722", "user": "xpoy1", "labels": ["Core", "bug"], "created": "2019-07-24 08:45:11", "closed": "2019-11-30 18:00:13", "commits": {"0911b2dc2fdc00ccde112b556935bd63ac8c0f08": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 129.00027777777777, "commitsDetails": [{"commitHash": "0911b2dc2fdc00ccde112b556935bd63ac8c0f08", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["fd7d08cb1093f8d96fc817b1aafa5f80288d0990"], "nameRev": "0911b2dc2fdc00ccde112b556935bd63ac8c0f08 tags/v1.1.0~51", "commitMessage": "test: NYI test for issue #722\n", "commitDateTime": "2019-07-24 17:00:05", "authoredDateTime": "2019-07-24 17:00:05", "commitGitStats": [{"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestConditions19.java", "insertions": 53, "deletions": 0, "lines": 53}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TestConditions19.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestConditions19", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0911b2dc2fdc00ccde112b556935bd63ac8c0f08"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[core] Type inference failed (simple case)", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nExample, file ``` com/paypal/android/p2pmobile/appconfig/DevAppConfigManager.java ```\r\n```java\r\n    /* JADX WARNING: type inference failed for: r1v0 */\r\n    /* JADX WARNING: type inference failed for: r3v2, types: [java.lang.Integer] */\r\n    /* JADX WARNING: type inference failed for: r3v3 */\r\n    /* JADX WARNING: type inference failed for: r1v2 */\r\n    /* JADX WARNING: type inference failed for: r3v5, types: [java.lang.Boolean] */\r\n    /* JADX WARNING: type inference failed for: r1v3 */\r\n    /* JADX WARNING: type inference failed for: r1v4 */\r\n    /* JADX WARNING: Multi-variable type inference failed */\r\n    /* JADX WARNING: Unknown variable types count: 1 */\r\n    private java.lang.Object convertStringToType(java.lang.String str, java.lang.String str2) throws java.lang.NumberFormatException {\r\n        java.lang.Object obj;\r\n        ? r1 = 0;\r\n        if (android.text.TextUtils.isEmpty(str) || android.text.TextUtils.isEmpty(str2)) {\r\n            return null;\r\n        }\r\n        try {\r\n            int parseInt = java.lang.Integer.parseInt(str2);\r\n            if (parseInt == 0) {\r\n                str = java.lang.Integer.valueOf(str);\r\n            } else if (parseInt != 1) {\r\n                if (parseInt != 3) {\r\n                    obj = r1;\r\n                    return obj;\r\n                }\r\n                str = java.lang.Boolean.valueOf(java.lang.Boolean.parseBoolean(str));\r\n            }\r\n            obj = str;\r\n        } catch (java.lang.NumberFormatException e) {\r\n            e.printStackTrace();\r\n            obj = r1;\r\n        }\r\n        return obj;\r\n    }\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1fCN9PXu8Zw4Kdnhgd0_qmzEvgWLfEU-9/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/720", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-22 11:03:40", "closed": "2019-09-05 11:39:14", "commits": {"1e6b30343c5309eae3070f101c63763f8066ecf5": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 45.000277777777775, "commitsDetails": [{"commitHash": "1e6b30343c5309eae3070f101c63763f8066ecf5", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["ddedb8d8a00c038780d967bdaa52e00d4d310ba4"], "nameRev": "1e6b30343c5309eae3070f101c63763f8066ecf5 tags/v1.1.0~47", "commitMessage": "fix: several improvements for multi-variable type search (#720)\n", "commitDateTime": "2019-07-28 20:22:28", "authoredDateTime": "2019-07-27 22:55:37", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/NameGen.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnWrapArg.java", "insertions": 16, "deletions": 3, "lines": 19}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/SSAVar.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlineVisitor.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/InitCodeVariables.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockSplitter.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/variables/ProcessVariables.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeCompare.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeCompareEnum.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java", "insertions": 48, "deletions": 29, "lines": 77}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInfo.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeSearch.java", "insertions": 47, "deletions": 31, "lines": 78}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeSearchState.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdate.java", "insertions": 23, "deletions": 28, "lines": 51}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdateFlags.java", "insertions": 13, "deletions": 4, "lines": 17}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestVarArg.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/trycatch/TestTryCatch4.java", "insertions": 0, "deletions": 46, "lines": 46}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestTypeResolver10.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/variables/TestVariables2.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/smali/types/TestTypeResolver10.smali", "insertions": 80, "deletions": 0, "lines": 80}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NameGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.NameGen.makeArgName(jadx.core.dex.instructions.args.CodeVar)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnWrapArg.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.InsnWrapArg", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.instructions.args.InsnWrapArg.duplicate()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.instructions.args.InsnWrapArg.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SSAVar.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.SSAVar.resetTypeAndCodeVar()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConstInlineVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.checkInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,java.util.List)", "TOT": 7, "UPD": 2, "INS": 3, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "InitCodeVariables.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.InitCodeVariables.rerun(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.InitCodeVariables.initCodeVar(jadx.core.dex.instructions.args.SSAVar)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SimplifyVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.SimplifyVisitor.simplifyStringConstructor(jadx.core.dex.nodes.RootNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "BlockSplitter.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockSplitter.makeSeparate(jadx.core.dex.instructions.InsnType)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockSplitter.splitBasicBlocks(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessVariables.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.variables.ProcessVariables.checkCodeVars(jadx.core.dex.nodes.MethodNode,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeCompare.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompare", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompare.getComparator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompare.getReversedComparator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeCompareEnum.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompareEnum.isEqual()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeInferenceVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runMultiVariableSearch(jadx.core.dex.nodes.MethodNode)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.selectBestTypeFromBounds(java.util.Set)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.insertMoveForPhi(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.PhiInsn,jadx.core.dex.instructions.args.SSAVar)", "TOT": 19, "UPD": 6, "INS": 1, "MOV": 7, "DEL": 5}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 17, "UPD": 0, "INS": 5, "MOV": 11, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runTypePropagation(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryInsertAdditionalInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "TypeInfo.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInfo.reset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeSearch.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.getArgType(jadx.core.dex.visitors.typeinference.TypeSearchState,jadx.core.dex.instructions.args.InsnArg)", "TOT": 23, "UPD": 12, "INS": 0, "MOV": 8, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.applyResolvedVars()", "TOT": 13, "UPD": 2, "INS": 3, "MOV": 6, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.fillTypeCandidates(jadx.core.dex.instructions.args.SSAVar)", "TOT": 11, "UPD": 2, "INS": 5, "MOV": 3, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.addCandidateTypes(java.util.Set,java.util.Set,java.util.Collection)", "TOT": 10, "UPD": 0, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.makeMoveConstraint(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.RegisterArg).1.check(jadx.core.dex.visitors.typeinference.TypeSearchState)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.addUsageTypeCandidates(jadx.core.dex.instructions.args.SSAVar,java.util.Set,java.util.Set)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearch.addCandidateType(java.util.Set,java.util.Set,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeSearchState.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeSearchState.getArgType(jadx.core.dex.instructions.args.InsnArg)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeUpdate.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.apply(jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.applyWithWiderAllow(jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.getComparator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 24, "UPD": 5, "INS": 6, "MOV": 8, "DEL": 5}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.getArgTypeComparator()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdate.applyWithWiderIgnSame(jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeUpdateFlags.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdateFlags.allowWider()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdateFlags", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeUpdateFlags.isIgnoreSame()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestVarArg.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.invoke.TestVarArg.TestCls.test1(int[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.invoke.TestVarArg.TestCls.test2(int,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.invoke.TestVarArg.TestCls.test3(int[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.invoke.TestVarArg.TestCls.call()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTryCatch4.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.trycatch.TestTryCatch4", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TestTypeResolver10.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver10", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestVariables2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.variables.TestVariables2.TestCls.test(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1e6b30343c5309eae3070f101c63763f8066ecf5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 201, "deletions": 106, "lines": 307, "gitFilesChange": 16}, "spoonStatsSummary": {"TOT": 203, "UPD": 45, "INS": 64, "MOV": 66, "DEL": 28, "spoonFilesChanged": 16, "spoonMethodsChanged": 43}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/typeinference", "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/instructions/args", "jadx-core/src/main/java/jadx/core/dex/visitors/regions/variables", "jadx-core/src/main/java/jadx/core/codegen"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.typeinference.TypeCompare.getReversedComparator()", "jadx.core.dex.visitors.typeinference.TypeSearch.getArgType(jadx.core.dex.visitors.typeinference.TypeSearchState,jadx.core.dex.instructions.args.InsnArg)", "jadx.core.dex.visitors.typeinference.TypeCompare.getComparator()", "jadx.core.dex.visitors.typeinference.TypeSearch.addCandidateType(java.util.Set,java.util.Set,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeSearch.fillTypeCandidates(jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.typeinference.TypeUpdateFlags.allowWider()", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.tryInsertAdditionalInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.typeinference.TypeCompare", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runMultiVariableSearch(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeCompareEnum.isEqual()", "jadx.core.dex.visitors.typeinference.TypeUpdateFlags.isIgnoreSame()", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.selectBestTypeFromBounds(java.util.Set)", "jadx.core.dex.visitors.typeinference.TypeSearch.addUsageTypeCandidates(jadx.core.dex.instructions.args.SSAVar,java.util.Set,java.util.Set)", "jadx.core.dex.visitors.blocksmaker.BlockSplitter.splitBasicBlocks(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.instructions.args.InsnWrapArg.duplicate()", "jadx.core.dex.instructions.args.SSAVar.resetTypeAndCodeVar()", "jadx.core.dex.visitors.typeinference.TypeSearch.applyResolvedVars()", "jadx.core.dex.visitors.typeinference.TypeInfo.reset()", "jadx.core.dex.visitors.typeinference.TypeSearchState.getArgType(jadx.core.dex.instructions.args.InsnArg)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.insertMoveForPhi(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.PhiInsn,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.typeinference.TypeUpdate.applyWithWiderIgnSame(jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.regions.variables.ProcessVariables.checkCodeVars(jadx.core.dex.nodes.MethodNode,java.util.List)", "jadx.core.dex.visitors.typeinference.TypeSearch.addCandidateTypes(java.util.Set,java.util.Set,java.util.Collection)", "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runTypePropagation(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.typeinference.TypeSearch.makeMoveConstraint(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.RegisterArg).1.check(jadx.core.dex.visitors.typeinference.TypeSearchState)", "jadx.core.dex.visitors.typeinference.TypeSearch", "jadx.core.dex.instructions.args.InsnWrapArg.toString()", "jadx.core.dex.visitors.typeinference.TypeUpdate", "jadx.core.dex.visitors.ConstInlineVisitor.checkInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,java.util.List)", "jadx.core.dex.visitors.typeinference.TypeUpdate.updateTypeChecked(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeUpdate.getArgTypeComparator()", "jadx.core.dex.visitors.SimplifyVisitor.simplifyStringConstructor(jadx.core.dex.nodes.RootNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "jadx.core.dex.instructions.args.InsnWrapArg", "jadx.core.dex.visitors.typeinference.TypeUpdate.moveListener(jadx.core.dex.visitors.typeinference.TypeUpdateInfo,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.InitCodeVariables.rerun(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.InitCodeVariables.initCodeVar(jadx.core.dex.instructions.args.SSAVar)", "jadx.core.codegen.NameGen.makeArgName(jadx.core.dex.instructions.args.CodeVar)", "jadx.core.dex.visitors.typeinference.TypeUpdateFlags", "jadx.core.dex.visitors.typeinference.TypeUpdate.getComparator()", "jadx.core.dex.visitors.typeinference.TypeUpdate.applyWithWiderAllow(jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.typeinference.TypeUpdate.apply(jadx.core.dex.instructions.args.SSAVar,jadx.core.dex.instructions.args.ArgType)", "jadx.core.dex.visitors.blocksmaker.BlockSplitter.makeSeparate(jadx.core.dex.instructions.InsnType)"]}, {"title": "[core] Invalid enum declarations", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nFile ``` com/paypal/android/sdk/contactless/reader/apdu/Cla.java ```, static fields are generated instead of enum constants\r\n```java\r\n    public enum LowerNibble {\r\n        public static final com.paypal.android.sdk.contactless.reader.apdu.Cla.LowerNibble CHANNEL0 = null;\r\n        public static final com.paypal.android.sdk.contactless.reader.apdu.Cla.LowerNibble INVALID = null;\r\n\r\n        /* renamed from: a */\r\n        public static final /* synthetic */ com.paypal.android.sdk.contactless.reader.apdu.Cla.LowerNibble[] f15532a = null;\r\n\r\n        /* renamed from: b */\r\n        public final byte f15533b;\r\n\r\n        /* renamed from: c */\r\n        public byte f15534c;\r\n\r\n        static {\r\n            INVALID = new com.paypal.android.sdk.contactless.reader.apdu.Cla.LowerNibble(\"INVALID\", 0, -1);\r\n            CHANNEL0 = new com.paypal.android.sdk.contactless.reader.apdu.Cla.LowerNibble(\"CHANNEL0\", 1, 0);\r\n            f15532a = new com.paypal.android.sdk.contactless.reader.apdu.Cla.LowerNibble[]{INVALID, CHANNEL0};\r\n        }\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1fCN9PXu8Zw4Kdnhgd0_qmzEvgWLfEU-9/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/719", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-22 10:23:12", "closed": "2019-07-30 20:12:19", "commits": {"46290437211f33456a6a25b2ac8b90cc2a79ea37": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "be9dae57b9257536b0eb206ccc8ff52e9343e9f8": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "46290437211f33456a6a25b2ac8b90cc2a79ea37", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["068234f0cab197a476cba5b30592aa4d88c50249"], "nameRev": "46290437211f33456a6a25b2ac8b90cc2a79ea37 tags/v1.1.0~42", "commitMessage": "fix: convert inner enums and fix inner classes reference (#719)\n", "commitDateTime": "2019-07-30 20:49:31", "authoredDateTime": "2019-07-30 20:49:31", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/ClassGen.java", "insertions": 27, "deletions": 2, "lines": 29}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestInnerEnums.java", "insertions": 69, "deletions": 0, "lines": 69}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClassGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.ClassGen.addClassDeclaration(jadx.core.codegen.CodeWriter)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.codegen.ClassGen.expandInnerClassName(jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.ClassGen.useClassInternal(jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.ClassGen.isClassInnerFor(jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnumVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.visit(jadx.core.dex.nodes.ClassNode)", "TOT": 12, "UPD": 1, "INS": 1, "MOV": 9, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.EnumVisitor.convertToEnum(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInnerEnums.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.enums.TestInnerEnums", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "be9dae57b9257536b0eb206ccc8ff52e9343e9f8", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["46290437211f33456a6a25b2ac8b90cc2a79ea37"], "nameRev": "be9dae57b9257536b0eb206ccc8ff52e9343e9f8 tags/v1.1.0~41", "commitMessage": "fix: add explicit cast for byte literal in method invoke (#719)\n", "commitDateTime": "2019-07-30 22:46:28", "authoredDateTime": "2019-07-30 22:46:28", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/CallMthInterface.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/InvokeNode.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/mods/ConstructorInsn.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlineVisitor.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/enums/TestInnerEnums.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CallMthInterface.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.getFirstArgOffset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InvokeNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.InvokeNode", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.instructions.InvokeNode.getFirstArgOffset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConstructorInsn.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.mods.ConstructorInsn.getFirstArgOffset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.InsnNode.getArgIndex(jadx.core.dex.instructions.args.InsnArg)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConstInlineVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.nodes.InsnNode,java.util.List)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.needExplicitCast(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.LiteralArg)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInnerEnums.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.enums.TestInnerEnums.TestCls.Numbers", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.enums.TestInnerEnums.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["46290437211f33456a6a25b2ac8b90cc2a79ea37", "be9dae57b9257536b0eb206ccc8ff52e9343e9f8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 76, "deletions": 9, "lines": 85, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 30, "UPD": 3, "INS": 12, "MOV": 11, "DEL": 4, "spoonFilesChanged": 7, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/dex/instructions/mods", "jadx-core/src/main/java/jadx/core/dex/instructions", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/codegen"], "changesInPackagesSPOON": ["jadx.core.dex.nodes.InsnNode.getArgIndex(jadx.core.dex.instructions.args.InsnArg)", "jadx.core.dex.visitors.ConstInlineVisitor.needExplicitCast(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.LiteralArg)", "jadx.core.dex.instructions.InvokeNode.getFirstArgOffset()", "jadx.core.dex.visitors.EnumVisitor.visit(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.instructions.mods.ConstructorInsn.getFirstArgOffset()", "jadx.core.dex.instructions.InvokeNode", "jadx.core.codegen.ClassGen.isClassInnerFor(jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)", "jadx.core.codegen.ClassGen.expandInnerClassName(jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)", "jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.nodes.InsnNode,java.util.List)", "jadx.core.codegen.ClassGen.addClassDeclaration(jadx.core.codegen.CodeWriter)", "jadx.core.dex.visitors.EnumVisitor.convertToEnum(jadx.core.dex.nodes.ClassNode)", "jadx.core.codegen.ClassGen.useClassInternal(jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)", "jadx.core.dex.instructions.getFirstArgOffset()"]}, {"title": "[core] Miss of casts among primitive types", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nClass ``` com.paypal.android.p2pmobile.cfs.common.fragments.BaseShowCodeFragment ```\r\n```java\r\n    private boolean isGoogleMapsInstalledAndEnabled() {\r\n        int i = 0;\r\n        try {\r\n            return getActivity().getPackageManager().getApplicationInfo(\"com.google.android.apps.maps\", i).enabled;\r\n        } catch (android.content.pm.PackageManager.NameNotFoundException unused) {\r\n            return i; // <<< should be boolean\r\n        }\r\n    }\r\n```\r\n\r\nAnother example is in file ``` com/paypal/android/sdk/contactless/reader/apdu/CApdu.java ```\r\n```java\r\n    public CApdu(@NonNull Cla cla, @NonNull Ins ins, byte b, byte b2, @NonNull byte[] bArr) {\r\n        this(cla, ins, b, b2, bArr, 0); // <<< 0 should be explicitly cast to byte, otherwise the referenced constructor is not found\r\n    }\r\n\r\n    public CApdu(@NonNull Cla cla, @NonNull Ins ins, byte b, byte b2, @NonNull byte[] bArr, byte b3) {\r\n        this.f15523a = cla;\r\n        this.f15524b = ins;\r\n        this.f15525c = b;\r\n        this.f15526d = b2;\r\n        this.f15527e = bArr;\r\n        this.f15528f = b3;\r\n    }\r\n```\r\nAPK: https://drive.google.com/file/d/1fCN9PXu8Zw4Kdnhgd0_qmzEvgWLfEU-9/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/718", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-22 10:20:05", "closed": "2019-10-28 17:45:42", "commits": {"8321d5e3806e83dd103ad278f197f938520f0980": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 98.00027777777778, "commitsDetails": [{"commitHash": "8321d5e3806e83dd103ad278f197f938520f0980", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["64c9ce2ab0fa203c3f0b42d056b2c427e56760b6"], "nameRev": "8321d5e3806e83dd103ad278f197f938520f0980 tags/v1.1.0~12", "commitMessage": "fix: preserve arg type on PHI insn inline (#718)\n", "commitDateTime": "2019-10-28 17:19:52", "authoredDateTime": "2019-10-28 17:19:52", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockProcessor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ssa/SSATransform.java", "insertions": 5, "deletions": 13, "lines": 18}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/inline/TestConstInline.java", "insertions": 38, "deletions": 0, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BlockProcessor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.duplicateReturnInsn(jadx.core.dex.nodes.InsnNode)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SSATransform.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ssa.SSATransform.inlinePhiInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.PhiInsn)", "TOT": 11, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 5}]}, {"spoonFilePath": "TestConstInline.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.inline.TestConstInline", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8321d5e3806e83dd103ad278f197f938520f0980"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 14, "lines": 20, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 14, "UPD": 3, "INS": 2, "MOV": 3, "DEL": 6, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/ssa", "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.ssa.SSATransform.inlinePhiInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.PhiInsn)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.duplicateReturnInsn(jadx.core.dex.nodes.InsnNode)"]}, {"title": "[core] Use of registers in constructor calls", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nClass ``` com.paypal.android.p2pmobile.appconfig.configNode.AtmFinderConfig ```\r\n```java\r\n    public AtmFinderConfig() {\r\n        super(r1, r2, r3, r4, r5, r6);\r\n        Boolean valueOf = Boolean.valueOf(false);\r\n        EciDCSKeys eciDCSKeys = new EciDCSKeys(\"atmFinder\", valueOf);\r\n        EciDCSKeys eciDCSKeys2 = new EciDCSKeys(\"atmFinderLayout\", \"map\");\r\n        EciDCSKeys eciDCSKeys3 = new EciDCSKeys(\"atmFinderSearch\", \"address\");\r\n        EciDCSKeys eciDCSKeys4 = new EciDCSKeys(\"atmFinderShowRecent\", valueOf);\r\n        Boolean valueOf2 = Boolean.valueOf(true);\r\n        EciDCSKeys eciDCSKeys5 = new EciDCSKeys(\"atmFinderShowSearchBar\", valueOf2);\r\n        EciDCSKeys eciDCSKeys6 = new EciDCSKeys(\"atmFinderEnableTabOnMapDisableTabOnList\", valueOf2);\r\n    }\r\n```\r\nIf a result of execution is used only once, can it be inlined?\r\n\r\nAPK: https://drive.google.com/file/d/1fCN9PXu8Zw4Kdnhgd0_qmzEvgWLfEU-9/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/717", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-22 10:02:48", "closed": "2019-07-23 18:01:02", "commits": {"fd7d08cb1093f8d96fc817b1aafa5f80288d0990": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "fd7d08cb1093f8d96fc817b1aafa5f80288d0990", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["3ae8359408de8f20d65e0a77420a0df32c6a08b3"], "nameRev": "fd7d08cb1093f8d96fc817b1aafa5f80288d0990 tags/v1.1.0~52", "commitMessage": "feat: initial deboxing implementation (#717)\n", "commitDateTime": "2019-07-23 20:37:37", "authoredDateTime": "2019-07-23 20:37:37", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/Jadx.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/TypeGen.java", "insertions": 30, "deletions": 15, "lines": 45}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AFlag.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/info/MethodInfo.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/CallMthInterface.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/InvokeNode.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/LiteralArg.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/mods/ConstructorInsn.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlineVisitor.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/DeboxingVisitor.java", "insertions": 149, "deletions": 0, "lines": 149}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestVarArg.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestDeboxing.java", "insertions": 77, "deletions": 0, "lines": 77}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Jadx.java", "spoonMethods": [{"spoonMethodName": "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AnnotationGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.AnnotationGen.encodeValue(jadx.core.codegen.CodeWriter,java.lang.Object)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.lit(jadx.core.dex.instructions.args.LiteralArg)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "TypeGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.TypeGen.formatShort(long)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.codegen.TypeGen.formatByte(long)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.codegen.TypeGen.formatInteger(long)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.codegen.TypeGen.formatLong(long)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.core.codegen.TypeGen.literalToString(jadx.core.dex.instructions.args.LiteralArg,jadx.core.dex.nodes.IDexNode,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.TypeGen.literalToString(long,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.nodes.IDexNode,boolean)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.TypeGen.literalToString(long,jadx.core.dex.instructions.args.ArgType,jadx.core.utils.StringUtils,boolean,boolean)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.TypeGen.formatShort(long,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.TypeGen.formatByte(long,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.TypeGen.formatInteger(long,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.TypeGen.formatLong(long,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AFlag.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.AFlag", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodInfo.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.info.MethodInfo", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "CallMthInterface.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.getInstanceArg()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InvokeNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.InvokeNode.getInstanceArg()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LiteralArg.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.LiteralArg.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegisterArg.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.RegisterArg.getType()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ConstructorInsn.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.mods.ConstructorInsn.getInstanceArg()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConstInlineVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.nodes.InsnNode,java.util.List)", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "DeboxingVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.DeboxingVisitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestVarArg.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.invoke.TestVarArg.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestDeboxing.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestDeboxing", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fd7d08cb1093f8d96fc817b1aafa5f80288d0990"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 224, "deletions": 30, "lines": 254, "gitFilesChange": 13}, "spoonStatsSummary": {"TOT": 65, "UPD": 4, "INS": 37, "MOV": 14, "DEL": 10, "spoonFilesChanged": 13, "spoonMethodsChanged": 24}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/instructions/mods", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/dex/instructions/args", "jadx-core/src/main/java/jadx/core/dex/info", "jadx-core/src/main/java/jadx/core/dex/instructions", "jadx-core/src/main/java/jadx/core", "jadx-core/src/main/java/jadx/core/dex/attributes"], "changesInPackagesSPOON": ["jadx.core.codegen.TypeGen.literalToString(long,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.nodes.IDexNode,boolean)", "jadx.core.codegen.TypeGen.formatShort(long,boolean)", "jadx.core.dex.instructions.InvokeNode.getInstanceArg()", "jadx.core.dex.instructions.getInstanceArg()", "jadx.core.codegen.TypeGen.literalToString(long,jadx.core.dex.instructions.args.ArgType,jadx.core.utils.StringUtils,boolean,boolean)", "jadx.core.codegen.TypeGen.literalToString(jadx.core.dex.instructions.args.LiteralArg,jadx.core.dex.nodes.IDexNode,boolean)", "jadx.core.dex.instructions.mods.ConstructorInsn.getInstanceArg()", "jadx.core.dex.instructions.args.LiteralArg.toString()", "jadx.core.dex.info.MethodInfo", "jadx.core.codegen.TypeGen.formatShort(long)", "jadx.core.codegen.TypeGen.formatInteger(long)", "jadx.core.dex.attributes.AFlag", "jadx.core.Jadx.getPassesList(jadx.api.JadxArgs)", "jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.nodes.InsnNode,java.util.List)", "jadx.core.codegen.TypeGen.formatLong(long,boolean)", "jadx.core.codegen.TypeGen.formatByte(long)", "jadx.core.dex.visitors.DeboxingVisitor", "jadx.core.codegen.AnnotationGen.encodeValue(jadx.core.codegen.CodeWriter,java.lang.Object)", "jadx.core.codegen.TypeGen.formatByte(long,boolean)", "jadx.core.codegen.TypeGen.formatLong(long)", "jadx.core.codegen.TypeGen.formatInteger(long,boolean)", "jadx.core.dex.instructions.args.RegisterArg.getType()", "jadx.core.dex.visitors.ConstInlineVisitor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.codegen.InsnGen.lit(jadx.core.dex.instructions.args.LiteralArg)"]}, {"title": "[core] Use of registers in enum declarations", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nExample code\r\n```java\r\npackage com.paypal.android.p2pmobile.activityitems.model;\r\n\r\npublic enum AccountFilterType {\r\n    ALL_TRANSACTIONS(java.lang.Integer.valueOf(0)),\r\n    PAYPAL_CASH(r3), // <<<\r\n    PAYPAL_CASH_PLUS(r3);\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1fCN9PXu8Zw4Kdnhgd0_qmzEvgWLfEU-9/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/716", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-22 09:57:11", "closed": "2019-07-23 18:01:58", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[core] xmlgen throws ArrayIndexOutOfBoundsException", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nOpen ``` AndroidManifest.xml ```, its contents\r\n```\r\nError decode manifest\r\njava.lang.ArrayIndexOutOfBoundsException: Index 6286 out of bounds for length 6284\r\n\tat jadx.core.xmlgen.CommonBinaryParser.skipStrLen8(CommonBinaryParser.java:89)\r\n\tat jadx.core.xmlgen.CommonBinaryParser.extractString8(CommonBinaryParser.java:59)\r\n\tat jadx.core.xmlgen.CommonBinaryParser.parseStringPoolNoType(CommonBinaryParser.java:37)\r\n\tat jadx.core.xmlgen.BinaryXMLParser.decode(BinaryXMLParser.java:117)\r\n\tat jadx.core.xmlgen.BinaryXMLParser.parse(BinaryXMLParser.java:92)\r\n\tat jadx.api.ResourcesLoader.loadContent(ResourcesLoader.java:97)\r\n\tat jadx.api.ResourcesLoader.lambda$loadContent$0(ResourcesLoader.java:82)\r\n\tat jadx.api.ResourcesLoader.decodeStream(ResourcesLoader.java:71)\r\n\tat jadx.api.ResourcesLoader.loadContent(ResourcesLoader.java:82)\r\n\tat jadx.api.ResourceFile.loadContent(ResourceFile.java:60)\r\n```\r\nAPK: https://drive.google.com/file/d/1z12cxMHh_ifo0tIzfGmQLxnGsa2jPZSv/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/712", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-14 11:16:19", "closed": "2019-07-15 19:14:37", "commits": {"8e8a2faa1073e6d7fceabe99d223a9553a1d7506": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "15d56abeb659538f793e6e16dade3ce4e2f9e121": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "8e8a2faa1073e6d7fceabe99d223a9553a1d7506", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["0c2784bb42ec906a0877f22dcf39458a92f106c1"], "nameRev": "8e8a2faa1073e6d7fceabe99d223a9553a1d7506 tags/v1.1.0~67", "commitMessage": "fix(res): skip string if parsing failed (#712)\n", "commitDateTime": "2019-07-14 17:06:19", "authoredDateTime": "2019-07-14 17:06:19", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/CommonBinaryParser.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommonBinaryParser.java", "spoonMethods": [{"spoonMethodName": "jadx.core.xmlgen.CommonBinaryParser.parseStringPoolNoType()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.xmlgen.CommonBinaryParser.extractString8(byte[],int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "15d56abeb659538f793e6e16dade3ce4e2f9e121", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["d89ec67888fc86a82eb7d26d06a4689f8499f321"], "nameRev": "15d56abeb659538f793e6e16dade3ce4e2f9e121 tags/v1.1.0~64", "commitMessage": "fix: read correct buffer size for string pool parsing (#712)\n", "commitDateTime": "2019-07-15 21:19:58", "authoredDateTime": "2019-07-15 21:19:58", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/CommonBinaryParser.java", "insertions": 4, "deletions": 12, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommonBinaryParser.java", "spoonMethods": [{"spoonMethodName": "jadx.core.xmlgen.CommonBinaryParser.parseStringPoolNoType()", "TOT": 13, "UPD": 8, "INS": 0, "MOV": 3, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8e8a2faa1073e6d7fceabe99d223a9553a1d7506", "15d56abeb659538f793e6e16dade3ce4e2f9e121"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 7, "deletions": 13, "lines": 20, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 15, "UPD": 8, "INS": 1, "MOV": 3, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/xmlgen"], "changesInPackagesSPOON": ["jadx.core.xmlgen.CommonBinaryParser.parseStringPoolNoType()", "jadx.core.xmlgen.CommonBinaryParser.extractString8(byte[],int)"]}, {"title": "[core] if, do, for package names", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nPlease open the attached APK, and browse to sources. You will see reserved names in root package names e.g. ``` if ```, ``` for ```, ``` do ```\r\n\r\n```java\r\n         do.int.if.AffideliceauChablis.m35920a((java.lang.Object) settings, (java.lang.String) \"webView.settings\");\r\n```\r\n\r\nhttps://drive.google.com/file/d/1FezWyJKTexSoO4lFNDhnRvS7K4elD6bE/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/711", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-13 21:17:10", "closed": "2019-07-14 17:01:11", "commits": {"c555cd082552c04dbf48e6b62820618c4594df8d": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c555cd082552c04dbf48e6b62820618c4594df8d", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["92e28326a4f5ba68485d86d6f7f29c397d46d883"], "nameRev": "c555cd082552c04dbf48e6b62820618c4594df8d tags/v1.1.0~69", "commitMessage": "fix: rename packages with reserved names (#711)\n", "commitDateTime": "2019-07-14 13:13:00", "authoredDateTime": "2019-07-14 13:13:00", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java", "insertions": 29, "deletions": 7, "lines": 36}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/RenameVisitor.java", "insertions": 28, "deletions": 16, "lines": 44}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/CodeGenUtils.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/names/TestReservedPackageNames.java", "insertions": 59, "deletions": 0, "lines": 59}, {"filePath": "jadx-core/src/test/smali/names/TestReservedPackageNames/a.smali", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Deobfuscator.java", "spoonMethods": [{"spoonMethodName": "jadx.core.deobf.Deobfuscator.doPkg(jadx.core.deobf.PackageNode,java.lang.String)", "TOT": 8, "UPD": 3, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "jadx.core.deobf.Deobfuscator.preProcessClass(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.deobf.Deobfuscator.getPkgAlias(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.deobf.Deobfuscator.processPackageFull(jadx.core.deobf.PackageNode,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RenameVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.RenameVisitor.checkClassName(jadx.core.deobf.Deobfuscator,jadx.core.dex.nodes.ClassNode,jadx.api.JadxArgs)", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.RenameVisitor.checkPackage(jadx.core.deobf.Deobfuscator,jadx.core.dex.nodes.ClassNode,jadx.core.dex.info.ClassInfo,jadx.api.JadxArgs)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CodeGenUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.CodeGenUtils.addRenamedComment(jadx.core.codegen.CodeWriter,jadx.core.dex.attributes.AttrNode,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestReservedPackageNames.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.names.TestReservedPackageNames", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c555cd082552c04dbf48e6b62820618c4594df8d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 58, "deletions": 24, "lines": 82, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 23, "UPD": 5, "INS": 6, "MOV": 10, "DEL": 2, "spoonFilesChanged": 3, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/deobf", "jadx-core/src/main/java/jadx/core/utils"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.RenameVisitor.checkPackage(jadx.core.deobf.Deobfuscator,jadx.core.dex.nodes.ClassNode,jadx.core.dex.info.ClassInfo,jadx.api.JadxArgs)", "jadx.core.deobf.Deobfuscator.getPkgAlias(jadx.core.dex.nodes.ClassNode)", "jadx.core.deobf.Deobfuscator.doPkg(jadx.core.deobf.PackageNode,java.lang.String)", "jadx.core.deobf.Deobfuscator.preProcessClass(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.visitors.RenameVisitor.checkClassName(jadx.core.deobf.Deobfuscator,jadx.core.dex.nodes.ClassNode,jadx.api.JadxArgs)", "jadx.core.deobf.Deobfuscator.processPackageFull(jadx.core.deobf.PackageNode,java.lang.String)", "jadx.core.utils.CodeGenUtils.addRenamedComment(jadx.core.codegen.CodeWriter,jadx.core.dex.attributes.AttrNode,java.lang.String)"]}, {"title": "[core] IF instruction can be used only in fallback mode", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nFile ``` com/paypal/android/foundation/notifications/model/BaseNotificationPreference.java ```\r\n```java\r\n    /*  JADX ERROR: IF instruction can be used only in fallback mode\r\n        jadx.core.utils.exceptions.CodegenException: IF instruction can be used only in fallback mode\r\n        \tat jadx.core.codegen.InsnGen.fallbackOnlyInsn(InsnGen.java:571)\r\n        \tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:477)\r\n        \tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:242)\r\n        \tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:213)\r\n        \tat jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)\r\n        \tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n        \tat jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)\r\n        \tat jadx.core.codegen.RegionGen.makeTryCatch(RegionGen.java:311)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:68)\r\n        \tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n        \tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n        \tat jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:210)\r\n        \tat jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:203)\r\n        \tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:315)\r\n        \tat jadx.core.codegen.ClassGen.addMethods(ClassGen.java:261)\r\n        \tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:224)\r\n        \tat jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:109)\r\n        \tat jadx.core.codegen.ClassGen.makeClass(ClassGen.java:75)\r\n        \tat jadx.core.codegen.CodeGen.wrapCodeGen(CodeGen.java:44)\r\n        \tat jadx.core.codegen.CodeGen.generateJavaCode(CodeGen.java:32)\r\n        \tat jadx.core.codegen.CodeGen.generate(CodeGen.java:20)\r\n        \tat jadx.core.ProcessClass.process(ProcessClass.java:36)\r\n        \tat jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:311)\r\n        \tat jadx.api.JavaClass.decompile(JavaClass.java:62)\r\n        \tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:217)\r\n        */\r\n    /* JADX WARNING: Code restructure failed: missing block: B:5:0x002b, code lost:\r\n        r0 = new com.paypal.android.foundation.notifications.model.NotificationPreferenceAdditionalProperties(r4.getJSONObject(\"additionalProperties\"), r5);\r\n     */\r\n    protected BaseNotificationPreference(org.json.JSONObject r4, com.paypal.android.foundation.core.model.ParsingContext r5) {\r\n        /*\r\n            r3 = this;\r\n            r3.<init>(r4, r5)\r\n            java.lang.String r0 = \"status\"\r\n            java.lang.Object r0 = r3.getObject(r0)\r\n            com.paypal.android.foundation.notifications.model.NotificationPreferenceStatus r0 = (com.paypal.android.foundation.notifications.model.NotificationPreferenceStatus) r0\r\n            r3.status = r0\r\n            java.lang.String r0 = \"type\"\r\n            java.lang.Object r0 = r3.getObject(r0)\r\n            com.paypal.android.foundation.notifications.model.NotificationPreferenceType r0 = (com.paypal.android.foundation.notifications.model.NotificationPreferenceType) r0\r\n            r3.type = r0\r\n            r0 = 0\r\n            java.lang.String r1 = \"additionalProperties\"\r\n            boolean r1 = r4.has(r1)     // Catch:{ JSONException -> 0x002c }\r\n            if (r1 == 0) goto L_0x002c     // Catch:{ JSONException -> 0x002c }\r\n            com.paypal.android.foundation.notifications.model.NotificationPreferenceAdditionalProperties r1 = new com.paypal.android.foundation.notifications.model.NotificationPreferenceAdditionalProperties     // Catch:{ JSONException -> 0x002c }\r\n            java.lang.String r2 = \"additionalProperties\"     // Catch:{ JSONException -> 0x002c }\r\n            org.json.JSONObject r4 = r4.getJSONObject(r2)     // Catch:{ JSONException -> 0x002c }\r\n            r1.<init>(r4, r5)     // Catch:{ JSONException -> 0x002c }\r\n            r0 = r1\r\n        L_0x002c:\r\n            r3.notificationPreferenceAdditionalProperties = r0\r\n            return\r\n        */\r\n        throw new UnsupportedOperationException(\"Method not decompiled: com.paypal.android.foundation.notifications.model.BaseNotificationPreference.<init>(org.json.JSONObject, com.paypal.android.foundation.core.model.ParsingContext):void\");\r\n    }\r\n```\r\nAPK: https://drive.google.com/file/d/1CSo_sZ71WsM3WvGw2VzG7xnkqpUO3GSJ/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/710", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-11 12:45:58", "closed": "2019-07-20 18:58:19", "commits": {"b32dc17dd737d2e2c2c417b652db6e69d0e98635": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "b32dc17dd737d2e2c2c417b652db6e69d0e98635", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["7c53b985cd64e6e7c84afde88d1bf878392cce26"], "nameRev": "b32dc17dd737d2e2c2c417b652db6e69d0e98635 tags/v1.1.0~57", "commitMessage": "fix: don't change AST before checks in ternary transform (#710)\n", "commitDateTime": "2019-07-20 21:33:20", "authoredDateTime": "2019-07-20 21:30:07", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/TernaryMod.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/DebugUtils.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/trycatch/TestTryWithEmptyCatch.java", "insertions": 41, "deletions": 0, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TernaryMod.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.TernaryMod.replaceWithTernary(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "DebugUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.DebugUtils.printInsns(jadx.core.dex.nodes.MethodNode,java.lang.String,jadx.core.dex.nodes.IBlock)", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TestTryWithEmptyCatch.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.trycatch.TestTryWithEmptyCatch", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b32dc17dd737d2e2c2c417b652db6e69d0e98635"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 5, "lines": 11, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/utils"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.regions.TernaryMod.replaceWithTernary(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)", "jadx.core.utils.DebugUtils.printInsns(jadx.core.dex.nodes.MethodNode,java.lang.String,jadx.core.dex.nodes.IBlock)"]}, {"title": "[core] null is assigned to boolean", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nFile ``` com/paypal/android/foundation/core/util/ResourceUtil.java ```\r\n```java\r\n    public static String getStringFromRawResource(Context context, int i) {\r\n        String next;\r\n        CommonContracts.requireNonNull(context);\r\n        boolean z = null; // <<<\r\n```\r\nAnd later in the same method\r\n```java\r\n        } finally {\r\n            if (z != null) {\r\n                try {\r\n                    z.close(); // calling a methods of type boolean\r\n```\r\nAPK: https://drive.google.com/file/d/1CSo_sZ71WsM3WvGw2VzG7xnkqpUO3GSJ/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/709", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-11 12:36:05", "closed": "2019-07-12 20:37:54", "commits": {"a587ce88ea8919bf73f79406b9605c2046cc8820": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "a587ce88ea8919bf73f79406b9605c2046cc8820", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["a530371b6fddfc228090fd299fbd826f85ee7a62"], "nameRev": "a587ce88ea8919bf73f79406b9605c2046cc8820 tags/v1.1.0~75", "commitMessage": "fix: ignore finally extraction with only one 'if' instruction (#709)\n", "commitDateTime": "2019-07-12 21:21:14", "authoredDateTime": "2019-07-12 20:55:19", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/MarkFinallyVisitor.java", "insertions": 17, "deletions": 5, "lines": 22}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/trycatch/TestTryCatchFinally10.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/trycatch/TestTryCatchFinally9.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "jadx-core/src/test/smali/trycatch/TestTryCatchFinally10.smali", "insertions": 107, "deletions": 0, "lines": 107}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MarkFinallyVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.MarkFinallyVisitor.searchFromFirstBlock(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.visitors.blocksmaker.helpers.FinallyExtractInfo)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.MarkFinallyVisitor.checkSlice(jadx.core.dex.visitors.blocksmaker.helpers.InsnsSlice)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTryCatchFinally10.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.trycatch.TestTryCatchFinally10", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTryCatchFinally9.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.trycatch.TestTryCatchFinally9", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a587ce88ea8919bf73f79406b9605c2046cc8820"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 5, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.MarkFinallyVisitor.searchFromFirstBlock(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.visitors.blocksmaker.helpers.FinallyExtractInfo)", "jadx.core.dex.visitors.MarkFinallyVisitor.checkSlice(jadx.core.dex.visitors.blocksmaker.helpers.InsnsSlice)"]}, {"title": "[core] Use of register instead of variable name", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nFile ``` com/paypal/android/foundation/core/appsupport/ConfigImpl.java ```\r\nNo jadx errors are shown for this method\r\n```java\r\n    private Set determineChangedValues(HashMap<String, Object> hashMap) {\r\n        DesignByContract.require(validateConfiguration(hashMap), \"Not a valid configuration.\", new Object[0]);\r\n        HashSet hashSet = new HashSet();\r\n        synchronized (this.defaultValuesByPath) {\r\n            for (String next : this.defaultValuesByPath.keySet()) {\r\n                Object obj = hashMap.get(next);\r\n                r5 = obj != null ? !getValueObject(next).equals(obj) : this.valuesByPath.get(next) != null;\r\n                if (r5) { // <<<\r\n                    hashSet.add(next);\r\n```\r\nAPK: https://drive.google.com/file/d/1CSo_sZ71WsM3WvGw2VzG7xnkqpUO3GSJ/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/708", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-11 11:42:28", "closed": "2019-07-17 20:18:52", "commits": {"aad2d24c589c49749410315d859412f6a8c62b16": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "24dc68652ef340c066df6cc34676807466c06fb2": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "aad2d24c589c49749410315d859412f6a8c62b16", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["15d56abeb659538f793e6e16dade3ce4e2f9e121"], "nameRev": "aad2d24c589c49749410315d859412f6a8c62b16 tags/v1.1.0~63", "commitMessage": "fix: unbind unused ssa variable after ternary conversion (#708)\n", "commitDateTime": "2019-07-16 19:44:48", "authoredDateTime": "2019-07-16 19:44:48", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/TernaryMod.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/variables/ProcessVariables.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/shrink/CodeShrinkVisitor.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/InsnRemover.java", "insertions": 30, "deletions": 5, "lines": 35}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestConditions14.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestTernary4.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestTypeResolver3.java", "insertions": 0, "deletions": 10, "lines": 10}, {"filePath": "jadx-core/src/test/smali/conditions/TestTernary4.smali", "insertions": 144, "deletions": 0, "lines": 144}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TernaryMod.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.TernaryMod.makeTernaryInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProcessVariables.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.variables.ProcessVariables.checkDeclareAtAssign(jadx.core.dex.instructions.args.SSAVar)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CodeShrinkVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.inline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.BlockNode)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.shrinkBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.utils.InsnList,java.util.List,jadx.core.dex.visitors.shrink.ArgsInfo,jadx.core.dex.instructions.args.RegisterArg)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnRemover.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.InsnRemover.unbindResult(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "TOT": 13, "UPD": 3, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "jadx.core.utils.InsnRemover.unbindInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.InsnRemover.removeSsaVar(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.InsnRemover.unbindArgUsage(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestConditions14.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestConditions14.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.conditions.TestConditions14.TestCls.test(java.lang.Object,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TestTernary4.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestTernary4", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTypeResolver3.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver3.test3()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.types.TestTypeResolver3.test()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "24dc68652ef340c066df6cc34676807466c06fb2", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["aad2d24c589c49749410315d859412f6a8c62b16"], "nameRev": "24dc68652ef340c066df6cc34676807466c06fb2 tags/v1.1.0~62", "commitMessage": "fix: check that iteration variable in for-each loop not used outside (#708)\n", "commitDateTime": "2019-07-17 22:42:33", "authoredDateTime": "2019-07-17 15:10:47", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/LoopRegionVisitor.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/loops/TestLoopDetection5.java", "insertions": 52, "deletions": 0, "lines": 52}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LoopRegionVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.LoopRegionVisitor.checkIterableForEach(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.loops.LoopRegion,jadx.core.dex.regions.conditions.IfCondition)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestLoopDetection5.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.loops.TestLoopDetection5", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aad2d24c589c49749410315d859412f6a8c62b16", "24dc68652ef340c066df6cc34676807466c06fb2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 49, "deletions": 9, "lines": 58, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 29, "UPD": 3, "INS": 16, "MOV": 9, "DEL": 1, "spoonFilesChanged": 5, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/dex/visitors/shrink", "jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/dex/visitors/regions/variables"], "changesInPackagesSPOON": ["jadx.core.utils.InsnRemover.unbindResult(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.shrinkBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "jadx.core.utils.InsnRemover.unbindInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.visitors.regions.LoopRegionVisitor.checkIterableForEach(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.loops.LoopRegion,jadx.core.dex.regions.conditions.IfCondition)", "jadx.core.utils.InsnRemover.removeSsaVar(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "jadx.core.dex.visitors.regions.variables.ProcessVariables.checkDeclareAtAssign(jadx.core.dex.instructions.args.SSAVar)", "jadx.core.utils.InsnRemover.unbindArgUsage(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg)", "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.inline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.regions.TernaryMod.makeTernaryInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion)", "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.utils.InsnList,java.util.List,jadx.core.dex.visitors.shrink.ArgsInfo,jadx.core.dex.instructions.args.RegisterArg)"]}, {"title": "[core] Use of null without cast", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nThe most simple test case is in file ``` com/paypal/android/p2pmobile/liftoff/cashout/usagetracker/CashOutTrackerHelper.java ```\r\n```java\r\n    private void trackWithKey(@android.support.annotation.NonNull java.lang.String str, com.paypal.android.p2pmobile.liftoff.cashout.model.FlowSession flowSession) {\r\n        trackWithKey(str, flowSession, null);\r\n    }\r\n```\r\nThis call is ambiguous and in such cases method binding keeps unresolved :(\r\n\r\nAPK: https://drive.google.com/file/d/1CSo_sZ71WsM3WvGw2VzG7xnkqpUO3GSJ/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/707", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-09 13:25:35", "closed": "2019-07-10 18:28:46", "commits": {"12bb63237155b1aebc7b64c481b776286d5c73dc": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "12bb63237155b1aebc7b64c481b776286d5c73dc", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["e4fc6774b1747d63ff29d98bbc79da0c6873ef7c"], "nameRev": "12bb63237155b1aebc7b64c481b776286d5c73dc tags/v1.1.0~78", "commitMessage": "fix: always cast null objects in overloaded method (#707)\n", "commitDateTime": "2019-07-10 21:11:02", "authoredDateTime": "2019-07-10 21:08:37", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 15, "deletions": 7, "lines": 22}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestCastOfNull.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.processOverloadedArg(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,int)", "TOT": 21, "UPD": 4, "INS": 1, "MOV": 15, "DEL": 1}, {"spoonMethodName": "jadx.core.codegen.InsnGen.isCastNeeded(jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestCastOfNull.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestCastOfNull.TestCls.m(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.others.TestCastOfNull.test()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.others.TestCastOfNull.TestCls.test()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["12bb63237155b1aebc7b64c481b776286d5c73dc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 7, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 22, "UPD": 4, "INS": 2, "MOV": 15, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/codegen"], "changesInPackagesSPOON": ["jadx.core.codegen.InsnGen.isCastNeeded(jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.ArgType)", "jadx.core.codegen.InsnGen.processOverloadedArg(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,int)"]}, {"title": "[core] Use of type variables in children classes", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n (for example `JadxRuntimeException: Can't find immediate dominator for block`)\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nFile ``` com/paypal/android/p2pmobile/onboarding/components/NameComponent.java ```\r\n```java\r\n    public void initView(@NonNull Context context, @NonNull ComponentItem componentItem) {\r\n        super.initView(context, componentItem);\r\n        List<W> /* <<< */ fieldWrappersByFieldType = getFieldWrappersByFieldType(FieldItem.Type.NAME, FieldItemTextInputLayoutWrapper.class);\r\n        if (fieldWrappersByFieldType == null || fieldWrappersByFieldType.isEmpty()) {\r\n            throw new IllegalArgumentException(\"FieldItemTextInputLayoutWrapper is not initialized properly\");\r\n        }\r\n        for (W w : fieldWrappersByFieldType) { // <<<<\r\n            w.onViewAdded();\r\n            addView(w.getView());\r\n        }\r\n    }\r\n```\r\nyou see that ``` W ``` is used which is declared in its super class\r\n```java\r\npublic class Component<T, W extends FieldWrapper> extends LinearLayout {\r\n```\r\nbut in current class the type variable doesn't exist anymore\r\n```java\r\npublic class NameComponent extends Component<String, FieldItemTextInputLayoutWrapper> {\r\n```\r\nAPK: https://drive.google.com/file/d/1CSo_sZ71WsM3WvGw2VzG7xnkqpUO3GSJ/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/706", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-09 13:18:10", "closed": "2020-04-21 19:52:59", "commits": {}, "ttf": 287.0002777777778, "commitsDetails": []}, {"title": "[core] 0 is used instead of null", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n (for example `JadxRuntimeException: Can't find immediate dominator for block`)\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nFailing code in file ``` com/paypal/android/p2pmobile/onboarding/fragments/NewOnboardingBaseFragment.java ```\r\n```java\r\n    /* JADX WARNING: type inference failed for: r3v0, types: [java.util.List, java.util.List<com.paypal.android.foundation.onboarding.model.ComponentItem>] */\r\n    /* access modifiers changed from: protected */\r\n    /* JADX WARNING: Unknown variable types count: 1 */\r\n    public void setupUiComponentOnPages(@android.support.annotation.NonNull java.util.List<com.paypal.android.foundation.onboarding.model.ComponentItem> r3, com.paypal.android.p2pmobile.onboarding.components.IComponentCallbackListener iComponentCallbackListener) {\r\n        if (r3 != 0 || !r3.isEmpty()) {\r\n```\r\nAPK: https://drive.google.com/file/d/1CSo_sZ71WsM3WvGw2VzG7xnkqpUO3GSJ/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/705", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-09 13:09:15", "closed": "2019-07-10 18:29:19", "commits": {"e4fc6774b1747d63ff29d98bbc79da0c6873ef7c": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "e4fc6774b1747d63ff29d98bbc79da0c6873ef7c", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["f57dfb3f2ec4181f2e767b82cdb2e24d1242c8fe"], "nameRev": "e4fc6774b1747d63ff29d98bbc79da0c6873ef7c tags/v1.1.0~79", "commitMessage": "fix: make correct hash calculation for GenericObject type (#705)\n", "commitDateTime": "2019-07-10 16:58:52", "authoredDateTime": "2019-07-10 16:58:52", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "jadx-core/src/test/java/jadx/core/dex/instructions/args/ArgTypeTest.java", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ArgType.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.ArgType.ObjectType", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.instructions.args.ArgType.GenericObject", "TOT": 19, "UPD": 1, "INS": 2, "MOV": 11, "DEL": 5}, {"spoonMethodName": "jadx.core.dex.instructions.args.ArgType.GenericObject.calcHash()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ArgTypeTest.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.ArgTypeTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e4fc6774b1747d63ff29d98bbc79da0c6873ef7c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 4, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 23, "UPD": 2, "INS": 5, "MOV": 11, "DEL": 5, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/instructions/args"], "changesInPackagesSPOON": ["jadx.core.dex.instructions.args.ArgType.ObjectType", "jadx.core.dex.instructions.args.ArgType.GenericObject", "jadx.core.dex.instructions.args.ArgType.GenericObject.calcHash()"]}, {"title": "[core] Constructor and super constructor invocations should be first statements (update)", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n (for example `JadxRuntimeException: Can't find immediate dominator for block`)\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nOriginal thread: https://github.com/skylot/jadx/issues/685\r\n\r\nCan you place (super) constructor call on the first place? I've noticed that anonymous classes are changed to inner classes, but used external variables are not accessible anymore. Example (class ``` \r\ncom.paypal.android.p2pmobile.wallet.common.fragments.ThreeDsWebViewFragment$C35854 ```)\r\n```java\r\n    /* renamed from: com.paypal.android.p2pmobile.wallet.common.fragments.ThreeDsWebViewFragment$4 */\r\n    class C35854 extends android.os.CountDownTimer {\r\n        final /* synthetic */ java.lang.String val$password; // <<< is not initialized anymore\r\n\r\n        /* JADX WARN: Illegal instructions before constructor call commented (this can break semantics) */\r\n        C35854(long j, long j2, java.lang.String str) {\r\n            // this.val$password = str;\r\n            super(j, j2);\r\n        }\r\n```\r\nAPK: https://drive.google.com/file/d/1CSo_sZ71WsM3WvGw2VzG7xnkqpUO3GSJ/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/704", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-09 12:09:04", "closed": "2019-07-21 17:32:46", "commits": {"a530371b6fddfc228090fd299fbd826f85ee7a62": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "c8de7b97ddbd0becb8a70fa27be487842b3dee27": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "a530371b6fddfc228090fd299fbd826f85ee7a62", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["0c5a83c0210f179fd1388620075c8559ea1cb68a"], "nameRev": "a530371b6fddfc228090fd299fbd826f85ee7a62 tags/v1.1.0~76", "commitMessage": "fix: improve StringBuilder elimination (#704)\n", "commitDateTime": "2019-07-11 20:07:14", "authoredDateTime": "2019-07-11 20:07:14", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java", "insertions": 128, "deletions": 81, "lines": 209}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/BlockUtils.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/InsnRemover.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/{ => others}/TestStringBuilderElimination.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/{ => others}/TestStringBuilderElimination2.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestStringBuilderElimination3.java", "insertions": 63, "deletions": 0, "lines": 63}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.InsnNode", "TOT": 9, "UPD": 0, "INS": 3, "MOV": 5, "DEL": 1}]}, {"spoonFilePath": "SimplifyVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.SimplifyVisitor.flattenInsnChain(jadx.core.dex.nodes.InsnNode)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.SimplifyVisitor.convertInvoke(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.InvokeNode)", "TOT": 112, "UPD": 42, "INS": 1, "MOV": 56, "DEL": 13}, {"spoonMethodName": "jadx.core.dex.visitors.SimplifyVisitor.collectUseChain(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.InvokeNode,jadx.core.dex.instructions.args.RegisterArg)", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.SimplifyVisitor.convertStringBuilderChain(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.InvokeNode,java.util.List)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.SimplifyVisitor.getArgFromAppend(jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.SimplifyVisitor.flattenInsnChainUntil(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.InsnType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BlockUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.BlockUtils.getBlockByInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnRemover.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.InsnRemover", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.InsnRemover.perform()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TestStringBuilderElimination.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.TestStringBuilderElimination.test()", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestStringBuilderElimination2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.TestStringBuilderElimination2.test1()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.TestStringBuilderElimination2.test2()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.TestStringBuilderElimination2.test3()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.TestStringBuilderElimination2.testChainWithDelete()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestStringBuilderElimination3.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestStringBuilderElimination3", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c8de7b97ddbd0becb8a70fa27be487842b3dee27", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["b32dc17dd737d2e2c2c417b652db6e69d0e98635"], "nameRev": "c8de7b97ddbd0becb8a70fa27be487842b3dee27 tags/v1.1.0~56", "commitMessage": "fix: instead commenting move constructor call to the top (#704)\n", "commitDateTime": "2019-07-21 19:45:22", "authoredDateTime": "2019-07-21 19:45:22", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/mods/ConstructorInsn.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/PrepareForCodeGen.java", "insertions": 51, "deletions": 75, "lines": 126}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/BlockUtils.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestInsnsBeforeSuper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestInsnsBeforeThis.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConstructorInsn.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.mods.ConstructorInsn.CallType", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareForCodeGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IBlock)", "TOT": 20, "UPD": 8, "INS": 0, "MOV": 9, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor.addMethodMsg(jadx.core.dex.nodes.MethodNode)", "TOT": 11, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 4}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor.leaveRegion(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IRegion)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsInConstructor(jadx.core.dex.nodes.MethodNode)", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.moveConstructorInConstructor(jadx.core.dex.nodes.MethodNode)", "TOT": 10, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.searchConstructorCall(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BlockUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.BlockUtils.isFirstInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInsnsBeforeSuper.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestInsnsBeforeSuper.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInsnsBeforeThis.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestInsnsBeforeThis.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a530371b6fddfc228090fd299fbd826f85ee7a62", "c8de7b97ddbd0becb8a70fa27be487842b3dee27"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 204, "deletions": 164, "lines": 368, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 206, "UPD": 65, "INS": 33, "MOV": 85, "DEL": 23, "spoonFilesChanged": 6, "spoonMethodsChanged": 20}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/instructions/mods", "jadx-core/src/main/java/jadx/core/dex/nodes"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor", "jadx.core.dex.visitors.SimplifyVisitor.flattenInsnChainUntil(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.InsnType)", "jadx.core.utils.InsnRemover", "jadx.core.dex.visitors.SimplifyVisitor.convertStringBuilderChain(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.InvokeNode,java.util.List)", "jadx.core.dex.visitors.SimplifyVisitor.convertInvoke(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.InvokeNode)", "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor.leaveRegion(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IRegion)", "jadx.core.dex.nodes.InsnNode", "jadx.core.dex.visitors.SimplifyVisitor.flattenInsnChain(jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.visitors.SimplifyVisitor.getArgFromAppend(jadx.core.dex.nodes.InsnNode)", "jadx.core.utils.InsnRemover.perform()", "jadx.core.dex.visitors.PrepareForCodeGen.searchConstructorCall(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.PrepareForCodeGen.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor.addMethodMsg(jadx.core.dex.nodes.MethodNode)", "jadx.core.utils.BlockUtils.isFirstInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.instructions.mods.ConstructorInsn.CallType", "jadx.core.dex.visitors.SimplifyVisitor.collectUseChain(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.InvokeNode,jadx.core.dex.instructions.args.RegisterArg)", "jadx.core.utils.BlockUtils.getBlockByInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IBlock)", "jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsInConstructor(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.PrepareForCodeGen.moveConstructorInConstructor(jadx.core.dex.nodes.MethodNode)"]}, {"title": "[core] Missing catch/finally statement for try", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n (for example `JadxRuntimeException: Can't find immediate dominator for block`)\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nClass ``` com.paypal.android.p2pmobile.wallet.BaseWalletHandles ```\r\n```java\r\n    public com.paypal.android.p2pmobile.wallet.managers.IWalletOperationManager getWalletOperationManager() {\r\n        synchronized (com.paypal.android.p2pmobile.wallet.WalletModel.class) {\r\n            try {\r\n                if (this.mWalletOperationManager == null) {\r\n                    this.mWalletOperationManager = com.paypal.android.p2pmobile.wallet.managers.WalletOperationManager.newInstance();\r\n                }\r\n            } // the rest is missing\r\n        }\r\n        return this.mWalletOperationManager;\r\n    }\r\n```\r\nAPK: https://drive.google.com/file/d/1CSo_sZ71WsM3WvGw2VzG7xnkqpUO3GSJ/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/703", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-09 12:03:10", "closed": "2019-07-22 18:04:55", "commits": {"3ae8359408de8f20d65e0a77420a0df32c6a08b3": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "3ae8359408de8f20d65e0a77420a0df32c6a08b3", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["6b76a3c78718a247ee9b900ee27928c73fa097f6"], "nameRev": "3ae8359408de8f20d65e0a77420a0df32c6a08b3 tags/v1.1.0~53", "commitMessage": "fix: improve exception handler remove (#703)\n", "commitDateTime": "2019-07-22 20:38:16", "authoredDateTime": "2019-07-22 18:24:43", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/trycatch/ExceptionHandler.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/trycatch/TryCatchBlock.java", "insertions": 17, "deletions": 1, "lines": 18}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/MarkFinallyVisitor.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/files/FileUtils.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "jadx-core/src/test/java/jadx/tests/external/.gitignore", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MethodNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.MethodNode.initTryCatches(jadx.core.dex.nodes.MethodNode,com.android.dex.Code,jadx.core.dex.nodes.InsnNode[])", "TOT": 12, "UPD": 8, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.clearExceptionHandlers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExceptionHandler.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.trycatch.ExceptionHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.trycatch.ExceptionHandler.isRemoved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.trycatch.ExceptionHandler.markForRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TryCatchBlock.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.trycatch.TryCatchBlock.removeSameHandlers(jadx.core.dex.trycatch.TryCatchBlock)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.trycatch.TryCatchBlock.unbindHandler(jadx.core.dex.trycatch.ExceptionHandler)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MarkFinallyVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.MarkFinallyVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.files.FileUtils.deleteDir(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3ae8359408de8f20d65e0a77420a0df32c6a08b3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 49, "deletions": 8, "lines": 57, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 25, "UPD": 8, "INS": 13, "MOV": 3, "DEL": 1, "spoonFilesChanged": 5, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/trycatch", "jadx-core/src/main/java/jadx/core/utils/files", "jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/dex/visitors"], "changesInPackagesSPOON": ["jadx.core.utils.files.FileUtils.deleteDir(java.io.File)", "jadx.core.dex.trycatch.ExceptionHandler.isRemoved()", "jadx.core.dex.nodes.MethodNode.initTryCatches(jadx.core.dex.nodes.MethodNode,com.android.dex.Code,jadx.core.dex.nodes.InsnNode[])", "jadx.core.dex.trycatch.ExceptionHandler", "jadx.core.dex.trycatch.TryCatchBlock.removeSameHandlers(jadx.core.dex.trycatch.TryCatchBlock)", "jadx.core.dex.trycatch.ExceptionHandler.markForRemove()", "jadx.core.dex.visitors.MarkFinallyVisitor.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.trycatch.TryCatchBlock.unbindHandler(jadx.core.dex.trycatch.ExceptionHandler)", "jadx.core.dex.nodes.MethodNode.clearExceptionHandlers()"]}, {"title": "[core] Incorrect type variable in generic type", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n (for example `JadxRuntimeException: Can't find immediate dominator for block`)\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nOriginal declaration: https://github.com/apache/commons-collections/blob/bf5e45885a2d01010a7b9299feb44c72495fa6d9/src/main/java/org/apache/commons/collections4/comparators/ReverseComparator.java#L39\r\n```java\r\n private final Comparator<? super E> comparator;\r\n``` \r\n\r\nDecompiled declaration (class ``` org.apache.commons.a.d.g ``` or ``` org.apache.commons.p185a.p497d.C10101g ```)\r\n```java\r\n    private final java.util.Comparator<O> f28238b;\r\n```\r\nbut should be also\r\n```java\r\n    private final java.util.Comparator<? super O> f28238b;\r\n```\r\nBecause of this bug multiple errors are occurred in the class body\r\n\r\nAPK: https://drive.google.com/file/d/1x6VtjwLojBsf2boZlBaDzzSoUdSWkEfU/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/702", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-09 11:54:40", "closed": "2019-10-21 18:55:50", "commits": {}, "ttf": 104.00027777777778, "commitsDetails": []}, {"title": "[core] Incorrect argument type in an implemented method", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n (for example `JadxRuntimeException: Can't find immediate dominator for block`)\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nClass\r\n```java\r\n/* renamed from: org.apache.commons.a.e.ab */\r\npublic class ab<I, O> implements java.io.Serializable, org.apache.commons.p185a.an<I, O> {\r\n```\r\n```java\r\n    /* renamed from: b */\r\n    public O mo21891b(java.lang.Object obj) {\r\n```\r\n\r\nInterface\r\n```java\r\n/* renamed from: org.apache.commons.a.an */\r\npublic interface an<I, O> {\r\n    /* renamed from: b */\r\n    O mo21891b(I i);\r\n}\r\n```\r\n\r\nSo the method should be implemented with ``` I ``` type, but not ``` java.lang.Object ```\r\nAPK: https://drive.google.com/file/d/1x6VtjwLojBsf2boZlBaDzzSoUdSWkEfU/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/701", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-08 09:58:01", "closed": "2019-07-09 10:44:12", "commits": {"f57dfb3f2ec4181f2e767b82cdb2e24d1242c8fe": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "f57dfb3f2ec4181f2e767b82cdb2e24d1242c8fe", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["c3f7a049d829b8e08db9cd5a5636771789e3b5b2"], "nameRev": "f57dfb3f2ec4181f2e767b82cdb2e24d1242c8fe tags/v1.1.0~80", "commitMessage": "test: check method override with generic arguments (#701)\n", "commitDateTime": "2019-07-09 13:08:32", "authoredDateTime": "2019-07-09 12:58:30", "commitGitStats": [{"filePath": "jadx-core/src/test/java/jadx/tests/integration/generics/TestGenericsMthOverride.java", "insertions": 57, "deletions": 0, "lines": 57}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TestGenericsMthOverride.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.generics.TestGenericsMthOverride", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f57dfb3f2ec4181f2e767b82cdb2e24d1242c8fe"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[core] Code restructure failed: missing block", "body": "**Checks before report**\r\n- [+] check [latest unstable build](https://bintray.com/skylot/jadx/unstable/_latestVersion#files) (maybe issue already fixed)\r\n- [+] search existing issues by exception message\r\n (for example `JadxRuntimeException: Can't find immediate dominator for block`)\r\n- [+] check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\r\n\r\n**Describe error**\r\nClass ``` com.grab.rewards.models.RewardCta ```\r\n```java\r\n    /* JADX WARNING: Code restructure failed: missing block: B:8:0x0024, code lost:\r\n        if (p343e.p345f.p347b.C5608m.m19673a((java.lang.Object) r2.smartlink, (java.lang.Object) r3.smartlink) != false) goto L_0x0029;\r\n     */\r\n    public boolean equals(java.lang.Object obj) {\r\n        if (this != obj) {\r\n            if (obj instanceof com.grab.rewards.models.RewardCta) {\r\n                com.grab.rewards.models.RewardCta rewardCta = (com.grab.rewards.models.RewardCta) obj;\r\n                if (p343e.p345f.p347b.C5608m.m19673a((java.lang.Object) this.launch, (java.lang.Object) rewardCta.launch)) {\r\n                    if (p343e.p345f.p347b.C5608m.m19673a((java.lang.Object) this.download, (java.lang.Object) rewardCta.download)) {\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n```\r\nI have a lot of errors in important methods, but they are super big, so I hope sometimes they will be fixed via such reports :)\r\n\r\nAPK: https://drive.google.com/file/d/1i1EnqbUDbJ68upS_YbDfj0iNwC1MUep2/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/699", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-07-07 14:21:47", "closed": "2019-11-30 17:53:30", "commits": {"bae36f9720a31d105f0c88a2e855823bbb249519": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "d1a6841c20d8880068bcce6bc71d9ccbe146403e": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 146.00027777777777, "commitsDetails": [{"commitHash": "bae36f9720a31d105f0c88a2e855823bbb249519", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["11db454b84044d45e73b34e9c5c7297974a52e14"], "nameRev": "bae36f9720a31d105f0c88a2e855823bbb249519 tags/v1.1.0~9", "commitMessage": "fix: merge const block before return (#699)\n", "commitDateTime": "2019-10-31 15:47:29", "authoredDateTime": "2019-10-30 21:01:00", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockProcessor.java", "insertions": 82, "deletions": 34, "lines": 116}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/Utils.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestConditions18.java", "insertions": 17, "deletions": 2, "lines": 19}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestConditions21.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestTernaryInIf2.java", "insertions": 34, "deletions": 5, "lines": 39}, {"filePath": "jadx-core/src/test/smali/conditions/TestConditions21.smali", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegisterArg.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.RegisterArg.sameReg(jadx.core.dex.instructions.args.InsnArg)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BlockProcessor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.splitReturn(jadx.core.dex.nodes.MethodNode)", "TOT": 46, "UPD": 8, "INS": 0, "MOV": 35, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.duplicateReturnInsn(jadx.core.dex.nodes.InsnNode)", "TOT": 27, "UPD": 13, "INS": 0, "MOV": 13, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.modifyBlocksTree(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.isReturnArgAssignInPred(java.util.List,jadx.core.dex.nodes.InsnNode)", "TOT": 8, "UPD": 2, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.mergeConstAndReturnBlocks(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.splitReturnBlocks(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.splitReturn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.blocksmaker.BlockProcessor.mergeConstReturn(jadx.core.dex.nodes.MethodNode)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Utils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.Utils.getOne(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestConditions18.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestConditions18.test()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.tests.integration.conditions.TestConditions18.testNYI()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestConditions21.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestConditions21", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTernaryInIf2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestTernaryInIf2.test()", "TOT": 23, "UPD": 10, "INS": 1, "MOV": 10, "DEL": 2}, {"spoonMethodName": "jadx.tests.integration.conditions.TestTernaryInIf2.TestCls", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 1}, {"spoonMethodName": "jadx.tests.integration.conditions.TestTernaryInIf2.testNYI()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.conditions.TestTernaryInIf2.TestCls.check()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.conditions.TestTernaryInIf2.TestCls.equals(jadx.tests.integration.conditions.TestTernaryInIf2$TestCls)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d1a6841c20d8880068bcce6bc71d9ccbe146403e", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["600842a1a6fc19dfdac7ae2938a63bcb711cba74"], "nameRev": "d1a6841c20d8880068bcce6bc71d9ccbe146403e tags/v1.1.0~1", "commitMessage": "fix: inline assign in complex conditions (#699)\n", "commitDateTime": "2019-11-30 16:32:29", "authoredDateTime": "2019-11-30 19:31:34", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 14, "deletions": 6, "lines": 20}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AFlag.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfInfo.java", "insertions": 23, "deletions": 4, "lines": 27}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java", "insertions": 57, "deletions": 22, "lines": 79}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/shrink/CodeShrinkVisitor.java", "insertions": 32, "deletions": 5, "lines": 37}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestConditions19.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/loops/TestLoopCondition.java", "insertions": 1, "deletions": 26, "lines": 27}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/variables/TestVariables5.java", "insertions": 8, "deletions": 6, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.addArg(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnArg,boolean)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "jadx.core.codegen.InsnGen.forceAssign(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.InvokeNode,jadx.core.dex.nodes.MethodNode)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "jadx.core.codegen.InsnGen.addWrappedArg(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnWrapArg,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AFlag.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.AFlag", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IfInfo.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.regions.conditions.IfInfo.invert(jadx.core.dex.regions.conditions.IfInfo)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.regions.conditions.IfInfo", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.regions.conditions.IfInfo.getForceInlineInsns()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.regions.conditions.IfInfo.resetForceInlineInsns()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.regions.conditions.IfInfo.addInsnsForForcedInline(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.regions.conditions.IfInfo.merge(jadx.core.dex.regions.conditions.IfInfo[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IfMakerHelper.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.IfMakerHelper.getNextIfNode(jadx.core.dex.nodes.BlockNode)", "TOT": 10, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.regions.IfMakerHelper.makeIfInfo(jadx.core.dex.nodes.BlockNode)", "TOT": 11, "UPD": 3, "INS": 4, "MOV": 2, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(jadx.core.dex.regions.conditions.IfInfo)", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.regions.IfMakerHelper.getNextIf(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode)", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.regions.IfMakerHelper.canSelectNext(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(jadx.core.dex.regions.conditions.IfInfo)", "TOT": 9, "UPD": 0, "INS": 7, "MOV": 2, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.regions.IfMakerHelper.confirmMerge(jadx.core.dex.regions.conditions.IfInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.regions.IfMakerHelper.getNextIfNodeInfo(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegionMaker.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMaker.processIf(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.IfNode,jadx.core.dex.visitors.regions.RegionStack)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CodeShrinkVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.assignInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.BlockNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.utils.InsnList,java.util.List,jadx.core.dex.visitors.shrink.ArgsInfo,jadx.core.dex.instructions.args.RegisterArg)", "TOT": 11, "UPD": 0, "INS": 6, "MOV": 5, "DEL": 0}]}, {"spoonFilePath": "TestConditions19.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestConditions19.test()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TestLoopCondition.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.loops.TestLoopCondition.TestCls.testMoreComplexIfInLoop(java.util.ArrayList)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.loops.TestLoopCondition.TestCls", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.tests.integration.loops.TestLoopCondition.TestCls.setEnabled(boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.tests.integration.loops.TestLoopCondition.TestCls.testIfInLoop()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.tests.integration.loops.TestLoopCondition.test()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}]}, {"spoonFilePath": "TestVariables5.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.variables.TestVariables5.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.variables.TestVariables5.TestCls.testIfInLoop()", "TOT": 14, "UPD": 3, "INS": 1, "MOV": 7, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bae36f9720a31d105f0c88a2e855823bbb249519", "d1a6841c20d8880068bcce6bc71d9ccbe146403e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 231, "deletions": 71, "lines": 302, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 182, "UPD": 39, "INS": 56, "MOV": 72, "DEL": 15, "spoonFilesChanged": 9, "spoonMethodsChanged": 31}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/dex/visitors/shrink", "jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker", "jadx-core/src/main/java/jadx/core/dex/instructions/args", "jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/dex/attributes", "jadx-core/src/main/java/jadx/core/dex/regions/conditions"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.regions.IfMakerHelper.getNextIf(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.regions.conditions.IfInfo.invert(jadx.core.dex.regions.conditions.IfInfo)", "jadx.core.codegen.InsnGen.addArg(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnArg,boolean)", "jadx.core.dex.regions.conditions.IfInfo.getForceInlineInsns()", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.modifyBlocksTree(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.regions.conditions.IfInfo.merge(jadx.core.dex.regions.conditions.IfInfo[])", "jadx.core.dex.attributes.AFlag", "jadx.core.dex.visitors.regions.IfMakerHelper.canSelectNext(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.assignInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.regions.IfMakerHelper.confirmMerge(jadx.core.dex.regions.conditions.IfInfo)", "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.utils.InsnList,java.util.List,jadx.core.dex.visitors.shrink.ArgsInfo,jadx.core.dex.instructions.args.RegisterArg)", "jadx.core.codegen.InsnGen.addWrappedArg(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnWrapArg,boolean)", "jadx.core.dex.regions.conditions.IfInfo", "jadx.core.dex.regions.conditions.IfInfo.resetForceInlineInsns()", "jadx.core.dex.visitors.regions.IfMakerHelper.getNextIfNode(jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.regions.RegionMaker.processIf(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.IfNode,jadx.core.dex.visitors.regions.RegionStack)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.duplicateReturnInsn(jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.visitors.regions.IfMakerHelper.getNextIfNodeInfo(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.regions.IfMakerHelper.searchNestedIf(jadx.core.dex.regions.conditions.IfInfo)", "jadx.core.codegen.InsnGen.forceAssign(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.InvokeNode,jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.regions.conditions.IfInfo.addInsnsForForcedInline(java.util.List)", "jadx.core.dex.visitors.regions.IfMakerHelper.makeIfInfo(jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.regions.IfMakerHelper.mergeNestedIfNodes(jadx.core.dex.regions.conditions.IfInfo)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.splitReturnBlocks(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.isReturnArgAssignInPred(java.util.List,jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.splitReturn(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.instructions.args.RegisterArg.sameReg(jadx.core.dex.instructions.args.InsnArg)", "jadx.core.utils.Utils.getOne(java.util.List)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.mergeConstAndReturnBlocks(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.splitReturn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.blocksmaker.BlockProcessor.mergeConstReturn(jadx.core.dex.nodes.MethodNode)"]}, {"title": "[core]java.lang.NoClassDefFoundError: ch/qos/logback/core/joran/spi/JoranException", "body": "**Describe error**\r\ncan not run the jadx-gui and jadx, and when i tried to unzip logback-core jar file, i got this:\r\n```shell\r\n> unzip logback-core-1.2.3.jar\r\nArchive:  logback-core-1.2.3.jar\r\n  End-of-central-directory signature not found.  Either this file is not\r\n  a zipfile, or it constitutes one disk of a multi-part archive.  In the\r\n  latter case the central directory and zipfile comment will be found on\r\n  the last disk(s) of this archive.\r\nunzip:  cannot find zipfile directory in one of logback-core-1.2.3.jar or\r\n        logback-core-1.2.3.jar.zip, and cannot find logback-core-1.2.3.jar.ZIP, period.\r\n```\r\n- provide full name of method or class with error\r\n- provide full java stacktrace\r\n> Failed to instantiate SLF4J LoggerFactory\r\n\r\nReported exception:\r\n```java\r\njava.lang.NoClassDefFoundError: ch/qos/logback/core/joran/spi/JoranException\r\n\tat org.slf4j.LoggerFactory.bind(LoggerFactory.java:150)\r\n\tat org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:124)\r\n\tat org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:412)\r\n\tat org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:357)\r\n\tat org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:383)\r\n\tat jadx.gui.JadxGUI.<clinit>(JadxGUI.java:15)\r\nCaused by: java.lang.ClassNotFoundException: ch.qos.logback.core.joran.spi.JoranException\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:583)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\r\n\t... 6 more\r\nException in thread \"main\" java.lang.NoClassDefFoundError: ch/qos/logback/core/joran/spi/JoranException\r\n\tat org.slf4j.LoggerFactory.bind(LoggerFactory.java:150)\r\n\tat org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:124)\r\n\tat org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:412)\r\n\tat org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:357)\r\n\tat org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:383)\r\n\tat jadx.gui.JadxGUI.<clinit>(JadxGUI.java:15)\r\nCaused by: java.lang.ClassNotFoundException: ch.qos.logback.core.joran.spi.JoranException\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:583)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\r\n\t... 6 more\r\n```", "url": "https://github.com/skylot/jadx/issues/698", "user": "ljsalm089", "labels": ["Core", "bug"], "created": "2019-07-02 03:35:15", "closed": "2019-07-03 12:10:14", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[core] Multi-variable type inference failed (simple test case #2)", "body": "Hi, here is an example of one more pretty simple code that produces this issue in class ``` com.grab.pax.api.model.MultiPoi ```\r\n```java\r\n\r\n    /* JADX WARNING: type inference failed for: r0v2, types: [java.util.Map$Entry, java.lang.Object] */\r\n    /* JADX WARNING: Multi-variable type inference failed. Error: jadx.core.utils.exceptions.JadxRuntimeException: No candidate types for var: r0v2, types: [java.util.Map$Entry, java.lang.Object]\r\n      assigns: [java.lang.Object]\r\n      uses: [java.util.Map$Entry]\r\n      mth insns count: 18\r\n    \tat jadx.core.dex.visitors.typeinference.TypeSearch.fillTypeCandidates(TypeSearch.java:237)\r\n    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n    \tat jadx.core.dex.visitors.typeinference.TypeSearch.run(TypeSearch.java:53)\r\n    \tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.runMultiVariableSearch(TypeInferenceVisitor.java:99)\r\n    \tat jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(TypeInferenceVisitor.java:92)\r\n    \tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:27)\r\n    \tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:14)\r\n    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n    \tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)\r\n    \tat jadx.core.ProcessClass.process(ProcessClass.java:30)\r\n    \tat jadx.core.ProcessClass.lambda$processDependencies$0(ProcessClass.java:49)\r\n    \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\r\n    \tat jadx.core.ProcessClass.processDependencies(ProcessClass.java:49)\r\n    \tat jadx.core.ProcessClass.process(ProcessClass.java:35)\r\n    \tat jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:311)\r\n    \tat jadx.api.JavaClass.decompile(JavaClass.java:62)\r\n    \tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:217)\r\n     */\r\n    /* JADX WARNING: Unknown variable types count: 1 */\r\n    /* Code decompiled incorrectly, please refer to instructions dump. */\r\n    public void writeToParcel(android.os.Parcel parcel, int i) {\r\n        p343e.p345f.p347b.C5608m.m19675b(parcel, \"parcel\");\r\n        java.util.Map<java.lang.Integer, com.grab.pax.api.model.Poi> map = this.poiMap;\r\n        parcel.writeInt(map.size());\r\n        for (? next : map.entrySet()) {\r\n            parcel.writeInt(((java.lang.Integer) next.getKey()).intValue());\r\n            ((com.grab.pax.api.model.Poi) next.getValue()).writeToParcel(parcel, 0);\r\n        }\r\n    }\r\n```\r\n\r\nAnd a simpler test case for different issue in the same class :)\r\n```java\r\n    /* JADX WARNING: Code restructure failed: missing block: B:4:0x0010, code lost:\r\n        if (p343e.p345f.p347b.C5608m.m19673a((java.lang.Object) r1.poiMap, (java.lang.Object) ((com.grab.pax.api.model.MultiPoi) r2).poiMap) != false) goto L_0x0015;\r\n     */\r\n    /* Code decompiled incorrectly, please refer to instructions dump. */\r\n    public boolean equals(java.lang.Object obj) {\r\n        if (this != obj) {\r\n            if (obj instanceof com.grab.pax.api.model.MultiPoi) {\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/1i1EnqbUDbJ68upS_YbDfj0iNwC1MUep2/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/695", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-06-23 21:50:45", "closed": "2019-07-07 11:43:50", "commits": {"ed8c6626317844f0804876269e30ce998e14df7a": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "3eee83c2f28b955fffd4c8d3d3e9613b2af85770": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "ed8c6626317844f0804876269e30ce998e14df7a", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["850df18d7c47cf574912075076328a01ef7ed5be"], "nameRev": "ed8c6626317844f0804876269e30ce998e14df7a tags/v1.1.0~83", "commitMessage": "fix: add generic types propagation (#695)\n", "commitDateTime": "2019-07-06 19:12:31", "authoredDateTime": "2019-07-06 18:37:34", "commitGitStats": [{"filePath": "jadx-core/build.gradle", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "jadx-core/clsp-data/android-29-clst.jar", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "jadx-core/clsp-data/{android-5.1.jar => android-29-res.jar}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/ClsSet.java", "insertions": 124, "deletions": 91, "lines": 215}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java", "insertions": 18, "deletions": 2, "lines": 20}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/NClass.java", "insertions": 43, "deletions": 10, "lines": 53}, {"filePath": "jadx-core/src/main/java/jadx/core/clsp/NMethod.java", "insertions": 59, "deletions": 6, "lines": 65}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/ClassGen.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/MethodGen.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/GenericInfo.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/parser/SignatureParser.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/PrepareForCodeGen.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/LoopRegionVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/variables/ProcessVariables.java", "insertions": 19, "deletions": 11, "lines": 30}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/ITypeBound.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/ITypeBoundDynamic.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeBoundInvokeAssign.java", "insertions": 77, "deletions": 0, "lines": 77}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java", "insertions": 28, "deletions": 1, "lines": 29}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdate.java", "insertions": 97, "deletions": 6, "lines": 103}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdateEntry.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdateInfo.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/IntegrationTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/functional/SignatureParserTest.java", "insertions": 8, "deletions": 9, "lines": 17}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/loops/TestNestedLoops2.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestGenerics2.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/types/TestGenerics3.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "jadx-core/src/test/smali/types/TestGenerics2.smali", "insertions": 68, "deletions": 0, "lines": 68}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "3eee83c2f28b955fffd4c8d3d3e9613b2af85770", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["ed8c6626317844f0804876269e30ce998e14df7a"], "nameRev": "3eee83c2f28b955fffd4c8d3d3e9613b2af85770 tags/v1.1.0~82", "commitMessage": "fix: adjust insn reorder check in code shrink visitor (#695)\n", "commitDateTime": "2019-07-07 14:18:21", "authoredDateTime": "2019-07-07 14:18:21", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/shrink/ArgsInfo.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestConditions18.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/inline/TestInlineInLoop.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "jadx-core/src/test/smali/conditions/TestConditions18.smali", "insertions": 45, "deletions": 0, "lines": 45}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ArgsInfo.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.shrink.ArgsInfo.canMove(int,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TestConditions18.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestConditions18", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInlineInLoop.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.inline.TestInlineInLoop", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ed8c6626317844f0804876269e30ce998e14df7a", "3eee83c2f28b955fffd4c8d3d3e9613b2af85770"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 653, "deletions": 168, "lines": 821, "gitFilesChange": 29}, "spoonStatsSummary": {"TOT": 3.0, "UPD": 0.0, "INS": 2.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/clsp", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference", "jadx-core", "jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/clsp-data/{android-5.1.jar => android-29-res.jar}", "jadx-core/src/main/java/jadx/core/dex/nodes/parser", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/dex/instructions/args", "jadx-core/clsp-data/android-29-clst.jar", "jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/dex/visitors/regions/variables", "jadx-core/src/main/java/jadx/core/dex/visitors/shrink"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.shrink.ArgsInfo.canMove(int,int)"]}, {"title": "decompilation error", "body": "Hi, I'm trying to decompile an APK but it's giving lots of errors. (also tried with `--show-bad-code`)\r\n\r\n[app](https://github.com/AnuTiger/UNKNOWN/blob/master/app.zip)\r\n\r\nsome classes for ex:\r\n`com.app.action.a`, `com.app.g.a` etc", "url": "https://github.com/skylot/jadx/issues/689", "user": "AnuTiger", "labels": ["Core", "bug"], "created": "2019-06-12 12:27:04", "closed": "2019-07-08 10:04:42", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "--show-bad-code not always works", "body": "Hi, I tried to decompile an `apk` with `--show-bad-code` option, that gives me:\r\n\r\n```\r\n/*  JADX ERROR: JadxRuntimeException in pass: BlockProcessor\r\n        jadx.core.utils.exceptions.JadxRuntimeException: Can't find immediate dominator for block B:39:0x00e0 in {18, 21, 23, 26, 28, 33, 36, 38} preds:[]\r\n        \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.computeDominators(BlockProcessor.java:242)\r\n        \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.processBlocksTree(BlockProcessor.java:52)\r\n        \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.visit(BlockProcessor.java:42)\r\n        \tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:27)\r\n        \tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:14)\r\n        \tat java.util.ArrayList.forEach(ArrayList.java:1249)\r\n        \tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)\r\n        \tat jadx.core.ProcessClass.process(ProcessClass.java:32)\r\n        \tat jadx.core.ProcessClass.lambda$processDependencies$0(ProcessClass.java:51)\r\n        \tat java.lang.Iterable.forEach(Iterable.java:75)\r\n        \tat jadx.core.ProcessClass.processDependencies(ProcessClass.java:51)\r\n        \tat jadx.core.ProcessClass.process(ProcessClass.java:37)\r\n        \tat jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:292)\r\n        \tat jadx.api.JavaClass.decompile(JavaClass.java:62)\r\n        \tat jadx.api.JavaClass.getCode(JavaClass.java:48)\r\n        */\r\n```\r\n\r\n```\r\n/*  JADX ERROR: JadxRuntimeException in pass: BlockProcessor\r\n        jadx.core.utils.exceptions.JadxRuntimeException: Can't find immediate dominator for block B:44:0x00e7 in {7, 13, 26, 29, 31, 34, 39, 41, 43} preds:[]\r\n        \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.computeDominators(BlockProcessor.java:242)\r\n        \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.processBlocksTree(BlockProcessor.java:52)\r\n        \tat jadx.core.dex.visitors.blocksmaker.BlockProcessor.visit(BlockProcessor.java:42)\r\n        \tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:27)\r\n        \tat jadx.core.dex.visitors.DepthTraversal.lambda$visit$1(DepthTraversal.java:14)\r\n        \tat java.util.ArrayList.forEach(ArrayList.java:1249)\r\n        \tat jadx.core.dex.visitors.DepthTraversal.visit(DepthTraversal.java:14)\r\n        \tat jadx.core.ProcessClass.process(ProcessClass.java:32)\r\n        \tat jadx.core.ProcessClass.lambda$processDependencies$0(ProcessClass.java:51)\r\n        \tat java.lang.Iterable.forEach(Iterable.java:75)\r\n        \tat jadx.core.ProcessClass.processDependencies(ProcessClass.java:51)\r\n        \tat jadx.core.ProcessClass.process(ProcessClass.java:37)\r\n        \tat jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:292)\r\n        \tat jadx.api.JavaClass.decompile(JavaClass.java:62)\r\n        \tat jadx.api.JavaClass.getCode(JavaClass.java:48)\r\n        */\r\n```\r\n\r\n\r\nmaximum function/files of that `apk` cannot decompiled with `--show-bad-code`.\r\n\r\n", "url": "https://github.com/skylot/jadx/issues/688", "user": "AnuTiger", "labels": ["Core", "bug"], "created": "2019-06-12 06:25:47", "closed": "2019-06-12 07:38:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Not finding JAVA path in windows batch script", "body": "Commenting here because the jadx-gui.bat file doesn't seem to be in the repo, so I couldn't send a pull request.\r\nOn the bundle with the JRE, I was having an issue with the path not being found, after messing with it I discovered the problem:\r\n\r\nInstead of:\r\n```\r\n19 set JAVA_HOME=\"%APP_HOME%\\jre\"\r\n20 set JAVA_EXE=%JAVA_HOME%\\bin\\javaw.exe\r\n```\r\n\r\nIt should be:\r\n```\r\n19 set JAVA_HOME=\"%APP_HOME%\\jre\"\r\n20 set JAVA_EXE=\"%JAVA_HOME%\\bin\\javaw.exe\"\r\n```\r\n\r\nOn line 19 it was making the expansion all right but when it passed down to 20 because it didn't have double quotes both cmd and powershell were unable to find the path because mine had spaces in it.", "url": "https://github.com/skylot/jadx/issues/686", "user": "tvalle", "labels": ["Core", "bug"], "created": "2019-06-09 18:54:32", "closed": "2019-06-10 11:49:49", "commits": {"a051ce6cf4ec2f9a431366658eebbcc988d9d11d": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a051ce6cf4ec2f9a431366658eebbcc988d9d11d", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["40f19cce61d78ca9a1d6025badb13b3552e16878"], "nameRev": "a051ce6cf4ec2f9a431366658eebbcc988d9d11d tags/v1.0.0~5", "commitMessage": "fix(scripts): support spaces in java path for windows scripts (#686)\n", "commitDateTime": "2019-06-10 14:46:08", "authoredDateTime": "2019-06-10 14:46:08", "commitGitStats": [{"filePath": "jadx-cli/build.gradle", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "jadx-gui/build.gradle", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a051ce6cf4ec2f9a431366658eebbcc988d9d11d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 3, "lines": 11, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-cli", "jadx-gui"]}, {"title": "[core] Constructor and super constructor invocations should be first statements", "body": "Example in class ``` com.mercadolibre.android.cx.support.yoshi.p271a.p272a.C5475c ``` (original class ``` com.mercadolibre.android.cx.support.yoshi.a.a.c ```), but tons of examples\r\n```java\r\n    public C5475c(com.mercadolibre.android.cx.support.yoshi.p271a.C5472a aVar, java.lang.String str, java.lang.String... strArr) {\r\n        kotlin.jvm.internal.C12967g.m60316b(aVar, \"intentResolver\");\r\n        kotlin.jvm.internal.C12967g.m60316b(str, \"mainUrlExpression\");\r\n        kotlin.jvm.internal.C12967g.m60316b(strArr, \"otherValidUrlExpressions\");\r\n        super(aVar, str, strArr);\r\n    }\r\n```\r\nUsually all those statements before constructor and super constructor invocations are synthetic, and can be placed after invocs or even removed.\r\n\r\nI know about that bug for a long time, but only now I noticed that it prevents binding resolutions :(\r\n\r\nExample apk: https://drive.google.com/file/d/17kvvsl22CFsFzpcOUO4f0Szl_rdjTT1T/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/685", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-06-08 15:42:34", "closed": "2019-07-06 09:26:17", "commits": {"c6c54f90dc31d5a784828906ef25666675447e4a": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "533b686e0b95012e42ccb9e1ff29446a71568eb6": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "8410e625317e73569abec394cc6fc95e9bee84ea": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "424a8ffaf4a123beba126c46960c1433c879a67d": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "c6c54f90dc31d5a784828906ef25666675447e4a", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["0f5fd4e48abbbc3a508082fdf209c1c499939330"], "nameRev": "c6c54f90dc31d5a784828906ef25666675447e4a tags/v1.1.0~89", "commitMessage": "fix: comment out instructions before super call in constructor (#685)\n", "commitDateTime": "2019-07-03 14:39:21", "authoredDateTime": "2019-07-03 14:27:21", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AFlag.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/PrepareForCodeGen.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestInsnsBeforeSuper.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "jadx-core/src/test/smali/others/TestInsnsBeforeSuper/A.smali", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "jadx-core/src/test/smali/others/TestInsnsBeforeSuper/B.smali", "insertions": 30, "deletions": 0, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.makeInsn(jadx.core.dex.nodes.InsnNode,jadx.core.codegen.CodeWriter,jadx.core.codegen.InsnGen$Flags)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "AFlag.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.AFlag", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PrepareForCodeGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsBeforeSuper(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInsnsBeforeSuper.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestInsnsBeforeSuper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "533b686e0b95012e42ccb9e1ff29446a71568eb6", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["c6c54f90dc31d5a784828906ef25666675447e4a"], "nameRev": "533b686e0b95012e42ccb9e1ff29446a71568eb6 tags/v1.1.0~88", "commitMessage": "fix: comment out instructions also before other constructor call (#685)\n", "commitDateTime": "2019-07-05 17:05:38", "authoredDateTime": "2019-07-03 17:23:06", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/RegionGen.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/PrepareForCodeGen.java", "insertions": 78, "deletions": 18, "lines": 96}, {"filePath": "jadx-core/src/test/java/jadx/tests/api/IntegrationTest.java", "insertions": 17, "deletions": 9, "lines": 26}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestInsnsBeforeSuper.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestInsnsBeforeThis.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "jadx-core/src/test/smali/others/TestInsnsBeforeThis.smali", "insertions": 39, "deletions": 0, "lines": 39}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegionGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.RegionGen.makeIf(jadx.core.dex.regions.conditions.IfRegion,jadx.core.codegen.CodeWriter,boolean)", "TOT": 13, "UPD": 0, "INS": 5, "MOV": 8, "DEL": 0}]}, {"spoonFilePath": "PrepareForCodeGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsBeforeSuper(jadx.core.dex.nodes.MethodNode)", "TOT": 9, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IBlock)", "TOT": 14, "UPD": 5, "INS": 0, "MOV": 8, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor.commentOutInsns(jadx.core.dex.nodes.IBlock,jadx.core.dex.nodes.InsnNode)", "TOT": 7, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IBlock)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsInConstructor(jadx.core.dex.nodes.MethodNode)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.PrepareForCodeGen.searchConstructorCall(jadx.core.dex.nodes.MethodNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IntegrationTest.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.api.IntegrationTest.decompileAndCheck(jadx.api.JadxDecompiler,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.tests.api.IntegrationTest.checkCode(jadx.core.dex.nodes.ClassNode)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.tests.api.IntegrationTest.hasErrors(jadx.core.dex.attributes.IAttributeNode)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "jadx.tests.api.IntegrationTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.api.IntegrationTest.allowWarnInCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInsnsBeforeSuper.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestInsnsBeforeSuper.test()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestInsnsBeforeThis.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestInsnsBeforeThis", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8410e625317e73569abec394cc6fc95e9bee84ea", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["533b686e0b95012e42ccb9e1ff29446a71568eb6"], "nameRev": "8410e625317e73569abec394cc6fc95e9bee84ea tags/v1.1.0~87", "commitMessage": "fix: force one branch ternary in constructors (#685)\n", "commitDateTime": "2019-07-05 17:14:46", "authoredDateTime": "2019-07-05 17:08:15", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/TernaryMod.java", "insertions": 67, "deletions": 1, "lines": 68}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestTernaryOneBranchInConstructor.java", "insertions": 51, "deletions": 0, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TernaryMod.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.TernaryMod.makeTernaryInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.regions.TernaryMod.processOneBranchTernary(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.regions.TernaryMod.replaceWithTernary(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTernaryOneBranchInConstructor.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestTernaryOneBranchInConstructor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "424a8ffaf4a123beba126c46960c1433c879a67d", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["8410e625317e73569abec394cc6fc95e9bee84ea"], "nameRev": "424a8ffaf4a123beba126c46960c1433c879a67d tags/v1.1.0~86", "commitMessage": "fix: inline constant strings (#685)\n", "commitDateTime": "2019-07-05 19:10:57", "authoredDateTime": "2019-07-05 17:13:12", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnArg.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnWrapArg.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ConstInlineVisitor.java", "insertions": 66, "deletions": 41, "lines": 107}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/shrink/CodeShrinkVisitor.java", "insertions": 44, "deletions": 42, "lines": 86}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestTernaryOneBranchInConstructor2.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "jadx-core/src/test/smali/conditions/TestTernaryOneBranchInConstructor2.smali", "insertions": 42, "deletions": 0, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnArg.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.InsnArg.copyCommonParams(jadx.core.dex.instructions.args.InsnArg)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsnWrapArg.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.InsnWrapArg.duplicate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConstInlineVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.replaceConst(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,long,java.util.List)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,long,jadx.core.dex.nodes.InsnNode,java.util.List)", "TOT": 12, "UPD": 3, "INS": 0, "MOV": 9, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.checkInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,java.util.List)", "TOT": 23, "UPD": 6, "INS": 3, "MOV": 10, "DEL": 4}, {"spoonMethodName": "jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.nodes.InsnNode,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CodeShrinkVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.shrinkBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "TOT": 38, "UPD": 0, "INS": 3, "MOV": 30, "DEL": 5}, {"spoonMethodName": "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.utils.InsnList,java.util.List,jadx.core.dex.visitors.shrink.ArgsInfo,jadx.core.dex.instructions.args.RegisterArg)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestTernaryOneBranchInConstructor2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestTernaryOneBranchInConstructor2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c6c54f90dc31d5a784828906ef25666675447e4a", "533b686e0b95012e42ccb9e1ff29446a71568eb6", "8410e625317e73569abec394cc6fc95e9bee84ea", "424a8ffaf4a123beba126c46960c1433c879a67d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 4, "gitStatsSummary": {"insertions": 323, "deletions": 105, "lines": 428, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 157, "UPD": 26, "INS": 37, "MOV": 78, "DEL": 16, "spoonFilesChanged": 9, "spoonMethodsChanged": 24}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/dex/visitors/shrink", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/dex/attributes", "jadx-core/src/main/java/jadx/core/dex/instructions/args"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.PrepareForCodeGen.visit(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor", "jadx.core.dex.visitors.PrepareForCodeGen", "jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsBeforeSuper(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.nodes.InsnNode,java.util.List)", "jadx.core.codegen.RegionGen.makeIf(jadx.core.dex.regions.conditions.IfRegion,jadx.core.codegen.CodeWriter,boolean)", "jadx.core.dex.visitors.ConstInlineVisitor.replaceConst(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,long,java.util.List)", "jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor.commentOutInsns(jadx.core.dex.nodes.IBlock,jadx.core.dex.nodes.InsnNode)", "jadx.core.codegen.InsnGen.makeInsn(jadx.core.dex.nodes.InsnNode,jadx.core.codegen.CodeWriter,jadx.core.codegen.InsnGen$Flags)", "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor", "jadx.core.dex.visitors.PrepareForCodeGen.ConstructorRegionVisitor.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IBlock)", "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.shrinkBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)", "jadx.core.dex.visitors.PrepareForCodeGen.SuperCallRegionVisitor.processBlock(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IBlock)", "jadx.core.dex.instructions.args.InsnWrapArg.duplicate()", "jadx.core.dex.attributes.AFlag", "jadx.core.dex.visitors.PrepareForCodeGen.searchConstructorCall(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.PrepareForCodeGen.commentOutInsnsInConstructor(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.ConstInlineVisitor.replaceArg(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.RegisterArg,long,jadx.core.dex.nodes.InsnNode,java.util.List)", "jadx.core.dex.visitors.regions.TernaryMod.replaceWithTernary(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)", "jadx.core.dex.visitors.regions.TernaryMod.makeTernaryInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion)", "jadx.core.dex.visitors.regions.TernaryMod.processOneBranchTernary(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.conditions.IfRegion)", "jadx.core.dex.visitors.ConstInlineVisitor.checkInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,java.util.List)", "jadx.core.dex.instructions.args.InsnArg.copyCommonParams(jadx.core.dex.instructions.args.InsnArg)", "jadx.core.dex.visitors.shrink.CodeShrinkVisitor.checkInline(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.utils.InsnList,java.util.List,jadx.core.dex.visitors.shrink.ArgsInfo,jadx.core.dex.instructions.args.RegisterArg)"]}, {"title": "Add casts for null method arguments", "body": "Hi, e.g. method ``` Intent.putExtra(...) ``` is overloaded and that code from class ``` com/paypal/android/p2pmobile/p2p/sendmoney/activities/ChangeShippingAddressActivity.java ``` \r\n```java\r\n    public void onNotApplicableSelected() {\r\n        if (this.mCurrentAddress == null) {\r\n            super.onBackPressed();\r\n            return;\r\n        }\r\n        this.mFlowManager.getUsageTracker().track(\"shippingaddress|selectednoshipping\");\r\n        android.content.Intent intent = new android.content.Intent();\r\n        intent.putExtra(\"result_address\", null); // ambiguous call\r\n        setResult(-1, intent);\r\n        finish();\r\n    }\r\n```\r\nis invalid. Please add check if an argument is null literal, and cast it to the expected type\r\n\r\nAPK: https://drive.google.com/file/d/16O--dtXt35zB1Ahx-9qEYvCmyeF1n0AG/view", "url": "https://github.com/skylot/jadx/issues/636", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-04-25 12:27:48", "closed": "2019-04-25 17:24:38", "commits": {"77cee15d6403ec267ce67aa282e20d0589dff37a": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "77cee15d6403ec267ce67aa282e20d0589dff37a", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["e7e7b664dd2a0f15cc3d081ee0be77a6bd777665"], "nameRev": "77cee15d6403ec267ce67aa282e20d0589dff37a tags/v1.0.0~53", "commitMessage": " fix: add cast for null in overloaded methods (#636) (PR #637)\n\n\r\n", "commitDateTime": "2019-04-25 20:24:37", "authoredDateTime": "2019-04-25 19:24:37", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/others/TestCastOfNull.java", "insertions": 35, "deletions": 0, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.processOverloadedArg(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TestCastOfNull.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.others.TestCastOfNull", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Support for (specific?) AAR files ", "body": "I found out that this commit:\r\n\r\nSHA-1: 79ccaadaff18de7443491dbc333e71cfa6e3e3d5\r\n* fix: handle big .jar files (using multi-dex option) (#390) (PR #568)\r\n\r\nbreaks decompilation for AAR libraries that I use. The result is that when loading those libraries into jadx, after a split-second it shows just empty \"Source code\" folder.\r\n\r\nUnfortunately I cannot share with you the specific AARs. Is there any other way I can contribute to fixing this?", "url": "https://github.com/skylot/jadx/issues/631", "user": "polishcode", "labels": ["Core", "bug"], "created": "2019-04-25 06:27:40", "closed": "2019-04-25 08:11:03", "commits": {"db7f2cf54878159eb6975f6ac2edfd569e442a13": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "db7f2cf54878159eb6975f6ac2edfd569e442a13", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["58365a8907fa7ad18381884d070a67f274a77ed5"], "nameRev": "db7f2cf54878159eb6975f6ac2edfd569e442a13 tags/v1.0.0~55", "commitMessage": "fix: loading aar/jar files (#631) (PR #632)\n\n", "commitDateTime": "2019-04-25 11:11:03", "authoredDateTime": "2019-04-25 10:11:03", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/utils/files/InputFile.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InputFile.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.files.InputFile.loadFromZip(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Testing for bits in int", "body": "I just noticed that jadx creates wrong code when it comes to if cases that test an `int` variable if certain bits are set or not.\r\n\r\nA very good example is the Apache Cordova library:\r\nhttps://github.com/apache/cordova-android/blob/master/framework/src/org/apache/cordova/engine/SystemWebViewClient.java#L232\r\n\r\n```\r\n// original code\r\nString packageName = parentEngine.cordova.getActivity().getPackageName();\r\nPackageManager pm = parentEngine.cordova.getActivity().getPackageManager();\r\nappInfo = pm.getApplicationInfo(packageName, PackageManager.GET_META_DATA);\r\nif ((appInfo.flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0) { // <-- this line\r\n```\r\n\r\nThe output of jadx for this decompiled code however is something different (especially the last line):\r\n\r\n```\r\n// jadx decompiled code (current master branch)\r\nif (this.parentEngine.cordova.getActivity().getPackageManager().getApplicationInfo(\r\n    this.parentEngine.cordova.getActivity().getPackageName(), 128).\r\n    flags != false && 2 != false) {\r\n```\r\nNote that `ApplicationInfo.FLAG_DEBUGGABLE = 0x2` and if I take `0` instead of `false` all the relevant parts are there, however the applied operations are totally wrong.\r\n\r\nAn APK that contains this code without obfuscation is this one:\r\nhttps://apkpure.com/de/cordova-showcase/br.com.marcioggs.cordovashowcase", "url": "https://github.com/skylot/jadx/issues/628", "user": "jpstotz", "labels": ["Core", "bug"], "created": "2019-04-24 11:02:31", "closed": "2019-04-24 16:31:49", "commits": {"9645f33c7bfb2f6a998ffda1129edca732165c1c": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9645f33c7bfb2f6a998ffda1129edca732165c1c", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["336d6ce189650c28f588385fc56bafe2cd0504e0"], "nameRev": "9645f33c7bfb2f6a998ffda1129edca732165c1c tags/v1.0.0~60", "commitMessage": "fix: bitwise or/and with non-boolean (#628) (PR #629)\n\n\r\n", "commitDateTime": "2019-04-24 19:31:49", "authoredDateTime": "2019-04-24 18:31:49", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfCondition.java", "insertions": 12, "deletions": 9, "lines": 21}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestConditions17.java", "insertions": 35, "deletions": 0, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IfCondition.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.regions.conditions.IfCondition.simplifyCmpOp(jadx.core.dex.regions.conditions.Compare)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "TestConditions17.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestConditions17", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Incorrect renaming of R variables", "body": "Possibly caused by #615.\r\n\r\nUsing the APK in #584.\r\n\r\nThe following code is generated:\r\n\r\n```\r\npackage com.google.android.gms.tagmanager.impl;\r\n\r\npublic final class R {\r\n    public static final class string {\r\n        /* renamed from: tagmanager_preview_dialog_button */\r\n        public static final int RES_2131821401 = 2131821401;\r\n        /* renamed from: tagmanager_preview_dialog_message */\r\n        public static final int RES_2131821402 = 2131821402;\r\n        /* renamed from: tagmanager_preview_dialog_title */\r\n        public static final int RES_2131821403 = 2131821403;\r\n```\r\n\r\nIt seems the expected names are renamed to `RES_`.", "url": "https://github.com/skylot/jadx/issues/624", "user": "asashour", "labels": ["Core", "bug"], "created": "2019-04-24 02:47:31", "closed": "2019-05-10 19:14:34", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "Improper renaming comment", "body": "When no renaming flag set, and using the APK in #584.\r\n\r\n```\r\npackage io.fabric.sdk.android.services.common;\r\n\r\npublic class CommonUtils {\r\n    public static final Comparator<File> \u02cb = new Comparator<File>() {\r\n        /* renamed from: \u0971 */\r\n        public int compare(File file, File file2) {\r\n            return (int) (file.lastModified() - file2.lastModified());\r\n        }\r\n    };\r\n```\r\n\r\nThis \"renamed from\" comment has two issues:\r\n- It should not be in the method comments, but it should be at the class-level.\r\n- It shouldn't exist at all, since there is no remaining happened.", "url": "https://github.com/skylot/jadx/issues/623", "user": "asashour", "labels": ["Core", "bug"], "created": "2019-04-24 02:37:35", "closed": "2019-05-10 19:18:31", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "Incorrect renaming when \"only printable\" is used", "body": "As hinted in https://github.com/skylot/jadx/issues/584#issuecomment-486041365.\r\n\r\n> 5. When \"printable\" is the only selected rename option, fields are renamed (although not fully printable), while classes are not.\r\n\r\nI am expecting all classes/fields/methods to be printable ASCII.\r\n\r\nHowever:\r\n\r\n- Classes are not renamed\r\n- Fields are renamed, but still pertaining the original not-printable suffix, this suffix should be removed.\r\n- Methods are renamed, but still pertaining the original not-printable suffix, this suffix should be removed.\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/2410127/56627800-9fba2b00-6647-11e9-93c1-913b35944529.png)", "url": "https://github.com/skylot/jadx/issues/622", "user": "asashour", "labels": ["Core", "bug"], "created": "2019-04-24 02:31:32", "closed": "2019-05-10 20:04:12", "commits": {"31a02a70a0469fd881c5de646b7f10c96a516803": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 16.00027777777778, "commitsDetails": [{"commitHash": "31a02a70a0469fd881c5de646b7f10c96a516803", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["8e0df4c423b71c319ec6bddb6412e05a3cdd6532"], "nameRev": "31a02a70a0469fd881c5de646b7f10c96a516803 tags/v1.0.0~32", "commitMessage": "fix: rename class if all chars not printable (#622)\n", "commitDateTime": "2019-05-10 22:43:00", "authoredDateTime": "2019-05-10 22:36:07", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/RenameReasonAttr.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/RenameVisitor.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RenameReasonAttr.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.attributes.nodes.RenameReasonAttr.notValid()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.attributes.nodes.RenameReasonAttr.notPrintable()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RenameVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.RenameVisitor.checkClassName(jadx.core.deobf.Deobfuscator,jadx.core.dex.nodes.ClassNode,jadx.api.JadxArgs)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.RenameVisitor.fixClsShortName(jadx.api.JadxArgs,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["31a02a70a0469fd881c5de646b7f10c96a516803"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 2, "lines": 15, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 2, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/attributes/nodes"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.RenameVisitor.fixClsShortName(jadx.api.JadxArgs,java.lang.String)", "jadx.core.dex.attributes.nodes.RenameReasonAttr.notPrintable()", "jadx.core.dex.visitors.RenameVisitor.checkClassName(jadx.core.deobf.Deobfuscator,jadx.core.dex.nodes.ClassNode,jadx.api.JadxArgs)", "jadx.core.dex.attributes.nodes.RenameReasonAttr.notValid()"]}, {"title": "NPE in ClassGen.useType", "body": "Hi, I've noticed that some code is not decompiled because of error. Stack trace from ``` kz.kaspi.mobile.core.navigation.SetPincodeRoute ```:\r\n```java\r\n                        public final \r\n/*\r\nMethod generation error in method: kz.kaspi.mobile.core.navigation.SetPincodeRoute$SetPinCodeTarget$Companion$startProcess$1.invoke(java.lang.Object, java.lang.Object):null, dex: classes2.dex\r\njava.lang.NullPointerException\r\n\tat jadx.core.codegen.ClassGen.useType(ClassGen.java:447)\r\n\tat jadx.core.codegen.MethodGen.addDefinition(MethodGen.java:102)\r\n\tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:316)\r\n\tat jadx.core.codegen.ClassGen.addMethods(ClassGen.java:262)\r\n\tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:224)\r\n\tat jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:617)\r\n\tat jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:559)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:345)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:218)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:102)\r\n\tat jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:729)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:669)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:349)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:210)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)\r\n\tat jadx.core.codegen.RegionGen.makeIf(RegionGen.java:127)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:62)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:196)\r\n\tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:325)\r\n\tat jadx.core.codegen.ClassGen.addMethods(ClassGen.java:262)\r\n\tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:224)\r\n\tat jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:110)\r\n\tat jadx.core.codegen.ClassGen.addInnerClasses(ClassGen.java:237)\r\n\tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:223)\r\n\tat jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:110)\r\n\tat jadx.core.codegen.ClassGen.addInnerClasses(ClassGen.java:237)\r\n\tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:223)\r\n\tat jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:110)\r\n\tat jadx.core.codegen.ClassGen.makeClass(ClassGen.java:76)\r\n\tat jadx.core.codegen.CodeGen.generate(CodeGen.java:14)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:36)\r\n\tat jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:290)\r\n\tat jadx.api.JavaClass.decompile(JavaClass.java:62)\r\n\tat jadx.api.JadxDecompiler.lambda$appendSourcesSave$0(JadxDecompiler.java:196)\r\n\r\n*/\r\n```\r\nThe cause of that error could be different issue e.g. https://github.com/skylot/jadx/issues/604, but I'm reporting it just in case\r\n\r\nAPK: https://drive.google.com/file/d/1GGRxg2nMzUNAZqDXjIamg0Zdso-gvcz2/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/608", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-04-18 14:26:29", "closed": "2019-05-15 19:07:28", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "Sometimes generic types are not parametrized", "body": "Hi, I've noticed that sometimes generic types are not parametrized, it causes errors in enhanced loops. Example (but without error, since it's the most simple case I found) in class ``` com/paypal/android/p2pmobile/p2p/sendmoney/activities/SendMoneyFlowActivity.java ```\r\n```java\r\n    public void onConfirmFundingMixSelection() {\r\n        java.util.List cardContingencies = getCardContingencies();\r\n        //...\r\n```\r\nbut here is a declaration of the method\r\n```java\r\n    private java.util.List<com.paypal.android.foundation.p2p.model.SendMoneyContingency> getCardContingencies() {\r\n```\r\n\r\nI believe the following code should be generated instead\r\n```java\r\n    public void onConfirmFundingMixSelection() {\r\n        java.util.List<com.paypal.android.foundation.p2p.model.SendMoneyContingency> cardContingencies = getCardContingencies();\r\n        //...\r\n```\r\nbecause if that method contains a loop, it would be decompiled to\r\n```java\r\n    public void onConfirmFundingMixSelection() {\r\n        java.util.List cardContingencies = getCardContingencies();\r\n        for(com.paypal.android.foundation.p2p.model.SendMoneyContingency /* error:  sendMoneyContingency should be java.lang.Object */ sendMoneyContingency : cardContingencies) {\r\n                //...\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/16O--dtXt35zB1Ahx-9qEYvCmyeF1n0AG/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/600", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-04-14 23:05:11", "closed": "2020-05-10 14:32:49", "commits": {}, "ttf": 391.0002777777778, "commitsDetails": []}, {"title": "(Inlined anonymous classes) Jadx adds invalid assignments \u21162", "body": "Hi,\r\nJadx uses references to class names which don't exist and should be used as anonymous classes. The most simple example I found in class ``` com/paypal/android/foundation/paypalcore/trackers/UsageTracker.java ```\r\n```java\r\n    public void trackEventWithLink(String str, final String str2) {\r\n        CommonContracts.requireNonNull(str);\r\n        CommonContracts.requireNonNull(str2);\r\n        UsageTracker.C08531 /* error, C08531 doesn't exist */ c08531 = new UsageData() {\r\n            {\r\n                put(\"link\", str2);\r\n            }\r\n        };\r\n        c08531.put(\"legacyUsageData\", \"\");\r\n        track(str, c08531); // should be used here as an anonymous class\r\n    }\r\n```\r\nAPK: https://drive.google.com/file/d/16O--dtXt35zB1Ahx-9qEYvCmyeF1n0AG/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/597", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-04-14 21:28:28", "closed": "2020-02-17 06:34:55", "commits": {"2148d4b0f589d76a802c3c11b5f326e3825e3742": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 308.0002777777778, "commitsDetails": [{"commitHash": "2148d4b0f589d76a802c3c11b5f326e3825e3742", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["632cc3ec166c46e00db549c5153f95a94c24cb31"], "nameRev": "2148d4b0f589d76a802c3c11b5f326e3825e3742 tags/v1.0.0~76", "commitMessage": " test: add test case for #597 (PR #603)\n\n\r\n", "commitDateTime": "2019-04-15 21:25:47", "authoredDateTime": "2019-04-15 20:25:47", "commitGitStats": [{"filePath": "jadx-core/src/test/java/jadx/tests/integration/inner/TestAnonymousClass16.java", "insertions": 36, "deletions": 0, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TestAnonymousClass16.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.inner.TestAnonymousClass16", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Invalid casts among primitive types", "body": "Hi, in some cases casts are invalid. For example in class ``` com/paypal/android/foundation/presentation/model/ConsentUriParams.java ``` type ``` boolean ``` is converted to ``` byte ``` using explicit cast\r\n```java\r\n    public void writeToParcel(android.os.Parcel parcel, int i) {\r\n        parcel.writeByte((byte) this.showConsent);\r\n        parcel.writeByte((byte) this.showOneTouch);\r\n```\r\nbut the following code should be generated instead\r\n```java\r\n    public void writeToParcel(android.os.Parcel parcel, int i) {\r\n        parcel.writeByte(this.showConsent ? 1 : 0);\r\n        parcel.writeByte(this.showOneTouch ? 1 : 0);\r\n```\r\nAPK: https://drive.google.com/file/d/16O--dtXt35zB1Ahx-9qEYvCmyeF1n0AG/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/596", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-04-14 21:16:59", "closed": "2019-04-29 13:08:29", "commits": {"c134329ce99ec6a7fa5fd9461cd6a6a8d47a72c0": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "84ef6d0049b3bb88099d1217c946396ac8f0e4b9": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "e1dfb4ee59745e6fa2e389fe99625ab96841a099": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "c134329ce99ec6a7fa5fd9461cd6a6a8d47a72c0", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["2148d4b0f589d76a802c3c11b5f326e3825e3742"], "nameRev": "c134329ce99ec6a7fa5fd9461cd6a6a8d47a72c0 tags/v1.0.0~75", "commitMessage": "fix: cast of int-to-(number) when int is boolean (#596) (PR #602)\n\n\r\n", "commitDateTime": "2019-04-20 19:29:41", "authoredDateTime": "2019-04-20 19:29:41", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java", "insertions": 23, "deletions": 2, "lines": 25}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestBooleanToByte.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestBooleanToChar.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestBooleanToDouble.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestBooleanToFloat.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestBooleanToLong.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestBooleanToShort.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "jadx-core/src/test/smali/conditions/TestBooleanToByte.smali", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/smali/conditions/TestBooleanToChar.smali", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/smali/conditions/TestBooleanToDouble.smali", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/smali/conditions/TestBooleanToFloat.smali", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/smali/conditions/TestBooleanToLong.smali", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "jadx-core/src/test/smali/conditions/TestBooleanToShort.smali", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.addCastIfNeeded(jadx.core.codegen.CodeWriter,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.InsnArg)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "ModVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.replaceStep(jadx.core.dex.nodes.MethodNode,jadx.core.utils.InsnRemover)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestBooleanToByte.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestBooleanToByte", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestBooleanToChar.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestBooleanToChar", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestBooleanToDouble.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestBooleanToDouble", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestBooleanToFloat.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestBooleanToFloat", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestBooleanToLong.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestBooleanToLong", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestBooleanToShort.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestBooleanToShort", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "84ef6d0049b3bb88099d1217c946396ac8f0e4b9", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["aa41a4d93bd2ea3de3dd7057638b8c1cd8b5d1b1"], "nameRev": "84ef6d0049b3bb88099d1217c946396ac8f0e4b9 tags/v1.0.0~66", "commitMessage": " test: add test case for #596 (PR #619)\n\n\r\n", "commitDateTime": "2019-04-22 16:53:27", "authoredDateTime": "2019-04-22 16:53:27", "commitGitStats": [{"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/TestBooleanToInt2.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "jadx-core/src/test/smali/conditions/TestBooleanToInt2.smali", "insertions": 20, "deletions": 0, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TestBooleanToInt2.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestBooleanToInt2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e1dfb4ee59745e6fa2e389fe99625ab96841a099", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["031582dd55e6236393618620d97b9bcc0e7ae21e"], "nameRev": "e1dfb4ee59745e6fa2e389fe99625ab96841a099 tags/v1.0.0~49", "commitMessage": "fix: byte to number without cast (#596) (PR #638)\n\n\r\n", "commitDateTime": "2019-04-29 16:08:28", "authoredDateTime": "2019-04-29 15:08:28", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/InvokeNode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/ITypeBound.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeBoundConst.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java", "insertions": 42, "deletions": 2, "lines": 44}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/conditions/{TestBooleanToInt2.java => TestBooleanToInt.java}", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "jadx-core/src/test/smali/conditions/TestBooleanToInt.smali", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "jadx-core/src/test/smali/conditions/TestBooleanToInt2.smali", "insertions": 0, "deletions": 20, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InvokeNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.InvokeNode.getCallMth()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegisterArg.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.args.RegisterArg.getName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.instructions.args.RegisterArg.setName(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ITypeBound.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.getArg()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeBoundConst.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeBoundConst", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeBoundConst.getArg()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeInferenceVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.visit(jadx.core.dex.nodes.MethodNode)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.processIncompatiblePrimitives(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.SSAVar)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeInferenceVisitor.makeUseBound(jadx.core.dex.instructions.args.RegisterArg)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestBooleanToInt.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.conditions.TestBooleanToInt2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.integration.conditions.TestBooleanToInt2.test()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 3, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Jadx adds invalid assignments", "body": "Hi, I've noticed that if a declaration parameter type in a method contains wildcards, fact parameter will be casted to that type. Example, class ``` com/paypal/android/p2pmobile/instorepay/activities/NFCActivationDoneActivity.java ```\r\n```java\r\n    public void onPostResume() {\r\n        super.onPostResume();\r\n        EventBus.getDefault().removeStickyEvent((Class<T>) /* error */ PostActivationCompletedActivityEvent.class);\r\n```\r\nDeclaration\r\n```java\r\n    public <T> T removeStickyEvent(java.lang.Class<T> cls) {\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/16O--dtXt35zB1Ahx-9qEYvCmyeF1n0AG/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/591", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-04-13 05:04:18", "closed": "2019-04-14 08:39:28", "commits": {"01da127c4eff25c44731fb53c068808676275a02": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "01da127c4eff25c44731fb53c068808676275a02", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["ccb9c4600599405c698a78326654067ce4d904ba"], "nameRev": "01da127c4eff25c44731fb53c068808676275a02 tags/v1.0.0~83", "commitMessage": "fix: remove generics cast when object types match (#591) (PR #592)\n\n\r\n", "commitDateTime": "2019-04-14 11:39:27", "authoredDateTime": "2019-04-14 10:39:27", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/LoopRegionVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/core/dex/visitors/typeinference/TypeCompareTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/functional/SignatureParserTest.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/generics/TestGenerics7.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/invoke/TestCastInOverloadedInvoke.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.processOverloadedArg(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,int)", "TOT": 12, "UPD": 0, "INS": 4, "MOV": 7, "DEL": 1}]}, {"spoonFilePath": "InsnDecoder.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.instructions.InsnDecoder.decode(com.android.dx.io.instructions.DecodedInstruction,int)", "TOT": 7, "UPD": 3, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ArgType.java", "spoonMethods": []}, {"spoonFilePath": "LoopRegionVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.LoopRegionVisitor.fixIterableType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.RegisterArg)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TypeCompareTest.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.typeinference.TypeCompareTest.compareGenerics()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SignatureParserTest.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.functional.SignatureParserTest.testMethodArgs2()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.tests.functional.SignatureParserTest.testGenerics()", "TOT": 19, "UPD": 0, "INS": 2, "MOV": 11, "DEL": 6}, {"spoonMethodName": "jadx.tests.functional.SignatureParserTest.testMethodArgs()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "TestGenerics7.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.generics.TestGenerics7", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestCastInOverloadedInvoke.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.invoke.TestCastInOverloadedInvoke.test()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Wrong Characters on DexGuarded Classes Names", "body": "# Problem\r\n![jadx-bug](https://user-images.githubusercontent.com/14809754/55917717-50f0a800-5be8-11e9-853a-0d97e52ef6a2.png)\r\n\r\nAlso deobfuscation of methods and fields is applied but it wasn't enabled on preferences\r\n```java\r\npackage o;\r\n\r\n/* renamed from: o.\u1d3b */\r\npublic final /* synthetic */ class C implements Qn {\r\n    /* renamed from: \u02ca */\r\n    private final HttpInterface f19353;\r\n    /* renamed from: \u02cf */\r\n    private final DownloadPdfRequest f19354;\r\n\r\n    public C(HttpInterface httpInterface, DownloadPdfRequest downloadPdfRequest) {\r\n        this.f19353 = httpInterface;\r\n        this.f19354 = downloadPdfRequest;\r\n    }\r\n\r\n    public Object apply(Object obj) {\r\n        return LeagueListingFeature.m29926(this.f19353, this.f19354, (PermissionEnum) obj);\r\n    }\r\n}\r\n```\r\n\r\n# Jadx version\r\nLatest unstable\r\n\r\nComments contain the right symbol:\r\n```java\r\n/* renamed from: o.\u0427 */\r\npublic class C extends C {\r\n    /* renamed from: \u02cb */\r\n```\r\n # Sample\r\n- https://apkpure.com/dream11/com.app.dream11Pro/download?from=details\r\n- [Dream11_v3.33.1_apkpure.com.apk.zip](https://github.com/skylot/jadx/files/3066105/Dream11_v3.33.1_apkpure.com.apk.zip)\r\n", "url": "https://github.com/skylot/jadx/issues/584", "user": "enovella", "labels": ["bug", "deobfuscation"], "created": "2019-04-10 22:40:51", "closed": "2019-06-08 03:12:16", "commits": {"336d6ce189650c28f588385fc56bafe2cd0504e0": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "19c57258fe70589a2cf5105dfe56d455b57bb691": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 58.000277777777775, "commitsDetails": [{"commitHash": "336d6ce189650c28f588385fc56bafe2cd0504e0", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["f283ef4342fcbeb82c76602a0e23d1a64c225ddd"], "nameRev": "336d6ce189650c28f588385fc56bafe2cd0504e0 tags/v1.0.0~61", "commitMessage": "fix(gui): use same font loader as code viewer (#584)\n", "commitDateTime": "2019-04-23 21:30:03", "authoredDateTime": "2019-04-23 20:59:33", "commitGitStats": [{"filePath": "jadx-gui/src/main/java/jadx/gui/settings/JadxSettings.java", "insertions": 11, "deletions": 15, "lines": 26}, {"filePath": "jadx-gui/src/main/java/jadx/gui/settings/JadxSettingsWindow.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "jadx-gui/src/main/java/jadx/gui/ui/MainWindow.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "jadx-gui/src/main/java/jadx/gui/utils/FontUtils.java", "insertions": 88, "deletions": 0, "lines": 88}, {"filePath": "jadx-gui/src/main/java/jadx/gui/utils/Utils.java", "insertions": 0, "deletions": 29, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JadxSettings.java", "spoonMethods": [{"spoonMethodName": "jadx.gui.settings.JadxSettings.getFont()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "jadx.gui.settings.JadxSettings.setFont(java.awt.Font)", "TOT": 15, "UPD": 1, "INS": 1, "MOV": 5, "DEL": 8}]}, {"spoonFilePath": "JadxSettingsWindow.java", "spoonMethods": [{"spoonMethodName": "jadx.gui.settings.JadxSettingsWindow.getFontLabelStr()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MainWindow.java", "spoonMethods": [{"spoonMethodName": "jadx.gui.ui.MainWindow.registerBundledFonts()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.gui.ui.MainWindow", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FontUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.gui.utils.FontUtils", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Utils.java", "spoonMethods": [{"spoonMethodName": "jadx.gui.utils.Utils", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.gui.utils.Utils.openFontTTF(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.gui.utils.Utils.getFontStyleName(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "19c57258fe70589a2cf5105dfe56d455b57bb691", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["fef3e55c5524c59c65987abe35477bf8df34d56d"], "nameRev": "19c57258fe70589a2cf5105dfe56d455b57bb691 tags/v1.0.0~35", "commitMessage": "fix: improve rename checks and show rename reason (#584)\n", "commitDateTime": "2019-05-10 21:10:04", "authoredDateTime": "2019-05-09 14:42:29", "commitGitStats": [{"filePath": "jadx-cli/src/main/java/jadx/cli/JadxCLIArgs.java", "insertions": 19, "deletions": 43, "lines": 62}, {"filePath": "jadx-cli/src/test/java/jadx/cli/RenameConverterTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/api/ResourcesLoader.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/ClassGen.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/MethodGen.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/NameGen.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java", "insertions": 18, "deletions": 23, "lines": 41}, {"filePath": "jadx-core/src/main/java/jadx/core/deobf/NameMapper.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AType.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/nodes/RenameReasonAttr.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java", "insertions": 12, "deletions": 10, "lines": 22}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/RenameVisitor.java", "insertions": 41, "deletions": 23, "lines": 64}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo/DebugInfoApplyVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/CodeGenUtils.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/CodegenUtils.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/android/AndroidResourcesUtils.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/ResTableParser.java", "insertions": 17, "deletions": 3, "lines": 20}, {"filePath": "jadx-core/src/main/java/jadx/core/xmlgen/entry/ValuesParser.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "jadx-gui/src/main/java/jadx/gui/settings/JadxSettings.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "jadx-gui/src/main/java/jadx/gui/settings/JadxSettingsWindow.java", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["336d6ce189650c28f588385fc56bafe2cd0504e0", "19c57258fe70589a2cf5105dfe56d455b57bb691"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 351, "deletions": 195, "lines": 546, "gitFilesChange": 25}, "spoonStatsSummary": {"TOT": 28.0, "UPD": 5.0, "INS": 4.0, "MOV": 6.0, "DEL": 13.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-gui/src/main/java/jadx/gui/settings", "jadx-core/src/main/java/jadx/api", "jadx-gui/src/main/java/jadx/gui/utils", "jadx-core/src/main/java/jadx/core/utils/android", "jadx-core/src/main/java/jadx/core/deobf", "jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/dex/attributes", "jadx-core/src/main/java/jadx/core/dex/attributes/nodes", "jadx-core/src/main/java/jadx/core/xmlgen", "jadx-cli/src/main/java/jadx/cli", "jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/dex/visitors/debuginfo", "jadx-gui/src/main/java/jadx/gui/ui", "jadx-core/src/main/java/jadx/core/xmlgen/entry"], "changesInPackagesSPOON": ["jadx.gui.settings.JadxSettings.setFont(java.awt.Font)", "jadx.gui.settings.JadxSettings.getFont()", "jadx.gui.utils.Utils", "jadx.gui.utils.Utils.getFontStyleName(int)", "jadx.gui.ui.MainWindow", "jadx.gui.utils.Utils.openFontTTF(java.lang.String)", "jadx.gui.settings.JadxSettingsWindow.getFontLabelStr()", "jadx.gui.utils.FontUtils", "jadx.gui.ui.MainWindow.registerBundledFonts()"]}, {"title": "(Inlined anonymous classes) Stack Overflow freezes Jadx", "body": "Hi, here's the part of repeating stack trace\r\n```\r\njava.lang.StackOverflowError\r\n\tat java.base/java.lang.StringBuilder.append(StringBuilder.java:241)\r\n\tat jadx.core.utils.StringUtils.processChar(StringUtils.java:70)\r\n\tat jadx.core.utils.StringUtils.unescapeString(StringUtils.java:22)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:240)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:217)\r\n\tat jadx.core.codegen.InsnGen.addArg(InsnGen.java:101)\r\n\tat jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:709)\r\n\tat jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:649)\r\n\tat jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:344)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:226)\r\n\tat jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:209)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)\r\n\tat jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)\r\n\tat jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)\r\n\tat jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:196)\r\n\tat jadx.core.codegen.ClassGen.addMethod(ClassGen.java:325)\r\n\tat jadx.core.codegen.ClassGen.addMethods(ClassGen.java:262)\r\n\tat jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:224)\r\n\tat jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:597)\r\n```\r\nJadx doesn't finish and freezes because of that.\r\nArgs:\r\n```\r\n--no-replace-consts --show-bad-code --threads-count 8 --deobf --deobf-min 2 --no-imports --deobf-rewrite-cfg\r\n```\r\n\r\nAPK: https://drive.google.com/file/d/14hG4il_vq7JmGF3WHxuLLG4fKZBhB8M2/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/579", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-04-09 19:36:02", "closed": "2020-02-17 06:34:44", "commits": {}, "ttf": 313.0002777777778, "commitsDetails": []}, {"title": "Reference to a non-existed type (inner class) in a synthetic constructor", "body": "Hi, \r\nFile ``` com/paypal/android/p2pmobile/wallet/Wallet.java ```\r\n```java\r\n        /* synthetic */ Params(com.paypal.android.p2pmobile.wallet.Wallet.Params.Builder builder, com.paypal.android.p2pmobile.wallet.Wallet.C09651 c09651) {\r\n            this(builder);\r\n        }\r\n```\r\nbut class ``` com.paypal.android.p2pmobile.wallet.Wallet.C09651 ``` is missing, that's why reference to the constructor\r\n```java\r\n            public com.paypal.android.p2pmobile.wallet.Wallet.Params build() {\r\n                return new com.paypal.android.p2pmobile.wallet.Wallet.Params(this, null);\r\n            }\r\n```\r\nis not being found :(\r\n\r\nAPK: https://drive.google.com/file/d/16O--dtXt35zB1Ahx-9qEYvCmyeF1n0AG/view?usp=sharing", "url": "https://github.com/skylot/jadx/issues/450", "user": "sergey-wowwow", "labels": ["Core", "bug"], "created": "2019-02-20 16:20:23", "closed": "2019-04-14 18:05:55", "commits": {"d069928613ee38c64adc4f6984a54962e1b95c9e": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "4cb9f23a7ddaea5509db27f4e5ca57849546bbb6": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 53.000277777777775, "commitsDetails": [{"commitHash": "d069928613ee38c64adc4f6984a54962e1b95c9e", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["dd13edf262bc7d8a9c65555804ce9580b6bf13cf"], "nameRev": "d069928613ee38c64adc4f6984a54962e1b95c9e tags/v1.0.0~137^2~5", "commitMessage": "fix: check if synthetic class not yet processed but must be removed (#450)\n", "commitDateTime": "2019-03-02 19:09:31", "authoredDateTime": "2019-03-02 19:09:31", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java", "insertions": 9, "deletions": 5, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClassModifier.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ClassModifier.isEmptySyntheticClass(jadx.core.dex.nodes.ClassNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ClassModifier.visit(jadx.core.dex.nodes.ClassNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ClassModifier.isRemovedClassInArgs(jadx.core.dex.nodes.ClassNode,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4cb9f23a7ddaea5509db27f4e5ca57849546bbb6", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["0aa7173e83405402723a1bc65c346c15afd9e05b"], "nameRev": "4cb9f23a7ddaea5509db27f4e5ca57849546bbb6 tags/v1.0.0~79", "commitMessage": "fix: inline anonymous classes with not default constructor (#450)\n", "commitDateTime": "2019-04-14 19:02:42", "authoredDateTime": "2019-04-14 19:02:16", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/InsnGen.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java", "insertions": 19, "deletions": 10, "lines": 29}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java", "insertions": 29, "deletions": 10, "lines": 39}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java", "insertions": 12, "deletions": 14, "lines": 26}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/RegionUtils.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/inner/TestAnonymousClass14.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "jadx-core/src/test/java/jadx/tests/integration/inner/TestAnonymousClass15.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "jadx-core/src/test/smali/inner/TestAnonymousClass14/OuterCls$1.smali", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "jadx-core/src/test/smali/inner/TestAnonymousClass14/OuterCls$TestCls.smali", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "jadx-core/src/test/smali/inner/TestAnonymousClass14/OuterCls.smali", "insertions": 65, "deletions": 0, "lines": 65}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsnGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.InsnGen.inlineAnonymousConstructor(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "TOT": 11, "UPD": 3, "INS": 1, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "ClassNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.ClassNode.markAnonymousClass(jadx.core.dex.nodes.ClassNode)", "TOT": 11, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 5}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.isAnonymous()", "TOT": 7, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.nodes.ClassNode.markAnonymousClass()", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MethodNode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.nodes.MethodNode.isDefaultConstructor()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "jadx.core.dex.nodes.MethodNode.isConstructor()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassModifier.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ClassModifier.markAnonymousClass(jadx.core.dex.nodes.ClassNode)", "TOT": 15, "UPD": 8, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.ClassModifier.visit(jadx.core.dex.nodes.ClassNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.dex.visitors.ClassModifier.isNonDefaultConstructorExists(jadx.core.dex.nodes.MethodNode)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 2}, {"spoonMethodName": "jadx.core.dex.visitors.ClassModifier.cleanInsnsInAnonymousConstructor(jadx.core.dex.nodes.MethodNode)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ModVisitor.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ModVisitor.processAnonymousConstructor(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "TOT": 17, "UPD": 3, "INS": 2, "MOV": 6, "DEL": 6}]}, {"spoonFilePath": "RegionUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.RegionUtils.notEmpty(jadx.core.dex.nodes.IContainer)", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "TestAnonymousClass14.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.inner.TestAnonymousClass14", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestAnonymousClass15.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.integration.inner.TestAnonymousClass15", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d069928613ee38c64adc4f6984a54962e1b95c9e", "4cb9f23a7ddaea5509db27f4e5ca57849546bbb6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 90, "deletions": 50, "lines": 140, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 103, "UPD": 21, "INS": 28, "MOV": 31, "DEL": 23, "spoonFilesChanged": 6, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/codegen", "jadx-core/src/main/java/jadx/core/dex/nodes", "jadx-core/src/main/java/jadx/core/utils"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.ClassModifier.visit(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.nodes.MethodNode.isConstructor()", "jadx.core.utils.RegionUtils.notEmpty(jadx.core.dex.nodes.IContainer)", "jadx.core.dex.nodes.ClassNode.markAnonymousClass()", "jadx.core.dex.visitors.ClassModifier.cleanInsnsInAnonymousConstructor(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.visitors.ClassModifier.isEmptySyntheticClass(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.visitors.ClassModifier.isNonDefaultConstructorExists(jadx.core.dex.nodes.MethodNode)", "jadx.core.dex.nodes.ClassNode.isAnonymous()", "jadx.core.dex.visitors.ModVisitor.processAnonymousConstructor(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "jadx.core.dex.nodes.ClassNode", "jadx.core.codegen.InsnGen.inlineAnonymousConstructor(jadx.core.codegen.CodeWriter,jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.mods.ConstructorInsn)", "jadx.core.dex.visitors.ClassModifier.markAnonymousClass(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.nodes.MethodNode.isDefaultConstructor()", "jadx.core.dex.nodes.ClassNode.markAnonymousClass(jadx.core.dex.nodes.ClassNode)", "jadx.core.dex.visitors.ClassModifier.isRemovedClassInArgs(jadx.core.dex.nodes.ClassNode,java.util.List)"]}, {"title": "Jadx-gui 0.8.0-b569-20b03aa fails on framework.jar with java classes inside", "body": "In https://github.com/skylot/jadx/issues/388#issuecomment-437601188 @skylot says that jadx can process java .jar with .class files inside.\r\nI tried to do this on out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/classes.jar (from LineageOS 14.1 after ROM build), and jadx-gui failed on this file:\r\n```\r\nINFO  - output directory: classes\r\nINFO  - loading ...\r\nINFO  - converting to dex: classes.jar ...\r\nWARN  - dx message: \r\ntrouble writing output:\r\ncom.android.dex.DexIndexOverflowException: Too many method references to fit in one dex file: 102035; max is 65536.\r\nYou may try using multi-dex. If multi-dex is enabled then the list of classes for the main dex list is too large.\r\nReferences by package:\r\n    27 android\r\n   304 android.accessibilityservice\r\n   685 android.accounts\r\n   774 android.animation\r\n    28 android.annotation\r\n  6966 android.app\r\n  1034 android.app.admin\r\n   153 android.app.assist\r\n   504 android.app.backup\r\n   190 android.app.job\r\n    78 android.app.trust\r\n   185 android.app.usage\r\n   168 android.appwidget\r\n  2280 android.bluetooth\r\n   232 android.bluetooth.le\r\n  2016 android.content\r\n  2286 android.content.pm\r\n    55 android.content.pm.permission\r\n   792 android.content.res\r\n   535 android.database\r\n   499 android.database.sqlite\r\n   116 android.ddm\r\n   169 android.drm\r\n    23 android.filterfw\r\n   817 android.filterfw.core\r\n    26 android.filterfw.format\r\n    42 android.filterfw.geometry\r\n    46 android.filterfw.io\r\n    83 android.filterpacks.base\r\n   410 android.filterpacks.imageproc\r\n     6 android.filterpacks.numeric\r\n    17 android.filterpacks.performance\r\n    18 android.filterpacks.text\r\n    29 android.filterpacks.ui\r\n    18 android.filterpacks.videoproc\r\n    21 android.filterpacks.videosink\r\n    86 android.filterpacks.videosrc\r\n   223 android.gesture\r\n  1515 android.graphics\r\n  1898 android.graphics.drawable\r\n    41 android.graphics.drawable.shapes\r\n   108 android.graphics.pdf\r\n   709 android.hardware\r\n   358 android.hardware.camera2\r\n    19 android.hardware.camera2.dispatch\r\n   427 android.hardware.camera2.impl\r\n   483 android.hardware.camera2.legacy\r\n    25 android.hardware.camera2.marshal\r\n   208 android.hardware.camera2.marshal.impl\r\n   192 android.hardware.camera2.params\r\n   122 android.hardware.camera2.utils\r\n   252 android.hardware.display\r\n   270 android.hardware.fingerprint\r\n   445 android.hardware.hdmi\r\n   231 android.hardware.input\r\n   678 android.hardware.location\r\n   283 android.hardware.radio\r\n   206 android.hardware.soundtrigger\r\n   281 android.hardware.usb\r\n     1 android.icu.impl\r\n     2 android.icu.lang\r\n    16 android.icu.text\r\n    33 android.icu.util\r\n   452 android.inputmethodservice\r\n  1386 android.location\r\n  4118 android.media\r\n   293 android.media.audiofx\r\n   129 android.media.audiopolicy\r\n   114 android.media.browse\r\n    48 android.media.effect\r\n    39 android.media.effect.effects\r\n   286 android.media.midi\r\n   141 android.media.projection\r\n   791 android.media.session\r\n    38 android.media.soundtrigger\r\n  1346 android.media.tv\r\n   257 android.mtp\r\n  2445 android.net\r\n    57 android.net.http\r\n   182 android.net.metrics\r\n   107 android.net.nsd\r\n  1025 android.net.wifi\r\n   275 android.net.wifi.nan\r\n   250 android.net.wifi.p2p\r\n    96 android.net.wifi.p2p.nsd\r\n     1 android.net.wimax\r\n   521 android.nfc\r\n   121 android.nfc.cardemulation\r\n   175 android.nfc.tech\r\n  1788 android.opengl\r\n  3574 android.os\r\n    92 android.os.health\r\n   520 android.os.storage\r\n    11 android.permissionpresenterservice\r\n   912 android.preference\r\n   801 android.print\r\n     6 android.print.pdf\r\n   195 android.printservice\r\n    63 android.printservice.recommendation\r\n   737 android.provider\r\n  2084 android.renderscript\r\n    35 android.sax\r\n   366 android.security\r\n   124 android.security.keymaster\r\n   633 android.security.keystore\r\n   200 android.security.net.config\r\n   147 android.service.carrier\r\n    47 android.service.chooser\r\n   166 android.service.dreams\r\n    44 android.service.gatekeeper\r\n    14 android.service.gesture\r\n   127 android.service.media\r\n   439 android.service.notification\r\n    42 android.service.persistentdata\r\n   123 android.service.quicksettings\r\n     3 android.service.restrictions\r\n    30 android.service.textservice\r\n    82 android.service.trust\r\n   303 android.service.voice\r\n    49 android.service.vr\r\n   140 android.service.wallpaper\r\n   149 android.speech\r\n   609 android.speech.tts\r\n    58 android.system\r\n  1662 android.telecom\r\n  1270 android.telephony\r\n    48 android.telephony.cdma\r\n    14 android.telephony.gsm\r\n    52 android.test\r\n   966 android.text\r\n   118 android.text.format\r\n   389 android.text.method\r\n   426 android.text.style\r\n    50 android.text.util\r\n   604 android.transition\r\n  1036 android.util\r\n    87 android.util.apk\r\n    83 android.util.jar\r\n  6007 android.view\r\n   610 android.view.accessibility\r\n   304 android.view.animation\r\n   544 android.view.inputmethod\r\n   145 android.view.textservice\r\n  1074 android.webkit\r\n  9486 android.widget\r\n   283 com.android.framework.protobuf.nano\r\n    12 com.android.framework.protobuf.nano.android\r\n    24 com.android.i18n.phonenumbers\r\n     2 com.android.i18n.phonenumbers.geocoding\r\n   150 com.android.ims\r\n   562 com.android.ims.internal\r\n    24 com.android.ims.internal.uce\r\n    88 com.android.ims.internal.uce.common\r\n   134 com.android.ims.internal.uce.options\r\n   272 com.android.ims.internal.uce.presence\r\n    62 com.android.ims.internal.uce.uceservice\r\n    24 com.android.internal\r\n    41 com.android.internal.alsa\r\n     7 com.android.internal.annotations\r\n  1744 com.android.internal.app\r\n   255 com.android.internal.app.procstats\r\n   101 com.android.internal.appwidget\r\n   142 com.android.internal.backup\r\n   112 com.android.internal.content\r\n    23 com.android.internal.database\r\n    26 com.android.internal.graphics.drawable\r\n    13 com.android.internal.hardware\r\n     8 com.android.internal.http\r\n   159 com.android.internal.inputmethod\r\n    78 com.android.internal.location\r\n    35 com.android.internal.logging\r\n     7 com.android.internal.messages\r\n    56 com.android.internal.midi\r\n    61 com.android.internal.net\r\n  1210 com.android.internal.os\r\n   668 com.android.internal.policy\r\n    27 com.android.internal.preference\r\n   236 com.android.internal.statusbar\r\n   534 com.android.internal.telecom\r\n  1266 com.android.internal.telephony\r\n    94 com.android.internal.textservice\r\n    26 com.android.internal.transition\r\n   778 com.android.internal.util\r\n    11 com.android.internal.util.cm\r\n   131 com.android.internal.util.cm.palette\r\n   597 com.android.internal.view\r\n    17 com.android.internal.view.animation\r\n   736 com.android.internal.view.menu\r\n  2551 com.android.internal.widget\r\n    42 com.android.net\r\n    20 com.android.okhttp\r\n     1 com.android.okhttp.internal\r\n    11 com.android.org.bouncycastle.asn1\r\n    17 com.android.org.bouncycastle.asn1.x509\r\n     1 com.android.org.bouncycastle.jce\r\n     1 com.android.org.bouncycastle.jce.provider\r\n     2 com.android.org.bouncycastle.util.encoders\r\n     9 com.android.org.bouncycastle.util.io.pem\r\n     9 com.android.org.bouncycastle.x509\r\n    36 com.android.org.conscrypt\r\n   100 com.android.server\r\n    42 com.android.server.backup\r\n    45 com.android.server.net\r\n    13 com.google.android.collect\r\n   313 com.google.android.gles_jni\r\n   170 com.google.android.util\r\n     1 dalvik.bytecode\r\n    92 dalvik.system\r\n     7 dalvik.system.profiler\r\n     7 default\r\n   266 java.io\r\n   483 java.lang\r\n     1 java.lang.invoke\r\n     5 java.lang.ref\r\n    48 java.lang.reflect\r\n    10 java.math\r\n    91 java.net\r\n   124 java.nio\r\n     8 java.nio.channels\r\n    18 java.nio.charset\r\n    85 java.security\r\n    42 java.security.cert\r\n    10 java.security.interfaces\r\n    12 java.security.spec\r\n    43 java.text\r\n   472 java.util\r\n    62 java.util.concurrent\r\n    18 java.util.concurrent.atomic\r\n    21 java.util.concurrent.locks\r\n     2 java.util.function\r\n    14 java.util.jar\r\n    14 java.util.logging\r\n    18 java.util.regex\r\n    44 java.util.zip\r\n    24 javax.crypto\r\n    13 javax.crypto.spec\r\n    33 javax.microedition.khronos.egl\r\n   267 javax.microedition.khronos.opengles\r\n     1 javax.net\r\n    39 javax.net.ssl\r\n     4 javax.security.auth.x500\r\n     7 junit.framework\r\n     8 libcore.icu\r\n     2 libcore.internal\r\n    28 libcore.io\r\n    10 libcore.net\r\n     2 libcore.net.event\r\n    33 libcore.util\r\n    16 org.apache.harmony.dalvik.ddmc\r\n     2 org.apache.harmony.luni.internal.util\r\n     1 org.apache.harmony.xml\r\n     2 org.apache.http.conn\r\n     5 org.apache.http.conn.scheme\r\n    57 org.apache.http.conn.ssl\r\n    27 org.apache.http.params\r\n     3 org.ccil.cowan.tagsoup\r\n    14 org.codeaurora.camera\r\n    16 org.json\r\n     2 org.kxml2.io\r\n    13 org.xml.sax\r\n     1 org.xml.sax.helpers\r\n    34 org.xmlpull.v1\r\n     2 sun.security.jca\r\n     7 sun.security.pkcs\r\n        at com.android.dx.dex.file.MemberIdsSection.orderItems(MemberIdsSection.java:48)\r\n        at com.android.dx.dex.file.UniformItemSection.prepare0(UniformItemSection.java:72)\r\n        at com.android.dx.dex.file.Section.prepare(Section.java:213)\r\n        at com.android.dx.dex.file.DexFile.toDex0(DexFile.java:631)\r\n        at com.android.dx.dex.file.DexFile.toDex(DexFile.java:271)\r\n        at com.android.dx.command.dexer.Main.writeDex(Main.java:865)\r\n        at com.android.dx.command.dexer.Main.runMonoDex(Main.java:322)\r\n        at com.android.dx.command.dexer.Main.runDx(Main.java:288)\r\n        at jadx.core.utils.files.JavaToDex.convert(JavaToDex.java:39)\r\n        at jadx.core.utils.files.InputFile.loadFromJar(InputFile.java:163)\r\n        at jadx.core.utils.files.InputFile.searchDexFiles(InputFile.java:68)\r\n        at jadx.core.utils.files.InputFile.addFilesFrom(InputFile.java:36)\r\n        at jadx.api.JadxDecompiler.loadFiles(JadxDecompiler.java:123)\r\n        at jadx.api.JadxDecompiler.load(JadxDecompiler.java:87)\r\n        at jadx.gui.JadxWrapper.openFile(JadxWrapper.java:34)\r\n        at jadx.gui.ui.MainWindow.openFile(MainWindow.java:177)\r\n        at jadx.gui.ui.MainWindow.open(MainWindow.java:134)\r\n        at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)\r\n        at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)\r\n        at java.awt.EventQueue.access$500(EventQueue.java:97)\r\n        at java.awt.EventQueue$3.run(EventQueue.java:709)\r\n        at java.awt.EventQueue$3.run(EventQueue.java:703)\r\n        at java.security.AccessController.doPrivileged(Native Method)\r\n        at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:74)\r\n        at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)\r\n        at org.GNOME.Accessibility.AtkWrapper$6.dispatchEvent(AtkWrapper.java:715)\r\n        at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:205)\r\n        at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\r\n        at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\r\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\r\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\r\n        at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\r\n\r\n\r\nERROR - Error load file: classes.jar\r\njadx.core.utils.exceptions.JadxRuntimeException: Error load file: classes.jar\r\n        at jadx.api.JadxDecompiler.loadFiles(JadxDecompiler.java:125)\r\n        at jadx.api.JadxDecompiler.load(JadxDecompiler.java:87)\r\n        at jadx.gui.JadxWrapper.openFile(JadxWrapper.java:34)\r\n        at jadx.gui.ui.MainWindow.openFile(MainWindow.java:177)\r\n        at jadx.gui.ui.MainWindow.open(MainWindow.java:134)\r\n        at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)\r\n        at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)\r\n        at java.awt.EventQueue.access$500(EventQueue.java:97)\r\n        at java.awt.EventQueue$3.run(EventQueue.java:709)\r\n        at java.awt.EventQueue$3.run(EventQueue.java:703)\r\n        at java.security.AccessController.doPrivileged(Native Method)\r\n        at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:74)\r\n        at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)\r\n        at org.GNOME.Accessibility.AtkWrapper$6.dispatchEvent(AtkWrapper.java:715)\r\n        at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:205)\r\n        at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\r\n        at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\r\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\r\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\r\n        at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\r\nCaused by: jadx.core.utils.exceptions.DecodeException: java class to dex conversion error:\r\n dx exception: Java to dex conversion error, code: 2\r\n        at jadx.core.utils.files.InputFile.loadFromJar(InputFile.java:169)\r\n        at jadx.core.utils.files.InputFile.searchDexFiles(InputFile.java:68)\r\n        at jadx.core.utils.files.InputFile.addFilesFrom(InputFile.java:36)\r\n        at jadx.api.JadxDecompiler.loadFiles(JadxDecompiler.java:123)\r\n        ... 19 common frames omitted\r\nCaused by: jadx.core.utils.exceptions.JadxException: dx exception: Java to dex conversion error, code: 2\r\n        at jadx.core.utils.files.JavaToDex.convert(JavaToDex.java:46)\r\n        at jadx.core.utils.files.InputFile.loadFromJar(InputFile.java:163)\r\n        ... 22 common frames omitted\r\nCaused by: jadx.core.utils.exceptions.JadxException: Java to dex conversion error, code: 2\r\n        at jadx.core.utils.files.JavaToDex.convert(JavaToDex.java:42)\r\n        ... 23 common frames omitted\r\n```\r\nThe file (rename .zip to .jar): [classes.zip](https://github.com/skylot/jadx/files/2568615/classes.zip)\r\n\r\nSmaller .jar files (like out/target/common/obj/JAVA_LIBRARIES/services_intermediates/classes.jar) works fine in this scenario.", "url": "https://github.com/skylot/jadx/issues/390", "user": "S-trace", "labels": ["bug", "enhancement"], "created": "2018-11-10 17:57:41", "closed": "2019-04-08 14:20:05", "commits": {"79ccaadaff18de7443491dbc333e71cfa6e3e3d5": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 148.00027777777777, "commitsDetails": [{"commitHash": "79ccaadaff18de7443491dbc333e71cfa6e3e3d5", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["ecaa87e7ae49bb564698834490bc6ca842f560c3"], "nameRev": "79ccaadaff18de7443491dbc333e71cfa6e3e3d5 tags/v1.0.0~99", "commitMessage": "fix: handle big .jar files (using multi-dex option) (#390) (PR #568)\n\n", "commitDateTime": "2019-04-08 17:20:04", "authoredDateTime": "2019-04-08 16:20:04", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/utils/files/InputFile.java", "insertions": 29, "deletions": 18, "lines": 47}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/files/JavaToDex.java", "insertions": 24, "deletions": 6, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InputFile.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.files.InputFile.loadFromJar(java.io.File)", "TOT": 14, "UPD": 9, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "jadx.core.utils.files.InputFile.loadFromClassFile(java.io.File)", "TOT": 7, "UPD": 4, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "jadx.core.utils.files.InputFile.searchDexFiles(boolean)", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "jadx.core.utils.files.InputFile.loadFromZip(java.lang.String)", "TOT": 15, "UPD": 4, "INS": 3, "MOV": 6, "DEL": 2}, {"spoonMethodName": "jadx.core.utils.files.InputFile.loadFromJar(java.nio.file.Path)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JavaToDex.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.files.JavaToDex.convert(java.lang.String)", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "jadx.core.utils.files.JavaToDex.DxArgs", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.core.utils.files.JavaToDex.convert(java.nio.file.Path)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Some codes can't be decompiled", "body": "Jadx fail to decompile some codes with a warning   `/* JADX WARNING: Removed duplicated region for block: B:106:0x0333  */`\r\nThe dex isn't obfuscated, It's a system app from priv-app\r\nPossible to fix it to make it decompileable?\r\n\r\nDex file: [classes.zip](https://github.com/skylot/jadx/files/2433900/classes.zip)\r\n\r\n![image](https://user-images.githubusercontent.com/40742924/46288071-e4378980-c584-11e8-883b-e2493d5a7577.png)\r\n", "url": "https://github.com/skylot/jadx/issues/366", "user": "AndnixSH", "labels": ["Core", "bug"], "created": "2018-10-01 12:22:26", "closed": "2020-04-29 12:59:07", "commits": {}, "ttf": 576.0002777777778, "commitsDetails": []}, {"title": "decompile static block throw exception", "body": "   static {\r\n        /* JADX: method processing error */\r\n/*\r\nError: jadx.core.utils.exceptions.DecodeException: Load method exception: bogus opcode: 0073 in method: com.android.mms.attachment.datamodel.FileProvider.<clinit>():void, dex: \r\n\tat jadx.core.dex.nodes.MethodNode.load(MethodNode.java:117)\r\n\tat jadx.core.dex.nodes.ClassNode.load(ClassNode.java:249)\r\n\tat jadx.core.ProcessClass.process(ProcessClass.java:29)\r\n\tat jadx.api.JadxDecompiler.processClass(JadxDecompiler.java:286)\r\n\tat jadx.api.JavaClass.decompile(JavaClass.java:62)\r\n\tat jadx.api.JavaClass.getCode(JavaClass.java:48)\r\nCaused by: java.lang.IllegalArgumentException: bogus opcode: 0073\r\n\tat com.android.dx.io.OpcodeInfo.get(OpcodeInfo.java:1217)\r\n\tat com.android.dx.io.OpcodeInfo.getName(OpcodeInfo.java:1224)\r\n\tat jadx.core.dex.instructions.InsnDecoder.decode(InsnDecoder.java:590)\r\n\tat jadx.core.dex.instructions.InsnDecoder.process(InsnDecoder.java:74)\r\n\tat jadx.core.dex.nodes.MethodNode.load(MethodNode.java:103)\r\n\t... 5 more\r\n*/\r\n        /*\r\n        // Can't load method instructions.\r\n        */\r\n        throw new UnsupportedOperationException(\"Method not decompiled: com.android.mms.attachment.datamodel.FileProvider.<clinit>():void\");\r\n    }\r\n[test.zip](https://github.com/skylot/jadx/files/2304296/test.zip)\r\n", "url": "https://github.com/skylot/jadx/issues/342", "user": "dstmath", "labels": ["Core", "bug"], "created": "2018-08-21 00:34:12", "closed": "2019-04-12 15:12:39", "commits": {"395cae439eea75eeb55ef81d4491e3824c76a9f2": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 234.00027777777777, "commitsDetails": [{"commitHash": "395cae439eea75eeb55ef81d4491e3824c76a9f2", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["eb77aa51b2b6693f2bb10c3a6dfd63873db71027"], "nameRev": "395cae439eea75eeb55ef81d4491e3824c76a9f2 tags/v1.0.0~86", "commitMessage": "fix: handle NPE for methods with removed instructions (#342) (PR #583)\n\n\r\n", "commitDateTime": "2019-04-12 18:12:38", "authoredDateTime": "2019-04-12 17:12:38", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ExtractFieldInit.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/ReSugarCode.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExtractFieldInit.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ExtractFieldInit.checkStaticFieldsInit(jadx.core.dex.nodes.ClassNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "jadx.core.dex.visitors.ExtractFieldInit.getFieldAssigns(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.FieldNode,jadx.core.dex.instructions.InsnType)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ReSugarCode.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.ReSugarCode.initClsEnumMap(jadx.core.dex.nodes.ClassNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Issues in decompilation (complicate if and else)", "body": "Thank for your great work ,\nBut this code will not decompile correctly and hope you can fix it:\n\n``` java\n    static boolean autoStop = true;\n    static boolean qualityReading = false;\n    static int lastValidRaw = -1;\n\n    public static void main(String[] args) throws Exception {\n        int a = 5;\n        int b = 30;\n        dataProcess(a,b);\n    }\n\n    public static void dataProcess(int raw, int quality) {\n        if(quality >= 10 && raw != 0) {\n            System.out.println (\"OK\"+ raw); \n           qualityReading = false;\n        } else if(raw != 0 && quality >= 6 && qualityReading) {\n            System.out.println (\"Quit OK\"+ raw); \n        } else {\n            System.out.println (\"Not OK\"+ raw); \n        }\n\n        if(quality < 30) {\n           int timeLeft = 30 - quality;\n           if(quality >= 10) {\n               System.out.println (\"Processing\"+ timeLeft); \n           }\n        } else {\n            System.out.println (\"Finish Processing\");\n           if(raw > 0) {\n              lastValidRaw = raw;\n           }\n        }\n\n        if(quality >= 30 && autoStop) {\n            System.out.println (\"Finished\");\n        }\n\n        if(!autoStop && lastValidRaw > -1 && quality < 10) {\n            System.out.println (\"Finished\");\n        }\n\n     }\n```\n", "url": "https://github.com/skylot/jadx/issues/12", "user": "dungelin", "labels": ["bug"], "created": "2014-07-07 15:01:26", "closed": "2014-07-31 07:09:58", "commits": {"ebbe6db378305e6d6c1ac014f0cc2cbfbcaa66fc": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "ebbe6db378305e6d6c1ac014f0cc2cbfbcaa66fc", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["543cad3a2348f18544f1d32238378c6f84867839"], "nameRev": "ebbe6db378305e6d6c1ac014f0cc2cbfbcaa66fc tags/v0.5.2~30", "commitMessage": "core: fix complex 'if' processing (issues #9 and #12)\n", "commitDateTime": "2014-07-12 21:26:14", "authoredDateTime": "2014-07-12 21:09:51", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/Jadx.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/ConditionGen.java", "insertions": 19, "deletions": 8, "lines": 27}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AType.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/regions/IfCondition.java", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/regions/IfInfo.java", "insertions": 40, "deletions": 17, "lines": 57}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/CheckRegions.java", "insertions": 5, "deletions": 9, "lines": 14}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java", "insertions": 190, "deletions": 0, "lines": 190}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfRegionVisitor.java", "insertions": 32, "deletions": 3, "lines": 35}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/ProcessTryCatchRegions.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java", "insertions": 36, "deletions": 186, "lines": 222}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/ReturnVisitor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/BlockUtils.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/RegionUtils.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions10.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions11.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions12.java", "insertions": 71, "deletions": 0, "lines": 71}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions13.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions2.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions5.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions9.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestSimpleConditions.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/loops/TestLoopCondition2.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Found issues in decompilation", "body": "Thanks for your brilliant work.  I found two cases which provides wrong results.  Hope you could fix it.\n\n//Src 1\n\n```\npublic class JavaTest {\n    public static void main(String[] args) throws Exception {\n        boolean a = true;\n        int b = 3;\n        if (a || b > 2)\n          b++;\n\n        if (!a || ( b >= 0 && b <=11))  \n            System.out.println (\"OK\");\n        else\n            System.out.println (\"Not Reach\");   \n        System.out.println (\"End\");\n    }\n}\n```\n\n//Src 2\n\n```\npublic class JavaTest {\n    public static void main(String[] args) throws Exception {\n        int a = 3 * 5;\n        String s = null;\n\n        switch (a % 4) {\n            case 1:\n                s = \"1\";\n                break;\n            case 2:\n                s = \"2\";\n                break;\n            case 3:\n                s = \"3\";\n                break;\n            case 4:\n                s = \"4\";\n                break;\n            default:\n                System.out.println (\"Not Reach\");   \n        }\n        System.out.println (s);\n    }\n}\n```\n", "url": "https://github.com/skylot/jadx/issues/9", "user": "goldbug23", "labels": ["bug"], "created": "2014-06-23 08:53:53", "closed": "2014-07-31 03:42:00", "commits": {"37857e88ea6cd709343403367167f27de045ceff": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "ebbe6db378305e6d6c1ac014f0cc2cbfbcaa66fc": {"commitGHEventType": "referenced", "commitUser": "skylot"}, "0968f75e9ac1d0404307fef7ff5979477408cbe3": {"commitGHEventType": "referenced", "commitUser": "skylot"}}, "ttf": 37.000277777777775, "commitsDetails": [{"commitHash": "37857e88ea6cd709343403367167f27de045ceff", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["6fbcf46a8b83dfbd4f5fc3cba5ffe027ac59fced"], "nameRev": "37857e88ea6cd709343403367167f27de045ceff tags/v0.5.2~34", "commitMessage": "core: fix switch statement processing (issue #9 case 2)\n", "commitDateTime": "2014-06-24 14:08:20", "authoredDateTime": "2014-06-23 22:26:30", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/codegen/RegionGen.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java", "insertions": 19, "deletions": 13, "lines": 32}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/BlockUtils.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/{ => switches}/TestSwitch.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/{ => switches}/TestSwitchLabels.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/switches/TestSwitchNoDefault.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/switches/TestSwitchSimple.java", "insertions": 52, "deletions": 0, "lines": 52}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RegionGen.java", "spoonMethods": [{"spoonMethodName": "jadx.core.codegen.RegionGen.makeSwitch(jadx.core.dex.regions.SwitchRegion,jadx.core.codegen.CodeWriter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RegionMaker.java", "spoonMethods": [{"spoonMethodName": "jadx.core.dex.visitors.regions.RegionMaker.processSwitch(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.SwitchNode,jadx.core.dex.visitors.regions.RegionStack)", "TOT": 15, "UPD": 2, "INS": 5, "MOV": 5, "DEL": 3}]}, {"spoonFilePath": "BlockUtils.java", "spoonMethods": [{"spoonMethodName": "jadx.core.utils.BlockUtils.isPathExists(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "TestSwitch.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.internal.TestSwitch.test()", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "jadx.tests.internal.switches.TestSwitch.test()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSwitchLabels.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.internal.TestSwitchLabels.test()", "TOT": 12, "UPD": 12, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSwitchNoDefault.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.internal.switches.TestSwitchNoDefault", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSwitchSimple.java", "spoonMethods": [{"spoonMethodName": "jadx.tests.internal.switches.TestSwitchSimple", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ebbe6db378305e6d6c1ac014f0cc2cbfbcaa66fc", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["543cad3a2348f18544f1d32238378c6f84867839"], "nameRev": "ebbe6db378305e6d6c1ac014f0cc2cbfbcaa66fc tags/v0.5.2~30", "commitMessage": "core: fix complex 'if' processing (issues #9 and #12)\n", "commitDateTime": "2014-07-12 21:26:14", "authoredDateTime": "2014-07-12 21:09:51", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/Jadx.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "jadx-core/src/main/java/jadx/core/codegen/ConditionGen.java", "insertions": 19, "deletions": 8, "lines": 27}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/attributes/AType.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/regions/IfCondition.java", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/regions/IfInfo.java", "insertions": 40, "deletions": 17, "lines": 57}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/CheckRegions.java", "insertions": 5, "deletions": 9, "lines": 14}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java", "insertions": 190, "deletions": 0, "lines": 190}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfRegionVisitor.java", "insertions": 32, "deletions": 3, "lines": 35}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/ProcessTryCatchRegions.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java", "insertions": 36, "deletions": 186, "lines": 222}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/ReturnVisitor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/BlockUtils.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/RegionUtils.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions10.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions11.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions12.java", "insertions": 71, "deletions": 0, "lines": 71}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions13.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions2.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions5.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestConditions9.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/conditions/TestSimpleConditions.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/loops/TestLoopCondition2.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "0968f75e9ac1d0404307fef7ff5979477408cbe3", "commitGHEventType": "referenced", "commitUser": "skylot", "commitParents": ["bc0db88afa4d846a34e2aeb05171f70cbb75f296"], "nameRev": "0968f75e9ac1d0404307fef7ff5979477408cbe3 tags/v0.5.2~24", "commitMessage": "core: fix condition in loops (issue #9)\n", "commitDateTime": "2014-07-28 22:50:42", "authoredDateTime": "2014-07-26 15:26:33", "commitGitStats": [{"filePath": "jadx-core/src/main/java/jadx/core/dex/regions/IfInfo.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/regions/LoopRegion.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/BlockMakerVisitor.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java", "insertions": 75, "deletions": 13, "lines": 88}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfRegionVisitor.java", "insertions": 15, "deletions": 1, "lines": 16}, {"filePath": "jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java", "insertions": 124, "deletions": 128, "lines": 252}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/BlockUtils.java", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "jadx-core/src/main/java/jadx/core/utils/RegionUtils.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/loops/TestBreakInLoop.java", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/loops/TestLoopCondition.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/loops/TestLoopCondition3.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/loops/TestLoopCondition4.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/loops/TestSequentialLoops.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "jadx-core/src/test/java/jadx/tests/internal/trycatch/TestTryCatch2.java", "insertions": 3, "deletions": 7, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["37857e88ea6cd709343403367167f27de045ceff", "0968f75e9ac1d0404307fef7ff5979477408cbe3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 278, "deletions": 170, "lines": 448, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 20.0, "UPD": 2.0, "INS": 7.0, "MOV": 7.0, "DEL": 4.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["jadx-core/src/main/java/jadx/core/utils", "jadx-core/src/main/java/jadx/core/dex/visitors/regions", "jadx-core/src/main/java/jadx/core/dex/regions", "jadx-core/src/main/java/jadx/core/dex/visitors", "jadx-core/src/main/java/jadx/core/codegen"], "changesInPackagesSPOON": ["jadx.core.dex.visitors.regions.RegionMaker.processSwitch(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.SwitchNode,jadx.core.dex.visitors.regions.RegionStack)", "jadx.core.codegen.RegionGen.makeSwitch(jadx.core.dex.regions.SwitchRegion,jadx.core.codegen.CodeWriter)", "jadx.core.utils.BlockUtils.isPathExists(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode)"]}]}