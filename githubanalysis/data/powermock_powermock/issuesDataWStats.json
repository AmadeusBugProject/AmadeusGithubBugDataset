{"projectName": "powermock/powermock", "bugLabels": ["bug", "regression"], "captureTime": "Sat Jul  4 02:10:40 2020", "issues": [{"title": "Compile error due to unused import of a class which is not in the dependencies", "body": "There are some unused imports of javax.activation.FileDataSource.\r\n\r\nTo reproduce the problem simply try to assemble the project `$ ./gradlew assemble`.\r\nThis produces an error output:\r\n```\r\n...\r\n> Task :tests:utils:compileJava FAILED\r\n/home/pawlik/Development/powermock/tests/utils/src/main/java/samples/privatemocking/PrivateMethodDemo.java:18: error: package javax.activation does not exist\r\nimport javax.activation.FileDataSource;\r\n...\r\n```\r\n## Environment\r\nAffected PowerMock version 2.0.0-RC.5\r\n>IntelliJ IDEA 2018.3 (Community Edition)\r\nBuild #IC-183.4284.148, built on November 21, 2018\r\nJRE: 1.8.0_152-release-1343-b15 amd64\r\nJVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o\r\nLinux 4.15.0-39-generic\r\n\r\n>$ java -version\r\njava version \"11.0.1\" 2018-10-16 LTS\r\nJava(TM) SE Runtime Environment 18.9 (build 11.0.1+13-LTS)\r\nJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.1+13-LTS, mixed mode)\r\n", "url": "https://github.com/powermock/powermock/issues/959", "user": "parenko", "labels": ["bug"], "created": "2018-11-25 14:56:28", "closed": "2018-12-25 11:59:21", "commits": {"dac7ca52c11421233b131dc42f034e0bbe395489": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "dac7ca52c11421233b131dc42f034e0bbe395489", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["46a624f6e80c6db29d5685e4618f6b28e5c94e36"], "nameRev": "dac7ca52c11421233b131dc42f034e0bbe395489 tags/powermock-2.0.0-RC.5~2", "commitMessage": "#959 fix compile error due to unused import of a class which is not in the dependencies (#960)\n\n", "commitDateTime": "2018-12-25 11:58:59", "authoredDateTime": "2018-12-25 12:58:59", "commitGitStats": [{"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/privatemocking/PrivateInstanceMockingCases.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "tests/utils/src/main/java/samples/privatemocking/PrivateMethodDemo.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PrivateInstanceMockingCases.java", "spoonMethods": []}, {"spoonFilePath": "PrivateMethodDemo.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "IllegalStateException when inner class has private constructor on Java>8", "body": "Hi,\r\nUsing\r\n* powermock 2.0.0-RC.4\r\n* java 11.0.1-open\r\n* javassist 3.23.1-GA\r\n\r\nwhen I run the following code, it works with Java 8 but not with Java 11\r\n\r\n    @RunWith(PowerMockRunner.class)\r\n    @PrepareForTest(OuterClass.class)\r\n    public class TestPowerMock {\r\n        @Test\r\n        public void doNothing() {}\r\n    }\r\n---\r\n    public class OuterClass {\r\n        private static InnerSingleton theInstance = new InnerSingleton();\r\n        public static class InnerSingleton {\r\n            private InnerSingleton() {}\r\n        }\r\n    }\r\n\r\nStackTrace is:\r\n\r\n    java.lang.IllegalStateException: Failed to transform class with name com.activeviam.lic.impl.OuterClass. Reason: [source error] the called constructor is private in com.activeviam.lic.impl.OuterClass$InnerSingleton\r\n    \r\n        at org.powermock.core.classloader.javassist.JavassistMockClassLoader.defineAndTransformClass(JavassistMockClassLoader.java:119)\r\n        at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:174)\r\n        at org.powermock.core.classloader.MockClassLoader.loadClassByThisClassLoader(MockClassLoader.java:102)\r\n        at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass1(DeferSupportingClassLoader.java:147)\r\n        at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:98)\r\n        at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\r\n        at java.base/java.lang.Class.forName0(Native Method)\r\n        at java.base/java.lang.Class.forName(Class.java:398)\r\n        at java.base/sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)\r\n        at java.base/sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)\r\n        at java.base/sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)\r\n        at java.base/sun.reflect.annotation.AnnotationParser.parseSig(AnnotationParser.java:440)\r\n        at java.base/sun.reflect.annotation.AnnotationParser.parseClassValue(AnnotationParser.java:421)\r\n        at java.base/sun.reflect.annotation.AnnotationParser.lambda$parseClassArray$0(AnnotationParser.java:719)\r\n        at java.base/sun.reflect.annotation.AnnotationParser.parseArrayElements(AnnotationParser.java:747)\r\n        at java.base/sun.reflect.annotation.AnnotationParser.parseClassArray(AnnotationParser.java:718)\r\n        at java.base/sun.reflect.annotation.AnnotationParser.parseArray(AnnotationParser.java:532)\r\n        at java.base/sun.reflect.annotation.AnnotationParser.parseMemberValue(AnnotationParser.java:356)\r\n        at java.base/sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:287)\r\n        at java.base/sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:121)\r\n        at java.base/sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:73)\r\n        at java.base/java.lang.Class.createAnnotationData(Class.java:3758)\r\n        at java.base/java.lang.Class.annotationData(Class.java:3747)\r\n        at java.base/java.lang.Class.getAnnotation(Class.java:3652)\r\n        at org.junit.internal.MethodSorter.getDeclaredMethods(MethodSorter.java:52)\r\n        at org.junit.internal.runners.TestClass.getAnnotatedMethods(TestClass.java:45)\r\n        at org.junit.internal.runners.MethodValidator.validateTestMethods(MethodValidator.java:71)\r\n        at org.junit.internal.runners.MethodValidator.validateStaticMethods(MethodValidator.java:44)\r\n        at org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner(MethodValidator.java:50)\r\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.validate(PowerMockJUnit44RunnerDelegateImpl.java:124)\r\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.<init>(PowerMockJUnit44RunnerDelegateImpl.java:86)\r\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl.<init>(PowerMockJUnit47RunnerDelegateImpl.java:42)\r\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit49RunnerDelegateImpl.<init>(PowerMockJUnit49RunnerDelegateImpl.java:25)\r\n        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n        at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n        at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n        at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:165)\r\n        at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:47)\r\n        at org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.createTestDelegators(AbstractTestSuiteChunkerImpl.java:107)\r\n        at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.<init>(JUnit4TestSuiteChunkerImpl.java:69)\r\n        at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.<init>(AbstractCommonPowerMockRunner.java:36)\r\n        at org.powermock.modules.junit4.PowerMockRunner.<init>(PowerMockRunner.java:34)\r\n        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n        at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n        at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n        at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)\r\n        at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)\r\n        at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\r\n        at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\r\n        at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\r\n        at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)\r\n        at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:49)\r\n        at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n        at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n        at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n    Caused by: javassist.CannotCompileException: [source error] the called constructor is private in com.activeviam.lic.impl.OuterClass$InnerSingleton\r\n        at javassist.expr.NewExpr.replace(NewExpr.java:235)\r\n        at org.powermock.core.transformers.javassist.support.PowerMockExpressionEditor.edit(PowerMockExpressionEditor.java:73)\r\n        at javassist.expr.ExprEditor.loopBody(ExprEditor.java:217)\r\n        at javassist.expr.ExprEditor.doit(ExprEditor.java:96)\r\n        at javassist.CtClassType.instrument(CtClassType.java:1541)\r\n        at org.powermock.core.transformers.javassist.InstrumentMockTransformer.transform(InstrumentMockTransformer.java:41)\r\n        at org.powermock.core.transformers.javassist.AbstractJavaAssistMockTransformer.transform(AbstractJavaAssistMockTransformer.java:40)\r\n        at org.powermock.core.transformers.support.DefaultMockTransformerChain.transform(DefaultMockTransformerChain.java:43)\r\n        at org.powermock.core.classloader.MockClassLoader.transformClass(MockClassLoader.java:184)\r\n        at org.powermock.core.classloader.javassist.JavassistMockClassLoader.defineAndTransformClass(JavassistMockClassLoader.java:102)\r\n        ... 56 more\r\n    Caused by: compile error: the called constructor is private in com.activeviam.lic.impl.OuterClass$InnerSingleton\r\n        at javassist.compiler.MemberCodeGen.getAccessibleConstructor(MemberCodeGen.java:740)\r\n        at javassist.compiler.MemberCodeGen.atMethodCallCore2(MemberCodeGen.java:639)\r\n        at javassist.compiler.MemberCodeGen.atMethodCallCore(MemberCodeGen.java:618)\r\n        at javassist.expr.NewExpr$ProceedForNew.doit(NewExpr.java:259)\r\n        at javassist.compiler.JvstCodeGen.atCallExpr(JvstCodeGen.java:252)\r\n        at javassist.compiler.ast.CallExpr.accept(CallExpr.java:49)\r\n        at javassist.compiler.CodeGen.atAssignCore(CodeGen.java:908)\r\n        at javassist.compiler.CodeGen.atVariableAssign(CodeGen.java:841)\r\n        at javassist.compiler.CodeGen.atAssignExpr(CodeGen.java:795)\r\n        at javassist.compiler.CodeGen.atStmnt(CodeGen.java:362)\r\n        at javassist.compiler.ast.Stmnt.accept(Stmnt.java:53)\r\n        at javassist.compiler.CodeGen.atStmnt(CodeGen.java:381)\r\n        at javassist.compiler.ast.Stmnt.accept(Stmnt.java:53)\r\n        at javassist.compiler.CodeGen.atIfStmnt(CodeGen.java:441)\r\n        at javassist.compiler.CodeGen.atStmnt(CodeGen.java:385)\r\n        at javassist.compiler.ast.Stmnt.accept(Stmnt.java:53)\r\n        at javassist.compiler.Javac.compileStmnt(Javac.java:578)\r\n        at javassist.expr.NewExpr.replace(NewExpr.java:229)\r\n        ... 65 more", "url": "https://github.com/powermock/powermock/issues/958", "user": "remibarat", "labels": ["bug", "jdk9"], "created": "2018-11-20 08:37:41", "closed": "2019-04-21 07:27:14", "commits": {"be38fb294a0d5fb9ffb473ff741ac64b61bccfd3": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}}, "ttf": 151.00027777777777, "commitsDetails": [{"commitHash": "be38fb294a0d5fb9ffb473ff741ac64b61bccfd3", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["54f49a50bbc2de51c850d001b866fd43190b5d51"], "nameRev": "be38fb294a0d5fb9ffb473ff741ac64b61bccfd3 tags/powermock-2.0.1~1", "commitMessage": "Fixes #958 convert constructors of nested classes to public as well (#978)\n\n* Fixes #958 convert constructors of nested classes to public as well\r\n\r\n* fix build as jdk11 is not supported yet\r\n", "commitDateTime": "2019-04-21 08:27:12", "authoredDateTime": "2019-04-21 17:27:12", "commitGitStats": [{"filePath": "powermock-core/src/main/java/org/powermock/core/transformers/javassist/ConstructorsMockTransformer.java", "insertions": 18, "deletions": 3, "lines": 21}, {"filePath": "settings.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/java11/build.gradle", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "tests/java11/mockito-junit4/src/main/java/samples/powermockito/junit4/bugs/github958/OuterClass.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "tests/java11/mockito-junit4/src/test/java/samples/powermockito/junit4/bugs/github958/Github958Test.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConstructorsMockTransformer.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.javassist.ConstructorsMockTransformer.transform(javassist.CtClass)", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.javassist.ConstructorsMockTransformer.transform(javassist.CtClass[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OuterClass.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github958.OuterClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Github958Test.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github958.Github958Test", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "PowerMock Agent does not work EasyMock 4.x", "body": "```\r\nsamples.powermockito.junit4.agent.AnnotationUsageTest > annotationsAreEnabledWhenUsingTheJUnitRule[0] FAILED\r\n    java.lang.VerifyError: Expecting a stackmap frame at branch target 38\r\n    Exception Details:\r\n      Location:\r\n        org/easymock/EasyMockSupport.resetAll()V @16: ifeq\r\n      Reason:\r\n        Expected stackmap frame at this location.\r\n      Bytecode:\r\n        0x0000000: 2ab4 0016 b900 7201 004c 2bb9 0078 0100\r\n        0x0000010: 9900 162b b900 7c01 00c0 0021 4d2c b900\r\n        0x0000020: 8401 00a7 ffe7 b1           \r\n```\r\n\r\nDetailed description in pull request #952  ", "url": "https://github.com/powermock/powermock/issues/956", "user": "thekingn0thing", "labels": ["bug"], "created": "2018-11-17 09:27:39", "closed": "2020-03-30 14:46:23", "commits": {"27501ac5935e91c38baff35fae1dda2b006fe96a": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 499.0002777777778, "commitsDetails": [{"commitHash": "27501ac5935e91c38baff35fae1dda2b006fe96a", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["aa3328c9726bbdc58afef94641867c8163307f1c"], "nameRev": "27501ac5935e91c38baff35fae1dda2b006fe96a tags/powermock-2.0.7~1", "commitMessage": "[ci maven-central-release] Fix missing stackmap frames (#1043)\n\nWhen using the powermock-module-junit4-rule-agent there are java.lang.VerifyErrors.\r\nFor example if you have some project with Spock 1.0 and use use the rule, it works just fine.\r\nAs soon as you upgrade to 1.2 or 1.3 which dropped Java 6 support, you get various of these verify errors.\r\n\r\nThey are all about \"Expected stackmap frame at this location.\".\r\n\r\nI'm no Byte Buddy expert, but from what I have read, the combination of ClassWriter.COMPUTE_MAXS with ClassReader.SKIP_FRAMES is not the best idea.\r\nClassReader.SKIP_FRAMES will skip reading and visiting stack maps and stack map tables.\r\nThe JavaDoc of that attribute says it is for example useful if you use ClassWriter.COMPUTE_FRAMES as it recalculates the stackmap frames anyway, so there is no need to parse and visit them.\r\nBut like it is currently, they are neither parsed, nor visited, nor computed and thus they are missing when verifying.\r\n\r\nAs far as I understood there are two ways to handle this, either use ClassWriter.COMPUTE_FRAMES and ClassReader.SKIP_FRAMES,\r\nas then the frames are not parsed or visited, but recalculated, or do not use both as they are then parsed, visited and in\r\nthe case of this visitor just copied.\r\n\r\nAs the visitor only removes the final modifiers for methods and classes now, I renamed it,\r\ndisabled even the MAXS computation and disabled the frame skipping.\r\n\r\nFrom my test it seems to work better with this setting now and also all your tests are green\r\n(except three tests that are red for me even without my changes).\r\n\r\nFixes #1005\r\nProbably fixes #956, #1024, #926, #549, #558, #873, #693, #543\r\n\r\nUpdate: also re-enabled the tests that were disabled due to this error in #952\r\nI think the exclusion of TestNG classes in commit e948b49 was also due to this error and could probably be reverted.\r\n\r\nWork-around: Use JVM option -noverify to disable the verification that complains about the missing stackmap frames.", "commitDateTime": "2020-03-30 15:46:22", "authoredDateTime": "2020-03-30 16:46:22", "commitGitStats": [{"filePath": "powermock-modules/powermock-module-javaagent/src/main/java/org/powermock/modules/agent/DefinalizingClassTransformer.java", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "powermock-modules/powermock-module-javaagent/src/main/java/org/powermock/modules/agent/{PowerMockClassVisitor.java => DefinalizingClassVisitor.java}", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "tests/easymock/junit4-agent/src/test/java/samples/powermockito/junit4/agent/AnnotationUsageTest.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "tests/easymock/junit4-agent/src/test/java/samples/powermockito/junit4/agent/LargeMethodTest.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "tests/easymock/testng-agent/src/test/java/samples/testng/agent/AnnotationDemoTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/easymock/testng-agent/src/test/java/samples/testng/agent/AnnotationDemoWithBeforeMethodTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/easymock/testng-agent/src/test/java/samples/testng/agent/FinalDemoTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "tests/easymock/testng-agent/src/test/java/samples/testng/agent/MockStaticExtendsPowerMockTestCaseTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "tests/easymock/testng-agent/src/test/java/samples/testng/agent/PartialMockingWithBeforeClassTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/easymock/testng-agent/src/test/java/samples/testng/agent/PrivateFinalTest.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "tests/easymock/testng-agent/src/test/java/samples/testng/agent/SampleServletTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/easymock/testng-agent/src/test/java/samples/testng/agent/SystemClassUserTest.java", "insertions": 11, "deletions": 11, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefinalizingClassTransformer.java", "spoonMethods": [{"spoonMethodName": "org.powermock.modules.agent.DefinalizingClassTransformer.transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.powermock.modules.agent.DefinalizingClassTransformer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefinalizingClassVisitor.java", "spoonMethods": [{"spoonMethodName": "org.powermock.modules.agent.PowerMockClassVisitor", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.modules.agent.PowerMockClassVisitor.visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.modules.agent.PowerMockClassVisitor.visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.modules.agent.PowerMockClassVisitor.visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AnnotationUsageTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.agent.AnnotationUsageTest.annotationsAreEnabledWhenUsingTheJUnitRule()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LargeMethodTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.agent.LargeMethodTest.largeMethodShouldBeOverridden()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.agent.LargeMethodTest.largeMethodShouldBeAbleToBeSuppressed()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.agent.LargeMethodTest.largeMethodShouldBeAbleToBeMocked()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.agent.LargeMethodTest.largeMethodShouldBeAbleToBeMockedAndThrowException()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AnnotationDemoTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.agent.AnnotationDemoTest.assertInjectionWorked()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AnnotationDemoWithBeforeMethodTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.agent.AnnotationDemoWithBeforeMethodTest.assertInjectionWorked()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "FinalDemoTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.agent.FinalDemoTest.testSay()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.FinalDemoTest.testSayFinalNative()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MockStaticExtendsPowerMockTestCaseTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.agent.MockStaticExtendsPowerMockTestCaseTest.testMockStatic()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.MockStaticExtendsPowerMockTestCaseTest.testMockStaticFinal()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "PartialMockingWithBeforeClassTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.agent.PartialMockingWithBeforeClassTest.partialMockingWithMockCreatedInBeforeClassMethod()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "PrivateFinalTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.agent.PrivateFinalTest.testSay()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.PrivateFinalTest.testMultiMock()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SampleServletTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.agent.SampleServletTest.doGet()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SystemClassUserTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.agent.SystemClassUserTest.assertThatMockingOfNonFinalSystemClassesWorks()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.SystemClassUserTest.assertThatMockingOfTheRuntimeSystemClassWorks()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.SystemClassUserTest.assertThatMockingOfFinalSystemClassesWorks()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.SystemClassUserTest.assertThatPartialMockingOfFinalSystemClassesWorks()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.SystemClassUserTest.assertThatPartialMockingOfFinalSystemClassesWorksForNonVoidMethods()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.SystemClassUserTest.assertThatMockingOfCollectionsWork()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.SystemClassUserTest.assertThatMockingStringWorks()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.SystemClassUserTest.mockingStaticVoidMethodWorks()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.SystemClassUserTest.mockingInstanceMethodOfFinalSystemClassWorks()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.SystemClassUserTest.mockingURLWorks()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.testng.agent.SystemClassUserTest.mockingInetAddressWorks()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "PowerMock2 regression - cannot mock <> - loader constraint violation: loader JavassistMockClassLoader previously initiated loading for a different type", "body": "While working on the performance testing for #894, I noticed that powermock 2.0.0-RC.1 cannot mock java.security.cert.X509CertSelector. \r\n\r\nPowermock 1.7.4 succeeds. \r\n\r\n```\r\n# https://github.com/jamesbroadhead/powermock_demo/tree/powermock_x500_bug\r\n$ bazel query //... | xargs bazel test --cache_test_results=no\r\nINFO: Analysed 3 targets (0 packages loaded).\r\nINFO: Found 1 target and 2 test targets...\r\nFAIL: //test/java/com/example:new_powermock_tests (see /private/var/tmp/_bazel_jbo/395368c74923711b7961c1cc955811d0/execroot/__main__/bazel-out/darwin-fastbuild/testlogs/test/java/com/example/new_powermock_tests/test.log)\r\nINFO: Elapsed time: 2.524s, Critical Path: 2.38s\r\nINFO: 2 processes: 2 darwin-sandbox.\r\nINFO: Build completed, 1 test FAILED, 3 total actions\r\n//test/java/com/example:old_powermock_tests                              PASSED in 1.4s\r\n//test/java/com/example:new_powermock_tests                              FAILED in 2.2s\r\n  /private/var/tmp/_bazel_jbo/395368c74923711b7961c1cc955811d0/execroot/__main__/bazel-out/darwin-fastbuild/testlogs/test/java/com/example/new_powermock_tests/test.log\r\n\r\nExecuted 2 out of 2 tests: 1 test passes and 1 fails locally.\r\nINFO: Build completed, 1 test FAILED, 3 total actions\r\n```\r\n\r\n```\r\n$ cat /private/var/tmp/_bazel_jbo/395368c74923711b7961c1cc955811d0/execroot/__main__/bazel-out/darwin-fastbuild/testlogs/test/java/com/example/new_powermock_tests/test.log\r\nexec ${PAGER:-/usr/bin/less} \"$0\" || exit 1\r\nExecuting tests from //test/java/com/example:new_powermock_tests\r\n-----------------------------------------------------------------------------\r\nJUnit4 Test Runner\r\n.E\r\nTime: 1.284\r\nThere was 1 failure:\r\n1) oneTest(com.example.PowerMockTest)\r\njava.lang.LinkageError: loader constraint violation: loader (instance of org/powermock/core/classloader/javassist/JavassistMockClassLoader) previously initiated loading for a different type with name \"javax/security/auth/x500/X500Principal\"\r\n\tat java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763)\r\n\tat org.powermock.core.classloader.javassist.JavassistMockClassLoader.loadUnmockedClass(JavassistMockClassLoader.java:90)\r\n\tat org.powermock.core.classloader.MockClassLoader.loadClassByThisClassLoader(MockClassLoader.java:104)\r\n\tat org.powermock.core.classloader.DeferSupportingClassLoader.loadClass1(DeferSupportingClassLoader.java:147)\r\n\tat org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:98)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\tat org.mockito.codegen.X509CertSelector$MockitoMock$556873686.<clinit>(Unknown Source)\r\n\tat sun.reflect.GeneratedSerializationConstructorAccessor4.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator.newInstance(SunReflectionFactoryInstantiator.java:48)\r\n\tat org.objenesis.ObjenesisBase.newInstance(ObjenesisBase.java:73)\r\n\tat org.mockito.internal.creation.instance.ObjenesisInstantiator.newInstance(ObjenesisInstantiator.java:19)\r\n\tat org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:47)\r\n\tat org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(ByteBuddyMockMaker.java:25)\r\n\tat org.powermock.api.mockito.mockmaker.PowerMockMaker.createMock(PowerMockMaker.java:41)\r\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35)\r\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:69)\r\n\tat org.mockito.Mockito.mock(Mockito.java:1895)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.createMethodInvocationControl(DefaultMockCreator.java:108)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.doCreateMock(DefaultMockCreator.java:61)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.createMock(DefaultMockCreator.java:53)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.mock(DefaultMockCreator.java:40)\r\n\tat org.powermock.api.mockito.PowerMockito.mock(PowerMockito.java:126)\r\n\tat com.example.PowerMockTest.oneTest(PowerMockTest.java:17)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:326)\r\n\tat org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89)\r\n\tat org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:310)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:298)\r\n\tat org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87)\r\n\tat org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:218)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:160)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:134)\r\n\tat org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\r\n\tat org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:136)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:117)\r\n\tat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57)\r\n\tat org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\r\n\tat com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)\r\n\tat com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)\r\n\tat com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)\r\n\r\nFAILURES!!!\r\nTests run: 1,  Failures: 1\r\n\r\n\r\nBazelTestRunner exiting with a return value of 1\r\nJVM shutdown hooks (if any) will run now.\r\nThe JVM will exit once they complete.\r\n\r\n-- JVM shutdown starting at 2018-10-26 23:44:50 --\r\n```", "url": "https://github.com/powermock/powermock/issues/950", "user": "jamesbroadhead", "labels": ["Not an issue", "bug", "regression"], "created": "2018-10-26 23:49:29", "closed": "2018-11-03 17:16:55", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Error with setInternalState and JDK12 \"java.lang.NoSuchFieldException: modifiers\"", "body": "What steps will reproduce the problem?\r\nUse WhiteBox#setInternalState with JDK12 \r\n\r\nWhat is the expected output?\r\nsetInternalState does not throw exception\r\n\r\nWhat do you see instead?\r\n```\r\njava.lang.RuntimeException: Internal error: Failed to find the \"modifiers\" field in method setInternalState.\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.sedModifiersToField(WhiteboxImpl.java:2354)\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.removeFinalModifierIfPresent(WhiteboxImpl.java:2318)\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.setField(WhiteboxImpl.java:2304)\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.setInternalState(WhiteboxImpl.java:304)\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.setInternalState(WhiteboxImpl.java:317)\r\n\tat org.powermock.reflect.Whitebox.setInternalState(Whitebox.java:190)\r\n\tat org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:61)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\r\n```\r\n\r\nWhat version of the product are you using? \r\n2.0.0.Beta5", "url": "https://github.com/powermock/powermock/issues/939", "user": "eolivelli", "labels": ["bug"], "created": "2018-10-03 07:09:38", "closed": "2018-11-17 09:57:23", "commits": {}, "ttf": 45.000277777777775, "commitsDetails": []}, {"title": "ConcurrentModificationException in javassist.CtClassType.instrument", "body": "Using version 1.7.4, everything works fine.\r\nUpgrading Hibernate from 5.3.2 to 5.3.3 triggered a transitive upgrade of javassist from  \r\n3.22.0-GA to 3.23.1-GA (I see powermock has a dependency on an even older 3.21-GA)\r\n\r\nUsing 3.23.1-GA triggers this error:\r\n```\r\nat org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:296)\r\n\tat org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:204)\r\n\tat org.powermock.core.classloader.DeferSupportingClassLoader.loadClass1(DeferSupportingClassLoader.java:89)\r\n\tat org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:79)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\tat java.lang.Class.forName0(Native Method)\r\n\tat java.lang.Class.forName(Class.java:348)\r\n\tat sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)\r\n\tat sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)\r\n\tat sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)\r\n\tat sun.reflect.annotation.AnnotationParser.parseSig(AnnotationParser.java:439)\r\n\tat sun.reflect.annotation.AnnotationParser.parseClassValue(AnnotationParser.java:420)\r\n\tat sun.reflect.annotation.AnnotationParser.parseClassArray(AnnotationParser.java:724)\r\n\tat sun.reflect.annotation.AnnotationParser.parseArray(AnnotationParser.java:531)\r\n\tat sun.reflect.annotation.AnnotationParser.parseMemberValue(AnnotationParser.java:355)\r\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:286)\r\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)\r\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:72)\r\n\tat java.lang.Class.createAnnotationData(Class.java:3521)\r\n\tat java.lang.Class.annotationData(Class.java:3510)\r\n\tat java.lang.Class.getAnnotation(Class.java:3415)\r\n\tat org.junit.internal.MethodSorter.getDeclaredMethods(MethodSorter.java:52)\r\n\tat org.junit.internal.runners.TestClass.getAnnotatedMethods(TestClass.java:45)\r\n\tat org.junit.internal.runners.MethodValidator.validateTestMethods(MethodValidator.java:71)\r\n\tat org.junit.internal.runners.MethodValidator.validateStaticMethods(MethodValidator.java:44)\r\n\tat org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner(MethodValidator.java:50)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.validate(PowerMockJUnit44RunnerDelegateImpl.java:124)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.<init>(PowerMockJUnit44RunnerDelegateImpl.java:86)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl.<init>(PowerMockJUnit47RunnerDelegateImpl.java:42)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit49RunnerDelegateImpl.<init>(PowerMockJUnit49RunnerDelegateImpl.java:25)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:172)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:48)\r\n\tat org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.createTestDelegators(AbstractTestSuiteChunkerImpl.java:108)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.<init>(JUnit4TestSuiteChunkerImpl.java:71)\r\n\tat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.<init>(AbstractCommonPowerMockRunner.java:36)\r\n\tat org.powermock.modules.junit4.PowerMockRunner.<init>(PowerMockRunner.java:34)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)\r\n\tat org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)\r\n\tat org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\r\n\tat org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\r\n\tat org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\r\n\tat org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:49)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: java.util.ConcurrentModificationException\r\n\tat java.util.ArrayList$Itr.checkForComodification(ArrayList.java:909)\r\n\tat java.util.ArrayList$Itr.next(ArrayList.java:859)\r\n\tat javassist.CtClassType.instrument(CtClassType.java:1540)\r\n\tat org.powermock.core.transformers.impl.ClassMockTransformer.transformMockClass(ClassMockTransformer.java:65)\r\n\tat org.powermock.core.transformers.impl.AbstractMainMockTransformer.transform(AbstractMainMockTransformer.java:62)\r\n\tat org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:277)\r\n\t... 53 more\r\n```\r\nNot sure though if this is a powermock issue or a Javassist one.", "url": "https://github.com/powermock/powermock/issues/924", "user": "andrei-ivanov", "labels": ["3rd-party-issue", "Not an issue", "bug"], "created": "2018-07-24 12:34:21", "closed": "2018-11-04 17:01:54", "commits": {}, "ttf": 103.00027777777778, "commitsDetails": []}, {"title": "java.util.ServiceConfigurationError: not a subtype when using log4j2 2.9.x", "body": "Hi,\r\n\r\nwe have been seeing some weird issues on our build server recently and after investigating found out that the problem stemmed from using powermock with log4j2 after upgrading log4j2 from 2.8.3 to 2.9.1. It seems to be a classloading issue and I am not sure the problem lies with powermock - but it might be.\r\n\r\nQuestionaire:\r\n### What steps will reproduce the problem?\r\nHave the class under test (or an injected class) get a log4j2 logger, i.e.\r\n```java\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\n\r\n[...]\r\n\r\nfinal Logger logger = LogManager.getLogger(Example.class);\r\n```\r\n\r\n### What is the expected output?\r\nTesting works with log4j2 2.9.x as it did with 2.8.x.\r\n\r\n### What do you see instead?\r\n\r\n```java\r\njava.util.ServiceConfigurationError: org.apache.logging.log4j.spi.Provider: Provider org.apache.logging.log4j.core.impl.Log4jProvider not a subtype\r\n\tat java.util.ServiceLoader.fail(ServiceLoader.java:239)\r\n\tat java.util.ServiceLoader.access$300(ServiceLoader.java:185)\r\n\tat java.util.ServiceLoader$LazyIterator.nextService(ServiceLoader.java:376)\r\n\tat java.util.ServiceLoader$LazyIterator.next(ServiceLoader.java:404)\r\n\tat java.util.ServiceLoader$1.next(ServiceLoader.java:480)\r\n\tat org.apache.logging.log4j.util.ProviderUtil.loadProviders(ProviderUtil.java:101)\r\n\tat org.apache.logging.log4j.util.ProviderUtil.<init>(ProviderUtil.java:67)\r\n\tat org.apache.logging.log4j.util.ProviderUtil.lazyInit(ProviderUtil.java:142)\r\n\tat org.apache.logging.log4j.util.ProviderUtil.hasProviders(ProviderUtil.java:126)\r\n\tat org.apache.logging.log4j.LogManager.<clinit>(LogManager.java:89)\r\n\tat com.company.project.module.logic.users.InjectedClassWithLogger.<clinit>(InjectedClassWithLogger.java:87)\r\n\tat sun.reflect.GeneratedSerializationConstructorAccessor6.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator.newInstance(SunReflectionFactoryInstantiator.java:45)\r\n\tat org.objenesis.ObjenesisBase.newInstance(ObjenesisBase.java:73)\r\n\tat org.mockito.internal.creation.instance.ObjenesisInstantiator.newInstance(ObjenesisInstantiator.java:14)\r\n\tat org.powermock.api.mockito.repackaged.ClassImposterizer.createProxy(ClassImposterizer.java:149)\r\n\tat org.powermock.api.mockito.repackaged.ClassImposterizer.imposterise(ClassImposterizer.java:64)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.createMethodInvocationControl(DefaultMockCreator.java:121)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.createMock(DefaultMockCreator.java:69)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.mock(DefaultMockCreator.java:46)\r\n\tat org.powermock.api.mockito.PowerMockito.mock(PowerMockito.java:201)\r\n\tat org.powermock.api.extension.listener.AnnotationEnabler.standardInject(AnnotationEnabler.java:118)\r\n\tat org.powermock.api.extension.listener.AnnotationEnabler.beforeTestMethod(AnnotationEnabler.java:63)\r\n\tat org.powermock.tests.utils.impl.PowerMockTestNotifierImpl.notifyBeforeTestMethod(PowerMockTestNotifierImpl.java:82)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:308)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:298)\r\n\tat org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:86)\r\n\tat org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:218)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:160)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:134)\r\n\tat org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:33)\r\n\tat org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:45)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:136)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121)\r\n\tat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57)\r\n\tat org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)\r\n\r\n\r\n```\r\n\r\n### What version of the product are you using? \r\npowermock-api-mockito 1.7.3\r\npowermock-module-junit4 1.7.3\r\nwith\r\nmockito-all 1.10.9\r\n", "url": "https://github.com/powermock/powermock/issues/861", "user": "d53dave", "labels": ["bug"], "created": "2017-10-16 13:19:11", "closed": "2017-11-11 10:06:44", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "PowerMock.replayAll does not handle mocks created by annotation processor for `org.easymock.Mock` annotation", "body": "After 1.6.3 PowerMock switched to easy mock annotation processing for `org.easymock.Mock` annotation. As result, mocks are created by EasyMock is not tracked by PowerMock any more. So `PowerMock.replayAll` switch to replay mode only mocks created by PowerMock.  \r\n\r\nExample: \r\n```\r\n\r\n@RunWith(PowerMockRunner.class)\r\npublic class EasyMockAnnotationTest {\r\n    \r\n    @Mock\r\n    private Service serviceMock;\r\n    \r\n    @Test\r\n    public void replayAll_should_switch_to_replay_mode_mocks_created_by_easymock_annotation_processing() {\r\n        expect(serviceMock.getServiceMessage()).andReturn(\"value\");\r\n    \r\n        PowerMock.replayAll();\r\n        \r\n        assertEquals(\"value\", serviceMock.getServiceMessage());\r\n    }\r\n}\r\n\r\n```", "url": "https://github.com/powermock/powermock/issues/849", "user": "thekingn0thing", "labels": ["bug", "component:easymock", "regression"], "created": "2017-09-16 16:41:25", "closed": "2017-09-16 17:37:31", "commits": {"db131bf731c0d8f0806a160c77d180b3270351b2": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "054becfc3ce2ebcc1cb37aaea8b5a62b4eccf204": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "db131bf731c0d8f0806a160c77d180b3270351b2", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "054becfc3ce2ebcc1cb37aaea8b5a62b4eccf204", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["3876b7882700849700cfdc39e805d09ade4ec16f"], "nameRev": "054becfc3ce2ebcc1cb37aaea8b5a62b4eccf204 tags/powermock-1.7.3~1", "commitMessage": "Fixed #849 PowerMock.replayAll does not handle mocks created by annotation processor for `org.easymock.Mock` annotation\n", "commitDateTime": "2017-09-16 19:37:30", "authoredDateTime": "2017-09-16 18:55:10", "commitGitStats": [{"filePath": "gradle/publishing/publishable-module.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/AnnotationEnabler.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "powermock-reflect/src/main/java/org/powermock/reflect/Whitebox.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "powermock-reflect/src/main/java/org/powermock/reflect/internal/WhiteboxImpl.java", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "tests/easymock/junit412/src/{test/java/samples/junit412 => main/java/samples/junit412/bug}/github668/IncidentPropertyChangeDAO.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/{ => bug}/github668/TwoMockFieldsWithDifferentTypesClass.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/{ => bug}/github668/TwoMockFieldsWithSameTypeCase.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/{ => bug}/github668/package-info.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github849/EasyMockAnnotationTest.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github849/package-info.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/github668/Github668Test.java", "insertions": 0, "deletions": 11, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AnnotationEnabler.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.AnnotationEnabler.registerAllCreatedMocks(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.extension.listener.AnnotationEnabler.beforeTestMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Whitebox.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.Whitebox.getFieldValue(java.lang.reflect.Field,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WhiteboxImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.getFieldValue(java.lang.reflect.Field,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IncidentPropertyChangeDAO.java", "spoonMethods": []}, {"spoonFilePath": "TwoMockFieldsWithDifferentTypesClass.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass.mockClassShouldInjected()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass.shouldBeAbleMockMethodsOfInjected()", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TwoMockFieldsWithSameTypeCase.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithSameTypeCase", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithSameTypeCase.mockClassShouldInjected()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithSameTypeCase.shouldBeAbleMockMethodsOfInjected()", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}, {"spoonFilePath": "EasyMockAnnotationTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.bug.github849.EasyMockAnnotationTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Github668Test.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.github668.Github668Test", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["054becfc3ce2ebcc1cb37aaea8b5a62b4eccf204"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 35.0, "deletions": 4.0, "lines": 39.0, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 37.0, "UPD": 33.0, "INS": 4.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["powermock-reflect/src/main/java/org/powermock/reflect/internal", "powermock-reflect/src/main/java/org/powermock/reflect", "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener", "gradle/publishing", "tests/easymock/junit412/src/{test/java/samples/junit412 => main/java/samples"], "changesInPackagesSPOON": ["org.powermock.api.extension.listener.AnnotationEnabler.registerAllCreatedMocks(java.lang.Object)", "org.powermock.api.extension.listener.AnnotationEnabler.beforeTestMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass.shouldBeAbleMockMethodsOfInjected()", "samples.junit412.github668.TwoMockFieldsWithSameTypeCase", "org.powermock.reflect.internal.WhiteboxImpl.getFieldValue(java.lang.reflect.Field,java.lang.Object)", "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass", "samples.junit412.github668.TwoMockFieldsWithSameTypeCase.mockClassShouldInjected()", "samples.junit412.github668.TwoMockFieldsWithSameTypeCase.shouldBeAbleMockMethodsOfInjected()", "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass.mockClassShouldInjected()", "org.powermock.reflect.Whitebox.getFieldValue(java.lang.reflect.Field,java.lang.Object)"]}, {"title": "Exception verification in junit tests", "body": "**What steps will reproduce the problem?**\r\n```\r\n@Test(expected = NotFoundException.class)\r\npublic void a() {\r\n    doThrow(NotFoundException.class).when(b).doSomething();\r\n    b.doSomething();\r\n}\r\n```\r\n**What is the expected output?**\r\nTest to pass\r\n**What do you see instead?**\r\nTest failure, throws RuntimeExceptionProxy instead of NotFoundException\r\n**What version of the product are you using?**\r\n1.7.0RC4\r\n**On what operating system?**\r\nmacOS 10.12.5\r\n**Please provide any additional information below.** \r\nI believe the issue is with this change:\r\nhttps://github.com/powermock/powermock/commit/a89e8e5760f57c6d1b92b9049a44d43da92150da#diff-d9ef7e539426f80c697a03a7f7e2c8e9R25\r\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/806", "user": "yrmk", "labels": ["bug", "regression"], "created": "2017-06-07 20:20:10", "closed": "2017-06-08 20:42:20", "commits": {"eddff90019b2e870165aaff3bc7065c01bc5877f": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "00d4b43271f903b955177689ade7261f122d7e45": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "eddff90019b2e870165aaff3bc7065c01bc5877f", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "00d4b43271f903b955177689ade7261f122d7e45", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["9193ddd69bb5788de60a8abf7328ea2c466ee0f6"], "nameRev": "00d4b43271f903b955177689ade7261f122d7e45 tags/powermock-1.7.0~8", "commitMessage": "Fix #806 Exception verification in junit tests\nAdd test to verify issue.\n", "commitDateTime": "2017-06-08 22:42:16", "authoredDateTime": "2017-06-08 22:22:15", "commitGitStats": [{"filePath": "tests/mockito/junit4/src/main/java/samples/powermockito/junit4/bugs/github806/CustomException.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "tests/mockito/junit4/src/main/java/samples/powermockito/junit4/bugs/github806/DoThrowTMockClass.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github806/DoThrowTest.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github806/package-info.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CustomException.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github806.CustomException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DoThrowTMockClass.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github806.DoThrowTMockClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DoThrowTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github806.DoThrowTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["00d4b43271f903b955177689ade7261f122d7e45"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 54.0, "deletions": 0.0, "lines": 54.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["tests/mockito/junit4/src/main/java/samples/powermockito/junit4/bugs"], "changesInPackagesSPOON": ["samples.powermockito.junit4.bugs.github806.CustomException", "samples.powermockito.junit4.bugs.github806.DoThrowTMockClass"]}, {"title": "PowerMockMaker for Mockito 2", "body": "PowerMockMaker should delegate creating mock object to default Mockito MockMaker if test does not use PowerMock feature like `@PrepareForTest`, `@SupressStaticInitilization` and so on. \r\n\r\nPowerMock breaks a new feature of Mockito 2, because it mocking final classes and methods without PowerMock. \r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/793", "user": "thekingn0thing", "labels": ["Priority-Critical", "bug", "component:mockito"], "created": "2017-05-21 08:00:39", "closed": "2017-05-26 20:07:13", "commits": {"0875568c351898392e6ea2f794234165d14eb5a9": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "a78afc5ffc0bc031d46d7aae41f15b4e830522b8": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}, "c4837b5675a0e5389e867617f88d7b8f94bf8996": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "9e510c523fecd60a909c5083d96fae32a25c742d": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "35910e4c08a9b717e7eec161d1891274ccb7a63f": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "0875568c351898392e6ea2f794234165d14eb5a9", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a78afc5ffc0bc031d46d7aae41f15b4e830522b8", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["998cc0700640280f4e813e5830838464db8eb806"], "nameRev": "a78afc5ffc0bc031d46d7aae41f15b4e830522b8 tags/powermock-1.7.0~18", "commitMessage": "Fix #793 PowerMockMaker for Mockito 2 (#795)\n\nImplement #793 PowerMockMaker for Mockito 2: A new version of PowerMockMaker implemented. It does not conflict with Mockito MockMaker any more. Fix for #701 partially does not work any more, because ByteBuddy implementation of MockMaker always intercept calls to equals and return `true` only in case if passed object is the same instance of mocked object.", "commitDateTime": "2017-05-26 22:07:11", "authoredDateTime": "2017-05-26 22:07:11", "commitGitStats": [{"filePath": "build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "changelog.txt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/internal/mockcreation/DefaultMockCreator.java", "insertions": 15, "deletions": 6, "lines": 21}, {"filePath": "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/internal/mockmaker/PowerMockMaker.java", "insertions": 12, "deletions": 20, "lines": 32}, {"filePath": "powermock-api/powermock-api-mockito2/src/test/java/org/powermock/api/mockito/internal/mockcreation/MockCreatorTest.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "powermock-classloading/powermock-classloading-base/src/main/java/org/powermock/classloading/AbstractClassloaderExecutor.java", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "powermock-core/src/main/java/org/powermock/core/classloader/MockClassLoader.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "powermock-core/src/test/java/org/powermock/core/classloader/MockClassLoaderTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "settings.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/mockito/build.gradle", "insertions": 22, "deletions": 5, "lines": 27}, {"filePath": "tests/mockito/inline/src/main/java/samples/powermockito/inline/bugs/github793/FinalClass.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "tests/mockito/inline/src/main/java/samples/powermockito/inline/bugs/github793/StaticClass.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "tests/mockito/inline/src/main/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/mockito/inline/src/test/java/samples/powermockito/inline/bugs/github793/MockitoFinalClassMockingTest.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "tests/mockito/inline/src/test/java/samples/powermockito/inline/bugs/github793/PowerMockStaticMockingTest.java", "insertions": 78, "deletions": 0, "lines": 78}, {"filePath": "tests/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/PrivateInstanceMockingTest.java", "insertions": 2, "deletions": 80, "lines": 82}, {"filePath": "tests/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/PrivateInstanceMockingTest.java", "insertions": 3, "deletions": 81, "lines": 84}, {"filePath": "tests/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/PrivateInstanceMockingTest.java", "insertions": 3, "deletions": 78, "lines": 81}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github701/GitHub701Test.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/privatemocking/PrivateInstanceMockingCases.java", "insertions": 119, "deletions": 0, "lines": 119}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/privatemocking/PrivateInstanceMockingTest.java", "insertions": 11, "deletions": 92, "lines": 103}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/staticmocking/MockStaticTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "tests/utils/src/main/java/org/powermock/api/mockito/MockitoVersion.java", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "tests/utils/src/main/java/samples/powermockito/MockitoVersion.java", "insertions": 0, "deletions": 49, "lines": 49}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultMockCreator.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.createMethodInvocationControl(java.lang.String,java.lang.Class,java.lang.reflect.Method[],boolean,java.lang.Object,org.mockito.MockSettings)", "TOT": 8, "UPD": 2, "INS": 3, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "PowerMockMaker.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.resetMock(java.lang.Object,org.mockito.invocation.MockHandler,org.mockito.mock.MockCreationSettings)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.createMock(org.mockito.mock.MockCreationSettings,org.mockito.invocation.MockHandler)", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 4}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.isTypeMockable(java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.PowerMockInternalMockHandler", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.PowerMockInternalMockHandler.getMockSettings()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.getHandler(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockCreatorTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.mockcreation.MockCreatorTest.testMock_shouldReturnMockNameWhenSettingsHaveName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockcreation.MockCreatorTest.testMock_shouldReturnClassNameWhenSettingsHaveNoName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractClassloaderExecutor.java", "spoonMethods": [{"spoonMethodName": "org.powermock.classloading.AbstractClassloaderExecutor.invokeWithClassLoader(java.lang.ClassLoader,java.lang.reflect.Method,java.lang.Object,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.classloading.AbstractClassloaderExecutor.executeWithClassLoader(java.lang.Object,java.lang.reflect.Method,java.lang.ClassLoader,java.lang.Object[])", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "MockClassLoader.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.MockClassLoader.loadUnmockedClass(java.lang.String,java.security.ProtectionDomain)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MockClassLoaderTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.MockClassLoaderTest.cannotFindDynamicClassInDeferredClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FinalClass.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.inline.bugs.github793.FinalClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StaticClass.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.inline.bugs.github793.StaticClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockitoFinalClassMockingTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.inline.bugs.github793.MockitoFinalClassMockingTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PowerMockStaticMockingTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.inline.bugs.github793.PowerMockStaticMockingTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrivateInstanceMockingTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.answersWorkWhenSpyingOnPrivateVoidMethods().1", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.expectationsWorkWhenSpyingOnPrivateMethods()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.expectationsWorkWithArgumentMatchersWhenSpyingOnPrivateMethods()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.errorousVerificationOnPrivateMethodGivesFilteredErrorMessage()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.answersWorkWhenSpyingOnPrivateVoidMethods()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.spyingOnPrivateFinalMethodsWorksWhenClassIsNotFinal()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GitHub701Test.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github701.GitHub701Test.shouldMockEqualsMethod()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "PrivateInstanceMockingCases.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingCases", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockStaticTest.java", "spoonMethods": []}, {"spoonFilePath": "MockitoVersion.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.MockitoVersion", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c4837b5675a0e5389e867617f88d7b8f94bf8996", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9e510c523fecd60a909c5083d96fae32a25c742d", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "35910e4c08a9b717e7eec161d1891274ccb7a63f", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["9112ae17f4ca5e6f820fd2989b518818b83cdd05"], "nameRev": "35910e4c08a9b717e7eec161d1891274ccb7a63f tags/powermock-1.7.0~13", "commitMessage": "Fix #793 PowerMockMaker for Mockito 2\nAdd ability use \u2018mock-maker-inline\u2019 via PowerMock configuration\n", "commitDateTime": "2017-06-04 10:52:37", "authoredDateTime": "2017-06-03 11:20:17", "commitGitStats": [{"filePath": "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/internal/mockcreation/DefaultMockCreator.java", "insertions": 18, "deletions": 16, "lines": 34}, {"filePath": "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/mockmaker/MockMakerLoader.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/{internal => }/mockmaker/PowerMockMaker.java", "insertions": 13, "deletions": 5, "lines": 18}, {"filePath": "powermock-api/powermock-api-mockito2/src/main/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "powermock-api/powermock-api-mockito2/src/test/java/org/powermock/api/mockito/internal/mockcreation/MockCreatorTest.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "powermock-api/powermock-api-mockito2/src/test/java/org/powermock/api/mockito/mockmaker/PowerMockMakerTest.java", "insertions": 108, "deletions": 0, "lines": 108}, {"filePath": "powermock-api/powermock-api-mockito2/src/test/resources/org/powermock/configuration.template", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "powermock-core/src/main/java/org/powermock/configuration/ConfigurationFactory.java", "insertions": 16, "deletions": 11, "lines": 27}, {"filePath": "powermock-core/src/main/java/org/powermock/configuration/ConfigurationReader.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "powermock-core/src/main/java/org/powermock/configuration/ConfigurationType.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "powermock-core/src/main/java/org/powermock/configuration/GlobalConfiguration.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "powermock-core/src/main/java/org/powermock/configuration/MockitoConfiguration.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "powermock-core/src/main/java/org/powermock/configuration/support/ConfigurationReaderBuilder.java", "insertions": 190, "deletions": 0, "lines": 190}, {"filePath": "powermock-core/src/main/java/org/powermock/configuration/support/ConfigurationReaderImpl.java", "insertions": 0, "deletions": 70, "lines": 70}, {"filePath": "powermock-core/src/main/java/org/powermock/core/PowerMockInternalException.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "powermock-core/src/test/java/org/powermock/configuration/ConfigurationFactoryTest.java", "insertions": 2, "deletions": 12, "lines": 14}, {"filePath": "powermock-core/src/test/java/org/powermock/configuration/ConfigurationReaderTest.java", "insertions": 41, "deletions": 5, "lines": 46}, {"filePath": "powermock-core/src/test/resources/org/powermock/configuration/test_with_alias.properties", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "powermock-core/src/test/resources/org/powermock/configuration/test_without_prefix.properties", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/mockito/inline/src/main/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "tests/mockito/inline/src/main/resources/org/powermock/configuration.properties", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/mockito/inline/src/test/java/samples/powermockito/inline/bugs/github793/PowerMockStaticMockingTest.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultMockCreator.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.createMethodInvocationControl(java.lang.String,java.lang.Class,java.lang.reflect.Method[],boolean,java.lang.Object,org.mockito.MockSettings)", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 2}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.getMockMaker()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockMakerLoader.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.mockmaker.MockMakerLoader", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PowerMockMaker.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.isTypeMockable(java.lang.Class)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.resetMock(java.lang.Object,org.mockito.invocation.MockHandler,org.mockito.mock.MockCreationSettings)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.createMock(org.mockito.mock.MockCreationSettings,org.mockito.invocation.MockHandler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.getHandler(java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.PowerMockInternalMockHandler.getMockSettings()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.PowerMockInternalMockHandler", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.api.mockito.mockmaker.PowerMockMaker", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.mockmaker.PowerMockMaker.getMockMaker()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockCreatorTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.mockcreation.MockCreatorTest.testMock_shouldReturnMockNameWhenSettingsHaveName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockcreation.MockCreatorTest.testMock_shouldReturnClassNameWhenSettingsHaveNoName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PowerMockMakerTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.mockmaker.PowerMockMakerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationFactory.java", "spoonMethods": [{"spoonMethodName": "org.powermock.configuration.ConfigurationFactory.create()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.ConfigurationFactory.readDefault()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.powermock.configuration.ConfigurationFactory.readUserConfiguration()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.configuration.ConfigurationFactory.create(java.lang.Class)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.ConfigurationFactory.readDefault(java.lang.Class)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.ConfigurationFactory.readUserConfiguration(java.lang.Class)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationReader.java", "spoonMethods": [{"spoonMethodName": "org.powermock.configuration.read()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.read(java.lang.Class)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationType.java", "spoonMethods": [{"spoonMethodName": "org.powermock.configuration.ConfigurationType", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GlobalConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.powermock.configuration.GlobalConfiguration", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.GlobalConfiguration.get()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.GlobalConfiguration.createConfig()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.GlobalConfiguration.mockitoConfiguration()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.GlobalConfiguration.clear()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.GlobalConfiguration.createConfig(java.lang.Class)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockitoConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.powermock.configuration.getMockMakerClass()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.powermock.configuration", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.configuration.MockitoConfiguration", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationReaderBuilder.java", "spoonMethods": [{"spoonMethodName": "org.powermock.configuration.support.ConfigurationReaderBuilder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationReaderImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.configuration.support.ConfigurationReaderImpl", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "PowerMockInternalException.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.PowerMockInternalException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.configuration.ConfigurationFactoryTest.should_return_configuration_from_file_if_configuration_file_exist()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.ConfigurationFactoryTest.should_return_default_configuration_if_configuration_file_not_exist()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationReaderTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.configuration.ConfigurationReaderTest.setUp()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.configuration.ConfigurationReaderTest.should_return_null_when_configuration_file_non_exist()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.powermock.configuration.ConfigurationReaderTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.ConfigurationReaderTest.should_not_read_mock_maker_class_from_configuration_without_prefix()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.ConfigurationReaderTest.should_return_real_value_instead_alias()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.ConfigurationReaderTest.should_read_configuration_from_properties()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.configuration.ConfigurationReaderTest.should_read_mock_maker_class_from_configuration()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PowerMockStaticMockingTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.inline.bugs.github793.PowerMockStaticMockingTest.should_verify_static_method_when_mockito_inline_mock_creator_for_mockito_tests()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.inline.bugs.github793.PowerMockStaticMockingTest.should_verify_static_method_when_mockito_inline_mock_creator_for_mockito_tests().1.call()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["35910e4c08a9b717e7eec161d1891274ccb7a63f"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 365.0, "deletions": 116.0, "lines": 481.0, "gitFilesChange": 14}, "spoonStatsSummary": {"TOT": 68.0, "UPD": 24.0, "INS": 28.0, "MOV": 7.0, "DEL": 9.0, "spoonFilesChanged": 11, "spoonMethodsChanged": 33}, "statsSkippedReason": "", "changesInPackagesGIT": ["powermock-core/src/main/java/org/powermock/core", "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/mockmaker", "powermock-core/src/main/java/org/powermock/configuration", "powermock-core/src/main/java/org/powermock/configuration/support", "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/internal", "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/{internal => }", "tests/mockito/inline/src/main/resources/mockito-extensions/org.mockito.plugins.MockMaker", "tests/mockito/inline/src/main/resources/org/powermock/configuration.properties", "powermock-api/powermock-api-mockito2/src/main/resources/mockito-extensions/org.mockito.plugins.MockMaker"], "changesInPackagesSPOON": ["org.powermock.configuration.getMockMakerClass()", "org.powermock.configuration.read()", "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.PowerMockInternalMockHandler.getMockSettings()", "org.powermock.configuration.read(java.lang.Class)", "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.getHandler(java.lang.Object)", "org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.createMethodInvocationControl(java.lang.String,java.lang.Class,java.lang.reflect.Method[],boolean,java.lang.Object,org.mockito.MockSettings)", "org.powermock.api.mockito.mockmaker.MockMakerLoader", "org.powermock.configuration.ConfigurationFactory.readUserConfiguration(java.lang.Class)", "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.resetMock(java.lang.Object,org.mockito.invocation.MockHandler,org.mockito.mock.MockCreationSettings)", "org.powermock.configuration.support.ConfigurationReaderImpl", "org.powermock.configuration", "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.PowerMockInternalMockHandler", "org.powermock.configuration.GlobalConfiguration.clear()", "org.powermock.configuration.MockitoConfiguration", "org.powermock.configuration.GlobalConfiguration.mockitoConfiguration()", "org.powermock.configuration.ConfigurationFactory.create(java.lang.Class)", "org.powermock.configuration.ConfigurationFactory.create()", "org.powermock.configuration.GlobalConfiguration.createConfig()", "org.powermock.configuration.GlobalConfiguration.createConfig(java.lang.Class)", "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.createMock(org.mockito.mock.MockCreationSettings,org.mockito.invocation.MockHandler)", "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.isTypeMockable(java.lang.Class)", "org.powermock.api.mockito.mockmaker.PowerMockMaker", "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker", "org.powermock.configuration.ConfigurationType", "org.powermock.configuration.support.ConfigurationReaderBuilder", "org.powermock.core.PowerMockInternalException", "org.powermock.configuration.ConfigurationFactory.readUserConfiguration()", "org.powermock.configuration.ConfigurationFactory.readDefault()", "org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.getMockMaker()", "org.powermock.configuration.GlobalConfiguration", "org.powermock.configuration.ConfigurationFactory.readDefault(java.lang.Class)", "org.powermock.api.mockito.mockmaker.PowerMockMaker.getMockMaker()", "org.powermock.configuration.GlobalConfiguration.get()"]}, {"title": "Real equals static methods are called instead of mocked", "body": "Real equals static methods are called instead of mocked for equals static methods that are called from a stub. \r\n\r\n\r\n```\r\npublic class SpyObject {\r\n    public boolean callEquals() {\r\n        return EqualsStatic.equals();\r\n    }\r\n}\r\n```\r\n\r\n```\r\npublic class EqualsStatic {\r\n\r\n    public static boolean equals() {\r\n        return false;\r\n    }\r\n}\r\n```\r\n\r\n```\r\n@RunWith(PowerMockRunner.class)\r\n@PrepareForTest(EqualsStatic.class)\r\npublic class SpyTest {\r\n\r\n    private SpyObject partialMock = null;\r\n\r\n    @Before\r\n    public void setup() throws Exception {\r\n        PowerMockito.mockStatic(EqualsStatic.class);\r\n        PowerMockito.when(EqualsStatic.equals()).thenReturn(true);\r\n\r\n        partialMock = spy(new SpyObject());\r\n    }\r\n\r\n    @Test\r\n    public void testCallEquals() {\r\n        //fail\r\n        assertTrue(partialMock.callEquals());\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\nIt occurs because in MockGateway#doMethodCall methods MockGateway#tryHandleEqualsMethod\r\nis invoked where following statement seems triggers reals method invocation:\r\n\r\n```\r\nif (calledFromMockito()){\r\n    return PROCEED;\r\n}\r\n\r\n\r\n```\r\n\r\n\r\n", "url": "https://github.com/powermock/powermock/issues/781", "user": "Ilya-Gh", "labels": ["Resolved", "bug"], "created": "2017-04-15 17:13:33", "closed": "2017-04-16 05:47:22", "commits": {"4691a55898f8020bb45c1114a690119f3871d14c": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4691a55898f8020bb45c1114a690119f3871d14c", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["152ba612e176b33a751d956d27d8388858276144"], "nameRev": "4691a55898f8020bb45c1114a690119f3871d14c tags/powermock-1.7.0~21", "commitMessage": "Fix #781: Call mocked equals static method instead of real. (#782)\n\nFix #781: Call mocked equals static method instead of real.\r\n", "commitDateTime": "2017-04-16 07:47:21", "authoredDateTime": "2017-04-16 08:47:21", "commitGitStats": [{"filePath": "powermock-core/src/main/java/org/powermock/core/MockGateway.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github781/EqualsStatic.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github781/GitHub781Test.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github781/SpyObject.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockGateway.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.MockGateway.isStaticMethod(org.powermock.core.MockInvocation)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.doMethodCall(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EqualsStatic.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github781.EqualsStatic", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GitHub781Test.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github781.GitHub781Test", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpyObject.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github781.SpyObject", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "java.lang.IllegalStateException: Failed to transform class with name com.epiqsystems.jdx.protocols.ftpserver.ServerSession. Reason: javassist.bytecode.StringInfo cannot be cast to javassist.bytecode.ClassInfo", "body": "Hi all,\r\n\r\nwe are using the latest powermock, with the following 4 modules:\r\n\r\n**org.powermock.powermock-api-easymock (1.7.0RC4)\r\norg.powermock.powermock-module-junit4 (1.7.0RC4)\r\norg.powermock.powermock-classloading-xstream (1.7.0RC4)\r\norg.easymock.easymock (3.4)**\r\n\r\nWe receive the following error when running our Unit Tests:\r\n\r\n```\r\njava.lang.IllegalStateException: Failed to transform class with name com.epiqsystems.jdx.protocols.ftpserver.ServerSession. Reason: javassist.bytecode.StringInfo cannot be cast to javassist.bytecode.ClassInfo\r\n\tat org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:284)\r\n\tat org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:192)\r\n\tat org.powermock.core.classloader.DeferSupportingClassLoader.loadClass1(DeferSupportingClassLoader.java:77)\r\n\tat org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:67)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\tat java.lang.Class.forName0(Native Method)\r\n\tat java.lang.Class.forName(Class.java:348)\r\n\tat sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)\r\n\tat sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)\r\n\tat sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)\r\n\tat sun.reflect.annotation.AnnotationParser.parseSig(AnnotationParser.java:439)\r\n\tat sun.reflect.annotation.AnnotationParser.parseClassValue(AnnotationParser.java:420)\r\n\tat sun.reflect.annotation.AnnotationParser.parseClassArray(AnnotationParser.java:724)\r\n\tat sun.reflect.annotation.AnnotationParser.parseArray(AnnotationParser.java:531)\r\n\tat sun.reflect.annotation.AnnotationParser.parseMemberValue(AnnotationParser.java:355)\r\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:286)\r\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)\r\n\tat sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:72)\r\n\tat java.lang.Class.createAnnotationData(Class.java:3521)\r\n\tat java.lang.Class.annotationData(Class.java:3510)\r\n\tat java.lang.Class.getAnnotation(Class.java:3415)\r\n\tat org.junit.internal.MethodSorter.getDeclaredMethods(MethodSorter.java:52)\r\n\tat org.junit.internal.runners.TestClass.getAnnotatedMethods(TestClass.java:45)\r\n\tat org.junit.internal.runners.MethodValidator.validateTestMethods(MethodValidator.java:71)\r\n\tat org.junit.internal.runners.MethodValidator.validateStaticMethods(MethodValidator.java:44)\r\n\tat org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner(MethodValidator.java:50)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.validate(PowerMockJUnit44RunnerDelegateImpl.java:108)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.<init>(PowerMockJUnit44RunnerDelegateImpl.java:70)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl.<init>(PowerMockJUnit47RunnerDelegateImpl.java:42)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit49RunnerDelegateImpl.<init>(PowerMockJUnit49RunnerDelegateImpl.java:25)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:172)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:48)\r\n\tat org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.createTestDelegators(AbstractTestSuiteChunkerImpl.java:108)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.<init>(JUnit4TestSuiteChunkerImpl.java:71)\r\n\tat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.<init>(AbstractCommonPowerMockRunner.java:32)\r\n\tat org.powermock.modules.junit4.PowerMockRunner.<init>(PowerMockRunner.java:34)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)\r\n\tat org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)\r\n\tat org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\r\n\tat org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\r\n\tat org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\r\n\tat org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createUnfilteredTest(JUnit4TestLoader.java:84)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:70)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:43)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:444)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\r\nCaused by: java.lang.ClassCastException: javassist.bytecode.StringInfo cannot be cast to javassist.bytecode.ClassInfo\r\n\tat javassist.bytecode.ConstPool.getClassInfo(ConstPool.java:245)\r\n\tat javassist.bytecode.stackmap.Tracer.doOpcode148_201(Tracer.java:605)\r\n\tat javassist.bytecode.stackmap.Tracer.doOpcode(Tracer.java:81)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:187)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:199)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:164)\r\n\tat javassist.bytecode.stackmap.MapMaker.make(MapMaker.java:108)\r\n\tat javassist.bytecode.MethodInfo.rebuildStackMap(MethodInfo.java:456)\r\n\tat javassist.bytecode.MethodInfo.rebuildStackMapIf6(MethodInfo.java:438)\r\n\tat javassist.expr.ExprEditor.doit(ExprEditor.java:113)\r\n\tat javassist.CtClassType.instrument(CtClassType.java:1465)\r\n\tat org.powermock.core.transformers.impl.ClassMockTransformer.transformMockClass(ClassMockTransformer.java:65)\r\n\tat org.powermock.core.transformers.impl.AbstractMainMockTransformer.transform(AbstractMainMockTransformer.java:62)\r\n\tat org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:265)\r\n\t... 56 more\r\n\r\n```\r\n\r\nThis looks like it might be a Powermock or Javassist bug, so I wanted to run it by you guys and see what you think about the stack trace.\r\n\r\nDo you think this is a Powermock / Javassist problem?\r\n\r\nThank you for the assistance.\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/778", "user": "wodencafe", "labels": ["3rd-party-issue", "Won't Fix", "bug"], "created": "2017-04-14 20:01:56", "closed": "2017-06-16 15:38:39", "commits": {}, "ttf": 62.000277777777775, "commitsDetails": []}, {"title": "can't mock final methods with powermock-mockito2 1.7.0.RC4 and mockito2 inline feature enabled", "body": "Hi, I have a problem using mockito2 feature - _mocking of final methods_, with powrmock 1.7.0.RC4. When I include `testCompile 'org.mockito:mockito-core:2.7.5'` into my build.gradle file and enable mock-maker-inline mechanism according to mockito [documentation](https://github.com/mockito/mockito/wiki/What%27s-new-in-Mockito-2#mock-the-unmockable-opt-in-mocking-of-final-classesmethods), everything works just fine.\r\n\r\nAt the moment I change the dependency to `testCompile 'org.powermock:powermock-api-mockito2:1.7.0RC4'` the test fails with seemingly unrelated exceptions: \r\n\r\n> org.mockito.exceptions.misusing.UnfinishedStubbingException: \r\nUnfinished stubbing detected here:\r\n-> at com.test.app.map.MenuViewModelTest.run_action_on_close(MenuViewModelTest.kt:49)\r\n>\r\n> E.g. thenReturn() may be missing.\r\nExamples of correct stubbing:\r\n    when(mock.isOk()).thenReturn(true);\r\n    when(mock.isOk()).thenThrow(exception);\r\n    doThrow(exception).when(mock).someVoidMethod();\r\nHints:\r\n>  1. missing thenReturn()\r\n> 2. you are trying to stub a final method, which is not supported\r\n> 3: you are stubbing the behaviour of another mock inside before 'thenReturn' instruction if completed\r\n>\r\n> at com.test.app.map.MenuViewModelTest.run_action_on_close(MenuViewModelTest.kt:50)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:117)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:262)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:84)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)\r\n\r\nor\r\n\r\n> org.mockito.exceptions.misusing.WrongTypeOfReturnValue: \r\nRunnable$$EnhancerByMockitoWithCGLIB$$b48288eb cannot be returned by doAction()\r\ndoAction() should return int\r\n> \\***\r\n> If you're unsure why you're getting above error read on.\r\nDue to the nature of the syntax above problem might occur because:\r\n> 1. This exception *might* occur in wrongly written multi-threaded tests.\r\n   Please refer to Mockito FAQ on limitations of concurrency testing.\r\n> 2. A spy is stubbed using when(spy.foo()).then() syntax. It is safer to stub spies - \r\n   \\- with doReturn|Throw() family of methods. More in javadocs for Mockito.spy() method.\r\n\r\nThe test is in kotlin but it's the same in java, I have tried. \r\n\r\n     @Test\r\n     fun run_action_on_close() {\r\n        val runnable = mock<Runnable>(Runnable::class.java)    //mock Runnable.class\r\n\r\n        doReturn(runnable).`when`(mMenuItem)!!.getAction(mContext)\r\n        mViewModel!!.onItemClick(mMenuItem)\r\n\r\n        verify<Runnable>(runnable).run()\r\n    }\r\n\r\nThe real problem is definitely in **final** method `getAction(Context context)`. When this method is **not** final everything works again. But as I mentioned this exact test **works** with `mockito-core:2.7.5` dependency. With `powermock-api-mockito2:1.7.0RC4` (which depends on exact same `mockito-core:2.7.5` version) the test fails.\r\n\r\nI'm running this on Windows 10 x64.\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/774", "user": "bio007", "labels": ["Resolved", "blocked", "bug"], "created": "2017-04-05 14:37:35", "closed": "2017-06-10 17:41:37", "commits": {}, "ttf": 66.00027777777778, "commitsDetails": []}, {"title": "org.powermock.reflect.exceptions.FieldNotFoundException: No instance field named XXX could be found in the class hierarchy", "body": "After upgrading to powerMock Version 1.7.0RC2 in order to work with mockito 2.1, some of the old tests which were using org.powermock.reflect.Whitebox's getInternalState() API failed because the API fails to find a private final String in the object.\r\n\r\nSample code\r\n```\r\n@RunWith(PowerMockRunner.class)\r\npublic class SampleTest {\r\n    private MainObject testSubject;\r\n    private String myPreferences;\r\n\r\n    @Before\r\n    public void setUp() {\r\n        myPreferences = Whitebox.getInternalState(testSubject, \"myPreferences\").toString();\r\n    }\r\n\t\r\n    // test methods here ...\r\n }\r\n```\r\n\r\n\r\n", "url": "https://github.com/powermock/powermock/issues/773", "user": "hazems", "labels": ["bug"], "created": "2017-04-04 21:53:22", "closed": "2017-04-21 02:44:48", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "PowerMockIgnorePackagesExtractorImpl should visit interfaces ?", "body": "I'm trying to share a common list of ignored package using PowerMockIgnore.\r\nI created an empty interface annotated with PowerMockIgnore. Then, I just simply implemented the interface where I need this configuration.\r\n\r\nBut [PowerMockIgnorePackagesExtractorImpl](https://github.com/powermock/powermock/blob/master/powermock-core/src/main/java/org/powermock/tests/utils/impl/PowerMockIgnorePackagesExtractorImpl.java) only visits super class (not the interfaces) for PowerMockIgnore annotation.\r\n\r\nIs there another way of achieving my goal or I can do a pull request to add this feature.\r\n\r\nThanks\r\n\r\n-- \r\nFrancois\r\n\r\n<!---\r\n@huboard:{\"order\":772.0,\"milestone_order\":772,\"custom_state\":\"\"}\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/772", "user": "hypnoce", "labels": ["bug"], "created": "2017-03-29 14:43:42", "closed": "2017-05-27 06:26:49", "commits": {"4432467be1f4ae1c847693a9fc30b38e83c0e517": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "28a4f63888f3f60f35abd5df333fca1ae7977bd7": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 58.000277777777775, "commitsDetails": [{"commitHash": "4432467be1f4ae1c847693a9fc30b38e83c0e517", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["a78afc5ffc0bc031d46d7aae41f15b4e830522b8"], "nameRev": "4432467be1f4ae1c847693a9fc30b38e83c0e517 tags/powermock-1.7.0~17", "commitMessage": "Fixes #772. Do a DFS on superclass + interfaces hierarchy to find all PowerMockIgnore annotations. Avoid duplication introduced by diamond interface hierarchies by storing results in a set. (#777)\n\n", "commitDateTime": "2017-05-27 08:26:48", "authoredDateTime": "2017-05-27 08:26:48", "commitGitStats": [{"filePath": "powermock-core/src/main/java/org/powermock/tests/utils/impl/PowerMockIgnorePackagesExtractorImpl.java", "insertions": 13, "deletions": 7, "lines": 20}, {"filePath": "powermock-core/src/test/java/org/powermock/tests/utils/impl/PowerMockIgnorePackagesExtractorImplTest.java", "insertions": 21, "deletions": 3, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PowerMockIgnorePackagesExtractorImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.tests.utils.impl.PowerMockIgnorePackagesExtractorImpl.getPackagesToIgnore(java.lang.reflect.AnnotatedElement)", "TOT": 10, "UPD": 2, "INS": 4, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "PowerMockIgnorePackagesExtractorImplTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.tests.utils.impl.PowerMockIgnorePackagesExtractorImplTest.shouldFindIgnorePackagesInTheWholeClassHierarchy()", "TOT": 8, "UPD": 0, "INS": 5, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.powermock.tests.utils.impl.PowerMockIgnorePackagesExtractorImplTest", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "28a4f63888f3f60f35abd5df333fca1ae7977bd7", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["4432467be1f4ae1c847693a9fc30b38e83c0e517"], "nameRev": "28a4f63888f3f60f35abd5df333fca1ae7977bd7 tags/powermock-1.7.0~16", "commitMessage": "Fix issue #772: PowerMockIgnorePackagesExtractorImpl should visit interfaces.\nFix review comments\n", "commitDateTime": "2017-05-27 08:54:24", "authoredDateTime": "2017-05-27 08:54:24", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "powermock-core/src/main/java/org/powermock/tests/utils/impl/PowerMockIgnorePackagesExtractorImpl.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "powermock-core/src/test/java/org/powermock/tests/utils/impl/PowerMockIgnorePackagesExtractorImplTest.java", "insertions": 32, "deletions": 24, "lines": 56}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PowerMockIgnorePackagesExtractorImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.tests.utils.impl.PowerMockIgnorePackagesExtractorImpl.getPackagesToIgnore(java.lang.reflect.AnnotatedElement)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PowerMockIgnorePackagesExtractorImplTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.tests.utils.impl.PowerMockIgnorePackagesExtractorImplTest.shouldFindIgnorePackagesInTheWholeClassHierarchy()", "TOT": 19, "UPD": 5, "INS": 0, "MOV": 13, "DEL": 1}, {"spoonMethodName": "org.powermock.tests.utils.impl.PowerMockIgnorePackagesExtractorImplTest.should_find_ignore_packages_in_the_whole_class_hierarchy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.tests.utils.impl.PowerMockIgnorePackagesExtractorImplTest.should_scan_interfaces_when_search_package_to_ignore()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.tests.utils.impl.PowerMockIgnorePackagesExtractorImplTest.IgnoreAnnotationFromInterfaces", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.tests.utils.impl.PowerMockIgnorePackagesExtractorImplTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["28a4f63888f3f60f35abd5df333fca1ae7977bd7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["powermock-core/src/main/java/org/powermock/tests/utils/impl"], "changesInPackagesSPOON": ["org.powermock.tests.utils.impl.PowerMockIgnorePackagesExtractorImpl.getPackagesToIgnore(java.lang.reflect.AnnotatedElement)"]}, {"title": "whenNew not matching constructor when null is passed as first or last argument.", "body": "Is this something you can debug and fix?\r\n-------------------------------------------------------\r\nI think the bug is in `MockGateway.java` it blindly assumes first or last arguments when null are due to null for some reason seeming like it is passed in as an argument when it is not. Because it does this it strips the argument and will no longer match constructor for whenNew. In order to work around this my thought is to attempt finding a constructor with it stripped and with it not and then using the one that actually matches though this may cause issues with edgecase like when you have multiple constructors which will need to be fixed.\r\n\r\nIn order to help us to clarify issue can you answer the following question:\r\n\r\nWhat steps will reproduce the problem?\r\n - Run my tests\r\n```\r\npackage com.broken.example;\r\n\r\n\r\npublic class OuterClass {\r\n\r\n    public InnerClass tester(boolean isFirstNull, boolean isLastNull) {\r\n        InnerClass innerClassInstance = new InnerClass(isFirstNull ? null : \"1\", \"2\", isLastNull ? null : \"3\" );\r\n        return innerClassInstance;\r\n    }\r\n\r\n    static class InnerClass {\r\n        String mOne;\r\n        String mTwo;\r\n        String mThree;\r\n\r\n        InnerClass(String one, String two, String three) {\r\n            mOne = one;\r\n            mTwo = two;\r\n            mThree = three;\r\n        }\r\n\r\n        public String getOne() {\r\n            return mOne;\r\n        }\r\n\r\n        public String getTwo() {\r\n            return mTwo;\r\n        }\r\n\r\n        public String getThree() {\r\n            return mThree;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nTest Class:\r\n```\r\npackage com.broken.example;\r\n\r\n\r\nimport com.broken.example.OuterClass.InnerClass;\r\n\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\nimport org.powermock.core.classloader.annotations.PrepareForTest;\r\nimport org.powermock.modules.junit4.PowerMockRunner;\r\n\r\nimport static junit.framework.Assert.assertNotNull;\r\nimport static org.junit.Assert.assertNull;\r\nimport static org.powermock.api.mockito.PowerMockito.mock;\r\nimport static org.powermock.api.mockito.PowerMockito.spy;\r\nimport static org.powermock.api.mockito.PowerMockito.when;\r\nimport static org.powermock.api.mockito.PowerMockito.whenNew;\r\n\r\n@RunWith(PowerMockRunner.class)\r\n@PrepareForTest({\r\n    OuterClass.class\r\n})\r\npublic class NullTest {\r\n\r\n    private OuterClass mOuterClassInstance;\r\n\r\n    @Before\r\n    public void setUp() throws Exception {\r\n        mOuterClassInstance = spy(new OuterClass());\r\n    }\r\n\r\n    @Test\r\n    public void test_InnerConstructor_IsMocked() throws Exception {\r\n        InnerClass mockInnerClass = mock(InnerClass.class);\r\n        when(mockInnerClass.getOne()).thenReturn(\"one\");\r\n        when(mockInnerClass.getTwo()).thenReturn(\", two\");\r\n        when(mockInnerClass.getThree()).thenReturn(\", three\");\r\n\r\n        whenNew(InnerClass.class)\r\n                .withAnyArguments()\r\n                .thenReturn(mockInnerClass);\r\n\r\n        InnerClass output = mOuterClassInstance.tester(false,false);\r\n\r\n        assertNotNull(output);\r\n    }\r\n\r\n    @Test\r\n    public void test_InnerConstructorLastArgumentNull_IsIncorrectlyNotMocked() throws Exception {\r\n        InnerClass mockInnerClass = mock(InnerClass.class);\r\n        when(mockInnerClass.getOne()).thenReturn(\"one\");\r\n        when(mockInnerClass.getTwo()).thenReturn(\", two\");\r\n        when(mockInnerClass.getThree()).thenReturn(\", three\");\r\n\r\n        whenNew(InnerClass.class)\r\n                .withAnyArguments()\r\n                .thenReturn(mockInnerClass);\r\n\r\n        InnerClass output = mOuterClassInstance.tester(false, true);\r\n\r\n        // This should NOT be null but it is since the mock fails\r\n        assertNull(output);\r\n    }\r\n\r\n    @Test\r\n    public void test_InnerConstructorFirstArgumentNull_IsIncorrectlyNotMocked() throws Exception {\r\n        InnerClass mockInnerClass = mock(InnerClass.class);\r\n        when(mockInnerClass.getOne()).thenReturn(\"one\");\r\n        when(mockInnerClass.getTwo()).thenReturn(\", two\");\r\n        when(mockInnerClass.getThree()).thenReturn(\", three\");\r\n\r\n        whenNew(InnerClass.class)\r\n                .withAnyArguments()\r\n                .thenReturn(mockInnerClass);\r\n\r\n        InnerClass output = mOuterClassInstance.tester(true, false);\r\n\r\n        // This should NOT be null but it is since the mock fails\r\n        assertNull(output);\r\n    }\r\n}\r\n```\r\n\r\nWhat is the expected output?\r\n - 2 of my 3 tests should fail.\r\n\r\nWhat do you see instead?\r\n - They pass.\r\n\r\nWhat version of the product are you using?\r\n - 1.6.5\r\n\r\nOn what operating system?\r\n - macOS Sierra 10.12.3", "url": "https://github.com/powermock/powermock/issues/763", "user": "podarsmarty", "labels": ["Resolved", "bug"], "created": "2017-03-14 22:33:08", "closed": "2017-03-18 09:13:46", "commits": {"be039e92565e683146994a80732c57851325e8c3": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "be039e92565e683146994a80732c57851325e8c3", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["053797d66a30fc687480bbcaf0a1a2d966562757"], "nameRev": "be039e92565e683146994a80732c57851325e8c3 tags/powermock-1.7.0~25", "commitMessage": "Issue #763: Fixing bug matching constructor with whenNew when first or last param is null.\n", "commitDateTime": "2017-03-18 09:08:37", "authoredDateTime": "2017-03-14 22:40:31", "commitGitStats": [{"filePath": "powermock-core/src/main/java/org/powermock/core/MockGateway.java", "insertions": 16, "deletions": 13, "lines": 29}, {"filePath": "tests/mockito/junit4-delegate/src/test/java/powermock/modules/test/mockito/junit4/delegate/parameterized/WhenNewTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "tests/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/WhenNewTest.java", "insertions": 22, "deletions": 2, "lines": 24}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/whennew/WhenNewCases.java", "insertions": 195, "deletions": 9, "lines": 204}, {"filePath": "tests/utils/src/main/java/samples/classwithinnermembers/ClassWithInnerMembers.java", "insertions": 170, "deletions": 79, "lines": 249}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockGateway.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.MockGateway.copyArgumentsForInnerOrLocalOrAnonymousClass(java.lang.Object[],java.lang.Class,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.newInstanceCall(java.lang.Class,java.lang.Object[],java.lang.Class[])", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.copyArgumentsForInnerOrLocalOrAnonymousClass(java.lang.Object[],boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "WhenNewTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.rule.xstream.WhenNewTest.testLocalClassMockingWorksWithNoConstructorArguments()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.rule.xstream.WhenNewTest.testLocalClassMockingWorksWithConstructorArguments()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WhenNewCases.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases.testStaticMemberClassMockingWorksWithNoConstructorArguments()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases.testStaticMemberClassMockingWorksWithConstructorArguments()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases.testLocalClassMockingWorksWithNoConstructorArguments()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases.testLocalClassMockingWorksWithConstructorArguments()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases.testNonStaticMemberClassMockingWorksWithArguments()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases.testNewInnerWithDiffParams()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases.testNewInnerWithNoNullParams()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases.testNewInnerWithMiddleParamNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases.testNewInnerWithFirstParamNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases.testNewInnerWithLastParamNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.whennew.WhenNewCases", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassWithInnerMembers.java", "spoonMethods": [{"spoonMethodName": "samples.classwithinnermembers.ClassWithInnerMembers.MyInnerClassWithPrivateConstructorWithDiffMultArgs", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.classwithinnermembers.ClassWithInnerMembers.makeMyInnerClassWithPrivateConstructorWithDiffMultArgs(java.lang.String,int,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.classwithinnermembers.ClassWithInnerMembers.MyInnerClassWithPrivateConstructorWithMultArgs", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.classwithinnermembers.ClassWithInnerMembers.makeMyInnerClassWithPrivateConstructorWithMultArgs(java.lang.String,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.classwithinnermembers.ClassWithInnerMembers.MyInnerClassWithPublicConstructorWithMultArgs", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.classwithinnermembers.ClassWithInnerMembers.makeMyInnerClassWithPublicConstructorWithMultArgs(java.lang.String,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.classwithinnermembers.ClassWithInnerMembers.MyInnerClassWithPackageConstructorWithMultArgs", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.classwithinnermembers.ClassWithInnerMembers.makeMyInnerClassWithPackageConstructorWithMultArgs(java.lang.String,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.classwithinnermembers.ClassWithInnerMembers.MyInnerClassWithProtectedConstructorWithMultArgs", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.classwithinnermembers.ClassWithInnerMembers.makeMyInnerClassWithProtectedConstructorWithMultArgs(java.lang.String,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["be039e92565e683146994a80732c57851325e8c3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 186, "deletions": 92, "lines": 278, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 30, "UPD": 0, "INS": 27, "MOV": 3, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 24}, "statsSkippedReason": "", "changesInPackagesGIT": ["powermock-core/src/main/java/org/powermock/core", "tests/utils/src/main/java/samples/classwithinnermembers"], "changesInPackagesSPOON": ["samples.classwithinnermembers.ClassWithInnerMembers.makeMyInnerClassWithPrivateConstructorWithMultArgs(java.lang.String,java.lang.String,java.lang.String)", "samples.classwithinnermembers.ClassWithInnerMembers.MyInnerClassWithProtectedConstructorWithMultArgs", "org.powermock.core.MockGateway.newInstanceCall(java.lang.Class,java.lang.Object[],java.lang.Class[])", "samples.classwithinnermembers.ClassWithInnerMembers.makeMyInnerClassWithProtectedConstructorWithMultArgs(java.lang.String,java.lang.String,java.lang.String)", "samples.powermockito.junit4.whennew.WhenNewCases.testStaticMemberClassMockingWorksWithNoConstructorArguments()", "samples.classwithinnermembers.ClassWithInnerMembers.MyInnerClassWithPrivateConstructorWithDiffMultArgs", "samples.classwithinnermembers.ClassWithInnerMembers.makeMyInnerClassWithPrivateConstructorWithDiffMultArgs(java.lang.String,int,java.lang.String)", "samples.classwithinnermembers.ClassWithInnerMembers.makeMyInnerClassWithPackageConstructorWithMultArgs(java.lang.String,java.lang.String,java.lang.String)", "samples.powermockito.junit4.whennew.WhenNewCases.testLocalClassMockingWorksWithConstructorArguments()", "samples.classwithinnermembers.ClassWithInnerMembers.makeMyInnerClassWithPublicConstructorWithMultArgs(java.lang.String,java.lang.String,java.lang.String)", "samples.powermockito.junit4.whennew.WhenNewCases.testNewInnerWithDiffParams()", "samples.powermockito.junit4.whennew.WhenNewCases.testNewInnerWithNoNullParams()", "org.powermock.core.MockGateway.copyArgumentsForInnerOrLocalOrAnonymousClass(java.lang.Object[],java.lang.Class,boolean)", "samples.powermockito.junit4.whennew.WhenNewCases.testNewInnerWithMiddleParamNull()", "samples.powermockito.junit4.whennew.WhenNewCases.testNewInnerWithFirstParamNull()", "samples.powermockito.junit4.whennew.WhenNewCases.testNonStaticMemberClassMockingWorksWithArguments()", "samples.powermockito.junit4.whennew.WhenNewCases.testStaticMemberClassMockingWorksWithConstructorArguments()", "samples.classwithinnermembers.ClassWithInnerMembers.MyInnerClassWithPublicConstructorWithMultArgs", "samples.powermockito.junit4.whennew.WhenNewCases", "org.powermock.core.MockGateway.copyArgumentsForInnerOrLocalOrAnonymousClass(java.lang.Object[],boolean)", "samples.powermockito.junit4.whennew.WhenNewCases.testNewInnerWithLastParamNull()", "samples.classwithinnermembers.ClassWithInnerMembers.MyInnerClassWithPackageConstructorWithMultArgs", "samples.powermockito.junit4.whennew.WhenNewCases.testLocalClassMockingWorksWithNoConstructorArguments()", "samples.classwithinnermembers.ClassWithInnerMembers.MyInnerClassWithPrivateConstructorWithMultArgs"]}, {"title": "@Mock annotation from easymock api does not work for two fields of the same type.", "body": "Hi,\r\n\r\nif we have a simple test class like below\r\n\r\n```\r\nimport static org.junit.Assert.assertNotNull;\r\n\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\nimport org.powermock.api.easymock.annotation.Mock;\r\nimport org.powermock.modules.junit4.PowerMockRunner;\r\n\r\n@RunWith(PowerMockRunner.class)\r\npublic class TwoObjectsAnnotatedTest {\r\n\r\n    @Mock\r\n    private String obj1;\r\n    \r\n    @Mock\r\n    private String obj2;\r\n    \r\n    @Test\r\n    public void test() {\r\n        assertNotNull(obj1);\r\n        assertNotNull(obj2);\r\n    }\r\n\r\n}\r\n\r\n```\r\nthen both assertions fail. We noticed that whenever two fields of the same type are annotated with \r\n`org.powermock.api.easymock.annotation.Mock`\r\n\r\nIf we remove first one or change to\r\n\r\n`private String obj1 = createMock(String.class);` \r\n\r\nthen it works as expected. We encountered that when migrating from \r\n\r\njdk7 + easymock 3.3 + powermock 1.6.1\r\n\r\nto \r\n\r\njdk8 + easymock 3.4 + powermock 1.6.6\r\n\r\nOS is: Linux *** 4.4.0-62-generic 83-Ubuntu SMP Wed Jan 18 14:10:15 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nDoes any workaround exist besides replacing annotation with \r\n`org.powermock.api.easymock.PowerMock.createMock()`\r\n?\r\n\r\nUPDATE: it seems to be similar to #668 but I checked and it works for a third field as long as it has different type (I checked for 3 fields - 2 x String and 1 x Integer - and strings do not work but integer does).", "url": "https://github.com/powermock/powermock/issues/755", "user": "ksiczek", "labels": ["Resolved", "bug", "component:easymock", "regression"], "created": "2017-02-16 14:18:17", "closed": "2017-09-15 22:16:30", "commits": {"81d473ef7a6522ab27c16b269e6606519db141ec": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "37b7e5bd17202f8043ec4f81eebfd550bf5f2c63": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "decadf3b5ee3adaa43017afa123d9f8b541b3a5e": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "86f4ac3191f523ffb00b0603f8a9d02dc92e2ece": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 211.00027777777777, "commitsDetails": [{"commitHash": "81d473ef7a6522ab27c16b269e6606519db141ec", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "37b7e5bd17202f8043ec4f81eebfd550bf5f2c63", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["a9f82fb26dba5d69729a9757f23b28e6fe851a26"], "nameRev": "37b7e5bd17202f8043ec4f81eebfd550bf5f2c63 tags/powermock-1.7.2~1", "commitMessage": "Fixed #755 @Mock annotation from easymock api does not work for two fields of the same type.\n", "commitDateTime": "2017-09-16 00:16:29", "authoredDateTime": "2017-09-15 23:33:25", "commitGitStats": [{"filePath": ".gitignore", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/AnnotationMockMetadata.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/DefaultInjectFieldSearcher.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/MockMetadata.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "tests/easymock/junit4/src/test/java/samples/junit4/annotationbased/TestSubjectPowermockAnnotationTest.java", "insertions": 5, "deletions": 13, "lines": 18}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github755/TwoObjectsAnnotatedTest.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github755/package-info.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AnnotationMockMetadata.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.AnnotationMockMetadata", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.extension.listener.AnnotationMockMetadata.getFieldName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultInjectFieldSearcher.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.DefaultInjectFieldSearcher.filterByFieldName(java.util.Set,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.extension.listener.DefaultInjectFieldSearcher.findField(java.lang.Object,org.powermock.api.extension.listener.MockMetadata)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockMetadata.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.getFieldName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSubjectPowermockAnnotationTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.testInjectDemoQualifier()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.testInjectDemoSay()", "TOT": 11, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 2}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.injectMocksWorksWithPowermockMockWithQualifier()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.injectMocksWorksWithPowermockMock()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.should_inject_mock_without_quantifier()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TwoObjectsAnnotatedTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.bug.github755.TwoObjectsAnnotatedTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "decadf3b5ee3adaa43017afa123d9f8b541b3a5e", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "86f4ac3191f523ffb00b0603f8a9d02dc92e2ece", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["2f7f356aec42433e9826ce76255faf1cf14bffc8"], "nameRev": "86f4ac3191f523ffb00b0603f8a9d02dc92e2ece tags/powermock-2.0.0-beta.2~1", "commitMessage": "Fixed #755 @Mock annotation from easymock api does not work for two fields of the same type.\n", "commitDateTime": "2017-09-16 20:52:32", "authoredDateTime": "2017-09-15 23:33:25", "commitGitStats": [{"filePath": ".gitignore", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/AnnotationMockMetadata.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/DefaultInjectFieldSearcher.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/MockMetadata.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "tests/easymock/junit4/src/test/java/samples/junit4/annotationbased/TestSubjectPowermockAnnotationTest.java", "insertions": 5, "deletions": 13, "lines": 18}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github755/TwoObjectsAnnotatedTest.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github755/package-info.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AnnotationMockMetadata.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.AnnotationMockMetadata", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.extension.listener.AnnotationMockMetadata.getFieldName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultInjectFieldSearcher.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.DefaultInjectFieldSearcher.filterByFieldName(java.util.Set,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.extension.listener.DefaultInjectFieldSearcher.findField(java.lang.Object,org.powermock.api.extension.listener.MockMetadata)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockMetadata.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.getFieldName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSubjectPowermockAnnotationTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.testInjectDemoQualifier()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.testInjectDemoSay()", "TOT": 11, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 2}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.injectMocksWorksWithPowermockMockWithQualifier()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.injectMocksWorksWithPowermockMock()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.should_inject_mock_without_quantifier()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TwoObjectsAnnotatedTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.bug.github755.TwoObjectsAnnotatedTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["37b7e5bd17202f8043ec4f81eebfd550bf5f2c63"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 24.0, "deletions": 3.0, "lines": 27.0, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 7.0, "UPD": 0.0, "INS": 7.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener", ".gitignore"], "changesInPackagesSPOON": ["org.powermock.api.extension.listener.DefaultInjectFieldSearcher.findField(java.lang.Object,org.powermock.api.extension.listener.MockMetadata)", "org.powermock.api.extension.listener.DefaultInjectFieldSearcher.filterByFieldName(java.util.Set,java.lang.String)", "org.powermock.api.extension.listener.AnnotationMockMetadata.getFieldName()", "org.powermock.api.extension.listener.getFieldName()", "org.powermock.api.extension.listener.AnnotationMockMetadata"]}, {"title": "version 1.7.0RC2 IllegalAccessError", "body": "I use powermockito for mocking private method.\r\n\r\nMy test class has following annotations : \r\n\r\n`@RunWith( PowerMockRunner.class )\r\n@PrepareForTest( DocumentsService.class )`\r\n\r\nMy Test method has following code:\r\n\r\n\t@Test\r\n\tpublic void shouldGenerateOnePDF() throws Exception {\r\n\r\n\t\tfinal ZipToSend zipToSend = buildZipToSend(\"Content\", \"00P26000002\", MediaType.PDF);\r\n\t\tfinal DocumentsService spy = PowerMockito.spy(new DocumentsService());\r\n\r\n\t\tPowerMockito.doNothing().when(spy, MemberMatcher.method(DocumentsService.class, \"generateIndexXMLDocumentFromAgregat\", String.class, Agregat.class)).withArguments(Mockito.anyString(), Mockito.any(Agregat.class));\r\n\r\n\t\tspy.generateZipFromZipToSend(zipToSend, TEST_DIR_PATH, TEST_DIR_NAME);\r\n\t\tAssert.assertTrue(new File(TEST_DIR_PATH + \"/\" + TEST_DIR_NAME).exists());\r\n\r\n\t}`\r\n\r\nMy test pass with 1.6.6 but not with 1.7.0RC2\r\nHere is the stack trace of the error:\r\n\r\n`java.lang.IllegalAccessError: tried to access method org.mockito.internal.stubbing.answers.DoesNothing.<init>()V from class org.powermock.api.mockito.PowerMockito\r\n\tat org.powermock.api.mockito.PowerMockito.doNothing(PowerMockito.java:743)\r\n\tat fr.myPackage.shouldGenerateOnePDF(DocumentsServiceTest.java:219)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:310)\r\n\tat org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89)\r\n\tat org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:294)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147)\r\n\tat org.assertj.core.api.JUnitSoftAssertions$1.evaluate(JUnitSoftAssertions.java:44)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:282)\r\n\tat org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87)\r\n\tat org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:202)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:144)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:118)\r\n\tat org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\r\n\tat org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121)\r\n\tat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\r\n\tat org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)`", "url": "https://github.com/powermock/powermock/issues/753", "user": "AhmedHORMAL", "labels": ["Priority-Critical", "Resolved", "bug", "component:mockito"], "created": "2017-02-15 10:38:32", "closed": "2017-03-01 20:00:08", "commits": {"099377a56f26fa102ba2f68b082c35fef61c5dc4": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "099377a56f26fa102ba2f68b082c35fef61c5dc4", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["c4b2c3a9f4e48a30952733681f278e8c22be6ecd"], "nameRev": "099377a56f26fa102ba2f68b082c35fef61c5dc4 tags/powermock-1.7.0RC4~1", "commitMessage": "#753 issue fix to upgrade code to be compatible with later versions of Mockito\n\n- Updated the Mockito version to a more later version\n- Fixed issues with imports\n-Updated version to 1.7.0RC4\n", "commitDateTime": "2017-03-01 20:58:30", "authoredDateTime": "2017-03-01 18:56:03", "commitGitStats": [{"filePath": ".gitignore", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/PowerMockito.java", "insertions": 78, "deletions": 119, "lines": 197}, {"filePath": "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/repackaged/AcrossJVMSerializationFeature.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/repackaged/ClassImposterizer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "version.properties", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PowerMockito.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.PowerMockito.doNothing()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AcrossJVMSerializationFeature.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.repackaged.AcrossJVMSerializationFeature.writeReplace(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.repackaged.AcrossJVMSerializationFeature.AcrossJVMMockSerializationProxy.readResolve()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.repackaged.AcrossJVMSerializationFeature.MockitoMockObjectInputStream.hackClassNameToMatchNewlyCreatedClass(java.io.ObjectStreamClass,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassImposterizer.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["099377a56f26fa102ba2f68b082c35fef61c5dc4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 86, "deletions": 124, "lines": 210, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["", "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito", ".gitignore", "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/repackaged", "version.properties"], "changesInPackagesSPOON": ["org.powermock.api.mockito.repackaged.AcrossJVMSerializationFeature.AcrossJVMMockSerializationProxy.readResolve()", "org.powermock.api.mockito.repackaged.AcrossJVMSerializationFeature.writeReplace(java.lang.Object)", "org.powermock.api.mockito.repackaged.AcrossJVMSerializationFeature.MockitoMockObjectInputStream.hackClassNameToMatchNewlyCreatedClass(java.io.ObjectStreamClass,java.lang.Class)", "org.powermock.api.mockito.PowerMockito.doNothing()"]}, {"title": "UnfinishedStubbingException when mocking constructor (whenNew) and placing return result directly.", "body": "```java\r\npublic class Creator\r\n{\r\n    Creator create()\r\n    {\r\n        throw new MyException();\r\n    }\r\n}\r\n```\r\n```java\r\npublic class MyException\r\nextends RuntimeException\r\n{\r\n}\r\n```\r\n```java\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\nimport org.powermock.api.mockito.PowerMockito;\r\nimport org.powermock.core.classloader.annotations.PrepareForTest;\r\nimport org.powermock.modules.junit4.PowerMockRunner;\r\n\r\n@RunWith(PowerMockRunner.class)\r\n@PrepareForTest(Creator.class)\r\npublic class CreatorTest\r\n{\r\n    @Test(expected = MyException.class)\r\n    public void testThenReturn()\r\n    throws Exception\r\n    {\r\n        Creator creator = new Creator();\r\n\r\n        PowerMockito.whenNew(MyException.class)\r\n            .withNoArguments().thenReturn(new MyException());\r\n\r\n        creator.create();\r\n    }\r\n}\r\n```\r\n\r\nThis test fails with UnfinishedStubbingException. But if I first assign returned exception to a variable\r\n\r\n```java\r\nMyException toReturn = new MyException();\r\nPowerMockito.whenNew(MyException.class)\r\n            .withNoArguments().thenReturn(toReturn);\r\n```\r\nit works as expected.\r\n\r\nThis is not specific to Exception type of course, but this example illustrates the purpose of creating a variable and not saving it for assertion.\r\n\r\nThis might be another \"trade off\", but it's not documented anywhere and I'm just curious why this makes such a difference.\r\n\r\norg.mockito:mockito-core:1.10.19\r\norg.powermock:powermock-api-mockito:1.6.2\r\norg.powermock:powermock-module-junit4:1.6.2\r\n\r\nThanks.\r\n", "url": "https://github.com/powermock/powermock/issues/750", "user": "valnaumov", "labels": ["Cannot be fixed", "bug"], "created": "2017-02-08 04:49:09", "closed": "2017-02-09 18:31:12", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "No methods matching the name(s) get were found in the class hierarchy", "body": "I used the following code.\r\n\r\n@RunWith(PowerMockRunner.class)\r\n@PrepareForTest( { MyStaticClass.class })\r\npublic class MyTest {\r\n\r\n    @Test\r\n    public void ATest() {\r\n        ...\r\n\r\n        CheckedFuture<Optional<AType>, AException> mockFuture = mock(CheckedFuture.class);\r\n\r\n        Optional<AType> mockTypeOpt = mock(Optional.class);\r\n        try {\r\n            when(mockFuture.get())\r\n              .thenReturn(mockTypeOpt);\r\n        } catch (InterruptedException e) {\r\n            fail(e.getStackTrace().toString());\r\n        } catch (ExecutionException e) {\r\n            fail(e.getStackTrace().toString());\r\n        }\r\n\r\n        ...\r\n    }\r\n}\r\n\r\nCheckedFuture is defined at: https://google.github.io/guava/releases/19.0/api/docs/com/google/common/util/concurrent/CheckedFuture.html.\r\nOptional is defined at: https://google.github.io/guava/releases/19.0/api/docs/com/google/common/base/Optional.html.\r\n\r\nBut it failed with the following error message.\r\n\r\nATest(a.b.c.MyTest)  Time elapsed: 0.104 sec  <<< ERROR!\r\norg.powermock.reflect.exceptions.MethodNotFoundException: No methods matching the name(s) get were found in the class hierarchy of class java.lang.Object.\r\n        at org.powermock.reflect.internal.WhiteboxImpl.getMethods(WhiteboxImpl.java:1720)\r\n        at org.powermock.reflect.internal.WhiteboxImpl.getMethods(WhiteboxImpl.java:1745)\r\n        at org.powermock.reflect.internal.WhiteboxImpl.getBestMethodCandidate(WhiteboxImpl.java:983)\r\n        at org.powermock.core.MockGateway$MockInvocation.findMethodToInvoke(MockGateway.java:317)\r\n        at org.powermock.core.MockGateway$MockInvocation.init(MockGateway.java:356)\r\n        at org.powermock.core.MockGateway$MockInvocation.<init>(MockGateway.java:307)\r\n        at org.powermock.core.MockGateway.doMethodCall(MockGateway.java:142)\r\n        at org.powermock.core.MockGateway.methodCall(MockGateway.java:125)\r\n        at a.b.c.MyTest.ATest(MyTest.java:186)\r\n\r\nI used powermock-api-mockito and powermock-module-junit4 1.6.6 (in pom.xml).\r\n\r\nIt works well if I used\r\n  @RunWith(MockitoJUnitRunner.class)\r\ninstead of\r\n  @RunWith(PowerMockRunner.class)\r\n  @PrepareForTest( { MyStaticClass.class })\r\n\r\nArthur Zagretdinov thinks that this looks like the case (https://github.com/powermock/powermock/issues/709).\r\n\r\nThe Google group post:\r\nhttps://groups.google.com/forum/#!msg/powermock/a18R-AP4rC8/sG442Zg1CQAJ\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"\",\"order\":540.8918162278363,\"milestone_order\":731}\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/731", "user": "iamsupertim", "labels": ["Resolved", "bug", "ready"], "created": "2016-12-05 07:37:17", "closed": "2017-01-28 15:05:17", "commits": {"c2fc452ddc30f3bd99bb61c2104dde5bf2e32b71": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "53bdb4c4907d39cb24f16048a1312f8864ec4ebe": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "5d7bbdba76b6e44ba678d995533cbecbcafaec11": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 54.000277777777775, "commitsDetails": [{"commitHash": "c2fc452ddc30f3bd99bb61c2104dde5bf2e32b71", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "53bdb4c4907d39cb24f16048a1312f8864ec4ebe", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5d7bbdba76b6e44ba678d995533cbecbcafaec11", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["ddda4681cddd0518a2d1863c0108afd96d4b3528"], "nameRev": "5d7bbdba76b6e44ba678d995533cbecbcafaec11 tags/powermock-1.7.0RC2~1", "commitMessage": "Fix issue #731 No methods matching the name(s) get were found in the class hierarchy for interfaces\n", "commitDateTime": "2017-01-28 16:05:05", "authoredDateTime": "2017-01-28 15:22:58", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/easymock/PowerMock.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "powermock-api/powermock-api-mockito-common/src/main/java/org/powermock/api/mockito/internal/expectation/AbstractConstructorExpectationSetup.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "powermock-core/src/main/java/org/powermock/core/MockGateway.java", "insertions": 1, "deletions": 67, "lines": 68}, {"filePath": "powermock-core/src/main/java/org/powermock/core/MockInvocation.java", "insertions": 75, "deletions": 0, "lines": 75}, {"filePath": "powermock-reflect/src/main/java/org/powermock/reflect/internal/ConstructorFinder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "powermock-reflect/src/main/java/org/powermock/reflect/internal/WhiteboxImpl.java", "insertions": 15, "deletions": 10, "lines": 25}, {"filePath": "powermock-reflect/src/main/java/org/powermock/reflect/internal/proxy/ProxyFrameworks.java", "insertions": 14, "deletions": 18, "lines": 32}, {"filePath": "powermock-reflect/src/main/java/org/powermock/reflect/internal/proxy/UnproxiedType.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "powermock-reflect/src/main/java/org/powermock/reflect/internal/proxy/UnproxiedTypeFactory.java", "insertions": 90, "deletions": 0, "lines": 90}, {"filePath": "powermock-reflect/src/test/java/org/powermock/reflect/internal/proxy/AnotherInterface.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "powermock-reflect/src/test/java/org/powermock/reflect/internal/proxy/ClassFactory.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "powermock-reflect/src/test/java/org/powermock/reflect/internal/proxy/ProxyFrameworksTest.java", "insertions": 126, "deletions": 87, "lines": 213}, {"filePath": "powermock-reflect/src/test/java/org/powermock/reflect/internal/proxy/SomeInterface.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "tests/mockito/junit4/src/main/java/samples/powermockito/junit4/bugs/github731/AType.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "tests/mockito/junit4/src/main/java/samples/powermockito/junit4/bugs/github731/OptionalInterface.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "tests/mockito/junit4/src/main/java/samples/powermockito/junit4/bugs/github731/SomeInterface.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github731/MockingInterfacesTest.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github731/SomeException.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PowerMock.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.easymock.PowerMock.doExpectNew(java.lang.Class,org.powermock.api.easymock.internal.mockstrategy.MockStrategy,java.lang.Class[],java.lang.Object[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractConstructorExpectationSetup.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.createNewSubstituteMock(java.lang.Class,java.lang.Class[],java.lang.Object[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.withAnyArguments()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockGateway.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.MockGateway.doMethodCall(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.doMethodCall(java.lang.Object,java.lang.Object[],java.lang.String,org.powermock.core.MockGateway$MockInvocation,org.powermock.core.spi.MethodInvocationControl)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.tryHandleEqualsMethod(org.powermock.core.MockGateway$MockInvocation)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.isEqualsMethod(org.powermock.core.MockGateway$MockInvocation)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.MockInvocation", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MockInvocation.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.MockInvocation", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConstructorFinder.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.ConstructorFinder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.ConstructorFinder.throwExceptionIfConstructorWasNotFound()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WhiteboxImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.getUnmockedType(java.lang.Class)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.getConstructor(java.lang.Class,java.lang.Class[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.getUnproxyType(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.getFirstParentConstructor(java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.getMethod(java.lang.Class,java.lang.Class[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.throwExceptionIfMethodWasNotFound(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.throwExceptionIfFieldWasNotFound(java.lang.Class,java.lang.String,java.lang.reflect.Field)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.throwExceptionIfConstructorWasNotFound(java.lang.Class,java.lang.reflect.Constructor,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.getAllMethodsExcept(java.lang.Class,java.lang.String,java.lang.Class[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.getOriginalUnmockedType(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProxyFrameworks.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworks.getUnproxiedType(java.lang.Class)", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworks.getUnproxiedType(java.lang.Object)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworks.isCglibProxyClass(java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworks", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworks.isJavaProxy(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "UnproxiedType.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.proxy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UnproxiedTypeFactory.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.proxy.UnproxiedTypeFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AnotherInterface.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.proxy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassFactory.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.proxy.ClassFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProxyFrameworksTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_not_detect_synthetic_classes_as_cglib_proxy()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.ClassFactory.create(java.lang.String)", "TOT": 52, "UPD": 28, "INS": 0, "MOV": 23, "DEL": 1}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_return_original_class_if_proxy_created_with_java()", "TOT": 11, "UPD": 1, "INS": 3, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.CustomClassLoader", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_return_original_class_if_proxy_created_with_java().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_return_null_if_object_is_null()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_return_original_class_if_object_not_proxy()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_return_original_class_if_proxy_created_with_cglib()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.ClassFactory", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_return_object_as_original_class_if_no_non_no_mocking_interfaces()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_return_interface_as_original_type_if_only_one_non_mocking_interface()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_return_interface_and_original_type_if_proxy_has_interface_and_superclass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_return_interfaces_if_proxy_create_from_several_interfaces()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.createCglibProxy(java.lang.Class,java.lang.Class[])", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.createJavaProxy(java.lang.Class[])", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.assertThatOriginalIsNullAndInterfaces(org.powermock.reflect.internal.proxy.UnproxiedType,java.lang.Class[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.assertThatOriginalTypeInstanceOf(org.powermock.reflect.internal.proxy.UnproxiedType,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.assertThatOriginalTypeInstanceOfAndInterfaces(org.powermock.reflect.internal.proxy.UnproxiedType,java.lang.Class,java.lang.Class[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.CustomClassLoader.defineClass(java.lang.String,byte[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SomeInterface.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github731", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AType.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github731.AType", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OptionalInterface.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github731", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockingInterfacesTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github731.MockingInterfacesTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SomeException.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github731.SomeException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5d7bbdba76b6e44ba678d995533cbecbcafaec11"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 222.0, "deletions": 103.0, "lines": 325.0, "gitFilesChange": 12}, "spoonStatsSummary": {"TOT": 47.0, "UPD": 25.0, "INS": 15.0, "MOV": 3.0, "DEL": 4.0, "spoonFilesChanged": 15, "spoonMethodsChanged": 32}, "statsSkippedReason": "", "changesInPackagesGIT": ["powermock-reflect/src/main/java/org/powermock/reflect/internal", "powermock-reflect/src/main/java/org/powermock/reflect/internal/proxy", "tests/mockito/junit4/src/main/java/samples/powermockito/junit4/bugs", "powermock-core/src/main/java/org/powermock/core", "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/easymock", "powermock-api/powermock-api-mockito-common/src/main/java/org/powermock/api/mockito/internal"], "changesInPackagesSPOON": ["org.powermock.reflect.internal.proxy", "samples.powermockito.junit4.bugs.github731", "org.powermock.reflect.internal.proxy.UnproxiedTypeFactory", "org.powermock.reflect.internal.WhiteboxImpl.getAllMethodsExcept(java.lang.Class,java.lang.String,java.lang.Class[])", "org.powermock.reflect.internal.proxy.ClassFactory", "org.powermock.reflect.internal.WhiteboxImpl.getConstructor(java.lang.Class,java.lang.Class[])", "org.powermock.reflect.internal.WhiteboxImpl.throwExceptionIfMethodWasNotFound(java.lang.Class,java.lang.String,java.lang.reflect.Method,java.lang.Object[])", "org.powermock.reflect.internal.proxy.ProxyFrameworks.getUnproxiedType(java.lang.Object)", "org.powermock.core.MockGateway.isEqualsMethod(org.powermock.core.MockGateway$MockInvocation)", "org.powermock.reflect.internal.proxy.ProxyFrameworks.getUnproxiedType(java.lang.Class)", "org.powermock.reflect.internal.proxy.ProxyFrameworks", "org.powermock.reflect.internal.WhiteboxImpl.getMethod(java.lang.Class,java.lang.Class[])", "org.powermock.core.MockGateway.doMethodCall(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.String)", "samples.powermockito.junit4.bugs.github731.SomeException", "org.powermock.core.MockGateway.doMethodCall(java.lang.Object,java.lang.Object[],java.lang.String,org.powermock.core.MockGateway$MockInvocation,org.powermock.core.spi.MethodInvocationControl)", "org.powermock.reflect.internal.proxy.ProxyFrameworks.isJavaProxy(java.lang.Class)", "org.powermock.reflect.internal.WhiteboxImpl.getOriginalUnmockedType(java.lang.Class)", "samples.powermockito.junit4.bugs.github731.AType", "org.powermock.core.MockGateway.tryHandleEqualsMethod(org.powermock.core.MockGateway$MockInvocation)", "org.powermock.reflect.internal.WhiteboxImpl.getFirstParentConstructor(java.lang.Class)", "org.powermock.reflect.internal.WhiteboxImpl.throwExceptionIfConstructorWasNotFound(java.lang.Class,java.lang.reflect.Constructor,java.lang.Object[])", "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.withAnyArguments()", "org.powermock.core.MockInvocation", "org.powermock.reflect.internal.WhiteboxImpl.getUnmockedType(java.lang.Class)", "org.powermock.reflect.internal.ConstructorFinder", "org.powermock.reflect.internal.proxy.ProxyFrameworks.isCglibProxyClass(java.lang.Class)", "org.powermock.api.easymock.PowerMock.doExpectNew(java.lang.Class,org.powermock.api.easymock.internal.mockstrategy.MockStrategy,java.lang.Class[],java.lang.Object[])", "org.powermock.reflect.internal.WhiteboxImpl.throwExceptionIfFieldWasNotFound(java.lang.Class,java.lang.String,java.lang.reflect.Field)", "org.powermock.reflect.internal.ConstructorFinder.throwExceptionIfConstructorWasNotFound()", "org.powermock.core.MockGateway.MockInvocation", "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.createNewSubstituteMock(java.lang.Class,java.lang.Class[],java.lang.Object[])", "org.powermock.reflect.internal.WhiteboxImpl.getUnproxyType(java.lang.Object)"]}, {"title": "IllegalArgumentException is output to standard error", "body": "I'm using powermock.\r\nwhen Theories class using powermock execute test, test is executed.\r\nbut, java.lang.IllegalArgumentException is occur.(java.lang.IllegalArgumentException: Unable to determine method-name from description)\r\n\r\nthis exception is using theories class and powermock.\r\nThe version used is as follows.\r\n\r\n\u30fbpowermock-module-junit4 : 1.6.4\r\n\u30fbpowermock-api-mockito   : 1.6.4\r\n\u30fbmockito-all             : 1.10.19\r\n\r\n<!---\r\n@huboard:{\"order\":723.9276072392761,\"milestone_order\":722,\"custom_state\":\"\"}\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/722", "user": "k-nanri", "labels": ["bug", "component:junit"], "created": "2016-11-25 13:06:59", "closed": "2016-11-30 19:28:54", "commits": {"9edd4bb2ed56e8cf84ba8fdbac9648a68dd28ccb": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "9edd4bb2ed56e8cf84ba8fdbac9648a68dd28ccb", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["189f897900fd709c8531f0b13601e93a9d05816c"], "nameRev": "9edd4bb2ed56e8cf84ba8fdbac9648a68dd28ccb tags/powermock-1.7.0RC2~16", "commitMessage": "Fix Issue #722 IllegalArgumentException is output to standard error\n\nFix Issue #722 IllegalArgumentException is output to standard error", "commitDateTime": "2016-11-30 20:28:54", "authoredDateTime": "2016-12-01 04:28:54", "commitGitStats": [{"filePath": "modules/module-impl/junit4/src/main/java/org/powermock/modules/junit4/internal/impl/DelegatingPowerMockRunner.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "modules/module-test/junit4/pom.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "modules/module-test/junit4/src/test/java/samples/powermockito/junit4/bugs/github722/GitHub722Test.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "modules/module-test/junit4/src/test/java/samples/powermockito/junit4/bugs/github722/UseJUnitTest.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "modules/module-test/junit4/src/test/java/samples/powermockito/junit4/bugs/github722/UseTheoriesTest.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DelegatingPowerMockRunner.java", "spoonMethods": [{"spoonMethodName": "org.powermock.modules.junit4.internal.impl.DelegatingPowerMockRunner.determineTestMethods(java.lang.Class,java.lang.String[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GitHub722Test.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github722.GitHub722Test", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UseJUnitTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github722.UseJUnitTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UseTheoriesTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github722.UseTheoriesTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9edd4bb2ed56e8cf84ba8fdbac9648a68dd28ccb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["modules/module-impl/junit4/src/main/java/org/powermock/modules/junit4"], "changesInPackagesSPOON": ["org.powermock.modules.junit4.internal.impl.DelegatingPowerMockRunner.determineTestMethods(java.lang.Class,java.lang.String[])"]}, {"title": "Regression: MethodNotFoundException", "body": "Trying to upgrade from 1.6.4 to 1.6.6, I ran into this error:\r\n```\r\norg.powermock.reflect.exceptions.MethodNotFoundException: No methods matching the name(s) accept were found in the class hierarchy of class java.lang.Object.\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.getMethods(WhiteboxImpl.java:1720)\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.getMethods(WhiteboxImpl.java:1745)\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.getBestMethodCandidate(WhiteboxImpl.java:983)\r\n\tat org.powermock.core.MockGateway$MockInvocation.findMethodToInvoke(MockGateway.java:317)\r\n\tat org.powermock.core.MockGateway$MockInvocation.init(MockGateway.java:356)\r\n\tat org.powermock.core.MockGateway$MockInvocation.<init>(MockGateway.java:307)\r\n\tat org.powermock.core.MockGateway.doMethodCall(MockGateway.java:142)\r\n\tat org.powermock.core.MockGateway.methodCall(MockGateway.java:125)\r\n\tat InstanceFacadeImplTest.pendingInstanceStatusProcessorShouldDoNothing(InstanceFacadeImplTest.java:91)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:316)\r\n\tat org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89)\r\n\tat org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:300)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:288)\r\n\tat org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87)\r\n\tat org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:208)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:147)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:121)\r\n\tat org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\r\n\tat org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:123)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121)\r\n\tat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\r\n\tat org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\r\n```\r\n```java\r\npublic enum InstanceStatus {\r\n\tPENDING;\r\n}\r\n```\r\n```java\r\nimport java.util.function.Consumer;\r\n\r\npublic class InstanceFacadeImpl implements InstanceFacade {\r\n\tfinal Map<InstanceStatus, Consumer<Instance>> instanceStatusProcessors = new HashMap<>();\r\n\r\n\t{\r\n\t\tinstanceStatusProcessors.put(InstanceStatus.PENDING, instance -> {\r\n\t\t\t// NOP\r\n\t\t});\r\n\t}\r\n}\r\n```\r\n```java\r\n@RunWith(PowerMockRunner.class)\r\n@PowerMockListener(AnnotationEnabler.class)\r\n@PowerMockIgnore({ \"javax.management.*\" })\r\npublic class InstanceFacadeImplTest {\r\n\r\n\tprivate InstanceFacadeImpl instanceFacade;\r\n\r\n\t@Before\r\n\tpublic void setup() throws Exception {\r\n\t\tinstanceFacade = new InstanceFacadeImpl();\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void pendingInstanceStatusProcessorShouldDoNothing() throws Exception {\r\n\t\treplayAll();\r\n\t\tinstanceFacade.instanceStatusProcessors.get(InstanceStatus.PENDING).accept(null);\r\n\t\tverifyAll();\r\n\t}\r\n}\r\n```\r\n\r\n<!---\r\n@huboard:{\"order\":540.9459054094591,\"milestone_order\":697.930206979302,\"custom_state\":\"\"}\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/717", "user": "andrei-ivanov", "labels": ["Priority:High", "Resolved", "bug", "component:core"], "created": "2016-11-09 09:48:07", "closed": "2017-01-26 21:01:23", "commits": {"a300861fa635faf1fac89f07d6735a93f53f60e3": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "ddda4681cddd0518a2d1863c0108afd96d4b3528": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 78.00027777777778, "commitsDetails": [{"commitHash": "a300861fa635faf1fac89f07d6735a93f53f60e3", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ddda4681cddd0518a2d1863c0108afd96d4b3528", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["540b92e3f6359d98351ab6edf99e4ea009f7c489"], "nameRev": "ddda4681cddd0518a2d1863c0108afd96d4b3528 tags/powermock-1.7.0RC2~2", "commitMessage": "Fix #717: Regression: MethodNotFoundException (#741)\n\nSigned-off-by: Arthur Zagretdinov <arthur.zagretdinov@outlook.com>", "commitDateTime": "2017-01-26 22:01:22", "authoredDateTime": "2017-01-26 22:01:22", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "powermock-reflect/src/main/java/org/powermock/reflect/internal/proxy/ProxyFrameworks.java", "insertions": 14, "deletions": 17, "lines": 31}, {"filePath": "powermock-reflect/src/test/java/org/powermock/reflect/internal/proxy/ProxyFrameworksTest.java", "insertions": 84, "deletions": 0, "lines": 84}, {"filePath": "settings.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/java8/build.gradle", "insertions": 37, "deletions": 13, "lines": 50}, {"filePath": "tests/java8/easymock-junit4/src/main/java/samples/powermockito/junit4/bugs/github717/Instance.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "tests/java8/easymock-junit4/src/main/java/samples/powermockito/junit4/bugs/github717/InstanceFacade.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "tests/java8/easymock-junit4/src/main/java/samples/powermockito/junit4/bugs/github717/InstanceFacadeImpl.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "tests/java8/easymock-junit4/src/main/java/samples/powermockito/junit4/bugs/github717/InstanceStatus.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "tests/java8/easymock-junit4/src/test/java/samples/powermockito/junit4/bugs/github717/InstanceFacadeImplTest.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "tests/java8/easymock-junit4/src/test/java/samples/powermockito/junit4/bugs/github717/package-info.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ProxyFrameworks.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworks.isCglibProxyClassName(java.lang.String)", "TOT": 8, "UPD": 5, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworks.isCglibProxyClass(java.lang.Class)", "TOT": 10, "UPD": 1, "INS": 4, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworks", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworks.isCglibCallbackMethod(java.lang.reflect.Method)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProxyFrameworksTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.should_not_detect_synthetic_classes_as_cglib_proxy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.CustomClassLoader", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.reflect.internal.proxy.ProxyFrameworksTest.ClassFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Instance.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github717.Instance", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InstanceFacade.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github717", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InstanceFacadeImpl.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github717.InstanceFacadeImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InstanceStatus.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github717.InstanceStatus", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InstanceFacadeImplTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github717.InstanceFacadeImplTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Powermockito: withAnyArguments", "body": "Hello,\r\n\r\nwhen moving from version 1.6.5 to 1.6.6 all tests fail which are using the withAnyArguments inside of \"whenNew\". Proxy objects aren't created any more and stay null which results in NullPointerExceptions.\r\n\r\nRgds,\r\nMarkus\r\n\r\n\r\n<!---\r\n@huboard:{\"order\":697.930206979302,\"milestone_order\":716,\"custom_state\":\"\"}\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/716", "user": "blacksmithbrew", "labels": ["Priority:High", "bug", "regression"], "created": "2016-11-08 15:16:00", "closed": "2016-11-12 08:49:03", "commits": {"e4e4fc0fbf911c5248f82fb3fd18d9a6f2215dae": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "92ef1146ee05691e95dbda62d26abd18e2a76fbd": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "e4e4fc0fbf911c5248f82fb3fd18d9a6f2215dae", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "92ef1146ee05691e95dbda62d26abd18e2a76fbd", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["0fb0fe0eee37d306a57de730a8deab1e8b866ff5"], "nameRev": "92ef1146ee05691e95dbda62d26abd18e2a76fbd tags/powermock-1.7.0RC2~19", "commitMessage": "Fix #716 Powermockito: withAnyArguments\nfor case when one of actual parameter is null\n", "commitDateTime": "2016-11-12 09:49:02", "authoredDateTime": "2016-11-11 13:38:33", "commitGitStats": [{"filePath": "api/mockito-common/src/main/java/org/powermock/api/mockito/internal/expectation/AbstractConstructorExpectationSetup.java", "insertions": 1, "deletions": 19, "lines": 20}, {"filePath": "api/mockito-common/src/main/java/org/powermock/api/mockito/internal/expectation/LocalizedMatcherAdapter.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DefaultConstructorExpectationSetup.java", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DefaultLocalizedMatcherAdapter.java", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "api/mockito2/src/main/java/org/powermock/api/mockito/internal/expectation/DefaultConstructorExpectationSetup.java", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "api/mockito2/src/main/java/org/powermock/api/mockito/internal/expectation/DefaultLocalizedMatcherAdapter.java", "insertions": 0, "deletions": 23, "lines": 23}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/A.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/B.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/C.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/MyService.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/WhenNewWithAnyArgumentsTest.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/package-info.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractConstructorExpectationSetup.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.createNewSubstituteMock(java.lang.Class,java.lang.Class[],java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.expectSubstitutionLogic(org.powermock.core.spi.NewInvocationControl,java.lang.Object[])", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.getMatcherAdapters(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LocalizedMatcherAdapter.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.expectation", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DefaultConstructorExpectationSetup.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.expectation.DefaultConstructorExpectationSetup.getMatcherAdapters(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DefaultLocalizedMatcherAdapter.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.expectation.DefaultLocalizedMatcherAdapter", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "A.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github716.A", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "B.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github716.B", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "C.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github716.C", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MyService.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github716.MyService", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WhenNewWithAnyArgumentsTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github716.WhenNewWithAnyArgumentsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["92ef1146ee05691e95dbda62d26abd18e2a76fbd"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 95.0, "lines": 96.0, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 14.0, "UPD": 0.0, "INS": 4.0, "MOV": 2.0, "DEL": 8.0, "spoonFilesChanged": 8, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["api/mockito/src/main/java/org/powermock/api/mockito/internal", "api/mockito-common/src/main/java/org/powermock/api/mockito/internal", "api/mockito2/src/main/java/org/powermock/api/mockito/internal"], "changesInPackagesSPOON": ["samples.powermockito.junit4.bugs.github716.A", "org.powermock.api.mockito.internal.expectation.DefaultConstructorExpectationSetup.getMatcherAdapters(java.util.List)", "samples.powermockito.junit4.bugs.github716.MyService", "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup", "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.createNewSubstituteMock(java.lang.Class,java.lang.Class[],java.lang.Object[])", "org.powermock.api.mockito.internal.expectation.DefaultLocalizedMatcherAdapter", "org.powermock.api.mockito.internal.expectation", "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.getMatcherAdapters(java.util.List)", "samples.powermockito.junit4.bugs.github716.C", "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.expectSubstitutionLogic(org.powermock.core.spi.NewInvocationControl,java.lang.Object[])", "samples.powermockito.junit4.bugs.github716.B"]}, {"title": "org.easymock.TestSubject not handled properly anymore (1.6.6 regression)", "body": "Now that #668 is fixed, I tried to upgrade to 1.6.6 (from 1.6.4), but the other test in the package fails :-(\r\n```\r\njava.lang.RuntimeException: Invoking the beforeTestMethod method on PowerMock test listener org.powermock.api.extension.listener.AnnotationEnabler@2a742aa2 failed.\r\n\tat org.powermock.tests.utils.impl.PowerMockTestNotifierImpl.notifyBeforeTestMethod(PowerMockTestNotifierImpl.java:93)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:298)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:288)\r\n\tat org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87)\r\n\tat org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:208)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:147)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:121)\r\n\tat org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\r\n\tat org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:123)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121)\r\n\tat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\r\n\tat org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\r\nCaused by: java.lang.NullPointerException: Have you forgotten to instantiate notificationFacadeImpl?\r\n\tat org.easymock.internal.Injector.injectMocks(Injector.java:81)\r\n\tat org.easymock.EasyMockSupport.injectMocks(EasyMockSupport.java:528)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.performMethodInvocation(WhiteboxImpl.java:1819)\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.doInvokeMethod(WhiteboxImpl.java:801)\r\n\tat org.powermock.reflect.internal.WhiteboxImpl.invokeMethod(WhiteboxImpl.java:781)\r\n\tat org.powermock.reflect.Whitebox.invokeMethod(Whitebox.java:466)\r\n\tat org.powermock.api.extension.listener.AnnotationEnabler.beforeTestMethod(AnnotationEnabler.java:71)\r\n\tat org.powermock.tests.utils.impl.PowerMockTestNotifierImpl.notifyBeforeTestMethod(PowerMockTestNotifierImpl.java:91)\r\n\t... 24 more\r\n```\r\n```java\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\nimport org.powermock.api.extension.listener.AnnotationEnabler;\r\nimport org.powermock.core.classloader.annotations.PowerMockIgnore;\r\nimport org.powermock.core.classloader.annotations.PowerMockListener;\r\nimport org.powermock.modules.junit4.PowerMockRunner;\r\n\r\nimport org.easymock.TestSubject;\r\n\r\nimport org.powermock.reflect.internal.WhiteboxImpl;\r\n\r\n@RunWith(PowerMockRunner.class)\r\n@PowerMockListener(AnnotationEnabler.class)\r\n@PowerMockIgnore({ \"javax.management.*\" })\r\npublic class NotificationFacadeImplTest {\r\n\r\n\t@TestSubject\r\n\tprivate NotificationFacade notificationFacadeImpl;\r\n\r\n\t@Before\r\n\tpublic void setup() throws Exception {\r\n\t\tnotificationFacadeImpl = new NotificationFacadeImpl();\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void validateEmailShouldReturnCorrectValueForValidEmailAddresses() throws Exception {\r\n\t\tWhiteboxImpl.invokeMethod(notificationFacadeImpl, \"validateDistributionList\", \"\");\r\n\t\tWhiteboxImpl.invokeMethod(notificationFacadeImpl, \"validateDistributionList\", \"abc@abc.blackfriday\");\r\n\t}\r\n}\r\n```\r\nThis is with EasyMock 3.4.\r\nRemoving the `@TestSubject` annotation make it work again.\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/715", "user": "andrei-ivanov", "labels": ["Not an issue", "bug"], "created": "2016-11-07 09:36:25", "closed": "2016-11-09 06:47:12", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "PowerMock should ignore and keep synthetic method/fields when modifies class", "body": "PowerMock modified all methods/fields during loading, even if it synthetic method. This behaviour leads to issue and incompatibility with our tools. For example, issue with Jacoco (https://github.com/jacoco/jacoco/pull/296)\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/707", "user": "thekingn0thing", "labels": ["bug", "component:core"], "created": "2016-10-25 18:20:29", "closed": "2016-10-31 08:00:31", "commits": {"1689300e21b339c7c41358facf24421d08c03bf3": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "217a5e60885aa085fde184d998914fcd58a27335": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "d5fd2b83d4ae95551c4506fdfb62b306f9b3daf6": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "37858a3c32cd79ce8e1278ed5d3694d4b7a1d1b4": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "1689300e21b339c7c41358facf24421d08c03bf3", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "217a5e60885aa085fde184d998914fcd58a27335", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d5fd2b83d4ae95551c4506fdfb62b306f9b3daf6", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "37858a3c32cd79ce8e1278ed5d3694d4b7a1d1b4", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["43254372cba340e6d3db42a78fd0a915cf73af40"], "nameRev": "37858a3c32cd79ce8e1278ed5d3694d4b7a1d1b4 tags/powermock-1.6.6~7", "commitMessage": "Issue #707 PowerMock should ignore and keep without changes synthetic method/fields when modifies class (#710)\n\nAlso fixed issues: #645 #422", "commitDateTime": "2016-10-31 09:00:31", "authoredDateTime": "2016-10-31 09:00:31", "commitGitStats": [{"filePath": "core/src/main/java/org/powermock/core/MockGateway.java", "insertions": 66, "deletions": 65, "lines": 131}, {"filePath": "core/src/main/java/org/powermock/core/classloader/MockClassLoader.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/src/main/java/org/powermock/core/transformers/impl/AbstractMainMockTransformer.java", "insertions": 69, "deletions": 29, "lines": 98}, {"filePath": "core/src/test/java/org/powermock/core/transformers/impl/ClassMockTransformerTest.java", "insertions": 215, "deletions": 9, "lines": 224}, {"filePath": "core/src/test/java/powermock/test/support/MainMockTransformerTestSupport.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "modules/module-test/easymock/junit4-test/src/test/java/samples/junit4/finalmocking/FinalDemoTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/FinalDemoTest.java", "insertions": 0, "deletions": 141, "lines": 141}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/MockFinalNonStaticMethodsTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/FinalDemoTest.java", "insertions": 0, "deletions": 141, "lines": 141}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/MockFinalNonStaticMethodsTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/FinalDemoTest.java", "insertions": 0, "deletions": 141, "lines": 141}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/MockFinalNonStaticMethodsTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "modules/module-test/mockito/junit4/pom.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/{ => bugs}/ClassLoaderBugTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/finalmocking/FinalDemoTest.java", "insertions": 0, "deletions": 135, "lines": 135}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/finalmocking/MockFinalMethodsCases.java", "insertions": 120, "deletions": 0, "lines": 120}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/finalmocking/MockFinalNonStaticMethodsTest.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/InstanceMethods.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/JacocoCoverageTest.java", "insertions": 169, "deletions": 0, "lines": 169}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/StaticMethods.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/TargetTest.java", "insertions": 43, "deletions": 0, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockGateway.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.MockGateway.methodCall(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.newInstanceCall(java.lang.Class,java.lang.Object[],java.lang.Class[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.fieldCall(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.staticConstructorCall(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.constructorCall(java.lang.Class,java.lang.Object[],java.lang.Class[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MockClassLoader.java", "spoonMethods": []}, {"spoonFilePath": "AbstractMainMockTransformer.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.PowerMockExpressionEditor.edit(javassist.expr.FieldAccess)", "TOT": 21, "UPD": 1, "INS": 5, "MOV": 7, "DEL": 8}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.shouldSkipMethod(javassist.CtMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.isAccessFlagSynthetic(javassist.CtMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.isBridgeMethod(javassist.CtMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.isNotSyntheticField(javassist.bytecode.FieldInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.modifyMethod(javassist.CtMethod)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.transform(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.transformMockClass(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ClassMockTransformerTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldLoadClassAndOverrideMethodGreaterThanJvmLimit()", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldIgnoreSyntheticNonBridgeMethods()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldIgnoreCallToSyntheticNonBridgeMethods()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldIgnoreCallToSyntheticField()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldModifyBridgeMethods()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.prepareClassesForFieldTests(javassist.ClassPool)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.insertCallSyntheticMethod(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.addSyntheticField(javassist.ClassPool,javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.prepareClassesForTest(javassist.ClassPool,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.runTestWithNewClassLoader(javassist.ClassPool,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.addCallInterceptorToMockGateway(javassist.ClassPool)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.addSyntheticMethod(javassist.ClassPool,javassist.CtClass,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldIgnoreSyntheticNonBridgeMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldIgnoreCallToSyntheticNonBridgeMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldIgnoreCallToSyntheticField", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldModifyBridgeMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MainMockTransformerTestSupport.java", "spoonMethods": [{"spoonMethodName": "powermock.test.support.MainMockTransformerTestSupport.SuperClassWithObjectMethod", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "powermock.test.support.MainMockTransformerTestSupport.SubclassWithBridgeMethod", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "powermock.test.support.MainMockTransformerTestSupport.CallSpy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FinalDemoTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.finalmocking.FinalDemoTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MockFinalNonStaticMethodsTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.finalmocking.MockFinalNonStaticMethodsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassLoaderBugTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.ClassLoaderBugTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.ClassLoaderBugTest.resourcesAreNotLoadedTwice()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockFinalMethodsCases.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.finalmocking.MockFinalMethodsCases", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InstanceMethods.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.InstanceMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JacocoCoverageTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.JacocoCoverageTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StaticMethods.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.StaticMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TargetTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.TargetTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "PowerMockito 1.6.5 throws java.lang.SecurityException signer information mismatch", "body": "I was using PowerMockito 1.6.2 which was working fine except that I had no coverage reports on test classes which were using PowerMockito.\nI've check the suggested solutions and I successfully get the coverage reports working when I was switching to version 1.6.5. It is working well even without using the PowerMockAgent.\nI was very pleased to see but now I'm facing the issue that junit tests failed to initialize if in the PrepareForTest annotation affects also classes which have signatures.\nE.g. I get this stacktrace:\n`java.lang.SecurityException: class \"org.eclipse.core.runtime.IAdaptable\"'s signer information does not match signer information of other classes in the same package\n    at java.lang.ClassLoader.checkCerts(ClassLoader.java:895)\n    at java.lang.ClassLoader.preDefineClass(ClassLoader.java:665)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:758)\n    at org.powermock.core.classloader.MockClassLoader.loadUnmockedClass(MockClassLoader.java:250)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:194)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:71)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:760)\n    at org.powermock.core.classloader.MockClassLoader.loadUnmockedClass(MockClassLoader.java:250)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:194)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:71)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:760)`\n\nStrange is that it was working without any problems with the previous version.\nI've search StackOverFlow for solution but no success. I suspected that this is related to cglib or javassist, so I tried to use the older versions, but it did not help.\nWhen I change powermock-mockito-1.6.2-full.jar to powermock-mockito-1.6.5-full.jar then this error appears.\n\nHow can I avoid this error message?\nShould I remove the signature information from the referenced libraries? Or are there any other option or hidden feature to avoid the signature problem?\n\nI'm running my dev environment on Windows7, with Eclipse Mars.\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/704", "user": "csorbazoli", "labels": ["Priority:Medium", "bug", "component:core"], "created": "2016-10-20 12:12:35", "closed": "2016-11-01 14:04:53", "commits": {"e2a202dfe2eae84e9876f823365237640a37f896": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "ed7029aa5b27b74f9af109f8f7d47348e4b28deb": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "e2a202dfe2eae84e9876f823365237640a37f896", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ed7029aa5b27b74f9af109f8f7d47348e4b28deb", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["85d8d11a2a158497f1e5dc12ff59491481534647"], "nameRev": "ed7029aa5b27b74f9af109f8f7d47348e4b28deb tags/powermock-1.6.6~4", "commitMessage": "#704 PowerMockito 1.6.5 throws java.lang.SecurityException signer information mismatch (#712)\n\nPass protection domain for mocked classes", "commitDateTime": "2016-11-01 15:04:53", "authoredDateTime": "2016-11-01 15:04:53", "commitGitStats": [{"filePath": "core/src/main/java/org/powermock/core/classloader/MockClassLoader.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "modules/module-test/mockito/junit4/pom.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github704/PrepareForTestSignedTest.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github704/SomeClassUseSignedClasses.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github704/package-info.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockClassLoader.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.MockClassLoader.loadMockClass(java.lang.String,java.security.ProtectionDomain)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.classloader.MockClassLoader.loadModifiedClass(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareForTestSignedTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github704.PrepareForTestSignedTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SomeClassUseSignedClasses.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github704.SomeClassUseSignedClasses", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "StackOverflowError mocking final class extending non-public abstract class overriding equals method", "body": "If I try to mock a final class that extends a non-public abstract class that overrides the equals method, I get a `StackOverflowError`.\n\nFailing test included below:\n\nOverridesEquals.java\n\n``` java\npackage mockito.failure.test;\n\nabstract class OverridesEquals {\n    @Override\n    public boolean equals (final Object other) {\n        return this == other;\n    }\n}\n```\n\nMapWrapper.java\n\n``` java\npackage mockito.failure.test;\n\nimport java.io.Serializable;\nimport java.util.Collections;\nimport java.util.Map;\n\npublic final class MapWrapper extends OverridesEquals {\n    private final Map<String, Serializable> data;\n\n    MapWrapper(final Map<String, Serializable> data) {\n        this.data = Collections.unmodifiableMap(data);\n    }\n\n    public Object get(final String key) {\n        if (key == null || key.isEmpty()) {\n            return null;\n        }\n        return data.get(key);\n    }\n}\n```\n\nMapWrapperTest.java\n\n``` java\npackage mockito.failure.test;\n\nimport org.junit.Assert;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.mockito.PowerMockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({MapWrapper.class})\npublic class MapWrapperTest\n{\n    @Test\n    public void testPowerMock () throws Exception\n    {\n        MapWrapper mocked = PowerMockito.mock(MapWrapper.class);\n        PowerMockito.doReturn(\"1234\").when(mocked).get(\"numbers\");\n        Assert.assertEquals(\"1234\", mocked.get(\"numbers\"));\n    }\n}\n```\n\nUsing maven dependencies:\n\n``` XML\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>4.12</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.powermock</groupId>\n      <artifactId>powermock-api-mockito2</artifactId>\n      <version>1.6.5</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.powermock</groupId>\n      <artifactId>powermock-module-junit4</artifactId>\n      <version>1.6.5</version>\n      <scope>test</scope>\n    </dependency>\n```\n\nError snippet:\n\n```\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.804 sec <<< FAILURE!\ntestPowerMock(mockito.failure.test.MapWrapperTest)  Time elapsed: 0.723 sec  <<< ERROR!\njava.lang.StackOverflowError\n        at java.security.AccessController.doPrivileged(Native Method)\n        at org.powermock.reflect.internal.WhiteboxImpl.getAllMethods(WhiteboxImpl.java:1519)\n        at org.powermock.reflect.internal.WhiteboxImpl.getMethods(WhiteboxImpl.java:1786)\n        at org.powermock.reflect.internal.WhiteboxImpl.getMethods(WhiteboxImpl.java:1825)\n        at org.powermock.reflect.internal.WhiteboxImpl.getBestMethodCandidate(WhiteboxImpl.java:983)\n        at org.powermock.core.MockGateway.doMethodCall(MockGateway.java:92)\n        at org.powermock.core.MockGateway.methodCall(MockGateway.java:189)\n        at mockito.failure.test.MapWrapper.equals(MapWrapper.java)\n        at org.mockito.internal.invocation.InvocationMatcher.matches(InvocationMatcher.java:56)\n        at org.mockito.internal.stubbing.InvocationContainerImpl.findAnswerFor(InvocationContainerImpl.java:79)\n        at org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:91)\n        at org.powermock.api.mockito.internal.invocation.MockitoMethodInvocationControl.performIntercept(MockitoMethodInvocationControl.java:267)\n        at org.powermock.api.mockito.internal.invocation.MockitoMethodInvocationControl.invoke(MockitoMethodInvocationControl.java:193)\n        at org.powermock.core.MockGateway.doMethodCall(MockGateway.java:132)\n        at org.powermock.core.MockGateway.methodCall(MockGateway.java:189)\n        at mockito.failure.test.MapWrapper.equals(MapWrapper.java)\n        at org.mockito.internal.invocation.InvocationMatcher.matches(InvocationMatcher.java:56)\n        at org.mockito.internal.stubbing.InvocationContainerImpl.findAnswerFor(InvocationContainerImpl.java:79)\n        at org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:91)\n        at org.powermock.api.mockito.internal.invocation.MockitoMethodInvocationControl.performIntercept(MockitoMethodInvocationControl.java:267)\n        at org.powermock.api.mockito.internal.invocation.MockitoMethodInvocationControl.invoke(MockitoMethodInvocationControl.java:193)\n        at org.powermock.core.MockGateway.doMethodCall(MockGateway.java:132)\n        at org.powermock.core.MockGateway.methodCall(MockGateway.java:189)\n        at mockito.failure.test.MapWrapper.equals(MapWrapper.java)\n...looping into equals method continues for a while...\n```\n", "url": "https://github.com/powermock/powermock/issues/701", "user": "rage-shadowman", "labels": ["Resolved", "bug"], "created": "2016-10-12 20:30:48", "closed": "2016-10-16 18:22:36", "commits": {"c64f102e7a724fe1a2358353caf209484b34db82": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "b0f53725e88a7f8bd155bee012d93395d17fb8ef": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "a8dd44969a60f1ac383b7b02465fefc7b26d24c8": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "224e2992b1ac98287ba4599501227016c8081b50": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "0875568c351898392e6ea2f794234165d14eb5a9": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "a78afc5ffc0bc031d46d7aae41f15b4e830522b8": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "c64f102e7a724fe1a2358353caf209484b34db82", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b0f53725e88a7f8bd155bee012d93395d17fb8ef", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a8dd44969a60f1ac383b7b02465fefc7b26d24c8", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "224e2992b1ac98287ba4599501227016c8081b50", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["6ed7fa7338b8ad92ac5d80b71563bb12431a8aae"], "nameRev": "224e2992b1ac98287ba4599501227016c8081b50 tags/powermock-1.6.6~9", "commitMessage": "Fix #701 StackOverflowError mocking final class extending non-public abstract class overriding equals method (#703)\n\n", "commitDateTime": "2016-10-16 20:22:36", "authoredDateTime": "2016-10-16 20:22:36", "commitGitStats": [{"filePath": "api/mockito/src/main/java/org/powermock/api/mockito/internal/invocation/MockitoMethodInvocationControl.java", "insertions": 57, "deletions": 30, "lines": 87}, {"filePath": "api/mockito2/src/main/java/org/powermock/api/mockito/internal/invocation/MockitoMethodInvocationControl.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/org/powermock/core/ClassLocator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/org/powermock/core/MockGateway.java", "insertions": 147, "deletions": 76, "lines": 223}, {"filePath": "core/src/main/java/org/powermock/core/transformers/MockTransformer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/org/powermock/core/transformers/impl/AbstractMainMockTransformer.java", "insertions": 70, "deletions": 45, "lines": 115}, {"filePath": "modules/module-test/easymock/junit4-legacy-test/src/test/java/samples/junit4/legacy/noannotation/NoAnnotationUsageTest.java", "insertions": 6, "deletions": 25, "lines": 31}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github701/GitHub701Test.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github701/MapWrapper.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github701/OverridesEquals.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github701/package-info.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockitoMethodInvocationControl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.invocation.MockitoMethodInvocationControl.isMocked(java.lang.reflect.Method)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ClassLocator.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.ClassLocator.getCallerClass()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockGateway.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.MockGateway.doMethodCall(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.String)", "TOT": 55, "UPD": 18, "INS": 1, "MOV": 35, "DEL": 1}, {"spoonMethodName": "org.powermock.core.MockGateway.shouldMockMethod(java.lang.String,java.lang.Class[])", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.powermock.core.MockGateway.doMethodCall(java.lang.Object,java.lang.Object[],java.lang.String,org.powermock.core.MockGateway$MockInvocation,org.powermock.core.spi.MethodInvocationControl)", "TOT": 11, "UPD": 0, "INS": 11, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.tryHandleEqualsMethod(org.powermock.core.MockGateway$MockInvocation)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.isEqualsMethod(org.powermock.core.MockGateway$MockInvocation)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.calledFromMockito()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.MockInvocation", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockTransformer.java", "spoonMethods": []}, {"spoonFilePath": "AbstractMainMockTransformer.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.modifyMethod(javassist.CtMethod)", "TOT": 23, "UPD": 1, "INS": 3, "MOV": 15, "DEL": 4}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.modifyMethod(javassist.CtMethod,javassist.CtClass,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.classOrInstance(javassist.CtMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.modifyNativeMethod(javassist.CtMethod,javassist.CtClass,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NoAnnotationUsageTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit4.legacy.noannotation.NoAnnotationUsageTest.testGetMessage()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "samples.junit4.legacy.noannotation.NoAnnotationUsageTest.testGetMessage2()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GitHub701Test.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github701.GitHub701Test", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapWrapper.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github701.MapWrapper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OverridesEquals.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github701.OverridesEquals", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "0875568c351898392e6ea2f794234165d14eb5a9", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a78afc5ffc0bc031d46d7aae41f15b4e830522b8", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["998cc0700640280f4e813e5830838464db8eb806"], "nameRev": "a78afc5ffc0bc031d46d7aae41f15b4e830522b8 tags/powermock-1.7.0~18", "commitMessage": "Fix #793 PowerMockMaker for Mockito 2 (#795)\n\nImplement #793 PowerMockMaker for Mockito 2: A new version of PowerMockMaker implemented. It does not conflict with Mockito MockMaker any more. Fix for #701 partially does not work any more, because ByteBuddy implementation of MockMaker always intercept calls to equals and return `true` only in case if passed object is the same instance of mocked object.", "commitDateTime": "2017-05-26 22:07:11", "authoredDateTime": "2017-05-26 22:07:11", "commitGitStats": [{"filePath": "build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "changelog.txt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/internal/mockcreation/DefaultMockCreator.java", "insertions": 15, "deletions": 6, "lines": 21}, {"filePath": "powermock-api/powermock-api-mockito2/src/main/java/org/powermock/api/mockito/internal/mockmaker/PowerMockMaker.java", "insertions": 12, "deletions": 20, "lines": 32}, {"filePath": "powermock-api/powermock-api-mockito2/src/test/java/org/powermock/api/mockito/internal/mockcreation/MockCreatorTest.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "powermock-classloading/powermock-classloading-base/src/main/java/org/powermock/classloading/AbstractClassloaderExecutor.java", "insertions": 15, "deletions": 8, "lines": 23}, {"filePath": "powermock-core/src/main/java/org/powermock/core/classloader/MockClassLoader.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "powermock-core/src/test/java/org/powermock/core/classloader/MockClassLoaderTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "settings.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/mockito/build.gradle", "insertions": 22, "deletions": 5, "lines": 27}, {"filePath": "tests/mockito/inline/src/main/java/samples/powermockito/inline/bugs/github793/FinalClass.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "tests/mockito/inline/src/main/java/samples/powermockito/inline/bugs/github793/StaticClass.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "tests/mockito/inline/src/main/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/mockito/inline/src/test/java/samples/powermockito/inline/bugs/github793/MockitoFinalClassMockingTest.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "tests/mockito/inline/src/test/java/samples/powermockito/inline/bugs/github793/PowerMockStaticMockingTest.java", "insertions": 78, "deletions": 0, "lines": 78}, {"filePath": "tests/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/PrivateInstanceMockingTest.java", "insertions": 2, "deletions": 80, "lines": 82}, {"filePath": "tests/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/PrivateInstanceMockingTest.java", "insertions": 3, "deletions": 81, "lines": 84}, {"filePath": "tests/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/PrivateInstanceMockingTest.java", "insertions": 3, "deletions": 78, "lines": 81}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github701/GitHub701Test.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/privatemocking/PrivateInstanceMockingCases.java", "insertions": 119, "deletions": 0, "lines": 119}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/privatemocking/PrivateInstanceMockingTest.java", "insertions": 11, "deletions": 92, "lines": 103}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/staticmocking/MockStaticTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "tests/utils/src/main/java/org/powermock/api/mockito/MockitoVersion.java", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "tests/utils/src/main/java/samples/powermockito/MockitoVersion.java", "insertions": 0, "deletions": 49, "lines": 49}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultMockCreator.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.createMethodInvocationControl(java.lang.String,java.lang.Class,java.lang.reflect.Method[],boolean,java.lang.Object,org.mockito.MockSettings)", "TOT": 8, "UPD": 2, "INS": 3, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "PowerMockMaker.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.resetMock(java.lang.Object,org.mockito.invocation.MockHandler,org.mockito.mock.MockCreationSettings)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.createMock(org.mockito.mock.MockCreationSettings,org.mockito.invocation.MockHandler)", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 4}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.isTypeMockable(java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.PowerMockInternalMockHandler", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.PowerMockInternalMockHandler.getMockSettings()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.getHandler(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockCreatorTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.mockcreation.MockCreatorTest.testMock_shouldReturnMockNameWhenSettingsHaveName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.mockito.internal.mockcreation.MockCreatorTest.testMock_shouldReturnClassNameWhenSettingsHaveNoName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractClassloaderExecutor.java", "spoonMethods": [{"spoonMethodName": "org.powermock.classloading.AbstractClassloaderExecutor.invokeWithClassLoader(java.lang.ClassLoader,java.lang.reflect.Method,java.lang.Object,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.classloading.AbstractClassloaderExecutor.executeWithClassLoader(java.lang.Object,java.lang.reflect.Method,java.lang.ClassLoader,java.lang.Object[])", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "MockClassLoader.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.MockClassLoader.loadUnmockedClass(java.lang.String,java.security.ProtectionDomain)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MockClassLoaderTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.MockClassLoaderTest.cannotFindDynamicClassInDeferredClassLoader()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FinalClass.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.inline.bugs.github793.FinalClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StaticClass.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.inline.bugs.github793.StaticClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockitoFinalClassMockingTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.inline.bugs.github793.MockitoFinalClassMockingTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PowerMockStaticMockingTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.inline.bugs.github793.PowerMockStaticMockingTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrivateInstanceMockingTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.answersWorkWhenSpyingOnPrivateVoidMethods().1", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.expectationsWorkWhenSpyingOnPrivateMethods()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.expectationsWorkWithArgumentMatchersWhenSpyingOnPrivateMethods()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.errorousVerificationOnPrivateMethodGivesFilteredErrorMessage()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.answersWorkWhenSpyingOnPrivateVoidMethods()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingTest.spyingOnPrivateFinalMethodsWorksWhenClassIsNotFinal()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GitHub701Test.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github701.GitHub701Test.shouldMockEqualsMethod()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "PrivateInstanceMockingCases.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.privatemocking.PrivateInstanceMockingCases", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockStaticTest.java", "spoonMethods": []}, {"spoonFilePath": "MockitoVersion.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.MockitoVersion", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 4, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Throw StackOverflowError when child method invoke twice parent method using PowerMock Mockito", "body": "**I tried to use PowerMock with Mockito to mock one test case but it throw StackOverflowError** **exception.**\n\n**I am using 1.6.3 version as below:**\n`<powermock.version>1.6.3</powermock.version>`\n`...`\n`<dependency>`\n`<groupId>org.powermock</groupId>`\n`<artifactId>powermock-module-junit4</artifactId>`\n`<version>${powermock.version}</version>`\n`<scope>test</scope>`\n`</dependency>`\n`<dependency>`\n`<groupId>org.powermock</groupId>`\n`<artifactId>powermock-api-easymock</artifactId>`\n`<version>${powermock.version}</version>`\n`<scope>test</scope>`\n`</dependency>`\n`<dependency>`\n`<groupId>org.powermock</groupId>`\n`<artifactId>powermock-api-mockito</artifactId>`\n`<version>${powermock.version}</version>`\n`<scope>test</scope>`\n`</dependency>`\n\n**The case is as below, I want to test print method in Child, and mock Parent method. Which child method will invoke parent method twice.**\n\n`class Parent {`\n`public void print() {`\n`System.out.println(\"print Parent\");`\n`}`\n`}`\n`                                           `\n`class Child extends Parent {               `\n`    public void print() {                  `\n`        super.print();            // invoke parent method first time         `\n`        System.out.println(\"print Child\"); `\n`        super.print();             // invoke parent method second time         `\n`    }                                      `\n`}                                          `\n\n**Then I use below test class to test:**\n`@RunWith(PowerMockRunner.class)`\n`@PrepareForTest({`\n`Parent.class`\n`})`\n`public class Test {`\n`@Test`\n`public void print() {`\n`PowerMockito.suppress(MemberMatcher.method(Parent.class));`\n`Child child = PowerMockito.spy(new Child());`\n`child.print();`\n`}`\n`}`\n\n**When I run this test case, it throw StackOverflowError exception as below:**\n\njava.lang.StackOverflowError\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:792)\n    at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\n    at java.net.URLClassLoader.defineClass(URLClassLoader.java:449)\n    at java.net.URLClassLoader.access$100(URLClassLoader.java:71)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:361)\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:355)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:354)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:177)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:70)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n\r\n\r\n<!---\r\n@huboard:{\"order\":617.5,\"milestone_order\":717.053775,\"custom_state\":\"\"}\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/698", "user": "shuxiang520", "labels": ["Cannot reproduce", "Deferred", "bug"], "created": "2016-09-13 08:42:00", "closed": "2017-01-26 19:28:50", "commits": {"277b09293bc657e4833c24763ad5a15e0fdcee35": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 135.00027777777777, "commitsDetails": [{"commitHash": "277b09293bc657e4833c24763ad5a15e0fdcee35", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "ClassNotFoundException when loading cglib enhanced classes created by Spring", "body": "Originally raised on the [Spring Boot issue tracker](https://github.com/spring-projects/spring-boot/issues/6808) we're seeing different class loading behavior when the `MockClassLoader` is used and cglib enhanced are loaded.\n\nA minimal project that reproduces the issue using PowerMock v1.6.5 and Spring Framework 4.3.2 can be found [here](https://github.com/philwebb/spring-boot-issue-6808).\n\nOnce imported into an IDE, if the following test is modified to directly use the `SpringRunner` then the test passes.\n\n``` java\n//@RunWith(SpringRunner.class)\n@RunWith(PowerMockRunner.class)\n@PowerMockRunnerDelegate(SpringRunner.class)\npublic class PowermockClassLoadTest {\n\n    @Autowired\n    private ConfigurableApplicationContext context;\n\n    @Test\n    public void testRest() throws Exception {\n        BeanDefinition definition = context.getBeanFactory().getBeanDefinition(\"powermockClassLoadTest.Config\");\n        String className = definition.getBeanClassName();\n        ClassUtils.forName(className, null);\n    }\n\n    @Configuration\n    public static class Config {\n    }\n\n}\n```\n\nIf the `PowerMockRunner` is used then the test fails with the following exception:\n\n```\njava.lang.ClassNotFoundException: com.example.PowermockClassLoadTest$Config$$EnhancerBySpringCGLIB$$e0ecd163\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:190)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:71)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at org.springframework.util.ClassUtils.forName(ClassUtils.java:250)\n    at com.example.PowermockClassLoadTest.testRest(PowermockClassLoadTest.java:26)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\n    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\n    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\n    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)\n    at org.powermock.modules.junit4.internal.impl.DelegatingPowerMockRunner$2.call(DelegatingPowerMockRunner.java:148)\n    at org.powermock.modules.junit4.internal.impl.DelegatingPowerMockRunner$2.call(DelegatingPowerMockRunner.java:140)\n    at org.powermock.modules.junit4.internal.impl.DelegatingPowerMockRunner.withContextClassLoader(DelegatingPowerMockRunner.java:131)\n    at org.powermock.modules.junit4.internal.impl.DelegatingPowerMockRunner.run(DelegatingPowerMockRunner.java:140)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\n```\n\nDigging in a little to the differences, it appears that `ClassLoader.findClass(name)` for the regular version returns a non-null result, where as in the failing version it returns `null`. Adding a conditional breakpoint on `ClassLoader.loadClass(String name, boolean resolve)` with the following condition should be enough to see the difference:\n\n```\narg0.startsWith(\"com.example.PowermockClassLoadTest$Config$$EnhancerBySpringCGLIB\") && !arg0.endsWith(\"Customizer\")\n```\n", "url": "https://github.com/powermock/powermock/issues/695", "user": "philwebb", "labels": ["bug", "component:core"], "created": "2016-09-07 02:02:19", "closed": "2016-09-11 08:05:57", "commits": {"f57336600d0d8f556e6222e5dea12935c0d84ab9": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "b0c906905f43dae8ffb6346e73d96ad152985369": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "f57336600d0d8f556e6222e5dea12935c0d84ab9", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b0c906905f43dae8ffb6346e73d96ad152985369", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["b0e59cc95271d3c98306853b4f7b46a1a9e69f18"], "nameRev": "b0c906905f43dae8ffb6346e73d96ad152985369 tags/powermock-1.6.6~15", "commitMessage": "#695 ClassNotFoundException when loading cglib enhanced classes created by Spring (#697)\n\n", "commitDateTime": "2016-09-11 10:05:39", "authoredDateTime": "2016-09-11 10:05:39", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "core/src/main/java/org/powermock/core/classloader/DeferSupportingClassLoader.java", "insertions": 29, "deletions": 13, "lines": 42}, {"filePath": "core/src/test/java/org/powermock/core/classloader/MockClassLoaderTest.java", "insertions": 32, "deletions": 12, "lines": 44}, {"filePath": "examples/spring-mockito-delegate/pom.xml", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "examples/spring-mockito-delegate/src/test/java/org/powermock/examples/spring/mockito/PowermockClassLoadTest.java", "insertions": 36, "deletions": 0, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DeferSupportingClassLoader.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(java.lang.String,boolean)", "TOT": 24, "UPD": 3, "INS": 1, "MOV": 19, "DEL": 1}, {"spoonMethodName": "org.powermock.core.classloader.DeferSupportingClassLoader.loadClass1(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.classloader.DeferSupportingClassLoader.findLoadedClass1(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockClassLoaderTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.MockClassLoaderTest.autoboxingWorks()", "TOT": 50, "UPD": 11, "INS": 7, "MOV": 25, "DEL": 7}, {"spoonMethodName": "org.powermock.core.classloader.MockClassLoaderTest.canLoadDefinedClass()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PowermockClassLoadTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.examples.spring.mockito.PowermockClassLoadTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "powermock searches only for \"java.\" when checking if type is java system class", "body": "When mocking e.g. javax.security.auth.Subject powermock (in conjunction with mockito) throws an exception, that it cannot mock final classes. \nAs https://www.jayway.com/2009/05/17/mocking-static-methods-in-java-system-classes/ states powermock will create a new class at runtime with the same structure and create a mock of that class instead. This works only for classes of the package \"java.*\", as you can see in https://github.com/jayway/powermock/blob/master/api/mockito/src/main/java/org/powermock/api/mockito/internal/mockcreation/MockCreator.java#L93.\n\nBut what about the \"javax.*\" package?\n", "url": "https://github.com/powermock/powermock/issues/688", "user": "michbeck100", "labels": ["Cannot reproduce", "bug", "component:core"], "created": "2016-08-17 08:54:17", "closed": "2016-08-28 11:44:57", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Not compatible with JUnitParams when using @PowerMockRunnerDelegate(JUnitParamsRunner.class", "body": "I have the following unit test:\n\n```\nimport junitparams.JUnitParamsRunner;\nimport junitparams.Parameters;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.modules.junit4.PowerMockRunner;\nimport org.powermock.modules.junit4.PowerMockRunnerDelegate;\n\nimport static org.junit.Assert.assertTrue;\n\n/**\n * Created by fify on 7/28/16.\n */\n@RunWith(PowerMockRunner.class)\n@PowerMockRunnerDelegate(JUnitParamsRunner.class)\npublic class PowerMockWithJUnitParamsTest {\n    @Test\n    @Parameters({\"1, 2, 3\", \"3, 4, 7\"})\n    public void testParameters(int a, int b, int check) {\n        assertTrue(a + b == check);\n    }\n}\n```\n\nBut when I ran it, the following exception was thrown: \n\n```\njava.lang.IllegalStateException: No match found\n    at java.util.regex.Matcher.group(Matcher.java:536)\n    at java.util.regex.Matcher.group(Matcher.java:496)\n    at org.powermock.modules.junit4.internal.impl.NotificationBuilder.determineTestMethod(NotificationBuilder.java:141)\n    at org.powermock.modules.junit4.internal.impl.NotificationBuilder.access$000(NotificationBuilder.java:37)\n    at org.powermock.modules.junit4.internal.impl.NotificationBuilder$OngoingTestRun.<init>(NotificationBuilder.java:85)\n    at org.powermock.modules.junit4.internal.impl.NotificationBuilder.testStartHasBeenFired(NotificationBuilder.java:231)\n    at org.powermock.modules.junit4.internal.impl.PowerMockRunNotifier.fireTestStarted(PowerMockRunNotifier.java:109)\n    at org.junit.internal.runners.model.EachTestNotifier.fireTestStarted(EachTestNotifier.java:42)\n    at junitparams.internal.ParameterisedTestMethodRunner.runMethodInvoker(ParameterisedTestMethodRunner.java:45)\n    at junitparams.internal.ParameterisedTestMethodRunner.runTestMethod(ParameterisedTestMethodRunner.java:40)\n    at junitparams.internal.ParameterisedTestClassRunner.runParameterisedTest(ParameterisedTestClassRunner.java:146)\n    at junitparams.JUnitParamsRunner.runChild(JUnitParamsRunner.java:417)\n    at junitparams.JUnitParamsRunner.runChild(JUnitParamsRunner.java:386)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.powermock.modules.junit4.internal.impl.DelegatingPowerMockRunner$2.call(DelegatingPowerMockRunner.java:143)\n    at org.powermock.modules.junit4.internal.impl.DelegatingPowerMockRunner$2.call(DelegatingPowerMockRunner.java:136)\n    at org.powermock.modules.junit4.internal.impl.DelegatingPowerMockRunner.withContextClassLoader(DelegatingPowerMockRunner.java:127)\n    at org.powermock.modules.junit4.internal.impl.DelegatingPowerMockRunner.run(DelegatingPowerMockRunner.java:136)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:106)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:78)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:212)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:68)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)\n```\n\nThe **DisplayName** passed with `description.getDisplayName()` looks like \n\n> [0] 1, 2, 3 (testParameters)(cn.irenshi.biz.attendance.service.PowerMockWithJUnitParamsTest)\n\nBut the `org.powermock.modules.junit4.internal.impl.NotificationBuilder` only accepts descriptions matches `^[^\\(\\[]++`. \n\nAlthough there is a workround, I think we should accept more method description formats.\n\n---\n\n**Workaround:** Set the `JUnitParams.flat` system property.\nFor example, if you use maven, you can set it like: \n\n```\n<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-surefire-plugin</artifactId>\n    <version>2.19.1</version>\n    <configuration>\n        <systemPropertyVariables>\n            <JUnitParams.flat>true</JUnitParams.flat>\n        </systemPropertyVariables>\n    </configuration>\n</plugin>\n```\n\r\n\r\n<!---\r\n@huboard:{\"milestone_order\":716.517925,\"order\":732.0,\"custom_state\":\"\"}\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/685", "user": "wangjingfei", "labels": ["Priority:Low", "bug", "good first issue"], "created": "2016-07-28 06:30:25", "closed": "2019-08-31 11:50:10", "commits": {"62b495cc92f130e8a75c5130f2e9b53d8be3ccf5": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}}, "ttf": 1129.0002777777777, "commitsDetails": [{"commitHash": "62b495cc92f130e8a75c5130f2e9b53d8be3ccf5", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["37904cda43869b31d373309cc278fad97152ff91"], "nameRev": "62b495cc92f130e8a75c5130f2e9b53d8be3ccf5 tags/powermock-2.0.4~4", "commitMessage": "Fixes #685 : Add new method display name pattern for providing compatibility with pl.pragmatists:JUnitParams before 1.0.6 (#998) [ci maven-central-release]\n\n", "commitDateTime": "2019-08-31 12:50:09", "authoredDateTime": "2019-08-31 15:50:09", "commitGitStats": [{"filePath": "powermock-modules/powermock-module-junit4/src/main/java/org/powermock/modules/junit4/internal/impl/NotificationBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/mockito/build.gradle", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "tests/mockito/junit4-delegate/src/test/java/powermock/modules/test/mockito/junit4/delegate/JUnitParamsTest.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NotificationBuilder.java", "spoonMethods": [{"spoonMethodName": "org.powermock.modules.junit4.internal.impl.NotificationBuilder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JUnitParamsTest.java", "spoonMethods": [{"spoonMethodName": "powermock.modules.test.mockito.junit4.delegate.JUnitParamsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Problem when building Mocktio2 with gradle", "body": "Hi PowerMock team,\n\nI've never used Powermock but I ran into some trouble getting it up and running. \nI am aware that the support for Mockito v2 is experimental and maybe I'm a bit too deep for my own good. :)\n\nThe initial building of the project works fine. \n\nAfter that I have only added the\n@RunWith(PowerMockRunner.class), not using any other features so far. \nWhen I execute the test I get the following stacktrace:\n\n`org.powermock.reflect.exceptions.FieldNotFoundException: No instance field named \"reporter\" could be found in the class hierarchy of org.mockito.internal.MockitoCore.\n    at org.powermock.reflect.internal.matcherstrategies.FieldNameMatcherStrategy.notFound(FieldNameMatcherStrategy.java:40)\n    at org.powermock.reflect.internal.WhiteboxImpl.findSingleFieldUsingStrategy(WhiteboxImpl.java:492)\n    at org.powermock.reflect.internal.WhiteboxImpl.findFieldInHierarchy(WhiteboxImpl.java:445)\n    at org.powermock.reflect.internal.WhiteboxImpl.findFieldInHierarchy(WhiteboxImpl.java:433)\n    at org.powermock.reflect.internal.WhiteboxImpl.getInternalState(WhiteboxImpl.java:417)\n    at org.powermock.reflect.Whitebox.getInternalState(Whitebox.java:292)\n    at org.powermock.api.extension.reporter.MockingFrameworkReporterFactoryImpl$MockitoMockingFrameworkReporter.getMockitoReporter(MockingFrameworkReporterFactoryImpl.java:28)\n    at org.powermock.api.extension.reporter.MockingFrameworkReporterFactoryImpl$MockitoMockingFrameworkReporter.enable(MockingFrameworkReporterFactoryImpl.java:38)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:120)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)`\n\nI'm building through Android studio 2.1 and my dependencies are:\n\n```\ntestCompile 'junit:junit:4.12'\ntestCompile 'org.mockito:mockito-core:2.0.78-beta'\ntestCompile 'org.powermock:powermock-api-mockito2:1.6.5'\ntestCompile 'org.powermock:powermock-module-junit4:1.6.5'\n```\n\nI'm using windows 10.\n\nNow I looked in the Mockito project and found this commit where the Reporter class is refactored and moved which I would guess at least in part is the cause for the error:\nhttps://github.com/mockito/mockito/commit/e2b7ee2597bb4aa1d840b0af1e902d1445be9767\n\nI quickly tried to downgrade the verion of Mockito to 2.0.0-beta (didn't check exact version the change was introduced in) and the error disappeared.\n\nIf this is not the cause or related to it I'm out of ideas.\n\nThank you!\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/681", "user": "HGyllensvard", "labels": ["bug", "component:mockito"], "created": "2016-07-04 21:51:18", "closed": "2016-07-24 10:07:44", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "java.lang.NoClassDefFoundError: org/mockito/MockitoAnnotations$Mock", "body": "PowerMock version 1.6.5 fails to initiate during a test due to a class that was removed in newer versions of Mockito 2.\n\nI don't know the exact version when it started failing, but currently:\n\n``` javascript\n\"org.powermock:powermock-api-mockito2:1.6.5\"\n```\n\nhas a dependency on Mockito **2.0.42-Beta**.  All works fine.\n\nHowever, if Mockito is explicitly updated to newer versions (e.g. `2.0.70-Beta` at time of this issue submission), PowerMock fails during initialization with the following issue:\n\n``` javascript\njava.lang.NoClassDefFoundError: org/mockito/MockitoAnnotations$Mock\n\n    at org.powermock.api.extension.listener.AnnotationEnabler.getMockAnnotations(AnnotationEnabler.java:117)\n    at org.powermock.api.extension.listener.AnnotationEnabler.standardInject(AnnotationEnabler.java:73)\n    at org.powermock.api.extension.listener.AnnotationEnabler.beforeTestMethod(AnnotationEnabler.java:55)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.powermock.reflect.internal.WhiteboxImpl.performMethodInvocation(WhiteboxImpl.java:1899)\n    at org.powermock.reflect.internal.WhiteboxImpl.invokeMethod(WhiteboxImpl.java:691)\n    at org.powermock.reflect.Whitebox.invokeMethod(Whitebox.java:415)\n    at org.powermock.modules.testng.PowerMockTestCase.injectMocks(PowerMockTestCase.java:165)\n    at org.powermock.modules.testng.PowerMockTestCase.beforePowerMockTestMethod(PowerMockTestCase.java:89)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\n    at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)\n    at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)\n    at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)\n    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\n    at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\n    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\n    at org.testng.TestRunner.privateRun(TestRunner.java:782)\n    at org.testng.TestRunner.run(TestRunner.java:632)\n    at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\n    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:268)\n    at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n    at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\n    at org.testng.TestNG.run(TestNG.java:1064)\n    at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:74)\n    at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:121)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\nCaused by: java.lang.ClassNotFoundException: org.mockito.MockitoAnnotations$Mock\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    ... 42 more\n```\n\nThe issue occurs in Line 117 of `AnnotationEnabler.java`:\n\n``` java\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public Class<? extends Annotation>[] getMockAnnotations() {\n        return new Class[]{org.mockito.Mock.class, Mock.class, org.powermock.core.classloader.annotations.Mock.class};\n    }\n```\n\nThe issue is that `Mock.class` is imported as: `import org.mockito.MockitoAnnotations.Mock`.\n\nUnfortunately, in later versions of Mockito2, MockitoAnnotations does **not** include the `Mock` interface found in earlier versions as it was deprecated and has since been removed.\n\nSee: https://github.com/mockito/mockito/blob/883117afbbafef0cbe8908a3d0d77e15391fe880/src/main/java/org/mockito/MockitoAnnotations.java\n\nThe easiest fix appears to be to just remove `Mock.class` from the array of `Class[]` annotations returned by the `getMockAnnotations` function.\n\nIn the meantime, we are staying with version `2.0.42-Beta` that is brought in when including the `powermock-api-mockito2` library.\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/678", "user": "nkoterba", "labels": ["Resolved", "bug", "component:mockito"], "created": "2016-06-21 19:14:41", "closed": "2017-06-16 15:45:49", "commits": {}, "ttf": 359.0002777777778, "commitsDetails": []}, {"title": "Using Powermock with Roo/AspectJ gives NullPointerException", "body": "**What steps will reproduce the problem?**\n- Have one Class under Test with @RooJpaActiveRecord Annotation, so that it gets \n  \"declare @type: TestClass: @Configurable;\" via roo\n- Create a test with:\n  @RunWith(PowerMockRunner.class)\n  @PrepareForTest(TestClass.class)\n  PowerMockito.mockStatic(TestClass.class)\n  Create a new object calling new TestClass()\n\n(I have a ready to use example @ [Stackoverflow](http://stackoverflow.com/questions/37706887/powermockito-and-aspectj-giving-me-nullpointerexception/))\n\n**What is the expected output?**\nThe object gets created\n\n**What do you see instead?**\n\n```\njava.lang.NullPointerException\n    at org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect.ajc$if$bb0(AnnotationBeanConfigurerAspect.aj:1)\n    at test.TestClass.<init>(TestClass.java:6)\n    at test.PowermockTest.test_aroundBody0(PowermockTest.java:23)\n    at test.PowermockTest.test(PowermockTest.java:17)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:316)\n    at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89)\n    at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:300)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:288)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:208)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:147)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:121)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:123)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:121)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:119)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\n```\n\n**What version of the product are you using?**\nPowermock 1.6.5 (LATEST at this time):\npowermock-module-junit4\npowermock-api-mockito\npowermock-module-junit4-rule\npowermock-classloading-xstream\n\njunit 4.12 (LATEST)\nmockito-all 1.10.19 (LATEST; also tried with 2.0.2-beta)\nspring-aspects-4.2.6.RELEASE (LATEST)\n\n**On what operating system?**\nLinux Mint 17.3\nOracle Java 1.7.0_80\n\n**Please provide any additional information below.** \nIn MockGateway, doMethodCall: `shouldMockMethod(methodName, sig)` should return false \n\nThe annotation methods should not be mocked and instead proceed to call the actual method. \n\nRight now, they return mocked values.\nisAnnotationPresent returns false, getAnnotation returns null.\nBecause of this, the code in AnnotationBeanConfigurerAspect (spring-aspects), returns a NPE here:\n\n```\npublic static final boolean ajc$if$bb0(Configurable c) {\n        return c.preConstruction();\n    }\n```\n", "url": "https://github.com/powermock/powermock/issues/676", "user": "ssaip", "labels": ["bug", "component:core"], "created": "2016-06-09 07:57:42", "closed": "2016-07-02 07:40:36", "commits": {"427ec3851d57c84b1db107f48a363fde2b114218": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "427ec3851d57c84b1db107f48a363fde2b114218", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["bc2b791b7c7c84953af69ea4863eb733c6d35b01"], "nameRev": "427ec3851d57c84b1db107f48a363fde2b114218 tags/powermock-1.6.6~26", "commitMessage": "Fix #676: Do not mock class annotations\n\nPowermock will no longer mock the class methods isAnnotationPresent(Class) and getAnnotation(Class) and instead return the actual values.", "commitDateTime": "2016-07-02 09:40:35", "authoredDateTime": "2016-07-02 09:40:35", "commitGitStats": [{"filePath": "core/src/main/java/org/powermock/core/MockGateway.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/getannotation/GetAnnotationTest.java", "insertions": 81, "deletions": 0, "lines": 81}, {"filePath": "tests/utils/src/main/java/samples/annotationbased/AnnotatedClassDemo.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "tests/utils/src/main/java/samples/annotationbased/testannotations/RuntimeAnnotation.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockGateway.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.MockGateway.shouldMockMethod(java.lang.String,java.lang.Class[])", "TOT": 9, "UPD": 0, "INS": 3, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.powermock.core.MockGateway", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.isAnnotationMethod(java.lang.String,java.lang.Class[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GetAnnotationTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.getannotation.GetAnnotationTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AnnotatedClassDemo.java", "spoonMethods": [{"spoonMethodName": "samples.annotationbased.AnnotatedClassDemo", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RuntimeAnnotation.java", "spoonMethods": [{"spoonMethodName": "samples.annotationbased.testannotations", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["427ec3851d57c84b1db107f48a363fde2b114218"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 35, "deletions": 0, "lines": 35, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 13, "UPD": 0, "INS": 7, "MOV": 5, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["tests/utils/src/main/java/samples/annotationbased/testannotations", "core/src/main/java/org/powermock/core", "tests/utils/src/main/java/samples/annotationbased"], "changesInPackagesSPOON": ["samples.annotationbased.AnnotatedClassDemo", "org.powermock.core.MockGateway.isAnnotationMethod(java.lang.String,java.lang.Class[])", "org.powermock.core.MockGateway.shouldMockMethod(java.lang.String,java.lang.Class[])", "samples.annotationbased.testannotations", "org.powermock.core.MockGateway"]}, {"title": "@Mock fields are not injected anymore (1.6.5 regression)", "body": "Hi,\nAfter upgrading from 1.6.4 to 1.6.5, a lot of tests are failing.\nQuick investigation shows that @Mock marked fields don't get injected anymore.\n\n``` java\nimport static org.easymock.EasyMock.expect;\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertTrue;\nimport static org.junit.Assert.assertNull;\nimport static org.powermock.api.easymock.PowerMock.replayAll;\nimport static org.powermock.api.easymock.PowerMock.verifyAll;\nimport static org.powermock.reflect.Whitebox.setInternalState;\n\nimport org.easymock.EasyMock;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.easymock.annotation.Mock;\nimport org.powermock.api.extension.listener.AnnotationEnabler;\nimport org.powermock.core.classloader.annotations.PowerMockListener;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\n@PowerMockListener(AnnotationEnabler.class)\npublic class IncidentFacadeImplTest {\n\n    @Mock\n    private IncidentPropertyChangeDAO incidentPropertyChangeDAO;\n}\n```\n\nI assume this has something to do with the processing of the `AnnotationEnabler`, but as this is a minor update, it shouldn't break.\n\nUsing this with EasyMock 3.4 and JUnit 4.12\n", "url": "https://github.com/powermock/powermock/issues/668", "user": "andrei-ivanov", "labels": ["bug", "component:easymock"], "created": "2016-05-02 10:20:03", "closed": "2016-05-02 16:33:27", "commits": {"6a95e82e15f3797cd743d64683554741d3102db9": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "fdcf3d90fa071ba96befdb058ed0c4d09558efe7": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "b17f283febfc935f8efb1b031607d8f4dd5b4fec": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "c063ab9adea2633326e4240d3e4ad234feb88a2d": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6a95e82e15f3797cd743d64683554741d3102db9", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fdcf3d90fa071ba96befdb058ed0c4d09558efe7", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b17f283febfc935f8efb1b031607d8f4dd5b4fec", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c063ab9adea2633326e4240d3e4ad234feb88a2d", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["90ebb0aeed20846cc14a882d5b3cbda24689eaba"], "nameRev": "c063ab9adea2633326e4240d3e4ad234feb88a2d tags/powermock-1.6.6~30", "commitMessage": "Fix #668 @Mock fields are not injected anymore (1.6.5 regression) (#669)\n\nIt was incorrect implementation of the field search. The searcher should (to work in same way as EasyMock):\r\n\r\n* Search field by annotation (if only one field with given annotation)\r\n* Search field by qualifier (fieldNameattribute of annotation)\r\n* Search field by type.", "commitDateTime": "2016-05-02 18:33:27", "authoredDateTime": "2016-05-02 18:33:27", "commitGitStats": [{"filePath": "api/easymock/src/main/java/org/powermock/api/extension/InjectFieldSearcher.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "api/easymock/src/main/java/org/powermock/api/extension/listener/AnnotationGlobalMetadata.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "api/easymock/src/main/java/org/powermock/api/extension/listener/AnnotationMockMetadata.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "api/easymock/src/main/java/org/powermock/api/extension/listener/AnnotationMockScanner.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "api/easymock/src/main/java/org/powermock/api/extension/listener/DefaultInjectFieldSearcher.java", "insertions": 83, "deletions": 0, "lines": 83}, {"filePath": "api/easymock/src/main/java/org/powermock/api/extension/listener/EasyMockAnnotationSupport.java", "insertions": 7, "deletions": 25, "lines": 32}, {"filePath": "api/easymock/src/main/java/org/powermock/api/extension/listener/MockMetadata.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "api/easymock/src/main/java/org/powermock/api/extension/listener/TestSubjectInjector.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "changelog.txt", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "modules/module-test/easymock/junit410-test/src/test/java/samples/junit410/github668/Github668.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "modules/module-test/easymock/junit410-test/src/test/java/samples/junit410/github668/IncidentPropertyChangeDAO.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "modules/module-test/easymock/junit410-test/src/test/java/samples/junit410/github668/package-info.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "modules/module-test/easymock/junit412-test/pom.xml", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "modules/module-test/easymock/junit412-test/src/test/java/samples/junit412/expectnew/ExpectNewDemoTest.java", "insertions": 663, "deletions": 0, "lines": 663}, {"filePath": "modules/module-test/easymock/junit412-test/src/test/java/samples/junit412/expectnew/ExpectNewOfFinalSystemClassTest.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "modules/module-test/easymock/junit412-test/src/test/java/samples/junit412/github668/Github668Test.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "modules/module-test/easymock/junit412-test/src/test/java/samples/junit412/github668/IncidentPropertyChangeDAO.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "modules/module-test/easymock/junit412-test/src/test/java/samples/junit412/github668/TwoMockFieldsWithDifferentTypesClass.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "modules/module-test/easymock/junit412-test/src/test/java/samples/junit412/github668/TwoMockFieldsWithSameTypeCase.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "modules/module-test/easymock/junit412-test/src/test/java/samples/junit412/github668/package-info.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "TooManyActualInvocations when class is prepared for test.", "body": "What steps will reproduce the problem?\nCode:\n\n``` java\nimport org.powermock.api.mockito.PowerMockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.testng.PowerMockTestCase;\nimport org.testng.annotations.Test;\n\nimport static org.mockito.Mockito.verify;\n\n@PrepareForTest({ SimpleTest2.SimpleFoo.class })\npublic class SimpleTest2 extends PowerMockTestCase {\n\n    @Test\n    public void testSetFoo() {\n        SimpleTest2.SimpleFoo foo = PowerMockito.spy(new SimpleTest2.SimpleFoo());\n\n        foo.setFoo(\" \");\n\n        verify(foo).setFoo(\" \");\n    }\n\n    public static class SimpleFoo {\n\n        private String foo;\n\n        public void setFoo(String foo) {\n            this.foo = foo;\n        }\n    }\n}\n```\n\nWhat is the expected output?\nTest passes\nWhat do you see instead?\n\n``` java\norg.mockito.exceptions.verification.TooManyActualInvocations: \nsimpleFoo.setFoo(\" \");\nWanted 1 time:\n-> at fr.generix.metier.bc4j.produit.SimpleTest2.testSetFoo(SimpleTest2.java:18)\nBut was 3 times. Undesired invocation:\n-> at fr.generix.metier.bc4j.produit.SimpleTest2.testSetFoo(SimpleTest2.java:16)\n\n    at fr.generix.metier.bc4j.produit.SimpleTest2.testSetFoo(SimpleTest2.java:18)\n\n```\n\nWhat version of the product are you using?\nPowerMock 1.6.2\nTestNG 6.9.4\nOn what operating system?\nWin 10\n\nPlease provide any additional information below. \nIf \n\n``` java\n@PrepareForTest({ SimpleTest2.SimpleFoo.class })\n```\n\nis commented out - test passes.\n\nif \n\n``` java\nSimpleFoo foo = Mockito.spy(new SimpleTest2.SimpleFoo());\n```\n\nis used instead of PowerMockito's one - test passes.\n\nMost annoyingly, if \n\n``` java\n@PrepareForTest({ SimpleTest2.SimpleFoo.class })\n```\n\nis not on the current test suite class but on any other, then the test either passes or not. I guess it depends on order of tests execution. Still, it adds unpredicatability to tests results which is very annoying.\n", "url": "https://github.com/powermock/powermock/issues/656", "user": "Otanikotani", "labels": ["bug", "component:mockito", "component:testng"], "created": "2016-04-06 08:58:42", "closed": "2016-07-17 18:04:18", "commits": {"33fc4718195526f03d7f27823a2ede2ed1ad373c": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "d17c10d778e30b0467717f1587dcf606bcfe6f88": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "adeae2e1bc4b7d572518fe476caaf5347d7b399d": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}, "e386adc01057305d826ed7c271eefd9a0b5d39fc": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 102.00027777777778, "commitsDetails": [{"commitHash": "33fc4718195526f03d7f27823a2ede2ed1ad373c", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d17c10d778e30b0467717f1587dcf606bcfe6f88", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "adeae2e1bc4b7d572518fe476caaf5347d7b399d", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["d44a8f435d6e2b4d7753d9cb93a7dac9f30484c2"], "nameRev": "adeae2e1bc4b7d572518fe476caaf5347d7b399d tags/powermock-1.6.6~20^2", "commitMessage": "Fix #656 TooManyActualInvocations when class is prepared for test.\n", "commitDateTime": "2016-07-17 16:26:07", "authoredDateTime": "2016-07-16 15:04:16", "commitGitStats": [{"filePath": "api/mockito2/src/main/java/org/powermock/api/mockito/internal/invocation/ToStringGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "changelog.txt", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "core/pom.xml", "insertions": 28, "deletions": 6, "lines": 34}, {"filePath": "examples/jmock/pom.xml", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "modules/module-test/mockito/testng/src/test/java/samples/testng/bugs/github656/GitHub656Test.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "modules/module-test/mockito/testng/src/test/java/samples/testng/bugs/github656/package-info.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "reflect/src/main/java/org/powermock/reflect/internal/Constructor.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "reflect/src/main/java/org/powermock/reflect/internal/ConstructorFinder.java", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ToStringGenerator.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.invocation.ToStringGenerator.generate(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GitHub656Test.java", "spoonMethods": [{"spoonMethodName": "samples.testng.bugs.github656.GitHub656Test", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}, {"spoonFilePath": "Constructor.java", "spoonMethods": []}, {"spoonFilePath": "ConstructorFinder.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "e386adc01057305d826ed7c271eefd9a0b5d39fc", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["65d7b5f1021098125536fcd3d2cba7851ef432e2", "adeae2e1bc4b7d572518fe476caaf5347d7b399d"], "nameRev": "e386adc01057305d826ed7c271eefd9a0b5d39fc tags/powermock-1.6.6~20", "commitMessage": "Fix #656 TooManyActualInvocations when class is prepared for test. \n\n* Refactoring: Move ProxyFramework into  reflection module.\r\n* Fix #656 TooManyActualInvocations when class is prepared for test.\r\n", "commitDateTime": "2016-07-17 20:04:17", "authoredDateTime": "2016-07-17 20:04:17", "commitGitStats": [{"filePath": "api/easymock/src/main/java/org/powermock/api/extension/proxyframework/ProxyFrameworkImpl.java", "insertions": 0, "deletions": 33, "lines": 33}, {"filePath": "api/mockito-common/src/main/java/org/powermock/api/mockito/expectation/reporter/MockitoPowerMockReporter.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "api/mockito/src/main/java/org/powermock/api/extension/proxyframework/ProxyFrameworkImpl.java", "insertions": 0, "deletions": 54, "lines": 54}, {"filePath": "api/mockito/src/main/java/org/powermock/api/mockito/internal/invocation/ToStringGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "api/mockito2/src/main/java/org/powermock/api/extension/proxyframework/ProxyFrameworkImpl.java", "insertions": 0, "deletions": 55, "lines": 55}, {"filePath": "api/mockito2/src/main/java/org/powermock/api/mockito/internal/invocation/ToStringGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "changelog.txt", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "core/pom.xml", "insertions": 28, "deletions": 6, "lines": 34}, {"filePath": "core/src/main/java/org/powermock/core/reporter/PowerMockReporter.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/src/main/java/org/powermock/tests/utils/impl/AbstractCommonTestSuiteChunkerImpl.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "core/src/main/java/org/powermock/tests/utils/impl/AbstractTestSuiteChunkerImpl.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "examples/jmock/pom.xml", "insertions": 2, "deletions": 10, "lines": 12}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/modules/agent/support/PowerMockAgentTestInitializer.java", "insertions": 6, "deletions": 32, "lines": 38}, {"filePath": "modules/module-impl/junit4-rule-agent/src/main/java/org/powermock/modules/junit4/rule/PowerMockRule.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "modules/module-impl/junit4-rule/src/main/java/org/powermock/modules/junit4/rule/PowerMockClassloaderExecutor.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "modules/module-impl/testng/src/main/java/org/powermock/modules/testng/internal/PowerMockClassloaderObjectFactory.java", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "modules/module-test/junit4/src/main/java/org/powermock/api/extension/proxyframework/ProxyFrameworkImpl.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "modules/module-test/mockito/junit4-agent/pom.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/WhenNewTest.java", "insertions": 2, "deletions": 540, "lines": 542}, {"filePath": "modules/module-test/mockito/junit4-delegate/pom.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "modules/module-test/mockito/junit4-delegate/src/test/java/powermock/modules/test/mockito/junit4/delegate/WhenNewCaseMethod.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "modules/module-test/mockito/junit4-delegate/src/test/java/powermock/modules/test/mockito/junit4/delegate/parameterized/WhenNewTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "modules/module-test/mockito/junit4-java8-agent/pom.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/pom.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/WhenNewTest.java", "insertions": 2, "deletions": 541, "lines": 543}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/pom.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/WhenNewTest.java", "insertions": 2, "deletions": 543, "lines": 545}, {"filePath": "modules/module-test/mockito/junit4/pom.xml", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "modules/module-test/mockito/{junit4-delegate/src/test/java/powermock/modules/test/mockito/junit4/delegate => junit4/src/test/java/samples/powermockito/junit4/whennew}/WhenNewCases.java", "insertions": 107, "deletions": 12, "lines": 119}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/whennew/WhenNewTest.java", "insertions": 1, "deletions": 583, "lines": 584}, {"filePath": "modules/module-test/mockito/testng/src/test/java/samples/testng/bugs/github656/GitHub656Test.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "modules/module-test/mockito/testng/src/test/java/samples/testng/bugs/github656/package-info.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "modules/module-test/testng/src/test/java/org/powermock/api/extension/proxyframework/ProxyFrameworkImpl.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "reflect/pom.xml", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "reflect/src/main/java/org/powermock/reflect/Whitebox.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "reflect/src/main/java/org/powermock/reflect/internal/Constructor.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "reflect/src/main/java/org/powermock/reflect/internal/ConstructorFinder.java", "insertions": 128, "deletions": 0, "lines": 128}, {"filePath": "reflect/src/main/java/org/powermock/reflect/internal/ParameterTypesMatcher.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "reflect/src/main/java/org/powermock/reflect/internal/ParametersMatcher.java", "insertions": 86, "deletions": 0, "lines": 86}, {"filePath": "reflect/src/main/java/org/powermock/reflect/internal/WhiteboxImpl.java", "insertions": 30, "deletions": 105, "lines": 135}, {"filePath": "reflect/src/main/java/org/powermock/reflect/internal/proxy/ProxyFrameworks.java", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "reflect/src/main/java/org/powermock/reflect/proxyframework/ClassLoaderRegisterProxyFramework.java", "insertions": 0, "deletions": 31, "lines": 31}, {"filePath": "reflect/src/main/java/org/powermock/reflect/proxyframework/ProxyFrameworkHelper.java", "insertions": 0, "deletions": 53, "lines": 53}, {"filePath": "reflect/src/main/java/org/powermock/reflect/proxyframework/RegisterProxyFramework.java", "insertions": 0, "deletions": 20, "lines": 20}, {"filePath": "reflect/src/main/java/org/powermock/reflect/spi/ProxyFramework.java", "insertions": 0, "deletions": 23, "lines": 23}, {"filePath": "reflect/src/test/java/org/powermock/reflect/WhiteBoxTest.java", "insertions": 697, "deletions": 712, "lines": 1409}, {"filePath": "reflect/src/test/java/org/powermock/reflect/internal/proxy/ProxyFrameworksTest.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "reflect/src/test/java/org/powermock/reflect/internal/proxy/SomeClass.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "reflect/src/test/java/org/powermock/reflect/internal/proxy/SomeInterface.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "tests/utils/src/main/java/samples/expectnew/ExpectNewDemo.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "tests/utils/src/main/java/samples/expectnew/SimpleVarArgsConstructorDemo.java", "insertions": 31, "deletions": 0, "lines": 31}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["adeae2e1bc4b7d572518fe476caaf5347d7b399d"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 5.0, "lines": 6.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 1.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["reflect/src/main/java/org/powermock/reflect/internal", "api/mockito2/src/main/java/org/powermock/api/mockito/internal"], "changesInPackagesSPOON": ["org.powermock.api.mockito.internal.invocation.ToStringGenerator.generate(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"]}, {"title": "PowerMock stubbing void method don't work for overloaded methods ", "body": "**What steps will reproduce the problem?**\n\n```\n    @Test\n    public void testMockStaticWithExpectations_withDo() throws Exception {\n      final String argument = \"hello\";\n\n      mockStatic(StaticService.class);\n\n      doNothing().when(StaticService.class,\"sayHello\",any(String.class));\n\n      StaticService.sayHello(argument);\n\n      assertThat(StaticService.messageStorage, nullValue());\n\n}\n```\n\n```\n\n```\n\n```\n    public class StaticService {\n\npublic static String messageStorage;\n\npublic static void sayHello(String message) {\n    messageStorage = message;\n}\n\npublic static void sayHello(Integer message) {\n\n}\n```\n\n}\n\n```\n**What is the expected output?**\nTest works fine\n**What do you see instead?**\n\n> java.lang.NullPointerException\n>   at java.lang.Class.isAssignableFrom(Native Method)\n>   at org.powermock.reflect.internal.WhiteboxImpl.checkIfParameterTypesAreSame(WhiteboxImpl.java:2282)\n>   at org.powermock.reflect.internal.WhiteboxImpl.getMethods(WhiteboxImpl.java:1827)\n>   at org.powermock.reflect.internal.WhiteboxImpl.getBestMethodCandidate(WhiteboxImpl.java:983)\n>   at org.powermock.reflect.internal.WhiteboxImpl.findMethodOrThrowException(WhiteboxImpl.java:860)\n>   at org.powermock.reflect.internal.WhiteboxImpl.doInvokeMethod(WhiteboxImpl.java:798)\n>   at org.powermock.reflect.internal.WhiteboxImpl.invokeMethod(WhiteboxImpl.java:781)\n>   at org.powermock.reflect.Whitebox.invokeMethod(Whitebox.java:466)\n>   at org.powermock.api.mockito.internal.expectation.PowerMockitoStubberImpl.when(PowerMockitoStubberImpl.java:112)\n\n**What version of the product are you using?**\nLatest \n```\n", "url": "https://github.com/powermock/powermock/issues/652", "user": "thekingn0thing", "labels": ["Priority:High", "bug", "component:core", "component:mockito"], "created": "2016-03-30 08:30:09", "closed": "2016-04-03 19:10:08", "commits": {"bff2f836ea4addea0a56598ef54d71732d2832e2": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "386d4e602132447908de3db5e1e0e0db82b31b88": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "85a2b1bc9d9eb076021132bd806c925fdaf8013b": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "bff2f836ea4addea0a56598ef54d71732d2832e2", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "386d4e602132447908de3db5e1e0e0db82b31b88", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "85a2b1bc9d9eb076021132bd806c925fdaf8013b", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["29cb7f1da2d1a7ef532c8f63f3ff2bec097bf3a6"], "nameRev": "85a2b1bc9d9eb076021132bd806c925fdaf8013b tags/powermock-1.6.5~17", "commitMessage": "Fix #652 PowerMock stubbing void method don't work for overloaded methods", "commitDateTime": "2016-04-03 22:10:08", "authoredDateTime": "2016-04-03 22:10:08", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/staticmocking/MockStaticTest.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "modules/pom.xml", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "reflect/src/main/java/org/powermock/reflect/internal/ParameterTypesMatcher.java", "insertions": 80, "deletions": 0, "lines": 80}, {"filePath": "reflect/src/main/java/org/powermock/reflect/internal/WhiteboxImpl.java", "insertions": 4, "deletions": 18, "lines": 22}, {"filePath": "tests/utils/src/main/java/samples/singleton/StaticService.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockStaticTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.staticmocking.MockStaticTest.testMockStaticWithExpectations_withDo()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ParameterTypesMatcher.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.ParameterTypesMatcher", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WhiteboxImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.checkIfParameterTypesAreSame(boolean,java.lang.Class[],java.lang.Class[])", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "StaticService.java", "spoonMethods": [{"spoonMethodName": "samples.singleton.StaticService", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.singleton.StaticService.sayHello(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.singleton.StaticService.sayHello(java.lang.Integer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["85a2b1bc9d9eb076021132bd806c925fdaf8013b"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 96.0, "deletions": 19.0, "lines": 115.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 8.0, "UPD": 0.0, "INS": 6.0, "MOV": 0.0, "DEL": 2.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["reflect/src/main/java/org/powermock/reflect/internal", "tests/utils/src/main/java/samples/singleton"], "changesInPackagesSPOON": ["samples.singleton.StaticService", "samples.singleton.StaticService.sayHello(java.lang.Integer)", "samples.singleton.StaticService.sayHello(java.lang.String)", "org.powermock.reflect.internal.WhiteboxImpl.checkIfParameterTypesAreSame(boolean,java.lang.Class[],java.lang.Class[])", "org.powermock.reflect.internal.ParameterTypesMatcher"]}, {"title": "TestNG  SkipException doesn't work with PowerMock ", "body": "TestNG let a use skip a test by throwing `org.testng.SkipException` or any child of exception. But this doesn't work with PowerMock. \n\n> org.testng.SkipException: Skipp test\n> \n>   at samples.testng.FinalTest.mockingFinalClassesAndMethodsWorkWithTestNGAndEasyMock(FinalTest.java:29)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n>   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>   at java.lang.reflect.Method.invoke(Method.java:498)\n>   at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)\n>   at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)\n>   at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)\n>   at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)\n>   at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)\n>   at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)\n>   at org.testng.TestRunner.privateRun(TestRunner.java:782)\n>   at org.testng.TestRunner.run(TestRunner.java:632)\n>   at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)\n>   at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)\n>   at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)\n>   at org.testng.SuiteRunner.run(SuiteRunner.java:268)\n>   at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n>   at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n>   at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)\n>   at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)\n>   at org.testng.TestNG.run(TestNG.java:1064)\n>   at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)\n>   at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n>   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>   at java.lang.reflect.Method.invoke(Method.java:498)\n>   at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\n\nCode: \n\n```\n@PrepareForTest(FinalDemo.class)\npublic class FinalTest extends PowerMockTestCase {\n\n    @Test\n    public void mockingFinalClassesAndMethodsWorkWithTestNGAndEasyMock() throws Exception {\n        throw new SkipException(\"Skip test\");\n    }\n}\n```\n\nIt doesn't work because TestNG handle `SkipException` via `SkipException.class.isAssignableFrom`. But won't work in case if exception is thrown with another class loader, which different from `org.testng.internal.Invoker`.\n", "url": "https://github.com/powermock/powermock/issues/647", "user": "thekingn0thing", "labels": ["bug", "component:testng"], "created": "2016-03-17 15:44:46", "closed": "2016-03-18 08:06:36", "commits": {"b6738408b95a79eb2c4b6de0e14e26f374d9c03f": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "97cb7f03a358d8e00d9da53fd34935c5143a0e0e": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}, "62236dbbb76953158f3a28c0d3a04980f7b9d171": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b6738408b95a79eb2c4b6de0e14e26f374d9c03f", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "97cb7f03a358d8e00d9da53fd34935c5143a0e0e", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["346aed2bf6dfd6276ee36bb814077c5545eecc81"], "nameRev": "97cb7f03a358d8e00d9da53fd34935c5143a0e0e tags/powermock-1.6.5~18^2^2", "commitMessage": "Fix #647 TestNG  SkipException doesn't work with PowerMock\n", "commitDateTime": "2016-03-18 09:48:55", "authoredDateTime": "2016-03-18 09:24:37", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "core/src/main/java/org/powermock/core/classloader/MockClassLoader.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "modules/module-test/pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "modules/module-test/testng/pom.xml", "insertions": 53, "deletions": 0, "lines": 53}, {"filePath": "modules/module-test/testng/src/test/java/org/powermock/api/extension/proxyframework/ProxyFrameworkImpl.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/SimpleBaseTest.java", "insertions": 120, "deletions": 0, "lines": 120}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/powermock647/PowerMock647.java", "insertions": 93, "deletions": 0, "lines": 93}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/powermock647/SkipExceptionTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/powermock647/SomeClass.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "modules/module-test/testng/suite.xml", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockClassLoader.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.MockClassLoader", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProxyFrameworkImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.proxyframework.ProxyFrameworkImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleBaseTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.SimpleBaseTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PowerMock647.java", "spoonMethods": [{"spoonMethodName": "samples.testng.powermock647.PowerMock647", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SkipExceptionTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.powermock647.SkipExceptionTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SomeClass.java", "spoonMethods": [{"spoonMethodName": "samples.testng.powermock647.SomeClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "62236dbbb76953158f3a28c0d3a04980f7b9d171", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["e7ebf7b8b6682960552b1b2322645dc0cdae24c6", "97cb7f03a358d8e00d9da53fd34935c5143a0e0e"], "nameRev": "62236dbbb76953158f3a28c0d3a04980f7b9d171 tags/powermock-1.6.5~18^2", "commitMessage": "Merge pull request #648 from jayway/powermock-647\n\nTestNG SkipException doesn't work with PowerMock #647", "commitDateTime": "2016-03-18 12:06:36", "authoredDateTime": "2016-03-18 12:06:36", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "core/src/main/java/org/powermock/core/classloader/MockClassLoader.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "modules/module-test/pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "modules/module-test/testng/pom.xml", "insertions": 53, "deletions": 0, "lines": 53}, {"filePath": "modules/module-test/testng/src/test/java/org/powermock/api/extension/proxyframework/ProxyFrameworkImpl.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/SimpleBaseTest.java", "insertions": 120, "deletions": 0, "lines": 120}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/powermock647/PowerMock647.java", "insertions": 93, "deletions": 0, "lines": 93}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/powermock647/SkipExceptionTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/powermock647/SomeClass.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "modules/module-test/testng/suite.xml", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockClassLoader.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.MockClassLoader", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProxyFrameworkImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.proxyframework.ProxyFrameworkImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleBaseTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.SimpleBaseTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PowerMock647.java", "spoonMethods": [{"spoonMethodName": "samples.testng.powermock647.PowerMock647", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SkipExceptionTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.powermock647.SkipExceptionTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SomeClass.java", "spoonMethods": [{"spoonMethodName": "samples.testng.powermock647.SomeClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["97cb7f03a358d8e00d9da53fd34935c5143a0e0e"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3.0, "deletions": 2.0, "lines": 5.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5.0, "UPD": 0.0, "INS": 5.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/org/powermock/core/classloader"], "changesInPackagesSPOON": ["org.powermock.api.extension.proxyframework.ProxyFrameworkImpl", "samples.testng.powermock647.PowerMock647", "samples.testng.powermock647.SomeClass", "org.powermock.core.classloader.MockClassLoader"]}, {"title": "jacoco offline instrumentation incompatibility with powermock byte-code manipulation when using @SuppressStaticInitializationFor", "body": "Hi, there is a test project: https://github.com/astafev/jacoco-offline-powermock-junit\n\nThe problem:\nif use @SuppressStaticInitializationFor(\"StaticClass\") and execute mockStatic(StaticClass.class) in the test method, it's impossible to instantiate StaticClass, the exception:\n\n```\njava.lang.NullPointerException\n    at StaticClass.<init>(StaticClass.java:1)\n```\n\nThe problem occurs only when StaticClass is patched with jacoco offline instrumentation.\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/645", "user": "astafev", "labels": ["bug", "good first issue"], "created": "2016-03-14 11:56:20", "closed": "2016-10-31 08:02:03", "commits": {"37858a3c32cd79ce8e1278ed5d3694d4b7a1d1b4": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 230.00027777777777, "commitsDetails": [{"commitHash": "37858a3c32cd79ce8e1278ed5d3694d4b7a1d1b4", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["43254372cba340e6d3db42a78fd0a915cf73af40"], "nameRev": "37858a3c32cd79ce8e1278ed5d3694d4b7a1d1b4 tags/powermock-1.6.6~7", "commitMessage": "Issue #707 PowerMock should ignore and keep without changes synthetic method/fields when modifies class (#710)\n\nAlso fixed issues: #645 #422", "commitDateTime": "2016-10-31 09:00:31", "authoredDateTime": "2016-10-31 09:00:31", "commitGitStats": [{"filePath": "core/src/main/java/org/powermock/core/MockGateway.java", "insertions": 66, "deletions": 65, "lines": 131}, {"filePath": "core/src/main/java/org/powermock/core/classloader/MockClassLoader.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/src/main/java/org/powermock/core/transformers/impl/AbstractMainMockTransformer.java", "insertions": 69, "deletions": 29, "lines": 98}, {"filePath": "core/src/test/java/org/powermock/core/transformers/impl/ClassMockTransformerTest.java", "insertions": 215, "deletions": 9, "lines": 224}, {"filePath": "core/src/test/java/powermock/test/support/MainMockTransformerTestSupport.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "modules/module-test/easymock/junit4-test/src/test/java/samples/junit4/finalmocking/FinalDemoTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/FinalDemoTest.java", "insertions": 0, "deletions": 141, "lines": 141}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/MockFinalNonStaticMethodsTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/FinalDemoTest.java", "insertions": 0, "deletions": 141, "lines": 141}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/MockFinalNonStaticMethodsTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/FinalDemoTest.java", "insertions": 0, "deletions": 141, "lines": 141}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/MockFinalNonStaticMethodsTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "modules/module-test/mockito/junit4/pom.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/{ => bugs}/ClassLoaderBugTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/finalmocking/FinalDemoTest.java", "insertions": 0, "deletions": 135, "lines": 135}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/finalmocking/MockFinalMethodsCases.java", "insertions": 120, "deletions": 0, "lines": 120}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/finalmocking/MockFinalNonStaticMethodsTest.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/InstanceMethods.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/JacocoCoverageTest.java", "insertions": 169, "deletions": 0, "lines": 169}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/StaticMethods.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/TargetTest.java", "insertions": 43, "deletions": 0, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockGateway.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.MockGateway.methodCall(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.newInstanceCall(java.lang.Class,java.lang.Object[],java.lang.Class[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.fieldCall(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.staticConstructorCall(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.constructorCall(java.lang.Class,java.lang.Object[],java.lang.Class[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MockClassLoader.java", "spoonMethods": []}, {"spoonFilePath": "AbstractMainMockTransformer.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.PowerMockExpressionEditor.edit(javassist.expr.FieldAccess)", "TOT": 21, "UPD": 1, "INS": 5, "MOV": 7, "DEL": 8}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.shouldSkipMethod(javassist.CtMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.isAccessFlagSynthetic(javassist.CtMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.isBridgeMethod(javassist.CtMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.isNotSyntheticField(javassist.bytecode.FieldInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.modifyMethod(javassist.CtMethod)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.transform(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.transformMockClass(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ClassMockTransformerTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldLoadClassAndOverrideMethodGreaterThanJvmLimit()", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldIgnoreSyntheticNonBridgeMethods()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldIgnoreCallToSyntheticNonBridgeMethods()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldIgnoreCallToSyntheticField()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldModifyBridgeMethods()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.prepareClassesForFieldTests(javassist.ClassPool)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.insertCallSyntheticMethod(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.addSyntheticField(javassist.ClassPool,javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.prepareClassesForTest(javassist.ClassPool,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.runTestWithNewClassLoader(javassist.ClassPool,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.addCallInterceptorToMockGateway(javassist.ClassPool)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.addSyntheticMethod(javassist.ClassPool,javassist.CtClass,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldIgnoreSyntheticNonBridgeMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldIgnoreCallToSyntheticNonBridgeMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldIgnoreCallToSyntheticField", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldModifyBridgeMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MainMockTransformerTestSupport.java", "spoonMethods": [{"spoonMethodName": "powermock.test.support.MainMockTransformerTestSupport.SuperClassWithObjectMethod", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "powermock.test.support.MainMockTransformerTestSupport.SubclassWithBridgeMethod", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "powermock.test.support.MainMockTransformerTestSupport.CallSpy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FinalDemoTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.finalmocking.FinalDemoTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MockFinalNonStaticMethodsTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.finalmocking.MockFinalNonStaticMethodsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassLoaderBugTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.ClassLoaderBugTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.ClassLoaderBugTest.resourcesAreNotLoadedTwice()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockFinalMethodsCases.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.finalmocking.MockFinalMethodsCases", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InstanceMethods.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.InstanceMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JacocoCoverageTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.JacocoCoverageTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StaticMethods.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.StaticMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TargetTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.TargetTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "PowerMock Agent and TestNG 6.9.+", "body": "PowerMock agent doesn't work with latest version of TestNG 6.9.10. Without using agent all works fine. And with old version TestNG (6.8.21) also works fine \n\nWith using java agent the following exception: \n\n> objc[56954]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/bin/java and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib. One of the two will be used. Which one is undefined.\n> java.lang.VerifyError: Expecting a stackmap frame at branch target 11\n> Exception Details:\n>   Location:\n>     org/testng/internal/ObjectFactoryImpl.newInstance(Ljava/lang/reflect/Constructor;[Ljava/lang/Object;)Ljava/lang/Object; @0: aload_1\n>   Reason:\n>     Expected stackmap frame at this location.\n>   Bytecode:\n>     0x0000000: 2b04 b600 1f2b 2cb6 0022 b04e 2bb6 0026\n>     0x0000010: b800 2cb0 4e2b b600 26b8 002c b04e bb00\n>     0x0000020: 2e59 bb00 3059 b700 3112 33b6 0037 2bc6\n>     0x0000030: 000d 2bb6 0026 b600 3da7 0005 123f b600\n>     0x0000040: 37b6 0042 2db7 0045 bf  \n>   Exception Handler Table:\n>     bci [0, 10] => handler: 11\n>     bci [0, 10] => handler: 20\n>     bci [0, 10] => handler: 29\n> \n>   at org.powermock.modules.testng.PowerMockObjectFactory.<init>(PowerMockObjectFactory.java:37)\n>   at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n>   at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n>   at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n>   at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n>   at java.lang.Class.newInstance(Class.java:442)\n>   at org.testng.xml.TestNGContentHandler.xmlSuite(TestNGContentHandler.java:205)\n>   at org.testng.xml.TestNGContentHandler.startElement(TestNGContentHandler.java:519)\n>   at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:509)\n>   at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.startElement(XMLDTDValidator.java:745)\n>   at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:380)\n>   at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:614)\n>   at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3135)\n>   at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)\n>   at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)\n>   at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:118)\n>   at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)\n>   at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)\n>   at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)\n>   at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)\n>   at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)\n>   at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)\n>   at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:327)\n>   at javax.xml.parsers.SAXParser.parse(SAXParser.java:195)\n>   at org.testng.xml.XMLParser.parse(XMLParser.java:39)\n>   at org.testng.xml.SuiteXmlParser.parse(SuiteXmlParser.java:16)\n>   at org.testng.xml.SuiteXmlParser.parse(SuiteXmlParser.java:9)\n>   at org.testng.xml.Parser.parse(Parser.java:172)\n>   at org.testng.TestNG.initializeSuitesAndJarFile(TestNG.java:305)\n>   at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:44)\n>   at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:122)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n>   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>   at java.lang.reflect.Method.invoke(Method.java:498)\n>   at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\n", "url": "https://github.com/powermock/powermock/issues/640", "user": "thekingn0thing", "labels": ["Priority:High", "bug", "component:testng"], "created": "2016-03-09 05:15:39", "closed": "2016-03-17 08:31:49", "commits": {"e948b49baa7141de7c0e824ad01ba50bb1f05484": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "03a5bf0323cad5674ef15d0b511396be7229caf4": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "e948b49baa7141de7c0e824ad01ba50bb1f05484", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["f76140bbe3128629e5374e0cd1ddf58fd1f2d17a"], "nameRev": "e948b49baa7141de7c0e824ad01ba50bb1f05484 tags/powermock-1.6.5~23^2", "commitMessage": "#640: PowerMock Agent and TestNG 6.9.+. java.lang.VerifyError\n\nASM repackaged from new version 5.0.4\nTestNG classes are added to list classes which should be ignored by agent transformer.\n", "commitDateTime": "2016-03-16 12:44:29", "authoredDateTime": "2016-03-16 12:44:29", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/modules/agent/AbstractClassTransformer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/modules/agent/PowerMockClassVisitor.java", "insertions": 2, "deletions": 15, "lines": 17}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/AnnotationVisitor.java", "insertions": 127, "deletions": 55, "lines": 182}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/AnnotationWriter.java", "insertions": 110, "deletions": 60, "lines": 170}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Attribute.java", "insertions": 123, "deletions": 122, "lines": 245}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/ByteVector.java", "insertions": 122, "deletions": 76, "lines": 198}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/ClassAdapter.java", "insertions": 0, "deletions": 130, "lines": 130}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/ClassReader.java", "insertions": 1888, "deletions": 1430, "lines": 3318}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/ClassVisitor.java", "insertions": 255, "deletions": 131, "lines": 386}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/ClassWriter.java", "insertions": 665, "deletions": 267, "lines": 932}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Context.java", "insertions": 145, "deletions": 0, "lines": 145}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Edge.java", "insertions": 26, "deletions": 26, "lines": 52}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/FieldVisitor.java", "insertions": 122, "deletions": 36, "lines": 158}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/FieldWriter.java", "insertions": 123, "deletions": 69, "lines": 192}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Frame.java", "insertions": 565, "deletions": 532, "lines": 1097}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Handle.java", "insertions": 170, "deletions": 0, "lines": 170}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Handler.java", "insertions": 77, "deletions": 26, "lines": 103}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Item.java", "insertions": 145, "deletions": 86, "lines": 231}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/LICENSE.txt", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Label.java", "insertions": 110, "deletions": 100, "lines": 210}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/MethodAdapter.java", "insertions": 0, "deletions": 219, "lines": 219}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/MethodVisitor.java", "insertions": 714, "deletions": 232, "lines": 946}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/MethodWriter.java", "insertions": 971, "deletions": 659, "lines": 1630}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Opcodes.java", "insertions": 48, "deletions": 34, "lines": 82}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Type.java", "insertions": 272, "deletions": 151, "lines": 423}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/TypePath.java", "insertions": 196, "deletions": 0, "lines": 196}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/TypeReference.java", "insertions": 452, "deletions": 0, "lines": 452}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/package-info.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "modules/module-test/easymock/testng-agent-test/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/easymock/testng-agent-test/src/test/java/samples/testng/agent/MockStaticTest.java", "insertions": 5, "deletions": 17, "lines": 22}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "03a5bf0323cad5674ef15d0b511396be7229caf4", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["a145c719aefa4f3a670aea679bc3624d477fa9c6", "e948b49baa7141de7c0e824ad01ba50bb1f05484"], "nameRev": "03a5bf0323cad5674ef15d0b511396be7229caf4 tags/powermock-1.6.5~23", "commitMessage": "Merge pull request #646 from jayway/powermock-640\n\n#640: PowerMock Agent and TestNG 6.9.+. java.lang.VerifyError", "commitDateTime": "2016-03-16 13:59:54", "authoredDateTime": "2016-03-16 13:59:54", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/modules/agent/AbstractClassTransformer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/modules/agent/PowerMockClassVisitor.java", "insertions": 2, "deletions": 15, "lines": 17}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/AnnotationVisitor.java", "insertions": 127, "deletions": 55, "lines": 182}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/AnnotationWriter.java", "insertions": 110, "deletions": 60, "lines": 170}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Attribute.java", "insertions": 123, "deletions": 122, "lines": 245}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/ByteVector.java", "insertions": 122, "deletions": 76, "lines": 198}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/ClassAdapter.java", "insertions": 0, "deletions": 130, "lines": 130}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/ClassReader.java", "insertions": 1888, "deletions": 1430, "lines": 3318}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/ClassVisitor.java", "insertions": 255, "deletions": 131, "lines": 386}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/ClassWriter.java", "insertions": 665, "deletions": 267, "lines": 932}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Context.java", "insertions": 145, "deletions": 0, "lines": 145}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Edge.java", "insertions": 26, "deletions": 26, "lines": 52}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/FieldVisitor.java", "insertions": 122, "deletions": 36, "lines": 158}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/FieldWriter.java", "insertions": 123, "deletions": 69, "lines": 192}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Frame.java", "insertions": 565, "deletions": 532, "lines": 1097}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Handle.java", "insertions": 170, "deletions": 0, "lines": 170}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Handler.java", "insertions": 77, "deletions": 26, "lines": 103}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Item.java", "insertions": 145, "deletions": 86, "lines": 231}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/LICENSE.txt", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Label.java", "insertions": 110, "deletions": 100, "lines": 210}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/MethodAdapter.java", "insertions": 0, "deletions": 219, "lines": 219}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/MethodVisitor.java", "insertions": 714, "deletions": 232, "lines": 946}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/MethodWriter.java", "insertions": 971, "deletions": 659, "lines": 1630}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Opcodes.java", "insertions": 48, "deletions": 34, "lines": 82}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/Type.java", "insertions": 272, "deletions": 151, "lines": 423}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/TypePath.java", "insertions": 196, "deletions": 0, "lines": 196}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/TypeReference.java", "insertions": 452, "deletions": 0, "lines": 452}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm/package-info.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "modules/module-test/easymock/testng-agent-test/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/easymock/testng-agent-test/src/test/java/samples/testng/agent/MockStaticTest.java", "insertions": 5, "deletions": 17, "lines": 22}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["e948b49baa7141de7c0e824ad01ba50bb1f05484"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7463, "deletions": 4456, "lines": 11919, "gitFilesChange": 27}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["modules/module-impl/agent/src/main/java/org/powermock/objectweb/asm", "modules/module-impl/agent/src/main/java/org/powermock/modules/agent"]}, {"title": "Mockito.when throws NPE if incorrect object is passed.", "body": "Code example: \n\n```\npublic class MockStaticNotPreparedTest {\n\n    @Rule\n    public PowerMockRule rule = new PowerMockRule();\n\n    @Rule\n    public ExpectedException expectedException = ExpectedException.none();\n\n    @Test\n    public void testWhenNotPrepared() throws Exception {\n\n        final String expected = \"Hello world\";\n        final String argument = \"hello\";\n\n        //SuppressMethod suppressMethod = mock(SuppressMethod.class);\n        SuppressMethod suppressMethod = new SuppressMethod();\n\n        //PowerMockito.when(suppressMethod.getBoolean()).thenReturn(true);\n        Mockito.when(suppressMethod.getBoolean()).thenReturn(true);\n\n    }\n\n}\n```\n\nStackTrace:  \n\n> java.lang.ExceptionInInitializerError\n>   at org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter.<init>(ConditionalStackTraceFilter.java:17)\n>   at org.mockito.exceptions.base.MockitoException.filterStackTrace(MockitoException.java:41)\n>   at org.mockito.exceptions.base.MockitoException.<init>(MockitoException.java:30)\n>   at org.mockito.exceptions.misusing.MockitoConfigurationException.<init>(MockitoConfigurationException.java:18)\n>   at org.mockito.internal.configuration.plugins.PluginLoader.loadImpl(PluginLoader.java:66)\n>   at org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:24)\n>   at org.mockito.internal.configuration.plugins.PluginRegistry.<init>(PluginRegistry.java:12)\n>   at org.mockito.internal.configuration.plugins.Plugins.<clinit>(Plugins.java:11)\n>   at org.mockito.internal.util.MockUtil.<clinit>(MockUtil.java:24)\n>   at org.mockito.internal.MockitoCore.<init>(MockitoCore.java:44)\n>   at org.mockito.Mockito.<clinit>(Mockito.java:975)\n>   at org.powermock.modules.test.junit4.rule.objenesis.MockStaticNotPreparedTest.testWhenNotPrepared(MockStaticNotPreparedTest.java:45)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n>   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>   at java.lang.reflect.Method.invoke(Method.java:498)\n>   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n>   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n>   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n>   at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n>   at org.powermock.modules.junit4.rule.PowerMockStatement$1.run(PowerMockRule.java:65)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n>   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>   at java.lang.reflect.Method.invoke(Method.java:498)\n>   at org.powermock.reflect.internal.WhiteboxImpl.performMethodInvocation(WhiteboxImpl.java:1898)\n>   at org.powermock.reflect.internal.WhiteboxImpl.doInvokeMethod(WhiteboxImpl.java:801)\n>   at org.powermock.reflect.internal.WhiteboxImpl.invokeMethod(WhiteboxImpl.java:666)\n>   at org.powermock.reflect.Whitebox.invokeMethod(Whitebox.java:401)\n>   at org.powermock.classloading.ClassloaderExecutor.execute(ClassloaderExecutor.java:98)\n>   at org.powermock.classloading.ClassloaderExecutor.execute(ClassloaderExecutor.java:78)\n>   at org.powermock.modules.junit4.rule.PowerMockStatement.evaluate(PowerMockRule.java:57)\n>   at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:110)\n>   at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)\n>   at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)\n>   at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)\n>   at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n>   at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n>   at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n>   at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n>   at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n>   at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n>   at org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n>   at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\n>   at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)\n>   at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n>   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n>   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n>   at java.lang.reflect.Method.invoke(Method.java:498)\n>   at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\n> Caused by: java.lang.NullPointerException\n>   at org.mockito.internal.configuration.plugins.Plugins.getStackTraceCleanerProvider(Plugins.java:17)\n>   at org.mockito.internal.exceptions.stacktrace.StackTraceFilter.<clinit>(StackTraceFilter.java:21)\n>   ... 51 more\n> \n> Process finished with exit code 255\n\nDependencies: \n\n```\n   <dependency>\n        <groupId>org.powermock</groupId>\n        <artifactId>powermock-classloading-objenesis</artifactId>\n        <version>${project.version}</version>\n    </dependency>\n```\n", "url": "https://github.com/powermock/powermock/issues/632", "user": "thekingn0thing", "labels": ["Priority:High", "bug", "component:mockito"], "created": "2016-03-04 10:31:38", "closed": "2016-03-09 17:16:30", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Powermockito and testng breaks jacoco report on  few tests", "body": "Here is an example project: https://github.com/astafev/powermock-testng-demo\nClassA and ClassB. ClassATest patches ClassB, ClassBTest patches ClassA. As a result in runtime we have both class patched. If run only one test, normal report will be generated; if both - no coverage at all in the report.\n\nIt can be fixed if in org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory all classes will be created with new classloader.\n", "url": "https://github.com/powermock/powermock/issues/608", "user": "astafev", "labels": ["bug", "component:testng"], "created": "2016-01-27 07:28:33", "closed": "2016-03-13 12:25:37", "commits": {"9a6c251a18c87b9a546143ac685438152b766167": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}}, "ttf": 46.000277777777775, "commitsDetails": [{"commitHash": "9a6c251a18c87b9a546143ac685438152b766167", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["a3100123a8a1d3dde73a9facab9300f7d2094181"], "nameRev": "9a6c251a18c87b9a546143ac685438152b766167 tags/powermock-1.6.5~26^2", "commitMessage": "fix #608 make each test class loaded by separate class loader\n", "commitDateTime": "2016-03-12 00:34:46", "authoredDateTime": "2016-01-27 12:34:21", "commitGitStats": [{"filePath": "modules/module-impl/testng/src/main/java/org/powermock/modules/testng/internal/PowerMockClassloaderObjectFactory.java", "insertions": 18, "deletions": 19, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PowerMockClassloaderObjectFactory.java", "spoonMethods": [{"spoonMethodName": "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory", "TOT": 15, "UPD": 6, "INS": 1, "MOV": 4, "DEL": 4}, {"spoonMethodName": "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.newInstance(java.lang.reflect.Constructor,java.lang.Object[])", "TOT": 19, "UPD": 2, "INS": 10, "MOV": 2, "DEL": 5}, {"spoonMethodName": "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.setInvocationHandler(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.createTestClass(java.lang.Class)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.setInvocationHandler(java.lang.Object,org.powermock.core.classloader.MockClassLoader)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.createTestClass(java.lang.Class,org.powermock.core.classloader.MockClassLoader)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a6c251a18c87b9a546143ac685438152b766167"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 19, "lines": 37, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 44, "UPD": 8, "INS": 17, "MOV": 6, "DEL": 13, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["modules/module-impl/testng/src/main/java/org/powermock/modules/testng"], "changesInPackagesSPOON": ["org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.setInvocationHandler(java.lang.Object,org.powermock.core.classloader.MockClassLoader)", "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.newInstance(java.lang.reflect.Constructor,java.lang.Object[])", "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory", "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.setInvocationHandler(java.lang.Object)", "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.createTestClass(java.lang.Class)", "org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.createTestClass(java.lang.Class,org.powermock.core.classloader.MockClassLoader)"]}, {"title": "suppress(method) doesn't work on a @Spy", "body": "On PowerMock 1.6.3:\n\nIf I have a class Parent:\n\n```\npublic class Parent {\n    public void method() {\n        System.out.println(\"Parent.method\");\n    }\n}\n\nclass Child extends Parent {\n    @Override\n    public void method() {\n        super.method();\n        System.out.println(\"Child.method\");\n    }\n}\n```\n\nthat I test with the following code:\n\n```\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(Parent.class)\npublic class SuppressParentTest {\n    @Spy Child child = new Child();\n\n    @Test\n    public void testSuppressSuperclassMethods() {\n        PowerMockito.suppress(methodsDeclaredIn(Parent.class));\n        child.method();\n    }\n}\n```\n\nI get the following printout from System.out:\n\n```\nParent.method\nChild.method\n```\n\nwhereas I should only get a printout of `Child.method`.\n\nInsterestingly if I delete the `@Spy` annotation from the declaration of the Child object, then `Parent.method()` is correctly suppressed.\n", "url": "https://github.com/powermock/powermock/issues/590", "user": "johnriot", "labels": ["Priority:Medium", "bug", "component:core"], "created": "2015-11-04 17:34:53", "closed": "2016-03-03 11:27:01", "commits": {"85eadcba8763ceb1a25593bdc3e85e1f7274f507": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}, "ec4afa3cfd3bc50692eac922c53063037549c34c": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 119.00027777777778, "commitsDetails": [{"commitHash": "85eadcba8763ceb1a25593bdc3e85e1f7274f507", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["0e4dc9444f9a7a8941f8348d3da419f3d5a3026a", "0809e13fd0e419b7db454d3cca0fbacdeb489e59"], "nameRev": "85eadcba8763ceb1a25593bdc3e85e1f7274f507 tags/powermock-1.6.5~37", "commitMessage": "Merge pull request #630 from jayway/powermock-590\n\npowermock-590 suppress(method) doesn't work on a @Spy\r\nFix #590 ", "commitDateTime": "2016-03-03 14:27:00", "authoredDateTime": "2016-03-03 14:27:00", "commitGitStats": [{"filePath": "core/src/main/java/org/powermock/core/MockGateway.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "modules/module-test/easymock/junit4-test/src/test/java/samples/junit4/suppressmethod/SuppressMethodTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/spy/SpyTest.java", "insertions": 23, "deletions": 2, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockGateway.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.MockGateway.doMethodCall(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.String)", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "org.powermock.core.MockGateway.copyArgumentsForInnerOrLocalOrAnonymousClass(java.lang.Object[],boolean)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "SuppressMethodTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit4.suppressmethod.SuppressMethodTest.testSuppressMethodInParentOnly()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SpyTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.spy.SpyTest.spyingOnPrivateMethodWorks()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.spy.SpyTest.testSuppressMethodWhenObjectIsSpy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.spy.SpyTest.testSuppressMethodInParentOnlyWhenObjectIsSpy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.spy.SpyTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ec4afa3cfd3bc50692eac922c53063037549c34c", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["85a2b1bc9d9eb076021132bd806c925fdaf8013b"], "nameRev": "ec4afa3cfd3bc50692eac922c53063037549c34c tags/powermock-1.6.5~16", "commitMessage": "#590 suppress(method) doesn't work for spies.\nOne more test to check that doNothing.\n", "commitDateTime": "2016-04-05 10:57:54", "authoredDateTime": "2016-04-05 10:57:54", "commitGitStats": [{"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/spy/SpyTest.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "tests/utils/src/main/java/samples/spy/SpyObject.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpyTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.spy.SpyTest.testDoNothingForSpy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpyObject.java", "spoonMethods": [{"spoonMethodName": "samples.spy.SpyObject.throwException()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ec4afa3cfd3bc50692eac922c53063037549c34c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["tests/utils/src/main/java/samples/spy"], "changesInPackagesSPOON": ["samples.spy.SpyObject.throwException()"]}, {"title": "When having inheritance in class under test adding class in @PrepareForTest and running the test gives initilizationError", "body": "I am trying to run test for last couple of days not much help provided on web search as well.\n\nI am using below JARS\n\ncglib-nodep-2.2.2.jar\njavassist-3.20.0-GA.jar\njunit-4.12.jar\nmockito-all-1.10.19.jar\nobjenesis-2.1.jar\npowermock-mockito-1.6.3-full.jar\n\nStack trace is below :-\n\njava.lang.ClassFormatError: JVMCFRE013 local variable PC length invalid; class=<ParentClass>, offset=18919\n    at java.lang.ClassLoader.defineClassImpl(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:284)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:221)\n    at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:268)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:179)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:70)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:658)\n    at java.lang.ClassLoader.defineClassImpl(Native Method)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:284)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:221)\n    at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:268)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:179)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:70)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:658)\n    at java.lang.Class.forNameImpl(Native Method)\n    at java.lang.Class.forName(Class.java:176)\n    at sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:126)\n    at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:137)\n    at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:61)\n    at sun.reflect.annotation.AnnotationParser.parseSig(AnnotationParser.java:402)\n    at sun.reflect.annotation.AnnotationParser.parseClassValue(AnnotationParser.java:383)\n    at sun.reflect.annotation.AnnotationParser.parseClassArray(AnnotationParser.java:685)\n    at sun.reflect.annotation.AnnotationParser.parseArray(AnnotationParser.java:492)\n    at sun.reflect.annotation.AnnotationParser.parseMemberValue(AnnotationParser.java:318)\n    at sun.reflect.annotation.AnnotationParser.parseAnnotation(AnnotationParser.java:253)\n    at sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:100)\n    at sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:82)\n    at java.lang.Class.getDeclaredAnnotations(Class.java:1685)\n    at java.lang.Class.getAnnotations(Class.java:1641)\n    at java.lang.Class.getAnnotation(Class.java:1621)\n    at org.junit.internal.MethodSorter.getDeclaredMethods(MethodSorter.java:52)\n    at org.junit.internal.runners.TestClass.getAnnotatedMethods(TestClass.java:45)\n    at org.junit.internal.runners.MethodValidator.validateTestMethods(MethodValidator.java:71)\n    at org.junit.internal.runners.MethodValidator.validateStaticMethods(MethodValidator.java:44)\n    at org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner(MethodValidator.java:50)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.validate(PowerMockJUnit44RunnerDelegateImpl.java:108)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.<init>(PowerMockJUnit44RunnerDelegateImpl.java:70)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl.<init>(PowerMockJUnit47RunnerDelegateImpl.java:42)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit49RunnerDelegateImpl.<init>(PowerMockJUnit49RunnerDelegateImpl.java:25)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:80)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:57)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:539)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:156)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:40)\n    at org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.createTestDelegators(AbstractTestSuiteChunkerImpl.java:244)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.<init>(JUnit4TestSuiteChunkerImpl.java:61)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.<init>(AbstractCommonPowerMockRunner.java:32)\n    at org.powermock.modules.junit4.PowerMockRunner.<init>(PowerMockRunner.java:34)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:80)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:57)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:539)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.<init>(JUnit4TestReference.java:32)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestClassReference.<init>(JUnit4TestClassReference.java:25)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:41)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:31)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:452)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\n", "url": "https://github.com/powermock/powermock/issues/583", "user": "shailuJD", "labels": ["Cannot reproduce", "Priority:High", "bug"], "created": "2015-10-08 15:28:02", "closed": "2016-04-10 05:51:05", "commits": {"93a928ee4c56873db5a180f63159cdf8b0bb8616": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "a05635b2ce3d3453927e362787353b3aad577be9": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 184.00027777777777, "commitsDetails": [{"commitHash": "93a928ee4c56873db5a180f63159cdf8b0bb8616", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a05635b2ce3d3453927e362787353b3aad577be9", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["ec4afa3cfd3bc50692eac922c53063037549c34c"], "nameRev": "a05635b2ce3d3453927e362787353b3aad577be9 tags/powermock-1.6.5~15", "commitMessage": "#583 Add test to verify issue. (#657)", "commitDateTime": "2016-04-10 08:52:11", "authoredDateTime": "2016-04-10 08:52:11", "commitGitStats": [{"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github583/ChildClass.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github583/ClassWithInheritanceTest.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github583/ParenClass.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github583/package-info.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ChildClass.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github583.ChildClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassWithInheritanceTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github583.ClassWithInheritanceTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ParenClass.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github583.ParenClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Enable @PrepareForTest on enums", "body": "_From [Chessra...@gmail.com](https://code.google.com/u/114145844974486262972/) on July 11, 2015 22:01:18_\n\nWhat steps will reproduce the problem? \n1. Define an enum class with a method that will call the constructor of another class.\n2. Define a test for this enum (mock the constructor call) and mark it to be tested with @PrepareForTest.\n3. Run the test. \n\nWhat is the expected output? \nWhat do you see instead? \nI expect the constructor call to be replaced by the mock, but it is just executed normally. \nWhat version of the product are you using? On what operating system? \n1.6.2 on Windows\nPlease provide any additional information below. \n\nI have attached a code example from the greenmail project.\n\n**Attachment:** \n- https://storage.googleapis.com/google-code-attachments/powermock/issue-552/comment-0/StoredMessageCollectionFactory.java\n- https://storage.googleapis.com/google-code-attachments/powermock/issue-552/comment-0/StoredMessageCollection.java\n- https://storage.googleapis.com/google-code-attachments/powermock/issue-552/comment-0/MapBasedStoredMessageCollection.java\n- https://storage.googleapis.com/google-code-attachments/powermock/issue-552/comment-0/StoredMessageCollectionFactoryTest.java\n", "url": "https://github.com/powermock/powermock/issues/572", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "component:core"], "created": "2015-07-25 08:29:34", "closed": "2016-03-02 04:59:31", "commits": {"80d5b0b706078f3fa66db78a394229b974a9d6e1": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 220.00027777777777, "commitsDetails": [{"commitHash": "80d5b0b706078f3fa66db78a394229b974a9d6e1", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["18e2d9d9190f9beb53ef8ae0a1143e9d72db762c"], "nameRev": "80d5b0b706078f3fa66db78a394229b974a9d6e1 tags/powermock-1.6.5~38^2", "commitMessage": "powermock-572 Enable @PrepareForTest on enums\n\nAdd test to cover cases #572\n", "commitDateTime": "2016-03-02 07:55:46", "authoredDateTime": "2016-03-02 07:55:46", "commitGitStats": [{"filePath": "core/src/main/java/org/powermock/core/classloader/annotations/PrepareForTest.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/enums/EnumWithConstructorTest.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "tests/utils/src/main/java/samples/enummocking/AnotherSomeObjectInterfaceImpl.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "tests/utils/src/main/java/samples/enummocking/EnumWithConstructor.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "tests/utils/src/main/java/samples/enummocking/SomeObjectInterface.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "tests/utils/src/main/java/samples/enummocking/SomeObjectInterfaceImpl.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PrepareForTest.java", "spoonMethods": []}, {"spoonFilePath": "EnumWithConstructorTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.enums.EnumWithConstructorTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AnotherSomeObjectInterfaceImpl.java", "spoonMethods": [{"spoonMethodName": "samples.enummocking.AnotherSomeObjectInterfaceImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnumWithConstructor.java", "spoonMethods": [{"spoonMethodName": "samples.enummocking.EnumWithConstructor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SomeObjectInterface.java", "spoonMethods": [{"spoonMethodName": "samples.enummocking", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SomeObjectInterfaceImpl.java", "spoonMethods": [{"spoonMethodName": "samples.enummocking.SomeObjectInterfaceImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["80d5b0b706078f3fa66db78a394229b974a9d6e1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 108, "deletions": 0, "lines": 108, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0, "spoonFilesChanged": 4, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["tests/utils/src/main/java/samples/enummocking"], "changesInPackagesSPOON": ["samples.enummocking.EnumWithConstructor", "samples.enummocking.AnotherSomeObjectInterfaceImpl", "samples.enummocking", "samples.enummocking.SomeObjectInterfaceImpl"]}, {"title": "assloader", "body": "_From [jche...@ea.com](https://code.google.com/u/114333799753027504850/) on July 04, 2015 00:39:08_\n\nWhat steps will reproduce the problem? 1. 2. 3. What is the expected output? What do you see instead? What version of the product are you using? On what operating system? Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=551_\n", "url": "https://github.com/powermock/powermock/issues/571", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 08:29:32", "closed": "2016-07-24 18:02:42", "commits": {}, "ttf": 365.0002777777778, "commitsDetails": []}, {"title": "MockClassLoader#loadMockClass fails to preserve original ProtectionDomain of classes prepared for test", "body": "_From [rliesenf...@gmail.com](https://code.google.com/u/112150874253264777993/) on March 09, 2015 19:33:10_\n\nWhat steps will reproduce the problem? 1. Try to use another bytecode manipulation tool together with PowerMock, for example, JaCoCo. What is the expected output? What do you see instead? The other tool should still be able to properly instrument classes that got prepared for test by PowerMock. Doing so might require that the original ProtectionDomain of the prepared class be preserved in the copy generated by MockClassLoader. JaCoCo, in particular, checks that the ProtectionDomain of each class has a code source location, to determine whether it's a legitimate \".class\" file from the codebase, or a dynamically generated class which only exists at runtime (and therefore should not be instrumented for coverage).\n\nThis can affect other tools, such as JMockit Coverage. What version of the product are you using? On what operating system? PowerMock 1.6.1, on Windows 7 (the OS or JDK version should not matter here). Please provide any additional information below. There is already a JaCoCo issue open: https://github.com/jacoco/jacoco/issues/294 I believe the fix should be relatively simple: PowerMock will need to save somewhere the ProtectionDomain of each class prepared for test (say, in a Map<String, ProtectionDomain>) of prepared class names), so that it can recover the PD and pass it in the call to \"ClassLoader#defineClass\" at the end of \"loadMockClass\". This should solve the problem without any backward-compatibiliy issues.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=544_\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/564", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 08:29:01", "closed": "2016-11-01 14:05:41", "commits": {"d750e6dd18b79ac9230c2d3464df519ca51322ee": {"commitGHEventType": "referenced", "commitUser": "johanhaleby"}}, "ttf": 465.0002777777778, "commitsDetails": [{"commitHash": "d750e6dd18b79ac9230c2d3464df519ca51322ee", "commitGHEventType": "referenced", "commitUser": "johanhaleby", "commitParents": ["f3f1c5a3b74be8af0465f0ddc7aed1371fb39841", "6f32a1e97ea647cf67aada6a2259b07d5e32d6c7"], "nameRev": "d750e6dd18b79ac9230c2d3464df519ca51322ee tags/powermock-1.6.4~8", "commitMessage": "Merge pull request #589 from astafev/master\n\nfix jacoco/powermock integration issue #564", "commitDateTime": "2015-10-26 12:41:13", "authoredDateTime": "2015-10-26 12:41:13", "commitGitStats": [{"filePath": "core/src/main/java/org/powermock/core/classloader/MockClassLoader.java", "insertions": 6, "deletions": 4, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockClassLoader.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.MockClassLoader.loadModifiedClass(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.classloader.MockClassLoader.loadUnmockedClass(java.lang.String,java.security.ProtectionDomain)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Changelog lies about \"Fixed Mockito 1.10.9+ incompatibility\"", "body": "_From [adrianbo...@gmail.com](https://code.google.com/u/102895559865076407609/) on February 27, 2015 13:01:18_\n\nI'm looking at the sources in powermock-api-mockito-1.6.1-sources.jar and I see that org.powermock.api.mockito.internal.mockmaker.PowerMockMaker is still using org.mockito.internal.creation.CglibMockMaker.\n\nI also get \"java.lang.NoClassDefFoundError: org/mockito/internal/creation/CglibMockMaker\"\n\n1.6.1 was released on January 3rd, but the pull request was merged on Jan 30th.\n\nPlease release 1.6.2 so we can upgrade Mockito.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=543_\n", "url": "https://github.com/powermock/powermock/issues/563", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 08:29:00", "closed": "2016-02-26 16:44:14", "commits": {}, "ttf": 216.00027777777777, "commitsDetails": []}, {"title": "Powermock does not play well with java.time", "body": "_From [davidkar...@gmail.com](https://code.google.com/u/118125814176791488661/) on January 28, 2015 14:23:28_\n\nhave this in a unit test which is annotated by: @RunWith(PowerMockRunner.class):\n\n```\n    LocalDate.now().minusYears(3).atStartOfDay().toInstant(ZoneOffset.UTC);\n```\n\nand it will blow up with:\n\nteException: Failed to transform class with name com.davidkarlsen.traktorscrobbler.FileHandlingRouteBuilderTest. Reason: [source error] toInstant(java.time.ZoneOffset) not found in java.time.LocalDateTime\n    at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:266)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:180)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:68)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:344)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:145)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:40)\n    at org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.createTestDelegators(AbstractTestSuiteChunkerImpl.java:244)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.<init>(JUnit4TestSuiteChunkerImpl.java:61)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.<init>(AbstractCommonPowerMockRunner.java:32)\n    at org.powermock.modules.junit4.PowerMockRunner.<init>(PowerMockRunner.java:34)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:408)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:36)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)\nCaused by: javassist.CannotCompileException: [source error] toInstant(java.time.ZoneOffset) not found in java.time.LocalDateTime\n    at javassist.expr.MethodCall.replace(MethodCall.java:241)\n    at org.powermock.core.transformers.impl.MainMockTransformer$PowerMockExpressionEditor.edit(MainMockTransformer.java:288)\n    at javassist.expr.ExprEditor.loopBody(ExprEditor.java:192)\n    at javassist.expr.ExprEditor.doit(ExprEditor.java:91)\n    at javassist.CtClassType.instrument(CtClassType.java:1431)\n    at org.powermock.core.transformers.impl.MainMockTransformer.transform(MainMockTransformer.java:74)\n    at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:251)\n    ... 25 more\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=537_\n", "url": "https://github.com/powermock/powermock/issues/557", "user": "johanhaleby", "labels": ["Priority:Medium", "Resolved", "bug"], "created": "2015-07-25 08:28:16", "closed": "2017-02-02 06:53:55", "commits": {}, "ttf": 557.0002777777778, "commitsDetails": []}, {"title": "java.lang.IllegalAccessError when using PowerMock 1.6.0 and Mockito 1.10.16", "body": "_From [behran...@gmail.com](https://code.google.com/u/103427338840141883989/) on December 15, 2014 04:39:04_\n\nWhat steps will reproduce the problem? 1. The following test class can reproduce the issue:\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({StringBuilder.class})\npublic class BugTest {\n\n```\n@Before\npublic void setUp() throws Exception {\n    mockStatic(StringBuilder.class);\n}\n\n@Test\npublic void testSomething() throws Exception {\n\n}\n```\n\n} What is the expected output? What do you see instead? The test fails to run. Instead it breaks with the following stack trace:\n\njava.lang.IllegalAccessError: tried to access class org.mockito.internal.creation.cglib.CGLIBHacker from class org.mockito.internal.creation.MethodInterceptorFilter\n    at org.mockito.internal.creation.MethodInterceptorFilter.<init>(MethodInterceptorFilter.java:34)\n    at org.powermock.api.mockito.internal.mockcreation.PowerMockMethodInterceptorFilter.<init>(PowerMockMethodInterceptorFilter.java:18)\n    at org.powermock.api.mockito.internal.mockcreation.MockCreator.createMethodInvocationControl(MockCreator.java:108)\n    at org.powermock.api.mockito.internal.mockcreation.MockCreator.mock(MockCreator.java:57)\n    at org.powermock.api.mockito.PowerMockito.mockStatic(PowerMockito.java:70)\n    at au.com.sensis.sitesmart.api.v1.AbstractSiteServletTest.setUp(AbstractSiteServletTest.java:31)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at org.junit.internal.runners.MethodRoadie.runBefores(MethodRoadie.java:129)\n    at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:93)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:294)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:127)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:282)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:207)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:146)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:122)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:106)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:211)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134) What version of the product are you using? On what operating system? PowerMock 1.6.0 with Mockito 1.10.16 using Java 1.7.0_72 on Ubuntu 14.04 64-bit\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=533_\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/553", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 08:27:48", "closed": "2016-11-02 06:14:22", "commits": {}, "ttf": 465.0002777777778, "commitsDetails": []}, {"title": "PowerMock doesn't work with JUnit 4.12", "body": "_From [lbeus...@googlemail.com](https://code.google.com/u/110491066608873617396/) on December 09, 2014 17:05:27_\n\nWhat steps will reproduce the problem? 1. add junit 4.12 as dependency\n2. add to any class: @RunWith(PowerMockRunner.class) What is the expected output? What do you see instead? org.powermock.reflect.exceptions.FieldNotFoundException: Field 'fTestClass' was not found in class org.junit.internal.runners.MethodValidator.\n    at org.powermock.reflect.internal.WhiteboxImpl.getInternalState(WhiteboxImpl.java:581) What version of the product are you using? On what operating system? 1.6.0 Please provide any additional information below. in JUnit 4.12 they renamed a few internal fields from f\\* to something else. https://github.com/junit-team/junit/blob/master/doc/ReleaseNotes4.12.md But since they had some errors with reflection based tools they reverted it partially: https://github.com/junit-team/junit/pull/961 Seems that didn't use PowerMock ;)\n\nBut since the JUnit release is out now I think that PowerMock should handle this.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=532_\n", "url": "https://github.com/powermock/powermock/issues/552", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 08:27:28", "closed": "2015-07-25 08:27:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "junit 4.12 throws Field 'fTestClass' was not found in class org.junit.internal.runners.MethodValidator exception", "body": "_From [cheis...@squareup.com](https://code.google.com/u/116971474335108991911/) on December 05, 2014 22:07:58_\n\nWhat steps will reproduce the problem? 1. If you use PowerMock with junit 4.12 it will throw a org.powermock.reflect.exceptions.FieldNotFoundException  when the test is starting What version of the product are you using? On what operating system? PowerMock 1.6.0 Please provide any additional information below. More of the stacktrace:\n\norg.powermock.reflect.exceptions.FieldNotFoundException: Field 'fTestClass' was not found in class org.junit.internal.runners.MethodValidator.\n    at org.powermock.reflect.internal.WhiteboxImpl.getInternalState(WhiteboxImpl.java:581)\n    at org.powermock.reflect.Whitebox.getInternalState(Whitebox.java:308)\n    at org.powermock.modules.junit4.internal.impl.testcaseworkaround.PowerMockJUnit4MethodValidator.validateTestMethods(PowerMockJUnit4MethodValidator.java:79)\n    at org.powermock.modules.junit4.internal.impl.testcaseworkaround.PowerMockJUnit4MethodValidator.validateInstanceMethods(PowerMockJUnit4MethodValidator.java:49)\n    at org.junit.internal.runners.MethodValidator.validateMethodsForDefaultRunner(MethodValidator.java:51)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.validate(PowerMockJUnit44RunnerDelegateImpl.java:108)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.<init>(PowerMockJUnit44RunnerDelegateImpl.java:70)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl.<init>(PowerMockJUnit47RunnerDelegateImpl.java:42)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit49RunnerDelegateImpl.<init>(PowerMockJUnit49RunnerDelegateImpl.java:25)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:526)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:156)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:40)\n    at org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.createTestDelegators(AbstractTestSuiteChunkerImpl.java:244)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.<init>(JUnit4TestSuiteChunkerImpl.java:61)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.<init>(AbstractCommonPowerMockRunner.java:32)\n    at org.powermock.modules.junit4.PowerMockRunner.<init>(PowerMockRunner.java:34)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:526)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:104)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:86)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:26)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:59)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:33)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=531_\n", "url": "https://github.com/powermock/powermock/issues/551", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 08:26:23", "closed": "2015-07-25 08:27:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Incompatibility with mockito 1.10.9 and 1.10.10", "body": "_From [tibokr...@googlemail.com](https://code.google.com/u/107064315374216084770/) on October 30, 2014 17:05:48_\n\nI used mockito 1.10.8 with powermock-api-mockito:1.5.6, and it worked fine.\n\nI tried upgrading to mockito 1.10.9 and 1.10.10, but I got:\n\njava.lang.IllegalAccessError: org/mockito/internal/creation/cglib/CGLIBHacker\n        at org.mockito.internal.creation.MethodInterceptorFilter.<init>(MethodInterceptorFilter.java:27)\n        at org.powermock.api.mockito.internal.mockcreation.PowerMockMethodInterceptorFilter.<init>(PowerMockMethodInterceptorFilter.java:18)\n        at org.powermock.api.mockito.internal.mockcreation.MockCreator.createMethodInvocationControl(MockCreator.java:109)\n        at org.powermock.api.mockito.internal.mockcreation.MockCreator.mock(MockCreator.java:60)\n        at org.powermock.api.mockito.PowerMockito.mock(PowerMockito.java:143)\n\nand also\n\njava.lang.NoClassDefFoundError: Could not initialize class org.mockito.internal.creation.jmock.ClassImposterizer\n        at org.mockito.internal.creation.CglibMockMaker.createMock(CglibMockMaker.java:23)\n        at org.powermock.api.mockito.internal.mockmaker.PowerMockMaker.createMock(PowerMockMaker.java:43)\n        at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:32)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:59)\n        at org.mockito.Mockito.mock(Mockito.java:1258)\n\nI assume you don't need an example to reproduce, any existing unit tests probably break as well.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=524_\n", "url": "https://github.com/powermock/powermock/issues/544", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 06:02:18", "closed": "2015-07-25 08:25:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mockito 1.10.x ArgumentCaptor does not work with multi-argument constructor", "body": "_From [jrh...@gmail.com](https://code.google.com/u/110694536384347452794/) on October 14, 2014 03:32:22_\n\nWith a project using Mockito 1.10.8, mock a multi-argument constructor using an ArgumentCaptor and then verify the captured value. I've recreated the problem using this simple project: https://github.com/jrh3k5/powermock-mockito-0.10.x-argument-captor I know that PowerMock 1.5.6 isn't validated/built against Mockito 1.10.8, but, given that I'm not likely the only one excited to not be on a version of Mockito that's over 2 years old, I thought this should be something on the radar for an eventual uplift to a newer version of Mockito.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=521_\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/541", "user": "johanhaleby", "labels": ["Priority:Medium", "bug"], "created": "2015-07-25 06:01:37", "closed": "2015-07-25 06:01:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "TooManyFieldsFoundException when using PowerMock with IBM JRE", "body": "_From [mitchell...@gmail.com](https://code.google.com/u/108706685889766822960/) on August 26, 2014 07:25:58_\n\nWhat steps will reproduce the problem? 1.  Create the following files:\n\nStaticClass.java:\n\npublic class StaticClass\n{\n    public static String concat(final String str1, final String str2)\n    {\n        return str1 + \" = \" + str2;\n    }\n}\n\nStaticTest.java:\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(StaticClass.class)\npublic class StaticTest\n{\n    @Test\n    public void checkJunitClass()\n    {\n        PowerMockito.mockStatic(StaticClass.class);\n        StaticClass.concat(\"four\", \"4\");\n\n```\n    PowerMockito.verifyStatic(Mockito.never());\n    StaticClass.concat(\"four\", \"4\");\n}\n```\n\n}\n1.  Run the test on a IBM WebSphere 7 JVM.\n\nExpected output:\n\norg.mockito.exceptions.verification.NeverWantedButInvoked: \nStaticClass.concat(\"four\", \"4\");\n\nActual output:\n\norg.powermock.reflect.exceptions.TooManyFieldsFoundException: Two or more fields matching type java.lang.String.\n\n```\n    at org.powermock.reflect.internal.WhiteboxImpl.findSingleFieldUsingStrategy(WhiteboxImpl.java:496)\n\n    at org.powermock.reflect.internal.WhiteboxImpl.findFieldInHierarchy(WhiteboxImpl.java:455)\n\n    at org.powermock.reflect.internal.WhiteboxImpl.setInternalState(WhiteboxImpl.java:327)\n\n    at org.powermock.reflect.Whitebox.setInternalState(Whitebox.java:207)\n\n    at org.powermock.api.mockito.internal.invocationcontrol.InvocationControlAssertionError.updateErrorMessageForMethodInvocation(InvocationControlAssertionError.java:75)\n\n    at org.powermock.api.mockito.internal.invocationcontrol.MockitoMethodInvocationControl.performIntercept(MockitoMethodInvocationControl.java:300)\n\n    at org.powermock.api.mockito.internal.invocationcontrol.MockitoMethodInvocationControl.invoke(MockitoMethodInvocationControl.java:194)\n\n    at org.powermock.core.MockGateway.doMethodCall(MockGateway.java:105)\n\n    at org.powermock.core.MockGateway.methodCall(MockGateway.java:60)\n\n    at StaticClass.getValue(StaticClass.java)\n\n    at PowerMockTest.testStatic(PowerMockTest.java:56)\n\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)\n\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n\n    at java.lang.reflect.Method.invoke(Method.java:600)\n\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:66)\n\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:312)\n\n    at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:86)\n\n    at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:94)\n\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:296)\n\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:112)\n\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:73)\n\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:284)\n\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\n\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\n\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:209)\n\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:148)\n\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:122)\n\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\n\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:102)\n\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n\n    at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:42)\n\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)\n\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) What version of the product are you using? On what operating system? Platform is RSA 8 IDE, IBM WebSphere 7 JRE, Windows 7.\n```\n\nProduct is Mockito 1.9.0, Powermock-Mockito 1.4.12, JUnit 4.10 (work environment is locked down and this is the latest version we have). Please provide any additional information below. Originally discussed here: https://groups.google.com/forum/#!topic/powermock/QgcAYl_Khr0 I can't personally test 1.5.5, but from looking at the PowerMock code, I think it has the same issue.\n\n---\n\nThe version of java.lang.Throwable in the Sun/Oracle JRE has a field \"private transient Object backtrace\" which is similar to the \"private transient Object walkback\" field in the IBM JRE.  HOWEVER, this field is special-cased to not be exposed by reflection! https://bugs.openjdk.java.net/browse/JDK-4763881 The IBM implementation apparently doesn't do this, and exposes that field via getDeclaredFields.  This confuses WhiteboxImpl.findSingleFieldUsingStrategy when the strategy is AssignableFromFieldTypeMatcherStrategy(String.class).\n\nIf you care to fix it, I think the simplest fix might be in WhiteboxImpl, to add a wrapper around getDeclaredFields.  If the class === java.lang.Throwable.class, then filter out any instance of a transient Object field from the results before returning them - or maybe specifically look for the IBM \"backtrace\" field.\n\nI'd try to write a patch and test myself but, as I said, my work computer which has the IBM JRE on it is fairly locked down.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=514_\n", "url": "https://github.com/powermock/powermock/issues/534", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-25 06:00:49", "closed": "2015-07-25 06:01:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Testing a method that calls Collection.stream() throws an error", "body": "_From [brad.sta...@gmail.com](https://code.google.com/u/108309432694831072080/) on August 13, 2014 17:32:27_\n\nWhat steps will reproduce the problem? 1. Create the following classes:\n\npublic class SimpleOps\n{\n    public List<String> doStreamStuff(List<String> inputs)\n    {\n        return inputs.stream().collect(Collectors.toList());\n    }\n}\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(SimpleOps.class)\npublic class SimpleOpsTest\n{\n    @Test\n    public void testStream()\n    {\n        SimpleOps ops = new SimpleOps();\n        ops.doStreamStuff(Collections.emptyList());\n    }\n}\n1. Run the test What is the expected output? What do you see instead? I expect to see no output, just a passed test. Instead I see this Error:\n   No methods matching the name(s) stream were found in the class hierarchy of class java.util.Collections$EmptyList.\n   org.powermock.reflect.exceptions.MethodNotFoundException: No methods matching the name(s) stream were found in the class hierarchy of class java.util.Collections$EmptyList.\n   at org.powermock.reflect.internal.WhiteboxImpl.getMethods(WhiteboxImpl.java:1902)\n   at org.powermock.reflect.internal.WhiteboxImpl.getMethods(WhiteboxImpl.java:1931)\n   at org.powermock.reflect.internal.WhiteboxImpl.getBestMethodCandidate(WhiteboxImpl.java:1025)\n   at org.powermock.core.MockGateway.doMethodCall(MockGateway.java:89)\n   at org.powermock.core.MockGateway.methodCall(MockGateway.java:168)\n   at SimpleOps.doStreamStuff(SimpleOps.java:5)\n   at SimpleOpsTest.testStream(SimpleOpsTest.java:9)\n   at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:310)\n   at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:294)\n   at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:127)\n   at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82)\n   at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:282)\n   at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:207)\n   at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:146)\n   at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\n   at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:118)\n   at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:104)\n   at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n   at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:53) What version of the product are you using? On what operating system? PowerMock 1.5.5 on Windows 7 (64-bit) Please provide any additional information below. I'm also using the following libraries\n2. Junit 4.11\n3. EasyMock 3.2\n4. Objenesis 2.1\n5. JavaAssist 3.18.2-GA\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=513_\n", "url": "https://github.com/powermock/powermock/issues/533", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 06:00:12", "closed": "2015-07-25 06:00:47", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock is not finding all inherited methods on ArrayList", "body": "_From [hard...@gmail.com](https://code.google.com/u/108378773586665195430/) on August 13, 2014 00:59:20_\n\nWhat steps will reproduce the problem? public static void main(String[] args) {\n\n```\n    List<String> test = new ArrayList<String>();\n    Method[] methods = WhiteboxImpl.getAllMethods(ArrayList.class);\n    for(int i = 0; i \\< methods.length; i++) {\n\n        if(methods[i].getName().equals(\"stream\")) {\n            System.out.println(\"Stream method found with whitebox\");\n        }\n    }\n\n    Class obj = test.getClass();\n    Method[] reflectMethods = obj.getMethods();\n    for(int i = 0; i \\< reflectMethods.length; i++) {\n\n        if(reflectMethods[i].getName().equals(\"stream\")) {\n            System.out.println(\"Stream method found with regular reflect\");\n        }\n    }\n} What is the expected output? What do you see instead? I expect both for loops to print their messages. What version of the product are you using? On what operating system? PowerMock 1.5.5 on windows 7 64bit Please provide any additional information below. The code example above is breaking the problem down to where I could see the problem originating. Our code uses the stream() method on an array list to do some filtering, the test is a simple test that doesn't specifically mock the array list, the class is in the prepare for test annotation (to support some of the other tests).\n```\n\nWe are trying to update our code from JDK 7 to 8 and can't run our unit tests when we try to use some of the new JDK8 features like streams.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=512_\n", "url": "https://github.com/powermock/powermock/issues/532", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-25 05:59:53", "closed": "2015-07-25 06:00:10", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Can not run TestSuite when SWT Classes are involved", "body": "_From [mirco.fr...@gmail.com](https://code.google.com/u/108310869763861739527/) on August 07, 2014 09:36:42_\n\nI have some test for features in an Eclipse RCP project.\nNo SWT Components are involved directly, but some files needed for the test import SWT components. (e.g. org.eclipse.swt.graphics.Image).\n\nWhen the test are run stand-alone, everything is fine.\nBut as soon as they are put into a TestSuite, all tests fail with the following error:\n\njava.lang.UnsatisfiedLinkError: Could not load SWT library. Reasons: \n    no swt-win32-3836 in java.library.path\n    no swt-win32 in java.library.path\n    Native Library C:\\Users\\franzm.swt\\lib\\win32\\x86_64\\swt-win32-3836.dll already loaded in another classloader\n    Can't load library: C:\\Users\\franzm.swt\\lib\\win32\\x86_64\\swt-win32.dll\n\n```\nat org.eclipse.swt.internal.Library.loadLibrary(Library.java:331)\nat org.eclipse.swt.internal.Library.loadLibrary(Library.java:240)\nat org.eclipse.swt.internal.C.<clinit>(C.java:21)\nat org.eclipse.swt.widgets.Widget.<clinit>(Widget.java:103)\nat com.example.app.client.ui.filters.FilterDtoUtil.formatDateFormat(FilterDtoUtil.java:325)\nat com.example.app.client.ui.filters.FilterDtoUtil.getMarketVariantsProductionSitesWithDates(FilterDtoUtil.java:358)\nat com.example.app.client.ui.filters.factories.FilterContributor.getFilterRow(FilterContributor.java:566)\nat com.example.app.client.ui.filters.factories.AbstractBigFilterFactory.getFilterRow(AbstractBigFilterFactory.java:59)\nat com.example.app.client.ui.excelexport.AbstractExcelTest.before(AbstractExcelTest.java:73)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\nat java.lang.reflect.Method.invoke(Unknown Source)\nat org.junit.internal.runners.MethodRoadie.runBefores(MethodRoadie.java:132)\nat org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:95)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:294)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:127)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:282)\nat org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:86)\nat org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:207)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:146)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\nat org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:33)\nat org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:45)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:118)\nat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:104)\nat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\nat org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:53)\nat org.junit.runners.Suite.runChild(Suite.java:127)\nat org.junit.runners.Suite.runChild(Suite.java:26)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\nat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\nat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\n```\n\nFrom my point of view, PowerMockito tries to load the DLL for every tests and blocks itself there.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=511_\n", "url": "https://github.com/powermock/powermock/issues/531", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:59:33", "closed": "2015-07-25 05:59:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\"answer\" ignored in mocks created with @Mock", "body": "_From [behran...@gmail.com](https://code.google.com/u/103427338840141883989/) on August 04, 2014 06:55:25_\n\nWhat steps will reproduce the problem? The following test case can reproduce the issue:\n\npackage au.com.sensis.sitesmart;\n\nimport com.day.cq.search.Query;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Answers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\nimport javax.jcr.Node;\nimport java.util.Iterator;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({Query.class})\npublic class SampleTest extends AbstractServiceTest {\n\n```\n@Mock(name = \"Mock Query\", answer = Answers.RETURNS_DEEP_STUBS)\nprivate Query query;\n\n@Mock(name = \"Mock Nodes\")\nprivate Iterator<Node> queryResult;\n\n@Test\npublic void deepStubsTest() {\n    Mockito.when(query.getResult().getNodes()).thenReturn(queryResult);\n\n    System.out.println(query.getResult().getNodes());\n}\n```\n\n} What is the expected output? What do you see instead? Test should pass. What version of the product are you using? On what operating system? PowerMock 1.5.5 with Mockito 1.9.5.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=510_\n", "url": "https://github.com/powermock/powermock/issues/530", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:59:25", "closed": "2015-07-25 05:59:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Using PowerMockRunner, @InjectMocks fails when trying to inject final fields", "body": "_From [sbekkhu...@gmail.com](https://code.google.com/u/101079405758352489911/) on July 18, 2014 13:28:54_\n\nWhat steps will reproduce the problem? 1. Have a class with a final field, and a constructor initializing it\n2. Create a test using PowerMockRunner, and mock the field, then using @Injectmocks over instance of the class to test\n3. During runtime, you'll see that the instance of the mock created in your test is not the one getting injected What is the expected output? What do you see instead? The mock-instance I create in my test should be injected What version of the product are you using? On what operating system? 1.5.\nUbuntu 14.04. Please provide any additional information below. If not using PowerMockRunner (i.e. MockitoJUnitRunner or just regular JUnit), it works as it should\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=506_\n", "url": "https://github.com/powermock/powermock/issues/526", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:58:36", "closed": "2015-07-25 05:58:49", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Powermock / Javassist creates illegal constructors for JDK 1.7.0u65 and 1.8.0u11 with -target 7", "body": "_From [f...@noidea.de](https://code.google.com/u/104544426144312995691/) on July 18, 2014 13:04:39_\n\nI have simple class with a super class that needs to get power-mocked, but Powermock / Javassist creates illegal constructors for JDK 1.7.0u65 and 1.8.0u11 with -target 7.\n\nSomewhere in MainMockTransformer.transform(clazz), I think inside the PowerMockExpressionEditor something happens \n\nIf you remove -target 7 it works for both JDK 1.7.0u65 and 1.8.0u11.\n\nTests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.003 sec <<< FAILURE! - in ConstructorTest\ntestConstructorManipulationFailure(ConstructorTest)  Time elapsed: 0.002 sec  <<< ERROR!\njava.lang.VerifyError: Bad <init> method call from inside of a branch\nException Details:\n  Location:\n    MockedClass.<init>()V @32: invokespecial\n  Reason:\n    Error exists in the bytecode\n  Bytecode:\n    0000000: 2a4c 120f b800 1503 bd00 0d12 16b8 001a\n    0000010: b800 204e 2db2 0024 a500 0e2a 01c0 0026\n    0000020: b700 29a7 0009 2bb7 002b 0157 b1  \n  Stackmap Table:\n    full_frame(@38,{UninitializedThis,UninitializedThis,Top,Object[#13]},{})\n    full_frame(@44,{Object[#2],Object[#2],Top,Object[#13]},{})\n\n```\nat java.lang.Class.getDeclaredConstructors0(Native Method)\nat java.lang.Class.privateGetDeclaredConstructors(Class.java:2658)\nat java.lang.Class.getDeclaredConstructors(Class.java:2007)\nat ConstructorTest.testConstructorManipulationFailure(ConstructorTest.java:13)\n```\n\nSee attachment or https://github.com/burka/powermock-javassist-bug for a full (not) working example.\n\n**Attachment:** [powermock-javassist-bug.tar.gz](http://code.google.com/p/powermock/issues/detail?id=505)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=505_\n", "url": "https://github.com/powermock/powermock/issues/525", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-25 05:57:58", "closed": "2015-07-25 05:58:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Test with PowerMock fails when run on java 1.7.0_65 ", "body": "_From [begul1234](https://code.google.com/u/begul1234/) on July 17, 2014 10:28:21_\n\nWhat steps will reproduce the problem? - Have a unit test annotated with @RunWith(PowerMockRunner.class) @PrepareForTest(MyEndpoint.class)\n   and use mockStatic(MyEndpoint.class); in the setUp method of the test. What is the expected output? What do you see instead? I would expect that the test runs normally and without error as it did before with older java versions (1.7.0_55 works).\n\nInstead the test fails with the following stacktrace:\njava.lang.VerifyError: Bad <init> method call from inside of a branch Exception Details:   Location:     net/sample/api/endpoint/AbstractB2CJaxRsEndpoint.<init>(Lorg/powermock/core/IndicateReloadClass;)V @41: invokespecial   Reason:     Error exists in the bytecode   Bytecode:     0000000: 2a2b 4e4d 1210 b800 1604 bd00 0d59 032d     0000010: 5313 0126 b800 1bb8 0021 3a05 1905 b200     0000020: 25a5 000e 2a01 c000 27b7 002a a700 0a2c     0000030: 2db7 002a 0157 b1                         Stackmap Table:     full_frame(@47,{UninitializedThis,Object[#39],UninitializedThis,Object[#39],Top,Object[#13]},{})     full_frame(@54,{Object[#2],Object[#39],Object[#2],Object[#39],Top,Object[#13]},{}) \njava.lang.VerifyError: Bad <init> method call from inside of a branch\nException Details:\n  Location:\n    net/sample/api/endpoint/AbstractB2CJaxRsEndpoint.<init>(Lorg/powermock/core/IndicateReloadClass;)V @41: invokespecial\n  Reason:\n    Error exists in the bytecode\n  Bytecode:\n    0000000: 2a2b 4e4d 1210 b800 1604 bd00 0d59 032d\n    0000010: 5313 0126 b800 1bb8 0021 3a05 1905 b200\n    0000020: 25a5 000e 2a01 c000 27b7 002a a700 0a2c\n    0000030: 2db7 002a 0157 b1  \n  Stackmap Table:\n    full_frame(@47,{UninitializedThis,Object[#39],UninitializedThis,Object[#39],Top,Object[#13]},{})\n    full_frame(@54,{Object[#2],Object[#39],Object[#2],Object[#39],Top,Object[#13]},{})\n\n```\nat java.lang.Class.getDeclaredConstructors0(Native Method)\nat java.lang.Class.privateGetDeclaredConstructors(Class.java:2532)\nat java.lang.Class.getDeclaredConstructors(Class.java:1901)\nat org.mockito.internal.creation.jmock.ClassImposterizer.setConstructorsAccessible(ClassImposterizer.java:75)\nat org.mockito.internal.creation.jmock.ClassImposterizer.imposterise(ClassImposterizer.java:70)\nat org.powermock.api.mockito.internal.mockcreation.MockCreator.createMethodInvocationControl(MockCreator.java:110)\nat org.powermock.api.mockito.internal.mockcreation.MockCreator.mock(MockCreator.java:60)\nat org.powermock.api.mockito.PowerMockito.mockStatic(PowerMockito.java:70)\nat net.sample.api.endpoint.contacting.communication.peer.CommunicationTest.setUp(CommunicationTest.java:82)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.junit.internal.runners.MethodRoadie.runBefores(MethodRoadie.java:132)\nat org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:95)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:296)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit49RunnerDelegateImpl$PowerMockJUnit49MethodRunner.executeTestInSuper(PowerMockJUnit49RunnerDelegateImpl.java:116)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit49RunnerDelegateImpl$PowerMockJUnit49MethodRunner.executeTest(PowerMockJUnit49RunnerDelegateImpl.java:77)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:284)\nat org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:86)\nat org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:209)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:148)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:122)\nat org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:33)\nat org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:45)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\nat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:101)\nat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\nat org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:53)\nat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:249)\nat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:142)\nat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:113)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\nat org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\nat org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\nat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:104)\nat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75) What version of the product are you using? On what operating system? PowerMock 1.5.5 on MacOSX or Linux Please provide any additional information below.\n```\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=504_\n", "url": "https://github.com/powermock/powermock/issues/524", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:54:38", "closed": "2015-07-25 05:57:56", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mock/spy doe not get registered ", "body": "_From [zatz...@gmail.com](https://code.google.com/u/100955397491757361154/) on June 26, 2014 08:48:57_\n\nI am sorry for not using your bug-template. Hopefully, this link will provide you enough information: http://stackoverflow.com/questions/24281913/powermock-mocked-method-still-called/24408042#24408042 Best regards,\nzat\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=502_\n", "url": "https://github.com/powermock/powermock/issues/522", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:54:22", "closed": "2015-07-25 05:54:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Build PowerMock source code error", "body": "_From [sunyz12...@gmail.com](https://code.google.com/u/100924195174077804473/) on May 13, 2014 08:46:48_\n\nWhat steps will reproduce the problem? 1.Download the source using:\nsvn checkout http://powermock.googlecode.com/svn/trunk/ powermock-read-only\n2. mvn clean compile package What is the expected output? What do you see instead? We should get the jar files,but error occurred.\n\nIf just run mvn compile, it will be build success. What version of the product are you using? On what operating system? Apache Maven 3.2.1\nUbuntu 12.04_64 Please provide any additional information below.\n\n**Attachment:** [error.txt](http://code.google.com/p/powermock/issues/detail?id=499)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=499_\n", "url": "https://github.com/powermock/powermock/issues/519", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:53:47", "closed": "2015-07-25 05:53:59", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Invalid length in LocalVariableTable with javassist-3.14GA", "body": "_From [Ferrucci...@gmail.com](https://code.google.com/u/115929389490724795639/) on May 07, 2014 05:19:14_\n\nPrepareFotTest a class\nI see the exception only for this class,and when I delete the code in the method doCommit,the exception disappeared;\n\nI tried powermock-1.4.10 + mockito-1.9.0 + javassist3.15GA  and pm-1.4.9+m-1.8.5+javassist3.14GA. Both throws the Exception.\n\nThe java source of the classes in the attach. Please provide any additional information below. com.alipay.cifcommon.coordinator.test.powermock.RawTypeTest  Time elapsed: 1.022 sec  <<< ERROR!\njava.lang.ClassFormatError: Invalid length 90 in LocalVariableTable in class file com/alipay/cifcommon/coordinator/test/powermock/RawTypeForTest\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:615)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:465)\n    at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:210)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:145)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:65)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:249)\n    at sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:95)\n    at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:107)\n    at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:31)\n    at sun.reflect.annotation.AnnotationParser.parseSig(AnnotationParser.java:370)\n    at sun.reflect.annotation.AnnotationParser.parseClassValue(AnnotationParser.java:351)\n    at sun.reflect.annotation.AnnotationParser.parseClassArray(AnnotationParser.java:653)\n    at sun.reflect.annotation.AnnotationParser.parseArray(AnnotationParser.java:460)\n    at sun.reflect.annotation.AnnotationParser.parseMemberValue(AnnotationParser.java:286)\n    at sun.reflect.annotation.AnnotationParser.parseAnnotation(AnnotationParser.java:222)\n    at sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:69)\n    at sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:52)\n    at java.lang.Class.initAnnotationsIfNecessary(Class.java:3079)\n    at java.lang.Class.getAnnotations(Class.java:3059)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.classAnnotations(PowerMockJUnit44RunnerDelegateImpl.java:163)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.getDescription(PowerMockJUnit44RunnerDelegateImpl.java:155)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:118)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:102)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\n    at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\n    at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\n    at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=497_\n", "url": "https://github.com/powermock/powermock/issues/517", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:53:26", "closed": "2015-07-25 05:53:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "A new release, based on javassist 3.17.1-GA is needed", "body": "_From [Alexande...@gmail.com](https://code.google.com/u/102331001503405684338/) on April 16, 2014 15:47:09_\n\nAn annoying stack frame problem has been solved in javassist so that powermock test will not require -XX:-UseSplitVerifier in order to run on JVM7+\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=495_\n", "url": "https://github.com/powermock/powermock/issues/515", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-25 05:53:11", "closed": "2015-07-25 05:53:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Move source code to GitHub", "body": "_From [msz...@wp.pl](https://code.google.com/u/116891989919461415994/) on April 06, 2014 00:29:19_\n\nMaybe it would be worth to migrate PowerMock source code to GitHub (like Awaitility) to allow people to make a (potential) contribution easier?\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=493_\n", "url": "https://github.com/powermock/powermock/issues/513", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:52:38", "closed": "2015-07-25 05:53:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "@PrepareForTest on method not working with PowerMockRule", "body": "The following test running the PowerMockRule doesn't suppress the '`isNumeric`' method when `@PrepareForTest` is on the method. However\nit does when `@PrepareForTest` is on the class.\n\n```\nimport static org.junit.Assert.*;\n\nimport org.apache.commons.lang.StringUtils;\nimport org.junit.Rule;\nimport org.junit.Test;\n\nimport org.powermock.api.mockito.PowerMockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.rule. PowerMockRule ;\n\npublic class TestFoo {\n\n    @Rule\n    public PowerMockRule rule = new PowerMockRule (); \n\n    @Test\n    @PrepareForTest(StringUtils.class)\n    public void foo() throws Exception {\n         PowerMockito.suppress(PowerMockito.method(StringUtils.class, \"isNumeric\"));\n        assertTrue(StringUtils.isNumeric(\"12345\"));\n\n    }\n\n} \n```\n\nWhat steps will reproduce the problem? \n1.  Run the test using PowerMockRule and with @PrepareForTest on the class\n2.  Run the test using PowerMockRule and with @PrepareForTest on the method\n   What is the expected output?\n   What do you see instead?\n   The test should fail because the method isNumeric() should be suppresed.\n   But instead, the test pass. This is because the method has not been\n   suppresed. \n\nWhat version of the product are you using? \nOn what operating system? \n- powermock 1.5.4\n- eclipse kepler\n- windows xp\n- java 6\n\nPlease provide any additional information below.\n", "url": "https://github.com/powermock/powermock/issues/512", "user": "johanhaleby", "labels": ["Priority:High", "Priority:Medium", "bug", "component:junit"], "created": "2015-07-25 05:52:37", "closed": "2016-04-21 21:26:19", "commits": {"8df3c9ad38a869cd5bb392265367c36b642f3b20": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "475f238072427f6ff1d81b854567a197e6827b6d": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}}, "ttf": 271.0002777777778, "commitsDetails": [{"commitHash": "8df3c9ad38a869cd5bb392265367c36b642f3b20", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "475f238072427f6ff1d81b854567a197e6827b6d", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["5262d381ead07daa3fae140397c622acc53cdb4c"], "nameRev": "475f238072427f6ff1d81b854567a197e6827b6d tags/powermock-1.6.5~10", "commitMessage": "Fix #512: @PrepareForTest on method not working with PowerMockRule (#663)", "commitDateTime": "2016-04-21 23:26:18", "authoredDateTime": "2016-04-21 23:26:18", "commitGitStats": [{"filePath": "api/mockito/src/main/java/org/powermock/api/extension/listener/AnnotationEnabler.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "changelog.txt", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "classloading/classloading-base/src/main/java/org/powermock/classloading/AbstractClassloaderExecutor.java", "insertions": 94, "deletions": 0, "lines": 94}, {"filePath": "classloading/classloading-base/src/main/java/org/powermock/classloading/ClassloaderExecutor.java", "insertions": 15, "deletions": 99, "lines": 114}, {"filePath": "classloading/classloading-base/src/main/java/org/powermock/classloading/SingleClassloaderExecutor.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "classloading/classloading-objenesis/src/test/java/powermock/classloading/ObjenesisClassloaderExecutorTest.java", "insertions": 34, "deletions": 15, "lines": 49}, {"filePath": "classloading/classloading-xstream/src/main/java/org/powermock/classloading/DeepCloner.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "classloading/classloading-xstream/src/test/java/powermock/classloading/XStreamClassloaderExecutorTest.java", "insertions": 34, "deletions": 15, "lines": 49}, {"filePath": "core/src/main/java/org/powermock/tests/utils/RunnerTestSuiteChunker.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "core/src/main/java/org/powermock/tests/utils/TestChunk.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/org/powermock/tests/utils/TestSuiteChunker.java", "insertions": 52, "deletions": 77, "lines": 129}, {"filePath": "core/src/main/java/org/powermock/tests/utils/impl/AbstractCommonTestSuiteChunkerImpl.java", "insertions": 268, "deletions": 0, "lines": 268}, {"filePath": "core/src/main/java/org/powermock/tests/utils/impl/AbstractTestClassExtractor.java", "insertions": 74, "deletions": 57, "lines": 131}, {"filePath": "core/src/main/java/org/powermock/tests/utils/impl/AbstractTestSuiteChunkerImpl.java", "insertions": 5, "deletions": 333, "lines": 338}, {"filePath": "core/src/main/java/org/powermock/tests/utils/impl/MockClassLoaderFactory.java", "insertions": 127, "deletions": 0, "lines": 127}, {"filePath": "core/src/main/java/org/powermock/tests/utils/impl/PrepareForTestExtractorImpl.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "core/src/main/java/org/powermock/tests/utils/impl/TestChunkImpl.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/modules/agent/AbstractClassTransformer.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/modules/agent/support/PowerMockAgentTestInitializer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-impl/junit3/src/main/java/org/powermock/modules/junit3/internal/JUnit3TestSuiteChunker.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "modules/module-impl/junit4-common/src/main/java/org/powermock/modules/junit4/common/internal/JUnit4TestSuiteChunker.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "modules/module-impl/junit4-common/src/main/java/org/powermock/modules/junit4/common/internal/impl/JUnit4TestMethodChecker.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "modules/module-impl/junit4-common/src/main/java/org/powermock/modules/junit4/common/internal/impl/JUnit4TestSuiteChunkerImpl.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "modules/module-impl/junit4-rule-agent/src/main/java/org/powermock/modules/junit4/rule/PowerMockRule.java", "insertions": 2, "deletions": 24, "lines": 26}, {"filePath": "modules/module-impl/junit4-rule/pom.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "modules/module-impl/junit4-rule/src/main/java/org/powermock/modules/junit4/rule/PowerMockClassloaderExecutor.java", "insertions": 11, "deletions": 13, "lines": 24}, {"filePath": "modules/module-impl/junit4-rule/src/main/java/org/powermock/modules/junit4/rule/PowerMockRule.java", "insertions": 32, "deletions": 14, "lines": 46}, {"filePath": "modules/module-impl/junit4-rule/src/main/java/org/powermock/modules/junit4/rule/PowerMockRuleTestSuiteChunker.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "modules/module-test/easymock/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/AnnotationUsageTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/AnnotationUsageTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/AssertPowerMockRuleDelagatesToOtherRulesTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "modules/module-test/mockito/{junit4-rule-objenesis/src/test/java/org/powermock/modules/test/junit4/rule/objenesis => junit4-agent/src/test/java/samples/powermockito/junit4/agent}/FinalDemoTest.java", "insertions": 141, "deletions": 137, "lines": 278}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/MemberModificationExampleTest.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/MockFinalUsingAnnotationsTest.java", "insertions": 76, "deletions": 76, "lines": 152}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/MockStaticTest.java", "insertions": 181, "deletions": 177, "lines": 358}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/MockStaticWithPrivateCtorTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/PrivateInstanceMockingTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/StubMethodTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/SuppressConstructorDemoTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/SuppressConstructorHierarchyDemoTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/SystemClassUserTest.java", "insertions": 132, "deletions": 127, "lines": 259}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/{powermock/modules/test/mockito => samples/powermockito}/junit4/agent/WhenNewTest.java", "insertions": 12, "deletions": 4, "lines": 16}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/github512/Github512Test.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/github512/package-info.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "modules/module-test/mockito/{junit4-agent/src/test/java/powermock/modules/test/mockito/junit4/agent => junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis}/FinalDemoTest.java", "insertions": 141, "deletions": 140, "lines": 281}, {"filePath": "modules/module-test/mockito/{junit4-rule-xstream/src/test/java/org/powermock/example => junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis}/Foo.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "modules/module-test/mockito/{junit4-rule-xstream/src/test/java/org/powermock/modules/test/junit4/rule/xstream => junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis}/MockStaticTest.java", "insertions": 180, "deletions": 176, "lines": 356}, {"filePath": "modules/module-test/mockito/{junit4-rule-xstream/src/test/java/org/powermock/modules/test/junit4/rule/xstream => junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis}/PowerMockRuleTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "modules/module-test/mockito/{junit4-rule-xstream/src/test/java/org/powermock/modules/test/junit4/rule/xstream => junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis}/PrivateInstanceMockingTest.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "modules/module-test/mockito/{junit4-rule-xstream/src/test/java/org/powermock/modules/test/junit4/rule/xstream => junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis}/StaticInitializerExampleTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/{org/powermock/modules/test => samples/powermockito}/junit4/rule/objenesis/SystemClassUserTest.java", "insertions": 133, "deletions": 129, "lines": 262}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/{org/powermock/modules/test => samples/powermockito}/junit4/rule/objenesis/WhenNewTest.java", "insertions": 12, "deletions": 4, "lines": 16}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/bugs/github512/Github512Test.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/bugs/github512/package-info.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/{org/powermock/modules/test => samples/powermockito}/junit4/rule/xstream/AssertPowerMockRuleDelagatesToOtherRulesTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/{org/powermock/modules/test => samples/powermockito}/junit4/rule/xstream/FinalDemoTest.java", "insertions": 141, "deletions": 137, "lines": 278}, {"filePath": "modules/module-test/mockito/{junit4-rule-objenesis/src/test/java/org/powermock/example => junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream}/Foo.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "modules/module-test/mockito/{junit4-rule-objenesis/src/test/java/org/powermock/modules/test/junit4/rule/objenesis => junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream}/MockStaticTest.java", "insertions": 180, "deletions": 176, "lines": 356}, {"filePath": "modules/module-test/mockito/{junit4-rule-objenesis/src/test/java/org/powermock/modules/test/junit4/rule/objenesis => junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream}/PowerMockRuleTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "modules/module-test/mockito/{junit4-rule-objenesis/src/test/java/org/powermock/modules/test/junit4/rule/objenesis => junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream}/PrivateInstanceMockingTest.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "modules/module-test/mockito/{junit4-rule-objenesis/src/test/java/org/powermock/modules/test/junit4/rule/objenesis => junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream}/StaticInitializerExampleTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/{org/powermock/modules/test => samples/powermockito}/junit4/rule/xstream/SystemClassUserTest.java", "insertions": 133, "deletions": 129, "lines": 262}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/{org/powermock/modules/test => samples/powermockito}/junit4/rule/xstream/WhenNewTest.java", "insertions": 12, "deletions": 4, "lines": 16}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/github512/Github512Test.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/github512/package-info.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "reflect/src/main/java/org/powermock/reflect/proxyframework/ClassLoaderRegisterProxyFramework.java", "insertions": 4, "deletions": 28, "lines": 32}, {"filePath": "reflect/src/main/java/org/powermock/reflect/proxyframework/ProxyFrameworkHelper.java", "insertions": 53, "deletions": 0, "lines": 53}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Static method mocking with Mockito 1.9.5 and Powermock fails with Java 8 Consumer Interface", "body": "What steps will reproduce the problem? \nCreate class that implements Consumer interface (ie IntConsumer):\n\n```\nimport java.io.PrintStream;\nimport java.util.function.IntConsumer;\nimport java.util.stream.IntStream;\n\npublic class FizzBuzz implements IntConsumer {\n\n    public static boolean isFizz(int i) {\n        return i &#37; 5 == 0;\n    }\n\n    public static void run(PrintStream outputStream, int max) {\n        IntStream.range(0, max).forEach(new FizzBuzz());\n    }\n\n    @Override\n    public void accept(int value) {\n\n    }\n}\n```\n\nCreate test case that does:\n\n```\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(FizzBuzz.class)\npublic class FizzBuzzTest extends TestCase {\n\n    public static final int ANY_NUMBER = 5;\n\n    public void testFizzOnThreeShouldReturnFalse() {\n        Assert.assertThat(FizzBuzz.isFizz(3), is(false));\n    }\n\n    public void testFizzOnFiveShouldReturnTrue() {\n        Assert.assertThat(FizzBuzz.isFizz(5), is(true));\n    }\n\n    @Test\n    public void acceptOutputsFizzForFizz() {\n        PrintStream stream = mock(PrintStream.class);\n\n        PowerMockito.mockStatic(FizzBuzz.class);\n        Mockito.when(FizzBuzz.isFizz(ANY_NUMBER)).thenReturn(true);\n\n        new FizzBuzz().accept(ANY_NUMBER);\n\n        Mockito.verify(stream, times(10)).println(\"fizz\");\n    }\n}\n```\n\nWhat is the expected output? \n\nUnsatisfied invocation, as there is no implementation in that method that is being tested yet...\n\nThis works when you remove the 'implements IntConsumer' from the implementation. It also seems to fail on the @PrepareForTest(FizzBuzz.class) part.\n\nWhat do you see instead?\n\n/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/bin/java -ea -Didea.launcher.port=7543 \"-Didea.launcher.bin.path=/Applications/IntelliJ IDEA 13.app/bin\" -Dfile.encoding=UTF-8 -classpath \"/Applications/IntelliJ IDEA 13.app/lib/idea_rt.jar:/Applications/IntelliJ IDEA 13.app/plugins/junit/lib/junit-rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/lib/tools.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/htmlconverter.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Users/shendriks/projects/katas/fizzbuzz/java/target/test-classes:/Users/shendriks/projects/katas/fizzbuzz/java/target/classes:/Users/shendriks/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/Users/shendriks/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:/Users/shendriks/.m2/repository/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/Users/shendriks/.m2/repository/org/powermock/powermock-module-junit4/1.5.4/powermock-module-junit4-1.5.4.jar:/Users/shendriks/.m2/repository/org/powermock/powermock-module-junit4-common/1.5.4/powermock-module-junit4-common-1.5.4.jar:/Users/shendriks/.m2/repository/org/powermock/powermock-core/1.5.4/powermock-core-1.5.4.jar:/Users/shendriks/.m2/repository/org/powermock/powermock-reflect/1.5.4/powermock-reflect-1.5.4.jar:/Users/shendriks/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/Users/shendriks/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/Users/shendriks/.m2/repository/org/powermock/powermock-api-mockito/1.5.4/powermock-api-mockito-1.5.4.jar:/Users/shendriks/.m2/repository/org/powermock/powermock-api-support/1.5.4/powermock-api-support-1.5.4.jar\" com.intellij.rt.execution.application.AppMain com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 com.fundynamic.katas.FizzBuzzTest\nInternal Error occured.\njava.lang.IllegalStateException: Failed to transform class with name com.fundynamic.katas.FizzBuzz. Reason: javassist.bytecode.InterfaceMethodrefInfo cannot be cast to javassist.bytecode.MethodrefInfo\n    at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:214)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:144)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:67)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:340)\n    at sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)\n    at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)\n    at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)\n    at sun.reflect.annotation.AnnotationParser.parseSig(AnnotationParser.java:439)\n    at sun.reflect.annotation.AnnotationParser.parseClassValue(AnnotationParser.java:420)\n    at sun.reflect.annotation.AnnotationParser.parseClassArray(AnnotationParser.java:724)\n    at sun.reflect.annotation.AnnotationParser.parseArray(AnnotationParser.java:531)\n    at sun.reflect.annotation.AnnotationParser.parseMemberValue(AnnotationParser.java:355)\n    at sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:286)\n    at sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java...\n", "url": "https://github.com/powermock/powermock/issues/510", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "component:core"], "created": "2015-07-25 05:52:21", "closed": "2016-04-11 07:40:03", "commits": {"2eb15222ea7ad417dfb85db8796021e39e3767fe": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "76bcb3a406fb251a09ee80d58f13e7cdc35e6645": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "cec5b7d39972d4e9c2b71dd88322b48a3a6bfd14": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}}, "ttf": 261.0002777777778, "commitsDetails": [{"commitHash": "2eb15222ea7ad417dfb85db8796021e39e3767fe", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "76bcb3a406fb251a09ee80d58f13e7cdc35e6645", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "cec5b7d39972d4e9c2b71dd88322b48a3a6bfd14", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["a05635b2ce3d3453927e362787353b3aad577be9"], "nameRev": "cec5b7d39972d4e9c2b71dd88322b48a3a6bfd14 tags/powermock-1.6.5~14", "commitMessage": "Fix #510 and other issue with interface with java8 (#658)\n\n* #510: Fix mock static method in interface\r\n* #510: Add test to verify the issue.\r\n", "commitDateTime": "2016-04-11 10:40:02", "authoredDateTime": "2016-04-11 10:40:02", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/pom.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/org/powermock/core/transformers/MockTransformer.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "core/src/main/java/org/powermock/core/transformers/impl/{MainMockTransformer.java => AbstractMainMockTransformer.java}", "insertions": 37, "deletions": 64, "lines": 101}, {"filePath": "core/src/main/java/org/powermock/core/transformers/impl/ClassMockTransformer.java", "insertions": 71, "deletions": 0, "lines": 71}, {"filePath": "core/src/main/java/org/powermock/core/transformers/impl/InterfaceMockTransformer.java", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "core/src/main/java/org/powermock/core/transformers/impl/TestClassTransformer.java", "insertions": 12, "deletions": 11, "lines": 23}, {"filePath": "core/src/main/java/org/powermock/tests/utils/impl/AbstractTestSuiteChunkerImpl.java", "insertions": 24, "deletions": 15, "lines": 39}, {"filePath": "core/src/test/java/org/powermock/core/classloader/MockClassLoaderTest.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "core/src/test/java/org/powermock/core/transformers/impl/{MainMockTransformerTest.java => ClassMockTransformerTest.java}", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "core/src/test/java/org/powermock/core/transformers/impl/TestClassTransformerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/powermock/test/support/MainMockTransformerTestSupport.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "modules/module-impl/agent/src/main/java/org/powermock/modules/agent/PowerMockClassTransformer.java", "insertions": 14, "deletions": 13, "lines": 27}, {"filePath": "modules/module-impl/junit4-rule/src/main/java/org/powermock/modules/junit4/rule/PowerMockClassloaderExecutor.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "modules/module-impl/testng/src/main/java/org/powermock/modules/testng/internal/ClassLoaderFactory.java", "insertions": 13, "deletions": 2, "lines": 15}, {"filePath": "modules/module-test/mockito/junit4-java8/pom.xml", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "modules/module-test/mockito/junit4-java8/src/main/java/samples/powermockito/junit4/bugs/github510/ClassUsesInterface.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "modules/module-test/mockito/junit4-java8/src/main/java/samples/powermockito/junit4/bugs/github510/FizzBuzz.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "modules/module-test/mockito/junit4-java8/src/main/java/samples/powermockito/junit4/bugs/github510/InterfaceWithStatic.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "modules/module-test/mockito/junit4-java8/src/test/java/samples/powermockito/junit4/bugs/github510/ClassUsesInterfaceTest.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "modules/module-test/mockito/junit4-java8/src/test/java/samples/powermockito/junit4/bugs/github510/FizzBuzzTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github510/package-info.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "modules/module-test/mockito/pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "modules/module-test/pom.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "modules/pom.xml", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "pom.xml", "insertions": 12, "deletions": 3, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockTransformer.java", "spoonMethods": []}, {"spoonFilePath": "AbstractMainMockTransformer.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.allowMockingOfStaticAndFinalAndNativeMethods(javassist.CtClass)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.transform(javassist.CtClass)", "TOT": 14, "UPD": 4, "INS": 0, "MOV": 8, "DEL": 2}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.allowMockingOfPackagePrivateClasses(javassist.CtClass)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.suppressStaticInitializerIfRequested(javassist.CtClass,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.removeFinalModifierFromClass(javassist.CtClass)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.removeFinalModifierFromAllStaticFinalFields(javassist.CtClass)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.setAllConstructorsToPublic(javassist.CtClass)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.PowerMockExpressionEditor", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.modifyMethod(javassist.CtMethod)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.PowerMockExpressionEditor.edit(javassist.expr.ConstructorCall)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.PowerMockExpressionEditor.addNewDeferConstructor(javassist.CtClass)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.PowerMockExpressionEditor.edit(javassist.expr.FieldAccess)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformer.PowerMockExpressionEditor.edit(javassist.expr.MethodCall)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.transform(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.transformMockClass(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.allowMockingOfStaticAndFinalAndNativeMethods(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassMockTransformer.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InterfaceMockTransformer.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.InterfaceMockTransformer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestClassTransformer.java", "spoonMethods": []}, {"spoonFilePath": "AbstractTestSuiteChunkerImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.createNewClassloader(java.lang.Class,java.lang.String[],java.lang.String[],org.powermock.core.transformers.MockTransformer[])", "TOT": 9, "UPD": 2, "INS": 1, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.getMockTransformers(org.powermock.core.transformers.MockTransformer[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockClassLoaderTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.classloader.MockClassLoaderTest.autoboxingWorks()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.classloader.MockClassLoaderTest.canFindResource()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.classloader.MockClassLoaderTest.canFindResources()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.classloader.MockClassLoaderTest.resourcesNotDoubled()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.classloader.MockClassLoaderTest.canFindDynamicClassFromAdjustedClasspath()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.classloader.MockClassLoaderTest.cannotFindDynamicClassInDeferredClassLoader()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassMockTransformerTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformerTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformerTest.staticFinalInnerClassesShouldBecomeNonFinal()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformerTest.finalInnerClassesShouldBecomeNonFinal()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformerTest.enumClassesShouldBecomeNonFinal()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformerTest.privateInnerClassesShouldBecomeNonFinal()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.MainMockTransformerTest.subclassShouldNormallyGetAnAdditionalDeferConstructor()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestClassTransformerTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.TestClassTransformerTest.MockClassLoaderCase.createMockClassLoaderThatPrepare(java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MainMockTransformerTestSupport.java", "spoonMethods": []}, {"spoonFilePath": "PowerMockClassTransformer.java", "spoonMethods": [{"spoonMethodName": "org.powermock.modules.agent.PowerMockClassTransformer", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.modules.agent.PowerMockClassTransformer.transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PowerMockClassloaderExecutor.java", "spoonMethods": [{"spoonMethodName": "org.powermock.modules.junit4.rule.PowerMockClassloaderExecutor.forClass(java.lang.Class,org.powermock.tests.utils.MockPolicyInitializer)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "ClassLoaderFactory.java", "spoonMethods": [{"spoonMethodName": "org.powermock.modules.testng.internal.ClassLoaderFactory", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.modules.testng.internal.ClassLoaderFactory.getMockTransformers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassUsesInterface.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github510.ClassUsesInterface", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FizzBuzz.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github510.FizzBuzz", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InterfaceWithStatic.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github510", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassUsesInterfaceTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github510.ClassUsesInterfaceTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FizzBuzzTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github510.FizzBuzzTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Powermock ignores the answer in the @Mock annotation ", "body": "_From [ger...@gmail.com](https://code.google.com/u/112342141579751635264/) on March 06, 2014 09:21:47_\n\nWhat steps will reproduce the problem? Write a test, where a field is annotated with @Mock(answer = Answers.CALLS_REAL_METHODS) What is the expected output? What do you see instead? In Mockito, this works perfectly. It simply calls the real methods of the mock. \nIn PowerMock, this does nothing. It's simply a mock. You have to mock the methods to get any result. What version of the product are you using? On what operating system? PowerMockito 1.5.4\nMockito 1.9.5\n\nMac OS X 10.9.2 Please provide any additional information below. Workaround for this problem: let's say that I have this mock present in my test: \n\n@Mock(answer = Answers.CALLS_REAL_METHODS) private TimestampToStringConverter timestampToStringConverter;\n\nIn order to have it actually call the real methods of the mock, I have to do this in my setup method: \n\nwhen(timestampToStringConverter.convert(any(Timestamp.class))).thenCallRealMethod();\n\nIt is infuriating, however, because you have to actually do this for EVERY method you want to use in your test. If you have a class which has 8 methods, which you all use, you're doing this for every single one of them. It leads to an ugly blob of code.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=486_\n", "url": "https://github.com/powermock/powermock/issues/506", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:51:14", "closed": "2015-07-25 05:51:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SuppressStaticInitializationFor issue with static Logger", "body": "_From [steve.sc...@gmail.com](https://code.google.com/u/109212925742511000674/) on January 24, 2014 11:15:11_\n\nWhat steps will reproduce the problem? 1. Create a HelloWorld class:\n(You'll need SLF4J and a Logging implementation on your classpath)\n\npackage com.example.helloworld;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class HelloWorld {\n\n```\nprivate static final Logger LOG = LoggerFactory.getLogger(HelloWorld.class);\n\nprivate String message;\n\nstatic {\n    LOG.debug(\"This is the static initialization block speaking\");\n}\n\npublic HelloWorld() {\n    LOG.debug(\"I'm running the constructor now\");\n    initializeHelloWorld();\n}\n\nprivate void initializeHelloWorld() {\n    setMessage(\"Hello world!\");\n}\n\npublic String getMessage() {\n    return message;\n}\n\npublic void setMessage(String message) {\n    this.message = message;\n}\n\npublic void sayHello() {\n    LOG.error(getMessage());\n}\n```\n\n}\n1. Create a HelloWorldTest class:\n   (You'll need JUnit and Powermock on your classpath)\n\npackage com.example.helloworld;\n\nimport org.junit.Assert;\nimport org.junit.Test;\n\n@RunWith(PowerMockRunner.class)\n@SuppressStaticInitializationFor(\"com.jnj.gtsc.portal.HelloWorld\")\npublic class HelloWorldTest {\n\n```\n@Test\npublic void testSayHello() {\n    HelloWorld helloWorld = new HelloWorld();\n    Assert.assertEquals(\"Hello world!\", helloWorld.getMessage());\n    helloWorld.sayHello();\n}\n```\n\n}\n1. You'll see that the test fails on a NullPointerException at:\n\npublic class HelloWorld {\n\n```\npublic HelloWorld() {\n    LOG.debug(\"I'm running the constructor now\");\n    ...\n}\n```\n\n} What is the expected output? What do you see instead? - I expect only the static initialization block of the HelloWorld class to  be suppressed. Not also the private static final Logger field. Is this intentional behavior or a bug? What version of the product are you using? On what operating system? - I use powermock 1.5.2 on a Windows 7 operating system. Please provide any additional information below. - /\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=479_\n", "url": "https://github.com/powermock/powermock/issues/499", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:49:31", "closed": "2015-07-25 05:49:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Add support for Java 8", "body": "_From [iir...@gmail.com](https://code.google.com/u/113896979631297957884/) on January 06, 2014 23:51:28_\n\nSome features may not work. At least PowerMock agent module didn't work.\nHere's my fix for that module: https://github.com/iirekm/powermock/commit/339ae4a17ec7e7adde3c78ea5f37843647bbbc3d\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=475_\n", "url": "https://github.com/powermock/powermock/issues/495", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:49:13", "closed": "2015-07-25 05:49:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Issue", "body": "_From [ande.brb](https://code.google.com/u/ande.brb/) on October 10, 2013 15:20:40_\n\nWhat steps will reproduce the problem? 1. Run the test class attached. Error will be thrown. What is the expected output? What do you see instead? String \"mocked\" in the console but I got an error. What version of the product are you using? On what operating system? R: powermock-mockito-1.5.1-full.jar, jdk7. Please provide any additional information below. The problem is on line 37 of the class DefaultPrivatelyExpectedArguments.\n\nNote the declaration of the following methods:\n\nDefaultPrivatelyExpectedArguments#withArguments(Object firstArgument, Object... additionalArguments)\nMethod#invoke(Object obj, Object... args)\n\nAnd the method call:\n method.invoke(mock, firstArgument, additionalArguments);\n\nIf I call the method withArguments with more than two arguments, held that: the call to the invoke method will always be considered to have only two parameters. One being the first argument and the other an array with the other arguments.\n\nSolution: change the method signature to DefaultPrivatelyExpectedArguments#withArguments(Object... arguments) or create a temporary array for the arguments,\n\nObject[] array = new Object[additionalArguments.length + 1];\narray[0] = firstArgument;\nSystem.arraycopy(additionalArguments, 0, array, 1, additionalArguments.length);\nmethod.invoke(mock, array);\n\n**Attachment:** [PowerMockitoIssue.java](http://code.google.com/p/powermock/issues/detail?id=465)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=465_\n", "url": "https://github.com/powermock/powermock/issues/485", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:47:30", "closed": "2015-07-25 05:47:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "powermock won't work with hadoop filesystem", "body": "_From [marsg...@gmail.com](https://code.google.com/u/107955070161138382794/) on August 26, 2013 20:11:29_\n\nWhat steps will reproduce the problem? 1.create any unit test with a setup() method, which create hadoop local file system\n2.make dumb/empty test method, run the test make sure it pass\n3.add @RunWith and @PrepareForTest at the top of the test What is the expected output? What do you see instead? test should still pass, but instead i got error message:\njava.io.IOException: failure to login\n    at org.apache.hadoop.security.UserGroupInformation.getLoginUser(UserGroupInformation.java:490)\n    at org.apache.hadoop.security.UserGroupInformation.getCurrentUser(UserGroupInformation.java:452)\n    at org.apache.hadoop.fs.FileSystem$Cache$Key.<init>(FileSystem.java:1494)\n    at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:1395)\n    at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:254)\n    at org.apache.hadoop.fs.FileSystem.getLocal(FileSystem.java:225) What version of the product are you using? On what operating system? powermock-module-junit4  1.5.1\npowermock-api-mockito     1.5.1\nmockito-core                       1.9.5-rc1\nMac OS X                              10.8.4 Please provide any additional information below. please see the attached sample code\n\n**Attachment:** [TestExample.java](http://code.google.com/p/powermock/issues/detail?id=455)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=455_\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/475", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:46:26", "closed": "2016-11-01 06:56:33", "commits": {}, "ttf": 465.0002777777778, "commitsDetails": []}, {"title": "Javadoc not consistent with actual behavior", "body": "_From [jeet.lo...@gmail.com](https://code.google.com/u/113373774621738081875/) on August 06, 2013 23:13:36_\n\nWhat steps will reproduce the problem? Java doc at http://powermock.googlecode.com/svn/docs/powermock-1.3.7/apidocs/org/powermock/api/mockito/expectation/PowerMockitoStubber.html#when&#37;28java.lang.Class&#37;29 Allows to choose a static method when stubbing in doThrow()|doAnswer()|doNothing()|doReturn() style\nExample:\n\n doThrow(new RuntimeException()).when();\n StaticList.clear();\n\nIn example given above, there are no arguments to when(). While correct behavior is it accepts Class type argument of clss containing static method. What is the expected output? What do you see instead? doThrow(new RuntimeException()).when(StaticList.class); What version of the product are you using? On what operating system? 1.3.7\n\nOS irrelevant.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=452_\n", "url": "https://github.com/powermock/powermock/issues/472", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:45:11", "closed": "2015-07-25 05:45:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "whenNew dos not work when final class and final method are mocked together.", "body": "_From [mohamed....@gmail.com](https://code.google.com/u/113496429414382419601/) on June 17, 2013 15:41:22_\n\nWhat steps will reproduce the problem? I have class : \n\npublic final class A\n{\n   public final void foo(){\n       System.out.println(\"foo\");\n   }\n\n}\nBoth class and method are final.\n\nThis is my test:\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({ A.class })\npublic class Tester2\n{\n\n```\n@Test\npublic void test(){\n    A a = mock( A.class );\n    a.foo();\n\n}\n```\n\n}\n\nthe test prints \"foo\", it means real method was called@\nbut I call the mock, so nothing should be printed !\nIf I remove the final from the method, it works fine, the problem occurs only if both class and method are final. What is the expected output? What do you see instead? I am expecting the mocked method to be called, instead the real method is called What version of the product are you using? On what operating system? 1.4.12, Windows 7\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=448_\n", "url": "https://github.com/powermock/powermock/issues/468", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:44:48", "closed": "2016-02-26 20:16:50", "commits": {}, "ttf": 216.00027777777777, "commitsDetails": []}, {"title": "Error while getting Context", "body": "_From [subeer.v...@gmail.com](https://code.google.com/u/112545660626941097722/) on June 13, 2013 08:04:44_\n1. Create a test project with junit4\n2. Write test cases\n3. Try to get Context\n\nWe should be able to get the Context.\n\nUsing JDK 1.6, Android library, junit4.4 library, and all Powermock libraries\n\nI have written test cases for my application. but for some cases, I need to have the Context. but I am unable to get it.\n\nCan you please help me to how to get application context using junit framework?\n\nHelp appreciated.\n\nThanks\nSubeer\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=447_\n", "url": "https://github.com/powermock/powermock/issues/467", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:44:17", "closed": "2015-07-25 05:44:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "How to get Context object with the PowerMock", "body": "_From [bhushan....@gmail.com](https://code.google.com/u/104838590285601168300/) on June 11, 2013 16:31:56_\n\nHello,\n\nWe are using the PowerMock tool for unit testing the Android application. For this unit testing we need the context object . For getting the context we are writing the following code :\nContext context = PowerMockito.mock(HomeActivity.class);\nThe HomeActivity extends Activity in our application.\n\nBut the context object which we are getting above , we tried to use in our test methods but we are getting error that application context is unexpectedly null.\n\nCan you please help us in finding out the way why we are not able to get context object?\n\nHelp Appreciated.\n\nThanks!\nBhushan\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=446_\n", "url": "https://github.com/powermock/powermock/issues/466", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:43:58", "closed": "2015-07-25 05:44:16", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mocked system class is not invoked when it's casted into another (non-final) type", "body": "_From [jonatan....@softhouse.se](https://code.google.com/u/103640218002720706174/) on June 10, 2013 01:47:34_\n\nWhat steps will reproduce the problem? 1. Mock a final system class such as StringBuilder \n2. Cast that instance into a CharSequence\n3. Call method and expect the mocked call to be invoked. What is the expected output? What do you see instead? The expected output is whatever the StringBuilder was mocked to do. Instead the non-mocked instance is used so mocked invocations aren't performed. What version of the product are you using? On what operating system? Powermock 1.5, Mac OS X 10.7.5 Please provide any additional information below. See the attached patch for test case and fix.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=445_\n", "url": "https://github.com/powermock/powermock/issues/465", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:41:51", "closed": "2015-07-25 05:43:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mocking Enum sometimes work, sometimes not. It depends for Test invocation order. Throws ArrayIndexOutOfBoundsException", "body": "_From [mstachniuk](https://code.google.com/u/mstachniuk/) on April 13, 2013 16:33:59_\n\nWhat steps will reproduce the problem? 1. Write some tests, mock Enum, write some tests\n2. Or see Attachment and run Tests What is the expected output? What do you see instead? java.lang.ArrayIndexOutOfBoundsException: 2\n    at com.blogspot.mstachniuk.powermockdemo.TaxCalculatorFactory.getInstance(TaxCalculatorFactory.java:6)\n    at com.blogspot.mstachniuk.powermockdemo.TaxCalculatorFactoryTest.shouldThrowExceptionWhenUseNonExistCountry(TaxCalculatorFactoryTest.java:44) What version of the product are you using? On what operating system? PowerMock 1.5 with Mockito\nMaven 2.2.1\nJDK 1.6.0_41\nIdea 12.1.1\nEclipse 4.2 Please provide any additional information below. In TaxCalculatorFactoryTest are 2 Tests. I will mock Enum and this test sometimes work, sometimes not. When this test start as first, it works. When as 2nd Test I get ArrayIndexOutOfBoundsException.\nThis error is in Maven, Eclipse and Idea reproducible.\n\n**Attachment:** [PowerMockDemo.zip](http://code.google.com/p/powermock/issues/detail?id=440)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=440_\n", "url": "https://github.com/powermock/powermock/issues/460", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:40:50", "closed": "2017-08-10 19:22:03", "commits": {}, "ttf": 747.0002777777778, "commitsDetails": []}, {"title": "powermock @RunWith(PowerMockRunner.class) cause classNotFoundException ", "body": "_From [klein...@gmail.com](https://code.google.com/u/101205824346129362384/) on March 18, 2013 16:35:19_\n\nHi,\n\nI am using PowerMock to mock static object.\nWhen I am running a test in Eclipse everything is fine, but running it via ANT (Junit) on my Linux Sabayon I get the following (I get it even when only adding: @RunWith(PowerMockRunner.class)):\n\njava.lang.RuntimeException: Internal error in PowerMock\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:141)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:122)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:102)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:42)\nCaused by: java.lang.ClassNotFoundException: com.oversi.vcache.ttt\n    at java.net.URLClassLoader$1.run(URLClassLoader.java:202)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:190)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:138)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=436_\n", "url": "https://github.com/powermock/powermock/issues/456", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:40:26", "closed": "2015-07-25 05:40:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Support mock injection via annotations", "body": "_From [anthony....@gmail.com](https://code.google.com/u/113243536995729033979/) on March 14, 2013 17:24:20_\n\nThere is a feature I love with unitils : the possibility to inject the tested object and the mocks.\n\nFor example :\n\n@RunWith(UnitilsJUnit4TestClassRunner.class)\npublic class MyServiceInjectTest { \n\n```\n@TestedObject\nprivate MyService myService; \n\n@InjectIntoByType\nprivate Mock<MyDao> myDaoMock; \n\n@Test\npublic void testMethod() { \n    // define behavior \n    expect(myDaoMock.doSomething()).andReturn(\"something\"),\n\n    replayAll();\n    myService.aService();\n    verifyAll();\n} \n```\n\n}\n\n@TestedObject creates the object to test.\n@InjectIntoByType creates a mock, and inject it in the tested object, using its type.\n\nWe no longer need to use createMock() to create a mock and ReflectionTestUtils.setField() to set the mock in a private field, all the work is done automatically with only two annotations.\n\nUnfortunately, I can use only one Runner in my JUnit classes, I can't use powermock and unitils together.\n\nIt would be nice if powermock had such a feature given that it considerably simplifies test classes.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=435_\n", "url": "https://github.com/powermock/powermock/issues/455", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:40:19", "closed": "2015-07-25 05:40:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Super-class constructor mocking: MockGateWay newInstanceCall type behavior expected", "body": "_From [bahatan...@gmail.com](https://code.google.com/u/103491117980673201748/) on March 12, 2013 12:36:16_\n\nWhat steps will reproduce the problem? 1. Keeping PowerMock.expectNew for super class constructor do not work while testing inheriting class's constructor. I understand that expectnew is not a way to intercept call to Super.\n2.MockGateWay constructorCall gets executed which only looks for Suppressions but not for newSubstitutions of MockRepository\n3.PowerMock is a dream-tool, so getting the superclass-constructor intercepted is not possible?\n\nUsing latest powermock version for easymock.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=434_\n", "url": "https://github.com/powermock/powermock/issues/454", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-25 05:40:04", "closed": "2015-07-25 05:40:16", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Incompatibility issues with JaCoCo", "body": "_From [headcrashing](https://code.google.com/u/headcrashing/) on February 21, 2013 09:22:20_\n\nThere seems to be an incompatibility issue between powermock and JaCoCo, possibly related to JDK 7.\n\nAttached is a small maven project which can be executed using \"mvn clean verify\" to showcase the problem.\n\nDepending on which type of classloading and which type of rule implementation is used, the result is different:\n- powermock-module-junit4-rule + powermock-classloading-xstream:\n  - tests succeed (hence a.b.c.d1.A.getC() IS covered -- see test code)\n  - target/site/jacoco/index.html a.b.c.d1.A.getC() says 0&#37;\n- powermock-module-junit4-rule + powermock-classloading-objenesis\n  - one test fails\n    - java.lang.ArrayIndexOutOfBoundsException: 5 at a.b.c.d1.WhenNewTest.should MockConstructor (WhenNewTest.java)\n- powermock-module-junit4-rule-agent + powermock-classloading-objenesis\n  - both tests fail\n    - Cannot subclass final class a.b.c.d1.B\n    - Expecting a stackmap frame at branch target 21 in method a.b.c.d2.H.<init>/La/b/c/d2/G;)V at offset 11\n- powermock-module-junit4-rule-agent + powermock-classloading-xstream\n  - both tests fail\n    - Cannot subclass final class a.b.c.d1.B\n    - Expecting a stackmap frame at branch target 21 in method a.b.c.d2.H.<init>(La/b/c/d2/G;)V at offset 11\n\nBoth, powermock and JaCoCo are really great tools and we appreciate the hard work of the authors, but unless both work fine together we really have the problem that we are totally stuck with our QA. Hence we really beg for a working solution! :-)\n\n**Attachment:** [powermockito-jacoco-failure.zip](http://code.google.com/p/powermock/issues/detail?id=432)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=432_\n", "url": "https://github.com/powermock/powermock/issues/452", "user": "johanhaleby", "labels": ["Not an issue", "Priority:Medium", "bug"], "created": "2015-07-24 20:00:30", "closed": "2016-10-22 10:54:35", "commits": {}, "ttf": 455.0002777777778, "commitsDetails": []}, {"title": "Cannot use mock policies with Mockito in PowerMock 1.5 ", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on February 20, 2013 13:56:27_\n\nSlf4j mock policy stopped working in PowerMock 1.5 for Mockito. The reason is that Mockito now has a plugin architecture and loads the Mockito from the wrong classloader.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=431_\n", "url": "https://github.com/powermock/powermock/issues/451", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 20:00:20", "closed": "2015-07-24 20:00:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Static mocks throw java.lang.VerifyError when using Java 7 language features.", "body": "_From [nho...@gmail.com](https://code.google.com/u/118405187479428795965/) on January 30, 2013 19:29:25_\n\nWhat steps will reproduce the problem? 1. Class uses Java 7 language features\n2. PowerMock mocks with mockStatic \n3. No profit\n\nWhat is the expected output?\nTest runs\n\nWhat do you see instead?\njava.lang.VerifyError: Stack map does not match the one at exception handler 75 in method org.app.Foo.bar()Ljava/lang/String; at offset 72\n\nIn the Foo class the following does NOT run\n\ntry {\n    return \"baz\";\n} catch (FileSystemAlreadyExistsException | ConcurrentModificationException e) {\n    System.out.println(\"error\");\n    return null;\n}\n\nChanging it to this works fine\n\ntry {\n    return \"baz\";\n} catch (FileSystemAlreadyExistsException e) {\n    System.out.println(\"error\");\n    return null;\n} catch (ConcurrentModificationException e) {\n    System.out.println(\"error\");\n    return null;\n} What version of the product are you using? On what operating system? PowerMock 1.5\nMockito 1.9.5\njavassist 3.17.1-GA\njava 1.7.0_11 x64\nWindows 7 x64\nProject target / language level / compiler: 1.7\n\nTest case attached\n\n**Attachment:** [PowerMockTest.zip](http://code.google.com/p/powermock/issues/detail?id=427)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=427_\n", "url": "https://github.com/powermock/powermock/issues/447", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:59:15", "closed": "2015-07-24 19:59:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MockClassLoader.getResources loads twice same file", "body": "_From [ande.brb](https://code.google.com/u/ande.brb/) on January 29, 2013 12:52:26_\n\nWhat steps will reproduce the problem? 1. Execute attached file. What is the expected output? What do you see instead? 1. Only one resource found. What version of the product are you using? On what operating system? powermock-mockito-1.5-full, Win7 x64. Please provide any additional information below. The method getResources, inherited from ClassLoader, delegates the search of resources to parent ClassLoader and then try to find it in his own ClassLoader. This way, the resource is found in the parent ClassLoader when the behaviour of MockClassLoader should delegate this function to the wrapped ClassLoader, which could be the same parent, causing to load the file twice.\n\n**Attachment:** [ClassLoaderBug.java](http://code.google.com/p/powermock/issues/detail?id=426)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=426_\n", "url": "https://github.com/powermock/powermock/issues/446", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:58:54", "closed": "2015-07-24 19:59:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mockito; mock name in @Mock(name=\"abc\") annotatioins ignored", "body": "_From [jonas.be...@nitorcreations.com](https://code.google.com/u/109197215454548273863/) on January 17, 2013 13:21:19_\n\nWhat steps will reproduce the problem? 1. Declare two mocks of the same interface:\n  @Mock(name=\"abc\")\n  SomeInterface mock1;\n  @Mock(name=\"def\")\n  SomeInterface mock2;\n2. Declare the tested object to inject the mocks into:\n  @InjectMocks\n  SomeService service = new SomeServiceImpl();\n3. Related SomeServiceImpl details:\n  public class SomeServiceImpl {\n    private SomeInterface abc;\n    private SomeInterface def;\n    ...\n  } What is the expected output? What do you see instead? Expected: service.abc != null && service.def != null\n  Actual: service.abc == null && service.def == null What version of the product are you using? On what operating system? Tried both mockito-1.8.5 + powermock 1.4.10 and mockito-1.9.5 + powermock 1.5. Please provide any additional information below. By debugging it was resolved that the mock names of both mock1 and mock2 are both \"someInterface\" instead of \"abc\" and \"def\" respectively. It appears PowerMock does not consider the \"name\" parameter of the @Mock mockito annotation at all.\n\n  When trying to find out why, I bumped into the following potential show-stoppers:\n1. AnnotationEnabler.standardInject() calls PowerMockito.mock(Class) instead of PowerMockito.mock(Class, MockSettings) and using MockSettings.name() to set the name. Please see mockito-1.9.5 / MockAnnotationProcessor.process() for how mockito handles naming of mocks.\n2. MockCreator.mock() ignores any name set in the mockSettings argument and instead creates a name based on the field type (and updates the given mockSettings with it).\n\nDue to the second point, when using PowerMockit.mock(Class, MockSettings) with a mock name set in the settings argument it would thus also be ignored.\n\nAs a workaround to this problem I invented the following: Since the @Mock:ed field type is used for the mock name, and the mock name is used when matching against names of fields in the SomeServiceImpl class, I can create fake interfaces used only in testing named suitably, e.g.\n\n  public interface Abc extends SomeInterface {}\n  public interface Def extends SomeInterface {}\n\n  @Mock\n  Abc mock1;\n  @Mock\n  Def mock2;\n\nPlease note that SomeServiceImpl is untouched. Now mock1 gets injected into field \"abc\" and mock2 to \"def\" as wanted. The Abc and Def interfaces need only be visible to test code, so it does not pollute the actual code in any way.\n\nThe workaround works for classes as well as long as they are not final.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=423_\n", "url": "https://github.com/powermock/powermock/issues/443", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:58:02", "closed": "2015-07-24 19:58:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "maven dependency on powermock-api-easymock doesn't bring in easymock", "body": "_From [onlyn...@gmail.com](https://code.google.com/u/103888227351071805244/) on January 08, 2013 22:42:16_\n\nWhat steps will reproduce the problem? 1. Added the following to my pom.xml:\n\n```\n\\<dependency>\n  \\<groupId>org.powermock</groupId>\n  \\<artifactId>powermock-api-easymock</artifactId>\n  \\<version>1.5</version>\n  \\<scope>test</scope>\n\\</dependency>\n```\n1. Ran mvn test\n2. Got the following error: package org.easymock does not exist What is the expected output? What do you see instead? I expected that since the pom for powermock-api-easymock says it depends on easymock, that it would be pulled in. However I get the error:\n\npackage org.easymock does not exist What version of the product are you using? On what operating system? Version 1.5 on linux. Please provide any additional information below. It appears to be due to the parent pom saying that easymock should be provided: http://stackoverflow.com/questions/10382220/maven-test-dependency-not-being-found\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=420_\n", "url": "https://github.com/powermock/powermock/issues/440", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:55:30", "closed": "2015-07-24 19:55:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MethodRule and TestRule both need to be supported for junit >=4.9", "body": "_From [boris-c...@gmx.com](https://code.google.com/u/114008576246522761655/) on January 08, 2013 21:20:57_\n\nWhat steps will reproduce the problem? @RunWith(PowerMockRunner.class)\npublic class RuleJunit47Test {\n  @Rule\n  public MyRule rule = new MyRule();\n  @Test\n  public void test() {\n  }\n  private class MyRule implements MethodRule {\n    public Statement apply(Statement base, FrameworkMethod method, Object target) {\n      return base;\n    }\n  }\n} What is the expected output? What do you see instead? Tests in error: \n  test(RuleJunit47Test): MyRule cannot be cast to org.junit.rules.TestRule What version of the product are you using? On what operating system? powermock 1.5 Please provide any additional information below. The interface org.junit.rules.MethodRule was deprecated in junit 4.9 and 4.10, I guess that's why there are two different JUnit-Runners in Powermock, one for >=4.7 which supports MethodRule and one for >=4.9 which supports TestRule.\nDropping support for a deprecated interface was OK, because one had to migrate to the new TestRule anyway. But with junit 4.11 the deprecation of MethodRule was dropped again, so that its now OK to implement MethodRule or TestRule for own Rules.\n\nThis change is not by accident, but even listed in the changelog:\n\n> MethodRule is no longer deprecated. https://github.com/KentBeck/junit/blob/master/doc/ReleaseNotes4.11.md I made a patch which changes PowerMockJUnit49RunnerDelegateImpl to extend the 4.7-runner (instead of the 4.4-runner). The 4.9-runner will now support both TestRule AND MethodRule, while the 4.7-runner continues to support only MethodRule, because TestRule is not available in the older version.\nThe patch removes quiet a lot from PowerMockJUnit49RunnerDelegateImpl, but this is only because most of the functionality seemed duplicated and could be removed after subclassing PowerMockJUnit47RunnerDelegateImpl. I hope I did not miss anything.\n\n**Attachment:** [powermock-methodrule-for-junit49.patch](http://code.google.com/p/powermock/issues/detail?id=419)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=419_\n", "url": "https://github.com/powermock/powermock/issues/439", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:55:11", "closed": "2015-07-24 19:55:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "EqualsWithGetClassTest won't pass from time to time", "body": "_From [cndoublehero@gmail.com](https://code.google.com/u/cndoublehero@gmail.com/) on December 19, 2012 14:11:18_\n\nEqualsWithGetClassTest is in the powermock framework, and this class cann't pass all the test in juit4. Method callingGetClassOnAMockFailsWhenTheCallWasUnexpectedAndMockStandardMethodsIsSet is the failure one.\nI dig into the code and find MockGateway.MOCK_GET_CLASS_METHOD is still false.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=418_\n", "url": "https://github.com/powermock/powermock/issues/438", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:54:46", "closed": "2015-07-24 19:55:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "@RunWith(PowerMockRunner.class) failed with Junit4 ExpectedException Rule", "body": "_From [yvesdm](https://code.google.com/u/yvesdm/) on December 07, 2012 14:46:18_\n\nWhat steps will reproduce the problem? 1. see attached unit test What is the expected output? What do you see instead? As is :\n Running this test with @RunWith(PowerMockRunner.class) will failed\n Running this test without @RunWith(PowerMockRunner.class) will suceed\nExpected :\n using @RunWith(PowerMockRunner.class) should not failed the test. What version of the product are you using? On what operating system? junit.version 4.11\npowermock.version 1.5\njava 1.6.0_18\nWindows 7 Please provide any additional information below.\n\n**Attachment:** [ExceptionUnitTest.java](http://code.google.com/p/powermock/issues/detail?id=416)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=416_\n", "url": "https://github.com/powermock/powermock/issues/436", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:54:12", "closed": "2016-02-26 20:20:58", "commits": {}, "ttf": 217.00027777777777, "commitsDetails": []}, {"title": "Incorrect Class-Path entry in powermock-core JAR manifest", "body": "_From [atomknig...@gmail.com](https://code.google.com/u/109011137701576586292/) on December 03, 2012 18:09:43_\n\nThe powermock-core POM specifies that the classpath should be added to the JAR manifest. This causes the manifest to contain an entry like this:\n\nClass-Path: powermock-reflect-1.4.12.jar objenesis-1.2.jar javassist-3\n .16.1-GA.jar\n\nHowever, if the JAR resides in a local Maven repository, these paths are incorrect since the artifacts are organized by group ID/artifact ID/version.\n\nWould it be possible to remove this manifest entry?\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=413_\n", "url": "https://github.com/powermock/powermock/issues/433", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:51:57", "closed": "2015-07-24 19:52:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PrepareForTest javadocs incorrect", "body": "_From [brian.he...@gmail.com](https://code.google.com/u/101263473345426190625/) on November 21, 2012 22:22:37_\n\nWhat steps will reproduce the problem? 1. look at the docs @ http://powermock.googlecode.com/svn/docs/powermock-1.4.12/apidocs/org/powermock/core/classloader/annotations/PrepareForTest.html 2. try to write code using the information contained therein regarding wildcarded package names:\n    You can also prepare whole packages for test by using wildcards:\n     @PrepareForTest(\"com.mypackage._\") What is the expected output? What do you see instead? This should be compilable.  It is not.  Error: \n    Type mismatch: cannot convert from String to Class<?>[] What version of the product are you using? On what operating system? 1.4.12 Please provide any additional information below. Perhaps correct usage?:\n    @PrepareForTest(fullyQualifiedNames={\"com.mypackage._\"})\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=411_\n", "url": "https://github.com/powermock/powermock/issues/431", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported", "wiki"], "created": "2015-07-24 19:51:42", "closed": "2016-02-29 12:39:05", "commits": {}, "ttf": 219.00027777777777, "commitsDetails": []}, {"title": "ClassFormatError: Invalid this class index 50945 in constant pool in class file", "body": "_From [ric.flai...@gmail.com](https://code.google.com/u/104213777758065142109/) on November 14, 2012 17:43:18_\n\nHi,\n\nI wanted to test a class with PowerMock wich is quite big (approximately 6800 lines). I have to use the annotation SuppressStaticInitializationFor to suppress some static initialization of this class. I got the error below.\n\nThe version of PowerMock is 1.4.11. Javassist version is 3.15.0-GA (I tried the 3.16.1 too). The operatin system is Windows XP.\n\nIf I decreased the size of the class I didn't get the error.\n\njava.lang.ClassFormatError: Invalid this class index 50945 in constant pool in class file com/virginmedia/pco/webserviceclients/SendEmail_V3\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClassCond(ClassLoader.java:631)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:615)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:465)\n    at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:210)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:145)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:65)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n    at java.lang.Class.getDeclaredFields0(Native Method)\n    at java.lang.Class.privateGetDeclaredFields(Class.java:2291)\n    at java.lang.Class.getDeclaredFields(Class.java:1743)\n    at org.powermock.reflect.internal.WhiteboxImpl.findAllFieldsUsingStrategy(WhiteboxImpl.java:533)\n    at org.powermock.reflect.internal.WhiteboxImpl.getFieldsAnnotatedWith(WhiteboxImpl.java:2343)\n    at org.powermock.reflect.internal.WhiteboxImpl.getFieldsAnnotatedWith(WhiteboxImpl.java:2326)\n    at org.powermock.reflect.Whitebox.getFieldsAnnotatedWith(Whitebox.java:568)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:70)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:284)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:209)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:148)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:122)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:102)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:42)\n    at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)\n    at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)\n    at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:172)\n    at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:104)\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:70)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=409_\n", "url": "https://github.com/powermock/powermock/issues/429", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 19:50:52", "closed": "2015-07-24 19:51:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMockRunner processes JUnit Rules incorrectly", "body": "_From [Iso.poc...@gmail.com](https://code.google.com/u/107642349162510209372/) on November 09, 2012 09:55:39_\n\nWhat steps will reproduce the problem? Use test class in attachment\n1. Run testWithoutException() without PowerMockRunner\n2. Run testWithoutException() with PowerMockRunner\n3. Run testWithException() without PowerMockRunner\n4. Run testWithException() with PowerMockRunner What is the expected output? What do you see instead? 1. NO EXCEPTION - START\nNO EXCEPTION - STOP\nRule1\nRule2 2. Rule1\nNO EXCEPTION - START\nNO EXCEPTION - STOP\nRule2 3. EXCEPTION - START\n\n4.\nRule1\nEXCEPTION - START What version of the product are you using? On what operating system? JUnit 4.8.2\nPowerMock 1.4.12 Please provide any additional information below. As you can see, PowerMockRunner handles JUnit Rules differently than BlockJUnit4ClassRunner. Please compare: PowerMockJUnit47RunnerDelegateImpl#executeTest(Method, Object, Runnable) with BlockJUnit4ClassRunner#withRules(FrameworkMethod, Object, Statement).\n\nJUnit PASSES each Rule's returned statement and the last declared rule gets statement that evaluates test method. On contrary PowerMockRunner runs every declared rule one by one.\n\nPlease see java doc of MethodRule: \"Multiple {@link MethodRule}s can be applied to a test method. The Statement that executes the method is passed to each annotated Rule in turn, and each may return a substitute or modified Statement, which is passed to the next {@link Rule}, if any.\".\nIt means that PowerMockRunner behaviour is wrong.\n\n**Attachment:** [TestClass.java](http://code.google.com/p/powermock/issues/detail?id=407)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=407_\n", "url": "https://github.com/powermock/powermock/issues/427", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:49:22", "closed": "2016-01-28 08:25:24", "commits": {}, "ttf": 187.00027777777777, "commitsDetails": []}, {"title": "Failed to mock a final class with both @PowerMockIgnore and @PowerMockIgnore set", "body": "_From [shen.bin...@gmail.com](https://code.google.com/u/101260566783933937240/) on October 15, 2012 03:48:59_\n\nWhat steps will reproduce the problem? 1. import the attached java project into eclipse (the one I use is Juno SR1)\n2. select FooUtilsTest and run as Junit Test What is the expected output? What do you see instead? Expected behavior: the test passes\nActual behavior: An IllegalArgumentException is thrown as below\n\njava.lang.IllegalArgumentException: Cannot subclass final class class foo.FooUtils\n    at org.mockito.cglib.proxy.Enhancer.generateClass(Enhancer.java:447)\n    at org.mockito.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25)\n    at org.mockito.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:217)\n    at org.mockito.cglib.proxy.Enhancer.createHelper(Enhancer.java:378)\n    at org.mockito.cglib.proxy.Enhancer.createClass(Enhancer.java:318)\n    at org.mockito.internal.creation.jmock.ClassImposterizer.createProxyClass(ClassImposterizer.java:94)\n    at org.mockito.internal.creation.jmock.ClassImposterizer.imposterise(ClassImposterizer.java:51)\n    at org.powermock.api.mockito.internal.mockcreation.MockCreator.createMethodInvocationControl(MockCreator.java:100)\n    at org.powermock.api.mockito.internal.mockcreation.MockCreator.mock(MockCreator.java:58)\n    at org.powermock.api.mockito.PowerMockito.mockStatic(PowerMockito.java:70)\n    at test.FooUtilsTest.testFoo(FooUtilsTest.java:22)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n    at java.lang.reflect.Method.invoke(Method.java:611)\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:66)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:307)\n    at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:86)\n    at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:94)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:294)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:282)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:207)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:146)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:118)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:102)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) What version of the product are you using? On what operating system? OS: Win7 64-bit\nJVM: IBM 1.6.0\nEclipse: Juno SR1\nPowerMock: 1.4.10 Please provide any additional information below. To make the test pass, I have to do either of the following:\n1. remove line of @PowerMockIgnore(\"foo.*\")\n2. change the FooUtils non-final\n\n**Attachment:** [PowerMockTest.zip](http://code.google.com/p/powermock/issues/detail?id=404)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=404_\n", "url": "https://github.com/powermock/powermock/issues/424", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:46:58", "closed": "2015-07-24 19:47:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock disables EclEmma code coverage", "body": "_From [linmingr...@gmail.com](https://code.google.com/u/112682308495640684339/) on September 10, 2012 09:55:56_\n\nWhat steps will reproduce the problem? 1.Create a powermock test with Mockito, the test class is decorated with @RunWith and @PrepareForTest annotation.\n2.Run the Test with \"coverage as\". What is the expected output? What do you see instead? Expected: EclEmma shows correct code coverage report.\nInstead: EclEmma shows zero code coverage on target class. What version of the product are you using? On what operating system? 1. Eclipse is 3.7. \n1. EclEmma Plugin: 2.1.4. \n2. PowerMock: powermock-mockito-1.4.12-full.jar.\n3. OS: Windows XP sp2. \n4. JDK: 1.6. Please provide any additional information below. N/A.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=402_\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/422", "user": "johanhaleby", "labels": ["Cannot be fixed", "Priority:High", "bug"], "created": "2015-07-24 19:44:42", "closed": "2016-10-31 08:02:20", "commits": {"37858a3c32cd79ce8e1278ed5d3694d4b7a1d1b4": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 464.0002777777778, "commitsDetails": [{"commitHash": "37858a3c32cd79ce8e1278ed5d3694d4b7a1d1b4", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["43254372cba340e6d3db42a78fd0a915cf73af40"], "nameRev": "37858a3c32cd79ce8e1278ed5d3694d4b7a1d1b4 tags/powermock-1.6.6~7", "commitMessage": "Issue #707 PowerMock should ignore and keep without changes synthetic method/fields when modifies class (#710)\n\nAlso fixed issues: #645 #422", "commitDateTime": "2016-10-31 09:00:31", "authoredDateTime": "2016-10-31 09:00:31", "commitGitStats": [{"filePath": "core/src/main/java/org/powermock/core/MockGateway.java", "insertions": 66, "deletions": 65, "lines": 131}, {"filePath": "core/src/main/java/org/powermock/core/classloader/MockClassLoader.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/src/main/java/org/powermock/core/transformers/impl/AbstractMainMockTransformer.java", "insertions": 69, "deletions": 29, "lines": 98}, {"filePath": "core/src/test/java/org/powermock/core/transformers/impl/ClassMockTransformerTest.java", "insertions": 215, "deletions": 9, "lines": 224}, {"filePath": "core/src/test/java/powermock/test/support/MainMockTransformerTestSupport.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "modules/module-test/easymock/junit4-test/src/test/java/samples/junit4/finalmocking/FinalDemoTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/FinalDemoTest.java", "insertions": 0, "deletions": 141, "lines": 141}, {"filePath": "modules/module-test/mockito/junit4-agent/src/test/java/samples/powermockito/junit4/agent/MockFinalNonStaticMethodsTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/FinalDemoTest.java", "insertions": 0, "deletions": 141, "lines": 141}, {"filePath": "modules/module-test/mockito/junit4-rule-objenesis/src/test/java/samples/powermockito/junit4/rule/objenesis/MockFinalNonStaticMethodsTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/FinalDemoTest.java", "insertions": 0, "deletions": 141, "lines": 141}, {"filePath": "modules/module-test/mockito/junit4-rule-xstream/src/test/java/samples/powermockito/junit4/rule/xstream/MockFinalNonStaticMethodsTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "modules/module-test/mockito/junit4/pom.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/{ => bugs}/ClassLoaderBugTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/finalmocking/FinalDemoTest.java", "insertions": 0, "deletions": 135, "lines": 135}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/finalmocking/MockFinalMethodsCases.java", "insertions": 120, "deletions": 0, "lines": 120}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/finalmocking/MockFinalNonStaticMethodsTest.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/InstanceMethods.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/JacocoCoverageTest.java", "insertions": 169, "deletions": 0, "lines": 169}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/StaticMethods.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/jacoco/TargetTest.java", "insertions": 43, "deletions": 0, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MockGateway.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.MockGateway.methodCall(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.newInstanceCall(java.lang.Class,java.lang.Object[],java.lang.Class[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.fieldCall(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.staticConstructorCall(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.MockGateway.constructorCall(java.lang.Class,java.lang.Object[],java.lang.Class[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MockClassLoader.java", "spoonMethods": []}, {"spoonFilePath": "AbstractMainMockTransformer.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.PowerMockExpressionEditor.edit(javassist.expr.FieldAccess)", "TOT": 21, "UPD": 1, "INS": 5, "MOV": 7, "DEL": 8}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.shouldSkipMethod(javassist.CtMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.isAccessFlagSynthetic(javassist.CtMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.isBridgeMethod(javassist.CtMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.isNotSyntheticField(javassist.bytecode.FieldInfo)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.modifyMethod(javassist.CtMethod)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.transform(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.AbstractMainMockTransformer.transformMockClass(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ClassMockTransformerTest.java", "spoonMethods": [{"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldLoadClassAndOverrideMethodGreaterThanJvmLimit()", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldIgnoreSyntheticNonBridgeMethods()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldIgnoreCallToSyntheticNonBridgeMethods()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldIgnoreCallToSyntheticField()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.shouldModifyBridgeMethods()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.prepareClassesForFieldTests(javassist.ClassPool)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.insertCallSyntheticMethod(javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.addSyntheticField(javassist.ClassPool,javassist.CtClass)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.prepareClassesForTest(javassist.ClassPool,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.runTestWithNewClassLoader(javassist.ClassPool,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.addCallInterceptorToMockGateway(javassist.ClassPool)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.addSyntheticMethod(javassist.ClassPool,javassist.CtClass,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldIgnoreSyntheticNonBridgeMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldIgnoreCallToSyntheticNonBridgeMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldIgnoreCallToSyntheticField", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.core.transformers.impl.ClassMockTransformerTest.ShouldModifyBridgeMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MainMockTransformerTestSupport.java", "spoonMethods": [{"spoonMethodName": "powermock.test.support.MainMockTransformerTestSupport.SuperClassWithObjectMethod", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "powermock.test.support.MainMockTransformerTestSupport.SubclassWithBridgeMethod", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "powermock.test.support.MainMockTransformerTestSupport.CallSpy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FinalDemoTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.finalmocking.FinalDemoTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MockFinalNonStaticMethodsTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.finalmocking.MockFinalNonStaticMethodsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassLoaderBugTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.ClassLoaderBugTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.powermockito.junit4.ClassLoaderBugTest.resourcesAreNotLoadedTwice()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockFinalMethodsCases.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.finalmocking.MockFinalMethodsCases", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InstanceMethods.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.InstanceMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JacocoCoverageTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.JacocoCoverageTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StaticMethods.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.StaticMethods", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TargetTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.jacoco.TargetTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "PowerMockito + Mockito 1.9.5 NoClassDefFound", "body": "_From [mellowaredev](https://code.google.com/u/mellowaredev/) on July 20, 2012 19:53:25_\n\nIt looks like Mockito 1.9.5 removed the MockitoInvocationHandler.java  class PowerMockito was counting on.\n\njava.lang.NoClassDefFoundError: org/mockito/internal/MockitoInvocationHandler\n    at org.powermock.api.mockito.PowerMockito.mock(PowerMockito.java:138)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=398_\n", "url": "https://github.com/powermock/powermock/issues/418", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-24 19:41:58", "closed": "2015-07-24 19:44:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "1.4.12 isn't yet available on http://powermock.googlecode.com/svn/repo/", "body": "_From [stijn.va...@gmail.com](https://code.google.com/u/112156641541891270141/) on July 06, 2012 11:05:20_\n\nIs it possible to add version 1.4.12 to the repo?\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=397_\n", "url": "https://github.com/powermock/powermock/issues/417", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:41:50", "closed": "2015-07-24 19:41:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Easymock API replayAll/verifyAll problem", "body": "_From [r...@kryo.se](https://code.google.com/u/108196534003819652117/) on June 15, 2012 15:36:21_\n\nWhat steps will reproduce the problem? 1. Create EasyMock mock object\n2. Expect call and set return value\n3. Call replayAll()\n4. Call the mock object\n5. Call verifyAll()\n6. Easymock object has not been replayed or verified What is the expected output? What do you see instead? Both tests should work, one fails. What version of the product are you using? On what operating system? Linux, Easymock 3.0, Powermock 1.4.12, Java 1.7.0_04-b20 Please provide any additional information below. It works fine when easymock replay()/verify() are used.\n\n**Attachment:** [Failure.java](http://code.google.com/p/powermock/issues/detail?id=394)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=394_\n", "url": "https://github.com/powermock/powermock/issues/414", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:41:05", "closed": "2015-07-24 19:41:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mocking System.exit() doesn't call Answer", "body": "_From [Andreas....@googlemail.com](https://code.google.com/u/101505161386582333901/) on June 08, 2012 22:58:17_\n\nWhat steps will reproduce the problem? 1. Writing tests for command line java tool\n2. Annotations @PrepareForTest and @RunWith used\n3. Code in @Before:\nPowerMockito.spy(System.class);\nPowerMockito.doAnswer(new Answer<Void>() {\n\n@Override\npublic Void answer(InvocationOnMock invocation) throws Throwable {\n                throw new SystemExitException(invocation.getArguments()[0]);\n            }\n        }).when(System.class); What is the expected output? What do you see instead? - Test ends with Exception instead of terminating the JVM.\n- JVM isn't terminated but Exception isn't thrown either What version of the product are you using? On what operating system? Powermock 1.4.12 and Mockito 1.9.0 on Windows7 and Eclipse 3.7.2 Please provide any additional information below. The system.exit() is mocked somehow but the answer isn't called\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=391_\n", "url": "https://github.com/powermock/powermock/issues/411", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:40:34", "closed": "2015-07-24 19:40:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Port Log4JMockPolicy to Mockito API", "body": "_From [matthew....@gmail.com](https://code.google.com/u/117158394390869005204/) on June 06, 2012 17:27:01_\n\nWhat steps will reproduce the problem? 1. NA What is the expected output? What do you see instead? NA What version of the product are you using? On what operating system? 1.4.12. Win7x64. Please provide any additional information below. I'd like to see the Log4JMockPolicy ported over to the Mockito API (from EasyMock ). If I have time I'll attach a patch to this issue.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=389_\n", "url": "https://github.com/powermock/powermock/issues/409", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:39:51", "closed": "2015-07-24 19:40:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "rule agent not working with java7", "body": "_From [manohar....@gmail.com](https://code.google.com/u/104687747510859590044/) on May 28, 2012 11:29:36_\n\nWhat steps will reproduce the problem? 1. Run a test using power mock rule agent on jdk7 What is the expected output? What do you see instead? The execution fails with the following stack trace.\n\njava.lang.IllegalStateException: Unable to load Java agent; please add lib/tools.jar from your JDK to the classpath\n    at org.powermock.modules.agent.JDK6AgentLoader.getVirtualMachineImplementationFromEmbeddedOnes(JDK6AgentLoader.java:97)\n    at org.powermock.modules.agent.JDK6AgentLoader.loadAgent(JDK6AgentLoader.java:70)\n    at org.powermock.modules.agent.AgentInitialization.initializeAccordingToJDKVersion(AgentInitialization.java:40)\n    at org.powermock.modules.agent. PowerMockAgent .initializeIfNeeded( PowerMockAgent .java:83)\n    at org.junit.runner.Runner.<clinit>(Runner.java:40)\n    at org.junit.internal.builders.JUnit4Builder.runnerForClass(JUnit4Builder.java:13)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:57)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:29)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:57)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:24)\n    at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:33)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:227)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:134)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:113)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:601)\n    at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\n    at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\n    at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\n    at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:103)\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74) What version of the product are you using? On what operating system? powermock-module-junit4 1.4.12 and powermock-module-junit4-rule-agent 1.4.12 on osx 10.7.3 with jdk 1.7.0_04 Please provide any additional information below. Note that I've faced this issue when running the test using maven's surefire plugin. I have not faced this problem when running from within IntelliJ. The difference I've noticed is when running from maven, JDK6AgentLoader.getVirtualMachineImplementationFromEmbeddedOnes() gets called which throws an exception, while running from IntelliJ JDK6AgentLoader.attachToThisVM() gets called which works fine.\n\nI've made sure the rule agent jar is defined first in the classpath in both cases.\n\nThe issue disappears if I simply switch to java6.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=387_\n", "url": "https://github.com/powermock/powermock/issues/407", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:39:12", "closed": "2015-07-24 19:39:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Can not build using Maven dependency on powermock-mockito-release-full", "body": "_From [zherkezhi](https://code.google.com/u/zherkezhi/) on May 15, 2012 14:41:22_\n\nMaven can't find file for powermock-mockito-release-full.\n\nThis is the part of interest from my pom.xml file:\n\n```\n    \\<dependency>\n        \\<groupId>org.powermock</groupId>\n        \\<artifactId>powermock-mockito-release-full</artifactId>\n        \\<version>1.4.12</version>\n    \\</dependency>\n```\n\nThe error I get is:\n\n... Could not find artifact org.powermock:powermock-mockito-release-full:jar:1.4.12 in central ( http://repo1.maven.org/maven2 ) -> [Help 1]\n\nA closer examination of what Maven is doing gave me the following:\n\nDownloading: http://repo1.maven.org/maven2/org/powermock/powermock-mockito-release-full/1.4.12/powermock-mockito-release-full-1.4.12.jar However this is not the file, it has been changing name to powermock-mockito-release-full-1.4.12-full.jar!\n(note the trailing '-full' before the '.jar').\n\nif I change my dependency, adding -final (shown below), I get the following:\n\n```\n    \\<dependency>\n        \\<groupId>org.powermock</groupId>\n        \\<artifactId>powermock-mockito-release-full</artifactId>\n        \\<version>1.4.12-final</version>\n    \\</dependency>\n```\n\nThen Maven tries to fetch the following file: http://repo1.maven.org/maven2/org/powermock/powermock-mockito-release-full/1.4.12-full/powermock-mockito-release-full-1.4.12-full.jar The file name is now correct but note how the version gets '-full' before the '/powermock-mockito-release...' part.\n\nEither way I can not build my project with Maven anymore.\n\nSolution: add powermock-mockito-release-full-1.4.12-full.jar to the local repository.\nDownload the file, and then type the following command: \n\nmvn install:install-file -Dfile=powermock-mockito-release-full-1.4.12-full.jar -DgroupId=org.powermock -DartifactId=powermock-mockito-release-full -Dversion=1.4.12 -Dpackaging=jar\n\nI would appreciate if you could fix either the file name (as it was previously), or the file path. :-)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=386_\n", "url": "https://github.com/powermock/powermock/issues/406", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:39:05", "closed": "2015-07-24 19:39:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "unable to use @Rule with junit 4.10", "body": "_From [karl.via...@gmail.com](https://code.google.com/u/108777432942572129860/) on May 03, 2012 17:09:36_\n\nHi,\n\nPowerMockJUnit47RunnerDelegateImpl throws a ClassCastException at line 79 : MethodRule rule = (MethodRule) field.get(testInstance);\n\nRules in junit 4.10 implement TestRule, not MethodRule.\n\nHere is a simple testcase:\n\n@RunWith(PowerMockRunner.class)\npublic class PowerMockBug {\n\n @Rule\n public MyRule rule = new MyRule();\n\n @Test\n public void testFoo() {\n  System.out.println(\"testing foo\");\n }\n\n public static class MyRule implements TestRule {\n\n   @Override\n   public Statement apply(Statement base, Description description) {\n     return base;\n   }\n }\n}\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=384_\n", "url": "https://github.com/powermock/powermock/issues/404", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 19:38:48", "closed": "2015-07-24 19:39:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Cannot suppress JPanel constructor when extending class", "body": "_From [seangc...@gmail.com](https://code.google.com/u/115539055503311096612/) on April 30, 2012 17:46:36_\n\nI have a class like this:\n\nimport javax.swing.JPanel;\nimport java.awt.LayoutManager;\n\nfinal class MyPanel extends JPanel {\n\n```\nMyPanel(final LayoutManager layoutManager) {\n    super(layoutManager);\n}\n```\n\n}\n\nI have a test like this:\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.easymock.PowerMock;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\nimport javax.swing.JPanel;\nimport java.awt.BorderLayout;\nimport java.awt.LayoutManager;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(MyPanel.class)\npublic final class MyPanelTest {\n\n```\n@Test\npublic void test() {\n    PowerMock.suppress(PowerMock.constructor(JPanel.class, LayoutManager.class));\n    new MyPanel(new BorderLayout());\n}\n```\n\n}\n\nI get the following exception:\n\norg.powermock.reflect.exceptions.ConstructorNotFoundException: Failed to lookup constructor with parameter types [ org.powermock.core.IndicateReloadClass ] in class java.awt.Container.\n    at org.powermock.reflect.internal.WhiteboxImpl.getConstructor(WhiteboxImpl.java:258)\n    at org.powermock.core.MockGateway.constructorCall(MockGateway.java:214)\n    at javax.swing.JComponent.<init>(JComponent.java)\n    at javax.swing.JPanel.<init>(JPanel.java)\n    at com.mathworks.activationclient.view.snuoptions.MyPanel.<init>(MyPanel.java:10)\n    at com.mathworks.activationclient.view.snuoptions.MyPanelTest.test(MyPanelTest.java:21)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:66)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:312)\n    at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:86)\n    at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:94)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:296)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:284)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:209)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:148)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:122)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:102)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:42)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:71)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:199)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:62)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\nCaused by: java.lang.NoSuchMethodException: java.awt.Container.<init>(org.powermock.core.IndicateReloadClass)\n    at java.lang.Class.getConstructor0(Class.java:2706)\n    at java.lang.Class.getDeclaredConstructor(Class.java:1985)\n    at org.powermock.reflect.internal.WhiteboxImpl.getConstructor(WhiteboxImpl.java:250)\n    ... 35 more\n\nI expect the test to pass with no exception. What version of the product are you using? On what operating system? I am using PowerMock 1.4.10 with Java 1.6.0_17 on Windows 7 x64.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=383_\n", "url": "https://github.com/powermock/powermock/issues/403", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:38:39", "closed": "2015-07-24 19:38:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "DeferSupportingClassLoader does not override findResources(), causing it to break mocked classes that call findResources()", "body": "_From [wrussell...@gmail.com](https://code.google.com/u/116145832080119398423/) on March 17, 2012 05:06:37_\n\nWhat steps will reproduce the problem? 1. Download and extract powermock-resource-bug-example.zip\n2. Run unit tests (mvn test) - note that xsds are downloaded\n3. Tweak hosts file so that www.springframework.org points to 127.0.0.1\n4. Run unit tests (mvn test) - note that unit test now fails What is the expected output? What do you see instead? Spring should find its special 'META-INF/spring.schemas' files on the classpath by calling findResources(). What version of the product are you using? On what operating system? 1.4.12-SNAPSHOT, Windows 7 x64 Please provide any additional information below. DeferSupportingClassLoader does not override ClassLoader.findResources(), which can cause classes loaded by MockClassLoader to be unable to find resources via ClassLoader.findResources(...).\n\nI have only seen this in situations that match the following criteria:\n- A Spring context (ClassPathXmlApplicationContext) is being constructed by a junit unit test being run via PowerMockRunner\n- The unit test is being run on a machine that lacks internet connectivity.\n- The unit test run is being managed by Maven's surefire plugin, and is running in an isolated classloader (forkMode=none)\n\nThe problem occurs when Spring attempts to load the various xsds to parse its context configuration xml file.  It attempts to find special mappings files on the classpath named \"META-INF/spring.schemas\" - these mapping files map the various spring xsd namespaces to xsds stored in various spring jars on the classpath.  If it cannot find these spring.schemas files, it will fall back and attempt to load the xsds over the network using their urls.  If the machine is on a network that cannot access the internet, loading the application context configuration file will fail (as will the unit test).\n\nI have attached an example project (powermock-resource-bug-example.zip) that demonstrates this error.  With the current 1.4.12-SNAPSHOT build of powermock (and, I suspect, all prior releases), running the unit test in this project will result in Spring going out on the network and downloading the xsd.  If you tweak your hosts file to point www.springframework.org to 127.0.0.1, you should see the unit test fail.\n\nI have also attached a fix for this (findResources.diff) to this bug report, as well as two new unit tests that verify that findResource() and findResources() are both properly deferred to the deferTo ClassLoader.\n\n**Attachment:** [powermock-resource-bug-example.zip findResources.diff](http://code.google.com/p/powermock/issues/detail?id=380)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=380_\n", "url": "https://github.com/powermock/powermock/issues/400", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 19:37:06", "closed": "2015-07-24 19:37:13", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "UnfinishedStubbingException - add \"thenReturn(mock(...))\" example", "body": "_From [kamot...@gmail.com](https://code.google.com/u/109874305153474091716/) on February 23, 2012 23:13:06_\n\nWhat steps will reproduce the problem? 1. when(m.foo()).thenReturn(mock(Foo.class));\n\nThis correctly results in UnfinishedStubbingException. The message is pretty helpful, except it does not call out this case and it can consume a lot of time to figure out what is actually wrong:\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n1. missing thenReturn()\n2. you are trying to stub a final method, you naughty developer! What is the expected output? What do you see instead? E.g. thenReturn() may be missing.\n   Examples of correct stubbing:\n   when(mock.isOk()).thenReturn(true);\n   when(mock.isOk()).thenThrow(exception);\n   doThrow(exception).when(mock).someVoidMethod();\n   Hints:\n3. missing thenReturn()\n4. thenReturn(mock(...))\n5. you are trying to stub a final method, you naughty developer! What version of the product are you using? On what operating system? 1.9.0, Red Hat Linux 5\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=373_\n", "url": "https://github.com/powermock/powermock/issues/393", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 15:41:44", "closed": "2015-07-24 19:35:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Can powermock work with play!framework", "body": "_From [deadey...@gmail.com](https://code.google.com/u/104230951373864162400/) on February 21, 2012 15:12:56_\n\nThanks for the great work, powermock is a great framework for testing\nI'm wondering if powermock can work with play!framework\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=371_\n", "url": "https://github.com/powermock/powermock/issues/391", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 15:39:04", "closed": "2015-07-24 15:39:10", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Nullifying after a try for a finally test", "body": "_From [amol.par...@gmail.com](https://code.google.com/u/107682784318269557106/) on February 07, 2012 11:19:23_\n\nPowermock is great! However, I'm stuck on the following. Take the following class\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.util.Scanner;\n\npublic class FileReader{\n\n  private final File input; \n  public FileReader(final String filename) throws FileNotFoundException {\n    input = new File(filename);\n  }\n\n  public Board read() throws IOException{\n    String line;\n    boolean didTry = false;\n    Scanner scanner = null;\n\n```\ntry {\n  scanner = new Scanner(new FileInputStream(input), \"UTF-8\");\n\n  while (scanner.hasNextLine()) {\n    line = scanner.nextLine();\n    if (!lineIsOK(line)) {\n      throw new IOException(\"Bad Line\");\n    }\n  }\n  didTry = true;\n\n}finally {\n  if(scanner != null){\n    System.out.println(\"Scanner is fine didTry \" + didTry);\n    scanner.close();\n  }else{\n    System.out.println(\"Scanner is null didTry \" + didTry);\n  }\n}\n```\n\n  }\n}\n\nCan I test the line 'Scanner is null didTry true' with powermockito?\n\nThanks and regards\n\nAmol\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=369_\n", "url": "https://github.com/powermock/powermock/issues/389", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 15:38:36", "closed": "2015-07-24 15:38:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Not working properly with JUnit 4.10+", "body": "_From [diego.co...@gmail.com](https://code.google.com/u/116282242555318833135/) on February 02, 2012 22:20:41_\n\nWhat steps will reproduce the problem? 1. Use JUnit 4.10+ What is the expected output? What do you see instead? The constructor of PowerMockRunner is using a method getJUnitVersion() that is return 4.1 for a JUnit 4.10+ and always returning false to condition ( getJUnitVersion() >= 4.7f ). so, i think it is executing wrong impl PowerMockJUnit44RunnerDelegateImpl instead of  PowerMockJUnit47RunnerDelegateImpl What version of the product are you using? On what operating system? Win 7, 64 bits, JDK 7U2, compiling with 6.. and powermock-mockito-1.4.11-full Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=367_\n", "url": "https://github.com/powermock/powermock/issues/387", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 15:37:47", "closed": "2015-07-24 15:38:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Test case with expectedExceptions fails when using PowerMock with TestNG.", "body": "_From [archanar...@gmail.com](https://code.google.com/u/108412640355375632241/) on February 02, 2012 20:37:36_\n\nWhat steps will reproduce the problem? 1. Create a Test class which has the below method \n@ObjectFactory\n    public IObjectFactory getObjectFactory() {\n        return new org.powermock.modules.testng.PowerMockObjectFactory();\n    }\n2. Create a test case with expectedExceptions annotation \n3. Run it using Eclipse TestNG plugin. What is the expected output? What do you see instead? We are expecting the test case to pass but test case fails and gives the below message . \nExpected exception com.org.test.DAOException but got org.testng.TestException: \nExpected exception com.org.test.DAOException but got com.org.test.DAOException: com.org.test.DAOException\n    at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1459)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1222) What version of the product are you using? On what operating system? TestiNG 6.3.1\nPower mock 1.4.11.\nEclipse Plugin for TestNG.\nWindows XP. Please provide any additional information below. The same test case passes with TestNG when we don't use power mock. \n\nAfter debugging through the TestNG code, noticed that below line (#  1794) in isExpectedException method \ninside the testng/src/main/java/org/testng/internal/Invoker.java fails.\n\nexception.isAssignableFrom(realExceptionClass):  this statement always returns false even if the exception and realExpectionClass are same.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=366_\n", "url": "https://github.com/powermock/powermock/issues/386", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 15:34:49", "closed": "2015-07-24 15:37:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock not running TestRules with JUnit 4.10", "body": "_From [nachtr...@gmail.com](https://code.google.com/u/112111327311455846174/) on January 26, 2012 18:18:16_\n\nWhat steps will reproduce the problem? 1.  Create the following class:\n@RunWith(Enclosed.class)\npublic class PowerMockTest {\n    @RunWith(PowerMockRunner.class)\n    public static class WithPowerMock {\n        @Rule\n        public final ExpectedException thrown = ExpectedException.none();\n\n```\n    @Test\n    public void testWillFail() {\n        thrown.expect(RuntimeException.class);\n\n        throw new RuntimeException();\n    }\n}\n\npublic static class WithoutPowerMock {\n    @Rule\n    public final ExpectedException thrown = ExpectedException.none();\n\n    @Test\n    public void testWillSucceed() {\n        thrown.expect(RuntimeException.class);\n\n        throw new RuntimeException();\n    }\n}\n```\n\n}\n\n(Note this happens without the enclosure, that's simply being used for illustration.)\n1. Run the class (I am running through Eclipse, though that shouldn't make a difference) What is the expected output? What do you see instead? I'd expect both tests to pass, instead testWillFail() ends with an error because of the RuntimeException. What version of the product are you using? On what operating system? PowerMock 1.4.11 with Mockito 1.9.0 and JUnit 4.10. Please provide any additional information below. \\* Attempted changing the PowerMockRunner to a PowerMockRule , but this did not change that the TestRule was not being used.\n2. @Test(expected=RuntimeException.class) continues to work normally, however this doesn't apply to other test rules. \n3. Adding the rules to @PowerMockIgnore (shot in the dark).\n4. Attempted it with other TestRules (specifically TestWatcher) and found the same result: the rule was not being used.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=365_\n", "url": "https://github.com/powermock/powermock/issues/385", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 15:34:34", "closed": "2015-07-24 15:34:47", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Suppression not working for overridden Methods", "body": "_From [gloeckne...@gmail.com](https://code.google.com/u/116867748864641808723/) on January 25, 2012 13:11:48_\n\nSuppression doesn't work if the method that should be suppressed is overridden. \n\nExample class structure:\nclass A {\n\n  public void dontCallMe(Object someParameter) {...}\n    ...\n  }\n}\n\npublic final class B extends A {\n  @Override\n  public void dontCallMe(Object someParameter) {...}\n    ...\n  }  \n}\n\nI try suppressing dontCallMe using \"suppress(method(B.class, \"someMethod\", Object.class))\". This results in the following exception given below.\n\nWorkaround: suppress all methods with the same signature (\"suppress(method(B.class, Object.class));\"). \n\nSeveral matching methods found, please specify the argument parameter types so that PowerMock can determine which method you're referring to.\nMatching methods in class B were:\nvoid dontCallMe( java.lang.Object.class )\nvoid dontCallMe( java.lang.Object.class )\n\n```\nat org.powermock.reflect.internal.WhiteboxImpl.throwExceptionWhenMultipleMethodMatchesFound(WhiteboxImpl.java:1821)\nat org.powermock.reflect.internal.WhiteboxImpl.findMethod(WhiteboxImpl.java:1749)\nat org.powermock.api.support.membermodification.MemberMatcher.method(MemberMatcher.java:81)\nat MockTest.hello(MockTest.java:45)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:312)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:296)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:284)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:209)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:148)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:122)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\nat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:102)\nat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\nat org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:42)\n```\n\nMaven dependencies:\n<dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <version>1.9.0</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.powermock</groupId>\n            <artifactId>powermock-module-junit4</artifactId>\n            <version>1.4.11</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.powermock</groupId>\n            <artifactId>powermock-api-mockito</artifactId>\n            <version>1.4.11</version>\n            <scope>test</scope>\n        </dependency>\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=364_\n", "url": "https://github.com/powermock/powermock/issues/384", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 15:34:14", "closed": "2015-07-24 15:34:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock (API mockito) - Slf4j (API logbak)", "body": "_From [yoda...@gmail.com](https://code.google.com/u/108008759538611714710/) on December 01, 2011 13:57:10_\n\nHI,\n\n here are the details of my issue : What steps will reproduce the problem? 1. Try to configure slf4j dynamically\n\n```\n   LoggerContext context = (LoggerContext) LoggerFactory\n            .getILoggerFactory();\n    context.reset();\n    JoranConfigurator configurator = new JoranConfigurator();\n    configurator.setContext(context);\n    URL url = new URL(\"file:/\"\n            + System.getProperty(\"logback.configurationFile\"));\n    configurator.doConfigure(url);\n```\n1. Launch the unit test where log configuration is called in BeforeClass method.\n2. Exception is thrown :\n\nFailed to auto configure default logger context\nReported exception:\nch.qos.logback.core.joran.spi.JoranException: Parser configuration error occurred\n    at ch.qos.logback.core.joran.event.SaxEventRecorder.buildSaxParser(SaxEventRecorder.java:86)\n    at ch.qos.logback.core.joran.event.SaxEventRecorder.recordEvents(SaxEventRecorder.java:57)\n    at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:132)\n    at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:96)\n    at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:55)\n    at ch.qos.logback.classic.util.ContextInitializer.configureByResource(ContextInitializer.java:75)\n    at ch.qos.logback.classic.util.ContextInitializer.autoConfig(ContextInitializer.java:148)\n    at org.slf4j.impl.StaticLoggerBinder.init(StaticLoggerBinder.java:84)\n    at org.slf4j.impl.StaticLoggerBinder.<clinit>(StaticLoggerBinder.java:54)\n    at org.slf4j.LoggerFactory.bind(LoggerFactory.java:128)\n    at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:108)\n    at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:279)\n    at fr.canalplus.bigbro.test.utils.AbstractBigBroTest.initLogs(AbstractBigBroTest.java:101)\n    at fr.canalplus.bigbro.test.utils.AbstractBigBroTest.beforeClass(AbstractBigBroTest.java:68)\n    at fr.canalplus.bigbro.cache.CacheRetryTest.init(CacheRetryTest.java:47)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at org.junit.internal.runners.ClassRoadie.runBefores(ClassRoadie.java:56)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:43)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:118)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:102)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\nCaused by: java.lang.ClassCastException: com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl cannot be cast to javax.xml.parsers.SAXParserFactory\n    at javax.xml.parsers.SAXParserFactory.newInstance(Unknown Source)\n    at ch.qos.logback.core.joran.event.SaxEventRecorder.buildSaxParser(SaxEventRecorder.java:79)\n\nWhat is the expected output ?\nTest runs OK What version of the product are you using? On what operating system? powermock-api-mockito 1.4.9 (on Windows XP)\n\nI've also tried to use the MockPolicy with the class provided in another post : @MockPolicy(Sfl4jMockPolicy.class)\n--> Same result\n\nI've tried to ignore packages from slf4j and/or logbak, and then another exception is thrown :\n\njava.lang.ClassCastException: org.slf4j.Logger$$EnhancerByMockitoWithCGLIB$$c3ce6cd8 cannot be cast to org.mockito.cglib.proxy.Factory\n    at org.mockito.internal.creation.jmock.ClassImposterizer.createProxy(ClassImposterizer.java:111)\n    at org.mockito.internal.creation.jmock.ClassImposterizer.imposterise(ClassImposterizer.java:51)\n    at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:54)\n    at org.mockito.internal.MockitoCore.mock(MockitoCore.java:45)\n    at org.mockito.Mockito.mock(Mockito.java:921)\n    at org.mockito.Mockito.mock(Mockito.java:816)\n    at fr.canalplus.bigbro.test.utils.Sfl4jMockPolicy.initializeMockForThread(Sfl4jMockPolicy.java:82)\n    at fr.canalplus.bigbro.test.utils.Sfl4jMockPolicy.applyInterceptionPolicy(Sfl4jMockPolicy.java:70)\n    at org.powermock.tests.utils.impl.MockPolicyInitializerImpl.getInterceptionSettings(MockPolicyInitializerImpl.java:189)\n    at org.powermock.tests.utils.impl.MockPolicyInitializerImpl.initializeInterceptionSettings(MockPolicyInitializerImpl.java:161)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at org.powermock.reflect.internal.WhiteboxImpl.performMethodInvocation(WhiteboxImpl.java:2014)\n    at org.powermock.reflect.internal.WhiteboxImpl.doInvokeMethod(WhiteboxImpl.java:885)\n    at org.powermock.reflect.internal.WhiteboxImpl.invokeMethod(WhiteboxImpl.java:713)\n    at org.powermock.reflect.Whitebox.invokeMethod(Whitebox.java:401)\n    at org.powermock.tests.utils.impl.MockPolicyInitializerImpl.invokeInitializeInterceptionSettingsFromClassLoader(MockPolicyInitializerImpl.java:138)\n    at org.powermock.tests.utils.impl.MockPolicyInitializerImpl.initialize(MockPolicyInitializerImpl.java:124)\n    at org.powermock.tests.utils.impl.MockPolicyInitializerImpl.initialize(MockPolicyInitializerImpl.java:90)\n    at org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.createNewClassloader(AbstractTestSuiteChunkerImpl.java:205)\n    at org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.chunkClass(AbstractTestSuiteChunkerImpl.java:170)\n    at org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.<init>(AbstractTestSuiteChunkerImpl.java:92)\n    at org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.<init>(AbstractTestSuiteChunkerImpl.java:85)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.<init>(JUnit4TestSuiteChunkerImpl.java:47)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.<init>(AbstractCommonPowerMockRunner.java:32)\n    at org.powermock.modules.junit4.PowerMockRunner.<init>(PowerMockRunner.java:26)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInst...\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=358_\n", "url": "https://github.com/powermock/powermock/issues/378", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 15:31:33", "closed": "2015-07-24 15:31:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Javaagent falls if JaCoCo Agent is also turned in", "body": "_From [mag...@jungsbluth.de](https://code.google.com/u/111551697517891664187/) on November 22, 2011 22:02:06_\n\nWhat steps will reproduce the problem? 1. Create a powermock test with Mockito and junit Javaagent rule. Passes...\n2. Install Eclipse EclEmma Plugin 2.0 Beta which uses the JaCoCo Javaagent\n3. Run the Test again with \"coverage as\" What is the expected output? What do you see instead? Expected: Passing Test \nInstead: Failed to redefine class What version of the product are you using? On what operating system? 1.4.10 Win64\nEclipse Indigo 3.7.1\nLatest EclEmma 2.0 Plugin with JaCoCo Please provide any additional information below. First of all, the Javaagent Support is awesome! Keep going with it, it is a lot more powerful than the classloader approach. I suspect that multiple Agens will cause this problem...\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=357_\n", "url": "https://github.com/powermock/powermock/issues/377", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-24 15:30:20", "closed": "2015-07-24 15:31:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "setUp-method with @Before annotation executed twice when extending TestCase", "body": "_From [remo.ma...@gmail.com](https://code.google.com/u/102867858624939903274/) on November 21, 2011 13:55:14_\n\nWhat steps will reproduce the problem? 1. Create test class extending junit.framework.TestCase\n2. Implement setUp-method with @Before annotation What is the expected output? What do you see instead? Expected: setUp runs only once per test method. Instead, it runs twice. What version of the product are you using? On what operating system? powermock-mockito-1.4.10, junit-4.8.2. Windows 7. Please provide any additional information below. The problem seems to be in PowerMockJUnit44MethodRunner.runTestMethod(), where \"setUp\" is invoked if the test class extends from TestCase. In my opinion, \"setUp\" should only be called if the test class extends from TestCase AND setUp is not annotated with @Before. In the latter case, setUp has already been executed by MethodRoadie.runBefores().\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=356_\n", "url": "https://github.com/powermock/powermock/issues/376", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 15:30:05", "closed": "2015-07-24 15:30:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Test generates java.lang.VerifyError: Inconsistent stackmap frames at branch target", "body": "_From [kurm...@gmail.com](https://code.google.com/u/111903686446163804814/) on November 06, 2011 15:23:48_\n\nI suspect this may be a manifestation of this issue: https://bugs.eclipse.org/bugs/show_bug.cgi?id=339388 .  It wasn't clear if this is a Java issue, or something that needs to be fixed on a product-by-product basis, so I thought I'd bring it to your attention just in case. What steps will reproduce the problem? 1. Compiling and running my project with Java 1.7.0_01 on Windows  (I tried to isolate the problem, but it only appears in the context of the entire project.) What is the expected output? What do you see instead? When I run certain tests (described below), I get the following runtime error:\n1) testOpenWriter_file_string_autoflush_setsEncodings(edu.gvsu.kurmasz.warszawa.io.OutputHelperTest2)\njava.lang.VerifyError: Inconsistent stackmap frames at branch target 134 in method edu.gvsu.kurmasz.warszawa.io.OutputHelperTest2$CharsetTes\nter.values()[Ledu/gvsu/kurmasz/warszawa/io/OutputHelperTest2$CharsetTester; at offset 126\n        at edu.gvsu.kurmasz.warszawa.io.OutputHelperTest2.testOpenWriter_file_string_autoflush_setsEncodings(OutputHelperTest2.java:353)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:66)\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMoc\nkJUnit44RunnerDelegateImpl.java:307)\n        at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:86)\n        at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:94)\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJ\nUnit44RunnerDelegateImpl.java:294)\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(Pow\nerMockJUnit47RunnerDelegateImpl.java:112)\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJ\nUnit47RunnerDelegateImpl.java:73)\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThen\nAfters(PowerMockJUnit44RunnerDelegateImpl.java:282)\n        at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\n        at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl\n.java:207)\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:\n146)\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:120)\n        at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n        at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n        at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:118)\n        at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:102)\n        at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:53)\n        at org.junit.runners.Suite.runChild(Suite.java:128)\n        at org.junit.runners.Suite.runChild(Suite.java:24) What version of the product are you using? On what operating system? I'm using java 1.7.0_01 on Windows with the following jar files:\ncglib-nodep-2.2.jar               junit-4.8.2.jar                   objenesis-1.2.jar\njavassist-3.15.0-GA.jar           mockito-all-1.8.5.jar             powermock-mockito-1.4.10-full.jar Please provide any additional information below. \\* Everything works fine I compile the project using java 1.6.\n- Everything works fine if I run the tests using this flag: -XX:-UseSplitVerifier \n- If I take the offending class and its test and move them to a new project, the problem disappears (i.e., I can't seem to isolate the problem in a small example.)\n\nThus, I suspect this may be a manifestation of this issue: https://bugs.eclipse.org/bugs/show_bug.cgi?id=339388 .  It wasn't clear if this is a Java issue, or something that needs to be fixed on a product-by-product basis.\n\nIf it helps, I've also attached a copy of the test file.  The problem seems to be related to the enum CharacterTester\n\n**Attachment:** [OutputHelperTest.java](http://code.google.com/p/powermock/issues/detail?id=355)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=355_\n", "url": "https://github.com/powermock/powermock/issues/375", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-24 15:14:22", "closed": "2016-03-03 11:56:53", "commits": {}, "ttf": 222.00027777777777, "commitsDetails": []}, {"title": "mock(UUID.class) returns an actual UUID instance and not a mock.", "body": "_From [marceloverdijk](https://code.google.com/u/marceloverdijk/) on November 02, 2011 22:45:25_\n\nUUID uuid = org.powermock.api.mockito.PowerMockito.mock(UUID.class) returns an actual UUID instance and not a mock.\n\nI have this class:\n\npublic class SecurityService {\n    public String generatePerishableToken() {\n        return UUID.randomUUID().toString().replaceAll(\"-\", \"\");\n    }\n}\n\nand the test class looks like:\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({ SecurityService.class })\npublic class SecurityServiceTest {\n\n```\nprivate SecurityService service;\nprivate UUID uuid;\n\n@Before\npublic void setUp() {\n    service = new SecurityService();\n    uuid = mock(UUID.class);\n}\n\n@Test\npublic void testGeneratePerishableToken() {\n    // given\n    mockStatic(UUID.class);\n    given(UUID.randomUUID()).willReturn(uuid);\n    given(uuid.toString()).willReturn(\"my-perishable-token\");\n\n    // when\n    String actual = service.generatePerishableToken();\n\n    // then\n    assertEquals(\"myperishabletoken\", actual);\n    // TODO verify\n}\n```\n\n}\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=354_\n", "url": "https://github.com/powermock/powermock/issues/374", "user": "johanhaleby", "labels": ["Resolved", "bug"], "created": "2015-07-24 14:37:29", "closed": "2015-07-24 14:37:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Failed to transform class with name foo.TempTest Reason: 3 ", "body": "_From [zhaoshan...@gmail.com](https://code.google.com/u/117710579479258069090/) on October 12, 2011 17:44:01_\n\nI'm getting a \"Failed to transform class with name foo.TempTest Reason: 3\" error when mocking a static method. \n\nMy test is this:\n\n@RunWith(PowerMockRunner.class)  \n@PrepareForTest({Utils2.class})  \npublic class TempTest {\n\n```\n@Test\npublic void say() {\n}\n```\n\n}\n\nAnd Utils2 class:\n\npublic class Utils2 {\n    public static String say(String s) {\n        return s;\n    }\n}\n\nThe stack trace when exception is thrown is:\n\njava.lang.IllegalStateException: Failed to transform class with name com.crossfence.service.TempTest. Reason: 3\n    ...\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 3\n    at javassist.bytecode.ByteArray.write16bit(ByteArray.java:40)\n    at javassist.bytecode.StackMapTable$Shifter.update(StackMapTable.java:744)\n    ...\n    at javassist.expr.FieldAccess.replace(FieldAccess.java:213)\n    at org.powermock.core.transformers.impl.MainMockTransformer$PowerMockExpressionEditor.edit(MainMockTransformer.java:267)\n    ...\n    at javassist.CtClassType.instrument(CtClassType.java:1288)\n    at org.powermock.core.transformers.impl.MainMockTransformer.transform(MainMockTransformer.java:75)\n    at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:203)\n    ... 29 more\n\nI got the exception when adding this test to an existing project. However, it works fine if I create a new project with just these two classes. Therefore this could be an envrionement issue. \n\nI'm using these verions:\njunit 4.8.2, easymock 3.0, powermock 1.4.10, and javassist 3.12.0.GA.\n\nThe operating system is Windows 7.\n\nHow do I troubleshoot this? Are there loggings I can turn on?\n\nLet me know if you need more information.\n\nThanks!\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=349_\n", "url": "https://github.com/powermock/powermock/issues/369", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:34:51", "closed": "2015-07-24 14:35:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "The usage of PowerMockObjectFactory causes failure, if expectedExceptions attribute is used", "body": "_From [csadam85@gmail.com](https://code.google.com/u/csadam85@gmail.com/) on October 12, 2011 12:57:12_\n\nWhat steps will reproduce the problem? 1. Create a test class, which has the object factory method:\n@ObjectFactory\n    public IObjectFactory getObjectFactory() {\n        return new org.powermock.modules.testng.PowerMockObjectFactory();\n    } 2. Create a test case, which has the expectedExceptions attribute. Throw the expected exception inside the method.\n3. Run it What is the expected output? What do you see instead? The test case should pass, but it fails. I have got the following exception:\norg.testng.TestException: \nExpected exception package.name.NoSuchManagedObjectException but got package.name.NoSuchManagedObjectException What version of the product are you using? On what operating system? Windows Vista 32 bit\nPowermock: 1.4.10\nTestNG: 6.2 Please provide any additional information below. If you remove the object factory method, then the test case passes.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=348_\n", "url": "https://github.com/powermock/powermock/issues/368", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:34:26", "closed": "2015-07-24 14:34:49", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMockTestCase still missing from powermock-mockito-*.jar", "body": "_From [jonas.po...@gmail.com](https://code.google.com/u/104042305078065689836/) on September 28, 2011 09:18:38_\n\nHi,\n\nlooks like the PowerMockTestCase class is still missing in 1.4.10.\n\nI checked \"powermock-mockito-1.4.10-full.jar\" and \"powermock-mockito-testng-1.4.10.zip\", neither seems to contain the given class.\n\nI'm using the workaround from 1.4.9 described in https://code.google.com/p/powermock/issues/detail?id=327 to keep mocking.\n\nRegards,\n Jonas\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=347_\n", "url": "https://github.com/powermock/powermock/issues/367", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:34:11", "closed": "2015-07-24 14:34:24", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Powermock JUnit runner fails with JUnit 4.9+ TestRules", "body": "_From [jrh...@gmail.com](https://code.google.com/u/110694536384347452794/) on August 26, 2011 15:56:58_\n\nWhat steps will reproduce the problem? 1. Run \"mvn test\" on the attached project and observe the build failure\n2. Run \"mvn test -Djunit.version=4.8.2\" and observe that the build succeeds What is the expected output? What do you see instead? A passing build, and, instead, a build failure What version of the product are you using? On what operating system? 1.4.10, on Windows 7 x86 Please provide any additional information below. It looks like, with JUnit 4.9, they changed rules like ExpectedException to implement TestRule instead of MethodRule. The Powermock runner expects them to implement MethodRule and, as a result, a ClassCastException is thrown.\n\n**Attachment:** [junit-49-failure.zip](http://code.google.com/p/powermock/issues/detail?id=344)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=344_\n", "url": "https://github.com/powermock/powermock/issues/364", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-24 14:30:02", "closed": "2015-07-24 14:31:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mockito @InjectMocks annotations on superclasses of test class are ignored", "body": "_From [ewald.s...@gmail.com](https://code.google.com/u/100048596282756017649/) on August 19, 2011 21:38:07_\n\nPowerMock does not support '@InjectMocks' annotations on superclasses of a testclass. This feature has been improved in Mockito 1.9.0 and is particularly useful for testing applications that make extensive use of Dependency Injection.\n\nHere is an example that demonstrates the problem (it throws a NullPointerException):\n\ninterface Something {\n    void invoke();\n}\n\nclass ObjectUnderTest {\n    private final Something _something;\n\n```\nObjectUnderTest(final Something something) {\n    _something = something;\n}\n\nvoid performOperation() {\n    _something.invoke();\n}\n```\n\n}\n\n@Ignore\npublic abstract class BaseTest {\n  @Mock\n  Something _something;\n  @InjectMocks\n  ObjectUnderTest _objectUnderTest;\n\n  @RunWith(PowerMockRunner.class)\n  public static class PerformOperationTest extends BaseTest {\n    @Test\n    public void performsTheOperation() {\n      _objectUnderTest.performOperation();\n\n```\n  verify(_something).invoke();\n}\n```\n\n  }\n}\n\n**Attachment:** [powermock-superclass-injectmocks.patch](http://code.google.com/p/powermock/issues/detail?id=343)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=343_\n", "url": "https://github.com/powermock/powermock/issues/363", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:29:54", "closed": "2015-07-24 14:30:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Doesn't work well in Android project", "body": "_From [sendto...@gmail.com](https://code.google.com/u/109099981217415833889/) on August 12, 2011 08:37:32_\n\nWhat steps will reproduce the problem? 1. 2. 3. What is the expected output? What do you see instead? when mock a singleton,the mockstatic method throws error says:\"commandPool is not an interface\" What version of the product are you using? On what operating system? the latest easymock version,windows 7 64bit Please provide any additional information below. I use AndroidEasyMock.jar on google code at first, but here comes a singleton need to be mock, so I add PowerMock to my test project. Android integrated JUnit3, so I write the test as the example in your source of JUnit3, but red bar comes out when runing the mockStatic(commandPool) method, \"commandPool is not an interface\"\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=341_\n", "url": "https://github.com/powermock/powermock/issues/361", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:29:26", "closed": "2015-07-24 14:29:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unable to download powermock tutorial using svn", "body": "_From [subbuy...@gmail.com](https://code.google.com/u/108598729729727956878/) on August 10, 2011 01:47:20_\n\nWhat steps will reproduce the problem? 1. Install svn\n2. Execute the command \nsvn checkout https://powermock.googlecode.com/svn/tags/powermock-1.4.9/examples/tutorial 3. The following error occurs\nsvn: OPTIONS of ' https://powermock.googlecode.com/svn/tags/powermock-1.4.9/examples/tutorial' : could not connect to server ( https://powermock.googlecode.com ) What is the expected output? What do you see instead? The powermock tutorial files should be downloaded to my machine. What version of the product are you using? On what operating system? svn version 1.6.17 Please provide any additional information below. os - windows xp 32 bit\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=340_\n", "url": "https://github.com/powermock/powermock/issues/360", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:29:18", "closed": "2015-07-24 14:29:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Test initialization error (ClassNotFoundException)", "body": "_From [mikemad...@gmail.com](https://code.google.com/u/109147311719244585825/) on June 17, 2011 20:15:27_\n\nWhat steps will reproduce the problem? 1. Please see http://groups.google.com/group/powermock/browse_thread/thread/2ce5f86ad4a8f030/0653c54d8b59e4d9?#0653c54d8b59e4d9 2. Use his test classes or the provided Test.zip (same thing, just slightly modified).\n\nWhat is the expected output?\nAll classes should get loaded either by the system class loader or the same class.getClassLoader()\n\nWhat do you see instead?\nSystem class loader cannot find classes and there is no other fall back mechanism. What version of the product are you using? On what operating system? 1. PowerMock 1.4.9 with Mockito API extension (including source but excluding dependencies) \n2. mockito-core-1.8.5\n3. junit-4.8.2\n4. Windows 7\n4. Java 1.6 Please provide any additional information below. NOTE1: \nI was having the same issue as Mikael.  However I was running my test via a web container (an e-commerce platform with a built in junit apache test servlet).\n\nNOTE2:\nThis is the root of the problem:\n\norg.powermock.api.mockito.internal.mockcreation.MockCreator.MockitoStateCleaner.clearThreadLocalIn(Class<?> cls)...\nfinal Class<?> clazz = ClassLoaderUtil.loadClass(cls, ClassLoader.getSystemClassLoader());\n\nI have made the following modification to the class and it now works.  This may not be the final fix that the powermock developers might use, but its a step in the right direction.\n\nprivate void clearThreadLocalIn(Class<?> cls) \n{\n  Whitebox.getInternalState(cls, ThreadLocal.class).set(null);\n  final Class<?> clazz;\n  if(cls != null && cls.getClassLoader() != null) \n  {\n    clazz = ClassLoaderUtil.loadClass(cls, cls.getClassLoader());\n  }\n  else\n  {\n    clazz = ClassLoaderUtil.loadClass(cls, ClassLoader.getSystemClassLoader());\n  }\n  Whitebox.getInternalState(clazz, ThreadLocal.class).set(null);\n}\n\n**Attachment:** [Test.zip](http://code.google.com/p/powermock/issues/detail?id=333)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=333_\n", "url": "https://github.com/powermock/powermock/issues/353", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:27:21", "closed": "2015-07-24 14:28:08", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMockRunner should run tests defined in super class", "body": "```\npublic abstract MyAbstractTest {\n\n    //some setup code here\n\n   @Test\n   public abstract test1();\n\n   @Test\n   public abstract test2();\n\n}\n```\n\nI've a test class:\n\n```\n@PowerMockIgnore ( {\"javax.*\" , \"org.bouncycastle.*\"} )\n@RunWith( PowerMockRunner.class )\n@PrepareForTest ( {MyStaticClass.class} )\npublic class MyTest extends MyAbstractTest {\n\n  //some setup code here\n\n  @Override\n  public void test1(){\n      //some test code here\n  }\n\n @Override\n  public void test2(){\n      //some test code here\n  }\n\n @Test\n public void test3(){\n   // some test code here\n }\n\n}\n```\n\nWhen I run this with a JUnitRunner, 3 tests are executed.\nWhen I run this with PowermockRunner, only the tests annotated with\n@Test in the concrete class are executed. The @Test annotation is not\ninherited from the superclass.\n", "url": "https://github.com/powermock/powermock/issues/352", "user": "johanhaleby", "labels": ["Priority:Low", "bug"], "created": "2015-07-24 14:27:19", "closed": "2016-04-20 06:15:41", "commits": {"a84669175509c76017c0821934b08e48d9ed3c82": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "94158de3d0937062f93af21d2fe0bf216ef0d8d1": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "5262d381ead07daa3fae140397c622acc53cdb4c": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}}, "ttf": 270.0002777777778, "commitsDetails": [{"commitHash": "a84669175509c76017c0821934b08e48d9ed3c82", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "94158de3d0937062f93af21d2fe0bf216ef0d8d1", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5262d381ead07daa3fae140397c622acc53cdb4c", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["59361fe7217f40fe5a2cee1742485f90fdca515f"], "nameRev": "5262d381ead07daa3fae140397c622acc53cdb4c tags/powermock-1.6.5~11", "commitMessage": "Fix #352 PowerMockRunner should run tests defined in super class", "commitDateTime": "2016-04-20 08:15:40", "authoredDateTime": "2016-04-20 08:15:40", "commitGitStats": [{"filePath": "changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/org/powermock/tests/utils/impl/AbstractTestSuiteChunkerImpl.java", "insertions": 56, "deletions": 44, "lines": 100}, {"filePath": "modules/module-test/junit4/pom.xml", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "modules/module-test/junit4/src/main/java/org/powermock/api/extension/proxyframework/ProxyFrameworkImpl.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "modules/module-test/junit4/src/main/java/org/powermock/api/extension/reporter/MockingFrameworkReporterFactoryImpl.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "modules/module-test/junit4/src/test/java/samples/powermockito/junit4/bugs/github352/GitHub352Test.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "modules/module-test/junit4/src/test/java/samples/powermockito/junit4/bugs/github352/MyAbstractTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "modules/module-test/junit4/src/test/java/samples/powermockito/junit4/bugs/github352/MyTest.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "modules/module-test/junit4/src/test/java/samples/powermockito/junit4/bugs/github352/package-info.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "modules/module-test/pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/bugs/{powermock647/PowerMock647.java => github647/GitHub647.java}", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/bugs/{powermock647 => github647}/SkipExceptionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/testng/src/test/java/samples/testng/bugs/{powermock647 => github647}/SomeClass.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "modules/module-test/testng/suite.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractTestSuiteChunkerImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.initEntries(java.util.List)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.findMethods(org.powermock.tests.utils.impl.TestCaseEntry,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProxyFrameworkImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.proxyframework.ProxyFrameworkImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockingFrameworkReporterFactoryImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.reporter.MockingFrameworkReporterFactoryImpl", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GitHub352Test.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github352.GitHub352Test", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MyAbstractTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github352.MyAbstractTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MyTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github352.MyTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}, {"spoonFilePath": "GitHub647.java", "spoonMethods": [{"spoonMethodName": "samples.testng.bugs.powermock647.PowerMock647", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.testng.bugs.powermock647.PowerMock647.testSkipTest()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.testng.bugs.powermock647.PowerMock647.assertOneTestSkipped()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.testng.bugs.powermock647.PowerMock647.runTest(org.testng.TestNG)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.testng.bugs.powermock647.PowerMock647.createTestNG()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.testng.bugs.powermock647.PowerMock647.SimpleClassLoader.loadClass(java.lang.String,boolean)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.testng.bugs.powermock647.PowerMock647.SimpleClassLoader", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SkipExceptionTest.java", "spoonMethods": [{"spoonMethodName": "samples.testng.bugs.powermock647.SkipExceptionTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.testng.bugs.powermock647.SkipExceptionTest.testSkipException()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SomeClass.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5262d381ead07daa3fae140397c622acc53cdb4c"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 42.0, "deletions": 0.0, "lines": 42.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 19.0, "UPD": 17.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["modules/module-test/junit4/src/main/java/org/powermock/api/extension"], "changesInPackagesSPOON": ["org.powermock.api.extension.proxyframework.ProxyFrameworkImpl", "org.powermock.api.extension.reporter.MockingFrameworkReporterFactoryImpl", "samples.testng.bugs.powermock647.PowerMock647.testSkipTest()", "samples.testng.bugs.powermock647.PowerMock647.SimpleClassLoader.loadClass(java.lang.String,boolean)", "samples.testng.bugs.powermock647.PowerMock647.SimpleClassLoader", "samples.testng.bugs.powermock647.PowerMock647", "samples.testng.bugs.powermock647.PowerMock647.createTestNG()", "samples.testng.bugs.powermock647.PowerMock647.runTest(org.testng.TestNG)", "samples.testng.bugs.powermock647.PowerMock647.assertOneTestSkipped()"]}, {"title": "NoClassDefFoundError: org/powermock/modules/testng/PowerMockTestCase", "body": "_From [ohayon....@gmail.com](https://code.google.com/u/108847503706916123657/) on May 08, 2011 15:24:36_\n\nWhat steps will reproduce the problem? 1. 2. 3. What is the expected output? What do you see instead? System.out.println(p.getPublicName()); --> expected : kuku\nSystem.out.println(p.getPrivateName()); --> expected : myPrivateName What version of the product are you using? On what operating system? 1.4.9 Please provide any additional information below. With the last version (1.4.8) i didn't have this exception.\n here is the exception that i got:\norg.testng.TestNGException: \nAn error occurred while instantiating class com.sample.PersonTester: org/powermock/modules/testng/PowerMockTestCase\n at org.testng.internal.ClassHelper.createInstance(ClassHelper.java:342)\n at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:89)\n at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:107)\n at org.testng.internal.TestNGClassFinder.<init>(TestNGClassFinder.java:117)\n at org.testng.TestRunner.initMethods(TestRunner.java:394)\n at org.testng.TestRunner.init(TestRunner.java:228)\n at org.testng.TestRunner.init(TestRunner.java:198)\n at org.testng.TestRunner.<init>(TestRunner.java:154)\n at org.testng.remote.RemoteTestNG$1.newTestRunner(RemoteTestNG.java:129)\n at org.testng.remote.RemoteTestNG$DelegatingTestRunnerFactory.newTestRunner(RemoteTestNG.java:237)\n at org.testng.SuiteRunner$ProxyTestRunnerFactory.newTestRunner(SuiteRunner.java:540)\n at org.testng.SuiteRunner.init(SuiteRunner.java:140)\n at org.testng.SuiteRunner.<init>(SuiteRunner.java:104)\n at org.testng.TestNG.createSuiteRunner(TestNG.java:1039)\n at org.testng.TestNG.createSuiteRunners(TestNG.java:1025)\n at org.testng.TestNG.runSuitesLocally(TestNG.java:875)\n at org.testng.TestNG.run(TestNG.java:818)\n at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:96)\n at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:179)\nCaused by: java.lang.NoClassDefFoundError: org/powermock/modules/testng/PowerMockTestCase\n at org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.extendsPowerMockTestCase(PowerMockClassloaderObjectFactory.java:121)\n at org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.createTestClass(PowerMockClassloaderObjectFactory.java:104)\n at org.powermock.modules.testng.internal.PowerMockClassloaderObjectFactory.newInstance(PowerMockClassloaderObjectFactory.java:76)\n at org.powermock.modules.testng.PowerMockObjectFactory.newInstance(PowerMockObjectFactory.java:42)\n at org.testng.internal.ClassHelper.createInstance(ClassHelper.java:330)\n ... 18 more\nCaused by: java.lang.ClassNotFoundException: org.powermock.modules.testng.PowerMockTestCase\n at java.net.URLClassLoader$1.run(URLClassLoader.java:200)\n at java.security.AccessController.doPrivileged(Native Method)\n at java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n at java.lang.ClassLoader.loadClass(ClassLoader.java:303)\n at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)\n at java.lang.ClassLoader.loadClass(ClassLoader.java:248)\n at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:316)\n ... 23 more\n\n**Attachment:** [PersonTester.java Person.java Man.java](http://code.google.com/p/powermock/issues/detail?id=327)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=327_\n", "url": "https://github.com/powermock/powermock/issues/347", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-24 14:26:06", "closed": "2015-07-24 14:26:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Missing logging mock policies for Mockito API", "body": "_From [dietrich...@gmail.com](https://code.google.com/u/115844465204731828022/) on April 13, 2011 00:30:39_\n\nWhat steps will reproduce the problem? 1. Use Mockito\n2. Try to use Slf4jMockPolicy What is the expected output? What do you see instead? Expected suppressed logging.\nInstead, the mock policy class is not found What version of the product are you using? On what operating system? 1.4.8\n\nCurrently the mockpolicies for logging exist only in the easymock api.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=323_\n", "url": "https://github.com/powermock/powermock/issues/343", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 14:25:19", "closed": "2015-07-24 14:25:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "mockito-full and easymock-full should NOT include the PowerMockRule", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on April 09, 2011 13:52:58_\n\nRemove them from Maven release\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=318_\n", "url": "https://github.com/powermock/powermock/issues/338", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-24 14:24:52", "closed": "2015-07-24 14:24:59", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mocking servlet  , SipServlet / exception creating mock sip / servlet request ", "body": "_From [sri.nara...@gmail.com](https://code.google.com/u/105047714297897704199/) on March 16, 2011 21:39:32_\n\nWhat steps will reproduce the problem? 1.Create a mock of HttpServletRequest / SipServletRequest as    SipServletRequest  request = createStrictMock(SipServletRequest.class);\n2.Exception in test \njava.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/servlet/ServletException What is the expected output? What do you see instead? Expecting to get a mock servlet request to unit test a servlet What version of the product are you using? On what operating system? power  mock 1.4.8 ,easy mock 3.0 , windows vista Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=317_\n", "url": "https://github.com/powermock/powermock/issues/337", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:24:27", "closed": "2015-07-24 14:24:50", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "TestNG PowerMockObjectFactory and Thread's contextClassLoader", "body": "_From [mathos.m...@gmail.com](https://code.google.com/u/100838800342287323597/) on March 10, 2011 19:16:32_\n\nThe PowerMockRunner class sets the current's thread contextClassLoader with the mock'd classloader, this is not done in TestNG PowerMockObjectFactory.  Consequently if there is dependent classes that are using reflection by pulling the contextClassLoader from the current thread, it has class cast exception issues.  \n\nI ran accross the issue trying to use Drools with TestNG + PowerMock.  Simply ignoring the drools packages keeps the rules it runs to properly recognize the classes.\n\nI've attached a patch that will set the thread accordingly.\n\n**Attachment:** [testng_mock.diff](http://code.google.com/p/powermock/issues/detail?id=315)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=315_\n", "url": "https://github.com/powermock/powermock/issues/335", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:23:59", "closed": "2015-07-24 14:24:06", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Strange PowerMock error", "body": "_From [tim.wal...@benecard.com](https://code.google.com/u/105477611896942135572/) on February 24, 2011 21:07:23_\n\nWhy would I get an error such as this when I'm not doing anything related to email?  I've also included my code in a Word document.  I'm using the most recent versions of PowerMock and TestNG, along with MyEclipse Blue 8.6 and Java 5 (using the Websphere 6.1 JVM).  Thanks!\n\njava.lang.NoClassDefFoundError: com.sun.mail.util.LineInputStream\n    at javax.mail.Session.loadProvidersFromStream(Session.java:928)\n    at javax.mail.Session.access$000(Session.java:174)\n    at javax.mail.Session$1.load(Session.java:870)\n    at javax.mail.Session.loadResource(Session.java:1084)\n    at javax.mail.Session.loadProviders(Session.java:889)\n    at javax.mail.Session.<init>(Session.java:210)\n    at javax.mail.Session.getInstance(Session.java:232)\n    at org.apache.log4j.net.SMTPAppender.activateOptions(Unknown Source)\n    at org.apache.log4j.config.PropertySetter.activate(PropertySetter.java:247)\n    at org.apache.log4j.xml.DOMConfigurator.parseAppender(DOMConfigurator.java:210)\n    at org.apache.log4j.xml.DOMConfigurator.findAppenderByName(DOMConfigurator.java:140)\n    at org.apache.log4j.xml.DOMConfigurator.findAppenderByReference(DOMConfigurator.java:153)\n    at org.apache.log4j.xml.DOMConfigurator.parseChildrenOfLoggerElement(DOMConfigurator.java:415)\n    at org.apache.log4j.xml.DOMConfigurator.parseRoot(DOMConfigurator.java:384)\n    at org.apache.log4j.xml.DOMConfigurator.parse(DOMConfigurator.java:783)\n    at org.apache.log4j.xml.DOMConfigurator.doConfigure(DOMConfigurator.java:666)\n    at org.apache.log4j.xml.DOMConfigurator.doConfigure(DOMConfigurator.java:616)\n    at org.apache.log4j.xml.DOMConfigurator.doConfigure(DOMConfigurator.java:602)\n    at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:460)\n    at org.apache.log4j.LogManager.<clinit>(LogManager.java:113)\n    at java.lang.J9VMInternals.initializeImpl(Native Method)\n    at java.lang.J9VMInternals.initialize(J9VMInternals.java:196)\n    at org.apache.log4j.Logger.getLogger(Logger.java:94)\n    at com.benecard.dal.dao.base.BaseDAO.<clinit>(BaseDAO.java:19)\n    at java.lang.J9VMInternals.initializeImpl(Native Method)\n    at java.lang.J9VMInternals.initialize(J9VMInternals.java:196)\n    at java.lang.J9VMInternals.initialize(J9VMInternals.java:161)\n    at java.lang.J9VMInternals.initialize(J9VMInternals.java:161)\n    at java.lang.J9VMInternals.initialize(J9VMInternals.java:161)\n    at sun.reflect.GeneratedSerializationConstructorAccessor9.newInstance(Unknown Source)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:522)\n    at org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator.newInstance(SunReflectionFactoryInstantiator.java:40)\n    at org.objenesis.ObjenesisBase.newInstance(ObjenesisBase.java:59)\n    at org.mockito.internal.creation.jmock.ClassImposterizer.createProxy(ClassImposterizer.java:111)\n    at org.mockito.internal.creation.jmock.ClassImposterizer.imposterise(ClassImposterizer.java:51)\n    at org.powermock.api.mockito.internal.mockcreation.MockCreator.createMethodInvocationControl(MockCreator.java:100)\n    at org.powermock.api.mockito.internal.mockcreation.MockCreator.mock(MockCreator.java:58)\n    at org.powermock.api.mockito.PowerMockito.mock(PowerMockito.java:138)\n    at com.benecard.dal.dao.DrugDALTest.getDrugRDS(DrugDALTest.java:50)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:79)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:618)\n    at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:74)\n    at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)\n    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:846)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1170)\n    at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n    at org.testng.TestRunner.runWorkers(TestRunner.java:1147)\n    at org.testng.TestRunner.privateRun(TestRunner.java:749)\n    at org.testng.TestRunner.run(TestRunner.java:600)\n    at org.testng.SuiteRunner.runTest(SuiteRunner.java:317)\n    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:312)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:274)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:223)\n    at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n    at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1039)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:964)\n    at org.testng.TestNG.run(TestNG.java:900)\n    at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:110)\n    at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)\n    at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:174)\n\n**Attachment:** [PowerMock issue.docx](http://code.google.com/p/powermock/issues/detail?id=314)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=314_\n", "url": "https://github.com/powermock/powermock/issues/334", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:23:22", "closed": "2015-07-24 14:23:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mocking JRE classes problem - mocking java.lang.Math", "body": "_From [michal.r...@gmail.com](https://code.google.com/u/101802765775497534630/) on February 03, 2011 16:39:14_\n\nWhy mocking of jre (system) classes works different than mocking of other (non jre) ?\n\n1.I am testing MathUserr class. MathUserr calls static method OtherClass.myRandom().\n2.To mock OtherClass.myRandom() i need to:\n2.1. add @PrepareForTest({ OtherClass.class}) annotation \n2.2. call       PowerMockito.mockStatic(OtherClass.class);\n2.3. declare stubbing: when(OtherClass.myRandom()).thenReturn(2.0);\n3.Now if class under test (MathUserr) calls OtherClass.myRandom(), it gets 2.0d value.\n\nOK... it is clear. but now I describe the way, we mock JRE's java.lang.Math class.\n\n1.I am testing MathUserr class. MathUserr calls static method Math.random();\n2.To mock Math.random() i need to:\n2.1. add @PrepareForTest({ MathUserr.class}) annotation  (WOOW, why MathUserr instead of Math???)\n2.2. call       PowerMockito.mockStatic(Math.class);\n2.3. declare stubbing: when(Math.random()).thenReturn(2.0);\n3.Now if class under test (MathUserr) calls OtherClass.myRandom(), it gets 2.0d value.\n\nEverything in the same way, except of point 2.1.\n\nWhy it works in this way ? Is it documented ? \nThanks in advance for any information :)\n\nSource code that I am desribing:\n#############################################SOURCE CODE START####\npackage tp.check;\n\nimport static org.junit.Assert._;\nimport static org.mockito.BDDMockito._;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.mockito.PowerMockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({ OtherClass.class, MathUserr.class })\npublic class StaticTests {\n    @Test\n    public void mockMyStaticMethod() throws Exception {\n        // given \n        MathUserr u = new MathUserr();\n        PowerMockito.mockStatic(OtherClass.class);\n        when(OtherClass.myRandom()).thenReturn(2.0);\n\n```\n    // when\n    double fromOther = u.myClassRandom();\n\n    // then\n    assertEquals(2.0, fromOther, 0.0001);\n}\n\n@Test\npublic void mockJreLibStaticMethod() throws Exception {\n    // given \n    MathUserr u = new MathUserr();\n    PowerMockito.mockStatic(Math.class);\n    when(Math.random()).thenReturn(2.0);\n\n    // when\n    double fromOther = u.jreRandom();\n\n    // then\n    assertEquals(2.0, fromOther, 0.0001);\n}\n```\n\n}\n\nclass MathUserr{\n    public double jreRandom(){\n        return Math.random();\n    }\n\n```\npublic double myClassRandom(){\n    return OtherClass.myRandom();\n}\n```\n\n}\n\nclass OtherClass{\n    public static double myRandom(){\n        return 22.0; // ;)\n    }\n}\n\n#############################################SOURCE CODE END####\n\n```\n    I attach my env (from maven pom) below:\n\n    \\<dependency>\n        \\<groupId>junit</groupId>\n        \\<artifactId>junit</artifactId>\n        \\<version>4.8.1</version>\n        \\<scope>test</scope>\n    \\</dependency>\n    \\<dependency>\n        \\<groupId>org.mockito</groupId>\n        \\<artifactId>mockito-all</artifactId>\n        \\<version>1.8.5</version>\n        \\<scope>test</scope>\n    \\</dependency>\n    \\<dependency>\n        \\<groupId>org.powermock</groupId>\n        \\<artifactId>powermock-module-junit4</artifactId>\n        \\<version>1.4.6</version>\n        \\<scope>test</scope>\n    \\</dependency>\n    \\<dependency>\n        \\<groupId>org.powermock</groupId>\n        \\<artifactId>powermock-api-mockito</artifactId>\n        \\<version>1.4.6</version>\n        \\<scope>test</scope>\n    \\</dependency>\n```\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=312_\n", "url": "https://github.com/powermock/powermock/issues/332", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:22:42", "closed": "2015-07-24 14:23:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "NPE in PowerMockJUnit47RunnerDelegateImpl when using a test rule that throws exception", "body": "_From [laura.r....@gmail.com](https://code.google.com/u/106970030359659062979/) on February 02, 2011 22:14:15_\n\nWhat steps will reproduce the problem? 1. See attached test files.\n2. (Make sure test.util.ThingToTest.getName() is returning a constant string and not calling a method on the mocked object.)\n3. Run PowerMockFailingTest as normal. What is the expected output? What do you see instead? Expected output is a normal EasyMock java.lang.AssertionError: \n  Expectation failure on verify: simpleThingMock.getThingName: expected(1) actual(0)\n\nBut I got:\njava.lang.RuntimeException: PowerMock internal error: Should never throw exception at this level\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.handleException(PowerMockJUnit44RunnerDelegateImpl.java:377)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:89)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:297)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:222)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:161)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:135)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:133)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:112)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\nCaused by: java.lang.NullPointerException\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.handleException(PowerMockJUnit44RunnerDelegateImpl.java:355) What version of the product are you using? On what operating system? PowerMock 1.4.7 EasyMock 3.0\nJUnit 4.8.1\nJDK1.6.0_21\nMicrosoft Windows XP Pro SP3 Please provide any additional information below. I ran the test in Eclipse Helios.  I am using Maven.  \n\nThe problem appears to be in org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl.PowerMockJUnit47MethodRunner.executeTest(Method, Object, Runnable), line 89.  The call to super.handleException gets made with a null potentialTestFailure variable.  I used the Eclipse debugger to replace the null with the caught exception and got my expected output.  I wondered if instead of calling super.handleException at line 89, code should be calling handleException(testMethod, e).\n\n**Attachment:** [PowerMockFailingTest.java SimpleEasyMockJUnitRule.java SimpleThing.java SimpleThingCreator.java SimpleThingImpl.java ThingToTest.java](http://code.google.com/p/powermock/issues/detail?id=311)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=311_\n", "url": "https://github.com/powermock/powermock/issues/331", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:22:23", "closed": "2015-07-24 14:22:41", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Random test fails for stubbing in @Before section", "body": "_From [michal.r...@gmail.com](https://code.google.com/u/101802765775497534630/) on January 14, 2011 16:52:51_\n\nWhat steps will reproduce the problem? 1.I am stubbing static methods in @Before section (many times)\n2.Then I call class's under test methods (that call mocked static methods)\n3.I run this test\n4.For one or more methods, an exception is thrown (I attach the exception just after the test class code - below)\nNote: this test do not fail for every run!\n\ntest class code:\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.mockito.PowerMockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\nimport static org.mockito.Mockito.*;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({ClassWithStatic.class})\npublic class PowerMockStressTest {\n\n```\nUnderTest underTest = new UnderTest();\n@Before\npublic void setUp(){\n    PowerMockito.mockStatic(ClassWithStatic.class);\n    for (int i = 0; i \\< 10; i++) { // 100*8executions\n        createWhen();\n    }\n}\npublic void createWhen(){\n    when(ClassWithStatic.a()).thenReturn(\"A\");\n    when(ClassWithStatic.b()).thenReturn(\"B\");\n    when(ClassWithStatic.c()).thenReturn(\"C\");\n    when(ClassWithStatic.d()).thenReturn(\"D\");\n    when(ClassWithStatic.e()).thenReturn(\"E\");\n    when(ClassWithStatic.f()).thenReturn(\"F\");\n    when(ClassWithStatic.g()).thenReturn(\"G\");\n    when(ClassWithStatic.h()).thenReturn(\"H\");\n}\n\n@Test\npublic void test1(){\n    System.out.println(underTest.a1());\n}\n@Test\npublic void test2(){\n    System.out.println(underTest.b1());\n}\n@Test\npublic void test3(){\n    System.out.println(underTest.c1());\n}\n@Test\npublic void test4(){\n    System.out.println(underTest.d1());\n}\n@Test\npublic void test5(){\n    System.out.println(underTest.e1());\n}\n@Test\npublic void test6(){\n    System.out.println(underTest.f1());\n}\n@Test\npublic void test7(){\n    System.out.println(underTest.g1());\n}\n@Test\npublic void test8(){\n    System.out.println(underTest.h1());\n}\n```\n\n}\n\nclass ClassWithStatic {\n\n```\npublic static String a(){\n    return \"str\";\n}\npublic static String b(){\n    return \"str\";\n}\npublic static String c(){\n    return \"str\";\n}\npublic static String d(){\n    return \"str\";\n}\npublic static String e(){\n    return \"str\";\n}\npublic static String f(){\n    return \"str\";\n}\npublic static String g(){\n    return \"str\";\n}\npublic static String h(){\n    return \"str\";\n}\n```\n\n}\n\nclass UnderTest {\n    public String a1(){\n        return ClassWithStatic.a();\n    }\n    public String b1(){\n        return ClassWithStatic.b();\n    }\n    public String c1(){\n        return ClassWithStatic.c();\n    }\n    public String d1(){\n        return ClassWithStatic.d();\n    }\n    public String e1(){\n        return ClassWithStatic.e();\n    }\n    public String f1(){\n        return ClassWithStatic.f();\n    }\n    public String g1(){\n        return ClassWithStatic.g();\n    }\n    public String h1(){\n        return ClassWithStatic.h();\n    }\n}\n\nEXCEPTION:\n\norg.mockito.exceptions.base.MockitoException: \n'finalize' is a _void method_ and it _cannot_ be stubbed with a _return value_!\nVoids are usually stubbed with Throwables:\n    doThrow(exception).when(mock).someVoidMethod();\nIf the method you are trying to stub is _overloaded_ then make sure you are calling the right overloaded version.\n    at HardcoreStressTest.createWhen(HardcoreStressTest.java:30)\n    at HardcoreStressTest.setUp(HardcoreStressTest.java:17)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at org.junit.internal.runners.MethodRoadie.runBefores(MethodRoadie.java:129)\n    at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:93)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:309)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:112)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:73)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:297)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:222)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:161)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:135)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:133)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:112)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\n\nMy environment (in from maven):\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.8.1</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-all</artifactId>\n            <version>1.8.5</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.powermock</groupId>\n            <artifactId>powermock-module-junit4</artifactId>\n            <version>1.4.7</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.powermock</groupId>\n            <artifactId>powermock-api-mockito</artifactId>\n            <version>1.4.7</version>\n            <scope>test</scope>\n        </dependency>\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=308_\n", "url": "https://github.com/powermock/powermock/issues/328", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:19:21", "closed": "2015-07-24 14:21:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "add one method in PowerMock class", "body": "_From [cndoublehero@gmail.com](https://code.google.com/u/cndoublehero@gmail.com/) on December 29, 2010 11:54:13_\n\nthe method is:\npublic static synchronized <T> IExpectationSetters<T> expectNew(String fullyQualifiedName, Class<?>[] parameterTypes, Object... arguments)\n            throws Exception \n\nreason:\nWhen I want to mock some private inner class, I need to focus on the right constructor. Thank you.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=306_\n", "url": "https://github.com/powermock/powermock/issues/326", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:19:04", "closed": "2015-07-24 14:19:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "cann't Mock final inner class", "body": "_From [cndoublehero@gmail.com](https://code.google.com/u/cndoublehero@gmail.com/) on December 28, 2010 12:03:22_\n\nIf we use PowerMock.createMock(xxx.class) method to mock a final inner class, we will get a exception.The detail of the exception is:\n\njava.lang.IllegalArgumentException: Cannot subclass final class class org.apache.test.inner.AppaleList$Name\n    at net.sf.cglib.proxy.Enhancer.generateClass(Enhancer.java:446)\n    at net.sf.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25)\n    at net.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:216)\n    at net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:377)\n    at net.sf.cglib.proxy.Enhancer.createClass(Enhancer.java:317)\n    at org.easymock.internal.ClassProxyFactory.createProxy(ClassProxyFactory.java:181)\n    at org.easymock.internal.MocksControl.createMock(MocksControl.java:60)\n    at org.powermock.api.easymock.PowerMock.doCreateMock(PowerMock.java:2211)\n    at org.powermock.api.easymock.PowerMock.doMock(PowerMock.java:2162)\n    at org.powermock.api.easymock.PowerMock.createMock(PowerMock.java:98)\n    at org.apache.test.inner.AppaleListTest.test1(AppaleListTest.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:585)\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:66)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:322)\n    at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:86)\n    at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:94)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:309)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:112)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:73)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:297)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:222)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:161)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:135)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n    at org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:133)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:112)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\nps.I use the latest version of powermock.I download a  powermock-easymock-junit-1.4.6.zip file from this site.Thank you.\n\n**Attachment:** [PowerMockTest2.rar](http://code.google.com/p/powermock/issues/detail?id=304)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=304_\n", "url": "https://github.com/powermock/powermock/issues/324", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 14:18:42", "closed": "2015-07-24 14:18:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "TooManyConstructorsFoundException in Using MemberModifier.suppress method", "body": "_From [cndoublehero@gmail.com](https://code.google.com/u/cndoublehero@gmail.com/) on December 22, 2010 11:20:07_\n\nHi, I get a problem in using the PowerMock suite. You can copy my Junit test file into your project. When you run the AppaleListTest class as a Junit Test, the result will be failed and a exception will print at the console page. \nThe situation is like this:\nYou have two constructors in your class, one constructor have no arguments and the other has some arguments, when you want to suppress the constructor with no arguments and write your code like this:\n\nMemberModifier.suppress(MemberModifier.constructor(AppaleList.class));\n\nThe Junit test can't passed. Although there are other solution to solve this problem, like write code as this : \nMemberModifier.suppress(AppaleList.class.getConstructor(null));\n\nBut I think may be MemberModifier can do a better job. So I think it is a problem. Thank you.\n\nThe detail of exception as follow:\n\norg.powermock.reflect.exceptions.TooManyConstructorsFoundException: Several matching constructors found, please specify the argument parameter types so that PowerMock can determine which method you're refering to.\nMatching constructors in class org.apache.test.Constructor.AppaleList were:\norg.apache.test.Constructor.AppaleList( )\norg.apache.test.Constructor.AppaleList( java.lang.String.class )\n\n```\nat org.powermock.reflect.internal.WhiteboxImpl.throwExceptionWhenMultipleConstructorMatchesFound(WhiteboxImpl.java:1874)\nat org.powermock.reflect.internal.WhiteboxImpl.findConstructorOrThrowException(WhiteboxImpl.java:1112)\nat org.powermock.api.support.membermodification.MemberMatcher.constructor(MemberMatcher.java:277)\nat org.apache.test.Constructor.AppaleListTest.list3(AppaleListTest.java:43)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:585)\nat org.junit.internal.runners.TestMethod.invoke(TestMethod.java:66)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:322)\nat org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:86)\nat org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:94)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:309)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:112)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:73)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:297)\nat org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\nat org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:222)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:161)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:135)\nat org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\nat org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\nat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:133)\nat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:112)\nat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57)\nat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)\nat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\nat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n```\n\nPs: I use the latest version of powermock.I download a  powermock-easymock-junit-1.4.6.zip file from this site.Thank you.\n\n**Attachment:** [PowerMockTest1.rar](http://code.google.com/p/powermock/issues/detail?id=302)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=302_\n", "url": "https://github.com/powermock/powermock/issues/322", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:18:32", "closed": "2015-07-24 14:18:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Odd mock interception with @PrepareForTest and PowerMockObjectFactory", "body": "_From [flush...@gmail.com](https://code.google.com/u/113176669348225737294/) on December 16, 2010 21:05:32_\n\nPlease see the attached small demo project with 5 test classes that demonstrate the problem and workaround(s).\n\nMy environment is the following:\n  Windows 7 Enterprise 64-bit\n  JDK 1.6.0_22\n  Maven 2.2.1\n  PowerMock 1.4.6\n  TestNG 5.14.1\n\nSampleServlet represent the class being tested with very simple doGet method that writes \"out\" string to response writer.\n\nConsider the SampleServletTestWithoutPrepare test that works fine and doesn't use any PowerMock specific extras except of 'createMock', 'replay' and 'verify'.\n\nOnce I add @PrepareForTest annotation to the test class (see SampleServletTestWithPrepare1) test fails with the following exception:\n\njava.lang.AssertionError: \n  Unexpected method call write(\"out\"):\n    write(\"out\"): expected: 1, actual: 0\n    at org.easymock.internal.MockInvocationHandler.invoke(MockInvocationHandler.java:45)\n    at org.easymock.internal.ObjectMethodsFilter.invoke(ObjectMethodsFilter.java:73)\n    at org.easymock.internal.ClassProxyFactory$MockMethodInterceptor.intercept(ClassProxyFactory.java:92)\n    at $java.io.PrintWriter$$EnhancerByCGLIB$$8cbc17d1.write(<generated>)\n    at com.volodymyrtsukur.powermock.demos.SampleServlet.doGet(SampleServlet.java:16)\n    at com.volodymyrtsukur.powermock.demos.SampleServletTestWithPrepare1.doGet(SampleServletTestWithPrepare1.java:37)\n    at com.volodymyrtsukur.powermock.demos.SampleServletTestWithPrepare1_$$_javassist_0._d1doGet(SampleServletTestWithPrepare1_$$_javassist_0.java)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.powermock.modules.testng.internal.PowerMockTestNGMethodHandler.invoke(PowerMockTestNGMethodHandler.java:51)\n    at com.volodymyrtsukur.powermock.demos.SampleServletTestWithPrepare1_$$_javassist_0.doGet(SampleServletTestWithPrepare1_$$_javassist_0.java)\n\nCall to the 'write' is intercepted by EasyMock , not by PowerMock's gateway. Is it fine?\n\nIt may seem useless to specify @PrepareForTest without actually mocking statics or finals. In original test case (in the project that cannot be posted here) instances of classes with final methods were mocked. I strip this down from examples because it actually doesn't have anything to do with the actual problem. I just add @PrepareForTest, specify ObjectFactory and test code doesn't work.\n\nAdding specific class to @PrepareForTest doesn't help (see SampleServletTestWithPrepare2 test) unless I specify the class that is actually the caller of 'write' method, i.e. SampleServlet class (see SampleServletTestWithTargetClassPrepare test). And pay attention that once I inline the servlet code into the test method it starts to pass as well (SampleServletTestWithInline).\n\nSo, it seems that each class that calls mock needs to be 'prepared'. I've seen similar rule in the documentation for expectNew but not for regular mocks that just work inside the test with annotated @PrepareForTest and PowerMockObjectFactory. Is it a problem?\n\nIn debug it may be seen that test class is prepared as well, that's why inlining the servlet code works.\n\n**Attachment:** [invalid-mock-interception.zip](http://code.google.com/p/powermock/issues/detail?id=300)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=300_\n", "url": "https://github.com/powermock/powermock/issues/320", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:17:58", "closed": "2015-07-24 14:18:16", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock sometimes causes other TestNG tests to fail", "body": "_From [flush...@gmail.com](https://code.google.com/u/113176669348225737294/) on December 16, 2010 19:55:01_\n\nPlease see the attached small demo project with two test classes that demonstrate the problem.\n\nMy environment is the following:\n  Windows 7 Enterprise 64-bit\n  JDK 1.6.0_22\n  Maven 2.2.1\n  PowerMock 1.4.6\n  TestNG 5.14.1\n\nServiceTest uses PowerMock to mock class with final modifier (@PrepareForTest and @ObjectFactory are there). XmlReaderTest just creates new instance of SAXParser. Each of the tests succeed when they run independently. However XmlReaderTest fails when running the whole suite with the following exception:\n\njava.lang.ClassCastException: com.sun.org.apache.xerces.internal.parsers.SAXParser cannot be cast to org.xml.sax.XMLReader\n\nFAQ describes this issue and advises to solve it by adding @PowerMockIgnore({\"javax.xml._\", \"org.xml.sax._\"}) to XmlReaderTest.\nAnd this fix works. BUT why does PowerMock alter behavior of other tests? It is definetely not OK.\n\nThere are other classloading issues that are not demoed in this sample. The overall idea is that tests that do not use PowerMock must not be affected by it.\n\nPartially the problem is that there is only one ObjectFactory per suite and this ObjectFactory is responsible for creating all test class instances. \nI have solved the problem by writing and applying custom ObjectFactory that inspects test class and delegates creation of test class instance to PowerMockObjectFactory ONLY if test class has PowerMock annotations. Otherwise ObjectFactory delegates creation to default ObjectFactoryImpl.\n\nIt seems to me that similar ObjectFactory logic should be the part of the library. Classloader that PowerMock uses causes issues for other tests frequently and sometimes it is VERY HARD to understand what is going wrong.\n\n**Attachment:** [affecting-other-tests.zip](http://code.google.com/p/powermock/issues/detail?id=299)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=299_\n", "url": "https://github.com/powermock/powermock/issues/319", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:15:15", "closed": "2015-07-24 14:17:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Upgrade to JUnit 4.8.2", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 25, 2010 20:58:59_\n\nuntil next release\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=296_\n", "url": "https://github.com/powermock/powermock/issues/316", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:13:59", "closed": "2015-07-24 14:14:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Upgrade to 3.14.0.GA", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 23, 2010 10:44:32_\n\nbefore next release\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=295_\n", "url": "https://github.com/powermock/powermock/issues/315", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 14:13:50", "closed": "2015-07-24 14:13:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "At least one test-case in a testng suite must extend from PowerMockTestCase", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 16, 2010 11:32:50_\n\nComment out\n      <class name=\"samples.testng.MockStaticExtendsPowerMockTestCaseTest\"/>\n      <class name=\"samples.testng.PartialMockingWithBeforeClassTest\"/>\nfrom suite.xml and the tests will fail.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=292_\n", "url": "https://github.com/powermock/powermock/issues/312", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-24 14:13:16", "closed": "2015-07-24 14:13:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "too much data exception from javassist", "body": "_From [ssuyam...@gmail.com](https://code.google.com/u/116840354096542650442/) on November 09, 2010 18:34:08_\n\nWhat steps will reproduce the problem? 1.call mockstatic in test class\n2. in the test class unmarshall xml using JAXB. JAXBContext.newInstance call fails with the exception. But initialization works fine with easymock and issues appear with powermock-easymock-junit extension.\n\njava.lang.RuntimeException: javassist.CannotCompileException: by java.io.IOException: too much data\n    at org.powermock.core.classloader.MockClassLoader.loadUnmockedClass(MockClassLoader.java:188)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:148)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:65)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:618)\n    at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:99)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:48)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n    at java.lang.reflect.Method.invoke(Method.java:600)\n    at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:144)\n    at javax.xml.bind.ContextFinder.find(ContextFinder.java:297)\n    at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:383)\n    at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:348)\n    at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:255)\n3. I tried with javassist 3.13 and 3.3 , all ended in same exception. What is the expected output? What do you see instead? expected output is business class which is mocked What version of the product are you using? On what operating system? powermock-easymock-junit-1.4.6.zip Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=291_\n", "url": "https://github.com/powermock/powermock/issues/311", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 14:13:06", "closed": "2015-07-24 14:13:13", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "impossible to mock private methods with multiple arguments  ", "body": "_From [schiz...@gmail.com](https://code.google.com/u/102447286385233918727/) on November 07, 2010 00:46:45_\n\nWhen you try to mock private methods with multiple arguments via \nany PowerMockito method using DefaultMethodExpectationSetup\nyou get \njava.lang.IllegalArgumentException: wrong number of arguments\n\nThe problem is reproducible in 1.4.6 version. \n\nIt is caused by wrong arguments passed into method.invoke:\nmethod.invoke(object, firstArgument, additionalArguments)\nwhere an array of additional arguments is treated as single argument.\nInstead it should be \nmethod.invoke(object, firstAndAdditionalArgumentsArray)\n\nSee patch and test attached.\n\nMvh,\nStas Chizhov\n\n**Attachment:** [DefaultMethodExpectationSetupTest.java mockito-api-method-exp-setup-fix.diff](http://code.google.com/p/powermock/issues/detail?id=289)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=289_\n", "url": "https://github.com/powermock/powermock/issues/309", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-24 06:42:18", "closed": "2015-07-24 06:42:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Connecting via HttpClient with an https page throws java.net.SocketException: java.security.NoSuchAlgorithmException: class configured for SSLContext: com.sun.net.ssl.internal.ssl.DefaultSSLContextImpl not a SSLContext", "body": "_From [mfriedenhagen](https://code.google.com/u/mfriedenhagen/) on October 30, 2010 21:22:36_\n\nWhat steps will reproduce the problem? 1. Create a junit4 test which tries to connect to a SSL enabled site with httpclient having a @PrepareForTest annotation.\n2. Run the test. What is the expected output? What do you see instead? I expect to be able to connect to the site.\nI see a java.net.SocketException What version of the product are you using? On what operating system? powermock-module-junit4 1.4.6\n[mirko@borg powermockitotest]$ mvn3 -v\nApache Maven 3.0 ( r1004208 ; 2010-10-04 13:50:56+0200)\nJava version: 1.6.0_22\nJava home: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home\nDefault locale: de_DE, platform encoding: MacRoman\nOS name: \"mac os x\" version: \"10.6.4\" arch: \"x86_64\" Family: \"mac\" Please provide any additional information below. I created a test project available at http://github.com/mfriedenhagen/powermockitotest\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=288_\n", "url": "https://github.com/powermock/powermock/issues/308", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:41:53", "closed": "2015-07-24 06:42:16", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Change from ${version} to ${project.version} in pom files", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 19, 2010 13:05:12_\n\nSee version dependency in: http://mvnrepository.com/artifact/org.powermock/powermock-core/1.4.6 for the reason.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=287_\n", "url": "https://github.com/powermock/powermock/issues/307", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:40:59", "closed": "2015-07-24 06:41:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "replace method should check signature", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 15, 2010 08:17:45_\n\nWhen replacing a method using:\nreplace(method(x)).with(method(y))\n\nwe should fail if y doesn't have the same signature as x (and return the same value as x).\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=285_\n", "url": "https://github.com/powermock/powermock/issues/305", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-24 06:40:38", "closed": "2015-07-24 06:40:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "StringBuffer is not being mocked", "body": "_From [nisabek](https://code.google.com/u/nisabek/) on October 12, 2010 15:52:15_\n\nWhat steps will reproduce the problem? 1. Create class with the following method \n\n  public static void tuftaMethod(){\n        StringBuffer buff = new StringBuffer();\n        buff.toString();\n    }\n\n2.Create test for the method with the following body\n\n```\n@Test\npublic void testTuftaMehtod() throws Exception {\n    StringBuffer buff = createMock(StringBuffer.class);\n    expectNew(StringBuffer.class).andReturn(buff);\n    replayAll();\n\n    JustAskNotifierJob.tuftaMethod();\n\n    verifyAll();\n\n}\n```\n1. Run the test\n\nThe mock of StringBuffer is not being created the test passes(if a MOCK had been created it would fail) and the debug shows that a REAL StringBuffer object has been created instead of EasyMock .class.\n\nWe are using powermock-easymock-full.jar v 1.4.5\n\nThanks in advance.\n\nRegards,\nNune.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=284_\n", "url": "https://github.com/powermock/powermock/issues/304", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:39:56", "closed": "2015-07-24 06:40:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Builds fail under Maven 3 due to mismatched relativePath", "body": "_From [pja...@gmail.com](https://code.google.com/u/113036422892402586175/) on October 07, 2010 17:13:53_\n\nWhat steps will reproduce the problem? 1. Install Maven 3 release candidate.\n2. mvn validate What is the expected output? What do you see instead? Validation should complete without error.  Instead, errors are reported, e.g.\n\n[ERROR] The build could not read 1 project -> [Help 1]\n[ERROR]  \n[ERROR]   The project org.powermock:powermock-modules-test:1.5-SNAPSHOT (/home/peterj/devel/powermock-trunk/modules/module-test/pom.xml) has 1 error\n[ERROR]     Non-resolvable parent POM: Could not find artifact org.powermock:powermock:pom:1.5-SNAPSHOT in nexus ( https://repository.sonatype.org/content/groups/sonatype-grid ) and 'parent.relativePath' points at wrong local POM @ line 2, column 11 -> [Help 2] What version of the product are you using? On what operating system? 1.5-SNAPSHOT (also present in 1.4.x releases) Please provide any additional information below. Maven 3 is less forgiving of directory structures that don't match the project inheritance structure.\n\nI have attached a patch that adds the necessary <relativePath> elements.\n\n**Attachment:** [powermock-maven3-relativePath.patch](http://code.google.com/p/powermock/issues/detail?id=283)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=283_\n", "url": "https://github.com/powermock/powermock/issues/303", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:39:43", "closed": "2015-07-24 06:39:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Problem creating mock using PowerMock", "body": "_From [ago...@gmail.com](https://code.google.com/u/107352092385320321179/) on September 22, 2010 13:23:45_\n\nWhat steps will reproduce the problem? I am using following in my pom.xml\n\n```\n    \\<dependency> \n        \\<groupId>org.powermock.modules</groupId> \n        \\<artifactId>powermock-module-junit4</artifactId> \n        \\<version>1.4.5</version> \n        \\<scope>test</scope> \n    \\</dependency>\n    \\<dependency>\n      \\<groupId>com.google.collections</groupId>\n      \\<artifactId>google-collections</artifactId>\n      \\<version>1.0</version>\n      \\<scope>test</scope>\n\\</dependency>  \n\n    \\<dependency>\n        \\<groupId>org.easymock</groupId>\n        \\<artifactId>easymock</artifactId>\n        \\<version>2.2</version>\n        \\<scope>test</scope>\n    \\</dependency>\n    \\<dependency>\n        \\<groupId>org.easymock</groupId>\n        \\<artifactId>easymockclassextension</artifactId>\n        \\<version>2.2</version>\n        \\<scope>test</scope>\n    \\</dependency>\n```\n\nI get this exception:\n\njava.lang.IllegalStateException: Failed to transform class with name com.my.DroolsFlowManagerTest. Reason: 3\n    at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:208)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:146)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:65)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:252)\n    at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)\n    at java.lang.Class.forName0(Native Method)\n    at java.lang.Class.forName(Class.java:247)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:143)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.createDelegatorFromClassloader(JUnit4TestSuiteChunkerImpl.java:49)\n    at org.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.createTestDelegators(AbstractTestSuiteChunkerImpl.java:231)\n    at org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.<init>(JUnit4TestSuiteChunkerImpl.java:69)\n    at org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.<init>(AbstractCommonPowerMockRunner.java:36)\n    at org.powermock.modules.junit4.PowerMockRunner.<init>(PowerMockRunner.java:27)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n    at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:31)\n    at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:24)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:57)\n    at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:29)\n    at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:57)\n    at org.junit.internal.requests.ClassRequest.getRunner(ClassRequest.java:24)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.<init>(JUnit4TestReference.java:29)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestClassReference.<init>(JUnit4TestClassReference.java:25)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.createTest(JUnit4TestLoader.java:40)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader.loadTests(JUnit4TestLoader.java:30)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:452)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 3\n    at javassist.bytecode.ByteArray.write16bit(ByteArray.java:40)\n    at javassist.bytecode.StackMapTable$Shifter.update(StackMapTable.java:744)\n    at javassist.bytecode.StackMapTable$Shifter.sameFrame(StackMapTable.java:720)\n    at javassist.bytecode.StackMapTable$Walker.stackMapFrames(StackMapTable.java:194)\n    at javassist.bytecode.StackMapTable$Walker.parse(StackMapTable.java:179)\n    at javassist.bytecode.StackMapTable$Shifter.doit(StackMapTable.java:714)\n    at javassist.bytecode.StackMapTable.shiftPc(StackMapTable.java:693)\n    at javassist.bytecode.CodeIterator.insertGap0(CodeIterator.java:676)\n    at javassist.bytecode.CodeIterator.insertGap(CodeIterator.java:636)\n    at javassist.bytecode.CodeIterator.insertGapCore(CodeIterator.java:467)\n    at javassist.bytecode.CodeIterator.insertGap(CodeIterator.java:413)\n    at javassist.expr.Expr.replace0(Expr.java:298)\n    at javassist.expr.FieldAccess.replace(FieldAccess.java:213)\n    at org.powermock.core.transformers.impl.MainMockTransformer$PowerMockExpressionEditor.edit(MainMockTransformer.java:233)\n    at javassist.expr.ExprEditor.loopBody(ExprEditor.java:197)\n    at javassist.expr.ExprEditor.doit(ExprEditor.java:90)\n    at javassist.CtClassType.instrument(CtClassType.java:1289)\n    at org.powermock.core.transformers.impl.MainMockTransformer.transform(MainMockTransformer.java:70)\n    at org.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:204)\n    ... 30 more\n\nthen i added javassist to my pom.xml like this:\n        <dependency>\n          <groupId>javassist</groupId>\n          <artifactId>javassist</artifactId>\n          <version>3.10.0.GA</version>\n          <scope>test</scope>\n        </dependency>\n\nI've got rid of that problem but now I get another exception while trying to use PowerMock.createMock() method. Here is my code to create mock. its simple:\n\ncreateMock(ByteArrayInputStream.class);\n\nException i get is:\njava.lang.IllegalArgumentException: java.io.ByteArrayInputStream is not an interface\n    at java.lang.reflect.Proxy.getProxyClass(Proxy.java:362)\n    at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:581)\n    at org.easymock.internal.JavaProxyFactory.createProxy(JavaProxyFactory.java:12)\n    at org.easymock.internal.MocksControl.createMock(MocksControl.java:37)\n    at org.powermock.api.easymock.PowerMock.doCreateMock(PowerMock.java:2211)\n    at org.powermock.api.easymock.PowerMock.doMock(PowerMock.java:2162)\n    at org.powermock.api.easymock.PowerMock.createMock(PowerMock.java:98)\n    at net.plus.kbd.core.drools.DroolsFlowManagerTest.testReverseFlow(DroolsFlowManagerTest.java:103)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:66)\n    at org.powerm...\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=280_\n", "url": "https://github.com/powermock/powermock/issues/300", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:38:40", "closed": "2015-07-24 06:39:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Incorrect UnfinishedStubbingException when static and normal mocking in the same test", "body": "_From [rohan.ha...@gmail.com](https://code.google.com/u/108207483359980432490/) on September 09, 2010 03:59:24_\n\nUsing version 1.4.5 the following code throws an error when trying to create the normal Mockito mock.  This error does not occur when the \"when\" method is the (class, name, args...) version.\n\n--------------------------------\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mockito;\nimport org.powermock.api.mockito.PowerMockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(StaticClass.class)\npublic class MockStaticTest {\n\n```\n@Test\npublic void mockStaticAndNonStatic() {\n    PowerMockito.mockStatic(StaticClass.class);\n    PowerMockito.doThrow(new RuntimeException())\n        .when(StaticClass.class);\n\n    Mockito.mock(NormalInterface.class);\n}\n```\n\n}\n\nclass StaticClass {\n\n```\npublic static void meth(String a) {\n\n}\n```\n\n}\n\ninterface NormalInterface {\n\n}\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=278_\n", "url": "https://github.com/powermock/powermock/issues/298", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:37:45", "closed": "2015-07-24 06:38:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unit Test initialization Error when unit testing MongoDB Java Driver", "body": "_From [kevin.ki...@gmail.com](https://code.google.com/u/111821237685742939965/) on September 03, 2010 14:40:49_\n\nWhat steps will reproduce the problem? 1. Create a class that uses MongoDB Java Driver v2.1\n2. Create a unit test for class that uses MongoDB\n3. Run unit test What is the expected output? What do you see instead? Test execution successful What version of the product are you using? On what operating system? Linux, powermock-mockito-1.4 Please provide any additional information below. I've attached an eclipse project that I was able to reproduce the issue with.\n\nStack Trace.\njava.lang.LinkageError: loader constraint violation: loader (instance of org/powermock/core/classloader/MockClassLoader) previously initiated loading for a different type with name \"javax/management/MBeanServer\"\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClassCond(ClassLoader.java:632)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:616)\n    at java.lang.ClassLoader.defineClass(ClassLoader.java:466)\n    at org.powermock.core.classloader.MockClassLoader.loadUnmockedClass(MockClassLoader.java:190)\n    at org.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:148)\n    at org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:65)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:248)\n    at com.mongodb.DBPortPool$Holder.get(DBPortPool.java:58)\n    at com.mongodb.DBTCPConnector._set(DBTCPConnector.java:458)\n    at com.mongodb.DBTCPConnector.<init>(DBTCPConnector.java:46)\n    at com.mongodb.Mongo.<init>(Mongo.java:137)\n    at com.mongodb.Mongo.<init>(Mongo.java:123)\n    at com.mongodb.Mongo.<init>(Mongo.java:113)\n\n**Attachment:** [PowerMockError.tar.gz](http://code.google.com/p/powermock/issues/detail?id=277)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=277_\n", "url": "https://github.com/powermock/powermock/issues/297", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:36:46", "closed": "2015-07-24 06:37:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "regression for 1.4, java.lang.IllegalArgumentException: type cannot be null ", "body": "_From [chiiwen@gmail.com](https://code.google.com/u/chiiwen@gmail.com/) on September 02, 2010 20:02:18_\n\nWhat steps will reproduce the problem? 1. a simple example to demonstrate the issue: type cannot be null error\n\nP2.java\n----------------------\nimport java.sql.Connection;\n\npublic class P2 {\n\n  protected void establishConnection(Connection conn)\n  throws Exception\n{\n    if (conn== null) return;\n\n}\n}\n\n  @Test\n  public void testestablishConnection3() throws Exception {\n    P2 param=createMock(P2.class);\n    Connection conn=null;\n    Whitebox.invokeMethod(param, \"establishConnection\", conn);\n  } 2. 3. What is the expected output? What do you see instead? It should work fine, but get following message\n\njava.lang.IllegalArgumentException: type cannot be null\n        at\norg.powermock.reflect.internal.WhiteboxImpl.getUnmockedType(WhiteboxImpl.java:\n1780)\n        at\norg.powermock.reflect.internal.WhiteboxImpl.getType(WhiteboxImpl.java:\n2205)\n        at\norg.powermock.reflect.internal.WhiteboxImpl.getTypes(WhiteboxImpl.java:\n1011)\n        at\norg.powermock.reflect.internal.WhiteboxImpl.findMethodOrThrowException(WhiteboxImpl.java:\n962)\n        at\norg.powermock.reflect.internal.WhiteboxImpl.doInvokeMethod(WhiteboxImpl.java:\n890)\n        at\norg.powermock.reflect.internal.WhiteboxImpl.invokeMethod(WhiteboxImpl.java:\n721)\n        at org.powermock.reflect.Whitebox.invokeMethod(Whitebox.java:399) What version of the product are you using? On what operating system? powermock 1.4 on windows XP systems. It works properly under powermock 1.3.9 Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=276_\n", "url": "https://github.com/powermock/powermock/issues/296", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-24 06:36:10", "closed": "2015-07-24 06:36:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Upgrade to TestNG 5.14", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 01, 2010 19:10:06_\n\ndo it\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=275_\n", "url": "https://github.com/powermock/powermock/issues/295", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:36:02", "closed": "2015-07-24 06:36:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ClassCastException in javax.crypto caused by powermock", "body": "_From [Mark.Lehmacher@gmail.com](https://code.google.com/u/Mark.Lehmacher@gmail.com/) on August 25, 2010 14:14:22_\n\nWhat steps will reproduce the problem? The following TestNG test will:\n\nimport javax.crypto.Cipher;\nimport javax.crypto.SecretKey;\nimport javax.crypto.spec.IvParameterSpec;\nimport javax.crypto.spec.SecretKeySpec;\n\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.testng.IObjectFactory;\nimport org.testng.annotations.ObjectFactory;\nimport org.testng.annotations.Test;\n\n@Test\npublic class MyTest\n{\n\n   public final void testBla() throws Exception\n   {\n      final Cipher c = Cipher.getInstance( \"AES/CBC/PKCS5Padding\" );\n\n```\n  final SecretKey skey = new SecretKeySpec( new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15} , \"AES\" ); \n  final IvParameterSpec iv = new IvParameterSpec( new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15} );\n\n  c.init( Cipher.ENCRYPT_MODE, skey, iv );\n```\n\n   }\n\n   @ObjectFactory\n   public final IObjectFactory getObjectFactory()\n   {\n      return new org.powermock.modules.testng.PowerMockObjectFactory();\n   }\n\n}\n\nWhen running the test I get the following exception:\n\njava.lang.ClassCastException: com.sun.crypto.provider.AESCipher cannot be cast to javax.crypto.CipherSpi\n    at javax.crypto.Cipher.a(DashoA13_..)\n    at javax.crypto.Cipher.init(DashoA13_..)\n    at javax.crypto.Cipher.init(DashoA13*..)\n    at mypackage.MyTest.testBla(MyTest.java:48)\n... Removed 22 stack frames\n\nWhen I leave out getObjectFactory() everything works.\n\nAs as sidenote, when getObjectFactory() is there and the test class itself is final (in my case MyTest), another exception ensues:\n\norg.testng.TestNGException: \nAn error occurred while instantiating class com.aixigo.java.common.technology.core.anonymization.standard.MyTest: com.aixigo.java.common.technology.core.anonymization.standard.MyTest is final\n    at org.testng.internal.ClassHelper.createInstance(ClassHelper.java:329)\n    at org.testng.internal.ClassImpl.getDefaultInstance(ClassImpl.java:71)\n    at org.testng.internal.ClassImpl.getInstances(ClassImpl.java:90)\n    at org.testng.internal.TestNGClassFinder.<init>(TestNGClassFinder.java:119)\n    at org.testng.TestRunner.initMethods(TestRunner.java:305)\n    at org.testng.TestRunner.init(TestRunner.java:251)\n    at org.testng.TestRunner.init(TestRunner.java:221)\n    at org.testng.TestRunner.<init>(TestRunner.java:183)\n    at org.testng.remote.RemoteTestNG$1.newTestRunner(RemoteTestNG.java:105)\n    at org.testng.remote.RemoteTestNG$DelegatingTestRunnerFactory.newTestRunner(RemoteTestNG.java:158)\n    at org.testng.SuiteRunner$ProxyTestRunnerFactory.newTestRunner(SuiteRunner.java:551)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:241)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:195)\n    at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:903)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:872)\n    at org.testng.TestNG.run(TestNG.java:780)\n    at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:75)\n    at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:127)\nCaused by: java.lang.RuntimeException: com.aixigo.java.common.technology.core.anonymization.standard.MyTest is final\n    at javassist.util.proxy.ProxyFactory.checkClassAndSuperName(ProxyFactory.java:748)\n    at javassist.util.proxy.ProxyFactory.makeSortedMethodList(ProxyFactory.java:772)\n    at javassist.util.proxy.ProxyFactory.computeSignature(ProxyFactory.java:781)\n    at javassist.util.proxy.ProxyFactory.createClass(ProxyFactory.java:392)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.powermock.reflect.internal.WhiteboxImpl.performMethodInvocation(WhiteboxImpl.java:2015)\n    at org.powermock.reflect.internal.WhiteboxImpl.doInvokeMethod(WhiteboxImpl.java:893)\n    at org.powermock.reflect.internal.WhiteboxImpl.invokeMethod(WhiteboxImpl.java:721)\n    at org.powermock.reflect.Whitebox.invokeMethod(Whitebox.java:399)\n    at org.powermock.modules.testng.PowerMockObjectFactory.createTestClass(PowerMockObjectFactory.java:118)\n    at org.powermock.modules.testng.PowerMockObjectFactory.newInstance(PowerMockObjectFactory.java:79)\n    at org.testng.internal.ClassHelper.createInstance(ClassHelper.java:317)\n    ... 17 more\n\nAgain, without getObjectFactory() everything works. This issue contains a stripped down version of my real test, so leaving out the object factory is not really an option.\n\nI am using:\n\npowermock-mockito 1.4\n(javassist-3.13.0.GA.jar, objenesis-1.2.jar)\n\nTestNG 5.12\n\nThe problem arises within Eclipse (using TestNG plugin) as well as from executing tests from command line (vanilla TestNG).\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=274_\n", "url": "https://github.com/powermock/powermock/issues/294", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:35:08", "closed": "2015-07-24 06:36:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": " Strange Console behavior on Powermock 1.4 ", "body": "_From [chiiwen@gmail.com](https://code.google.com/u/chiiwen@gmail.com/) on August 13, 2010 00:44:38_\n\nWhat steps will reproduce the problem? 1. Have following powermock code \n Console console=createMock(Console.class); What is the expected output? What do you see instead? It compile ok under 1.3.9, Get following error on 1.4.0\njava.lang.RuntimeException: javassist.CannotCompileException: by\njavassist.CannotCompileException: no inheritable constructor in\njava.lang.Appendable\n        at\norg.powermock.core.ConcreteClassGenerator.createConcreteSubClass(ConcreteClassGenerator.java:\n63)\n        at\norg.powermock.core.DefaultFieldValueGenerator.instantiateFieldType(DefaultFieldValueGenerator.java:\n56)\n        at\norg.powermock.core.DefaultFieldValueGenerator.fillWithDefaultValues(DefaultFieldValueGenerator.java:\n38)\n        at\norg.powermock.core.DefaultFieldValueGenerator.fillWithDefaultValues(DefaultFieldValueGenerator.java:\n39)\n        at\norg.powermock.core.DefaultFieldValueGenerator.fillWithDefaultValues(DefaultFieldValueGenerator.java:\n39)\n        at org.powermock.api.easymock.PowerMock.doMock(PowerMock.java:2146)\n        at org.powermock.api.easymock.PowerMock.createMock(PowerMock.java:98) What version of the product are you using? On what operating system? Powermock 1.4 under Windows XP. Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=272_\n", "url": "https://github.com/powermock/powermock/issues/292", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:34:47", "closed": "2015-07-24 06:34:59", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SAX2 parsing -  com.sun.org.apache.xerces.internal.parsers.SAXParser cannot be cast to org.xml.sax.XMLReader", "body": "_From [AlexWib...@gmail.com](https://code.google.com/u/111621038469822880271/) on July 28, 2010 08:58:48_\n\nHi all,\n\nFirst of all, my problem is probably similar to the following issue: http://groups.google.com/group/powermock/browse_thread/thread/88079512f2dfcbd1/59b5d831e3e7f9b8?pli=1 basically, I have a hibernate configuration that gets loaded in my test.\nI'm getting the following error:\n\n--------------------------------------------------\njava.lang.ClassCastException: com.sun.org.apache.xerces.internal.parsers.SAXParser cannot be cast to org.xml.sax.XMLReader\n    at org.xml.sax.helpers.XMLReaderFactory.loadClass(XMLReaderFactory.java:199)\n    at org.xml.sax.helpers.XMLReaderFactory.createXMLReader(XMLReaderFactory.java:150)\n    at org.dom4j.io.SAXHelper.createXMLReader(SAXHelper.java:83)\n    at org.dom4j.io.SAXReader.createXMLReader(SAXReader.java:894)\n    at org.dom4j.io.SAXReader.getXMLReader(SAXReader.java:715)\n    at org.dom4j.io.SAXReader.read(SAXReader.java:435)\n\norg.hibernate.HibernateException: Could not parse configuration: inMemory-hibernate.cfg.xml\n    at org.hibernate.cfg.Configuration.doConfigure(Configuration.java:1528)\n    at org.hibernate.cfg.AnnotationConfiguration.doConfigure(AnnotationConfiguration.java:1035)\n    at org.hibernate.cfg.AnnotationConfiguration.doConfigure(AnnotationConfiguration.java:64)\n    at org.hibernate.cfg.Configuration.configure(Configuration.java:1462)\n    at org.hibernate.cfg.AnnotationConfiguration.configure(AnnotationConfiguration.java:1017)\n...\n..\nCaused by: org.dom4j.DocumentException: SAX2 driver class com.sun.org.apache.xerces.internal.parsers.SAXParser does not implement XMLReader Nested exception: SAX2 driver class com.sun.org.apache.xerces.internal.parsers.SAXParser does not implement XMLReader\n    at org.dom4j.io.SAXReader.read(SAXReader.java:484)\n    at org.hibernate.cfg.Configuration.doConfigure(Configuration.java:1518)\n    ... 34 more\n\n```\nat org.hibernate.cfg.Configuration.doConfigure(Configuration.java:1518)\n```\n\nWarning: Caught exception attempting to use SAX to load a SAX XMLReader \n    at org.hibernate.cfg.AnnotationConfiguration.doConfigure(AnnotationConfiguration.java:1035)\n    at org.hibernate.cfg.AnnotationConfiguration.doConfigure(AnnotationConfiguration.java:64)\nWarning: Exception was: java.lang.ClassCastException: com.sun.org.apache.xerces.internal.parsers.SAXParser cannot be cast to org.xml.sax.XMLReader\n    at org.hibernate.cfg.Configuration.configure(Configuration.java:1462)\nWarning: I will print the stack trace then carry on using the default SAX parser\n    at org.hibernate.cfg.AnnotationConfiguration.configure(AnnotationConfiguration.java:1017)\n...\n..\n--------------------------------------\n\nI've tried the recommendation suggested in the issue I mentioned above, without any luck:\n\n----------------------------------\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({MyServiceImpl.class})\n@PowerMockIgnore( { \"com.sun.org.apache.xerces._\", \"org.dom4j._\", \"org.xml.sax.*\" })\npublic class MyTest extends InMemoryLookupTests{\n\n```\nprivate MyServiceImpl service;\n...\n\n@Before\npublic void setup() throws Exception {\n    MockitoAnnotations.initMocks(this);\n    service = new MyServiceImpl();\n    ....\n}\n```\n\n.....\n\n}\n\n------------------------------------\n\nCould someone please share some light?\n\nThanks in advance!\n\nRegards,\n\nAlex.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=270_\n", "url": "https://github.com/powermock/powermock/issues/290", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:34:03", "closed": "2015-07-24 06:34:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Test methods are not executed if PowerMockRule declaration is present.", "body": "_From [Yaroslav...@gmail.com](https://code.google.com/u/107516775877747812247/) on July 16, 2010 23:42:18_\n\nIf PowerMockRule declaration is present in a test class, test methods annotated with @Test are not executed.\n\nExample test below passes without any warnings, while one of test methods throws NPE:\n\n@PrepareForTest(Static.class)\npublic class TestCase {\n    @Rule\n    public PowerMockRule rule = new PowerMockRule ();\n\n```\n@Test\npublic void testMethodThatThrowsNPE() {\n    throw new NullPointerException();\n}\n```\n\n}\n\nIf rule declaration is commented out, test fails as expected.\n\nQuick debug shown that Runnable created using \"evaluate()\" method of PowerMockStatement is never executed. It seems, like this Runnable is intended to be executed in \"Object execute(Object instance, Method method, Object... arguments)\" method of ClassloaderExecutor, but it does not, because there is a check based on return type, and return type is expected to be non-void (line 61).\n\nPowerMock Ver.: 1.3.9 (Mockito API, with dependencies)\nJava: 1.6.0_21-b06\n\nEclipse (Helios, Build id: 20100617-1415) plugin was used to run the tests.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=268_\n", "url": "https://github.com/powermock/powermock/issues/288", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-24 06:33:42", "closed": "2015-07-24 06:33:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ConstructorNotFoundException on whenNew wirh array", "body": "_From [Alexandr...@gmail.com](https://code.google.com/u/100899915105869891957/) on July 16, 2010 15:58:38_\n\nWhat steps will reproduce the problem? 1. See attached code for lots of details\n2. Short version: whenNew on class that has a constructor with parameters as: (AnyClass any, OtherClass... arrayOfClasses); goes into ConstructorNotFoundException What is the expected output? What do you see instead? The tests should pass, since there is not even a verify or assert. But the tests fail because of ConstructorNotFoundException What version of the product are you using? On what operating system? Using powermock-mockito-junit-1.3.9, Windows XP Please provide any additional information below. Having a constructor as: (OtherClass... arrayOfClasses) works as expected\n\n**Attachment:** [BugTest.java](http://code.google.com/p/powermock/issues/detail?id=267)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=267_\n", "url": "https://github.com/powermock/powermock/issues/287", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:33:34", "closed": "2015-07-24 06:33:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "@PrepareForTest causes LocalVariableTable error when using log4j", "body": "_From [kevin.ki...@gmail.com](https://code.google.com/u/111821237685742939965/) on July 09, 2010 23:12:47_\n\nWhat steps will reproduce the problem? 1. Create a class to test that defines Logger from log4j\n2. Create a unit test for that class with the @PrepareForTest Attribute\n3. Run the test case with the \"Run as JUnit\" in eclipse\n4. Error occurs with \"Invalid length XXXX in LocalVariableTable\" What is the expected output? What do you see instead? It should not throw an exception What version of the product are you using? On what operating system? powermock-mockito-1.3.8-full.jar Please provide any additional information below. *Removing the Logger prevents the exception.\n*Removing the Attribute prevents the exception.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=266_\n", "url": "https://github.com/powermock/powermock/issues/286", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:32:06", "closed": "2015-07-24 06:33:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Missing md5 and sha1 files for javassist", "body": "_From [daveke...@gmail.com](https://code.google.com/u/112907607777034386465/) on July 09, 2010 14:32:07_\n\nWhat steps will reproduce the problem? 1. Navigate to http://powermock.googlecode.com/svn/repo/javassist/javassist/3.12.0.GA/ 2. View list of files What is the expected output? What do you see instead? I expect to see files:\njavassist-3.12.0.GA.jar.sha1\njavassist-3.12.0.GA.jar.md5\njavassist-3.12.0.GA.pom.sha1\njavassist-3.12.0.GA.pom.md5\nI did not see them. What version of the product are you using? On what operating system? 1.3.8 Windows XP Please provide any additional information below. I think the powermock framework is awesome. We have chosen it as a tool of choice along with mockito here at work. I understand this is very minor. :)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=265_\n", "url": "https://github.com/powermock/powermock/issues/285", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-24 06:31:53", "closed": "2015-07-24 06:32:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Problem with @RunWith(PowerMockRunner.class) annotation in Eclipse plugins tests ", "body": "_From [Lucas.Du...@gmail.com](https://code.google.com/u/112841026739558188605/) on July 07, 2010 16:54:50_\n\nHi,\n\nI'm trying to integrate powermock framework into my project involving creation of Eclipse plugins and I'm encountering some problems. \n\n1.I created new plugin (org.powermock) and using extension points I made all the powermock functions available for my testing library plugin.\n2. I created following testing class in my testing library plugin: \n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\npublic class NewTest {\n\n```\n@Test\npublic void testOne() {\n    if (true)\n        System.out.println(\"Success\");\n}\n```\n\n}\n1. At this point everything lokks fine - no compilation errors.\n2. I run this as a normal JUnit test(Run As in Run menu) -> everything looks green\n3. I run this as a JUnit Plugin test (Run As in Run menu) and I receive the java.lang.ClassNotFoundException.\n\nAfter some analysis I came to the conclusion that the problem lies in diffrent class loaders used for those cases. In case of normal JUnit tests the class is loaded by default Sun loader class (can't recall its name). On the other hand, when using JUnit plugin tests, org.eclipse.core.runtime.internal.adaptor.ContextFinder is used to get the right class loader. It fails completely, since when I checked my class was not loaded into the loader that was returned by the method loadClass(...) in this loader. \n\nNow, I have some questions. \n1.Is there any workaround to this issue?\n2.Is this issue known, or maybe no one else tried to run the tests as I did, as JUnit plugin tests?\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=264_\n", "url": "https://github.com/powermock/powermock/issues/284", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:31:05", "closed": "2015-07-24 06:31:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Spying wipes out spied object's collaborators", "body": "_From [srivaths.sankaran](https://code.google.com/u/srivaths.sankaran/) on June 20, 2010 05:20:56_\n\nWhat steps will reproduce the problem? 1.  Create a real instance of an of an object with collaborators \n2.  Create a spied-version using PowerMockito.spy()\n3.  Dereferencing the collaborator results in a NullPointerException What is the expected output? What do you see instead? Normal behavior interrupted by NullPointerException What version of the product are you using? On what operating system? 1.3.8 Please provide any additional information below. This issue was discussed in the user group.  Please see http://is.gd/cVZ37 .\n\nHere is short experiment that details the problem:\n\n@Test public void experiment() { \n  MyService service = new MyService(); \n  MyService mockitoSpy = Mockito.spy(service); \n  MyService powermockSpy = PowerMockito.spy(service); \n  System.out.println(\"Mockito:\" + ((mockitoSpy .getMyDao() != null) ? \n\"non null\" : \"null\")); \n  System.out.println(\"Powermock:\" + ((powermockSpy .getMyDao() != \nnull) ? \"non null\" : \"null\")); \n}\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=263_\n", "url": "https://github.com/powermock/powermock/issues/283", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:30:47", "closed": "2015-07-24 06:31:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Error while mocking Static method", "body": "_From [vichhu...@yahoo.com](https://code.google.com/u/104162302400230282206/) on June 10, 2010 09:22:10_\n\nI am using 1.2.5 version of power mock\n\nThe operating system is windows.\n\nI have attached the error, which i am getting while trying to mock a static method, which looks like:\n\npublic class YUtil extends Xutil{\n public static Long getPort(Long serviceid) throws Exception{\n       Long cellEndPort = Xutil.getPortsForCircuit(circuitId);\n }\n}\n\nI am mocking it like below\n\n@PrepareForTest({YUtil.class})\nmockStatic(YUtil.class);\nexpect(YUtil.getPort(123L)).andReturn(20L);\n\nWhat i have noticed is its going inside the YUtil and also inside Xutil.\nThis means my expect is not working.\n\nI have done replayAll.\n\nThe java assist that i am using is javassist-3.9.0.GA\n\nOne more observation : Xutil.class is too large(About 6000 lines).\n\n**Attachment:** [ErrorLog.txt](http://code.google.com/p/powermock/issues/detail?id=262)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=262_\n", "url": "https://github.com/powermock/powermock/issues/282", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:30:26", "closed": "2015-07-24 06:30:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMockito can't partial mock public static methods", "body": "_From [DanFabul...@gmail.com](https://code.google.com/u/110641516453600120513/) on May 26, 2010 20:18:33_\n\nTo reproduce: Apply the attached patch to add a test to PowerMock.\n\nThe patch adds new public static methods to StaticExample:\n\n# publicObjectMethod (which returns new Object())\n# publicObjectMethodCaller (which calls the first method).\n\nWe then spy on StaticExample and attempt to mock out publicObjectMethod,\nreturning \"Hello Static\" instead of new Object().\n\nExpected: The test should pass\n\nActual: Failure: java.lang.AssertionError: expected:<Hello static> but\nwas:java.lang.Object@2927fa12\n\nALTERNATE REPRO: Apply this one-line patch to StaticExample.java:\n\nIndex: StaticExample.java\n# \n\n--- StaticExample.java  ( revision 1319 )\n+++ StaticExample.java  (working copy)\n@@ -38,7 +38,7 @@\n                return privateObjectMethod();\n        }\n-       private static Object privateObjectMethod() {\n-       public static Object privateObjectMethod() {\n              return new Object();\n      } \n\nActual:\nStaticPartialMockingTest#partialMockingOfStaticMethodReturningObjectWorks\nfails java.lang.AssertionError: expected:<Hello static> but\nwas:java.lang.Object@7b2884e0\n\nExpected: The test should continue to pass.\n\nI'm using PowerMock 1.3.8 on OSX 10.6.3\n\n**Attachment:** [public-static-method.patch](http://code.google.com/p/powermock/issues/detail?id=261)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=261_\n", "url": "https://github.com/powermock/powermock/issues/281", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:30:19", "closed": "2015-07-24 06:30:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "How to mock this class!!!!!!!!!!!!!!!", "body": "_From [anuopass...@gmail.com](https://code.google.com/u/110762255943320889841/) on May 17, 2010 19:13:57_\n\nI want to mock this class using powerMock,when i try to test it thrown \njava.lang.ExceptionInInitializerError\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke\n\nwhy ??? How to mock it?\n\nclass:\npublic final class ContentFacade\n{\n\n```\nprivate ContentFacade()\n{\n    contentService = (ContentService)\n```\n\nBaselineStartUp.getApplicationContext().getBean(\"contentService\");\n        folderContentService = (FolderContentService)\nBaselineStartUp.getApplicationContext().getBean(\"folderContentService\");\n        providerService = (ProviderService)\nBaselineStartUp.getApplicationContext().getBean(\"providerService\");\n        basicService = (BasicService)BaselineStartUp.getApplicationContext\n().getBean(\"basicService\");\n        unknowTerm = (TerminalInfo)BaselineStartUp.getApplicationContext\n().getBean(\"unknowTerm\");\n    }\n\n```\npublic static ContentFacade getInstance()\n{\n    return INSTANCE;\n}\n```\n\n}\n\ntest:\n\nContentFacade cfde=PowerMock.createMock(ContentFacade.class); Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=260_\n", "url": "https://github.com/powermock/powermock/issues/280", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:30:11", "closed": "2015-07-24 06:30:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Artifacts should be pushed to maven central", "body": "_From [exabr...@gmail.com](https://code.google.com/u/118198797549851840429/) on April 26, 2010 20:39:21_\n\nCurrently, powermock is hosted under it's own repository. The project would \nhave much greater visibility if it were available under central. Also, most \ncompanies(like mine) have policies preventing developers from pulling in \nartifacts from random respositories across the internet. Furthermore, if \neveryone were to follow what powermock does, you would need a repository for \nevery artifact specified in the pom. \n\nIt's very simple to set this up, it can be accomplished by one of the project \nadmins in an afternoon: http://maven.apache.org/guides/mini/guide-central-repository-upload.html Please please consider this request very  carefully. Thank you\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=257_\n", "url": "https://github.com/powermock/powermock/issues/277", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 06:29:31", "closed": "2015-07-24 06:29:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SuppressStaticInitializationFor  doesn't work with TestNG", "body": "_From [michael.yavorovsky](https://code.google.com/u/michael.yavorovsky/) on April 26, 2010 13:41:56_\n\nWhat steps will reproduce the problem? 1. Try SuppressStaticInitializationFor annotation with TestNg What is the expected output? What do you see instead? Suppressing of static initializers is expected, but not occurs What version of the product are you using? On what operating system? 1.3.7 /windows xp\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=256_\n", "url": "https://github.com/powermock/powermock/issues/276", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:28:38", "closed": "2015-07-24 06:29:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "can't run then second test case", "body": "_From [dhi...@gmail.com](https://code.google.com/u/116903520031444688005/) on April 23, 2010 15:21:30_\n\nWhat steps will reproduce the problem? 1.create all mockobjects inside @before class\n2.have some more than one test cases, and record the parameters for these \nmock objects.\n3.First testcase will run and debug fine,But for the second case, run fine \nbut produce error while debugging. What is the expected output? What do you see instead? .Expecting to debug proper,but's not working What version of the product are you using? On what operating system? Eclipse ganymade.windowsXP. Please provide any additional information below.\n\n**Attachment:** [hs_err_pid5876.log](http://code.google.com/p/powermock/issues/detail?id=255)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=255_\n", "url": "https://github.com/powermock/powermock/issues/275", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:28:18", "closed": "2015-07-24 06:28:36", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Incorrect usage of verifyNew passes as a green test", "body": "_From [corneliu...@gmail.com](https://code.google.com/u/103887336606436170773/) on April 01, 2010 13:38:17_\n\nhi there,\n\ni tried searching for something similar but couldn't find anything, so here\ngoes nothing: What steps will reproduce the problem? 1. create a class DirectoryStructure that uses the class File\n2. create DirectoryStructureTest that verifies the call to File's constructor\n3. do not specify .withArguments(DIRECTORY_PATH) to the\nverifyNew(File.class, times(100000)) method What is the expected output? What do you see instead? - the test passes, whereas it should throw some kind of exception to notify\nthat verifyNew is incorrectly used like mockito does What version of the product are you using? On what operating system? - Power Mockito 1.3.6 Full\n- Windows Xp Please provide any additional information below. - mockito has such a system. you can see what i mean if you remove the\n  .mkdirs() from  verify(directoryMock).mkdirs() in DirectoryStructureTest @\n  line 39\n\nhave a good day,\nC\n\n**Attachment:** [DirectoryStructure.java DirectoryStructureTest.java](http://code.google.com/p/powermock/issues/detail?id=251)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=251_\n", "url": "https://github.com/powermock/powermock/issues/271", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:26:10", "closed": "2015-07-24 06:26:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "powermock-easymock-testng-1.3.7.zip contains wrong powermock jar file", "body": "_From [oliver.boeff](https://code.google.com/u/oliver.boeff/) on March 28, 2010 13:33:25_\n\nWhat steps will reproduce the problem? 1. downloading powermock-easymock-testng-1.3.7.zip What is the expected output? What do you see instead? containing the powermock-easymock-1.3.7-full.jar file\nbut contains powermock-easymock-1.3.6-full.jar\n\ncu\nboeffi\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=249_\n", "url": "https://github.com/powermock/powermock/issues/269", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:25:37", "closed": "2015-07-24 06:25:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMockRule doesn't delegate to other rules", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on March 25, 2010 12:22:46_\n\nCombining e.g. PowerMockRule and TestName doesn't call testname\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=245_\n", "url": "https://github.com/powermock/powermock/issues/265", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:24:11", "closed": "2015-07-24 06:24:17", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "NullPointerException on verifyNew", "body": "_From [Alexandr...@gmail.com](https://code.google.com/u/100899915105869891957/) on March 24, 2010 15:51:04_\n\nWhat steps will reproduce the problem? Calling verifyNew to check for constructor call will generate a\nNullPointerException, unless you also call whenNew on the same constructor\n(of course, with the correct timing, meaning before the call to the method\nbeing tested). What is the expected output? What do you see instead? If I don't want to specifically mock a constructor (with whenNew) in order\nto use a verifyNew on it, then PowerMock should do it automatically, not\nthrow NullPointerException. What version of the product are you using? On what operating system? 1.3.6 on Windows XP 32 bits, with SP2 Please provide any additional information below. After watching the PowerMock code a bit, I realized that verifyNew is\nlooking for a mock substitute in some sort of \"Mockings container\". A\nfriend came up with the idea that there should be a check (inside the\nverifyNew method implementation) before calling the assert on the mocked\nobject.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=244_\n", "url": "https://github.com/powermock/powermock/issues/264", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 06:23:35", "closed": "2015-07-24 06:24:10", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Problem with PowerMockRunner in class without tests", "body": "_From [t.poep...@gmx.de](https://code.google.com/u/116042038207291089938/) on March 18, 2010 20:52:19_\n\nRunning PowerMock 1.3.6 with JUnit 4.5 and EasyMock Classextension 2.5.2,\nthere is a problem with classes containing no @Test.\nFor example, create a class containing initializations for testing as the\nsuperclass of the class containing the tests.\nWhen using the @RunWith annotation in the superclass, running only the\nclass containing the tests works fine, but running the complete package\nleads to this exception:\n\njava.lang.IllegalStateException: Internal error: Run delegates were 0.\n    at\norg.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.getDescription(JUnit4TestSuiteChunkerImpl.java:168)\n    at\norg.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.getDescription(AbstractCommonPowerMockRunner.java:50)\n    at\norg.eclipse.jdt.internal.junit4.runner.JUnit4TestClassReference.sendTree(JUnit4TestClassReference.java:38)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.sendTrees(RemoteTestRunner.java:476)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:464)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\n\nA workaround for this is to delete the @RunWith statement in the\nsuperclass, but perhaps this could lead to other problems.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=241_\n", "url": "https://github.com/powermock/powermock/issues/261", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:23:00", "closed": "2015-07-24 06:23:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMockito.whenNew() failing trying to call org.mockito.internal.IMockHandler()", "body": "_From [ank...@gmail.com](https://code.google.com/u/101453641862635350005/) on March 17, 2010 00:22:40_\n\nI am using PowerMockito(1.3.6) with Mockito(1.8.3) and Junit(4.7) for\ntesting. I am quite stuck on an error:\n\n```\n[junit] Testcase:\n```\n\ntestNextPNRFromQueueHappyPath(com.orbitz.galileo.host.robot.GalpoQueueConnectionTest):\nCaused an ERROR\n    [junit] org/mockito/internal/IMockHandler\n    [junit] java.lang.NoClassDefFoundError: org/mockito/internal/IMockHandler\n    [junit] at\norg.powermock.api.mockito.internal.expectation.DefaultConstructorExpectationSetup.createNewSubsituteMock(DefaultConstructorExpectationSetup.java:80)\n    [junit] at\norg.powermock.api.mockito.internal.expectation.DefaultConstructorExpectationSetup.withArguments(DefaultConstructorExpectationSetup.java:48)\n    [junit] at\ncom.orbitz.galileo.host.robot.GalpoQueueConnectionTest.testNextPNRFromQueueHappyPath(GalpoQueueConnectionTest.java:62)\n    [junit] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    [junit] at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    [junit] at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\n```\nMy class under test : GalpoQueueConnection is basically creating a new\n```\n\nobject of another class : QueueReadBuilder. I am trying to do something like:\n\n```\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({GalpoQueueConnection.class, ApolloProcUtils.class})\npublic class GalpoQueueConnectionTest extends TestCase{\n@Test\npublic void testNextPNRFromQueueHappyPath() throws Exception {\nQueueReadBuilder mockBuilder = mock(QueueReadBuilder.class);\nPowerMockito.whenNew(QueueReadBuilder.class).withArguments(anyString(),\n```\n\nanyString(), anyString()).thenReturn(mockBuilder);\n    }\n    }\n\n```\nIt seems like somehow powermockito is trying to call IMockHandler, and\n```\n\nI looked at Mockito 1.8.3 api, and there isn\u2019t any.\n\n```\nAny suggestions/ clues would be welcome.\n```\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=240_\n", "url": "https://github.com/powermock/powermock/issues/260", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:22:46", "closed": "2015-07-24 06:22:58", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Set mock name in Mockito", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on March 15, 2010 13:24:33_\n\nI find that I get NullPointerExceptions when invoking toString() on\nany mock objects generated by PowerMock. The following simple code\nwill re-create the problem:\n\nimport javax.crypto.Cipher;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.mockito.PowerMockito;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(Cipher.class)\npublic class MyTest {\n   private Cipher cipher;\n\n   @Test\n   public void test1() throws Exception {\n       cipher = PowerMockito.mock(Cipher.class);\n\n```\n   System.out.println(cipher);\n```\n\n   }\n}\n\nWe use Log4j quite heavily to log method parameters and using injected\nPowerMock objects makes this a big issue for us.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=239_\n", "url": "https://github.com/powermock/powermock/issues/259", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:22:38", "closed": "2015-07-24 06:22:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Powermock in maven central", "body": "_From [franci...@gmail.com](https://code.google.com/u/113865493528058686158/) on March 09, 2010 16:24:33_\n\nWould it be possible to release the powermock artifacts to maven central? \nSonatype has a free maven staging repository that is linked to central. http://nexus.sonatype.org/oss-repository-hosting.html\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=238_\n", "url": "https://github.com/powermock/powermock/issues/258", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 06:22:30", "closed": "2015-07-24 06:22:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Support Mockito 1.8.3", "body": "_From [daniel.b...@gtempaccount.com](https://code.google.com/u/118297864500295843264/) on March 09, 2010 13:41:46_\n\nPowerMock does not work with Mockito 1.8.3 since it references internal\nclasses and methods in Mockito that have been moved/changed/renamed for the\n1.8.3 release.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=237_\n", "url": "https://github.com/powermock/powermock/issues/257", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:22:23", "closed": "2015-07-24 06:22:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unable to mock static method that takes arguments and has a void return type", "body": "_From [mike.mac...@gmail.com](https://code.google.com/u/103463611724021298034/) on March 04, 2010 00:20:12_\n\nI am trying to mock a static class that contains a public method which\ntakes a few arguments and returns void. It seems the EasyMock expect()\nmethod does not like the fact that the mocked method returns void. When I\ntry to do this, I get the compile error:\n\n\"The method expect(T) in the type EasyMock is not applicable for the\narguments (void)\"\n\nThe key is that I want to verify the call to my static method contains the\ncorrect arguments, so using verifyStatic() is not an option. I want to make\nsure the static method is getting called correctly.\n\nIs this a supported configuration? Doesn't seem like I am doing something\nterribly complicated...\n\nThis is using PowerMock with junit/easymock 1.3.5 on os x with java 1.6.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=236_\n", "url": "https://github.com/powermock/powermock/issues/256", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:22:14", "closed": "2015-07-24 06:22:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "The naming convention of the maven artifacts is not good", "body": "_From [anders.j...@gmail.com](https://code.google.com/u/100400220548436945976/) on February 10, 2010 16:44:37_\n\nSuggested changes are:\n\nThe groupId of all the artifacts should be: 'org.powermock'\nWhat is the point of having a groupId if there is only one artifact per group?\nThis will allow better build tools than maven to use this naming convention:\nExample:\ngroup &#37;w(powermock-utils powermock-api powermock-reflect), :under =>\n'org.powermock', :version => '1.3.5'\n\nThe name of compound artifacts such as powermock-easymock-1.3.5-full.jar\nshould be: 'powermock-easymock-full-1.3.5.jar'\n\n'full' is a description of the artifact and not part of a version.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=234_\n", "url": "https://github.com/powermock/powermock/issues/254", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:20:07", "closed": "2015-07-24 06:20:19", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "@RunWith annotation on Android fails on 1.3.1", "body": "_From [magnus.p...@gtempaccount.com](https://code.google.com/u/111736122490798820149/) on February 08, 2010 10:52:27_\n\nWhat steps will reproduce the problem? 1. Create a simple HelloWorld Android app.\n2. Create a junit test with @RunWith(PowerMockRunner.class) annotation.\nThat alone causes an initializationError. don't implement any tests. 3. What is the expected output? What do you see instead? Expected output is a working test.\nNot it fails with the following exception:\n\nJava.lang.RuntimeException: Stub!\n        at junit.runner.Version.id(Version.java:5)\n        at\norg.powermock.modules.junit4.PowerMockRunner.getJUnitVersion(PowerMockRunner.java:32)\n        at\norg.powermock.modules.junit4.PowerMockRunner.<init>(PowerMockRunner.java:27) What version of the product are you using? On what operating system? Works with PowerMock 1.2.5\nBroken on PowerMock 1.3.1\n\nOs: Ubuntu 9.10\nLinux a23059700-laptop 2.6.31-19-generic `#56`-Ubuntu SMP Thu Jan 28 01:26:53\nUTC 2010 i686 GNU/Linux\n\nAndroid 1.6_r2 SDK jar.\n\nMaven android plugin:\ncom.jayway.maven.plugins.android.generation2:maven-android-plugin\n2.2.3 Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=232_\n", "url": "https://github.com/powermock/powermock/issues/252", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-24 06:19:11", "closed": "2015-07-24 06:19:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ClassCastException SAXParserFactory.newInstance()", "body": "_From [vipin.m...@gmail.com](https://code.google.com/u/114454810371732372545/) on February 02, 2010 15:14:36_\n\nHi Johan!!\n\nI am using TestNG 5.11+Mockito 1.8+PowerMockito 1.3.5\n\nFacing lot of trouble with third party xml, log4j and spring frameworks.\nI tried all possible tricks (solutions) available on web. After opting \ntricks now i am getting ClassCastException while executing new \nSAXParserFactory.newInstance() code. This code is in some third party jar \nxmlrpc-Common.jar 3.1.  I Dont have the source code of it and dont want to \nmanipulate this jar anyways.\n\nLooks like two diffrent classloader problem. I mean Abstract class is \nloaded by MockClassLoader and implementing class instance is in diffrent \nclassLoader\n\nI tried to use @PowerMockIgnore annotation. But that too having bug in \nPowerMockito1.3.5 versrion(Other versions i didnt try). I get \nNullPointerException in string class if i use this.\n\nWhile Debugging this NullPointerException i found two bugs in the \nPowerMockito1.3.5 Code. Here goes the code snippet having bug\n\nClass::org.powermock.core.classloader.DeferSupportingClassLoader\n\npublic void addIgnorePackage(String... packagesToIgnore) {\n        if (packagesToIgnore != null && packagesToIgnore.length > \n0) {\n            final int previousLength = deferPackages.length;\n            deferPackages = new String[previousLength + \npackagesToIgnore.length];\n            System.arraycopy(packagesToIgnore, 0, \ndeferPackages, previousLength, packagesToIgnore.length);\n        }\n\nin this method developer is creating a new array list and assigning \ndeferpackeges referece to it.Becoz of this earlier string array get wiped \nout to which thie reference was reffering. And finally deferpackages \nreference refer to an array having values null in starting and after some \nnull values it stores the values supplied in PowerMock Ignore  annotation.\n\nAlso found one bug in mockclassLoder\n\nreturn (shouldModifyAll() || WildcardMatcher.matchesAny(modify, s)) && !\nshouldIgnore(deferPackages, s);\n\nthis line will always return the false value becoz of shouldModifyAll() \ncall\n\nCan u plz explain the intended behaviours of these code snnipets.\n\nAnd also Plz Tell me the solution of my earlier ClassCastException problem.\nIf you quickly reply this, it wud b gud. As rit now i m evaluating \nPowerMockito to be used or not to be used in our project\n\nThanks in advance......\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=231_\n", "url": "https://github.com/powermock/powermock/issues/251", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-24 06:18:56", "closed": "2015-07-24 06:19:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "WhiteboxImpl.getMethod(Class, String, Class...) returns wrong value", "body": "_From [rosenspa...@gmail.com](https://code.google.com/u/105188522335075175136/) on January 28, 2010 10:52:53_\n\nWhat steps will reproduce the problem? 1. Download the attached \"PowerMockExpectIssue.jar\" archive. It contains a \nsimple Java project.\n2. Run the \"test.FooBarTest\" JUnit test contained within the JAR archive. \nYou will need reference to PowerMock, EasyMock and JUnit4 libraries.\n3. The test fails with \"java.lang.AssertionError: Unexpected method call \nfeed(test.model.Dog)\" error. What is the expected output? What do you see instead? The test should pass successfully however it fails with \n\"java.lang.AssertionError: Unexpected method call feed(test.model.Dog): \nfeed( EasyMock for interface test.model.Animal): expected: 1, actual: 0\" \nerror. What version of the product are you using? On what operating system? I am using PowerMock 1.3.5, EasyMock 2.5.2, EasyMock ClassExtension 2.4 and \nJUnit 4.5 on \"Windows XP Professional Version 2002 SP3\" 32-bit OS and JDK \n1.5.0_19. Please provide any additional information below. Please note that the occurrence of the bug depends on the order of the \nelements of the array returned by the java.lang.Class.getDeclaredMethods() \nmethod. It is invoked by methods of the \n\"org.powermock.reflect.internal.WhiteboxImpl\" class.\n\nThere are several possible solutions of this issue you might want to \nconsider:\n- Use \"java.lang.Class#getDeclaredMethod(String name, Class[] \n  parameterTypes)\" and only if it fails perform the search from the current \n  implementation.\n- Change the \n  \"org.powermock.reflect.internal.WhiteboxImpl#checkIfTypesAreSame(Class<?>[] \n  expectedParameterTypes, Class<?>[] actualParameterTypes)\" static method and \n  replace the following statement \n  \"!expectedParameterTypes[i].isAssignableFrom(getType(actualParameterTypes[i\n  ]))\" with this one \n  \"!actualParameterTypes[i].isAssignableFrom(getType(expectedParameterTypes[i\n  ]))\". Just replace the position of the actual and expected parameter types.\n\nOf course the solutions I described above are not complete. There are \nseveral points you have to consider before implementing them. I mentioned \nthem just as a head start.\n\nIf you have any questions or the description above is not very clear, \nplease don't hesitate to contact me at rosenspasov-at-gmail.com. I did not \nfind a similar issue reported and this is why I am posing this one. Sorry \nif it happens to be redundant.\n\nKind regards,\nRosen Spasov\n\n**Attachment:** [PowerMockExpectIssue.jar](http://code.google.com/p/powermock/issues/detail?id=229)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=229_\n", "url": "https://github.com/powermock/powermock/issues/249", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:23:03", "closed": "2015-07-24 06:18:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "private final inner classes in test cases should be prepared automatically", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on January 21, 2010 10:33:57_\n\nSpying on classes defined inside the test case are not prepared for test \nautomatically and it's difficult to prepare them for test.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=228_\n", "url": "https://github.com/powermock/powermock/issues/248", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 19:22:56", "closed": "2015-07-23 19:23:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Spying on anonymous inner class causes StringIndexOutOfBoundsException in Mockito", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on January 21, 2010 10:28:47_\n\nWhen sut is created using: \ntested = new AbstractSomething() {\n            @Override\n            protected void something throws Exception {\n            }\n        };\n\nWe get:\njava.lang.StringIndexOutOfBoundsException: String index out of range: 1\n    at java.lang.String.substring(String.java:1934)\n    at \norg.powermock.api.mockito.internal.mockcreation.MockCreator.toInstanceName(\nMockCreator.java:88)\n    at \norg.powermock.api.mockito.internal.mockcreation.MockCreator.mock(MockCreato\nr.java:44)\n    at org.powermock.api.mockito.PowerMockito.spy(PowerMockito.java:97)\n    at \ncom.dts.infrastructure.support.event.AbstractEventHandlerTest.delegatesEven\n\nThis is because getSimpleName is empty.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=227_\n", "url": "https://github.com/powermock/powermock/issues/247", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:22:42", "closed": "2015-07-23 19:22:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Cannot mock final classes that reside in packages *.junit.*, *.sun.*, and *.java.*", "body": "_From [ash...@gmail.com](https://code.google.com/u/104493242179075932587/) on January 14, 2010 03:12:04_\n\nWhat steps will reproduce the problem? 1. Create a final class in package something.junit.anything.\n2. Mock the class using PowerMock. What is the expected output? What do you see instead? Mocking should succeed with Mockito despite the class being final. Instead\nMockito cannot mock the class and I get the following stacktrace:\n\njava.lang.IllegalArgumentException: Cannot subclass final class class\nsomepackage.junit.SomeFinalClass\n    at org.mockito.cglib.proxy.Enhancer.generateClass(Enhancer.java:447)\n    at\norg.mockito.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25)\n    at\norg.mockito.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:217)\n    at org.mockito.cglib.proxy.Enhancer.createHelper(Enhancer.java:378)\n    at org.mockito.cglib.proxy.Enhancer.createClass(Enhancer.java:318)\n    at\norg.mockito.internal.creation.jmock.ClassImposterizer.createProxyClass(ClassImposterizer.java:93)\n    at\norg.mockito.internal.creation.jmock.ClassImposterizer.imposterise(ClassImposterizer.java:50)\n    at\norg.powermock.api.mockito.internal.mockcreation.MockCreator.createMethodInvocationControl(MockCreator.java:79)\n    at\norg.powermock.api.mockito.internal.mockcreation.MockCreator.mock(MockCreator.java:53)\n    at org.powermock.api.mockito.PowerMockito.mock(PowerMockito.java:80)\n    at SomeFinalClassTest.test(SomeFinalClassTest.java:23)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:66)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:322)\n    at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:86)\n    at\norg.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:94)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:309)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:112)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:73)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:297)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:84)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:49)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:222)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:161)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:135)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:133)\n    at\norg.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:112)\n    at\norg.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:55)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:60) What version of the product are you using? On what operating system? Problem occurs in most (probably all) versions of PowerMock that support\nMockito. Yes, I really tried most of them. OS: Snow Leopard. Please provide any additional information below. I did a lot of legwork to track down this problem (looking at ClassLoader\ncode is FUN!). \n\nThe MockClassLoader is deciding to defer any class that matches \"junit.\" to\nthe system ClassLoader. The problem arises from the WildcardMatcher\nsuccessfully matching \"junit.\" with\n\"something.junit.anything.MyJUnitSupportClass\".\n\nI understand the desire; however the side effect is that anyone that uses\n\"junit\", \"sun\", or \"java\" package names are left in the dark.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=225_\n", "url": "https://github.com/powermock/powermock/issues/245", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:21:56", "closed": "2015-07-23 19:22:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Integration PowerMock and testNG Issues", "body": "_From [reddy...@gmail.com](https://code.google.com/u/106938572037591757008/) on January 11, 2010 05:36:40_\n\nWhat steps will reproduce the problem? 1.created a object factory in the testNG.xml file \n<!DOCTYPE suite SYSTEM \" http://testng.org/testng-1.0.dtd \" >\n<suite name = \"EmpappSuite\" verbose = \"1\" \n        object-factory=\"org.powermock.modules.testng.PowerMockObjectFactory\">\n  <test name = \"daos\">\n     <classes>\n         <class name = \"com.DAOTest\"/>\n     </classes>\n  </test>\n</suite>\n2.and had a test class with a dataprovider\n\n@PrepareForTest(DBUtil.class)\npublic class DAOTest {\n\n```\nprivate EmpDAO empDAO;\n\n@Mock\nprivate CallableStatement cs;\n\n@Mock\nprivate DBUtil dbUtil;\n\n@BeforeMethod\npublic void setUp() throws Exception {\n    empDAO= new EmpDAO();\n    MockitoAnnotations.initMocks(this);\n}\n\n/* Custom one time tearDown() implementation after test method. */\n@AfterMethod\npublic void tearDownAfterTest() throws Exception {\n    empDAO = null;\n    cs = null;\n}\n\n@Test(dataProviderClass = EmpDaoDataProvider.class,\n        dataProvider = \"empDaorequest\")\npublic void testCheckoutStatus(\n        CheckoutStatusRequest request) throws Exception {\n    Assert.assertNotNull(request);  \n    some testmethod which will take the reqest\n}\n```\n\n} 3. What is the expected output? What do you see instead? when i run the testNG suite i am getting the following error\n\njava.lang.RuntimeException: Can't invoke method public void\ncom.DAOTest.testCheckoutStatus(the method name in that) throws\njava.lang.Exception on this instance of class com.DAOTest_$$_javassist_0\ndue to class mismatch\n    at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:629)\n    at org.testng.internal.Invoker.invokeMethod(Invoker.java:557)\n    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:711)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1013)\n    at\norg.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)\n    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)\n    at org.testng.TestRunner.runWorkers(TestRunner.java:908)\n    at org.testng.TestRunner.privateRun(TestRunner.java:617)\n    at org.testng.TestRunner.run(TestRunner.java:498)\n    at org.testng.SuiteRunner.runTest(SuiteRunner.java:329)\n    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:324)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:296)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:201)\n    at org.testng.TestNG.createAndRunSuiteRunners(TestNG.java:915)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:879)\n    at org.testng.TestNG.run(TestNG.java:787)\n    at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:75)\n    at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:127) What version of the product are you using? On what operating system? testNG 5.11, powermock-mockito-1.3.5, eclipse 3.5.1,javaassist 3.10.0\nthese are the jar and plugins i am using Please provide any additional information below. appreciate your help if you can help me out in this issue\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=224_\n", "url": "https://github.com/powermock/powermock/issues/244", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:21:02", "closed": "2015-07-23 19:21:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Expecting private methods should never invoke them in Mockito", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on January 09, 2010 15:59:04_\n\nA private method should of course never be invoked when expected.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=223_\n", "url": "https://github.com/powermock/powermock/issues/243", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 19:20:38", "closed": "2015-07-23 19:21:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MockRepository is not cleared between each test", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on December 08, 2009 11:12:14_\n\nIt seems like the state in the mock repository is not cleared between tests\nanymore. This must be fixed!\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=212_\n", "url": "https://github.com/powermock/powermock/issues/232", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 19:18:42", "closed": "2015-07-23 19:18:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "toString may cause NPE in AssignableFromFieldTypeMatcherStrategy", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on December 08, 2009 09:12:07_\n\nIf primitiveCounterpart is null\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=211_\n", "url": "https://github.com/powermock/powermock/issues/231", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:18:28", "closed": "2015-07-23 19:18:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "AssignableFromFieldTypeMatcherStrategy isAssignableFrom is backwards", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on December 08, 2009 09:11:06_\n\n@Override\n    public boolean matches(Field field) {\n        final Class<?> actualFieldType = field.getType();\n        return actualFieldType.isAssignableFrom(expectedFieldType)\n                || (primitiveCounterpart != null &&\nactualFieldType.isAssignableFrom(primitiveCounterpart));\n    }\n\nshould probably be\n\n @Override\n    public boolean matches(Field field) {\n        final Class<?> actualFieldType = field.getType();\n        return expectedFieldType.isAssignableFrom(actualFieldType)\n                || (primitiveCounterpart != null &&\nprimitiveCounterpart.isAssignableFrom(actualFieldType));\n    }\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=210_\n", "url": "https://github.com/powermock/powermock/issues/230", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:18:20", "closed": "2015-07-23 19:18:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "mockStatic throws java.lang.IllegalArgumentException: Cannot subclass final class ", "body": "_From [yogeshpa...@gmail.com](https://code.google.com/u/101766227837128921499/) on November 30, 2009 12:10:25_\n\nWhat steps will reproduce the problem? 1. Create a final class that has static methods\n2. in setup method of the test class, create a static mock using mockStatic\n3. run mvn test(assuming maven structure) What is the expected output? What do you see instead? Expected output : No test failures.\nActual output: \njava.lang.IllegalArgumentException: Cannot subclass final class...\n        at net.sf.cglib.proxy.Enhancer.generateClass(Enhancer.java:442)\n        at\nnet.sf.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25)\n        at\nnet.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:215)\n        at net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:373)\n        at net.sf.cglib.proxy.Enhancer.createClass(Enhancer.java:313)\n        at\norg.powermock.api.easymock.internal.signedsupport.SignedSupportingClassProxyFactory.createProxy(SignedSupportingClassProxyFactory.java:155)\n        at org.easymock.internal.MocksControl.createMock(MocksControl.java:40)\n        at\norg.powermock.api.easymock.PowerMock.doCreateMock(PowerMock.java:2155)\n        at org.powermock.api.easymock.PowerMock.doMock(PowerMock.java:2110)\n        at org.powermock.api.easymock.PowerMock.mockStatic(PowerMock.java:290)\nj What version of the product are you using? On what operating system? Powermock 1.3.1 Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=209_\n", "url": "https://github.com/powermock/powermock/issues/229", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:18:06", "closed": "2015-07-23 19:18:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Stackoverflow when mocking final toString methods", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 23, 2009 10:27:55_\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(StackOverflowTest.FinalToString.class)\npublic class StackOverflowTest {\n    @Test\n    public void testStackOverflow() throws Exception {\n        final FinalToString mock = createMock(FinalToString.class);\n        replayAll();\n        mock.toString();\n        verifyAll();\n    }\n\n```\nprivate static class FinalToString {\n    public final String toString() {\n        return \"test\";\n    }\n}\n```\n\n}\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=206_\n", "url": "https://github.com/powermock/powermock/issues/226", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:12:22", "closed": "2015-07-23 19:12:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Whitebox.getInternalstate must check for null", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 23, 2009 08:05:24_\n\nNow the NPE is thrown at getType, should be thrown before with a better\nerror message.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=205_\n", "url": "https://github.com/powermock/powermock/issues/225", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 19:12:13", "closed": "2015-07-23 19:12:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "with-easymock-dependencies assembly doesn't include easymock 2.5.2 ", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 10, 2009 19:19:09_\n\nwith-easymock-dependencies doesn't include easymock 2.5.2 for some reason\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=198_\n", "url": "https://github.com/powermock/powermock/issues/218", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:07:30", "closed": "2015-07-23 19:07:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Whitebox.invokeConstructor and newInstance should check for abstract type", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 04, 2009 23:00:17_\n\nNeither Whitebox.invokeConstructor or newInstance can instantiate abstract\nclasses. In the first case we could create a CgLib proxy around the class\n(if the constructor is public, otherwise a javassist proxy? The latter will\nbe hard though because powermock-reflect has no dependency on javassist. We\ncould also byte-code manipulate the constructor so that it becomes pulic.)\nusing the ProxyFramework.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=193_\n", "url": "https://github.com/powermock/powermock/issues/213", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 19:05:54", "closed": "2015-07-23 19:06:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "HashMap calls getClass on a mock when it's inserted some times", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 03, 2009 16:09:56_\n\nThis means that createMock indirectly calls getClass when it creates a mock\nbecause it adds the object to the MockRepository. It only happens some times..\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=190_\n", "url": "https://github.com/powermock/powermock/issues/210", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 19:04:45", "closed": "2015-07-23 19:05:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "findUniqueConstructor must filter PowerMock generated constructor", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 03, 2009 15:09:18_\n\nWhitebox#findUniqueConstructor must use filterPowerMockConstructor when\nlisting constructors.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=189_\n", "url": "https://github.com/powermock/powermock/issues/209", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:04:37", "closed": "2015-07-23 19:04:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock single jar file release must be split into two", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 02, 2009 15:24:36_\n\nThe single-jar-file must be split into one easymock and one mockito one.\nThis is cause the fully-qualified name of the extension API clash and thus\noverwrite the others.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=188_\n", "url": "https://github.com/powermock/powermock/issues/208", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 19:04:29", "closed": "2015-07-23 19:04:36", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Whitebox.invokeConstructor should support null", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 16, 2009 16:01:14_\n\nIt should be possible to supply a null value as parameter type to\ninvokeConstructor\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=186_\n", "url": "https://github.com/powermock/powermock/issues/206", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 19:04:08", "closed": "2016-03-03 11:34:41", "commits": {}, "ttf": 223.00027777777777, "commitsDetails": []}, {"title": "Powermock 1.3 cannot be compiled using JDK 1.5 anymore", "body": "_From [jarosla...@gmail.com](https://code.google.com/u/107510609587200122582/) on October 12, 2009 18:51:17_\n\nPowermock 1.2.5 could be compiled using JDK 1.5. But since 1.3 it is not\npossible anymore.\n\nPowermock 1.3 uses JDK 1.6 String.isEmpty() and on another place there is\nvery weird compilation error (probably a bug in javac).\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=184_\n", "url": "https://github.com/powermock/powermock/issues/204", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-23 19:03:52", "closed": "2015-07-23 19:03:59", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock cannot be built using Java5 and/or newer version of maven/javadoc plugin", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 12, 2009 14:07:45_\n\n[INFO] ------------------------------------------------------------------------\n[INFO] Building powermock\n[INFO]    task-segment: [clean, install]\n[INFO] ------------------------------------------------------------------------\n[INFO] [clean:clean {execution: default-clean}]\n[INFO] [site:attach-descriptor {execution: default-attach-descriptor}]\n[INFO] Preparing source:jar\n[WARNING] Removing: jar from forked lifecycle, to prevent recursive invocation.\n[INFO] No goals needed for project - skipping\n[INFO] [source:jar {execution: attach-sources}]\n-----------------------------------------------------\nthis realm =\napp0.child-container[org.apache.maven.plugins:maven-javadoc-plugin:2.6]\nurls[0] =\nfile:/C:/Users/me/.m2/repository/org/apache/maven/plugins/maven-javadoc-plugin/2.6/maven-javadoc-plugin-2.6.jar\nurls[1] =\nfile:/C:/Users/me/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.8/plexus-utils-1.5.8.jar\nurls[2] =\nfile:/C:/Users/me/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar\nurls[3] =\nfile:/C:/Users/me/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar\nurls[4] =\nfile:/C:/Users/me/.m2/repository/org/apache/maven/maven-archiver/2.3/maven-archiver-2.3.jar\nurls[5] =\nfile:/C:/Users/me/.m2/repository/org/codehaus/plexus/plexus-archiver/1.0-alpha-9/plexus-archiver-1.0-alpha-9.jar\nurls[6] =\nfile:/C:/Users/me/.m2/repository/org/apache/maven/shared/maven-invoker/2.0.9/maven-invoker-2.0.9.jar\nurls[7] =\nfile:/C:/Users/me/.m2/repository/org/apache/maven/doxia/doxia-site-renderer/1.0/doxia-site-renderer-1.0.jar\nurls[8] =\nfile:/C:/Users/me/.m2/repository/org/apache/maven/doxia/doxia-core/1.0/doxia-core-1.0.jar\nurls[9] =\nfile:/C:/Users/me/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-7/plexus-i18n-1.0-beta-7.jar\nurls[10] =\nfile:/C:/Users/me/.m2/repository/org/codehaus/plexus/plexus-velocity/1.1.7/plexus-velocity-1.1.7.jar\nurls[11] =\nfile:/C:/Users/me/.m2/repository/org/apache/velocity/velocity/1.5/velocity-1.5.jar\nurls[12] =\nfile:/C:/Users/me/.m2/repository/commons-collections/commons-collections/3.2/commons-collections-3.2.jar\nurls[13] =\nfile:/C:/Users/me/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar\nurls[14] = file:/C:/Users/me/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar\nurls[15] =\nfile:/C:/Users/me/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.0/doxia-decoration-model-1.0.jar\nurls[16] =\nfile:/C:/Users/me/.m2/repository/org/apache/maven/doxia/doxia-module-apt/1.0/doxia-module-apt-1.0.jar\nurls[17] =\nfile:/C:/Users/me/.m2/repository/org/apache/maven/doxia/doxia-module-fml/1.0/doxia-module-fml-1.0.jar\nurls[18] =\nfile:/C:/Users/me/.m2/repository/org/apache/maven/doxia/doxia-module-xdoc/1.0/doxia-module-xdoc-1.0.jar\nurls[19] =\nfile:/C:/Users/me/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.0/doxia-module-xhtml-1.0.jar\nurls[20] =\nfile:/C:/Users/me/.m2/repository/commons-codec/commons-codec/1.2/commons-codec-1.2.jar\nurls[21] =\nfile:/C:/Users/me/.m2/repository/com/thoughtworks/qdox/qdox/1.9.2/qdox-1.9.2.jar\nNumber of imports: 10\nimport: org.codehaus.classworlds.Entry@a6c57a42\nimport: org.codehaus.classworlds.Entry@12f43f3b\nimport: org.codehaus.classworlds.Entry@20025374\nimport: org.codehaus.classworlds.Entry@f8e44ca4\nimport: org.codehaus.classworlds.Entry@92758522\nimport: org.codehaus.classworlds.Entry@ebf2705b\nimport: org.codehaus.classworlds.Entry@bb25e54\nimport: org.codehaus.classworlds.Entry@bece5185\nimport: org.codehaus.classworlds.Entry@3fee8e37\nimport: org.codehaus.classworlds.Entry@3fee19d8\n\nthis realm = plexus.core\nurls[0] =\nfile:/C:/kits/java/maven/apache-maven-2.2.1/bin/../lib/maven-2.2.1-uber.jar\nNumber of imports: 10\nimport: org.codehaus.classworlds.Entry@a6c57a42\nimport: org.codehaus.classworlds.Entry@12f43f3b\nimport: org.codehaus.classworlds.Entry@20025374\nimport: org.codehaus.classworlds.Entry@f8e44ca4\nimport: org.codehaus.classworlds.Entry@92758522\nimport: org.codehaus.classworlds.Entry@ebf2705b\nimport: org.codehaus.classworlds.Entry@bb25e54\nimport: org.codehaus.classworlds.Entry@bece5185\nimport: org.codehaus.classworlds.Entry@3fee8e37\nimport: org.codehaus.classworlds.Entry@3fee19d8\n-----------------------------------------------------\n[INFO] ------------------------------------------------------------------------\n[ERROR] BUILD ERROR\n[INFO] ------------------------------------------------------------------------\n[INFO] Internal error in the plugin manager executing goal\n'org.apache.maven.plugins:maven-javadoc-plugin:2.6:jar': Unable to load the\nmojo\n'org.apache.mave\nn.plugins:maven-javadoc-plugin:2.6:jar' in the plugin\n'org.apache.maven.plugins:maven-javadoc-plugin'. A required class is missing:\norg/codehaus/plexus/comp\nonents/io/fileselectors/FileInfo\n[INFO] ------------------------------------------------------------------------\n[INFO] For more information, run Maven with the -e switch\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 13 seconds\n[INFO] Finished at: Mon Oct 12 14:10:47 EEST 2009\n[INFO] Final Memory: 21M/47M\n[INFO] ------------------------------------------------------------------------\n\nI don't really understand why.. It also happens with maven 2.1.1\n\nAfter commenting out maven-javadoc-plugin:\n\npowermock\\reflect\\src\\test\\java\\org\\powermock\\reflect\\WhiteBoxTest.java:186:\nunexpected type\nfound   : java.lang.Object\nrequired: reference\n        assertTrue(Whitebox.invokeMethod(new\nClassWithUniquePrivateMethods(), 8.2d,\n8.3d, null) instanceof Object);\n\nTrying again, without tests:\n\npowermock\\tests\\utils\\src\\main\\java\\samples\\expectnew\\ExpectNewOfFinalSystemClassDemo.java:22:\ncannot find symbol\nsymbol  : method isEmpty()\nlocation: class java.lang.String\n        return myString.isEmpty();\n\nAfter fixing this, I get:\npowermock\\modules\\module-impl\\junit4-legacy\\src\\main\\java\\org\\powermock\\modules\\junit4\\legacy\\internal\\impl\\testcas\neworkaround\\PowerMockJUnit4LegacyTestMethodRunner.java:86: java.lang.Object\ncannot be\ndereferenced\n                if\n(TestCase.class.isAssignableFrom(Whitebox.getInternalState(this,\n\"fTest\").getClass())) {\n\nIt doesn't help to skip javadoc generation.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=181_\n", "url": "https://github.com/powermock/powermock/issues/201", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:03:16", "closed": "2016-03-03 11:08:28", "commits": {}, "ttf": 223.00027777777777, "commitsDetails": []}, {"title": "WhiteBox.setInternalState() does not always work when the argument is created with @Mock", "body": "_From [mat...@gmail.com](https://code.google.com/u/105030434826960510651/) on October 08, 2009 13:57:38_\n\nWhat steps will reproduce the problem? WhiteBox.setInternalState(Object, Object) does not work when the second\nargument is created by using the @Mock annotation. However,\nWhiteBox.setInternalState(Object, String, Object) works.\n\n########################################################################### What is the expected output? What do you see instead? The test should pass. \n\norg.powermock.reflect.exceptions.FieldNotFoundException: No field\nassignable to \"java.lang.Object\" could be found in the class hierarchy of\nSomeClass.\n\n########################################################################### What version of the product are you using? On what operating system? PowerMock 1.2.5\n\nUbuntu\n\n########################################################################### Please provide any additional information below. 5 files have been attached:\n- InternalInterface.java is an interface with a method\n- SomeClass.java is a class that has a private InternalInterface member\n- FirstPassingTest.java is a junit test that creates an instance of\n  InternalInterface.java using the Mockito.mock() method and uses\n  setInternalState(Object, Object)\n- SecondPassingTest.java is a junit test that creates an instance of \n  InternalInterface.java using the @Mock annotation and uses\n  setInternalState(Object, String, Object)\n- FailingTest.java is a junit test that creates an instance of\n  InternalInterface.java using the @Mock annotation and uses\n  setInternalState(Object, Object)\n\n**Attachment:** [InternalInterface.java SomeClass.java FirstPassingTest.java SecondPassingTest.java FailingTest.java](http://code.google.com/p/powermock/issues/detail?id=180)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=180_\n", "url": "https://github.com/powermock/powermock/issues/200", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:02:56", "closed": "2015-07-23 19:03:14", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Tests are not ran when JUnit 4.7 rule is used", "body": "_From [andrei.i...@gmail.com](https://code.google.com/u/102678131244317362177/) on October 08, 2009 10:54:32_\n\nSteps to reproduce the problem:\n1. Create a JUnit test with a @Rule\n2. Run the test and observe it executes(the test method only has contains a\nSystem.out.println(\"test\") statement\n3. add @RunWith(PowerMockRunner.class) and rerun test\n\nThe expected output is `test`, but instead the console remains blank\n\nI'm using powermock-1.3 full, junit-4.7 on Win Vista\n\nLooking at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl,\non line 58, rule.apply() is called but the result is unused.\n\nSuggested solution:\n\nStatement statement = rule.apply(new Statement() {\n    @Override\n    public void evaluate() throws Throwable {\n            executeTestInSuper(method, testInstance, test);\n    }\n}, new FrameworkMethod(method), testInstance);\nstatement.evaluate();\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=179_\n", "url": "https://github.com/powermock/powermock/issues/199", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 19:01:39", "closed": "2015-07-23 19:02:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fix release project ", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 06, 2009 21:24:41_\n\nFix so that the with-easymock-dependencies with-mockito-dependencies only\ninclude the respective dependencies\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=177_\n", "url": "https://github.com/powermock/powermock/issues/197", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:01:12", "closed": "2015-07-23 19:01:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Investigate if we can delegate getClass() to real method", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 06, 2009 14:22:35_\n\nPerhaps using DONT_MOCK_NEXT_CALL\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=176_\n", "url": "https://github.com/powermock/powermock/issues/196", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-23 19:01:03", "closed": "2015-07-23 19:01:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Private inner interface in test class doesn't work", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 06, 2009 13:57:14_\n\nfix it\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=175_\n", "url": "https://github.com/powermock/powermock/issues/195", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 19:00:44", "closed": "2015-07-23 19:01:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock JUnit Runner fails when test class extends TestCase and has an non-zero argument constructor", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 04, 2009 16:56:39_\n\nApparently this works in standard JUnit.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=174_\n", "url": "https://github.com/powermock/powermock/issues/194", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 19:00:36", "closed": "2015-07-23 19:00:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Verification of static private methods must work in Mockito", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 22, 2009 20:44:30_\n\nInvoked too many times\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=171_\n", "url": "https://github.com/powermock/powermock/issues/191", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 18:59:53", "closed": "2015-07-23 19:00:06", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mocking instance methods in final system classes for classes not having a default constructor can fail", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 21, 2009 13:48:10_\n\nThis is because hashCode (and potentially equals as well) may return null\ndue to an uninitialized value.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=170_\n", "url": "https://github.com/powermock/powermock/issues/190", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 18:59:40", "closed": "2015-07-23 18:59:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "@BeforeMethod doesn't work with PowerMock and TestNG", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 11, 2009 20:08:34_\n\nprobably due to proxying\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=165_\n", "url": "https://github.com/powermock/powermock/issues/185", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 18:58:32", "closed": "2015-07-23 18:58:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ExpectNew probably fails for varargs invocation when var args is not the first parameter", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 11, 2009 16:04:41_\n\nfix this\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=163_\n", "url": "https://github.com/powermock/powermock/issues/183", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:45:07", "closed": "2015-07-24 14:11:07", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "State cleanup in TestNG runner", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 11, 2009 12:40:22_\n\nWe need to cleanup MockRepository state after each test method in the\ntestng runner\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=159_\n", "url": "https://github.com/powermock/powermock/issues/179", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 13:44:30", "closed": "2015-07-23 13:44:47", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "replayAll/verifyAll should only replay/verify object that hasn't been replayed/verified before.", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 07, 2009 15:28:15_\n\nI.e. this should work:\n\nreplay(myMock); // Replays only myMock\nreplayAll(); // Replays all other mocks excluding myMock\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=151_\n", "url": "https://github.com/powermock/powermock/issues/171", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 13:41:33", "closed": "2015-07-23 13:41:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMockIgnorePackagesExtractorImpl should get ignored values in whole hierarchy", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 07, 2009 10:06:38_\n\n..and not just the actual test class.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=150_\n", "url": "https://github.com/powermock/powermock/issues/170", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:41:25", "closed": "2015-07-23 13:41:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "WhiteboxImpl.getField(Class,String) doesn't check for null returned from Class.getSuperclass(), which will happen when thisType is an interface.", "body": "_From [benchate...@gmail.com](https://code.google.com/u/108211303295651963864/) on September 05, 2009 01:04:55_\n\nWhat steps will reproduce the problem? 1. Run the attached WhiteBoxGetFieldTest against the revision 916 or older of PowerMock trunk\n\nWhiteboxImpl.getField(Class,String) doesn't check for null returned from Class.getSuperclass(), which \nwill happen when thisType is an interface.\n\nAs the class hierarchy for the given Class is ascended, if the field is not found in the parent \nclass, the interfaces are checked before the grandparent class. The problem is that the \ngetSuperclass() method will always return null for the Class representing the interface. The current \nimplementation of WhiteboxImpl blindly adds this null to the examine LinkedList. What is the expected output? What do you see instead? I expect a Field to be returned or a FieldNotFoundException to be thrown. Instead I get a \nNullPointerException:\n\njava.lang.NullPointerException\n    at org.powermock.reflect.internal.WhiteboxImpl.getField(WhiteboxImpl.java:203)\n    at org.powermock.reflect.WhiteBoxGetFieldTest.testGetField(WhiteBoxGetFieldTest.java:38)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)\n    at org.junit.internal.runners.TestMethodRunner.executeMethodBody(TestMethodRunner.java:99)\n    at org.junit.internal.runners.TestMethodRunner.runUnprotected(TestMethodRunner.java:81)\n    at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)\n    at org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)\n    at org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)\n    at \norg.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)\n    at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)\n    at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)\n    at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)\n    at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)\n    at \norg.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196) What version of the product are you using? On what operating system? This issue was found in PowerMock 1.2.5 and has been verified to also be in trunk ( revision 916 ). See \nattached WhiteBoxGetFieldTest.java for a demonstration. I have tested this with JDK 1.5.0_07 and \n1.6.0.013 running on Windows XP SP3. Please provide any additional information below. See the attached WhiteboxImpl_r916.patch file for an easy fix.\n\n**Attachment:** [WhiteboxImpl_r916.patch WhiteBoxGetFieldTest.java](http://code.google.com/p/powermock/issues/detail?id=149)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=149_\n", "url": "https://github.com/powermock/powermock/issues/169", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:41:05", "closed": "2015-07-23 13:41:24", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Depecrate Mock annotation and make a new one in respective extension API", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 04, 2009 08:20:13_\n\nPowerMockito should no longer support partial mocking from annotations and\nthus this should be removed from the annotation support. To do that we must\ndepecrate the old Mock annotation and create two new ones, one in each\nextension API. In EasyMock , perhaps we should create a MockPartial annotation to differentiate between standard and partial mocking? (May be\noverkill since then we need 3 more annotations for nice and strict mocks as\nwell)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=148_\n", "url": "https://github.com/powermock/powermock/issues/168", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 13:40:57", "closed": "2015-07-23 13:41:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Verification of spied methods fails in PowerMockito", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 04, 2009 08:16:26_\n\nSee description in code\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=147_\n", "url": "https://github.com/powermock/powermock/issues/167", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 13:40:49", "closed": "2015-07-23 13:40:56", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Whitebox.getMethod doesn't Arrays.toString argument types", "body": "_From [cemca...@gmail.com](https://code.google.com/u/111469112600083617691/) on September 03, 2009 23:45:09_\n\nWhat steps will reproduce the problem? 1. Create a static method:\npublic class Utils {\n    public static String foo(ComplexObject bar) {\n        return \"\";\n    }\n}\n1. Call Whitebox.getMethod with wrong arguments for this static method.\n   Whitebox.getMethod(Utils.class, \"foo\", String.class);\n2. Whitebox will fail to find the method and throw an Exception message \n   like:\n   org.powermock.reflect.exceptions.MethodNotFoundException: No method found \n   with name 'foo' with argument types: [ [Ljava.lang.Class; ] in class Utils What is the expected output? What do you see instead? The error message should have the class names as a list instead of just the \n   toString of the vararg argument types. For example should be more along the \n   lines of:\n\norg.powermock.reflect.exceptions.MethodNotFoundException: No method fund \nwith name 'foo' with argument types: [ String ] in class Utils What version of the product are you using? On what operating system? 1.2.5 Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=146_\n", "url": "https://github.com/powermock/powermock/issues/166", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 13:40:16", "closed": "2015-07-23 13:40:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Private method mocking with Mockito", "body": "_From [henrik.a...@gmail.com](https://code.google.com/u/104808011083971579598/) on September 02, 2009 12:50:17_\n\nHi.\n\nIs support for private method mocking planned for PowerMock's Mockito\nimplementation?\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=145_\n", "url": "https://github.com/powermock/powermock/issues/165", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:40:02", "closed": "2015-07-23 13:40:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Exception when stubbing static: GloballyConfiguredAnswer cannot be cast to org.mockito.ReturnValues", "body": "_From [grant.va...@googlemail.com](https://code.google.com/u/102616953995341032579/) on September 02, 2009 11:29:50_\n\nWhat steps will reproduce the problem? 1. Attempting to stub a getInstance() method of a factory to return a stub.\n2. Using Junit 4.4, execute the test.\n3. Issue starts from: PowerMockito.mockStatic(InvokerFactory.class); What is the expected output? What do you see instead? I expect a mock to created and usuable in the later calls:\n\n```\n    Mockito.when(InvokerFactory.getInvoker()).thenReturn(\"1\"); \n    InvokerFactory.getInvoker(); What version of the product are you using? On what operating system? - Windows XP (SP1)\n```\n- PowerMock 1.2.5.\n- Junit 4.4\n- Eclipse 3.4.2. Please provide any additional information below. ====\n\npublic class InvokerFactory\n{\n    private InvokerFactory(){}\n\n```\npublic static String getInvoker()\n{\n    return \"ret\";\n}\n```\n\n}\n# \n\n@RunWith( PowerMockRunner.class)\n@PrepareForTest({InvokerFactory.class})\npublic class FactorTest extends TestCase\n{\n    public void testd() throws ServiceException\n    {  \n        PowerMockito.mockStatic(InvokerFactory.class); // <-- Error\n        Mockito.when(InvokerFactory.getInvoker()).thenReturn(\"1\"); \n        InvokerFactory.getInvoker();\n    }\n}\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=144_\n", "url": "https://github.com/powermock/powermock/issues/164", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:39:32", "closed": "2015-07-23 13:40:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "TestCase is prepared for test automatically if its fully qualified name starts with the same fully qualified name as a class that's prepared for test", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on August 21, 2009 08:31:53_\n\nUsing PowerMock 1.2.5, try running the following three classes in a\nJUnit launch:\n\n=== MockTest.java ===\npackage com.dummy;\n\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.easymock.PowerMock;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\nimport org.powermock.reflect.Whitebox;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({Mock.class})\n\npublic class MockTest {\n\n   @Test\n   public void test() {\n       PowerMock.suppressConstructor(Mock.class);\n       Mock tested = new Mock();\n       Integer o = (Integer)Whitebox.getInternalState(tested,\n\"member\");\n       assertTrue(o == 23);\n   }\n}\n\n=== TestMock.java ===\npackage com.dummy;\n\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.api.easymock.PowerMock;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\nimport org.powermock.reflect.Whitebox;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({Mock.class})\n\npublic class TestMock {\n\n   @Test\n   public void test() {\n       PowerMock.suppressConstructor(Mock.class);\n       Mock tested = new Mock();\n       Integer o = (Integer)Whitebox.getInternalState(tested,\n\"member\");\n       assertTrue(o == 23);\n   }\n}\n\n=== Mock.java ===\npackage com.dummy;\n\npublic class Mock {\n   public int member = 23;\n}\n\n=== END ===\n\nI find that TestMock passes, but MockTest fails. If I rename MockTest\ninto something NOT starting with the string \"Mock\", e.g. MTest, both\nwill pass. What is going on here?\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=140_\n", "url": "https://github.com/powermock/powermock/issues/160", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 13:37:10", "closed": "2015-07-23 13:37:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "unable to resolve java.lang.ClassFormatError", "body": "_From [vichhu...@yahoo.com](https://code.google.com/u/104162302400230282206/) on August 17, 2009 17:12:38_\n\nI am using 1.2.5 version of power mock\n\nThe operating system is windows.\n\nI am getting the below error when trying to do the build, for one of the \nmock file written using power mock frame work.\n\nI am able to run the test in eclipse but facing problem in the build.\n\nPlease let me know how to proceed as whole build is stuck because of this.\n\nException in thread \"main\" java.lang.ClassFormatError: Invalid this class \nindex 29708 in constant pool in class file com/network\n\n```\n[junit]      at java.lang.ClassLoader.defineClass1(Native Method)\n\n[junit]      at java.lang.ClassLoader.defineClass(ClassLoader.java:620)\n\n[junit]      at java.lang.ClassLoader.defineClass(ClassLoader.java:465)\n\n[junit]      at \n```\n\norg.powermock.core.classloader.MockClassLoader.loadMockClass\n(MockClassLoader.java:201)\n\n```\n[junit]      at \n```\n\norg.powermock.core.classloader.MockClassLoader.loadModifiedClass\n(MockClassLoader.java:146)\n\n```\n[junit]      at \n```\n\norg.powermock.core.classloader.DeferSupportingClassLoader.loadClass\n(DeferSupportingClassLoader.java:57)\n\n```\n[junit]      at java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n\n[junit]      at java.lang.ClassLoader.loadClassInternal\n```\n\n(ClassLoader.java:319)\n\n```\n[junit]      at java.lang.Class.forName0(Native Method)\n\n[junit]      at java.lang.Class.forName(Class.java:242)\n\n[junit]      at \n```\n\nsun.reflect.generics.factory.CoreReflectionFactory.makeNamedType\n(CoreReflectionFactory.java:95)\n\n```\n[junit]      at \n```\n\nsun.reflect.generics.visitor.Reifier.visitClassTypeSignature\n(Reifier.java:107)\n\n```\n[junit]      at sun.reflect.generics.tree.ClassTypeSignature.accept\n```\n\n(ClassTypeSignature.java:31)\n\n```\n[junit]      at sun.reflect.annotation.AnnotationParser.parseSig\n```\n\n(AnnotationParser.java:370)\n\n```\n[junit]      at sun.reflect.annotation.AnnotationParser.parseClassValue\n```\n\n(AnnotationParser.java:351)\n\n```\n[junit]      at sun.reflect.annotation.AnnotationParser.parseClassArray\n```\n\n(AnnotationParser.java:653)\n\n```\n[junit]      at sun.reflect.annotation.AnnotationParser.parseArray\n```\n\n(AnnotationParser.java:460)\n\n```\n[junit]      at \n```\n\nsun.reflect.annotation.AnnotationParser.parseMemberValue\n(AnnotationParser.java:286)\n\n```\n[junit]      at sun.reflect.annotation.AnnotationParser.parseAnnotation\n```\n\n(AnnotationParser.java:222)\n\n```\n[junit]      at \n```\n\nsun.reflect.annotation.AnnotationParser.parseAnnotations2\n(AnnotationParser.java:69)\n\n```\n[junit]      at \n```\n\nsun.reflect.annotation.AnnotationParser.parseAnnotations\n(AnnotationParser.java:52)\n\n```\n[junit]      at java.lang.Class.initAnnotationsIfNecessary\n```\n\n(Class.java:3031)\n\n```\n[junit]      at java.lang.Class.getAnnotations(Class.java:3011)\n\n[junit]      at \n```\n\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateIm\npl.classAnnotations(PowerMockJUnit44RunnerDelegateImpl.java:173)\n\n```\n[junit]      at \n```\n\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateIm\npl.getDescription(PowerMockJUnit44RunnerDelegateImpl.java:165)\n\n```\n[junit]      at \n```\n\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateIm\npl.run(PowerMockJUnit44RunnerDelegateImpl.java:128)\n\n```\n[junit]      at \n```\n\norg.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImp\nl.run(JUnit4TestSuiteChunkerImpl.java:112)\n\n```\n[junit]      at \n```\n\norg.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRu\nnner.run(AbstractCommonPowerMockRunner.java:44)\n\n```\n[junit]      at junit.framework.JUnit4TestAdapter.run\n```\n\n(JUnit4TestAdapter.java:36)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=139_\n", "url": "https://github.com/powermock/powermock/issues/159", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:36:55", "closed": "2015-07-23 13:37:08", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "How to do: Mocking java.io exception", "body": "_From [rohit.c.joshi@gmail.com](https://code.google.com/u/rohit.c.joshi@gmail.com/) on July 31, 2009 06:02:36_\n\nI am trying to mock java.io.FileNotFoundException and java.io.IOException \nin the below function.\n\nclass Util {\npublic static String readFileIntoBuffer(final String filename) {\n        StringBuffer buffer = new StringBuffer();\n        BufferedReader in = null;\n        FileReader f = null;\n        try {\n            f = new FileReader(filename);\n            in = new BufferedReader(f);\n\n```\n        String str;\n        while((str = in.readLine()) != null) {\n            buffer.append(str);\n        }\n        f.close();\n        f= null;\n        in.close();\n        in = null;\n    }catch (FileNotFoundException e)\n    {\n        log.severe(\"FileNotFoundException:Failed to read file:\" +\n```\n\nfilename );\n\n```\n    }\n    catch (IOException e)\n    {\n        log.severe(\"IOException:Failed to read file:\" + filename );\n\n    }\n    finally\n    {\n        try\n        {\n            if(f != null)\n                f.close();\n            if(in != null)\n                in.close();\n        }\n        catch (Exception ex)\n        {\n        }\n\n\n    }\n    return buffer.toString();\n}\n```\n\n}\n\nUnit test case:\n@Test\n    public void testreadFileIntoBuffer_FileNotFoundException() throws\nException {\n        System.out.println(\"getreadFileIntoBuffer_FileNotFoundException\");\n        FileReader f = PowerMock.createMock(FileReader.class);\n        PowerMock.expectNew(FileReader.class, Config.MAF_MSG).andThrow(new\njava.io.FileNotFoundException(\"FileNotFoundException\"));\n        PowerMock.replay(f, FileReader.class);\n        PowerMock.expectNew(BufferedReader.class, f).andThrow(new\njava.io.FileNotFoundException(\"FileNotFoundException\")); \n        PowerMock.replay(BufferedReader.class);\n\n```\n    String result =\n            Util.readFileIntoBuffer(Config.MAF_MSG);\n    assertEquals(\"\", result);\n    PowerMock.verify(FileReader.class);\n}\n```\n\nWhat I am missing?\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=136_\n", "url": "https://github.com/powermock/powermock/issues/156", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:36:08", "closed": "2015-07-23 13:36:14", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Error when using MockPolicy more than once by the same test", "body": "_From [mat...@gmail.com](https://code.google.com/u/105030434826960510651/) on July 06, 2009 22:18:51_\n\nWhat steps will reproduce the problem? Class:\npublic class Some {\n    private static final Logger logger = LoggerFactory.getLogger(Some.class);\n\n```\npublic void test() {\n    if (logger.isDebugEnabled()) {\n        logger.debug(\"test\");\n    }\n}\n```\n\n}\n\nTestClass:\n@RunWith(PowerMockRunner.class)\n@MockPolicy(Slf4jMockPolicy.class)\n@PrepareForTest(Some.class)\npublic class SomeTest {\n\n```\n@Test\npublic void testTest() {\n    Some some = new Some();\n    some.test();\n    some.test();\n}\n```\n\n} What is the expected output? What do you see instead? The test should pass.\nThe test fails:\n    java.lang.IllegalStateException: missing behavior definition for the\npreceeding method call isDebugEnabled() What version of the product are you using? On what operating system? 1.2.5, Windows Vista Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=129_\n", "url": "https://github.com/powermock/powermock/issues/149", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:31:57", "closed": "2015-07-23 13:32:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Loading of apache.commons.logging.Log by MockClassLoader leads to 2 version of Log in classpath when tested code uses commons-logging", "body": "_From [mohammad...@gmail.com](https://code.google.com/u/103784651540559928080/) on June 30, 2009 11:26:37_\n\nWhat steps will reproduce the problem? 1. Create a class-to-be-tested which uses commons-logging\n2. Run a JUnit test class, testing class-to-be-tested with PowerMock \nrunner. What is the expected output? What do you see instead? Java.lang.ExceptionInitializerError error thrown.\n... caused by LogConfigurationException What version of the product are you using? On what operating system? version:1.2.5\nOS: Windows XP Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=123_\n", "url": "https://github.com/powermock/powermock/issues/143", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:30:46", "closed": "2015-07-23 13:30:58", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "When PrepareForTest on method is placed in method,powermock throws exception:Internal error: Failed to find the delgator index.", "body": "_From [netlogic...@gmail.com](https://code.google.com/u/103009835096591305164/) on June 18, 2009 09:00:34_\n\nMy test case:\n@PowerMockIgnore(\"com.alcatel.omc.fwk.server.status\")\npublic class DbPlugAccessMockTest extends TestBase {\n    @SuppressWarnings(\"unchecked\")\n    public static TestSuite suite() throws Exception {\n        return new PowerMockSuite(DbPlugAccessMockTest.class);\n    }\n\n```\npublic DbPlugAccessMockTest(String name) {\n    super(name);\n}\n\n@PrepareForTest( { LTEPlugIn.class })\npublic void testInitTableOfflineMode() {\n    Whitebox\n            .setInternalState(LTEPlugIn.class, \"MUSE_DB_OFFLINE_MODE\", \n```\n\ntrue);\n        // In this case, we don't care its arguments.\n        FwkStatusList actualStatus = DbPlugAccess.initTable(null);\n        assertTrue(actualStatus.check());\n    }\n    @PrepareForTest( { DbAccess.class})\n    public void testInitTableConnNull() throws Exception {\n        mockStatic(DbAccess.class);\n        // expect to return null so that null branch can be executed.\n        expect(DbAccess.getConnection()).andReturn(null);\n        DbAccess.releaseConnection(null);\n\n```\n    replay(DbAccess.class);\n\n    // In this case, we don't care its arguments.\n    FwkStatusList actual = DbPlugAccess.initTable(null);\n    //assertNull(DbAccess.getConnection());\n\n    verify(DbAccess.class);\n\n    assertTrue(actual.contains(FwkStatus.database_problem()));\n}\n@PrepareForTest( { DbAccess.class})\npublic void testInitTable() throws Exception {\n    mockStaticNice(DbAccess.class);\n    final String sqlscript = \"sqlstatement1;sqlstatment2\";\n    final Connection conn = createNiceMock(Connection.class);\n    final Statement stat = createNiceMock(Statement.class);\n    expect(DbAccess.getConnection()).andReturn(conn);\n    expect(conn.createStatement()).andReturn(stat);\n\n    replayAll();\n\n    // In this case, we don't care its arguments.\n    FwkStatusList actual = DbPlugAccess.initTable(sqlscript);\n    //assertNull(DbAccess.getConnection());\n\n    verifyAll();\n\n    assertTrue(actual.check());\n}\n\npublic static void main(String[] args) throws Exception {\n    TestRunner.run(suite());\n}\n```\n\n}\n\nIt works with junit.textui.TestRunner,but don't work with eclipse test \nrunner. Exception as below:\n\njava.lang.RuntimeException: Internal error: Failed to find the delgator \nindex.\n    at \norg.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl.getDelegatorInd\nex(AbstractTestSuiteChunkerImpl.java:392)\n    at \norg.powermock.modules.junit3.internal.impl.JUnit3TestSuiteChunkerImpl.testA\nt(JUnit3TestSuiteChunkerImpl.java:199)\n    at org.powermock.modules.junit3.PowerMockSuite.testAt\n(PowerMockSuite.java:97)\n    at \norg.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.sendTree\n(JUnit3TestReference.java:142)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.sendTrees\n(RemoteTestRunner.java:469)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests\n(RemoteTestRunner.java:457)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests\n(RemoteTestRunner.java:673)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run\n(RemoteTestRunner.java:386)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main\n(RemoteTestRunner.java:196)\n\nAfter investigation,I find the class \norg.powermock.tests.utils.impl.AbstractTestSuiteChunkerImpl seems have \nsome problems.I modify its method called initEntries,then it works.\n\nThe attchment is the modified class.\n\nbtw: I use powermock 1.2.5\n\n**Attachment:** [AbstractTestSuiteChunkerImpl.java](http://code.google.com/p/powermock/issues/detail?id=121)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=121_\n", "url": "https://github.com/powermock/powermock/issues/141", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:29:33", "closed": "2016-03-03 11:59:35", "commits": {}, "ttf": 223.00027777777777, "commitsDetails": []}, {"title": "Invoke on Varargs Constructor Taking Wrong Argument as the Varags", "body": "_From [cemca...@gmail.com](https://code.google.com/u/111469112600083617691/) on June 13, 2009 01:02:26_\n\nWhen you have a constructor with multiple arguments AND varargs, then \nNewInvocationControlImpl assumes the first argument is the varargs. It should pick \nthe last argument since varags argument can only be the last in the list of \narguments. The code only works if the constructor has only one argument which is \nvarargs.\n\nHere is the snippet that causes this \n(org.powermock.api.easymock.internal.invocationcontrol.NewInvocationControlImpl.java\n\u00a0line 41 - 49)\n<snip>\npublic Object invoke(Class<?> type, Object[] args, Class<?>[] sig) throws Exception \n{\n    Constructor<?> constructor = WhiteboxImpl.getConstructor(type, sig);\n    if (constructor.isVarArgs()) {\n    /*\n     \\* Get the first argument because this contains the actual varargs\n     \\* arguments.\n     */\n    args = (Object[]) args[0];\n    }\n</snip>\n\nFix should be to replace args = (Object) args[0]; with\n\n```\nargs = (Object[]) args[args.length - 1]; // varargs is the last argument What steps will reproduce the problem? 1. Assume a class Bom like this:\n```\n\npublic class Bom {\n    private String firstArg;\n    private String[] args;\n\n```\npublic Bom(String firstArg, String... args) {\n    firstArg = firstArg;\n    args = args;\n}\n```\n\n}\n1. And a Test class like this:\n   import org.junit.Test;\n   import org.junit.runner.RunWith;\n   import org.powermock.api.easymock.PowerMock;\n   import org.powermock.core.classloader.annotations.PrepareForTest;\n   import org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest(Bom.class)\npublic class BomTest {\n    @Test\n    public void test() throws Exception {\n        PowerMock.createMockAndExpectNew(Bom.class, \"abc\", \"xyz\", \"123\");\n        PowerMock.replayAll();\n\n```\n    Bom b = new Bom(\"abc\", \"xyz\", \"123\");\n\n    PowerMock.verifyAll();\n}\n```\n\n}\n1. Then running this test will result in the following stacktrace:\n   java.lang.ClassCastException: java.lang.String cannot be cast to [Ljava.lang.Object;\n   at \n   org.powermock.api.easymock.internal.invocationcontrol.NewInvocationControlImpl.invok\n   e(NewInvocationControlImpl.java:48)\n   at org.powermock.core.MockGateway.newInstanceCall(MockGateway.java:107)\n   at rf.actors.BomTest.test(BomTest.java:19)\n   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n   at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n   at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n   at java.lang.reflect.Method.invoke(Unknown Source)\n   at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)\n   at \n   org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$2.runT\n   estMethod(PowerMockJUnit44RunnerDelegateImpl.java:222)\n   at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)\n   at \n   org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.ja\n   va:87)\n   at \n   org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$2.runB\n   eforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:212)\n   at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)\n   at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)\n   at \n   org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invoke\n   TestMethod(PowerMockJUnit44RunnerDelegateImpl.java:205)\n   at \n   org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMet\n   hods(PowerMockJUnit44RunnerDelegateImpl.java:159)\n   at \n   org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(\n   PowerMockJUnit44RunnerDelegateImpl.java:133)\n   at \n   org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)\n   at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)\n   at \n   org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(Po\n   werMockJUnit44RunnerDelegateImpl.java:131)\n   at \n   org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUn\n   it4TestSuiteChunkerImpl.java:112)\n   at \n   org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(\n   AbstractCommonPowerMockRunner.java:44)\n   at \n   org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.j\n   ava:45)\n   at \n   org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n   at \n   org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.jav\n   a:460)\n   at \n   org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.jav\n   a:673)\n   at \n   org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386\n   )\n   at \n   org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:19\n   6) What is the expected output? What do you see instead? What version of the product are you using? On what operating system? 1.2.5 on Java 1.6.0_13 on Windows. Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=118_\n", "url": "https://github.com/powermock/powermock/issues/138", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:28:52", "closed": "2015-07-23 13:29:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fixed the suppress unwanted behavior page", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on June 12, 2009 09:48:43_\n\nWe need to replace \"child\" with \"parent\", there's been a mix-up.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=117_\n", "url": "https://github.com/powermock/powermock/issues/137", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 13:28:39", "closed": "2015-07-23 13:28:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "expectPrivate invoking the actual private method rather than mocking it", "body": "_From [rani....@gmail.com](https://code.google.com/u/113854133344621030890/) on June 11, 2009 12:32:19_\n\nIf  i test a public method that contains some private methods in it, then \nwhen i try to mock the private methods using expectPrivate, the private\nmethod gets invoked rather than mocking it. What is the expected output? What do you see instead? on mocking should not go to the method that is mocked but simualate it. What version of the product are you using? On what operating system? 1.2.6 Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=116_\n", "url": "https://github.com/powermock/powermock/issues/136", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:28:24", "closed": "2015-07-23 13:28:36", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "When mocking a static method in a class, this method is actually executed, this is not handy.", "body": "_From [stef.hey...@gmail.com](https://code.google.com/u/116099821229663453340/) on June 03, 2009 15:21:38_\n\nWhat steps will reproduce the problem? When running the \" https://code.google.com/p/powermock/wiki/MockStatic \" MockStatic example, at line 52:\nexpect(IdGenerator.generateNewId()).andReturn(expectedId);\n\nthe problem is that this method generateNewId() is really executed (which\nis logical) but if in this method some other code is present which needs\nsome environment setup (like hibernate) , this will fail.\n\nAny workaround for this?\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=114_\n", "url": "https://github.com/powermock/powermock/issues/134", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:27:51", "closed": "2015-07-23 13:28:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "org.hibernate.ejb.HibernatePersistence cannot be cast to javax.persistence.spi.PersistenceProvider", "body": "_From [stef.hey...@gmail.com](https://code.google.com/u/116099821229663453340/) on May 28, 2009 17:41:16_\n\nThe following JUnit testcode:\n\npackage org.test;\nimport javax.persistence.EntityManagerFactory;\nimport javax.persistence.Persistence;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\n@RunWith(PowerMockRunner.class)\n@PrepareForTest({\n    MyTest.class\n    })\npublic class MyTest {\n\n```\n@Test\npublic void testOK() throws Exception {\n\n    EntityManagerFactory emf = Persistence.createEntityManagerFactory(\"test\");\n}\n```\n\n}\n\nExpected output: test should run.\nWhat do you see instead: Exception \"org.hibernate.ejb.HibernatePersistence\ncannot be cast to javax.persistence.spi.PersistenceProvider\"\n\nWhat version of the product are you using? PowerMock 1.2.5 + EasyMock 2.4\nOperating system? : Windows XP SP3\n\nIt seems that somehow adding the annotation\n\"@PrepareForTest({\n    MyTest.class\n    })\"\nchanges/reorders the classpath.\n\nAny solution for this?\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=112_\n", "url": "https://github.com/powermock/powermock/issues/132", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:27:18", "closed": "2015-07-23 13:27:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Reflection invokation for fails for X.class.Y", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on May 25, 2009 20:18:58_\n\nWhat steps will reproduce the problem? 1. Modify the GreeterTest from SuppressStaticInitializer to PrepareForTest\n2. Execute the test What is the expected output? What do you see instead? Caused by: org.powermock.reflect.exceptions.MethodNotFoundException: No\nmethod found with name 'getClassLoader' with argument types: [\n[Ljava.lang.Class; ] in class demo.org.powermock.examples.simple.SimpleConfig\n    at\norg.powermock.reflect.internal.WhiteboxImpl.throwExceptionIfMethodWasNotFound(WhiteboxImpl.java:898)\n    at\norg.powermock.reflect.internal.WhiteboxImpl.getMethod(WhiteboxImpl.java:178)\n    at org.powermock.core.MockGateway.doMethodCall(MockGateway.java:66)\n    at org.powermock.core.MockGateway.methodCall(MockGateway.java:86)\n    at\ndemo.org.powermock.examples.simple.SimpleConfig.<clinit>(SimpleConfig.java:26)\n    ... 38 more\n\nThe error message is also wrong (shouldn't be Ljava.lang.Class;)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=110_\n", "url": "https://github.com/powermock/powermock/issues/130", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 13:26:56", "closed": "2015-07-23 13:27:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.VerifyError when trying to use uispec4j", "body": "_From [manie...@googlemail.com](https://code.google.com/u/101148338612071814602/) on May 11, 2009 10:41:32_\n\nWhat steps will reproduce the problem? 1. Create simple test case that use uispec4j and powermock (the test shall\ninvoke UISpec4J.init() in static initializer).\n2. Run test case. What is the expected output? What do you see instead? Successful start of test case execution. What version of the product are you using? On what operating system? powermock 1.2.5 or 1.2\nuispec4j 2.0 RC3 for JDK6.x (uispec4j-jdk6-2.0-RC3.jar) Please provide any additional information below. java.lang.VerifyError: (class: javax/swing/plaf/metal/MetalLookAndFeel,\nmethod: getLayoutStyle signature: ()Ljavax/swing/LayoutStyle;) Wrong return\ntype in function    at\njavax.swing.UIManager.setLookAndFeel(UIManager.java:581)    at\njavax.swing.UIManager.initializeDefaultLAF(UIManager.java:1343)     at\njavax.swing.UIManager.initialize(UIManager.java:1432)   at\njavax.swing.UIManager.maybeInitialize(UIManager.java:1420)  at\njavax.swing.UIManager.getDefaults(UIManager.java:660)   at\njavax.swing.UIManager.put(UIManager.java:989)   at\norg.uispec4j.interception.ui.UISpecLF.init(UISpecLF.java:11)    at\norg.uispec4j.UISpec4J.init(UISpec4J.java:32)    at\ncom.mot.ios.atia.ui.BinaryInputPanelTest.setUpClass(BinaryInputPanelTest.java:44)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:597)     at\norg.junit.internal.runners.ClassRoadie.runBefores(ClassRoadie.java:56)  at\norg.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:43) \nat\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:128)\n    at\norg.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:112)\n    at\norg.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:44)\n    at\norg.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)\n    at\norg.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=102_\n", "url": "https://github.com/powermock/powermock/issues/122", "user": "johanhaleby", "labels": ["Deferred", "Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:24:27", "closed": "2015-07-23 13:24:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Cant find expect() method", "body": "_From [kashif.razzaqui](https://code.google.com/u/kashif.razzaqui/) on April 18, 2009 17:16:11_\n\nWhat steps will reproduce the problem? 1.Tried using expect method with 1.2 for mocking static classes, my IDE\ncant find the expect method for importing. Is it added to the latest build.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=100_\n", "url": "https://github.com/powermock/powermock/issues/120", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:24:05", "closed": "2015-07-23 13:24:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Partial mocking in the Mockito API doesn't work for non-final methods", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on April 11, 2009 14:23:39_\n\nPartial mocking the following class doesn't work:\n\nclass UnderTest\n{\n       String test()\n       {\n               String s = getString();\n               System.out.println(s);\n               return s;\n       }\n\n```\n   String getString() { return \"REAL VALUE\"; }\n```\n\n}\n\nI.e. we'd like to partial mock the \"getString\" method and invoke the test\nmethod. If we were to change the modifier of the test method to final then\nit would suddenly work. If the modifier is not final the MockGateway never\nintercepts the call for some reason. Maybe it's something wrong with the\nbyte-code manipulation but I'm not sure at this moment. It works fine with\nthe EasyMock API though. \n\nRefer to https://code.google.com/p/powermock/source/browse/trunk/modules/module-test/powermockito/junit4/src/test/java/samples/powermockito/junit4/partialmocking/PartialMockingExampleDefect.java for an example.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=98_\n", "url": "https://github.com/powermock/powermock/issues/118", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:23:43", "closed": "2015-07-23 13:24:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MockPolicy intercepts the mocked method only once and only from the first test method (first @Test annotation)", "body": "_From [shivimur...@gmail.com](https://code.google.com/u/101422342479734040814/) on April 03, 2009 19:00:42_\n\nWhat steps will reproduce the problem? 1. Write a MockPolicy for a private method in a class.\n2. Construct two Test methods, both performing the same action.\n3. Run the JUnit Test case. What is the expected output? What do you see instead? Expected Output: Calls from both test Methods are intercepted and the mock \nis returned.\nActual Output: Only the first test method gets intercepted and the mock is \nreturned. The second test method is not intercepted and the actual call to \nthe private method goes through. What version of the product are you using? On what operating system? PowerMock v 1.1.1 on Windows XP. Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=97_\n", "url": "https://github.com/powermock/powermock/issues/117", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-23 13:23:35", "closed": "2015-07-23 13:23:41", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Can't mock member class enums", "body": "_From [DanFabul...@gmail.com](https://code.google.com/u/110641516453600120513/) on March 12, 2009 21:02:40_\n\nREPRO: Run \"mvn test\" in the attached Maven project.\n\nThe project consists of an \"App\" class and a \"TestMyEnum\" class, where\nTestMyEnum was copied from the Google Groups link here: http://groups.google.com/group/powermock/browse_thread/thread/86aac968c8b466b7/972efd88f3c13fcd The \"App\" class contains an enum as a member class, like this:\n\npublic class App {\n  public enum Planet { ... }\n}\n\nEXPECTED: Test should pass.  (It works if you refactor Planet from a member\nclass to a top level class.) \n\nACTUAL: Test fails, with the error: java.lang.IllegalArgumentException:\nCannot subclass final class class mockEnumBug.App$Planet\n        at net.sf.cglib.proxy.Enhancer.generateClass(Enhancer.java:446)\n        at\nnet.sf.cglib.core.DefaultGeneratorStrategy.generate(DefaultGeneratorStrategy.java:25)\n        at\nnet.sf.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:216)\n        at net.sf.cglib.proxy.Enhancer.createHelper(Enhancer.java:377)\n        at net.sf.cglib.proxy.Enhancer.createClass(Enhancer.java:317)\n        at\norg.powermock.api.easymock.internal.signedsupport.SignedSupportingClassProxyFactory.createProxy(SignedSupportingClassProxyFactory.java:155)\n        at org.easymock.internal.MocksControl.createMock(MocksControl.java:40)\n        at org.powermock.api.easymock.PowerMock.doMock(PowerMock.java:2089)\n        at org.powermock.api.easymock.PowerMock.createMock(PowerMock.java:92)\n        at mockEnumBug.TestMyEnum.testEnum(TestMyEnum.java:18)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)\n        at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$2.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:217)\n        at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)\n        at\norg.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)\n        at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$2.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:207)\n        at\norg.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)\n        at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)\n        at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:202)\n        at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:156)\n        at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:130)\n        at\norg.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)\n        at\norg.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)\n        at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:128)\n        at\norg.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:112)\n        at\norg.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:44)\n        at\norg.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)\n        at\norg.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)\n        at\norg.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)\n        at org.apache.maven.surefire.Surefire.run(Surefire.java:177)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at\norg.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:338)\n        at\norg.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:997)\n\nUsing PowerMock 1.2, Java 1.6, Windows XP SP3\n\n**Attachment:** [mockEnumBug.zip](http://code.google.com/p/powermock/issues/detail?id=95)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=95_\n", "url": "https://github.com/powermock/powermock/issues/115", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 13:21:05", "closed": "2015-07-23 13:23:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Exception when using powermock with a jboss bootstrap instance", "body": "_From [nikesh.midha](https://code.google.com/u/nikesh.midha/) on January 22, 2009 11:18:58_\n\nI am using PowerMock with jboss bootstrap instance. My testcase uses\npowermock (version 1.1.1) for junit3 (by having a static suite() API). The\ntest case extends a org.jboss.embedded.junit.BaseTestCase to start a jboss\nbootstrap instance in setup. During startup itself, it fails giving the\nfollowing exception : \n\nUnable to create a KernelInitializer based on the specified KernelConfig\njava.lang.RuntimeException: Unable to create a KernelInitializer based on\nthe specified KernelConfig\n        at\norg.jboss.kernel.KernelFactory.createKernelInitializer(KernelFactory.java:156)\n        at\norg.jboss.kernel.KernelFactory.assembleNewKernel(KernelFactory.java:99)\n        at org.jboss.kernel.KernelFactory.newInstance(KernelFactory.java:67)\n        at\norg.jboss.kernel.plugins.bootstrap.AbstractBootstrap.bootstrap(AbstractBootstrap.java:120)\n        at\norg.jboss.kernel.plugins.bootstrap.AbstractBootstrap.run(AbstractBootstrap.java:89)\n        at org.jboss.embedded.Bootstrap.createKernel(Bootstrap.java:131)\n        at org.jboss.embedded.Bootstrap.getInstance(Bootstrap.java:76)\n        at\norg.jboss.embedded.junit.BaseTestCase.bootstrap(BaseTestCase.java:95)\n        at org.jboss.embedded.junit.BaseTestCase.setUp(BaseTestCase.java:66)\n        at\ncom.digite.platform.common.DigiteEJBTestCase.setUp(DigiteEJBTestCase.java:79)\n        at\ncom.digite.platform.common.DigiteEJBTxTestCase.setUp(DigiteEJBTxTestCase.java:25)\n        at\ncom.digite.platform.task.mspintegration.checkin.AssignmentBaselineCheckinAdaptorTest.setUp(AssignmentBaselineCheckinAdaptorTest.java:47)\n        at\norg.powermock.modules.junit3.internal.impl.JUnit3TestSuiteChunkerImpl.run(JUnit3TestSuiteChunkerImpl.java:157)\n        at\norg.powermock.modules.junit3.PowerMockSuite.run(PowerMockSuite.java:52)\nCaused by: java.lang.ClassCastException:\norg.jboss.kernel.plugins.bootstrap.basic.BasicKernelInitializer\n        at\norg.jboss.kernel.plugins.config.property.PropertyKernelConfig.createKernelInitializer(PropertyKernelConfig.java:118)\n        at\norg.jboss.kernel.KernelFactory.createKernelInitializer(KernelFactory.java:150)\n\nAdditional Info : \nPowermock is working fine for cases where i don't need the jboss bootstrap\ninstance and extend my test case from TestCase.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=90_\n", "url": "https://github.com/powermock/powermock/issues/110", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 12:49:27", "closed": "2015-07-23 12:49:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "StackOverflowError", "body": "_From [gustavoh...@gmail.com](https://code.google.com/u/113874744164882858588/) on January 20, 2009 21:10:03_\n\nWhat steps will reproduce the problem? I tryed to find the exactly steps to reproduce the problem, but I could't\nfind it. So, I've posted the source code of my test. What is the expected output? What do you see instead? I'm getting StackOverflowError when I uncomment the line\n//@PrepareForTest({Project.class}) in the code listed at the end of this\nreport. What version of the product are you using? On what operating system? PowerMock 1.1.1 - Windows XP Media Center Edition\nJUnit 4.5\nSpring 2.5.6 Please provide any additional information below. I'm using Spring 2.5.6 in my project with @Configurable annotation in my\nDomains Objects. Project.close() is the method under testing. Project is a\nDomain Object, so, it has the @Configurable annotation. I don't know if\nthis it the cause of the problem. If you need any other information, please\nlet me know.\n\nThis is my test code:\n\npackage br.com.imperion.seomasterpro.core.project;\n\nimport static org.easymock. EasyMock .expect;\nimport static org.powermock.api.easymock.PowerMock.createMock;\nimport static org.powermock.api.easymock.PowerMock.createMockAndExpectNew;\nimport static org.powermock.api.easymock.PowerMock.replayAll;\nimport static org.powermock.api.easymock.PowerMock.verifyAll;\n\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.junit.Before;\nimport org.junit.BeforeClass;\nimport org.junit.Ignore;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.powermock.core.classloader.annotations.PrepareForTest;\nimport org.powermock.modules.junit4.PowerMockRunner;\n\nimport br.com.imperion.seomasterpro.core.infrastructure.IdentityMap;\nimport\nbr.com.imperion.seomasterpro.core.infrastructure.events.EventsAggregator;\n\n@RunWith(PowerMockRunner.class)\n//@PrepareForTest({Project.class})\npublic class ProjectTest {\n\n```\nprivate IdentityMap identityMap;\nprivate EventsAggregator eventsAggregator;\nprivate Project project;\n\n@BeforeClass\npublic static void setUpBeforeClass() throws Exception {\n}\n\n@AfterClass\npublic static void tearDownAfterClass() throws Exception {\n}\n\n@Before\npublic void setUp() throws Exception {\n\n    identityMap = createMock(IdentityMap.class);\n    eventsAggregator = createMock(EventsAggregator.class);\n\n    project = new Project();\n\n    project.setIdentityMap(identityMap);\n    project.setEventsAggregator(eventsAggregator);\n\n}\n\n@After\npublic void tearDown() throws Exception {\n}\n\n\n@Test\npublic final void testClose_OK() throws Exception {\n    CloseProjectEvent closeProjectEvent =\n```\n\ncreateMockAndExpectNew(CloseProjectEvent.class,project, false);\n\n```\n    expect(closeProjectEvent.closeCancelled()).andReturn(false);\n    eventsAggregator.notifyObserver(project,\n            ProjectObserver.CLOSE_PROJECT_EVENT, closeProjectEvent);\n    identityMap.clear();\n\n    replayAll();\n\n    project.close();\n\n    verifyAll();\n}\n\n@Test\n@Ignore\npublic final void testClose_Cancelled() {\n\n}\n```\n\n}\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=89_\n", "url": "https://github.com/powermock/powermock/issues/109", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "duplicate", "imported"], "created": "2015-07-23 12:48:56", "closed": "2015-07-23 12:49:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Calling another method in the same class from equals results in a StackOverflowError", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on January 16, 2009 18:40:35_\n\nE.g. \npublic class ClassA \n{\n\n   @Override\n       public int hashCode()\n   {\n       return getId();\n   }\n\n   public int getId()\n   {\n       return 3;\n   }\n}\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=88_\n", "url": "https://github.com/powermock/powermock/issues/108", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 12:45:11", "closed": "2015-07-23 12:48:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.IllegalAccessError: ... cannot access its superinterface .....", "body": "_From [leon.oos...@gmail.com](https://code.google.com/u/109690981829239627626/) on December 17, 2008 00:26:52_\n\nWhat steps will reproduce the problem? 1. try to mock a static class with a private interface What is the expected output? What do you see instead? It should return void What version of the product are you using? On what operating system? powermock 1.1.1. on XP Please provide any additional information below. here's the stack trace:\njava.lang.IllegalAccessError: class XXXX$4 cannot access its superinterface\nXXXXX$PRIVATEINFTERFACE\n\n```\nat java.lang.ClassLoader.defineClass1(Native Method)\nat java.lang.ClassLoader.defineClass(ClassLoader.java:620)\nat java.lang.ClassLoader.defineClass(ClassLoader.java:465)\nat\n```\n\norg.powermock.core.classloader.MockClassLoader.loadMockClass(MockClassLoader.java:201)\n    at\norg.powermock.core.classloader.MockClassLoader.loadModifiedClass(MockClassLoader.java:140)\n    at\norg.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:56)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:251)\n    at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n    at java.lang.Class.getDeclaredMethods0(Native Method)\n    at java.lang.Class.privateGetDeclaredMethods(Class.java:2395)\n    at java.lang.Class.getDeclaredMethods(Class.java:1763)\n    at org.powermock.core.WhiteboxImpl.getAllMethods(WhiteboxImpl.java:873)\n    at org.powermock.core.WhiteboxImpl.getMethods(WhiteboxImpl.java:1038)\n    at org.powermock.Whitebox.getMethods(Whitebox.java:412)\n    at org.powermock.PowerMock.mockStaticPartial(PowerMock.java:579)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=87_\n", "url": "https://github.com/powermock/powermock/issues/107", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 12:44:58", "closed": "2015-07-23 12:45:10", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Suppression of final primitive fields doesn't work.", "body": "Suppression of final primitive fields doesn't work. The calls are never\nintercepted by the MockGateway for some reason. Perhaps it's something\nwrong with Javassist?\n", "url": "https://github.com/powermock/powermock/issues/105", "user": "johanhaleby", "labels": ["Not an issue", "Priority:Medium", "bug", "component:core"], "created": "2015-07-23 12:44:43", "closed": "2016-07-24 13:03:55", "commits": {"586afcaf810234d48678ab5be4b76643a58227cd": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 367.0002777777778, "commitsDetails": [{"commitHash": "586afcaf810234d48678ab5be4b76643a58227cd", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["83fa575488dada0a42a0bd45c9c447dfbebc58a7"], "nameRev": "586afcaf810234d48678ab5be4b76643a58227cd tags/powermock-1.6.5~34", "commitMessage": "Update link in test source for issue #105\n", "commitDateTime": "2016-03-03 14:52:38", "authoredDateTime": "2016-03-03 14:52:38", "commitGitStats": [{"filePath": "modules/module-test/easymock/junit4-test/src/test/java/samples/junit4/suppressfield/SuppressFieldTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SuppressFieldTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit4.suppressfield.SuppressFieldTest.assertThatSpecificStaticFinalPrimitiveFieldSuppressionWorks()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit4.suppressfield.SuppressFieldTest.assertThatSpecificInstanceFinalPrimitiveFieldSuppressionWorks()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["586afcaf810234d48678ab5be4b76643a58227cd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "PrepareForTest at method-level leads to test runner problems if placing the annotation at method-level only.", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on December 11, 2008 10:30:57_\n\nThis has been fixed before but was removed since it didn't work on Mac.\nThis should work now so enable to fix again.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=84_\n", "url": "https://github.com/powermock/powermock/issues/104", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 12:44:35", "closed": "2015-07-23 12:44:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Preparing an interface for test causes a NPE", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on December 04, 2008 15:50:49_\n\nPreparing an interface for test causes a NPE\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=81_\n", "url": "https://github.com/powermock/powermock/issues/101", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 12:44:12", "closed": "2015-07-23 12:44:19", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "JUnit launches unexpected \"null\" RuntimeException during expectPrivate of a native method ", "body": "_From [frederic.delanoy@gmail.com](https://code.google.com/u/frederic.delanoy@gmail.com/) on November 29, 2008 04:10:53_\n\nHi, I'm trying to use powermock to test a singleton class using a native \nfunction, and get recurrent error from JUnit launcher.\n\nBasically, I've 3 classes:\n-MyClass is a singleton, and contains a native method as well as a non-\nnative one; the native method throws\n-MyClassException\n-MyClassTest\n\nI used JUnit before, but I'm a bit new wrt mocks... so I may have made \na stupid noob mistake... :\\ What steps will reproduce the problem? 1. javac -cp . MyClass.java MyExceptionClass.java\n2. javac -cp .;junit-4.5.jar;powermock-1.0-\nfull.jar;easymock-2.4.jar;easymockclassextension-2.4.jar;javassist-3.9.0.GA.jar;cglib-2.2.jar;asm-3.1.jar \nMyClassTest.java\n3. java -cp .;junit-4.5.jar;powermock-1.0-\nfull.jar;easymock-2.4.jar;easymockclassextension-2.4.jar;javassist-3.9.0.GA.jar;cglib-2.2.jar;asm-3.1.jar \norg.junit.runner.JUnitCore MyClassTest What is the expected output? What do you see instead? I get the following stack trace:\nJUnit version 4.5\n.E\nTime: 0,921\nThere was 1 failure:\n1) null\njava.lang.RuntimeException: test should never throw an exception to this \nlevel\n    at \norg.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters\n(MethodRoadie.java:97)\n    at org.junit.internal.runners.MethodRoadie.runTest\n(MethodRoadie.java:84)\n    at org.junit.internal.runners.MethodRoadie.run\n(MethodRoadie.java:49)\n    at \norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod\n(PowerMockJUnit44RunnerDelegateImpl.java:200)\n    at \norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods\n(PowerMockJUnit44RunnerDelegateImpl.java:150)\n    at \norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl\n$1.run(PowerMockJUnit44RunnerDelegateImpl.java:124)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected\n(ClassRoadie.java:34)\n    at org.junit.internal.runners.ClassRoadie.runProtected\n(ClassRoadie.java:44)\n    at \norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run\n(PowerMockJUnit44RunnerDelegateImpl.java:122)\n    at \norg.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run\n(JUnit4TestSuiteChunkerImpl.java:89)\n    at \norg.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run\n(AbstractCommonPowerMockRunner.java:44)\n    at org.junit.runners.Suite.runChild(Suite.java:115)\n    at org.junit.runners.Suite.runChild(Suite.java:23)\n    at org.junit.runners.ParentRunner.runChildren\n(ParentRunner.java:180)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:41)\n    at org.junit.runners.ParentRunner$1.evaluate(ParentRunner.java:173)\n    at org.junit.internal.runners.statements.RunBefores.evaluate\n(RunBefores.java:28)\n    at org.junit.internal.runners.statements.RunAfters.evaluate\n(RunAfters.java:31)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:220)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:116)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:107)\n    at org.junit.runner.JUnitCore.runMain(JUnitCore.java:88)\n    at org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:54)\n    at org.junit.runner.JUnitCore.main(JUnitCore.java:46)\n\nFAILURES!!!\nTests run: 1,  Failures: 1 What version of the product are you using? On what operating system? SUN javac 1.5.0_16\nSUN java 1.6.0_10-b33\n\nThanks in advance for your help.\n\nFr\u00e9d\u00e9ric Delanoy\n\n**Attachment:** [MyClassTest.java MyClass.java MyExceptionClass.java](http://code.google.com/p/powermock/issues/detail?id=78)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=78_\n", "url": "https://github.com/powermock/powermock/issues/98", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 12:43:31", "closed": "2015-07-23 12:43:56", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Clear state class loading problem?", "body": "_From [jan.kron...@gmail.com](https://code.google.com/u/111289048178412145391/) on November 14, 2008 18:21:37_\n\nPowerMockRunListener using correct classloader with chunking?\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=75_\n", "url": "https://github.com/powermock/powermock/issues/95", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 12:42:51", "closed": "2015-07-23 12:43:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Should we really clear the state in verify?", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on November 14, 2008 11:53:45_\n\nToday we face a huge problem because doing:\nPowerMock.verify(mock1);\nPowerMock.verify(mock2);\nwill clear the PowerMock state between verification of mock1 and mock2\n(PowerMock.verify(mock1, mock2) would work though). This is needed because\notherwise static mocks won't go back to \"normal\" after invoking verify on\nit. Also state such as PowerMock.niceReplayAndVerify() won't be cleared if\nnot using any PowerMock runner. The question is, would we want this\nbehavior? Should we say that the user is FORCED to always use the\nPowerMockRunner when performing PowerMock tests otherwise you can't\nguarantee the behavior. All JUnit runners perform clean up AFTER each test.\nPerhaps this is what we want!\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=73_\n", "url": "https://github.com/powermock/powermock/issues/93", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 12:42:19", "closed": "2015-07-23 12:42:36", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Tests methods starting with \"test\" are executed even though they have no @Test annotation and the test class doesn't extend from TestCase", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 30, 2008 10:49:07_\n\nfix this!\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=53_\n", "url": "https://github.com/powermock/powermock/issues/73", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 12:37:52", "closed": "2015-07-23 12:37:59", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Invocations of var arg methods and constructors and expectPrivate probably don't work for sub-types of arguments.", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 30, 2008 10:35:19_\n\nE.g. let's say you have a method: \n\nprivate void x(MyInstanceType... myInstances)\n\nPowerMock probably don't have support for doing:\n\nWhitebox.invokeMethod(instance, \"x\", new MyInstanceType(), new\nMyInstanceSubType());\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=52_\n", "url": "https://github.com/powermock/powermock/issues/72", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 12:37:44", "closed": "2015-07-23 12:37:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "WhiteBox.getMethod(..) should also return protected and package-private methods.", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 28, 2008 16:25:52_\n\nIf we have a class like this: \n\npublic final class SomeHelper {\n\n```\nprivate SomeHelper() {\n\n}\n\nstatic class MyPlugin extends MyCorePlugin {\n    public MyPlugin() {\n        setLogManager(new MockLogManager());\n    }  \n}\n\n...\n```\n\n}\n\nand load the classes are loaded from our classloader the MockGateway\nperforms a check, suppressMethod.contains(Whitebox.getMethod(objectType,\nmethodName, sig)), for the MyPlugin invokation of the setLogManager method.\nHowever if setLogManager is protected the Whitebox.getMethod(..) won't find\nthe method because it's neither public or private. We need to address this!!\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=49_\n", "url": "https://github.com/powermock/powermock/issues/69", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 12:34:22", "closed": "2015-07-23 12:34:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "setup and teardown are not executed when test extends TestCase", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 28, 2008 13:44:32_\n\nWhen the test class extends TestCase the setUp and TearDown metods are not\nexecuted when running with the PowerMockRunner. A work-around exists (use\nthe @Before and @After annotations and change the mehtods to public\ninstread of protected).\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=47_\n", "url": "https://github.com/powermock/powermock/issues/67", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 12:33:43", "closed": "2015-07-23 12:34:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "invokeMethod throws NPE when an argument is null when the method cannot be found", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 27, 2008 14:18:47_\n\njava.lang.NullPointerException\nat org.powermock.Whitebox.getArgumentsAsString(Whitebox.java:529)\nat org.powermock.Whitebox.throwExceptionIfMethodWasNotFound(Whitebox.java:508)\nat org.powermock.Whitebox.findMethodOrThrowException(Whitebox.java:425)\nat org.powermock.Whitebox.doInvokeMethod(Whitebox.java:341)\nat org.powermock.Whitebox.invokeMethod(Whitebox.java:277)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=44_\n", "url": "https://github.com/powermock/powermock/issues/64", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 12:31:28", "closed": "2015-07-23 12:31:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SuppressConstructor some times doesn't work when running a test suite", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 26, 2008 09:33:22_\n\nThere may be some trouble with state not being clean. It happens if the\nstatic suppression happens after the PrivateMethodDemoTest is executed.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=43_\n", "url": "https://github.com/powermock/powermock/issues/63", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 12:31:15", "closed": "2015-07-23 12:31:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Test should be sorted", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 26, 2008 08:41:46_\n\nOur test runner runs the tests in a different order than the default junit\nrunner. This should be fixed.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=40_\n", "url": "https://github.com/powermock/powermock/issues/60", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 12:30:51", "closed": "2015-07-23 12:30:58", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "powermock-full.jar contains lot's of non-powermock stuff", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 24, 2008 15:13:11_\n\npowermock-full.jar contains both junit, easymock and hamcrest stuff! This\nMUST be removed!!!\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=39_\n", "url": "https://github.com/powermock/powermock/issues/59", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 12:30:43", "closed": "2015-07-23 12:30:50", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fail to mock class that directly extends java.lang.Object", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 24, 2008 15:05:11_\n\nThe new constructor suppression algorithm doesn't work for classes that\ndirectly extend from java.lang.Object since Object doesn't contain a ctor\nwith with argument IndicateReloadClass. We must change the implementation\nin the MainMockTransformers' edit(ConstructorCall c) method to check if the\nsuper class is of type Object before defering the call.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=38_\n", "url": "https://github.com/powermock/powermock/issues/58", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 12:30:35", "closed": "2015-07-23 12:30:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "createPartialMock should support private constructors with no arguments", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 24, 2008 14:56:14_\n\nE.g. MyClass myClassMock = PowerMock.createPartialMock(MyClass.class, new\nString[]{\"loadMyClassDLL\"}, null); \n\nFor ctor:\n    private MyClass() {\n        this.initialized = false;\n        this.connectedDUTs = new HashSet<Byte>();\n    }\n\nGenerates the following error: \njava.lang.NullPointerException\n        at org.powermock.Whitebox.getArgumentsAsString(Whitebox.java:526)\n        at\norg.powermock.Whitebox.throwExceptionIfConstructorWasNotFound(Whitebox.java:512)\n        at\norg.powermock.Whitebox.findConstructorOrThrowException(Whitebox.java:499)\n        at org.powermock.PowerMock.createPartialMock(PowerMock.java:636)\n        at\nse.ericsson.eab.sdk.jMyClasswrapper.MyClassTest.connectToDUTFail(MyClassTest.java:358)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=37_\n", "url": "https://github.com/powermock/powermock/issues/57", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 12:30:28", "closed": "2015-07-23 12:30:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "findConstructorOrThrowException and findMethodOrThrowException have critical bugs", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 24, 2008 11:36:20_\n\nfindConstructorOrThrowException in Whitebox have two critical bugs which\neffects other parts of PowerMock (for example createPartialMock). \n1:\nif (!paramTypes[i].equals(arguments[i].getClass())) {\n    wrappedConstructorFound = false;\n    break;\n}\nSolution: arguments[i].getClass() must be changed to\ngetUnmockedType(arguments[i].getClass())\n\n2: \nThe findPrimitiveMethodOrConstructor should be renamed to\nhasWrapperArguments(return value must change from true to false)\nIf a primitive constructor is found parameter checking must take place!!!\nThis doesn't happen today!!\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=34_\n", "url": "https://github.com/powermock/powermock/issues/54", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 12:30:04", "closed": "2015-07-23 12:30:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "createPartialMock no longer works as expected.", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 24, 2008 09:26:51_\n\nBecause we're adding a defer constructor in each class this will have\nimplications when creating partial mocks if there's only one constructor in\nthe class. I.e.\n\n   tested = createPartialMock(LineSplitDataPackageWriter.class, new String[] {\n            \"\"}, mDataWriterMock);\n\njava.lang.RuntimeException: Several matching constructors found, please\nspecify the argument parameter types so that PowerMock can determine which\nmethod you're refering to.\nMatching constructors in class se.myapp.LineSplitDataPackageWriter were:\nse.myapp.service.model.LineSplitDataPackageWriter(\norg.powermock.core.classloader.annotations.internal.IndicateReloadClass.class )\nse.myapp.service.model.LineSplitDataPackageWriter(\nse.myapp.IDataPackageWriter.class )\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=33_\n", "url": "https://github.com/powermock/powermock/issues/53", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 12:29:50", "closed": "2015-07-23 12:30:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Mocking fails if class is not public or protected when doing signed mocking.", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 23, 2008 11:31:21_\n\nWhen doing signed mocking we change the package name from x.y.z to\npowermock.x.y.z. CGLib then fails to create a mock if the class to mock is\nneither public or protected. An easy solution would be to change the\nvisibility of all classes loaded by our classloader to public.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=32_\n", "url": "https://github.com/powermock/powermock/issues/52", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 12:29:42", "closed": "2015-07-23 12:29:49", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock must work with Hamcrest", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 21, 2008 08:25:44_\n\nPowerMock must work with hamcrest. Now we get a linkage error (see\norg.powermock.examples.hamcrest).\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=30_\n", "url": "https://github.com/powermock/powermock/issues/50", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 12:29:20", "closed": "2015-07-23 12:29:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock doesn't work correctly when running a single test case", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 09, 2008 11:22:18_\n\nYou'll end up with unrooted testes.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=22_\n", "url": "https://github.com/powermock/powermock/issues/42", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 12:27:35", "closed": "2015-07-23 12:27:47", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock doesn't work correctly when using cobertura and Maven", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 01, 2008 21:13:39_\n\nThere seems to be a problem with cobertura, Maven and PowerMock.\n\nFor example adding cobertura to the DocumentationExamples project results\nin the following error message (on Linux as well after configuring surefire\nwith cobertura.use.java.nio to false): \n\nCobertura: Loaded information on 5 classes.\nCobertura: Coverage data file\n/home/johan/devtools/java/projects/powermock/examples/DocumentationExamples/target/cobertura/cobertura.ser\neither does not exist or is not readable.  Creating a new data file.\nCobertura: Error reading file\n/home/johan/devtools/java/projects/powermock/examples/DocumentationExamples/target/cobertura/cobertura.ser:\nnull\nCobertura: Saved information on 1 classes.\nCobertura: Error reading file\n/home/johan/devtools/java/projects/powermock/examples/DocumentationExamples/target/cobertura/cobertura.ser:\nnull\nCobertura: Coverage data file\n/home/johan/devtools/java/projects/powermock/examples/DocumentationExamples/target/cobertura/cobertura.ser\neither does not exist or is not readable.  Creating a new data file.\nCobertura: Saved information on 5 classes.\nCobertura: Saved information on 1 classes.\n[INFO] [cobertura:cobertura]\n[INFO] Cobertura 1.9 - GNU GPL License (NO WARRANTY) - See COPYRIGHT file\nCobertura: Loaded information on 1 classes.\n[cobertura] INFO  [main]\nnet.sourceforge.cobertura.reporting.html.HTMLReport - Data file does not\ncontain instrumentation information for the file\npowermock/examples/staticmocking/ServiceRegistrator.java.  Ensure this\nclass was instrumented, and this data file contains the instrumentation\ninformation.\nReport time: 119ms\n\nWe need to address this if possible.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=21_\n", "url": "https://github.com/powermock/powermock/issues/41", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 12:26:42", "closed": "2015-07-23 12:27:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "doInvokeMethod method in PowerMock should treat the InvokationTargetException separately", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 01, 2008 13:46:29_\n\nRight now the doInvokeMethod catches all exceptions and wrap them in a RTE.\nThis is wrong. The InvokationTargetException should be caught explicitly\nand the cause of this exceptions should be thrown instead. This to avoid\nerror stacks like this:\n\njava.lang.RuntimeException: Failed to invoke method 'assertLogFileSet'.\nReason was: 'null'.\n    at org.powermock.PowerMock.doInvokeMethod(PowerMock.java:1123)\n    at org.powermock.PowerMock.expectVoid(PowerMock.java:723)\n    at\nse.mayapp.TargetPersistenceManagerTest.testGetLogFileList(TargetPersistenceManagerTest.java:454)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:585)\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)\n    at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)\n    at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)\n    at\norg.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:162)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:119)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:112)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:110)\n    at\norg.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:74)\n    at\norg.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:43)\n    at\norg.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)\n    at\norg.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\nCaused by: java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:585)\n    at org.powermock.PowerMock.doInvokeMethod(PowerMock.java:1121)\n    ... 26 more\nCaused by: java.lang.IllegalStateException: You need to set the log path\nbefore using the target persistence manager.\n    at\nse.mayapp.TargetPersistenceManager.assertLogFileSet(TargetPersistenceManager.java:123)\n    ... 31 more\n\nI.e. the actual exception should be \"java.lang.IllegalStateException: You\nneed to set the log path before using the target persistence manager.\"\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=19_\n", "url": "https://github.com/powermock/powermock/issues/39", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 12:26:31", "closed": "2015-07-23 12:26:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "expectNew(..).andThrow(..) no longer works with checked exceptions. ", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on October 01, 2008 10:34:29_\n\nFor some reason it seems like the NewInvocationControl has been reverted\nand doesn't support checked exceptions anymore. \n\nNewInvocationControl should probably contain the method \npublic T createInstance() _throws Exception_;\n\nOtherwise we'll run into:\njava.lang.IllegalArgumentException: last method called on mock cannot throw\njava.io.IOException\n    at org.easymock.internal.MocksControl.andThrow(MocksControl.java:110)\n    atse.myapp.TargetPersistenceManagerTest.testTargetConnect_failsToCreateFileName(TargetPersistenceManagerTest.java:418)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:585)\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)\n    at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)\n    at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)\n    at\norg.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:162)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:119)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:112)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:110)\n    at\norg.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:74)\n    at\norg.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:43)\n    at\norg.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)\n    at\norg.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\nIt doesn't seem like the ExpectNewDemoTest#testNewWithCheckedException test\ncase tests for checked exceptions at all!!!\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=18_\n", "url": "https://github.com/powermock/powermock/issues/38", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 12:26:22", "closed": "2015-07-23 12:26:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "expectNew doesn't throw an error message when invoking a private method if there were to many new instance calls than expected", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 13, 2008 13:07:57_\n\nSee ExpectNewDemoDefect#testSimpleMultipleNewPrivate_tooManyTimesExpected.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=12_\n", "url": "https://github.com/powermock/powermock/issues/32", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 09:03:56", "closed": "2015-07-23 09:04:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SuppressConstructorCode must work for ANY class", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 11, 2008 09:27:49_\n\nRight now suppressConstructorCode doesn't work in this case:\n\nsuppressConstructorCode(A.class) when A is instantiated in the test class. \n\nIf A extends from B then it's ok to do suppressConstructorCode(B.class).\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=9_\n", "url": "https://github.com/powermock/powermock/issues/29", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 08:47:37", "closed": "2015-07-23 08:48:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SuppressConstructor doesn't work when using reflection to instansiate a class.", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 11, 2008 09:09:41_\n\nUsing WhiteBox.invokeConstructor(..) doesn't work in combination with\nsuppressConstructorCode (the constructor is still invoked without being\nsuppressed).\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=8_\n", "url": "https://github.com/powermock/powermock/issues/28", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 08:47:28", "closed": "2015-07-23 08:47:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "WhiteBox doInvokeMethod can remove methodToInvoke.setAccessible(true);", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 11, 2008 09:05:19_\n\nWhiteBox doInvokeMethod can remove methodToInvoke.setAccessible(true)\nbecause this is done in the performMethodInvocation method.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=7_\n", "url": "https://github.com/powermock/powermock/issues/27", "user": "johanhaleby", "labels": ["Priority:Low", "bug", "imported"], "created": "2015-07-23 08:47:19", "closed": "2015-07-23 08:47:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "WhiteBox invoke method must handle null", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 11, 2008 08:56:06_\n\nWhiteBox.invokeMethod(...) must throw an exception of the object passed to\nthe method is null (i.e. invokeMethod(null, ...)). Right now we get NPE.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=6_\n", "url": "https://github.com/powermock/powermock/issues/26", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 08:47:11", "closed": "2015-07-23 08:47:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Matchers doesn't work for arguments with expectPrivate", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 09, 2008 16:58:10_\n\nThis doesn't work:\n      expectPrivate(tested, getNewStringBuilderMethodName,\naryEq(message)).andReturn(expected);\n\nIt will produce:\njava.lang.NullPointerException\n    at org.powermock.Whitebox.findMethodOrThrowException(Whitebox.java:364)\n    at org.powermock.PowerMock.expectPrivate(PowerMock.java:714)\n    at\nse.myapp.service.model.LineSplitDataPackageWriterTest.testWrite_singleMessageWithNewLine(LineSplitDataPackageWriterTest.java:93)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:585)\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)\n    at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)\n    at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)\n    at\norg.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:162)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:119)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:112)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:110)\n    at\norg.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:74)\n    at\norg.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:43)\n    at\norg.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)\n    at\norg.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=5_\n", "url": "https://github.com/powermock/powermock/issues/25", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 08:46:55", "closed": "2015-07-23 08:47:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "verify/replay doesn't work properly when mixing classes and instances", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 09, 2008 15:43:12_\n\nverify calls verifyClass which clears the state! We need to refactor\nverifyClass to a new private method that doesn't clear state.\nverify(object...) and verifyClass should call this new method (the old\nverifyClass _should_ clear state though). \n\nThis happens when you do PowerMock.verify(MyClass.class, myInstance,\nmyInstance2); Before myInstance has been verified the PowerMock state has\nbeen cleared.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=4_\n", "url": "https://github.com/powermock/powermock/issues/24", "user": "johanhaleby", "labels": ["Priority:High", "bug", "imported"], "created": "2015-07-23 08:30:29", "closed": "2015-07-23 08:38:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ExpectNew doesn't work properly when throwing exceptions!", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 08, 2008 09:56:10_\n\nMethod looks like:\nprivate Target createDomainTarget(ITarget target, boolean connecting) {\n        Target domainTarget = null;\n        try {\n            domainTarget = new Target(getTargetName(target, connecting),\ntarget.getId());\n        } catch (MyException e) {\n            log.warn(\"Failed to get the target data from service\");\n            domainTarget = new Target(\"Unknown\", -1);\n        }\n        return domainTarget;\n    }\n\ntest looks like:\n\n```\nexpectNew(Target.class).andThrow(new MyException(\"error!\"));\n\n    final String getTargetNameMethodName = \"getTargetName\";\n    tested =\n        mockMethod(ServiceTracker.class, new String[] {\n            getTargetNameMethodName}, mServiceMock,\n```\n\nmAutoOpenDataStreamServiceMock,\n                mDataProviderAddedOrRemovedNotifierMock,\nmTargetAddedOrRemovedNotifierMock);\n\n```\n    final boolean connecting = true;\n    final String expectedTargetName = \"Unknown\";\n    final int expectedId = -1;\n\n    expectPrivate(tested, getTargetNameMethodName, mTargetMock1,\n```\n\nconnecting).andReturn(\"A name\");\n        expect(mTargetMock1.getId()).andReturn(2);\n\n```\n    replayAll();\n\n    Target actual = (Target) Whitebox.invokeMethod(tested,\n```\n\n\"createDomainTarget\", new Class<?>[] {\n            ITarget.class, boolean.class}, mTargetMock1, connecting);\n\n```\n    verifyAll();\n\n    assertEquals(expectedTargetName, actual.getName());\n    assertEquals(expectedId, actual.getId());\n```\n\nCauses error stack:\njava.lang.NullPointerException\n    at\nse.ericsson.eab.sdk.logcoordinator.service.DebugMuxServiceTrackerTest.testCreateDomainTarget_ITarget_fails(DebugMuxServiceTrackerTest.java:545)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n    at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n    at java.lang.reflect.Method.invoke(Method.java:585)\n    at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)\n    at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)\n    at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)\n    at\norg.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)\n    at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)\n    at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:162)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:119)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:112)\n    at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)\n    at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)\n    at\norg.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:110)\n    at\norg.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:74)\n    at\norg.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:43)\n    at\norg.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)\n    at\norg.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)\n    at\norg.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)\n\nThe problem is that when invoking new Target(..) the exception doesn't seem\nto be thrown or at least the execution is not reflected in the code, i.e.\nlog.warn(..) etc is never called. A new target is never created though.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=3_\n", "url": "https://github.com/powermock/powermock/issues/23", "user": "johanhaleby", "labels": ["Priority-Critical", "bug", "imported"], "created": "2015-07-23 08:30:14", "closed": "2015-07-23 08:30:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "LICENSE.txt in PowerMock full jar is not correct", "body": "_From [johan.ha...@gmail.com](https://code.google.com/u/105676376875942041029/) on September 08, 2008 08:56:58_\n\nThe license file is not correct, it indicates BSD License but we use Apache 2.\n\n_Original issue: http://code.google.com/p/powermock/issues/detail?id=2_\n", "url": "https://github.com/powermock/powermock/issues/22", "user": "johanhaleby", "labels": ["Priority:Medium", "bug", "imported"], "created": "2015-07-23 08:30:04", "closed": "2015-07-23 08:30:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PowerMock2 regression - cannot mock <> - loader constraint violation: loader JavassistMockClassLoader previously initiated loading for a different type", "body": "While working on the performance testing for #894, I noticed that powermock 2.0.0-RC.1 cannot mock java.security.cert.X509CertSelector. \r\n\r\nPowermock 1.7.4 succeeds. \r\n\r\n```\r\n# https://github.com/jamesbroadhead/powermock_demo/tree/powermock_x500_bug\r\n$ bazel query //... | xargs bazel test --cache_test_results=no\r\nINFO: Analysed 3 targets (0 packages loaded).\r\nINFO: Found 1 target and 2 test targets...\r\nFAIL: //test/java/com/example:new_powermock_tests (see /private/var/tmp/_bazel_jbo/395368c74923711b7961c1cc955811d0/execroot/__main__/bazel-out/darwin-fastbuild/testlogs/test/java/com/example/new_powermock_tests/test.log)\r\nINFO: Elapsed time: 2.524s, Critical Path: 2.38s\r\nINFO: 2 processes: 2 darwin-sandbox.\r\nINFO: Build completed, 1 test FAILED, 3 total actions\r\n//test/java/com/example:old_powermock_tests                              PASSED in 1.4s\r\n//test/java/com/example:new_powermock_tests                              FAILED in 2.2s\r\n  /private/var/tmp/_bazel_jbo/395368c74923711b7961c1cc955811d0/execroot/__main__/bazel-out/darwin-fastbuild/testlogs/test/java/com/example/new_powermock_tests/test.log\r\n\r\nExecuted 2 out of 2 tests: 1 test passes and 1 fails locally.\r\nINFO: Build completed, 1 test FAILED, 3 total actions\r\n```\r\n\r\n```\r\n$ cat /private/var/tmp/_bazel_jbo/395368c74923711b7961c1cc955811d0/execroot/__main__/bazel-out/darwin-fastbuild/testlogs/test/java/com/example/new_powermock_tests/test.log\r\nexec ${PAGER:-/usr/bin/less} \"$0\" || exit 1\r\nExecuting tests from //test/java/com/example:new_powermock_tests\r\n-----------------------------------------------------------------------------\r\nJUnit4 Test Runner\r\n.E\r\nTime: 1.284\r\nThere was 1 failure:\r\n1) oneTest(com.example.PowerMockTest)\r\njava.lang.LinkageError: loader constraint violation: loader (instance of org/powermock/core/classloader/javassist/JavassistMockClassLoader) previously initiated loading for a different type with name \"javax/security/auth/x500/X500Principal\"\r\n\tat java.lang.ClassLoader.defineClass1(Native Method)\r\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:763)\r\n\tat org.powermock.core.classloader.javassist.JavassistMockClassLoader.loadUnmockedClass(JavassistMockClassLoader.java:90)\r\n\tat org.powermock.core.classloader.MockClassLoader.loadClassByThisClassLoader(MockClassLoader.java:104)\r\n\tat org.powermock.core.classloader.DeferSupportingClassLoader.loadClass1(DeferSupportingClassLoader.java:147)\r\n\tat org.powermock.core.classloader.DeferSupportingClassLoader.loadClass(DeferSupportingClassLoader.java:98)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\tat org.mockito.codegen.X509CertSelector$MockitoMock$556873686.<clinit>(Unknown Source)\r\n\tat sun.reflect.GeneratedSerializationConstructorAccessor4.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator.newInstance(SunReflectionFactoryInstantiator.java:48)\r\n\tat org.objenesis.ObjenesisBase.newInstance(ObjenesisBase.java:73)\r\n\tat org.mockito.internal.creation.instance.ObjenesisInstantiator.newInstance(ObjenesisInstantiator.java:19)\r\n\tat org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:47)\r\n\tat org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(ByteBuddyMockMaker.java:25)\r\n\tat org.powermock.api.mockito.mockmaker.PowerMockMaker.createMock(PowerMockMaker.java:41)\r\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35)\r\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:69)\r\n\tat org.mockito.Mockito.mock(Mockito.java:1895)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.createMethodInvocationControl(DefaultMockCreator.java:108)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.doCreateMock(DefaultMockCreator.java:61)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.createMock(DefaultMockCreator.java:53)\r\n\tat org.powermock.api.mockito.internal.mockcreation.DefaultMockCreator.mock(DefaultMockCreator.java:40)\r\n\tat org.powermock.api.mockito.PowerMockito.mock(PowerMockito.java:126)\r\n\tat com.example.PowerMockTest.oneTest(PowerMockTest.java:17)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.internal.runners.TestMethod.invoke(TestMethod.java:68)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:326)\r\n\tat org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:89)\r\n\tat org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:97)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.executeTest(PowerMockJUnit44RunnerDelegateImpl.java:310)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTestInSuper(PowerMockJUnit47RunnerDelegateImpl.java:131)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.access$100(PowerMockJUnit47RunnerDelegateImpl.java:59)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner$TestExecutorStatement.evaluate(PowerMockJUnit47RunnerDelegateImpl.java:147)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.evaluateStatement(PowerMockJUnit47RunnerDelegateImpl.java:107)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit47RunnerDelegateImpl$PowerMockJUnit47MethodRunner.executeTest(PowerMockJUnit47RunnerDelegateImpl.java:82)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$PowerMockJUnit44MethodRunner.runBeforesThenTestThenAfters(PowerMockJUnit44RunnerDelegateImpl.java:298)\r\n\tat org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:87)\r\n\tat org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:50)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.invokeTestMethod(PowerMockJUnit44RunnerDelegateImpl.java:218)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.runMethods(PowerMockJUnit44RunnerDelegateImpl.java:160)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl$1.run(PowerMockJUnit44RunnerDelegateImpl.java:134)\r\n\tat org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:34)\r\n\tat org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:44)\r\n\tat org.powermock.modules.junit4.internal.impl.PowerMockJUnit44RunnerDelegateImpl.run(PowerMockJUnit44RunnerDelegateImpl.java:136)\r\n\tat org.powermock.modules.junit4.common.internal.impl.JUnit4TestSuiteChunkerImpl.run(JUnit4TestSuiteChunkerImpl.java:117)\r\n\tat org.powermock.modules.junit4.common.internal.impl.AbstractCommonPowerMockRunner.run(AbstractCommonPowerMockRunner.java:57)\r\n\tat org.powermock.modules.junit4.PowerMockRunner.run(PowerMockRunner.java:59)\r\n\tat com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)\r\n\tat com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)\r\n\tat com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)\r\n\r\nFAILURES!!!\r\nTests run: 1,  Failures: 1\r\n\r\n\r\nBazelTestRunner exiting with a return value of 1\r\nJVM shutdown hooks (if any) will run now.\r\nThe JVM will exit once they complete.\r\n\r\n-- JVM shutdown starting at 2018-10-26 23:44:50 --\r\n```", "url": "https://github.com/powermock/powermock/issues/950", "user": "jamesbroadhead", "labels": ["Not an issue", "bug", "regression"], "created": "2018-10-26 23:49:29", "closed": "2018-11-03 17:16:55", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "PowerMock.replayAll does not handle mocks created by annotation processor for `org.easymock.Mock` annotation", "body": "After 1.6.3 PowerMock switched to easy mock annotation processing for `org.easymock.Mock` annotation. As result, mocks are created by EasyMock is not tracked by PowerMock any more. So `PowerMock.replayAll` switch to replay mode only mocks created by PowerMock.  \r\n\r\nExample: \r\n```\r\n\r\n@RunWith(PowerMockRunner.class)\r\npublic class EasyMockAnnotationTest {\r\n    \r\n    @Mock\r\n    private Service serviceMock;\r\n    \r\n    @Test\r\n    public void replayAll_should_switch_to_replay_mode_mocks_created_by_easymock_annotation_processing() {\r\n        expect(serviceMock.getServiceMessage()).andReturn(\"value\");\r\n    \r\n        PowerMock.replayAll();\r\n        \r\n        assertEquals(\"value\", serviceMock.getServiceMessage());\r\n    }\r\n}\r\n\r\n```", "url": "https://github.com/powermock/powermock/issues/849", "user": "thekingn0thing", "labels": ["bug", "component:easymock", "regression"], "created": "2017-09-16 16:41:25", "closed": "2017-09-16 17:37:31", "commits": {"db131bf731c0d8f0806a160c77d180b3270351b2": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "054becfc3ce2ebcc1cb37aaea8b5a62b4eccf204": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "db131bf731c0d8f0806a160c77d180b3270351b2", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "054becfc3ce2ebcc1cb37aaea8b5a62b4eccf204", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["3876b7882700849700cfdc39e805d09ade4ec16f"], "nameRev": "054becfc3ce2ebcc1cb37aaea8b5a62b4eccf204 tags/powermock-1.7.3~1", "commitMessage": "Fixed #849 PowerMock.replayAll does not handle mocks created by annotation processor for `org.easymock.Mock` annotation\n", "commitDateTime": "2017-09-16 19:37:30", "authoredDateTime": "2017-09-16 18:55:10", "commitGitStats": [{"filePath": "gradle/publishing/publishable-module.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/AnnotationEnabler.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "powermock-reflect/src/main/java/org/powermock/reflect/Whitebox.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "powermock-reflect/src/main/java/org/powermock/reflect/internal/WhiteboxImpl.java", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "tests/easymock/junit412/src/{test/java/samples/junit412 => main/java/samples/junit412/bug}/github668/IncidentPropertyChangeDAO.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/{ => bug}/github668/TwoMockFieldsWithDifferentTypesClass.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/{ => bug}/github668/TwoMockFieldsWithSameTypeCase.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/{ => bug}/github668/package-info.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github849/EasyMockAnnotationTest.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github849/package-info.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/github668/Github668Test.java", "insertions": 0, "deletions": 11, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AnnotationEnabler.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.AnnotationEnabler.registerAllCreatedMocks(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.extension.listener.AnnotationEnabler.beforeTestMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Whitebox.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.Whitebox.getFieldValue(java.lang.reflect.Field,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WhiteboxImpl.java", "spoonMethods": [{"spoonMethodName": "org.powermock.reflect.internal.WhiteboxImpl.getFieldValue(java.lang.reflect.Field,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IncidentPropertyChangeDAO.java", "spoonMethods": []}, {"spoonFilePath": "TwoMockFieldsWithDifferentTypesClass.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass.mockClassShouldInjected()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass.shouldBeAbleMockMethodsOfInjected()", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TwoMockFieldsWithSameTypeCase.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithSameTypeCase", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithSameTypeCase.mockClassShouldInjected()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit412.github668.TwoMockFieldsWithSameTypeCase.shouldBeAbleMockMethodsOfInjected()", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}, {"spoonFilePath": "EasyMockAnnotationTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.bug.github849.EasyMockAnnotationTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Github668Test.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.github668.Github668Test", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["054becfc3ce2ebcc1cb37aaea8b5a62b4eccf204"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 35.0, "deletions": 4.0, "lines": 39.0, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 37.0, "UPD": 33.0, "INS": 4.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["powermock-reflect/src/main/java/org/powermock/reflect/internal", "powermock-reflect/src/main/java/org/powermock/reflect", "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener", "gradle/publishing", "tests/easymock/junit412/src/{test/java/samples/junit412 => main/java/samples"], "changesInPackagesSPOON": ["org.powermock.api.extension.listener.AnnotationEnabler.registerAllCreatedMocks(java.lang.Object)", "org.powermock.api.extension.listener.AnnotationEnabler.beforeTestMethod(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass.shouldBeAbleMockMethodsOfInjected()", "samples.junit412.github668.TwoMockFieldsWithSameTypeCase", "org.powermock.reflect.internal.WhiteboxImpl.getFieldValue(java.lang.reflect.Field,java.lang.Object)", "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass", "samples.junit412.github668.TwoMockFieldsWithSameTypeCase.mockClassShouldInjected()", "samples.junit412.github668.TwoMockFieldsWithSameTypeCase.shouldBeAbleMockMethodsOfInjected()", "samples.junit412.github668.TwoMockFieldsWithDifferentTypesClass.mockClassShouldInjected()", "org.powermock.reflect.Whitebox.getFieldValue(java.lang.reflect.Field,java.lang.Object)"]}, {"title": "Exception verification in junit tests", "body": "**What steps will reproduce the problem?**\r\n```\r\n@Test(expected = NotFoundException.class)\r\npublic void a() {\r\n    doThrow(NotFoundException.class).when(b).doSomething();\r\n    b.doSomething();\r\n}\r\n```\r\n**What is the expected output?**\r\nTest to pass\r\n**What do you see instead?**\r\nTest failure, throws RuntimeExceptionProxy instead of NotFoundException\r\n**What version of the product are you using?**\r\n1.7.0RC4\r\n**On what operating system?**\r\nmacOS 10.12.5\r\n**Please provide any additional information below.** \r\nI believe the issue is with this change:\r\nhttps://github.com/powermock/powermock/commit/a89e8e5760f57c6d1b92b9049a44d43da92150da#diff-d9ef7e539426f80c697a03a7f7e2c8e9R25\r\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/806", "user": "yrmk", "labels": ["bug", "regression"], "created": "2017-06-07 20:20:10", "closed": "2017-06-08 20:42:20", "commits": {"eddff90019b2e870165aaff3bc7065c01bc5877f": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "00d4b43271f903b955177689ade7261f122d7e45": {"commitGHEventType": "closed", "commitUser": "thekingn0thing"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "eddff90019b2e870165aaff3bc7065c01bc5877f", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "00d4b43271f903b955177689ade7261f122d7e45", "commitGHEventType": "closed", "commitUser": "thekingn0thing", "commitParents": ["9193ddd69bb5788de60a8abf7328ea2c466ee0f6"], "nameRev": "00d4b43271f903b955177689ade7261f122d7e45 tags/powermock-1.7.0~8", "commitMessage": "Fix #806 Exception verification in junit tests\nAdd test to verify issue.\n", "commitDateTime": "2017-06-08 22:42:16", "authoredDateTime": "2017-06-08 22:22:15", "commitGitStats": [{"filePath": "tests/mockito/junit4/src/main/java/samples/powermockito/junit4/bugs/github806/CustomException.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "tests/mockito/junit4/src/main/java/samples/powermockito/junit4/bugs/github806/DoThrowTMockClass.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github806/DoThrowTest.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "tests/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github806/package-info.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CustomException.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github806.CustomException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DoThrowTMockClass.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github806.DoThrowTMockClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DoThrowTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github806.DoThrowTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["00d4b43271f903b955177689ade7261f122d7e45"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 54.0, "deletions": 0.0, "lines": 54.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["tests/mockito/junit4/src/main/java/samples/powermockito/junit4/bugs"], "changesInPackagesSPOON": ["samples.powermockito.junit4.bugs.github806.CustomException", "samples.powermockito.junit4.bugs.github806.DoThrowTMockClass"]}, {"title": "@Mock annotation from easymock api does not work for two fields of the same type.", "body": "Hi,\r\n\r\nif we have a simple test class like below\r\n\r\n```\r\nimport static org.junit.Assert.assertNotNull;\r\n\r\nimport org.junit.Test;\r\nimport org.junit.runner.RunWith;\r\nimport org.powermock.api.easymock.annotation.Mock;\r\nimport org.powermock.modules.junit4.PowerMockRunner;\r\n\r\n@RunWith(PowerMockRunner.class)\r\npublic class TwoObjectsAnnotatedTest {\r\n\r\n    @Mock\r\n    private String obj1;\r\n    \r\n    @Mock\r\n    private String obj2;\r\n    \r\n    @Test\r\n    public void test() {\r\n        assertNotNull(obj1);\r\n        assertNotNull(obj2);\r\n    }\r\n\r\n}\r\n\r\n```\r\nthen both assertions fail. We noticed that whenever two fields of the same type are annotated with \r\n`org.powermock.api.easymock.annotation.Mock`\r\n\r\nIf we remove first one or change to\r\n\r\n`private String obj1 = createMock(String.class);` \r\n\r\nthen it works as expected. We encountered that when migrating from \r\n\r\njdk7 + easymock 3.3 + powermock 1.6.1\r\n\r\nto \r\n\r\njdk8 + easymock 3.4 + powermock 1.6.6\r\n\r\nOS is: Linux *** 4.4.0-62-generic 83-Ubuntu SMP Wed Jan 18 14:10:15 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\nDoes any workaround exist besides replacing annotation with \r\n`org.powermock.api.easymock.PowerMock.createMock()`\r\n?\r\n\r\nUPDATE: it seems to be similar to #668 but I checked and it works for a third field as long as it has different type (I checked for 3 fields - 2 x String and 1 x Integer - and strings do not work but integer does).", "url": "https://github.com/powermock/powermock/issues/755", "user": "ksiczek", "labels": ["Resolved", "bug", "component:easymock", "regression"], "created": "2017-02-16 14:18:17", "closed": "2017-09-15 22:16:30", "commits": {"81d473ef7a6522ab27c16b269e6606519db141ec": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "37b7e5bd17202f8043ec4f81eebfd550bf5f2c63": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "decadf3b5ee3adaa43017afa123d9f8b541b3a5e": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "86f4ac3191f523ffb00b0603f8a9d02dc92e2ece": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 211.00027777777777, "commitsDetails": [{"commitHash": "81d473ef7a6522ab27c16b269e6606519db141ec", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "37b7e5bd17202f8043ec4f81eebfd550bf5f2c63", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["a9f82fb26dba5d69729a9757f23b28e6fe851a26"], "nameRev": "37b7e5bd17202f8043ec4f81eebfd550bf5f2c63 tags/powermock-1.7.2~1", "commitMessage": "Fixed #755 @Mock annotation from easymock api does not work for two fields of the same type.\n", "commitDateTime": "2017-09-16 00:16:29", "authoredDateTime": "2017-09-15 23:33:25", "commitGitStats": [{"filePath": ".gitignore", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/AnnotationMockMetadata.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/DefaultInjectFieldSearcher.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/MockMetadata.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "tests/easymock/junit4/src/test/java/samples/junit4/annotationbased/TestSubjectPowermockAnnotationTest.java", "insertions": 5, "deletions": 13, "lines": 18}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github755/TwoObjectsAnnotatedTest.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github755/package-info.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AnnotationMockMetadata.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.AnnotationMockMetadata", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.extension.listener.AnnotationMockMetadata.getFieldName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultInjectFieldSearcher.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.DefaultInjectFieldSearcher.filterByFieldName(java.util.Set,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.extension.listener.DefaultInjectFieldSearcher.findField(java.lang.Object,org.powermock.api.extension.listener.MockMetadata)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockMetadata.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.getFieldName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSubjectPowermockAnnotationTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.testInjectDemoQualifier()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.testInjectDemoSay()", "TOT": 11, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 2}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.injectMocksWorksWithPowermockMockWithQualifier()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.injectMocksWorksWithPowermockMock()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.should_inject_mock_without_quantifier()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TwoObjectsAnnotatedTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.bug.github755.TwoObjectsAnnotatedTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "decadf3b5ee3adaa43017afa123d9f8b541b3a5e", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "86f4ac3191f523ffb00b0603f8a9d02dc92e2ece", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["2f7f356aec42433e9826ce76255faf1cf14bffc8"], "nameRev": "86f4ac3191f523ffb00b0603f8a9d02dc92e2ece tags/powermock-2.0.0-beta.2~1", "commitMessage": "Fixed #755 @Mock annotation from easymock api does not work for two fields of the same type.\n", "commitDateTime": "2017-09-16 20:52:32", "authoredDateTime": "2017-09-15 23:33:25", "commitGitStats": [{"filePath": ".gitignore", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/AnnotationMockMetadata.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/DefaultInjectFieldSearcher.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener/MockMetadata.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "tests/easymock/junit4/src/test/java/samples/junit4/annotationbased/TestSubjectPowermockAnnotationTest.java", "insertions": 5, "deletions": 13, "lines": 18}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github755/TwoObjectsAnnotatedTest.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "tests/easymock/junit412/src/test/java/samples/junit412/bug/github755/package-info.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AnnotationMockMetadata.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.AnnotationMockMetadata", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.extension.listener.AnnotationMockMetadata.getFieldName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultInjectFieldSearcher.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.DefaultInjectFieldSearcher.filterByFieldName(java.util.Set,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.powermock.api.extension.listener.DefaultInjectFieldSearcher.findField(java.lang.Object,org.powermock.api.extension.listener.MockMetadata)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MockMetadata.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.extension.listener.getFieldName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestSubjectPowermockAnnotationTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.testInjectDemoQualifier()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.testInjectDemoSay()", "TOT": 11, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 2}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.injectMocksWorksWithPowermockMockWithQualifier()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.injectMocksWorksWithPowermockMock()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "samples.junit4.annotationbased.TestSubjectPowermockAnnotationTest.should_inject_mock_without_quantifier()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TwoObjectsAnnotatedTest.java", "spoonMethods": [{"spoonMethodName": "samples.junit412.bug.github755.TwoObjectsAnnotatedTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["37b7e5bd17202f8043ec4f81eebfd550bf5f2c63"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 24.0, "deletions": 3.0, "lines": 27.0, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 7.0, "UPD": 0.0, "INS": 7.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["powermock-api/powermock-api-easymock/src/main/java/org/powermock/api/extension/listener", ".gitignore"], "changesInPackagesSPOON": ["org.powermock.api.extension.listener.DefaultInjectFieldSearcher.findField(java.lang.Object,org.powermock.api.extension.listener.MockMetadata)", "org.powermock.api.extension.listener.DefaultInjectFieldSearcher.filterByFieldName(java.util.Set,java.lang.String)", "org.powermock.api.extension.listener.AnnotationMockMetadata.getFieldName()", "org.powermock.api.extension.listener.getFieldName()", "org.powermock.api.extension.listener.AnnotationMockMetadata"]}, {"title": "Powermockito: withAnyArguments", "body": "Hello,\r\n\r\nwhen moving from version 1.6.5 to 1.6.6 all tests fail which are using the withAnyArguments inside of \"whenNew\". Proxy objects aren't created any more and stay null which results in NullPointerExceptions.\r\n\r\nRgds,\r\nMarkus\r\n\r\n\r\n<!---\r\n@huboard:{\"order\":697.930206979302,\"milestone_order\":716,\"custom_state\":\"\"}\n-->\r\n", "url": "https://github.com/powermock/powermock/issues/716", "user": "blacksmithbrew", "labels": ["Priority:High", "bug", "regression"], "created": "2016-11-08 15:16:00", "closed": "2016-11-12 08:49:03", "commits": {"e4e4fc0fbf911c5248f82fb3fd18d9a6f2215dae": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}, "92ef1146ee05691e95dbda62d26abd18e2a76fbd": {"commitGHEventType": "referenced", "commitUser": "thekingn0thing"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "e4e4fc0fbf911c5248f82fb3fd18d9a6f2215dae", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "92ef1146ee05691e95dbda62d26abd18e2a76fbd", "commitGHEventType": "referenced", "commitUser": "thekingn0thing", "commitParents": ["0fb0fe0eee37d306a57de730a8deab1e8b866ff5"], "nameRev": "92ef1146ee05691e95dbda62d26abd18e2a76fbd tags/powermock-1.7.0RC2~19", "commitMessage": "Fix #716 Powermockito: withAnyArguments\nfor case when one of actual parameter is null\n", "commitDateTime": "2016-11-12 09:49:02", "authoredDateTime": "2016-11-11 13:38:33", "commitGitStats": [{"filePath": "api/mockito-common/src/main/java/org/powermock/api/mockito/internal/expectation/AbstractConstructorExpectationSetup.java", "insertions": 1, "deletions": 19, "lines": 20}, {"filePath": "api/mockito-common/src/main/java/org/powermock/api/mockito/internal/expectation/LocalizedMatcherAdapter.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DefaultConstructorExpectationSetup.java", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "api/mockito/src/main/java/org/powermock/api/mockito/internal/expectation/DefaultLocalizedMatcherAdapter.java", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "api/mockito2/src/main/java/org/powermock/api/mockito/internal/expectation/DefaultConstructorExpectationSetup.java", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "api/mockito2/src/main/java/org/powermock/api/mockito/internal/expectation/DefaultLocalizedMatcherAdapter.java", "insertions": 0, "deletions": 23, "lines": 23}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/A.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/B.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/C.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/MyService.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/WhenNewWithAnyArgumentsTest.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "modules/module-test/mockito/junit4/src/test/java/samples/powermockito/junit4/bugs/github716/package-info.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractConstructorExpectationSetup.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.createNewSubstituteMock(java.lang.Class,java.lang.Class[],java.lang.Object[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.expectSubstitutionLogic(org.powermock.core.spi.NewInvocationControl,java.lang.Object[])", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.getMatcherAdapters(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LocalizedMatcherAdapter.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.expectation", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DefaultConstructorExpectationSetup.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.expectation.DefaultConstructorExpectationSetup.getMatcherAdapters(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DefaultLocalizedMatcherAdapter.java", "spoonMethods": [{"spoonMethodName": "org.powermock.api.mockito.internal.expectation.DefaultLocalizedMatcherAdapter", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "A.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github716.A", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "B.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github716.B", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "C.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github716.C", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MyService.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github716.MyService", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WhenNewWithAnyArgumentsTest.java", "spoonMethods": [{"spoonMethodName": "samples.powermockito.junit4.bugs.github716.WhenNewWithAnyArgumentsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "package-info.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["92ef1146ee05691e95dbda62d26abd18e2a76fbd"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 95.0, "lines": 96.0, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 13.0, "UPD": 0.0, "INS": 4.0, "MOV": 1.0, "DEL": 8.0, "spoonFilesChanged": 8, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["api/mockito/src/main/java/org/powermock/api/mockito/internal", "api/mockito-common/src/main/java/org/powermock/api/mockito/internal", "api/mockito2/src/main/java/org/powermock/api/mockito/internal"], "changesInPackagesSPOON": ["samples.powermockito.junit4.bugs.github716.A", "org.powermock.api.mockito.internal.expectation.DefaultConstructorExpectationSetup.getMatcherAdapters(java.util.List)", "samples.powermockito.junit4.bugs.github716.MyService", "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup", "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.createNewSubstituteMock(java.lang.Class,java.lang.Class[],java.lang.Object[])", "org.powermock.api.mockito.internal.expectation.DefaultLocalizedMatcherAdapter", "org.powermock.api.mockito.internal.expectation", "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.getMatcherAdapters(java.util.List)", "samples.powermockito.junit4.bugs.github716.C", "org.powermock.api.mockito.internal.expectation.AbstractConstructorExpectationSetup.expectSubstitutionLogic(org.powermock.core.spi.NewInvocationControl,java.lang.Object[])", "samples.powermockito.junit4.bugs.github716.B"]}]}