{"projectName": "libgdx/libgdx", "bugLabels": ["bug"], "captureTime": "Sat Jul  4 15:43:31 2020", "issues": [{"title": "ArrayIndexOutOfBoundsException at AndroidMultiTouchHandler", "body": "#### Issue details\r\nFrom time to time I see this crash reported on my live wallpaper apps. It is impossible for me to reproduce.\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\n1.9.10\r\n\r\n#### Stacktrace\r\n```\r\nFatal Exception: java.lang.ArrayIndexOutOfBoundsException: length=20; index=20\r\n       at com.badlogic.gdx.backends.android.AndroidMultiTouchHandler.onTouch(AndroidMultiTouchHandler.java:90)\r\n       at com.badlogic.gdx.backends.android.AndroidInput.onTouch(AndroidInput.java:460)\r\n       at com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine.onTouchEvent(AndroidLiveWallpaperService.java:521)\r\n       at android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper.executeMessage(WallpaperService.java:1404)\r\n       at com.android.internal.os.HandlerCaller$MyHandler.handleMessage(HandlerCaller.java:37)\r\n       at android.os.Handler.dispatchMessage(Handler.java:112)\r\n       at android.os.Looper.loop(Looper.java:216)\r\n       at android.app.ActivityThread.main(ActivityThread.java:7625)\r\n       at java.lang.reflect.Method.invoke(Method.java)\r\n       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:524)\r\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:987)nTC-I0EOPv-wWck3RUbSCS8HgSGqFCI8roz\r\n```\r\n#### Please select the affected platforms\r\n- [X] Android\r\n\r\nIt looks like the problem resides in [this line](https://github.com/libgdx/libgdx/blob/0d5021844c4f8e555f5ccb570ba3a07488c25dff/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidMultiTouchHandler.java#L90) where it seems that the input.realId.length is bigger than input.pressure.length while they must be equal (but I can be wrong). Thanks for your support.\r\n\r\n", "url": "https://github.com/libgdx/libgdx/issues/5870", "user": "ArdiDev", "labels": ["bug"], "created": "2019-12-25 09:50:30", "closed": "2020-01-09 13:30:03", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "Problem with getPitch() and getRoll()", "body": "#### Details\r\nWhen I set euler angles (0, 0, 90) on quaternion, and try to get this angles, the program returns (0, 90, 0).\r\nIs this the normal behavior of the program? Can be this fixed?\r\n\r\nThe problem appears only when the angles are (0, 0, 90). If you make angles like (0, 45, 90), it works fine.\r\nsetEulerAngles() applies angles to the object correctly.\r\n\r\nI run the program on Linux Mint 18.2 Sonya\r\n\r\n#### Code:\r\n```java\r\nSystem.out.println(\"libgdx version: \" + Version.VERSION);\r\nQuaternion rotation = new Quaternion();\r\nrotation.setEulerAngles(0, 0, 90);\r\nSystem.out.println(rotation.getYaw() + \"; \" + rotation.getPitch() + \"; \" + rotation.getRoll());\r\n```\r\n\r\n#### This code after execution displays in my console:\r\n```\r\nlibgdx version: 1.9.6\r\n0.0; 90.0; 0.0\r\n```\r\n", "url": "https://github.com/libgdx/libgdx/issues/4919", "user": "Silobrlst", "labels": ["bug"], "created": "2017-10-08 05:07:59", "closed": "2019-02-12 16:47:33", "commits": {}, "ttf": 492.0002777777778, "commitsDetails": []}, {"title": "iOS sounds are muted after a timer/incoming call", "body": "The issue was probably introduced with iOS 10.\r\n\r\nSounds, that are obtained from Gdx.audio.newSound() become silent when:\r\n1) a timer popup is shown\r\n2) after an incoming call\r\n\r\nMusic, obtained from Gdx.audio.newMusic() plays as normal.\r\n\r\n#### Reproduction steps/code\r\nSet the timer to 1 minute. Return to your game and play. When you see the timer popup, all sounds become muted.\r\n\r\nOr, make an incoming call from another phone, while you are playing.\r\n\r\nTo hear sounds again, you need to restart the app:\r\n- Press the \"home\" button twice, swipe away your app. Restart it again.\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nI only tried 1.9.4 with robovm. I didn't have much time to familiarize with MOE yet...\r\n\r\n#### Please select the affected platforms\r\n- [X] iOS (robovm)\r\n- [not tested] iOS (MOE)\r\n", "url": "https://github.com/libgdx/libgdx/issues/4429", "user": "serhii-k", "labels": ["bug", "ios"], "created": "2016-11-19 15:15:08", "closed": "2016-12-10 18:11:49", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "Labels don't wrap in the correct position with markup enabled", "body": "\r\n#### Issue details\r\nIf markup is used to changed the colour of a word that is at a wrap boundary then the word will not wrap correctly and the label will spill out of the bounds of the table that it is contained in. This increases the width of the layout and causes text to be cut off or drawn in the wrong place.\r\n\r\nI've tested combinations of opening and closing the colour markup as well as different colours and the consistently reproducible thing is that if the word after the colour change needed to wrap then it will not. (even with a space between the markup and the word).\r\n\r\n#### Reproduction steps/code\r\nNote in the example below if the [GREEN] tag is moved one word before or after its current position then all the text will wrap correctly and fit within the table as it should. \r\n```\r\npublic class TextWrapping extends ApplicationAdapter {\r\n\r\n    Stage activeStage;\r\n\r\n    @Override\r\n    public void create() {\r\n        activeStage = new Stage(new FillViewport(640, 480));\r\n        BitmapFont font = new BitmapFont();\r\n        font.getData().markupEnabled = true;\r\n        Table stageContentTable = new Table();\r\n        stageContentTable.setFillParent(true);\r\n        Label l = new Label(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris ut lacus maximus, [GREEN]volutpat ex vel, tempor leo. Vivamus elit risus, iaculis at ante vel, commodo mattis tellus. Etiam ac tempor quam, quis aliquet nisl. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis nisl velit, scelerisque sed ultricies ornare, ultrices non tortor. Duis justo magna, dapibus quis accumsan a, tristique eu metus. Vestibulum pellentesque lobortis ante, vel maximus odio ultricies ut. Sed lobortis cursus sem, a facilisis ex volutpat in. Pellentesque id libero quis ipsum euismod ullamcorper sit amet at enim. Donec sed dictum ex.\"\r\n                + \"Donec dignissim felis et malesuada egestas. Vivamus vel fringilla lorem. Mauris accumsan eget turpis non volutpat. Nunc facilisis laoreet mauris, scelerisque aliquet lacus eleifend eu. Integer id dignissim purus. Nunc dignissim commodo venenatis. Nullam massa mauris, elementum at rutrum sit amet, lacinia ut arcu. Quisque non nibh eget justo ornare maximus. Vestibulum finibus mi augue, eu gravida purus pulvinar ut. In fringilla dignissim suscipit.\"\r\n                + \"Fusce vitae massa consequat, finibus mauris id, efficitur nunc. Praesent nec orci quis sem euismod viverra. Vivamus non lacus nec ante consequat blandit sed sit amet purus. Mauris orci diam, interdum sit amet ipsum et, vestibulum varius sem. Integer ornare tortor id tortor varius, a varius sem volutpat. Suspendisse hendrerit condimentum tincidunt. Sed pellentesque vitae tellus sed efficitur. Etiam sodales lorem tellus, at dictum mauris pellentesque et. In vitae scelerisque nisl. Proin semper ante et quam volutpat, faucibus gravida felis consequat. Quisque ac urna mollis, scelerisque est et, venenatis risus. Etiam ac volutpat nibh.\", new Label.LabelStyle(font, Color.WHITE));\r\n        l.setWrap(true);\r\n        stageContentTable.add(l).top().left().width(560);\r\n        stageContentTable.setDebug(true, true);\r\n        activeStage.addActor(stageContentTable);\r\n    }\r\n\r\n    @Override\r\n    public void render() {\r\n        Gdx.gl.glClearColor(0.5f, 0.5f, 0.5f, 1);\r\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\r\n        activeStage.act();\r\n        activeStage.draw();\r\n    }\r\n}\r\n```\r\n\r\n#### Version of LibGDX and/or relevant dependencies\r\nTested on 1.9.4\r\n\r\n\r\n\r\n#### Please select the affected platforms\r\nShows on all platforms.\r\n\r\n**With the colour tag before a word that should wrap.**\r\n\r\n![screenshot from 2016-11-17 16-11-33](https://cloud.githubusercontent.com/assets/817657/20374920/87394700-ace0-11e6-86f1-b3c1c562c75f.png)\r\n\r\n**With the colour tag before a word that does not need to wrap**\r\n![screenshot from 2016-11-17 16-11-08](https://cloud.githubusercontent.com/assets/817657/20374926/8bdaf86c-ace0-11e6-9f45-68be7f8cdb35.png)\r\n\r\n", "url": "https://github.com/libgdx/libgdx/issues/4425", "user": "DigNZ", "labels": ["bug", "scene2d"], "created": "2016-11-17 03:07:11", "closed": "2018-05-31 04:12:20", "commits": {"9a7dfdff3c6374a5ebd2f33a819982aceb287dfa": {"commitGHEventType": "closed", "commitUser": "NathanSweet"}}, "ttf": 560.0002777777778, "commitsDetails": [{"commitHash": "9a7dfdff3c6374a5ebd2f33a819982aceb287dfa", "commitGHEventType": "closed", "commitUser": "NathanSweet", "commitParents": ["fbabb466e87b2e67ddba27f3efdcb77be4a26aee"], "nameRev": "9a7dfdff3c6374a5ebd2f33a819982aceb287dfa tags/gdx-parent-1.9.9~160", "commitMessage": "BitmapFontData#getGlyphs now takes last glyph in a previous run for better glyph layout.\n\ncloses #4425\ncloses #4192\n#3455\n", "commitDateTime": "2018-05-31 06:13:38", "authoredDateTime": "2018-05-31 06:08:07", "commitGitStats": [{"filePath": "CHANGES", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "insertions": 7, "deletions": 10, "lines": 17}, {"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java", "insertions": 24, "deletions": 8, "lines": 32}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/LabelTest.java", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FreeTypeFontGenerator.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeBitmapFontData.getGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout.GlyphRun,java.lang.CharSequence,int,int,boolean)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BitmapFont.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.getGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout.GlyphRun,java.lang.CharSequence,int,int,boolean)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 3}]}, {"spoonFilePath": "GlyphLayout.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.GlyphLayout.truncate(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,float,java.lang.String,int,com.badlogic.gdx.utils.Pool)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.GlyphLayout.setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.Color,float,int,boolean,java.lang.String)", "TOT": 26, "UPD": 1, "INS": 11, "MOV": 8, "DEL": 6}]}, {"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BitmapFontTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.BitmapFontTest.render()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "LabelTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.LabelTest.create()", "TOT": 12, "UPD": 0, "INS": 10, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Fix for getPosition() on OpenALMusic", "body": "Please ensure you have given all the following requested information in your report.\n#### Issue details\n\nAfter trying to sync some music on desktop, I found out that music.getPosition() does not always return accurate values. This is due to the field \"renderedSeconds\" being set to 0 once there isn't data to be put on one of the buffer, even with the other two buffers still not processed.\n#### Reproduction steps/code\n\nThe music being used for this example was .wav, 10s long, 16bit, 44100Hz, mono --> 10s_2bytes_44100Hz = 882000 bytes of music. It was set to loop and, on the first loop, the method music.getPosition() did not go all the way to 10s, instead only went to 9.287981859s before going back to 0, and here is why: \n\nThe class OpenALMusic uses three byte buffers of maximum size 40960 bytes each to transfer data to the audio device. In this example it is needed 21 buffers of size 40960 bytes and 1 of size 21840 bytes to pass all the 882000 bytes of music data on each loop. The problem is that a parameter that gives the information on music.getPosition() is reset once there is no data on ONE of the buffers, not all three.\n\nIn this example: the last three buffers sizes of the loop are: 1-40960 bytes; 2-40960 bytes; 3-21840 bytes. Once the first buffer is completely processed, the music is reset, taking music.getPosition() to 0 again, but there still was (40960+21840)bytes = 0.712018141s of data before the end of the loop.\n\nThe following code snippet is from OpenALMusic. The update() method calls fill(int bufferID) and resets renderedSeconds to 0 once there isn't data to be put on one of the three buffers, leading to a value of 0 being returned from getPosition() before the end of the loop.\n\n``` java\npublic float getPosition () {\n      if (audio.noDevice) return 0;\n      if (sourceID == -1) return 0;\n      return renderedSeconds + alGetSourcef(sourceID, AL11.AL_SEC_OFFSET);\n   }\n\npublic void update () {\n      if (audio.noDevice) return;\n      if (sourceID == -1) return;\n\n      boolean end = false;\n      int buffers = alGetSourcei(sourceID, AL_BUFFERS_PROCESSED);\n      while (buffers-- > 0) {\n         int bufferID = alSourceUnqueueBuffers(sourceID);\n         if (bufferID == AL_INVALID_VALUE) break;\n         renderedSeconds += secondsPerBuffer;\n         if (end) continue;\n         if (fill(bufferID))\n            alSourceQueueBuffers(sourceID, bufferID);\n         else\n            end = true;\n      }\n      if (end && alGetSourcei(sourceID, AL_BUFFERS_QUEUED) == 0) {\n         stop();\n         if (onCompletionListener != null) onCompletionListener.onCompletion(this);\n      }\n\n      // A buffer underflow will cause the source to stop.\n      if (isPlaying && alGetSourcei(sourceID, AL_SOURCE_STATE) != AL_PLAYING) alSourcePlay(sourceID);\n   }\n\nprivate boolean fill (int bufferID) {\n      tempBuffer.clear();\n      int length = read(tempBytes);\n      if (length <= 0) {\n         if (isLooping) {\n            loop();\n            renderedSeconds = 0;\n            length = read(tempBytes);\n            if (length <= 0) return false;\n         } else\n            return false;\n      }\n      tempBuffer.put(tempBytes, 0, length).flip();\n      alBufferData(bufferID, format, tempBuffer, sampleRate);\n      return true;\n   }\n```\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.4\n#### Stacktrace\n\n``` java\n//Please provide the stacktrace if applicable \n```\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS (robovm)\n- [ ] iOS (MOE)\n- [ ] HTML/GWT\n- [X] Windows\n- [X] Linux\n- [X] MacOS\n", "url": "https://github.com/libgdx/libgdx/issues/4268", "user": "riqueaalves", "labels": ["bug", "desktop"], "created": "2016-08-24 07:14:29", "closed": "2017-09-04 16:59:29", "commits": {"b0e71b000c978c179b17c9bfa8175b69d4029468": {"commitGHEventType": "closed", "commitUser": "Tom-Ski"}}, "ttf": 376.0002777777778, "commitsDetails": [{"commitHash": "b0e71b000c978c179b17c9bfa8175b69d4029468", "commitGHEventType": "closed", "commitUser": "Tom-Ski", "commitParents": ["8c02c296d2991ee6e8bdc327af062dd33ece02f6"], "nameRev": "b0e71b000c978c179b17c9bfa8175b69d4029468 tags/gdx-parent-1.9.7~30^2", "commitMessage": "improve OpenALMusic getPosition accuracy fix #4268 (#4659)\n\n* improve OpenALMusic getPosition accuracy fix #4268\r\n\r\n* format source with eclipse formatter\r\n", "commitDateTime": "2017-09-04 17:59:23", "authoredDateTime": "2017-09-04 18:59:23", "commitGitStats": [{"filePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/audio/OpenALMusic.java", "insertions": 23, "deletions": 8, "lines": 31}, {"filePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/audio/OpenALMusic.java", "insertions": 23, "deletions": 8, "lines": 31}, {"filePath": "tests/gdx-tests-android/assets/data/8.12.loop.wav", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/MusicTest.java", "insertions": 48, "deletions": 3, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OpenALMusic.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.lwjgl3.audio.OpenALMusic", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.lwjgl3.audio.OpenALMusic.setup(int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.lwjgl3.audio.OpenALMusic.setPosition(float)", "TOT": 8, "UPD": 2, "INS": 3, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.backends.lwjgl3.audio.OpenALMusic.update()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.backends.lwjgl3.audio.OpenALMusic.fill(int)", "TOT": 12, "UPD": 0, "INS": 6, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "MusicTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.MusicTest.create().1.changed(com.badlogic.gdx.tests.ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.tests.MusicTest", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.tests.MusicTest.Song", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.tests.MusicTest.setSong(com.badlogic.gdx.tests.MusicTest$Song)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.tests.MusicTest.create()", "TOT": 10, "UPD": 0, "INS": 8, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "BitmapFont can't load files with spaces in the name", "body": "#### Issue details\n\nUsing BitmapFont with spaces in the path raises an exception.\n#### Reproduction steps/code\n\nDownload [font.zip](https://github.com/libgdx/libgdx/files/378695/font.zip)\n\n``` java\nimport com.badlogic.gdx.*;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.GL20;\n\npublic class Barebones extends ApplicationAdapter {\n    public void create () {\n        FileHandle path = files.internal(\"font/DejaVu Sans (test).fnt\");\n        System.out.println(path.exists());\n        BitmapFont font = BitmapFont(path);\n    }\n\n    public void render () {\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n    }\n\n    public static void main (String[] args) throws Exception {\n        new LwjglApplication(new Barebones());\n    }\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.4-SNAPSHOT\n\nJava: 8 (64bit)\n#### Stacktrace\n\n``` java\ntrue\nException in thread \"LWJGL Application\" com.badlogic.gdx.utils.GdxRuntimeException: Couldn't load file: font/\"DejaVu\n    at com.badlogic.gdx.graphics.Pixmap.<init>(Pixmap.java:148)\n    at com.badlogic.gdx.graphics.TextureData$Factory.loadFromFile(TextureData.java:98)\n    at com.badlogic.gdx.graphics.Texture.<init>(Texture.java:100)\n    at com.badlogic.gdx.graphics.Texture.<init>(Texture.java:96)\n    at com.badlogic.gdx.graphics.g2d.BitmapFont.<init>(BitmapFont.java:164)\n    at com.badlogic.gdx.graphics.g2d.BitmapFont.<init>(BitmapFont.java:142)\n    at com.badlogic.gdx.graphics.g2d.BitmapFont.<init>(BitmapFont.java:114)\n    at com.badlogic.gdx.graphics.g2d.BitmapFont.<init>(BitmapFont.java:107)\n    at com.something.game.Barebones.create(Barebones.java:32)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:147)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:124)\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: File not found: font/\"GNU (Internal)\n    at com.badlogic.gdx.files.FileHandle.read(FileHandle.java:136)\n    at com.badlogic.gdx.files.FileHandle.readBytes(FileHandle.java:222)\n    at com.badlogic.gdx.graphics.Pixmap.<init>(Pixmap.java:145)\n    ... 10 more\n```\n#### Please select the affected platforms\n\nUbuntu 16.04 / 64bit, but likely all platforms when `BitmapFont` is used.\n", "url": "https://github.com/libgdx/libgdx/issues/4201", "user": "CreamyCookie", "labels": ["bug"], "created": "2016-07-22 16:23:39", "closed": "2016-12-04 16:00:09", "commits": {"7420bd0f5111b73e2f1b9c5393640adfbc4aadbb": {"commitGHEventType": "closed", "commitUser": "NathanSweet"}}, "ttf": 134.00027777777777, "commitsDetails": [{"commitHash": "7420bd0f5111b73e2f1b9c5393640adfbc4aadbb", "commitGHEventType": "closed", "commitUser": "NathanSweet", "commitParents": ["8305a84e5574b53c12bcf4d321ae0f50d8b7b41d"], "nameRev": "7420bd0f5111b73e2f1b9c5393640adfbc4aadbb tags/1.9.5~12", "commitMessage": "Fixed BMFont file name parsing.\n\ncloses #4201\n", "commitDateTime": "2016-12-04 16:37:28", "authoredDateTime": "2016-12-04 16:37:28", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "insertions": 11, "deletions": 13, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BitmapFont.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.load(com.badlogic.gdx.files.FileHandle,boolean)", "TOT": 23, "UPD": 5, "INS": 7, "MOV": 4, "DEL": 7}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7420bd0f5111b73e2f1b9c5393640adfbc4aadbb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 13, "lines": 24, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 23, "UPD": 5, "INS": 7, "MOV": 4, "DEL": 7, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.load(com.badlogic.gdx.files.FileHandle,boolean)"]}, {"title": "Color markup causes text to be display in wrong position, and does not escape properly", "body": "#### Issue details\n\nWhen using color markup, each subsequent block after a colored block is offset to the left compared to unstyled text.\n\nAdditionally, the markup escape code `[[` does not correctly cause the markup to be ignored if a closing bracket follows after a word which happens to be a valid color.\n\n![libgdxcolormarkup](https://cloud.githubusercontent.com/assets/1232124/16882909/68a9b026-4a8f-11e6-9150-241e3017b3b8.png)\n#### Reproduction steps/code\n\n``` java\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\n\npublic class ColorRenderingMain extends ApplicationAdapter {\n    static final String TEXT_PLAIN = \"AAA BBB CCC DDD EEE\";\n    static final String TEXT_COLOR = \"[RED]AAA [BLUE]BBB [RED]CCC [BLUE]DDD [RED]EEE\";\n    static final String TEXT_ESCAPE = \"[[ORANGE]Escaped, but is colored\";\n\n    SpriteBatch batch;\n    BitmapFont font;\n\n    public void create () {\n        batch = new SpriteBatch();\n        font = new BitmapFont();\n        font.setColor(Color.BLACK);\n\n        font.getData().markupEnabled = true;        \n    }\n\n    public void render () {\n        Gdx.gl.glClearColor(1, 1, 1, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n\n        batch.begin();\n        font.draw(batch, TEXT_PLAIN, 5, Gdx.graphics.getHeight() - 5);\n        font.draw(batch, TEXT_COLOR, 5, Gdx.graphics.getHeight() - 20);\n        font.draw(batch, TEXT_ESCAPE, 5, Gdx.graphics.getHeight() - 35);\n        batch.end();\n    }\n\n    public static void main (String[] args) throws Exception {\n        new LwjglApplication(new ColorRenderingMain());\n    }\n}\n```\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.3\n#### Please select the affected platforms\n\nI've only tested this on windows.\n- [x] Windows\n", "url": "https://github.com/libgdx/libgdx/issues/4192", "user": "Nickardson", "labels": ["bug"], "created": "2016-07-15 17:26:40", "closed": "2018-05-31 04:12:20", "commits": {"bdd9a4e11b2d9438f79bd97fce375ebef3c4f3ff": {"commitGHEventType": "referenced", "commitUser": "NathanSweet"}, "beeef537dd7f76c72e124a5be674cd0c3b2b76f6": {"commitGHEventType": "referenced", "commitUser": "DavidPDev"}, "9a7dfdff3c6374a5ebd2f33a819982aceb287dfa": {"commitGHEventType": "closed", "commitUser": "NathanSweet"}}, "ttf": 684.0002777777778, "commitsDetails": [{"commitHash": "bdd9a4e11b2d9438f79bd97fce375ebef3c4f3ff", "commitGHEventType": "referenced", "commitUser": "NathanSweet", "commitParents": ["f239e6c5eb4a2b48e39c72134e52a578b7c6b1dc"], "nameRev": "bdd9a4e11b2d9438f79bd97fce375ebef3c4f3ff tags/1.9.4~8", "commitMessage": "GlyphLayout, fixed [[ not being escaped when followed by color name.\n\n#4192\n", "commitDateTime": "2016-08-07 03:23:45", "authoredDateTime": "2016-08-07 03:23:45", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GlyphLayout.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.GlyphLayout.parseColorMarkup(java.lang.CharSequence,int,int,com.badlogic.gdx.utils.Pool)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.GlyphLayout.setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.Color,float,int,boolean,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "beeef537dd7f76c72e124a5be674cd0c3b2b76f6", "commitGHEventType": "referenced", "commitUser": "DavidPDev", "commitParents": ["c2d2313717e90081f79eff7a982f601723be3777"], "nameRev": "beeef537dd7f76c72e124a5be674cd0c3b2b76f6 tags/gdx-parent-1.9.9~188^2~3", "commitMessage": "Many GlyphLayout fixes. BitmapFont#getSpaceWidth changed to BitmapFont#getSpaceXadvance.\n\ncloses #5198\n", "commitDateTime": "2018-05-05 02:00:21", "authoredDateTime": "2018-05-05 02:00:21", "commitGitStats": [{"filePath": "CHANGES", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "insertions": 12, "deletions": 11, "lines": 23}, {"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java", "insertions": 111, "deletions": 80, "lines": 191}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FreeTypeFontGenerator.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BitmapFont.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFont.getSpaceWidth()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.setScale(float,float)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.load(com.badlogic.gdx.files.FileHandle,boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.getGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout.GlyphRun,java.lang.CharSequence,int,int,boolean)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.getWrapIndex(com.badlogic.gdx.utils.Array,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GlyphLayout.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.GlyphLayout.wrap(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,com.badlogic.gdx.utils.Pool,int,int)", "TOT": 24, "UPD": 8, "INS": 7, "MOV": 6, "DEL": 3}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.GlyphLayout.setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.Color,float,int,boolean,java.lang.String)", "TOT": 71, "UPD": 11, "INS": 13, "MOV": 44, "DEL": 3}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.GlyphLayout.adjustLastGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9a7dfdff3c6374a5ebd2f33a819982aceb287dfa", "commitGHEventType": "closed", "commitUser": "NathanSweet", "commitParents": ["fbabb466e87b2e67ddba27f3efdcb77be4a26aee"], "nameRev": "9a7dfdff3c6374a5ebd2f33a819982aceb287dfa tags/gdx-parent-1.9.9~160", "commitMessage": "BitmapFontData#getGlyphs now takes last glyph in a previous run for better glyph layout.\n\ncloses #4425\ncloses #4192\n#3455\n", "commitDateTime": "2018-05-31 06:13:38", "authoredDateTime": "2018-05-31 06:08:07", "commitGitStats": [{"filePath": "CHANGES", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "insertions": 7, "deletions": 10, "lines": 17}, {"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java", "insertions": 24, "deletions": 8, "lines": 32}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/LabelTest.java", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FreeTypeFontGenerator.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeBitmapFontData.getGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout.GlyphRun,java.lang.CharSequence,int,int,boolean)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BitmapFont.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.getGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout.GlyphRun,java.lang.CharSequence,int,int,boolean)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 3}]}, {"spoonFilePath": "GlyphLayout.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.GlyphLayout.truncate(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,float,java.lang.String,int,com.badlogic.gdx.utils.Pool)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.GlyphLayout.setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.Color,float,int,boolean,java.lang.String)", "TOT": 26, "UPD": 1, "INS": 11, "MOV": 8, "DEL": 6}]}, {"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BitmapFontTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.BitmapFontTest.render()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "LabelTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.LabelTest.create()", "TOT": 12, "UPD": 0, "INS": 10, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bdd9a4e11b2d9438f79bd97fce375ebef3c4f3ff", "beeef537dd7f76c72e124a5be674cd0c3b2b76f6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 130, "deletions": 95, "lines": 225, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 119, "UPD": 31, "INS": 25, "MOV": 55, "DEL": 8, "spoonFilesChanged": 3, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx", "extensions"], "changesInPackagesSPOON": ["com.badlogic.gdx.graphics.g2d.GlyphLayout.setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.Color,float,int,boolean,java.lang.String)", "com.badlogic.gdx.graphics.g2d.BitmapFont.getSpaceWidth()", "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.getGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout.GlyphRun,java.lang.CharSequence,int,int,boolean)", "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData", "com.badlogic.gdx.graphics.g2d.GlyphLayout.adjustLastGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun)", "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.getWrapIndex(com.badlogic.gdx.utils.Array,int)", "com.badlogic.gdx.graphics.g2d.GlyphLayout.parseColorMarkup(java.lang.CharSequence,int,int,com.badlogic.gdx.utils.Pool)", "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.load(com.badlogic.gdx.files.FileHandle,boolean)", "com.badlogic.gdx.graphics.g2d.GlyphLayout.wrap(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout$GlyphRun,com.badlogic.gdx.utils.Pool,int,int)", "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.setScale(float,float)", "com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)"]}, {"title": "Distance Field Font renders certain characters with improper padding", "body": "#### Issue details\n\nWhen rendering text on screen using Distance Field Fonts as described in the tutorial, some letters have the wrong padding. I tried this with multiple fonts and they all had this problem. The last one I tried was Arial Black with the same settings in Hiero as described in this tutorial: [https://github.com/libgdx/libgdx/wiki/Distance-field-fonts](https://github.com/libgdx/libgdx/wiki/Distance-field-fonts)\n\nI noticed the problem always seemed to be with the same letters, like with the letter 'j' in this case \n![6e03375d772b45e243484ccb470a10e2](https://cloud.githubusercontent.com/assets/15983269/15627771/4e6147c8-24f7-11e6-9ce0-957ba645e51f.png)\n\nAs you can see, the first 'i' after the 'j' is too close. I tried this again with another font (\"Roboto\") and it still had the same problem with the same settings. Note that this problem persisted regardless of my settings or my font.\n![524f56d475893268c3385e2572cda93e](https://cloud.githubusercontent.com/assets/15983269/15627781/aa5fc77a-24f7-11e6-9c91-fba943575bd5.png)\n#### Reproduction steps/code\n\nHere is the code I used. This code was compiled using IntelliJ and Gradle, with LibGDX version 1.6.2 and 1.9.3, the result was the same regardless of the LibGDX version.\n\n``` java\npackage com.mygdx.game;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.TextureRegion;\nimport com.badlogic.gdx.graphics.glutils.ShaderProgram;\n\npublic class MyGdxGame extends ApplicationAdapter\n{\n    SpriteBatch batch;\n    BitmapFont font;\n    ShaderProgram fontShader;\n\n    @Override public void create ()\n    {\n        Texture text = new Texture(Gdx.files.internal(\"test.png\"));\n        text.setFilter(Texture.TextureFilter.Linear, Texture.TextureFilter.Linear);\n\n        batch = new SpriteBatch();\n        font = new BitmapFont(Gdx.files.internal(\"test\" + \".fnt\"), new TextureRegion(text), false);\n        font.setColor(Color.BLACK);\n        font.getData().setScale(3);\n        fontShader = new ShaderProgram(Gdx.files.internal(\"font.vert\"), Gdx.files.internal(\"font.frag\"));\n    }\n\n    @Override\n    public void render ()\n    {\n        Gdx.gl.glClearColor(1, 1, 1, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.setShader(fontShader);\n        batch.begin();\n\n        font.draw(batch, \"jii\", 0, 100);\n        batch.end();\n    }\n}\n```\n#### Please select the affected platforms\n- [X] Android\n- [X] iOS\n- [X] HTML/GWT\n- [X] Windows\n- [X] Linux\n- [X] MacOS\n", "url": "https://github.com/libgdx/libgdx/issues/4106", "user": "SasLuca", "labels": ["bug"], "created": "2016-05-28 14:19:04", "closed": "2016-12-04 15:47:07", "commits": {}, "ttf": 190.00027777777777, "commitsDetails": []}, {"title": "Lwjgl3 multi window cursor crash", "body": "#### Issue details\n\nSetting a cursor in multiwindow Lwjgl3 app will cause a native crash when multiple windows are disposed. Clearing the map from after the cursors are disposed sounds like a correct solution.\n#### Reproduction steps/code\n\nhttps://gist.github.com/piotr-j/6724fe74f41ab340235e\n#### Version of LibGDX and/or relevant dependencies\n\n1.9.2+\n#### Stacktrace\n\n``` java\nj  org.lwjgl.glfw.GLFW.glfwDestroyCursor(J)V+20\nj  com.badlogic.gdx.backends.lwjgl3.Lwjgl3Cursor.disposeAll()V+62\nj  com.badlogic.gdx.backends.lwjgl3.Lwjgl3Graphics.dispose()V+7\nj  com.badlogic.gdx.backends.lwjgl3.Lwjgl3Window.dispose()V+22\nj  com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.cleanup()V+28\nj  com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.<init>(Lcom/badlogic/gdx/ApplicationListener;Lcom/badlogic/gdx/backends/lwjgl3/Lwjgl3ApplicationConfiguration;)V+250\nj  com.mygdx.game.MyGdxGame.main([Ljava/lang/String;)V+20\n```\n#### Please select the affected platforms\n- [ ] Android\n- [ ] iOS\n- [ ] HTML/GWT\n- [x] Windows\n- [x] Linux\n- [x] MacOS\n", "url": "https://github.com/libgdx/libgdx/issues/3880", "user": "piotr-j", "labels": ["LWJGL3", "bug"], "created": "2016-02-26 14:08:43", "closed": "2016-02-28 15:12:55", "commits": {"9e858c91e1ece13e06f5b0d959385c696a34e974": {"commitGHEventType": "closed", "commitUser": "code-disaster"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "9e858c91e1ece13e06f5b0d959385c696a34e974", "commitGHEventType": "closed", "commitUser": "code-disaster", "commitParents": ["e042782a9156dc48d7ee8cff9b0765db9396aa0b"], "nameRev": "9e858c91e1ece13e06f5b0d959385c696a34e974 tags/1.9.3~13^2~25", "commitMessage": "Fixed crash on shutdown when using Lwjgl3 system cursors and multiple windows. Fixes #3880.\n", "commitDateTime": "2016-02-26 16:08:07", "authoredDateTime": "2016-02-26 16:06:32", "commitGitStats": [{"filePath": "backends/gdx-backend-lwjgl3/src/com/badlogic/gdx/backends/lwjgl3/Lwjgl3Cursor.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Lwjgl3Cursor.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.lwjgl3.Lwjgl3Cursor.disposeAll()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9e858c91e1ece13e06f5b0d959385c696a34e974"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.lwjgl3.Lwjgl3Cursor.disposeAll()"]}, {"title": "Controller is added twice on the Controllers Array in LWJGL3", "body": "The same Controller instance is added twice on the Controllers Array after an ingame connection.\n\nLibGDX version = 1.9.2\nOS = Windows 10 x64\ngdx-backend-lwjgl3\n\nHow to reproduce:\n1. Run the app with the controller connected\n2. Disconnect the controller from the USB port\n3. Reconnect the controller to the USB port\n\nCode:\n\n``` java\npackage com.mygdx.game;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.controllers.Controller;\nimport com.badlogic.gdx.controllers.ControllerListener;\nimport com.badlogic.gdx.controllers.Controllers;\nimport com.badlogic.gdx.controllers.PovDirection;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.math.Vector3;\n\npublic class MyGdxGame extends ApplicationAdapter implements ControllerListener {\n\n    @Override\n    public void create () {\n\n        Controllers.addListener(this);\n\n        // Start the app with the controller connected\n        Gdx.app.log(\"Test\", \"Init - Number of controllers = \" + Controllers.getControllers().size);\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(0, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n    }\n\n    @Override\n    public void connected(Controller controller) {\n\n        // Reconnect controller to the USB port\n        Gdx.app.log(\"Test\", \"Controller connected\");\n        Gdx.app.log(\"Test\", \"Number of controllers = \" + Controllers.getControllers().size);\n\n        for(int i = 0; i < Controllers.getControllers().size; i++) {\n            Controller c = Controllers.getControllers().get(i);\n            Gdx.app.log(\"Test\", \"Controller name = \" + c.getName());\n        }\n\n        if(Controllers.getControllers().get(0) == Controllers.getControllers().get(1)) {\n            Gdx.app.log(\"Test\", \"Same object\");\n        }\n        else {\n            Gdx.app.log(\"Test\", \"Different object\");\n        }\n    }\n\n    @Override\n    public void disconnected(Controller controller) {\n\n        // Disconnect controller from the USB port\n        Gdx.app.log(\"Test\", \"Controller disconnected\");\n        Gdx.app.log(\"Test\", \"Number of controllers = \" + Controllers.getControllers().size);\n    }\n\n    @Override\n    public boolean buttonDown(Controller controller, int buttonCode) {\n        return false;\n    }\n\n    @Override\n    public boolean buttonUp(Controller controller, int buttonCode) {\n        return false;\n    }\n\n    @Override\n    public boolean axisMoved(Controller controller, int axisCode, float value) {\n        return false;\n    }\n\n    @Override\n    public boolean povMoved(Controller controller, int povCode, PovDirection value) {\n        return false;\n    }\n\n    @Override\n    public boolean xSliderMoved(Controller controller, int sliderCode, boolean value) {\n        return false;\n    }\n\n    @Override\n    public boolean ySliderMoved(Controller controller, int sliderCode, boolean value) {\n        return false;\n    }\n\n    @Override\n    public boolean accelerometerMoved(Controller controller, int accelerometerCode, Vector3 value) {\n        return false;\n    }\n}\n```\n\nOutput:\n\n```\nTest: Init - Number of controllers = 1\nTest: Controller disconnected\nTest: Number of controllers = 0\nTest: Controller connected\nTest: Number of controllers = 2\nTest: Controller name = Microsoft PC-joystick driver\nTest: Controller name = Microsoft PC-joystick driver\nTest: Same object\n```\n\nBut I only connected one controller to the USB port.\n", "url": "https://github.com/libgdx/libgdx/issues/3844", "user": "viniciuspjardim", "labels": ["LWJGL3", "bug"], "created": "2016-02-14 00:23:45", "closed": "2016-02-14 19:58:36", "commits": {"63e1cae330bd3c7c9d72d976c2cf9042fb4c3f1a": {"commitGHEventType": "referenced", "commitUser": "code-disaster"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "63e1cae330bd3c7c9d72d976c2cf9042fb4c3f1a", "commitGHEventType": "referenced", "commitUser": "code-disaster", "commitParents": ["1cd332d4022612dc665ca3edbe3800e9493b9d36"], "nameRev": "63e1cae330bd3c7c9d72d976c2cf9042fb4c3f1a tags/1.9.3~11^2~5", "commitMessage": "Fixed controller added twice when connected, see #3844\n", "commitDateTime": "2016-02-14 20:44:10", "authoredDateTime": "2016-02-14 20:44:10", "commitGitStats": [{"filePath": "extensions/gdx-controllers/gdx-controllers-lwjgl3/src/com/badlogic/gdx/controllers/lwjgl3/Lwjgl3ControllerManager.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Lwjgl3ControllerManager.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.controllers.lwjgl3.Lwjgl3ControllerManager.pollState()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["63e1cae330bd3c7c9d72d976c2cf9042fb4c3f1a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 1, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["extensions"], "changesInPackagesSPOON": ["com.badlogic.gdx.controllers.lwjgl3.Lwjgl3ControllerManager.pollState()"]}, {"title": "GWT isButtonPressed is wrong.", "body": "After trying right button calls it just check for left button.  It will always return true if you check if button is left first. \n\nhttps://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtInput.java#L170 \n", "url": "https://github.com/libgdx/libgdx/issues/3766", "user": "xpenatan", "labels": ["bug", "gwt"], "created": "2016-01-23 15:54:10", "closed": "2016-01-23 20:24:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Lifecycle listener not called when a Timer is used", "body": "The [Timer.TimerThread](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/utils/Timer.java#L289) class removes itself as listener in the `dispose` method, which is called in an [enhanced for loop](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java#L477-L479) in `AndroidGraphics` . This causes the next lifecycle listener in the array not to be called.\n", "url": "https://github.com/libgdx/libgdx/issues/3758", "user": "xoppa", "labels": ["bug"], "created": "2016-01-22 09:10:19", "closed": "2020-06-04 07:18:26", "commits": {"3dd5f59a9d98564edecd5f8ec64624b9abe1e2c2": {"commitGHEventType": "referenced", "commitUser": "xoppa"}}, "ttf": 1594.0002777777777, "commitsDetails": [{"commitHash": "3dd5f59a9d98564edecd5f8ec64624b9abe1e2c2", "commitGHEventType": "referenced", "commitUser": "xoppa", "commitParents": ["926767148b3801b468daaa8615d89f2fae379026"], "nameRev": "3dd5f59a9d98564edecd5f8ec64624b9abe1e2c2 tags/1.9.0~8^2~2", "commitMessage": "Use SnapshotArray for LifecycleListeners on Lwjgl and Android, see #3758\n", "commitDateTime": "2016-01-23 21:56:08", "authoredDateTime": "2016-01-23 21:56:08", "commitGitStats": [{"filePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplicationBase.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidDaydream.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidFragmentApplication.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidGraphics.java", "insertions": 17, "deletions": 12, "lines": 29}, {"filePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidLiveWallpaper.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java", "insertions": 16, "deletions": 9, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidApplication.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidApplication", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidApplication.getLifecycleListeners()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AndroidApplicationBase.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.android.getLifecycleListeners()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AndroidDaydream.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidDaydream", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidDaydream.getLifecycleListeners()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AndroidFragmentApplication.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidFragmentApplication", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidFragmentApplication.getLifecycleListeners()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AndroidGraphics.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidGraphics.onDrawFrame(javax.microedition.khronos.opengles.GL10)", "TOT": 27, "UPD": 12, "INS": 7, "MOV": 5, "DEL": 3}]}, {"spoonFilePath": "AndroidLiveWallpaper.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidLiveWallpaper", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidLiveWallpaper.getLifecycleListeners()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LwjglApplication.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.LwjglApplication", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop()", "TOT": 19, "UPD": 4, "INS": 9, "MOV": 3, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3dd5f59a9d98564edecd5f8ec64624b9abe1e2c2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 47, "deletions": 30, "lines": 77, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 61, "UPD": 31, "INS": 16, "MOV": 8, "DEL": 6, "spoonFilesChanged": 7, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.android.AndroidLiveWallpaper", "com.badlogic.gdx.backends.android.AndroidDaydream.getLifecycleListeners()", "com.badlogic.gdx.backends.android.AndroidDaydream", "com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop()", "com.badlogic.gdx.backends.android.AndroidApplication", "com.badlogic.gdx.backends.android.AndroidLiveWallpaper.getLifecycleListeners()", "com.badlogic.gdx.backends.android.AndroidApplication.getLifecycleListeners()", "com.badlogic.gdx.backends.android.AndroidFragmentApplication.getLifecycleListeners()", "com.badlogic.gdx.backends.android.AndroidFragmentApplication", "com.badlogic.gdx.backends.android.getLifecycleListeners()", "com.badlogic.gdx.backends.android.AndroidGraphics.onDrawFrame(javax.microedition.khronos.opengles.GL10)", "com.badlogic.gdx.backends.lwjgl.LwjglApplication"]}, {"title": "lwjgl linux; liblwjgl.so: wrong ELF class: ELFCLASS32", "body": "Using 1.8.0, old LWJGL works fine, but I can't get new one to start.\n\nThe liblwjgl.so under /tmp is 32 bit, though the one under target/natives is 64 bit. (I tried manually replacing it, but it's recreated each time as far as I can tell).\n\n```\nJava HotSpot(TM) 64-Bit Server VM warning: You have loaded library /tmp/libgdxjunkdog/1c78875b/liblwjgl.so which might have disabled stack guard. The VM will try to fix the stack guard now.\nIt's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.\nException in thread \"main\" java.lang.UnsatisfiedLinkError: /tmp/libgdxjunkdog/1c78875b/liblwjgl.so: /tmp/libgdxjunkdog/1c78875b/liblwjgl.so: wrong ELF class: ELFCLASS32 (Possible cause: architecture word width mismatch)\n    at java.lang.ClassLoader$NativeLibrary.load(Native Method)\n    at java.lang.ClassLoader.loadLibrary0(ClassLoader.java:1929)\n    at java.lang.ClassLoader.loadLibrary(ClassLoader.java:1814)\n    at java.lang.Runtime.load0(Runtime.java:809)\n    at java.lang.System.load(System.java:1083)\n    at org.lwjgl.system.Library$1.load(Library.java:25)\n    at org.lwjgl.system.Library$1.load(Library.java:22)\n    at org.lwjgl.system.Library.loadLibrary(Library.java:196)\n    at org.lwjgl.system.Library.loadSystem(Library.java:90)\n    at org.lwjgl.system.Library.<clinit>(Library.java:48)\n    at org.lwjgl.system.MemoryUtil.<clinit>(MemoryUtil.java:56)\n    at org.lwjgl.system.libffi.Closure.<clinit>(Closure.java:57)\n    at com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.initializeGlfw(Lwjgl3Application.java:64)\n    at com.badlogic.gdx.backends.lwjgl3.Lwjgl3Application.<init>(Lwjgl3Application.java:73)\n    at se.feomedia.map.MapApplicationDesktopNoSwing.main(MapApplicationDesktopNoSwing.java:21)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\n```\n", "url": "https://github.com/libgdx/libgdx/issues/3704", "user": "junkdog", "labels": ["LWJGL3", "bug"], "created": "2016-01-06 15:17:10", "closed": "2016-12-10 18:30:45", "commits": {}, "ttf": 339.0002777777778, "commitsDetails": []}, {"title": "Wiki pages that need to be updated due to LWJGL3 breaking things", "body": "- [x] https://github.com/libgdx/libgdx/wiki/Fullscreen-%26-vsync \n- [ ] https://github.com/libgdx/libgdx/wiki/Starter-classes-%26-configuration\n- [x] https://github.com/libgdx/libgdx/wiki/Take-a-Screenshot\n- [x] https://github.com/libgdx/libgdx/wiki/Controllers\n- [x] https://github.com/libgdx/libgdx/wiki/Cursor-visibility-%26-catching\n\nAll of those pages are outdated due to LWJGL3.\n- [x] https://github.com/libgdx/libgdx/wiki/Configuration-%26-querying\n\nThis page is also outdated, see #3594 (Addition of Gyroscope). We should also add an extra wiki page for the Gyroscope.\n", "url": "https://github.com/libgdx/libgdx/issues/3700", "user": "intrigus", "labels": ["LWJGL3", "bug"], "created": "2016-01-05 21:50:29", "closed": "2016-12-10 18:32:02", "commits": {}, "ttf": 339.0002777777778, "commitsDetails": []}, {"title": "Gdx class has static reference to Activity", "body": "Hey guys, \nI see that onCreate and onResume of AndroidApplication https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidApplication.java#L164 the instance of current activity is saved as a static field in Gdx class. \n\nThis would be causing a memory leak. I couldn't find any issues in issue tracker regarding this. \n\nShould we remove the reference in onDestroy/orPause ourselves?\n", "url": "https://github.com/libgdx/libgdx/issues/3579", "user": "vashisthg", "labels": ["android", "bug"], "created": "2015-11-19 08:33:34", "closed": "2016-03-20 23:12:37", "commits": {}, "ttf": 122.00027777777778, "commitsDetails": []}, {"title": "Gdx.input.justTouched() not working correctly on iOS", "body": "Hi, using Gdx.input.justTouched() on iOS will recognize only the first touch, all other touchs (second finger & co.) will not be recognized.\n\nAn example:\n\n```\nfor(int i = 0; i < 5; i++) {\n    if(Gdx.input.isTouched(i)) {\n        // This is recognized correctly for all the fingers\n        if(Gdx.input.justTouched()) {\n            // This is true only with the first finger, if i am keep touching the screen with the first finger and i touch antoher point of the screen with another finger is not recognized\n        }\n    }\n}\n```\n\nOn Android is working correctly for all the touch/fingers.\n", "url": "https://github.com/libgdx/libgdx/issues/3568", "user": "brisma", "labels": ["bug", "ios"], "created": "2015-11-16 10:29:08", "closed": "2016-12-10 18:36:49", "commits": {}, "ttf": 390.0002777777778, "commitsDetails": []}, {"title": "black belt at the bottom of the screen - immersive mode, portrait mode, nexus device, android 6.0 bug", "body": "I have found a bug in libgdx:\n# Steps to reproduce\n1. You have to have nexus device, that does have on screen buttons (tested on nexus 5 and nexus 9), device must be running Android 6.0 (app worked correctly in previous versions)\n2. Create fresh new project (can be only andorid, no need for ios, desktop or html)\n3. edit AndoridLauncher.java, add folowing comfig: `config.useImmersiveMode = true;` to enable \"full screen mode\"\n4. Set app to be portrait rather than landscape (In AndoridManifest.xml, set: `android:screenOrientation=\"portrait\"`)\n5. Build & Deploy\n6. Start app -> **App runs fine** -> _App runs fine only on first start_\n7. Exit app by pressing back button twice\n8. Start app again\n9. There is **black belt at the bottom of the screen** as shown in screenshot)\n\n![screenshot_20151022-083547](https://cloud.githubusercontent.com/assets/15046120/10658606/d101e7ac-7898-11e5-952c-5a368b9f9e10.png)\n\nAditional info:\n- belt can be removed by going out of the app and back into (middle button)\n- belt can be removed by going to app switcher and back into the app\n- our app is still in the development, therefore I cannot give you link to the play store to test it, but we have observed same problem with https://play.google.com/store/apps/details?id=com.freaxator.game100balls which presumably uses libgdx framework. \n- I have used latest gdx-setup.jar and latest LibGDX 1.7.0\n# Logs\n\nThis is log of first startup (no black belt)\n\n> 10-22 09:04:45.451 17959-17959/? I/art: Late-enabling -Xcheck:jni\n> 10-22 09:04:45.484 17959-17965/? I/art: Debugger is no longer active\n> 10-22 09:04:45.533 17959-17959/? I/Adreno-EGL: <qeglDrvAPI_eglInitialize:379>: QUALCOMM Build: 09/02/15, 76f806e, Ibddc658e36\n> 10-22 09:04:45.665 17959-17959/? I/AndroidInput: sensor listener setup\n> 10-22 09:04:45.673 17959-17982/? D/OpenGLRenderer: Use EGL_SWAP_BEHAVIOR_PRESERVED: true\n> 10-22 09:04:45.715 17959-17982/? I/Adreno-EGL: <qeglDrvAPI_eglInitialize:379>: QUALCOMM Build: 09/02/15, 76f806e, Ibddc658e36\n> 10-22 09:04:45.715 17959-17982/? I/OpenGLRenderer: Initialized EGL, version 1.4\n> 10-22 09:04:45.746 17959-17978/? W/GL2JNIView: creating OpenGL ES 2.0 context\n> 10-22 09:04:45.761 17959-17978/? I/GL2: all initialized 2\n> 10-22 09:04:45.761 17959-17978/? I/AndroidGraphics: OGL renderer: Adreno (TM) 330\n> 10-22 09:04:45.761 17959-17978/? I/AndroidGraphics: OGL vendor: Qualcomm\n> 10-22 09:04:45.762 17959-17978/? I/AndroidGraphics: OGL version: OpenGL ES 3.0 V@127.0 AU@  (GIT@Ibddc658e36)\n> 10-22 09:04:45.762 17959-17978/? I/AndroidGraphics: OGL extensions: GL_AMD_compressed_ATC_texture GL_AMD_performance_monitor GL_AMD_program_binary_Z400 GL_EXT_debug_label GL_EXT_debug_marker GL_EXT_discard_framebuffer GL_EXT_robustness GL_EXT_texture_format_BGRA8888 GL_EXT_texture_type_2_10_10_10_REV GL_NV_fence GL_OES_compressed_ETC1_RGB8_texture GL_OES_depth_texture GL_OES_depth24 GL_OES_EGL_image GL_OES_EGL_sync GL_OES_EGL_image_external GL_OES_element_index_uint GL_OES_fbo_render_mipmap GL_OES_fragment_precision_high GL_OES_get_program_binary GL_OES_packed_depth_stencil GL_OES_depth_texture_cube_map GL_OES_rgb8_rgba8 GL_OES_standard_derivatives GL_OES_texture_3D GL_OES_texture_float GL_OES_texture_half_float GL_OES_texture_half_float_linear GL_OES_texture_npot GL_OES_vertex_half_float GL_OES_vertex_type_10_10_10_2 GL_OES_vertex_array_object GL_QCOM_alpha_test GL_QCOM_binning_control GL_QCOM_driver_control GL_QCOM_perfmon_global_mode GL_QCOM_extended_get GL_QCOM_extended_get2 GL_QCOM_tiled_rendering GL_QCOM_writeonly_rendering GL_EXT_sRGB GL_EXT_sRGB_write_control GL_EXT_texture_sRGB_decode GL_EXT_texture_filter_anisotropic GL_EXT_multisampled_render_to_texture GL_EXT_color_buffer_float > GL_EXT_color_buffer_half_float GL_EXT_disjoint_timer_query \n> 10-22 09:04:45.763 17959-17978/? W/Adreno-EGL: <qeglDrvAPI_eglGetConfigAttrib:607>: EGL_BAD_ATTRIBUTE\n> 10-22 09:04:45.763 17959-17978/? W/Adreno-EGL: <qeglDrvAPI_eglGetConfigAttrib:607>: EGL_BAD_ATTRIBUTE\n> 10-22 09:04:45.763 17959-17978/? I/AndroidGraphics: framebuffer: (5, 6, 5, 0)\n> 10-22 09:04:45.763 17959-17978/? I/AndroidGraphics: depthbuffer: (16)\n> 10-22 09:04:45.763 17959-17978/? I/AndroidGraphics: stencilbuffer: (0)\n> 10-22 09:04:45.763 17959-17978/? I/AndroidGraphics: samples: (0)\n> 10-22 09:04:45.763 17959-17978/? I/AndroidGraphics: coverage sampling: (false)\n> 10-22 09:04:45.767 17959-17978/? I/AndroidGraphics: Managed meshes/app: { }\n> 10-22 09:04:45.767 17959-17978/? I/AndroidGraphics: Managed textures/app: { }\n> 10-22 09:04:45.767 17959-17978/? I/AndroidGraphics: Managed cubemap/app: { }\n> 10-22 09:04:45.767 17959-17978/? I/AndroidGraphics: Managed shaders/app: { }\n> 10-22 09:04:45.767 17959-17978/? I/AndroidGraphics: Managed buffers/app: { }\n\nThis is log of second startup (bug, black belt)\n\n> 10-22 09:02:41.778 15895-15895/? I/art: Late-enabling -Xcheck:jni\n> 10-22 09:02:41.866 15895-15895/com.mygdx.game.android I/Adreno-EGL: <qeglDrvAPI_eglInitialize:379>: QUALCOMM Build: 09/02/15, 76f806e, Ibddc658e36\n> 10-22 09:02:42.004 15895-15895/com.mygdx.game.android I/AndroidInput: sensor listener setup\n> 10-22 09:02:42.010 15895-15936/com.mygdx.game.android D/OpenGLRenderer: Use EGL_SWAP_BEHAVIOR_PRESERVED: true\n> 10-22 09:02:42.052 15895-15936/com.mygdx.game.android I/Adreno-EGL: <qeglDrvAPI_eglInitialize:379>: QUALCOMM Build: 09/02/15, 76f806e, Ibddc658e36\n> 10-22 09:02:42.052 15895-15936/com.mygdx.game.android I/OpenGLRenderer: Initialized EGL, version 1.4\n> 10-22 09:02:42.072 15895-15930/com.mygdx.game.android W/GL2JNIView: creating OpenGL ES 2.0 context\n> 10-22 09:02:42.085 15895-15930/com.mygdx.game.android I/GL2: all initialized 2\n> 10-22 09:02:42.086 15895-15930/com.mygdx.game.android I/AndroidGraphics: OGL renderer: Adreno (TM) 330\n> 10-22 09:02:42.086 15895-15930/com.mygdx.game.android I/AndroidGraphics: OGL vendor: Qualcomm\n> 10-22 09:02:42.086 15895-15930/com.mygdx.game.android I/AndroidGraphics: OGL version: OpenGL ES 3.0 V@127.0 AU@  (GIT@Ibddc658e36)\n> 10-22 09:02:42.086 15895-15930/com.mygdx.game.android I/AndroidGraphics: OGL extensions: GL_AMD_compressed_ATC_texture GL_AMD_performance_monitor GL_AMD_program_binary_Z400 GL_EXT_debug_label GL_EXT_debug_marker GL_EXT_discard_framebuffer GL_EXT_robustness GL_EXT_texture_format_BGRA8888 GL_EXT_texture_type_2_10_10_10_REV GL_NV_fence GL_OES_compressed_ETC1_RGB8_texture GL_OES_depth_texture GL_OES_depth24 GL_OES_EGL_image GL_OES_EGL_sync GL_OES_EGL_image_external GL_OES_element_index_uint GL_OES_fbo_render_mipmap GL_OES_fragment_precision_high GL_OES_get_program_binary GL_OES_packed_depth_stencil GL_OES_depth_texture_cube_map GL_OES_rgb8_rgba8 GL_OES_standard_derivatives GL_OES_texture_3D GL_OES_texture_float GL_OES_texture_half_float GL_OES_texture_half_float_linear GL_OES_texture_npot GL_OES_vertex_half_float GL_OES_vertex_type_10_10_10_2 GL_OES_vertex_array_object GL_QCOM_alpha_test GL_QCOM_binning_control GL_QCOM_driver_control GL_QCOM_perfmon_global_mode GL_QCOM_extended_get GL_QCOM_extended_get2 GL_QCOM_tiled_rendering GL_QCOM_writeonly_rendering GL_EXT_sRGB GL_EXT_sRGB_write_control GL_EXT_texture_sRGB_decode GL_EXT_texture_filter_anisotropic GL_EXT_multisampled_render_to_texture GL_EXT_color_buffer_float > GL_EXT_color_buffer_half_float GL_EXT_disjoint_timer_query \n> 10-22 09:02:42.086 15895-15930/com.mygdx.game.android W/Adreno-EGL: <qeglDrvAPI_eglGetConfigAttrib:607>: EGL_BAD_ATTRIBUTE\n> 10-22 09:02:42.086 15895-15930/com.mygdx.game.android W/Adreno-EGL: <qeglDrvAPI_eglGetConfigAttrib:607>: EGL_BAD_ATTRIBUTE\n> 10-22 09:02:42.086 15895-15930/com.mygdx.game.android I/AndroidGraphics: framebuffer: (5, 6, 5, 0)\n> 10-22 09:02:42.087 15895-15930/com.mygdx.game.android I/AndroidGraphics: depthbuffer: (16)\n> 10-22 09:02:42.087 15895-15930/com.mygdx.game.android I/AndroidGraphics: stencilbuffer: (0)\n> 10-22 09:02:42.087 15895-15930/com.mygdx.game.android I/AndroidGraphics: samples: (0)\n> 10-22 09:02:42.087 15895-15930/com.mygdx.game.android I/AndroidGraphics: coverage sampling: (false)\n> 10-22 09:02:42.090 15895-15930/com.mygdx.game.android I/AndroidGraphics: Managed meshes/app: { }\n> 10-22 09:02:42.090 15895-15930/com.mygdx.game.android I/AndroidGraphics: Managed textures/app: { }\n> 10-22 09:02:42.090 15895-15930/com.mygdx.game.android I/AndroidGraphics: Managed cubemap/app: { }\n> 10-22 09:02:42.091 15895-15930/com.mygdx.game.android I/AndroidGraphics: Managed shaders/app: { }\n> 10-22 09:02:42.091 15895-15930/com.mygdx.game.android I/AndroidGraphics: Managed buffers/app: { }\n", "url": "https://github.com/libgdx/libgdx/issues/3500", "user": "jtuta", "labels": ["android", "bug"], "created": "2015-10-22 06:47:46", "closed": "2015-11-16 23:48:25", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "Controller detection", "body": "I've been running into issues with controllers, mostly they can be filtered down to \"weird hardware\" which seems to be detected as a controller when it isn't.\n\nNot sure if that's fixable at all, just wanted to make sure you guys are aware of it.\n\nWhat I ran into so far:\n- Midi-keyboards / midi-gadgets are detected as the first controller\n- \"game keyboards\" like this (http://www.razerzone.com/gaming-keyboards-keypads/razer-nostromo) are detected as first controller (could say it IS a controller of sorts I guess)\n- a Youtuber's microphone also triggered this.\n\nI have no idea how the code works deciding on what a controller is or not, and I don't have the hardware to test these things, I just know the problem exists. Maybe you guys have a brilliant idea about it ;)\n\nif not, just close the issue.. it's a minority problem\n", "url": "https://github.com/libgdx/libgdx/issues/3431", "user": "orangepascal", "labels": ["bug"], "created": "2015-09-22 08:58:51", "closed": "2016-01-05 17:02:43", "commits": {}, "ttf": 105.00027777777778, "commitsDetails": []}, {"title": "Loss of controller input when changing displayMode", "body": "When the displaymode is changed from fullscreen to windowed or vice versa, the controller loses input and reports the last values before the displaymode change. This issue has been posted before and was reportedly fixed but the current version seems to still have this problem. I am running Windows 10 and have tested a Xbox One controller as well as a Xbox 360 USB Controller. \n", "url": "https://github.com/libgdx/libgdx/issues/3384", "user": "clubmine", "labels": ["bug"], "created": "2015-08-31 02:30:34", "closed": "2016-01-05 17:03:31", "commits": {}, "ttf": 127.00027777777778, "commitsDetails": []}, {"title": "GWT: utf-8 characters at the end of the buffer can be corrupted by BufferedReader", "body": "I've just created a Russian translation for my game, and all is well in the Desktop, Android and iOS versions, but in the GWT version there were errors in the translations.\n\nThe top text in the image is what the translation should be, and the bottom is what is being displayed in the browser.\n\n![image](https://cloud.githubusercontent.com/assets/6973062/9243146/72f327b6-4184-11e5-932b-5bab070c1297.png)\n\nLogging what's being returned by the call to `bundle.get(\"Quick_Game\")` gives me\n\n```\nTranslation: \u0411\u044b\u0441\u0442\u0440\u0430\u0440 \u0418\u0433\u0440\u0430\n```\n\nwhere as the `.properties` file contains\n\n```\nQuick_Game=\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u0418\u0433\u0440\u0430\n```\n\nAs you can see, the last character for the first word has been changed.\n\nThis is just one of numerous errors that are occurring throughout the game with missing or changed characters and I'm struggling to work out the cause.\n\nI've uploaded a test project [here](https://github.com/WillCalderwood/localisation-test)\n\nBelow is the sample code for the test project\n\n```\npublic class MyGdxGame extends ApplicationAdapter {\n    SpriteBatch batch;\n    private BitmapFont font;\n    private I18NBundle bundle;\n\n    @Override\n    public void create () {\n        batch = new SpriteBatch();\n        font = new BitmapFont(Gdx.files.internal(\"font.fnt\"));\n        bundle = I18NBundle.createBundle(Gdx.files.internal(\"Local/Local\"), new Locale(\"ru\"), \"UTF-8\");\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClearColor(1, 0, 0, 1);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n        font.draw(batch, \"\u0411\u044b\u0441\u0442\u0440\u0430\u044f \u0418\u0433\u0440\u0430\", 20, 200);\n        font.draw(batch, bundle.get(\"Quick_Game\"), 20, 100);\n        Gdx.app.log(\"Translation\", bundle.get(\"Quick_Game\"));\n        batch.end();\n    }\n}\n```\n", "url": "https://github.com/libgdx/libgdx/issues/3350", "user": "WillCalderwood", "labels": ["bug", "gwt"], "created": "2015-08-13 05:33:53", "closed": "2015-09-11 10:12:46", "commits": {"5e3630d98ef7f3144cc99e861d5ee667298cc31d": {"commitGHEventType": "referenced", "commitUser": "davebaol"}, "83f57d6286b205a32983809558f38f986565b097": {"commitGHEventType": "referenced", "commitUser": "davebaol"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "5e3630d98ef7f3144cc99e861d5ee667298cc31d", "commitGHEventType": "referenced", "commitUser": "davebaol", "commitParents": ["6c059d04f45bbdc36306b4b1a5b4c684a15aa3d7"], "nameRev": "5e3630d98ef7f3144cc99e861d5ee667298cc31d tags/1.6.5~14", "commitMessage": "Increase default buffer size to limit utf8 corruption, see #3350", "commitDateTime": "2015-08-13 21:26:59", "authoredDateTime": "2015-08-13 21:26:59", "commitGitStats": [{"filePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/BufferedReader.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BufferedReader.java", "spoonMethods": [{"spoonMethodName": "java.io.BufferedReader", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "83f57d6286b205a32983809558f38f986565b097", "commitGHEventType": "referenced", "commitUser": "davebaol", "commitParents": ["22bc231ece5d2bd39ee881d0f5c17d716679ec1b", "168363ed096c7b064a8d6f4dc0934752f5a536d8"], "nameRev": "83f57d6286b205a32983809558f38f986565b097 tags/1.7.0~11", "commitMessage": "Merge pull request #3402 from davebaol/gwt-utf8\n\nFix for issue #3350", "commitDateTime": "2015-09-11 12:12:46", "authoredDateTime": "2015-09-11 12:12:46", "commitGitStats": [{"filePath": "CHANGES", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/Utf8Decoder.java", "insertions": 143, "deletions": 0, "lines": 143}, {"filePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/java/io/InputStreamReader.java", "insertions": 43, "deletions": 47, "lines": 90}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Utf8Decoder.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.utils.Utf8Decoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InputStreamReader.java", "spoonMethods": [{"spoonMethodName": "java.io.InputStreamReader.read(char[],int,int)", "TOT": 11, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 4}, {"spoonMethodName": "java.io.InputStreamReader", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5e3630d98ef7f3144cc99e861d5ee667298cc31d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["java.io.BufferedReader"]}, {"title": "Screen issue (Robovm) ", "body": "I add a banner subview in top of the libgdx view just like this->\n\n![Image of libgdx](https://dl.dropboxusercontent.com/u/78073642/ImagenesPosteadasEnForos/2014-01-02%2017.10.46.jpg)\n\nAll my buttons are set with scene2d, but i notice that i have to press below the buttons to get the changed event. \nif i do not add the banner view there is no problem about pressing the buttons.\n\nI was looking the source code in the robovm back-end and i think the problem is the function getBounds, cause you are getting the size of all the screen, and not the view that is using libgx\n\nAs mario said in this comment its an issue with Libgdx. http://robovm.com/robovm-1-5-released-cross-platform-development-robopods/#comment-2128199229\n", "url": "https://github.com/libgdx/libgdx/issues/3278", "user": "Yayo-Arellano", "labels": ["bug", "ios"], "created": "2015-07-13 09:45:21", "closed": "2016-01-05 17:05:40", "commits": {}, "ttf": 176.00027777777777, "commitsDetails": []}, {"title": "GlyphRun: Final white space omitted", "body": "LibGdx 1.6.0 font markupEnabled set to true\n\n<h4>1.Incorrect color if alpha channel missed</h4>\n\n<p>\nHTML style color tag without alpha channel produces incorrect color. Color tag <code>[#00FF00]</code> instead of green color gives blue.\n</p>\n\n\n<h4>2.First whitespace before color tag is omitted</h4>\n\n<p>\nIf font is generated with <code>FreeTypeFontGenerator</code> then first whitespace before color tag disappears.\n</p>\n\nCode below reproduces all described issues. \n\n```\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.GL20;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator;\nimport com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.FreeTypeFontParameter;\n\npublic class BitmapFontMarkupBugExample extends ApplicationAdapter {\n    SpriteBatch batch;\n    BitmapFont font;\n    String alphaChannelBug;\n    String whiteSpaceBug;\n\n    public void create () {\n        batch = new SpriteBatch();\n\n        FreeTypeFontParameter param = new FreeTypeFontParameter();\n        param.size = 26;\n        font = new FreeTypeFontGenerator(Gdx.files.internal(\"data/arial.ttf\")).generateFont(param);\n        font.getData().markupEnabled = true;\n\n        alphaChannelBug = \"1.Alpha channel bug:\\n \\n\"\n                + \"[GREEN]OK green color [['GREEN'] tag;\\n\"\n                + \"[#00FF00FF]OK green color [['#00FF00FF'] tag;\\n\"\n                + \"[#00FF00]BUG green color [['#00FF00'] tag\";\n\n        whiteSpaceBug = \"2.White space bug:\\n \\n\"\n                + \"OK Sphinx of black quartz\\n\"\n                + \"BUG Sphinx [RED]of black quartz\";\n    }\n\n    public void render () {\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n        batch.begin();\n\n\n        font.draw(batch, alphaChannelBug, 100, 400);\n        font.draw(batch, whiteSpaceBug, 100, 200);\n\n        batch.end();\n    }\n\n    public static void main (String[] args) throws Exception {\n        new LwjglApplication(new BitmapFontMarkupBugExample());\n    }\n}\n```\n", "url": "https://github.com/libgdx/libgdx/issues/3134", "user": "ViktorMihhailov", "labels": ["bug"], "created": "2015-05-15 08:53:54", "closed": "2015-06-25 15:11:27", "commits": {"abdde6a610934c3657aa2df279ee4723b628b3f1": {"commitGHEventType": "referenced", "commitUser": "NathanSweet"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "abdde6a610934c3657aa2df279ee4723b628b3f1", "commitGHEventType": "referenced", "commitUser": "NathanSweet", "commitParents": ["46abc9f719fa67222efeace7961b2ab49358c657", "2ff4ed6e1738c87d700f43652c9c59fd73a686ee"], "nameRev": "abdde6a610934c3657aa2df279ee4723b628b3f1 tags/1.6.3~13^2~1", "commitMessage": "Merge pull request #3217 from ViktorMihhailov/bug_fix\n\nFix for bug #3134 GlyphRun: Final white space omitted ", "commitDateTime": "2015-06-25 17:05:44", "authoredDateTime": "2015-06-25 17:05:44", "commitGitStats": [{"filePath": "extensions/gdx-freetype/src/com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator.java", "insertions": 11, "deletions": 5, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FreeTypeFontGenerator.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator.generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sound doesn't work in Super Jumper on iOS device", "body": "", "url": "https://github.com/libgdx/libgdx/issues/2924", "user": "badlogic", "labels": ["bug", "ios"], "created": "2015-03-09 14:49:01", "closed": "2015-04-13 09:40:19", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "BitmapFont markup crashes if String is just \"[\"", "body": "Im using latest nightlies,\n\nBitmapFont.drawWrappedText crashes if I just pass \"[\" as the string to draw.\n\nException in thread \"LWJGL Application\" java.lang.StringIndexOutOfBoundsException: String index out of range: 2\n    at java.lang.String.charAt(Unknown Source)\n    at com.badlogic.gdx.graphics.g2d.TextMarkup.parseColorTag(TextMarkup.java:75)\n    at com.badlogic.gdx.graphics.g2d.BitmapFontCache.addToCache(BitmapFontCache.java:421)\n    at com.badlogic.gdx.graphics.g2d.BitmapFontCache.addWrappedText(BitmapFontCache.java:737)\n    at com.badlogic.gdx.graphics.g2d.BitmapFont.drawWrapped(BitmapFont.java:307)\n.....\n", "url": "https://github.com/libgdx/libgdx/issues/2886", "user": "AzmiTerato", "labels": ["bug"], "created": "2015-03-01 00:57:21", "closed": "2015-03-24 16:23:13", "commits": {"46191cebb5d24f88088c82a21ef4b2e1c209e0a9": {"commitGHEventType": "closed", "commitUser": "NathanSweet"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "46191cebb5d24f88088c82a21ef4b2e1c209e0a9", "commitGHEventType": "closed", "commitUser": "NathanSweet", "commitParents": ["3ba1176e112278b7e20f13f2d0178576a5f061b6"], "nameRev": "46191cebb5d24f88088c82a21ef4b2e1c209e0a9 tags/1.5.6~76", "commitMessage": "Fixed \"[\" string when markup is enabled.\n\ncloses #2886\n", "commitDateTime": "2015-03-19 12:27:27", "authoredDateTime": "2015-03-19 12:27:27", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GlyphLayout.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.GlyphLayout.parseColorMarkup(java.lang.CharSequence,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BitmapFontTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.BitmapFontTest.render()", "TOT": 10, "UPD": 0, "INS": 4, "MOV": 6, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["46191cebb5d24f88088c82a21ef4b2e1c209e0a9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.graphics.g2d.GlyphLayout.parseColorMarkup(java.lang.CharSequence,int,int)"]}, {"title": "TmxMapLoader: flipped tiled object & loader crash", "body": "The TmxMapLoader crashes when loading a map containing a flipped tiled object.\n\nThis is the error:\n\n> Exception in thread \"LWJGL Application\" java.lang.NumberFormatException: For input string: \"2147483751\"\n>     at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n>     at java.lang.Integer.parseInt(Integer.java:495)\n>     at java.lang.Integer.parseInt(Integer.java:527)\n>     at com.badlogic.gdx.utils.XmlReader$Element.getIntAttribute(XmlReader.java:645)\n>     at com.badlogic.gdx.maps.tiled.BaseTmxMapLoader.loadObject(BaseTmxMapLoader.java:202)\n>     at com.badlogic.gdx.maps.tiled.BaseTmxMapLoader.loadObjectGroup(BaseTmxMapLoader.java:114)\n>     at com.badlogic.gdx.maps.tiled.TmxMapLoader.loadTilemap(TmxMapLoader.java:202)\n>     at com.badlogic.gdx.maps.tiled.TmxMapLoader.load(TmxMapLoader.java:89)\n>     at com.fede0d.gengine.maps.LevelLoader.load(LevelLoader.java:38)\n>     at com.fede0d.gengine.maps.LevelLoader.load(LevelLoader.java:32)\n>     at com.fede0d.gengine.screens.LevelScreen.loadMap(LevelScreen.java:35)\n>     at com.fede0d.gengine.classes.Screens.loadMaps(Screens.java:63)\n>     at com.fede0d.gengine.classes.Screens.load(Screens.java:32)\n>     at com.fede0d.gengine.classes.Screens.<init>(Screens.java:26)\n>     at com.fede0d.gengine.classes.GameClass.create(GameClass.java:32)\n>     at com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop(LwjglApplication.java:143)\n>     at com.badlogic.gdx.backends.lwjgl.LwjglApplication$1.run(LwjglApplication.java:120)\n\nSteps to reproduce the issue:\n\n> In Tiled create an object layer.\n> Select the \"Insert Tile\" tool.\n> Select a tile from the tileset and insert it in the new layer.\n> Select the created object and flip it the x or y coordinate\n> Load the map in LibGdx.\n\nAccording to the [TMX Map Format](https://github.com/bjorn/tiled/wiki/TMX-Map-Format#tile-flipping) the flip information of the tile is being saved withing the gid property for the tile.\n\nIn my case the object was saved as `<object id=\"80\" name=\"ASDASDSD\" gid=\"2147483751\" x=\"66\" y=\"626\"/>`, and this number can't be parsed by the Integer class in Java and results in an exception.\n\nNote that when not fliped the gid number is saved as an integer `<object id=\"80\" name=\"ASDASDSD\" gid=\"103\" x=\"66\" y=\"626\"/>` and the exception doesn't happen.\n", "url": "https://github.com/libgdx/libgdx/issues/2833", "user": "FEDE0D", "labels": ["bug"], "created": "2015-02-10 21:00:02", "closed": "2015-02-13 04:05:52", "commits": {"4b4d6aa2533c24b055324a438d6109396ef6cab5": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "4b4d6aa2533c24b055324a438d6109396ef6cab5", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["a8f9663317daab379acf66ba63c1398130b628db"], "nameRev": "4b4d6aa2533c24b055324a438d6109396ef6cab5 tags/1.5.4~10", "commitMessage": "Fixes for flipped tiles used for objects\n\nFixes #2833\n", "commitDateTime": "2015-02-12 21:05:50", "authoredDateTime": "2015-02-12 21:05:50", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/BaseTmxMapLoader.java", "insertions": 11, "deletions": 8, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseTmxMapLoader.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.BaseTmxMapLoader.loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader.Element)", "TOT": 35, "UPD": 12, "INS": 3, "MOV": 16, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4b4d6aa2533c24b055324a438d6109396ef6cab5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 8, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 35, "UPD": 12, "INS": 3, "MOV": 16, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.maps.tiled.BaseTmxMapLoader.loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader.Element)"]}, {"title": "AndroidInput.onKey exception: java.lang.ArrayIndexOutOfBoundsException", "body": "Get new crash in-the-wild. Several devices with Android 4.0.3 and 4.2.2. Reports are from the field (China) so no minimal example. Stacktrace:\n\n<pre><code>java.lang.ArrayIndexOutOfBoundsException: length=256; index=1027\n       at com.badlogic.gdx.backends.android.AndroidInput.onKey(AndroidInput.java:496)\n       at android.view.View.dispatchKeyEvent(View.java:5495)\n       at android.view.ViewGroup.dispatchKeyEvent(ViewGroup.java:1246)\n       at android.view.ViewGroup.dispatchKeyEvent(ViewGroup.java:1246)\n       at android.view.ViewGroup.dispatchKeyEvent(ViewGroup.java:1246)\n       at com.android.internal.policy.impl.PhoneWindow$DecorView.superDispatchKeyEvent(PhoneWindow.java:1921)\n       at com.android.internal.policy.impl.PhoneWindow.superDispatchKeyEvent(PhoneWindow.java:1363)\n       at android.app.Activity.dispatchKeyEvent(Activity.java:2324)\n       at com.android.internal.policy.impl.PhoneWindow$DecorView.dispatchKeyEvent(PhoneWindow.java:1848)\n       at android.view.ViewRootImpl.deliverKeyEventPostIme(ViewRootImpl.java:3327)\n       at android.view.ViewRootImpl.handleFinishedEvent(ViewRootImpl.java:3300)\n       at android.view.ViewRootImpl.handleMessage(ViewRootImpl.java:2460)\n       at android.os.Handler.dispatchMessage(Handler.java:99)\n       at android.os.Looper.loop(Looper.java:137)\n       at android.app.ActivityThread.main(ActivityThread.java:4424)\n       at java.lang.reflect.Method.invokeNative(Method.java)\n       at java.lang.reflect.Method.invoke(Method.java:511)\n       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:787)\n       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:554)\n       at dalvik.system.NativeStart.main(NativeStart.java)\n</code></pre>\n\n", "url": "https://github.com/libgdx/libgdx/issues/2807", "user": "titovmaxim", "labels": ["android", "bug"], "created": "2015-02-04 12:58:21", "closed": "2015-05-02 15:48:44", "commits": {"d0c388b9b783830526558277b2fe928a5faa1e3a": {"commitGHEventType": "closed", "commitUser": "Tom-Ski"}}, "ttf": 87.00027777777778, "commitsDetails": [{"commitHash": "d0c388b9b783830526558277b2fe928a5faa1e3a", "commitGHEventType": "closed", "commitUser": "Tom-Ski", "commitParents": ["c976f463c3686f6a3a615f2358dc31c25f60ce0d"], "nameRev": "d0c388b9b783830526558277b2fe928a5faa1e3a tags/1.6.0~22", "commitMessage": "Update size for new Input Keys, ignore invalid keys, closes #2807\n", "commitDateTime": "2015-05-02 16:39:57", "authoredDateTime": "2015-05-02 16:39:57", "commitGitStats": [{"filePath": "backends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidInput.java", "insertions": 8, "deletions": 6, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidInput.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidInput.isKeyPressed(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidInput.isKeyJustPressed(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidInput", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.badlogic.gdx.backends.android.AndroidInput.onKey(android.view.View,int,android.view.KeyEvent)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d0c388b9b783830526558277b2fe928a5faa1e3a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 6, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 2, "INS": 4, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.android.AndroidInput", "com.badlogic.gdx.backends.android.AndroidInput.onKey(android.view.View,int,android.view.KeyEvent)", "com.badlogic.gdx.backends.android.AndroidInput.isKeyJustPressed(int)", "com.badlogic.gdx.backends.android.AndroidInput.isKeyPressed(int)"]}, {"title": "iOS app crashes on device with latest nightly 01.02.2015 (was working before)", "body": "The game which was successfully working crash on the real device (iPhone 5s) with the latest nightly 01.02.2015 right at the start. At the same time it works fine in simulator of the same device. Here is the simbolication of crash report:\n\n<pre><code>11: [J]org.robovm.apple.foundation.Foundation.log(Ljava/lang/String;Lorg/robovm/apple/foundation/NSObject;)V (in Ted the Jumper) + 180\n12: [j]org.robovm.apple.foundation.Foundation.log(Ljava/lang/String;Lorg/robovm/apple/foundation/NSObject;)V[clinit] (in Ted the Jumper) + 84\n13: [J]com.badlogic.gdx.backends.iosrobovm.IOSApplication.debug(Ljava/lang/String;Ljava/lang/String;)V (in Ted the Jumper) (/IOSApplication.java:348)\n14: [J]com.badlogic.gdx.backends.iosrobovm.IOSApplication.didFinishLaunching(Lorg/robovm/apple/uikit/UIApplication;Lorg/robovm/apple/uikit/UIApplicationLaunchOptions;)Z (in Ted the Jumper) (/IOSApplication.java:123)\n15: [J]com.badlogic.gdx.backends.iosrobovm.IOSApplication$Delegate.didFinishLaunching(Lorg/robovm/apple/uikit/UIApplication;Lorg/robovm/apple/uikit/UIApplicationLaunchOptions;)Z (in Ted the Jumper) + 112\n16: [J]org.robovm.apple.uikit.UIApplicationDelegate$ObjCProxy.$cb$application$didFinishLaunchingWithOptions$(Lorg/robovm/apple/uikit/UIApplicationDelegate;Lorg/robovm/objc/Selector;Lorg/robovm/apple/uikit/UIApplication;Lorg/robovm/apple/uikit/UIApplicationLaunchOptions;)Z (in Ted the Jumper) (/Unknown source:1048629)\n17: [j]org.robovm.apple.uikit.UIApplicationDelegate$ObjCProxy.$cb$application$didFinishLaunchingWithOptions$(Lorg/robovm/apple/uikit/UIApplicationDelegate;Lorg/robovm/objc/Selector;Lorg/robovm/apple/uikit/UIApplication;Lorg/robovm/apple/uikit/UIApplicationLaunchOptions;)Z[callback] (in Ted the Jumper) + 236\n</code></pre>\n\n\nThe issue was got using last libGDX and roboVM snapshot. From the history It is probably that the problem is exactly in the commit 2 days ago: 41708a5. It do the opposite to what it is named :) libGDX 1.5.3 with roboVM beta-03 works just fine. Latest SNAPSHOTS (libGDX & roboVM) fail with this issue.\n\nThis is connected to roboVM issue #737\n", "url": "https://github.com/libgdx/libgdx/issues/2800", "user": "titovmaxim", "labels": ["bug", "ios", "need more info"], "created": "2015-02-01 22:26:54", "closed": "2015-02-08 09:45:29", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Crash iOS app in OALAudio", "body": "Got another OALAudio crash in the game build with libGDX & roboVM for iOS devices. I've tested the game locally on simulator and iPhone-5s - everything works fine. However I've got plenty (several hundreds) of crash reports by Flurry from the game in the field:\n\n<pre><code>0   libobjc.A.dylib                     0x394fc608 _objc_retain + 7\n1   Ted the Jumper                      0x002fdb43 -[OALSuspendHandler setManuallySuspended:] + 438\n2   Ted the Jumper                      0x002fcc23 -[OALAudioSession onAudioError:] + 466\n3   CoreFoundation                      0x2ec391f1 <redacted> + 12\n4   CoreFoundation                      0x2ebad57f __CFXNotificationPost + 1718\n5   Foundation                          0x2f597a3d <redacted> + 76\n6   Foundation                          0x2f59c31b <redacted> + 30\n7   Ted the Jumper                      0x002f2403 -[ALDevice .cxx_destruct] + 33626\n8   Ted the Jumper                      0x002f2ccd +[ALWrapper closeDevice:] + 116\n9   Ted the Jumper                      0x002e9a91 -[ALDevice dealloc] + 164\n10  libobjc.A.dylib                     0x394fcb6b <redacted> + 174\n11  Ted the Jumper                      0x002e99e3 -[ALDevice initWithDeviceSpecifier:] + 450\n12  Ted the Jumper                      0x002df05d -[OALSimpleAudio initWithSources:] + 100\n13  Ted the Jumper                      0x002de99b +[OALSimpleAudio sharedInstanceSynch] + 138\n14  Ted the Jumper                      0x00434f7f -[FlurryPLCrashReporterConfig symbolicationStrategy] + 1093422\n15  Ted the Jumper                      0x00434b5d -[FlurryPLCrashReporterConfig symbolicationStrategy] + 1092364\n16  Ted the Jumper                      0x00434b87 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 1092406\n17  Ted the Jumper                      0x00424fa3 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 1027922\n18  Ted the Jumper                      0x0042369d -[FlurryPLCrashReporterConfig symbolicationStrategy] + 1021516\n19  Ted the Jumper                      0x00424de5 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 1027476\n20  Ted the Jumper                      0x0098af9d -[FlurryPLCrashReporterConfig symbolicationStrategy] + 6688588\n21  Ted the Jumper                      0x0098b043 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 6688754\n22  UIKit                               0x315025a7 <redacted> + 274\n23  UIKit                               0x31501efb <redacted> + 1610\n24  UIKit                               0x314fc58b <redacted> + 714\n25  UIKit                               0x31498709 <redacted> + 3540\n26  UIKit                               0x31497871 <redacted> + 72\n27  UIKit                               0x314fbcc9 <redacted> + 616\n28  GraphicsServices                    0x33b04aed <redacted> + 608\n29  GraphicsServices                    0x33b046d7 <redacted> + 34\n30  CoreFoundation                      0x2ec41ab7 <redacted> + 34\n31  CoreFoundation                      0x2ec41a53 <redacted> + 346\n32  CoreFoundation                      0x2ec40227 <redacted> + 1398\n33  CoreFoundation                      0x2ebaaf4f _CFRunLoopRunSpecific + 522\n34  CoreFoundation                      0x2ebaad33 _CFRunLoopRunInMode + 106\n35  UIKit                               0x314faef1 <redacted> + 760\n36  UIKit                               0x314f616d _UIApplicationMain + 1136\n37  Ted the Jumper                      0x0097b1f5 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 6623652\n38  Ted the Jumper                      0x0097a745 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 6620916\n39  Ted the Jumper                      0x0097a783 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 6620978\n40  Ted the Jumper                      0x00511f9b -[FlurryPLCrashReporterConfig symbolicationStrategy] + 1998666\n41  Ted the Jumper                      0x00b67d3b -[FlurryPLCrashReporterConfig symbolicationStrategy] + 8641770\n42  Ted the Jumper                      0x00b60ad3 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 8612482\n43  Ted the Jumper                      0x00b6274f -[FlurryPLCrashReporterConfig symbolicationStrategy] + 8619774\n44  Ted the Jumper                      0x00b627a9 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 8619864\n45  Ted the Jumper                      0x00b5ca7d -[FlurryPLCrashReporterConfig symbolicationStrategy] + 8596012\n46  Ted the Jumper                      0x00b55293 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 8565314\n47  Ted the Jumper                      0x0032a5c4 -[FlurryPLCrashReporterConfig symbolicationStrategy] + 1395\n</code></pre>\n", "url": "https://github.com/libgdx/libgdx/issues/2791", "user": "titovmaxim", "labels": ["bug", "ios", "need more info"], "created": "2015-01-31 12:55:13", "closed": "2015-05-09 18:14:31", "commits": {}, "ttf": 98.00027777777778, "commitsDetails": []}, {"title": "Crash iOS app with NullPointerException in IOSSound.play", "body": "I've just published the game build with libGDX & roboVM for iOS devices. I've tested the game locally on simulator and iPhone-5s - everything works fine. However I've got plenty (several hundreds) of crash reports by Flurry from the game in the field:\n\n<pre><code>*** Terminating app due to uncaught exception 'NullPointerException: null', reason: 'NullPointerException: null\ncom.badlogic.gdx.backends.iosrobovm.IOSSound.play(IOSSound.java:66)\ncom.badlogic.gdx.backends.iosrobovm.IOSSound.play(IOSSound.java:56)\ncom.mmxgames.engine.audio.RandomSound.playAtIndex(RandomSound.java:47)\ncom.mmxgames.engine.audio.RandomSound.play(RandomSound.java:36)\ncom.mmxgames.engine.audio.SoundPack.play(SoundPack.java:53)\ncom.mmxgames.engine.audio.SoundPack.play(SoundPack.java:37)\ncom.mmxgames.engine.ResMan$RSoundPack.play(ResMan.java:205)\ncom.mmxgames.ttj.themes.GameView3D.onMove(GameView3D.java:360)\ncom.mmxgames.ttj.play.ALevelScene.processAction(ALevelScene.java:356)\ncom.mmxgames.ttj.play.ALevelScene.__update(ALevelScene.java:186)\ncom.mmxgames.ttj.play.StoryLevelScene.__update(StoryLevelScene.java:144)\ncom.mmxgames.engine.components.Host.__update(Host.java:235)\ncom.mmxgames.engine.AGame.render(AGame.java:282)\ncom.badlogic.gdx.backends.iosrobovm.IOSGraphics.draw(IOSGraphics.java:330)\ncom.badlogic.gdx.backends.iosrobovm.IOSGraphics$1.draw(IOSGraphics.java:200)\norg.robovm.apple.uikit.UIView.$cb$drawRect$(UIView.java)\norg.robovm.apple.uikit.UIApplication.main(Native Method)\norg.robovm.apple.uikit.UIApplication.main(UIApplication.java:334)\ncom.bulkypix.tedthejumper.ios.Launcher.main(Launcher.java:182)\n</code></pre>\n\n\nSo the exception raise for more or less any device type (iPhone 6 Plus, iPhone 6, iPhone 5s, iPhone 4s, iPads, etc.). The source code line is:\n\n<pre><code>\nALSource soundSource = OALSimpleAudio.sharedInstance().playEffect(soundPath, volume, pitch, pan, loop);</code></pre>\n\n\nOnly the possibility I see is that  OALSimpleAudio.sharedInstance() returns null.\n\nWhat could be the problem for that?\n", "url": "https://github.com/libgdx/libgdx/issues/2790", "user": "titovmaxim", "labels": ["bug", "ios", "need more info"], "created": "2015-01-31 12:20:16", "closed": "2015-02-03 11:50:53", "commits": {"40fc5f68317eddc0158875c89d2ad416b3d79ec0": {"commitGHEventType": "closed", "commitUser": "Tom-Ski"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "40fc5f68317eddc0158875c89d2ad416b3d79ec0", "commitGHEventType": "closed", "commitUser": "Tom-Ski", "commitParents": ["0209c7c23b4b03b750ec6948d86841d0ad0e7430"], "nameRev": "40fc5f68317eddc0158875c89d2ad416b3d79ec0 tags/1.5.4~21^2~1", "commitMessage": "AlSource may be null, resolve #2790\n", "commitDateTime": "2015-02-03 11:50:39", "authoredDateTime": "2015-02-03 11:50:39", "commitGitStats": [{"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSSound.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSSound.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSSound.play(float,float,float,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["40fc5f68317eddc0158875c89d2ad416b3d79ec0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.iosrobovm.IOSSound.play(float,float,float,boolean)"]}, {"title": "ScrollPane offsets widget by bar size", "body": "This bug was introduced in 1.5.3. Here's a comparision between 1.5.2 (left) and 1.5.3 (right):\n![scrollpane bug 1 5 3](https://cloud.githubusercontent.com/assets/4956158/5943563/460fbfec-a720-11e4-9bc3-0657055cea41.png)\n\nThe bar for scrolling on x is not currently visible but notice the widget is offset by its height in 1.5.3.\n\nI believe [this commit](https://github.com/libgdx/libgdx/commit/17f8525b056708df4c197e5a693ab1ba111ca5b4#diff-5924fb1b14a1b709cfac453b8f8b717c) introduced the problem. Since this commit `scrollbarHeight` is only subtracted from `areaHeight` if scrolling on both axes is enabled which in my picture is not the case. Undoing the changes to `ScrollPane` in this commit should fix the issue.\n", "url": "https://github.com/libgdx/libgdx/issues/2777", "user": "dermetfan", "labels": ["bug", "need more info"], "created": "2015-01-28 18:08:27", "closed": "2015-02-03 18:45:17", "commits": {"27e06cd9a1787463e777f11ebb0feda160e65ea9": {"commitGHEventType": "closed", "commitUser": "NathanSweet"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "27e06cd9a1787463e777f11ebb0feda160e65ea9", "commitGHEventType": "closed", "commitUser": "NathanSweet", "commitParents": ["4cccfe0e97fbeb3ccac3e4d4e12057ac8f3fd809"], "nameRev": "27e06cd9a1787463e777f11ebb0feda160e65ea9 tags/1.5.4~22", "commitMessage": "Fixed fading scrollbars when scrolling only in one direction.\n\ncloses #2777\n", "commitDateTime": "2015-02-03 19:44:25", "authoredDateTime": "2015-02-03 19:44:25", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScrollPane.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.layout()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["27e06cd9a1787463e777f11ebb0feda160e65ea9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.layout()"]}, {"title": "Touch coordinates are wrong on iOS if UIStatusBarHidden is false", "body": "I previously posted [this](https://groups.google.com/forum/#!topic/robovm/8Q_crAlkxYw) on the RoboVM forums, but Niklas directed me this way. \n\nI noticed my touches are reported as being half a centimeter or so lower than where I'm really pressing. This happens with a app on iOS when UIStatusBarHidden is set to false. When the status bar is hidden, touch coordinates are correct. The offset is about the size of the status bar, so I think this isn't being taken into account somehow? Test case [here](http://pastebin.com/CG5SDVKi). \n\nIt's barely noticeable most of the time, but, for instance, if you hit the bottom of buttons in a stage they don't respond. Easy fix by hiding it anyway.\n\nEverything else is glorious, keep it up! :D \n", "url": "https://github.com/libgdx/libgdx/issues/2766", "user": "dgmp88", "labels": ["bug", "ios"], "created": "2015-01-22 09:34:41", "closed": "2016-01-24 08:22:17", "commits": {}, "ttf": 366.0002777777778, "commitsDetails": []}, {"title": "Lighting doesn't work on gwt", "body": "See http://i.imgur.com/4Vorrp7.png & http://i.imgur.com/2992Rg9.png.\n![lights](https://cloud.githubusercontent.com/assets/2349087/5825034/cfa2361a-a0e8-11e4-8ff5-2030b65b0361.png)\n![invaders](https://cloud.githubusercontent.com/assets/2349087/5825038/d85be42c-a0e8-11e4-8832-e4f122f68ee7.png)\n", "url": "https://github.com/libgdx/libgdx/issues/2758", "user": "xoppa", "labels": ["bug", "gwt"], "created": "2015-01-20 20:07:56", "closed": "2015-07-17 18:30:19", "commits": {}, "ttf": 177.00027777777777, "commitsDetails": []}, {"title": "Zero alpha actions don't work over a TextField", "body": "Zero alpha actions over a TextField don't behave in the same way as (for instance) Label. Background, cursor and those style properties do it properly but not the text contained within the widget. A http://sscce.org/ is provided here:\nhttps://dl.dropboxusercontent.com/u/17018559/PlayGround.zip\n\nTouch/click to test it\n", "url": "https://github.com/libgdx/libgdx/issues/2753", "user": "AlbertoCejas", "labels": ["bug", "scene2d"], "created": "2015-01-19 11:47:53", "closed": "2015-06-02 05:15:57", "commits": {"9939553646bbdb8e91495a062072b06898be15e7": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 133.00027777777777, "commitsDetails": [{"commitHash": "9939553646bbdb8e91495a062072b06898be15e7", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["bcc1e9e3770665d886b13a3e8359c78507a81c9c"], "nameRev": "9939553646bbdb8e91495a062072b06898be15e7 tags/1.6.2~5", "commitMessage": "Use alpha for font color\n\nFixes #2753\n", "commitDateTime": "2015-06-01 22:15:55", "authoredDateTime": "2015-06-01 22:15:55", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TextField.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.TextField.draw(com.badlogic.gdx.graphics.g2d.Batch,float)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9939553646bbdb8e91495a062072b06898be15e7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.scenes.scene2d.ui.TextField.draw(com.badlogic.gdx.graphics.g2d.Batch,float)"]}, {"title": "[WIZ] Box2d EndContact does not called.", "body": "Problem context:\nI want to get information from begin/endcontacts.\n\nProblem statement:\nI have one static body with multiple fixtures and one dynamic body. When they collide beginContact is called. After (outside the step) I destroy one fixture from static body. Then I expect endContact to be called for destroyed fixture but it does not(instead beginContact is called again for other static fixtures(they already were called in the past)). Why? Is it a bug in libgdx?\nUPD: It is a libgdx bug. In Box2d source code endContact is called, but libgdx jni wrapper does not call.\nUPD: destroyBody and setTransformation work fine but destroyFixture not. So I looked into libgdx jni wrapper:\nUPD: Same problem with setActive(false)!\ndestroyBody:\n\n``` cpp\nJNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_World_jniDestroyBody(JNIEnv* env, jobject object, jlong addr, jlong bodyAddr) {\n\n\n//@line:333\n\n        b2World* world = (b2World*)addr;\n        b2Body* body = (b2Body*)bodyAddr;\n        CustomContactFilter contactFilter(env, object);\n        CustomContactListener contactListener(env,object);\n        world->SetContactFilter(&contactFilter);\n        world->SetContactListener(&contactListener);\n        world->DestroyBody(body);\n        world->SetContactFilter(&defaultFilter);\n        world->SetContactListener(0);\n\n\n}\n```\n\ndestroyFixture:\n\n``` cpp\nJNIEXPORT void JNICALL Java_com_badlogic_gdx_physics_box2d_Body_jniDestroyFixture(JNIEnv* env, jobject object, jlong addr, jlong fixtureAddr) {\n\n\n//@line:133\n\n        b2Body* body = (b2Body*)addr;\n        b2Fixture* fixture = (b2Fixture*)fixtureAddr;\n        body->DestroyFixture(fixture);\n\n\n}\n```\n\nSo it's looks like this code is missed inside destroyFixture:\nUPD: same code is also missed in setActive !\n\n``` cpp\n        world->SetContactFilter(&contactFilter);\n        world->SetContactListener(&contactListener);\n```\n\nAm I correct?\n\nCode to see the bug:\n\n``` java\npackage com.gaskarov.teerain;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.math.Vector2;\nimport com.badlogic.gdx.physics.box2d.Body;\nimport com.badlogic.gdx.physics.box2d.BodyDef;\nimport com.badlogic.gdx.physics.box2d.BodyDef.BodyType;\nimport com.badlogic.gdx.physics.box2d.Contact;\nimport com.badlogic.gdx.physics.box2d.ContactImpulse;\nimport com.badlogic.gdx.physics.box2d.ContactListener;\nimport com.badlogic.gdx.physics.box2d.Fixture;\nimport com.badlogic.gdx.physics.box2d.Manifold;\nimport com.badlogic.gdx.physics.box2d.PolygonShape;\nimport com.badlogic.gdx.physics.box2d.World;\n\npublic class TeeRain extends ApplicationAdapter {\n\n    @Override\n    public void create() {\n    }\n\n    @Override\n    public void dispose() {\n    }\n\n    @Override\n    public void resume() {\n    }\n\n    @Override\n    public void pause() {\n    }\n\n    World mTestWorld;\n    boolean mTestBoolean;\n    Body mTestStaticBody;\n    Fixture mTestStaticFixture;\n\n    @Override\n    public void render() {\n        if (mTestWorld == null) {\n            mTestWorld = new World(new Vector2(0.0f, -10.0f), true);\n            mTestWorld.setContactListener(new ContactListener() {\n\n                @Override\n                public void beginContact(Contact pContact) {\n                    Gdx.app.log(\"INFO\", \"BEGINCONTACT\");\n                    mTestBoolean = true;\n                }\n\n                @Override\n                public void endContact(Contact pContact) {\n                    Gdx.app.log(\"INFO\", \"ENDCONTACT\");\n                }\n\n                @Override\n                public void preSolve(Contact pContact, Manifold pOldManifold) {\n                }\n\n                @Override\n                public void postSolve(Contact pContact, ContactImpulse pImpulse) {\n                }\n            });\n            {\n                BodyDef bd = new BodyDef();\n                bd.type = BodyType.StaticBody;\n                bd.position.x = 0;\n                bd.position.y = 0;\n                mTestStaticBody = mTestWorld.createBody(bd);\n                PolygonShape shape = new PolygonShape();\n                shape.setAsBox(0.5f, 0.5f);\n                mTestStaticFixture = mTestStaticBody.createFixture(shape, 1.0f);\n            }\n            {\n                BodyDef bd = new BodyDef();\n                bd.type = BodyType.DynamicBody;\n                bd.position.x = 0;\n                bd.position.y = 5;\n                Body body = mTestWorld.createBody(bd);\n                PolygonShape shape = new PolygonShape();\n                shape.setAsBox(0.5f, 0.5f);\n                body.createFixture(shape, 1.0f);\n            }\n        }\n        mTestWorld.step(1 / 60f, 8, 8);\n        if (mTestBoolean) {\n            mTestStaticBody.destroyFixture(mTestStaticFixture);\n            mTestBoolean = false;\n        }\n    }\n}\n```\n\nI am very waiting for this bug fixed because I cant compile the libgdx jni code.\n", "url": "https://github.com/libgdx/libgdx/issues/2750", "user": "Barricade", "labels": ["bug"], "created": "2015-01-18 11:01:48", "closed": "2015-02-06 13:29:28", "commits": {"1cc977bd39ae16f25c5bc61cd541f818114333dc": {"commitGHEventType": "referenced", "commitUser": "MobiDevelop"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "1cc977bd39ae16f25c5bc61cd541f818114333dc", "commitGHEventType": "referenced", "commitUser": "MobiDevelop", "commitParents": ["40fc5f68317eddc0158875c89d2ad416b3d79ec0", "eb650c5a0f7cbeedd3982653e917859eee5a97c5"], "nameRev": "1cc977bd39ae16f25c5bc61cd541f818114333dc tags/1.5.4~21^2", "commitMessage": "Merge pull request #2780 from rinold/master\n\ngdx-box2d: fix for #2750 - EndContact does not called", "commitDateTime": "2015-02-03 04:40:04", "authoredDateTime": "2015-02-03 04:40:04", "commitGitStats": [{"filePath": "extensions/gdx-box2d/gdx-box2d/jni/com.badlogic.gdx.physics.box2d.Body.cpp", "insertions": 45, "deletions": 57, "lines": 102}, {"filePath": "extensions/gdx-box2d/gdx-box2d/jni/com.badlogic.gdx.physics.box2d.Body.h", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "extensions/gdx-box2d/gdx-box2d/jni/com.badlogic.gdx.physics.box2d.World.cpp", "insertions": 68, "deletions": 31, "lines": 99}, {"filePath": "extensions/gdx-box2d/gdx-box2d/jni/com.badlogic.gdx.physics.box2d.World.h", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/Body.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "extensions/gdx-box2d/gdx-box2d/src/com/badlogic/gdx/physics/box2d/World.java", "insertions": 41, "deletions": 1, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Body.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.physics.box2d.Body.destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.physics.box2d.Body.jniDestroyFixture(long,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.physics.box2d.Body.setActive(boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "World.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.physics.box2d.World", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.physics.box2d.World.destroyFixture(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Fixture)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.physics.box2d.World.jniDestroyFixture(long,long,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.physics.box2d.World.deactivateBody(com.badlogic.gdx.physics.box2d.Body)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.physics.box2d.World.jniDeactivateBody(long,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "iOS 8 reports wrong real dimensional sizes.", "body": "I've created a game using your framework (can find it here) \nhttps://play.google.com/store/apps/details?id=com.polygonattraction.shorb.android&hl=en\n\nI'm doing the iOS release, everything is working fine apart from a few things. It's extremely blurry on an iPhone 6 and on iPhone 6 & 5 the screen dimensions are reported are wrong, example using Gdx.graphics.getPpcx() returns a size way bigger than a CM which I use for everything (button sizes, characters etc).\n\nOn a side note:\nthe desktop version & the iOS version reports the wrong size for CM's. It only effects the desktop version for 1.5.2\n\nAny ideas?\n", "url": "https://github.com/libgdx/libgdx/issues/2736", "user": "ollydixon", "labels": ["bug", "ios"], "created": "2015-01-12 08:23:13", "closed": "2015-01-18 05:11:34", "commits": {"9fff445e58064906159ca4ace2d8649612603fb5": {"commitGHEventType": "closed", "commitUser": "Tom-Ski"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "9fff445e58064906159ca4ace2d8649612603fb5", "commitGHEventType": "closed", "commitUser": "Tom-Ski", "commitParents": ["907169f5f7e96a733dd4e1aa5772aaeaf5621302"], "nameRev": "9fff445e58064906159ca4ace2d8649612603fb5 tags/1.5.4~39^2~11", "commitMessage": "Add IOSDevice enum for PPI, fixes #2736\n", "commitDateTime": "2015-01-17 09:58:10", "authoredDateTime": "2015-01-17 07:02:27", "commitGitStats": [{"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSDevice.java", "insertions": 71, "deletions": 0, "lines": 71}, {"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java", "insertions": 7, "deletions": 18, "lines": 25}, {"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/custom/HWMachine.java", "insertions": 48, "deletions": 0, "lines": 48}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSDevice.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSDevice", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IOSGraphics.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSGraphics", "TOT": 16, "UPD": 3, "INS": 5, "MOV": 2, "DEL": 6}]}, {"spoonFilePath": "HWMachine.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.custom.HWMachine", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9fff445e58064906159ca4ace2d8649612603fb5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 126, "deletions": 18, "lines": 144, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 18, "UPD": 3, "INS": 7, "MOV": 2, "DEL": 6, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.iosrobovm.custom.HWMachine", "com.badlogic.gdx.backends.iosrobovm.IOSGraphics", "com.badlogic.gdx.backends.iosrobovm.IOSDevice"]}, {"title": "I18NBundle  error", "body": "find an error in my game.only in samung i9008L mobile phone.\n\n```\n    java.lang.NoSuchFieldError: java.util.Locale.ROOT\nat com.badlogic.gdx.utils.I18NBundle.getCandidateLocales(I18NBundle.java:270)\nat com.badlogic.gdx.utils.I18NBundle.createBundleImpl(I18NBundle.java:165)\nat com.badlogic.gdx.utils.I18NBundle.createBundle(I18NBundle.java:130)\nat com.oahcflystudio.game.XueBaGame.init(XueBaGame.java:37)\nat com.oahcfly.chgame.core.mvc.CHGame.create(CHGame.java:136)\nat com.badlogic.gdx.backends.android.AndroidGraphics.onSurfaceChanged(AndroidGraphics.java:237)\nat android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1325)\nat android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1116)\n```\n", "url": "https://github.com/libgdx/libgdx/issues/2701", "user": "oahc09", "labels": ["bug"], "created": "2015-01-03 07:04:08", "closed": "2015-01-03 14:46:32", "commits": {"d0447911f266d67cee6314698e8f1ca1a947d76c": {"commitGHEventType": "closed", "commitUser": "davebaol"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d0447911f266d67cee6314698e8f1ca1a947d76c", "commitGHEventType": "closed", "commitUser": "davebaol", "commitParents": ["88401fe2b078cb0b3343cc2aeaa81393dff6c3ff"], "nameRev": "d0447911f266d67cee6314698e8f1ca1a947d76c tags/1.5.3~19^2~5", "commitMessage": "Fix #2701", "commitDateTime": "2015-01-03 15:40:20", "authoredDateTime": "2015-01-03 15:40:20", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/utils/I18NBundle.java", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/I18NMessageTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/I18NSimpleMessageTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "I18NBundle.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.utils.I18NBundle.getCandidateLocales(java.util.Locale)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.utils.I18NBundle.toFileHandle(com.badlogic.gdx.files.FileHandle,java.util.Locale)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.utils.I18NBundle.createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.utils.I18NBundle.loadBundleChain(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.List,int,com.badlogic.gdx.utils.I18NBundle)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.utils.I18NBundle", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "I18NMessageTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.I18NMessageTest.create()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "I18NSimpleMessageTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.I18NSimpleMessageTest.create()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d0447911f266d67cee6314698e8f1ca1a947d76c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 4, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.utils.I18NBundle.getCandidateLocales(java.util.Locale)", "com.badlogic.gdx.utils.I18NBundle.createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)", "com.badlogic.gdx.utils.I18NBundle", "com.badlogic.gdx.utils.I18NBundle.loadBundleChain(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.List,int,com.badlogic.gdx.utils.I18NBundle)", "com.badlogic.gdx.utils.I18NBundle.toFileHandle(com.badlogic.gdx.files.FileHandle,java.util.Locale)"]}, {"title": "BitmapFont markup language shouldn't crash if there is an invalid color code.", "body": "This is not so much a bug as a suggestion. I would like to use LibGDX's markup language to use in an ingame chat but the issue with this is that if a user uses a color code incorrectly, all the clients will crash. I thought it might be a good idea to instead of crashing the program when it encounters an invalid color code it could instead just remove the color code and print the error in the console. Thanks!\n", "url": "https://github.com/libgdx/libgdx/issues/2644", "user": "hollowbit", "labels": ["bug"], "created": "2014-12-14 14:13:09", "closed": "2015-02-10 13:38:35", "commits": {"309724e5d0c304523375d5f823d36804eb5dc2c6": {"commitGHEventType": "closed", "commitUser": "davebaol"}}, "ttf": 57.000277777777775, "commitsDetails": [{"commitHash": "309724e5d0c304523375d5f823d36804eb5dc2c6", "commitGHEventType": "closed", "commitUser": "davebaol", "commitParents": ["acd88dd2f4b54eebbc09087039d8a114c44cedc1"], "nameRev": "309724e5d0c304523375d5f823d36804eb5dc2c6 tags/1.5.4~9^2~2^2~3", "commitMessage": "Fixes #2644", "commitDateTime": "2015-02-10 14:34:02", "authoredDateTime": "2015-02-10 14:34:02", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java", "insertions": 55, "deletions": 33, "lines": 88}, {"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java", "insertions": 21, "deletions": 15, "lines": 36}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BitmapFontCache.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.countGlyphs(java.lang.CharSequence,int,int)", "TOT": 21, "UPD": 3, "INS": 5, "MOV": 8, "DEL": 5}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.requireSequence(java.lang.CharSequence,int,int)", "TOT": 10, "UPD": 1, "INS": 2, "MOV": 5, "DEL": 2}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.addToCache(java.lang.CharSequence,float,float,int,int)", "TOT": 36, "UPD": 0, "INS": 8, "MOV": 19, "DEL": 9}]}, {"spoonFilePath": "TextMarkup.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.TextMarkup", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.TextMarkup.parseColorTag(com.badlogic.gdx.graphics.g2d.TextMarkup,java.lang.CharSequence,int,int,int)", "TOT": 15, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 9}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.TextMarkup.parseColorTag(java.lang.CharSequence,int,int,int)", "TOT": 10, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BitmapFontTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.BitmapFontTest.create()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["309724e5d0c304523375d5f823d36804eb5dc2c6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 76, "deletions": 48, "lines": 124, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 93, "UPD": 6, "INS": 25, "MOV": 37, "DEL": 25, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.graphics.g2d.BitmapFontCache.countGlyphs(java.lang.CharSequence,int,int)", "com.badlogic.gdx.graphics.g2d.BitmapFontCache.requireSequence(java.lang.CharSequence,int,int)", "com.badlogic.gdx.graphics.g2d.TextMarkup.parseColorTag(com.badlogic.gdx.graphics.g2d.TextMarkup,java.lang.CharSequence,int,int,int)", "com.badlogic.gdx.graphics.g2d.TextMarkup.parseColorTag(java.lang.CharSequence,int,int,int)", "com.badlogic.gdx.graphics.g2d.BitmapFontCache.addToCache(java.lang.CharSequence,float,float,int,int)", "com.badlogic.gdx.graphics.g2d.TextMarkup"]}, {"title": "libGDX 1.5.0 no audio for iPhone 5 but works for iPhone4s and simulato5", "body": "Hello everyone,\n\nI set up fresh sample project from libgdx 1.4.1 using generator. I added simple code:\n\n``` java\nMusic music;\n...\ncreate() {\n  ...\n  music = Gdx.audio.newMusic(new FileHandle(\"test.m4a\"));\n  music.play();\n```\n\nHere is the full sample project:\n[Sample project](https://github.com/b-wojtowicz/libgdx-issue-report-no-sound-iphone5)\n\nWhen launching this project on iPhone 5, there is no sound/music, but works for iPhone 4s and simulator.\n\nLet me know if you need more info.\n\nBest regards,\nBart\n", "url": "https://github.com/libgdx/libgdx/issues/2636", "user": "qbart", "labels": ["bug", "ios", "need more info"], "created": "2014-12-09 22:42:11", "closed": "2015-08-19 09:57:17", "commits": {}, "ttf": 252.00027777777777, "commitsDetails": []}, {"title": "RoboVM - ScreenUtils.getFrameBufferPixmap not working", "body": "Hi!,\n\nScreenUtils.getFrameBufferPixmap seems to result in a white Pixmap on iPad Mini. \n\nI also tried not clearing the frame buffer by removing glClear(GL_COLOR_BUFFER_BIT), but still results in a white screenshot.\n\nAny workarounds would be helpful!\n", "url": "https://github.com/libgdx/libgdx/issues/2632", "user": "AzmiTerato", "labels": ["bug", "ios"], "created": "2014-12-08 09:05:20", "closed": "2017-09-06 21:25:53", "commits": {}, "ttf": 1003.0002777777778, "commitsDetails": []}, {"title": "Sound issue with iOS 8.1", "body": "I have tested my application on various different devices for both android and iOS and it seems that when an iOS device is running 8.1 when a sound file is played using the Music class, The sound will begin at a lower volume and then jump to a high volume a few seconds in. Here's what it sounds like https://drive.google.com/file/d/0ByfvjZBeiV6qTnJhZ3Vja01KM0ZsZF9rZTQ4SmFkRlQzX24w/view?usp=sharing I have tried other audio formats and still the same problem.\n", "url": "https://github.com/libgdx/libgdx/issues/2624", "user": "argallo", "labels": ["bug", "ios"], "created": "2014-12-04 19:23:58", "closed": "2015-08-19 10:45:45", "commits": {}, "ttf": 257.0002777777778, "commitsDetails": []}, {"title": "NullPointerException in Android while using immersive mode.", "body": "I received this exception from a user, so I'm not sure about the specific scenario it happened.\n\njava.lang.NullPointerException\nat com.badlogic.gdx.backends.android.AndroidFragmentApplication.getApplicationWindow(AndroidFragmentApplication.java:420)\nat com.badlogic.gdx.backends.android.AndroidFragmentApplication.useImmersiveMode(AndroidFragmentApplication.java:105)\nat com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1.run(AndroidVisibilityListener.java:34)\nat android.os.Handler.handleCallback(Handler.java:733)\nat android.os.Handler.dispatchMessage(Handler.java:95)\nat android.os.Looper.loop(Looper.java:157)\nat android.app.ActivityThread.main(ActivityThread.java:5867)\nat java.lang.reflect.Method.invokeNative(Native Method)\nat java.lang.reflect.Method.invoke(Method.java:515)\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:858)\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:674)\nat dalvik.system.NativeStart.main(Native Method)\n\nMaybe this happened because the useImmersiveMode method runs as a post message and the Activity had already finished....\n\nThanks.\n", "url": "https://github.com/libgdx/libgdx/issues/2602", "user": "razboo", "labels": ["android", "bug"], "created": "2014-11-23 09:32:15", "closed": "2014-11-24 08:49:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "IOS/RoboVM, ScreenUtils , empty texture when multisampling enabled", "body": "It seems that readPixels, takes pixel data from wrong framebuffer resulting in empty pixels in screenshots when multisampling. As i googled , there is a glResolveMultisampleFramebufferAPPLE way (IOS + apple opengl extension ) and a glBlitFrameBuffer way (requires GL30) \n\nor \nFor ios 5.x+, in IOSGraphics. there is a GLKView.getDrawableMultisample()\npublic native UIImage snapshot();\n\nhttp://apidocs.robovm.com/1.0.0-SNAPSHOT/org/robovm/apple/glkit/GLKView.html#getDrawableMultisample()\n\nGLKView is hidden but it can be accessible from ((IOSGraphics)Gdx.graphics).getView() ? \n", "url": "https://github.com/libgdx/libgdx/issues/2590", "user": "yncki", "labels": ["bug", "ios"], "created": "2014-11-15 21:06:40", "closed": "2017-09-06 21:17:10", "commits": {}, "ttf": 1026.0002777777777, "commitsDetails": []}, {"title": "alcDestroyContext/DSoundOpenPlayback bug", "body": "```\nAL lib: (EE) DSoundOpenPlayback: Device init failed: 0x80070057\nAL lib: (EE) DSoundOpenPlayback: Device init failed: 0x80070057\nException in thread \"main\" java.lang.NullPointerException\nat org.lwjgl.openal.ALC10.alcDestroyContext(ALC10.java:362)\nat org.lwjgl.openal.AL.destroy(AL.java:210)\nat org.lwjgl.openal.AL.init(AL.java:175)\nat org.lwjgl.openal.AL.create(AL.java:138)\nat org.lwjgl.openal.AL.create(AL.java:102)\nat org.lwjgl.openal.AL.create(AL.java:201)\nat com.badlogic.gdx.backends.lwjgl.audio.OpenALAudio.<init>(OpenALAudio.java:72)\nat com.badlogic.gdx.backends.lwjgl.LwjglApplication.<init>(LwjglApplication.java:82)\nat com.badlogic.gdx.backends.lwjgl.LwjglApplication.<init>(LwjglApplication.java:64)\nat whatever.desktop.DesktopLauncher.main(DesktopLauncher.java:10)\n```\n\nhappens quite randomly, without any apparent reason, usually when debugging, but not always. Doesn't depend on the exact client code, happened with code not using sound/music, with project with almost no code at all (test one-liners) etc.\n", "url": "https://github.com/libgdx/libgdx/issues/2578", "user": "ghost", "labels": ["bug", "desktop"], "created": "2014-11-11 16:46:58", "closed": "2015-02-02 17:50:21", "commits": {"c604a7dd5f9bdb3fb2b2e2d4a354baa55cedd1c4": {"commitGHEventType": "closed", "commitUser": "badlogic"}}, "ttf": 83.00027777777778, "commitsDetails": [{"commitHash": "c604a7dd5f9bdb3fb2b2e2d4a354baa55cedd1c4", "commitGHEventType": "closed", "commitUser": "badlogic", "commitParents": ["b667872bcb317c6c234848af7afd6263057f011a"], "nameRev": "c604a7dd5f9bdb3fb2b2e2d4a354baa55cedd1c4 tags/1.5.4~23^2~1", "commitMessage": "Closes #2578, random crashes in OpenAL initialization. We now catch the exception thrown and disable audio for the run\n", "commitDateTime": "2015-02-02 18:50:20", "authoredDateTime": "2015-02-02 18:50:20", "commitGitStats": [{"filePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglApplication.java", "insertions": 9, "deletions": 3, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LwjglApplication.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.LwjglApplication", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c604a7dd5f9bdb3fb2b2e2d4a354baa55cedd1c4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 3, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.lwjgl.LwjglApplication"]}, {"title": "iOS8 AVAudioSession SetActive Error", "body": "We build our app using libgdx, it works perfectly well in ios7 or before, even ios8 stimulator.\nBut find an issue with AVAudioSession in iOS8.\n\nI get the following error message:\n\nAVAudioSession.mm:646: -[AVAudioSession setActive:withOptions:error:]: Deactivating an audio session that has running I/O. All I/O should be stopped or paused prior to deactivating the audio session.\n\nSame problem occurs in ios8 to others, they fixed as followed:\nhttp://stackoverflow.com/questions/24114323/ios8-avaudiosession-setactive-error\n\nIt is very urgent, waiting for the solution eagerly.\n", "url": "https://github.com/libgdx/libgdx/issues/2570", "user": "wdcmlds", "labels": ["bug", "ios"], "created": "2014-11-10 04:20:27", "closed": "2015-01-19 14:45:07", "commits": {}, "ttf": 70.00027777777778, "commitsDetails": []}, {"title": "Music not playing in Lollipop", "body": "First in Lollipop preview app freezed on MediaPlayer.prepare() call in final build of Lollipop no music is played at all...\nSound class is working fine, only Music is silent.\nThis shows up in Logcat\n![gfs](https://cloud.githubusercontent.com/assets/1550507/4925173/0f096e14-6529-11e4-8a83-b7f9c5a7fd1f.png)\n", "url": "https://github.com/libgdx/libgdx/issues/2550", "user": "asdf-qwert", "labels": ["android", "bug"], "created": "2014-11-05 20:20:49", "closed": "2014-11-19 00:28:42", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Crash on desktop (Music) Unable to allocate audio buffers", "body": "I have no idea why it happens. I am getting \"Unable to allocate audio buffers\" exception. It's throwed from OpenALMusic.play().\nUnfortunately I can't check what alGetError() returned because you are checking only if it has error or not. \n\nWhen it happens:\nOnly on desktop when I am switching between menu and game scene. Sometimes I have to switch few times, sometimes several times but it happens pretty randomly.\n\nWhat I've found so far: \n-I don't use negative volume of the music\n-I dispose music. The code fragment below is even more I need because I clear the manager after all but it still doesn't help. \n\n```\n        Array<Music> tempMusicsListToStop = new Array<Music>();\n        gameSpecialMeta.manager.getAll(Music.class, tempMusicsListToStop);  \n        for(Music music : tempMusicsListToStop){\n            music.stop();\n            music.dispose();\n        }\n                    gameSpecialMeta.manager.clear();\n```\n\nIt's called everytime in MenuScreen constructor.\n\nWhat can be wrong? Is it possible that it's internal bug or something?\n", "url": "https://github.com/libgdx/libgdx/issues/2537", "user": "MateuszGawel", "labels": ["bug", "desktop"], "created": "2014-11-02 16:37:17", "closed": "2015-02-02 17:52:53", "commits": {}, "ttf": 92.00027777777778, "commitsDetails": []}, {"title": "Minor inconsistency in Matrix3 rotate Javadocs", "body": "Occasionally messed my thoughts for a while. Placing the issue not to forget that this should be fixed.\nFollowing two Matrix3 methods affected:\n**setToRotationRad**\n**rotateRad**\n\nFor this methods in javadoc - param **radians** is described as angle in **degrees**\n\n``` java\n    /** Sets this matrix to a rotation matrix that will rotate any vector in counter-clockwise direction around the z-axis.\n     * @param radians the angle in degrees.\n     * @return This matrix for the purpose of chaining operations. */\n    public Matrix3 setToRotationRad (float radians) {\n        ...\n```\n", "url": "https://github.com/libgdx/libgdx/issues/2517", "user": "rinold", "labels": ["bug"], "created": "2014-10-29 11:20:28", "closed": "2014-10-29 12:59:01", "commits": {"e2e545ade4a5cbc42cd93f9ef4985bf0cdea89ce": {"commitGHEventType": "closed", "commitUser": "davebaol"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e2e545ade4a5cbc42cd93f9ef4985bf0cdea89ce", "commitGHEventType": "closed", "commitUser": "davebaol", "commitParents": ["450175968146b5f3ed7f9179cb37ae1e8bd5e5af"], "nameRev": "e2e545ade4a5cbc42cd93f9ef4985bf0cdea89ce tags/gdx-parent-1.5.0~51", "commitMessage": "Fixes #2517", "commitDateTime": "2014-10-29 13:58:56", "authoredDateTime": "2014-10-29 13:58:56", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/math/Matrix3.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Matrix3.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e2e545ade4a5cbc42cd93f9ef4985bf0cdea89ce"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"]}, {"title": "[Android] TextField and OnScreenKeyBoard error ! ", "body": "Hi,\nI using TextField to input string. When i use SamSung (Samsung Galaxy S3) keyboard, the keyboard always pop. But when I type anything, it don't display any letters. The problems seems to appear only when \"predictive text\" is enabled. Please, fix it. It is really uncomfortable :(\n", "url": "https://github.com/libgdx/libgdx/issues/2491", "user": "saruno", "labels": ["android", "bug"], "created": "2014-10-23 10:09:30", "closed": "2016-01-05 17:19:37", "commits": {}, "ttf": 439.0002777777778, "commitsDetails": []}, {"title": "GWT: Missing method-stub 5473 for method HashMap", "body": "When trying to read a JSON file from a particular class with fromJson(), the GWT app throws a \"Missing method-stub 5473 for method HashMap\" exception. The class in question contains a single HashMap<String,Object> where Object is a complex class.\n\nLooking in the reflection cache, I see that an entry for the HashMap constructor id'ed with 5473 is present but it does not appear in a switch statement.\n\n(FWIW I'm using gdx.reflect.include to contain quite a few classes. A couple have inner classes that throw com.google.gwt.core.ext.typeinfo.NotFoundException but I'm not using them for reflection)\n\nUsing libGDX 1.4.1, GWT 2.6.0.\n", "url": "https://github.com/libgdx/libgdx/issues/2456", "user": "sehugg", "labels": ["bug", "gwt"], "created": "2014-10-11 01:53:08", "closed": "2014-11-16 13:51:01", "commits": {}, "ttf": 36.000277777777775, "commitsDetails": []}, {"title": "BitmapFontCache setting colors goes wrong, ", "body": "Hi,\nI tried myself the last 3 hrs of setting up a good testcase but I am not 100% sure what goes wrong:\nWhat happens:\nIt's not possible to change the color of tb1 after it was set the first time. The actions have no effect.\nIf I create a new BitmapFont or set the style, so a new BitmapFontCache is created I can set the color as many times as I want to.\nIt's not a real testcase but I didnt know how to put everything in one class as you would need more, if you need the testproject with files etc, I could upload it.\n\n``` java\n    /**\n     * the font of the textbuttonstyle is created by Smartfontgenerator\n     */\n    public static void testTextButton() {\n        RessourceManager.stage.clear();\n\n        final Table testTbl = new Table();\n        final TextButton tb1 = new TextButton(\"FAILS\",\n                RessourceManager.primaryButtonStyle);\n\n        // ###########\n        // has the same effect as if I would call tb2.setStyle(tb2.getStyle())\n        // AFTER the first render call\n        BitmapFont bf = new BitmapFont(\n                RessourceManager.primaryButtonStyle.font.getData(),\n                (TextureRegion) null, false);\n        RessourceManager.primaryButtonStyle.font = bf;\n        // ###########\n\n        final TextButton tb2 = new TextButton(\"WORKS\",\n                RessourceManager.primaryButtonStyle);\n        tb2.setStyle(tb2.getStyle());\n        // **\n        tb1.addAction(Actions.alpha(0));\n        tb1.addAction(Actions.delay(1, Actions.alpha(1)));\n        tb1.addAction(Actions.delay(1, Actions.color(new Color(1, 1, 1, 1))));\n        tb1.addAction(Actions.delay(1, Actions.run(new Runnable() {\n\n            @Override\n            public void run() {\n                // would fix it\n                // tb1.setStyle(tb1.getStyle());\n            }\n        })));\n        testTbl.add(tb1);\n        testTbl.row();\n\n        tb2.addAction(Actions.alpha(0));\n        tb2.addAction(Actions.delay(1, Actions.alpha(1)));\n        // set it a second time\n        tb2.addAction(Actions.delay(2, Actions.alpha(0.2f)));\n        tb2.addAction(Actions.delay(3, Actions.alpha(1f)));\n        // third time\n        tb2.addAction(Actions.delay(4, Actions.run(new Runnable() {\n\n            @Override\n            public void run() {\n                TextButton tb3 = new TextButton(\"WORKS too\",\n                        RessourceManager.primaryButtonStyle);\n                tb3.addAction(Actions.alpha(0));\n                tb3.addAction(Actions.delay(1, Actions.alpha(1)));\n                testTbl.add(tb3);\n                testTbl.row();\n            }\n        })));\n        testTbl.add(tb2);\n        testTbl.row();\n\n        testTbl.setPosition(Gdx.graphics.getWidth() / 2,\n                Gdx.graphics.getHeight() / 2, Align.center);\n        RessourceManager.stage.addActor(testTbl);\n    }\n```\n\nI think it's caused by these changes:\nhttps://github.com/libgdx/libgdx/commit/0c0e308fb2b691723434f0ca425b71c3fc55c671?w=1\nSmartFontgenerator loades the fonts that way:\nnew BitmapFont(Gdx.files.external(\"myFont.fnt\"));\nI dont think that tint() goes wrong, I assume that the loaded BitmapFont isnt compatible with the changes  but I dont know why. It's just a assumption. I will have a look at it after getting some sleep :)\n", "url": "https://github.com/libgdx/libgdx/issues/2433", "user": "Phibedy", "labels": ["bug"], "created": "2014-10-08 00:21:27", "closed": "2014-12-29 20:18:45", "commits": {"8e945d855bcc3fbf644aef71419c0af3fc886eda": {"commitGHEventType": "referenced", "commitUser": "davebaol"}}, "ttf": 82.00027777777778, "commitsDetails": [{"commitHash": "8e945d855bcc3fbf644aef71419c0af3fc886eda", "commitGHEventType": "referenced", "commitUser": "davebaol", "commitParents": ["a8cf93860bb9c25ebc5365a558ea041d100ab9f3", "1c79678aa01675076041b3b68d694659ed0c7866"], "nameRev": "8e945d855bcc3fbf644aef71419c0af3fc886eda tags/1.5.2~2^2~1", "commitMessage": "Merge pull request #2677 from alex-dorokhov/bfc-markdown-fixes\n\nRefactor BitmapFontCache color markup and fix #2433", "commitDateTime": "2014-12-29 21:18:45", "authoredDateTime": "2014-12-29 21:18:45", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java", "insertions": 31, "deletions": 173, "lines": 204}, {"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/TextMarkup.java", "insertions": 187, "deletions": 0, "lines": 187}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontTest.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BitmapFontCache.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache", "TOT": 11, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 5}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.updateCurrentChunk(int,com.badlogic.gdx.graphics.Color)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.tint(com.badlogic.gdx.graphics.Color)", "TOT": 11, "UPD": 3, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.clear()", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.parseAndSetColor(java.lang.CharSequence,int,int)", "TOT": 9, "UPD": 5, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.addColorChunk(float,boolean)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.ColorChunk.reset()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.setColors(com.badlogic.gdx.graphics.Color,int,int)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.addToCache(java.lang.CharSequence,float,float,int,int)", "TOT": 21, "UPD": 4, "INS": 4, "MOV": 12, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.setColor(com.badlogic.gdx.graphics.Color)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.setColor(float)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.obtainColorChunk(float,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.ColorChunk", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.setColor(float,float,float,float)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph,float,float,float,float)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TextMarkup.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.TextMarkup", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BitmapFontTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.BitmapFontTest.render()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Spritebatch and Shaders disordering.", "body": "Hello, I've opened the following issue: https://github.com/libgdx/libgdx/issues/2367\nIt was then closed and I reposted and got no response from it.\nI don't know exactly if I was supposed to create a new issue or not, sorry if wasn't. So, could someone clarify these points?\nI would be very glad.\nThank you.\n\nThe actual comment I posted on the previous issue ->\n\nI think there is something pretty strange with the behavior of the framebuffer. I tried to boil it down for testing and I apparently found a new issue.\n\nThe blending functions here are the same I used on my game (http://www.mediafire.com/download/x7qqa3z5h4ilbsu/jogo37_frameskip=10-shadow=true.jar), which is running fine on windows.\n\nThe code went like that:\n\n```\nfinal static String VERT =  \n        \"attribute vec4 \"+ShaderProgram.POSITION_ATTRIBUTE+\";\\n\" +\n        \"attribute vec4 \"+ShaderProgram.COLOR_ATTRIBUTE+\";\\n\" +\n        \"attribute vec2 \"+ShaderProgram.TEXCOORD_ATTRIBUTE+\"0;\\n\" +\n\n        \"uniform mat4 u_projTrans;\\n\" + \n        \" \\n\" + \n        \"varying vec4 vColor;\\n\" +\n        \"varying vec2 vTexCoord;\\n\" +\n\n        \"void main() {\\n\" +  \n        \"   vColor = \"+ShaderProgram.COLOR_ATTRIBUTE+\";\\n\" +\n        \"   vTexCoord = \"+ShaderProgram.TEXCOORD_ATTRIBUTE+\"0;\\n\" +\n        \"   gl_Position =  u_projTrans * \" + ShaderProgram.POSITION_ATTRIBUTE + \";\\n\" +\n        \"}\";\n\nfinal static String FRAG = \n        //GL ES specific stuff\n          \"#ifdef GL_ES\\n\" //\n        + \"#define LOWP lowp\\n\" //\n        + \"precision mediump float;\\n\" //\n        + \"#else\\n\" //\n        + \"#define LOWP \\n\" //\n        + \"#endif\\n\" + //\n        \"//texture 0\\n\" + \n        \"uniform sampler2D u_texture;\\n\" + \n        \"\\n\" + \n        \"//our screen resolution, set from Java whenever the display is resized\\n\" + \n        \"uniform vec2 resolution;\\n\" + \n        \"\\n\" + \n        \"//screen color RGB(Intensity)\\n\" + \n        \"uniform LOWP vec4 ambient; \\n\" + \n        \"\\n\" + \n        \"//\\\"in\\\" attributes from our vertex shader\\n\" + \n        \"varying LOWP vec4 vColor;\\n\" +\n        \"varying vec2 vTexCoord;\\n\" + \n        \"\\n\" + \n        \"//RADIUS of our vignette, where 0.5 results in a circle fitting the screen\\n\" + \n        \"const float RADIUS = 0.75;\\n\" + \n        \"\\n\" + \n        \"//softness of our vignette, between 0.0 and 1.0\\n\" + \n        \"const float SOFTNESS = 0.75;\\n\" + \n        \"\\n\" + \n        \"void main() {\\n\" + \n        \"   //sample our texture\\n\" + \n        \"   vec4 texColor = texture2D(u_texture, vTexCoord);\\n\" + \n        \"       \\n\" + \n        \"   //1. VIGNETTE\\n\" + \n        \"   \\n\" + \n        \"   //determine center position\\n\" + \n        \"   vec2 position = (gl_FragCoord.xy / resolution.xy) - vec2(0.5);\\n\" + \n        \"   \\n\" + \n        \"   //determine the vector length of the center position\\n\" + \n        \"   float len = length(position);\\n\" + \n        \"   \\n\" + \n        \"   //use smoothstep to create a smooth vignette\\n\" + \n        \"   float vignette = smoothstep(RADIUS, RADIUS-SOFTNESS, len);\\n\" + \n        \"   \\n\" + \n        \"   //apply the vignette with 60% opacity\\n\" + \n        \"   texColor.rgb = mix(texColor.rgb, texColor.rgb * vignette, 0.6);\\n\" + \n        \"       \\n\" + \n        \"   //2. GRAYSCALE\\n\" + \n        \"   \\n\" +\n        \"   //convert to grayscale using NTSC conversion weights\\n\" + \n        \"   float gray = dot(texColor.rgb, vec3(0.299, 0.587, 0.114));\\n\" + \n        \"   \\n\" + \n        \"   //create our sepia tone from some constant value\\n\" + \n        \"   vec3 sepiaColor = vec3(gray) * ambient.rgb;\\n\" + \n        \"       \\n\" + \n        \"   //again we'll use mix so that the sepia effect is at somewhere\\n\" + \n        \"   texColor.rgb = mix(texColor.rgb, sepiaColor, ambient.a);\\n\" + \n        \"       \\n\" + \n        \"   //final colour, multiplied by vertex colour\\n\" + \n        \"   gl_FragColor = texColor * vColor;\\n\" + \n        \"}\";\n\n@Override\npublic void resize(int width, int height) {\n    oc.setToOrtho(false, width, height);\n    batch.setProjectionMatrix(oc.combined);\n}\n@Override\npublic void create(){\n    shader = new ShaderProgram(VERT, FRAG);\n    batch = new SpriteBatch();\n    frameBuffer = new FrameBuffer(Format.RGBA8888, Gdx.graphics.getWidth(), Gdx.graphics.getHeight(), false);\n    oc = new OrthographicCamera();  \n    oc.setToOrtho(false, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n}\npublic ShaderProgram shader = null;\npublic SpriteBatch batch = null;\npublic FrameBuffer frameBuffer = null;\nOrthographicCamera oc = null;\n@Override\npublic void render() {\n    Gdx.gl.glClearColor(0f, 0f, 0f, 0f);\n    Gdx.gl.glClear(Gdx.gl.GL_COLOR_BUFFER_BIT);\n\n    Texture mario1 = new Texture(Gdx.files.internal(\"data/mario.png\")),\n            mario2 = new Texture(Gdx.files.internal(\"data/mario.png\")),\n            mario3 = new Texture(Gdx.files.internal(\"data/mario.png\")),\n            mario4 = new Texture(Gdx.files.internal(\"data/mario.png\")),\n            mario5 = new Texture(Gdx.files.internal(\"data/mario.png\")),\n            mario6 = new Texture(Gdx.files.internal(\"data/mario.png\"));\n\n    shader.begin();\n    shader.setUniformf(\"ambient\", 1.2f, 1.0f, 0.8f, 1.0f);\n\n\n\n    batch.setBlendFunction(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE_MINUS_SRC_ALPHA);\n    Gdx.gl20.glBlendFuncSeparate(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE_MINUS_SRC_ALPHA, GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);\n\n\n    batch.setProjectionMatrix(oc.combined);\n\n\n    batch.begin();\n\n\n    //1\n    batch.draw(mario1, 0, 0);\n\n    frameBuffer.begin();\n\n\n    //2\n    batch.draw(mario2, mario1.getWidth(), 0);\n\n    batch.setShader(shader);\n\n    //3\n    batch.draw(mario3, mario1.getWidth()*2, 0);\n\n    batch.setBlendFunction(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE); //ignore the batch blend function\n    Gdx.gl20.glBlendFuncSeparate(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE, GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);\n\n    //4\n    batch.draw(mario4, 0, mario1.getHeight());\n\n    batch.setBlendFunction(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE_MINUS_SRC_ALPHA); //ignore the batch blend function\n    Gdx.gl20.glBlendFuncSeparate(GL20.GL_SRC_ALPHA,\n            GL20.GL_ONE_MINUS_SRC_ALPHA, GL20.GL_SRC_ALPHA, GL20.GL_ONE_MINUS_SRC_ALPHA);\n\n    Sprite fB = new Sprite(frameBuffer.getColorBufferTexture());\n    fB.flip(false, true);\n    batch.draw(fB, 0, 0, frameBuffer.getColorBufferTexture().getWidth(), frameBuffer.getColorBufferTexture().getHeight());\n    frameBuffer.end();\n\n\n    //5\n    batch.draw(mario5, mario3.getWidth(), mario1.getHeight());\n\n    batch.setShader(null);\n\n    //6\n    batch.draw(mario5, mario3.getWidth()*2, mario1.getHeight());\n\n    batch.end();\n\n    mario1.dispose(); mario2.dispose(); mario3.dispose(); mario4.dispose(); mario5.dispose(); mario6.dispose();\n}\n\n@Override\npublic void pause() {\n\n}\n\n@Override\npublic void resume() {\n    // TODO Auto-generated method stub\n\n}\n\n@Override\npublic void dispose() {\n    // TODO Auto-generated method stub\n\n}\n```\n\nAnd I get this (look, only the mario 5 and 6 are being \"rendered\").\nhttp://s15.postimg.org/qifzzor23/mario1.png\n\nwhen I take the frameBuffer.begin() and frameBuffer.end() lines and remove them, I get this:\nhttp://s28.postimg.org/6dtbws1yl/mario1.png\nWhere all marios appear on the screen.\n\nBy removing the blendfunctions, all of them, and also keeping the frameBuffer.begin() and frameBuffer.end(). I get this:\nhttp://s21.postimg.org/q71ziamsn/mario1.png\nMario 1, 2 and 3 do not appear.\nIs this supposed to happen?\n\nIf I shift the frameBuffer.being() priorly to the batch.being(), I also get the same previous screen.\n\nIf I keep the blendfunctions deleted and the lines frameBuffer.begin() and frameBuffer.end() intact and I dont use the shader, then I get the following result:\nhttp://s29.postimg.org/nb5aaub5z/mario1.png\n\nMy question is: Is that supposed to happen? Mario 1, 2, 3 and also 4 not being rendered? If so, why that?\n\nThank you in advance.\nPS.: I was running on a windows 8 for now.\nHeres the mario png if necessary: http://s30.postimg.org/qvhwvvt35/novo.png\nPS2.: Libgdx 1.3.1\n", "url": "https://github.com/libgdx/libgdx/issues/2432", "user": "Oyatsumi", "labels": ["bug"], "created": "2014-10-07 23:12:53", "closed": "2015-02-02 18:01:12", "commits": {}, "ttf": 117.00027777777778, "commitsDetails": []}, {"title": "Screen rotation doesn't work correctly on iOS.", "body": "When the phone is rotated the viewport is not resized correctly resulting in graphics that don't fit to the screen. See this topic:\nhttp://www.badlogicgames.com/forum/viewtopic.php?f=11&t=16518\n\nThere needs to be a call to Gdx.gl20.glViewport at some point after rotation but my knowledge of the libgdx code isn't good enough for me to be able to resolve this confidently.\n", "url": "https://github.com/libgdx/libgdx/issues/2386", "user": "WillCalderwood", "labels": ["bug", "ios"], "created": "2014-09-26 09:33:23", "closed": "2014-09-27 15:06:19", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "FileHandle methods crash some Android devices (ErrnoException)", "body": "I have a project that creates an external folder on the SD card and puts a \"credits.txt\" file in this directory.\n\nThis error only occurs with a few Android devices, they all seem to be \"low-end\" devices, here's a few:\nhttp://www.gsmarena.com/lenovo_s720-5243.php\nhttp://www.gsmarena.com/sony_xperia_tipo-4718.php\nhttp://www.gsmchoice.com/en/catalogue/kyocera/event/Kyocera-Event.html\n\n**This is the error:**\n\n```\nException: com.badlogic.gdx.utils.GdxRuntimeException: Error writing file: directory/credits.txt (External)\nat com.badlogic.gdx.files.FileHandle.writeString(FileHandle.java:351)\nat com.badlogic.gdx.files.FileHandle.writeString(FileHandle.java:337)\nat package.App.createCreditsFile(App.java:436)\nat ...\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: Error writing file: directory/credits.txt (External)\nat com.badlogic.gdx.files.FileHandle.writer(FileHandle.java:328)\nat com.badlogic.gdx.files.FileHandle.writeString(FileHandle.java:348)\nat ...\nCaused by: java.io.FileNotFoundException: /mnt/sdcard/directory/credits.txt: open failed: ENOENT (No such file or directory)\nat libcore.io.IoBridge.open(IoBridge.java:416)\nat java.io.FileOutputStream.<init>(FileOutputStream.java:88)\nat com.badlogic.gdx.files.FileHandle.writer(FileHandle.java:320)\nat ...\nCaused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory)\nat libcore.io.Posix.open(Native Method)\nat libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)\nat libcore.io.IoBridge.open(IoBridge.java:400) ... 9 more\n```\n\n**Here's the code in question:**\n\n```\nprivate void createCreditsFile()\n{\n    if (Gdx.files.isExternalStorageAvailable() == false)\n        return;\n\n    // Create the credits text file if it doesn't exist.\n    // -------------------------------------------------\n    FileHandle creditsTextFile = Gdx.files.external(\"directory/credits.txt\");\n\n    if (creditsTextFile.exists() == false)\n        creditsTextFile.writeString(\"blah blah\", false);\n}\n```\n\n**Upon changing the above code to this following code, I stopped receiving the error, though I'm not sure if I'm simply suppressing the error or if the following code does actually work on these problematic devices (basically just converting the FileHandle to a File and writing with that):**\n\n```\nprivate void createCreditsFile()\n{\n    if (Gdx.files.isExternalStorageAvailable() == false)\n        return;\n\n    // Create the credits text file if it doesn't exist.\n    // -------------------------------------------------\n    FileHandle creditsTextFile = Gdx.files.external(\"directory/credits.txt\");\n    File file = creditsTextFile.file();\n\n    if (creditsTextFile.exists() == false)\n    {\n        try\n        {\n            FileWriter fw = new FileWriter(file);\n            fw.write(\"blah, blah\");\n            fw.close();\n        }\n        catch (IOException e)\n        {\n        }\n    }\n}\n```\n\nVery annoying little error, keeps popping up every day in my Analytics from a very limited amount of users - not sure if its actually a bug or something that I can fix on my end.\n", "url": "https://github.com/libgdx/libgdx/issues/2385", "user": "rdamiano", "labels": ["android", "bug"], "created": "2014-09-25 17:53:47", "closed": "2015-06-06 17:19:51", "commits": {}, "ttf": 253.00027777777777, "commitsDetails": []}, {"title": "Wrong graphic bound on iOS 8.", "body": "![wrong layout](https://cloud.githubusercontent.com/assets/4622117/4403924/812b6fa0-44aa-11e4-88b5-664a265fcb7b.png)\n- I'm using Xcode 6, Robovm latest nightly (09-25), latest Libgdx framework.\n", "url": "https://github.com/libgdx/libgdx/issues/2383", "user": "truonguit2010", "labels": ["bug", "ios"], "created": "2014-09-25 11:55:00", "closed": "2014-09-27 15:06:58", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Pixmap bad compression exception on iOS devices", "body": "I am developing a game using Libgdx for Android and iOS devices.\n\nThe game runs great on Android devices and iOS Simulator.\n\nHowever, I am facing issue when I try to deploy application on real iOS device.\n\nApplication get installed and could not load the images with following error logs.\n\n```\n\n[debug] IOSApplication: View: Portrait 640x1096\n\n[debug] IOSGraphics: 640.0x1096.0, 2.0\n\n[debug] IOSGraphics: Calculating density, UIScreen.mainScreen.scale: 2.0\n\n[debug] IOSGraphics: Display: ppi=326, density=2.0\n\n[debug] IOSApplication: created\n\n[debug] IOSApplication: resumed\n\ncom.badlogic.gdx.utils.GdxRuntimeException: Couldn't load file: BPlane.png\n\nat com.badlogic.gdx.graphics.Pixmap.<init>(Pixmap.java)\n\nat com.badlogic.gdx.graphics.glutils.FileTextureData.prepare(FileTextureData.java)\n\nat com.badlogic.gdx.graphics.Texture.load(Texture.java)\n\nat com.badlogic.gdx.graphics.Texture.<init>(Texture.java)\n\nat com.badlogic.gdx.graphics.Texture.<init>(Texture.java)\n\nat com.badlogic.gdx.graphics.Texture.<init>(Texture.java)\n\nat com.badlogic.gdx.graphics.Texture.<init>(Texture.java)\n\nat com.dhp.kites.BlueAssets.load(BlueAssets.java)\n\nat com.dhp.kites.MainMenu.<init>(MainMenu.java)\n\nat com.dhp.kites.PP.create(PP.java)\n\nat com.badlogic.gdx.backends.iosrobovm.IOSGraphics.draw(IOSGraphics.java)\n\nat com.badlogic.gdx.backends.iosrobovm.IOSGraphics$1.draw(IOSGraphics.java)\n\nat org.robovm.apple.uikit.UIView.$cb$drawRect$(UIView.java)\n\nat org.robovm.apple.uikit.UIApplication.main(Native Method)\n\nat org.robovm.apple.uikit.UIApplication.main(UIApplication.java)\n\nat com.dhp.kites.IOSLauncher.main(IOSLauncher.java)\n\nCaused by: java.io.IOException: couldn't load pixmap bad compression\n\nat com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.<init>(Gdx2DPixmap.java)\n\n... 16 more\n\n```\n\nAny help would be appreciated.\n\nSorry if this is not an actual issue for LibGdx , I am not sure , so posted here.\n\nThanks \n", "url": "https://github.com/libgdx/libgdx/issues/2362", "user": "dhpinfotech", "labels": ["bug", "ios"], "created": "2014-09-21 18:00:31", "closed": "2014-09-27 14:16:13", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "LibGDX doesn't scale properly on iPhone 6+ or iPhone 6 in zoomed mode", "body": "in IOSGraphics.java, the code only handles device scale == 2. Since the 6+ has scale of 3, games are shrunk to a corner of the screen in the 6+. We need to modify this to simply multiply by the scale in all cases.\n\nThere is also a perhaps more subtle bug on the iPhone 6 in \"zoomed\" mode. In a similar way, the game is restricted to a corner of the screen. Not exactly sure here what the fix is, still diagnosing it.\n", "url": "https://github.com/libgdx/libgdx/issues/2356", "user": "PaulMaxime", "labels": ["bug", "ios"], "created": "2014-09-20 17:28:53", "closed": "2014-10-03 15:34:06", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Fix orientation dependent width/height issue in iOS 8", "body": "iOS 8 introduces the notion of orientation dependent width/heights. See http://stackoverflow.com/questions/24150359/is-uiscreen-mainscreen-bounds-size-becoming-orientation-dependent-in-ios8\n\nThis breaks the iOS implementation of libgdx. Apps crash right after the splash screen. A good example is the GDX Super Jumper sample app (https://itunes.apple.com/us/app/gdx-super-jumper/id704308213?mt=8&uo=4). \n\nSee http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=16401 for more information.\n", "url": "https://github.com/libgdx/libgdx/issues/2350", "user": "thomasdc", "labels": ["bug", "ios"], "created": "2014-09-19 06:34:13", "closed": "2014-09-24 12:45:32", "commits": {"4a26ed3287adeeed4b5f5fe69644b51210569da5": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "4a26ed3287adeeed4b5f5fe69644b51210569da5", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["9a060595457d1895095f376b41d4849675da2d10"], "nameRev": "4a26ed3287adeeed4b5f5fe69644b51210569da5 tags/1.4.0~42", "commitMessage": "fixes issue #2350, width/height in landscape on iOS 8.0 was switched. Thanks Apple!\n", "commitDateTime": "2014-09-24 14:45:06", "authoredDateTime": "2014-09-24 14:45:06", "commitGitStats": [{"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSApplication.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSApplication.getBounds(org.robovm.apple.uikit.UIViewController)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IOSRobovmTests.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.IOSRobovmTests.createApplication()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4a26ed3287adeeed4b5f5fe69644b51210569da5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.iosrobovm.IOSApplication.getBounds(org.robovm.apple.uikit.UIViewController)"]}, {"title": "Assets copying with GWT crashes", "body": "Whenever I build the GWT distribution (gradlew html:dist) or use superDev mode (gradlew html:superDev) I often get an error. This error can be for any random asset, not open in another application as far as I know. It seems that retrying a couple of times, shutting down other java applications (which of one seems to be spawned by the gradle process and not to disappear) . I have IntelliJ open, but have the assets folder as excluded.\n\nOccasionally the problem disappears and everything works flawless. If I restart my computer then, things start to fail again most likely.\n\nThis is a very annoying bug and makes working with GWT somewhat miserable at times.\n\n```\nConfiguration on demand is an incubating feature.\n:html:clean\n:html:addSource\n:core:compileJava UP-TO-DATE\n:core:processResources UP-TO-DATE\n:core:classes UP-TO-DATE\n:core:jar UP-TO-DATE\n:html:compileJava\n:html:processResources UP-TO-DATE\n:html:compileGwt\nC:\\Users\\Kajos\\Projects\\TinyVoxelGeneric\\html\\.\n../core/assets\nCopying resources from ../core/assets to war/\nC:\\Users\\Kajos\\Projects\\TinyVoxelGeneric\\html\\..\\core\\assets\nC:\\Users\\Kajos\\Projects\\TinyVoxelGeneric\\html\\assets\nC:\\Users\\Kajos\\Projects\\TinyVoxelGeneric\\html\\.\n../core/assets\nCopying resources from ../core/assets to war/\nC:\\Users\\Kajos\\Projects\\TinyVoxelGeneric\\html\\..\\core\\assets\nC:\\Users\\Kajos\\Projects\\TinyVoxelGeneric\\html\\assets\nC:\\Users\\Kajos\\Projects\\TinyVoxelGeneric\\html\\.\n../core/assets\nCopying resources from ../core/assets to war/\nC:\\Users\\Kajos\\Projects\\TinyVoxelGeneric\\html\\..\\core\\assets\nC:\\Users\\Kajos\\Projects\\TinyVoxelGeneric\\html\\assets\nCompiling module com.toet.TinyVoxel.GdxDefinition\n   Computing all possible rebind results for 'com.badlogic.gdx.backends.gwt.preloader.PreloaderBundle'\n      Rebinding com.badlogic.gdx.backends.gwt.preloader.PreloaderBundle\n         Invoking generator com.badlogic.gdx.backends.gwt.preloader.PreloaderBundleGenerator\n            [ERROR] Generator 'com.badlogic.gdx.backends.gwt.preloader.PreloaderBundleGenerator' threw an exception while rebinding 'com.badlogic.gdx.backends.gwt.preloader.PreloaderBundle'\ncom.badlogic.gdx.utils.GdxRuntimeException: Error copying source file: ..\\core\\assets\\font\\BADABB__-12.fnt\nTo destination: war\\assets\\font\\BADABB__-12.fnt\n    at com.badlogic.gdx.backends.gwt.preloader.PreloaderBundleGenerator.copyFile(PreloaderBundleGenerator.java:144)\n    at com.badlogic.gdx.backends.gwt.preloader.PreloaderBundleGenerator.copyDirectory(PreloaderBundleGenerator.java:160)\n    at com.badlogic.gdx.backends.gwt.preloader.PreloaderBundleGenerator.copyDirectory(PreloaderBundleGenerator.java:158)\n    at com.badlogic.gdx.backends.gwt.preloader.PreloaderBundleGenerator.generate(PreloaderBundleGenerator.java:86)\n    at com.google.gwt.core.ext.IncrementalGenerator.generateNonIncrementally(IncrementalGenerator.java:40)\n    at com.google.gwt.dev.javac.StandardGeneratorContext.runGeneratorIncrementally(StandardGeneratorContext.java:676)\n    at com.google.gwt.dev.cfg.RuleGenerateWith.realize(RuleGenerateWith.java:41)\n    at com.google.gwt.dev.shell.StandardRebindOracle$Rebinder.rebind(StandardRebindOracle.java:79)\n    at com.google.gwt.dev.shell.StandardRebindOracle.rebind(StandardRebindOracle.java:276)\n    at com.google.gwt.dev.shell.StandardRebindOracle.rebind(StandardRebindOracle.java:265)\n    at com.google.gwt.dev.DistillerRebindPermutationOracle.getAllPossibleRebindAnswers(DistillerRebindPermutationOracle.java:91)\n    at com.google.gwt.dev.jjs.impl.UnifyAst$UnifyVisitor.handleGwtCreate(UnifyAst.java:387)\n    at com.google.gwt.dev.jjs.impl.UnifyAst$UnifyVisitor.handleMagicMethodCall(UnifyAst.java:465)\n    at com.google.gwt.dev.jjs.impl.UnifyAst$UnifyVisitor.endVisit(UnifyAst.java:255)\n    at com.google.gwt.dev.jjs.ast.JMethodCall.traverse(JMethodCall.java:244)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.traverse(JModVisitor.java:361)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.accept(JModVisitor.java:273)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.accept(JModVisitor.java:265)\n    at com.google.gwt.dev.jjs.ast.JVisitor.accept(JVisitor.java:117)\n    at com.google.gwt.dev.jjs.ast.JExpressionStatement.traverse(JExpressionStatement.java:41)\n    at com.google.gwt.dev.jjs.ast.JModVisitor$ListContextImmutable.traverse(JModVisitor.java:170)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.acceptWithInsertRemoveImmutable(JModVisitor.java:336)\n    at com.google.gwt.dev.jjs.ast.JBlock.traverse(JBlock.java:83)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.traverse(JModVisitor.java:361)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.accept(JModVisitor.java:273)\n    at com.google.gwt.dev.jjs.ast.JVisitor.accept(JVisitor.java:138)\n    at com.google.gwt.dev.jjs.ast.JVisitor.accept(JVisitor.java:134)\n    at com.google.gwt.dev.jjs.ast.JMethodBody.traverse(JMethodBody.java:82)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.traverse(JModVisitor.java:361)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.accept(JModVisitor.java:273)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.accept(JModVisitor.java:265)\n    at com.google.gwt.dev.jjs.ast.JMethod.visitChildren(JMethod.java:449)\n    at com.google.gwt.dev.jjs.ast.JConstructor.traverse(JConstructor.java:129)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.traverse(JModVisitor.java:361)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.accept(JModVisitor.java:273)\n    at com.google.gwt.dev.jjs.ast.JModVisitor.accept(JModVisitor.java:265)\n    at com.google.gwt.dev.jjs.impl.UnifyAst.mainLoop(UnifyAst.java:940)\n    at com.google.gwt.dev.jjs.impl.UnifyAst.exec(UnifyAst.java:665)\n    at com.google.gwt.dev.jjs.JavaToJavaScriptCompiler.precompile(JavaToJavaScriptCompiler.java:672)\n    at com.google.gwt.dev.jjs.JavaScriptCompiler.precompile(JavaScriptCompiler.java:34)\n    at com.google.gwt.dev.Precompile.precompile(Precompile.java:271)\n    at com.google.gwt.dev.Precompile.precompile(Precompile.java:223)\n    at com.google.gwt.dev.Precompile.precompile(Precompile.java:139)\n    at com.google.gwt.dev.Compiler.run(Compiler.java:167)\n    at com.google.gwt.dev.Compiler.run(Compiler.java:132)\n    at com.google.gwt.dev.Compiler$1.run(Compiler.java:99)\n    at com.google.gwt.dev.CompileTaskRunner.doRun(CompileTaskRunner.java:55)\n    at com.google.gwt.dev.CompileTaskRunner.runWithAppropriateLogger(CompileTaskRunner.java:50)\n    at com.google.gwt.dev.Compiler.main(Compiler.java:106)\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: Error stream writing to file: war\\assets\\font\\BADABB__-12.fnt (Absolute)\n    at com.badlogic.gdx.backends.gwt.preloader.FileWrapper.write(FileWrapper.java:291)\n    at com.badlogic.gdx.backends.gwt.preloader.PreloaderBundleGenerator.copyFile(PreloaderBundleGenerator.java:142)\n    ... 48 more\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: Error writing file: war\\assets\\font\\BADABB__-12.fnt (Absolute)\n    at com.badlogic.gdx.backends.gwt.preloader.FileWrapper.write(FileWrapper.java:271)\n    at com.badlogic.gdx.backends.gwt.preloader.FileWrapper.write(FileWrapper.java:283)\n    ... 49 more\nCaused by: java.io.FileNotFoundException: war\\assets\\font\\BADABB__-12.fnt (Access is denied)\n    at java.io.FileOutputStream.open(Native Method)\n    at java.io.FileOutputStream.<init>(FileOutputStream.java:221)\n    at com.badlogic.gdx.backends.gwt.preloader.FileWrapper.write(FileWrapper.java:267)\n    ... 50 more\n   [ERROR] Errors in 'com/badlogic/gdx/backends/gwt/preloader/Preloader.java'\n      [ERROR] Line 115: Failed to resolve 'com.badlogic.gdx.backends.gwt.preloader.PreloaderBundle' via deferred binding\n  com.badlogic.gdx.graphics.g3d.particles.influencers.Influencer\n  com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerFinalizerInfluencer\n    com.badlogic.gdx.graphics.g3d.particles.ParallelArray.FloatChannel\n      float[]\n        java.lang.Object\n          boolean\n          int\n          java.lang.String\n            java.lang.CharSequence\n              char\n            char[]\n              void\n            double\n            float\n            long\n            java.lang.String[]\n            byte[]\n            int[]\n            java.lang.StringBuffer\n            java.lang.StringBuilder\n      com.badlogic.gdx.graphics.g3d.particles.ParallelArray.Channel\n        java.lang.Object[]\n    com.badlogic.gdx.graphics.g3d.particles.ParallelArray.ObjectChannel\n  com.badlogic.gdx.graphics.g3d.particles.influencers.ScaleInfluencer\n    com.badlogic.gdx.graphics.g3d.particles.influencers.SimpleInfluencer\n      com.badlogic.gdx.graphics.g3d.particles.ParallelArray.ChannelDescriptor\n  com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier\n    com.badlogic.gdx.math.Vector3\n      com.badlogic.gdx.math.Matrix4\n        com.badlogic.gdx.math.Quaternion\n          com.badlogic.gdx.math.Matrix3\n            com.badlogic.gdx.math.Vector2\n              com.badlogic.gdx.math.Vector\n                com.badlogic.gdx.math.Interpolation\n                  com.badlogic.gdx.math.Interpolation.Pow\n                  com.badlogic.gdx.math.Interpolation.PowIn\n                  com.badlogic.gdx.math.Interpolation.PowOut\n                  com.badlogic.gdx.math.Interpolation.Elastic\n                  com.badlogic.gdx.math.Interpolation.Swing\n                  com.badlogic.gdx.math.Interpolation.ElasticOut\n                  com.badlogic.gdx.math.Interpolation.Bounce\n                    com.badlogic.gdx.math.Interpolation.BounceOut\n                  com.badlogic.gdx.math.Interpolation.SwingIn\n                  com.badlogic.gdx.math.Interpolation.Exp\n                  com.badlogic.gdx.math.Interpolation.SwingOut\n                  com.badlogic.gdx.math.Interpolation.BounceIn\n                  com.badlogic.gdx.math.Interpolation.ElasticIn\n                  com.badlogic.gdx.math.Interpolation.ExpIn\n                  com.badlogic.gdx.math.Interpolation.ExpOut\n          com.badlogic.gdx.math.Quaternion[]\n        com.badlogic.gdx.math.Matrix4[]\n    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.Angular\n      com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.Strength\n    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.Rotational2D\n    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.BrownianAcceleration\n    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.Rotational3D\n    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.TangentialAcceleration\n    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.PolarAcceleration\n    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.FaceDirection\n    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.CentripetalAcceleration\n  com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer\n    com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer.Random\n    com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer.Single\n  com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer\n    com.badlogic.gdx.utils.Array\n      com.badlogic.gdx.utils.Array.ArrayIterable\n        com.badlogic.gdx.utils.Array.ArrayIterator\n  com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer\n    com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer.Random\n    com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer.Single\n  com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer\n    com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer.Random\n    com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer.Single\n  com.badlogic.gdx.graphics.g3d.particles.influencers.SpawnInfluencer\n  com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer\n    com.badlogic.gdx.graphics.g2d.TextureRegion[]\n    com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer.Random\n    com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer.AspectTextureRegion\n      com.badlogic.gdx.graphics.g2d.TextureRegion\n        com.badlogic.gdx.graphics.Texture\n          java.util.Map\n          com.badlogic.gdx.graphics.TextureData\n            com.badlogic.gdx.graphics.TextureData.TextureDataType\n              java.lang.Enum\n                java.lang.Enum[]\n              com.badlogic.gdx.graphics.TextureData.TextureDataType[]\n          com.badlogic.gdx.graphics.Texture.TextureFilter\n            com.badlogic.gdx.graphics.Texture.TextureFilter[]\n          com.badlogic.gdx.graphics.Texture.TextureWrap\n            com.badlogic.gdx.graphics.Texture.TextureWrap[]\n        com.badlogic.gdx.graphics.g2d.TextureRegion[][]\n    com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer.Animated\n    com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer.Single\n  com.badlogic.gdx.utils.OrderedMap\n    com.badlogic.gdx.utils.ObjectMap.Entries\n      com.badlogic.gdx.utils.ObjectMap.Entry\n    com.badlogic.gdx.utils.ObjectMap.Values\n    com.badlogic.gdx.utils.ObjectMap.Keys\n    com.badlogic.gdx.utils.ObjectMap\n  com.badlogic.gdx.utils.Disposable\n  com.badlogic.gdx.utils.ArrayMap\n    com.badlogic.gdx.utils.ArrayMap.Entries\n    com.badlogic.gdx.utils.ArrayMap.Values\n    com.badlogic.gdx.utils.ArrayMap.Keys\n  com.badlogic.gdx.graphics.VertexAttributes\n    com.badlogic.gdx.graphics.VertexAttribute[]\n    com.badlogic.gdx.graphics.VertexAttribute\n    com.badlogic.gdx.graphics.VertexAttributes.Usage\n  com.badlogic.gdx.graphics.Colors\n    com.badlogic.gdx.graphics.Color\n  com.badlogic.gdx.graphics.g3d.particles.ParallelArray\n    com.badlogic.gdx.graphics.g3d.particles.ParallelArray.ChannelInitializer\n    com.badlogic.gdx.graphics.g3d.particles.ParallelArray.IntChannel\n  com.badlogic.gdx.graphics.g3d.model.Animation\n  com.badlogic.gdx.graphics.g3d.model.MeshPart\n  com.badlogic.gdx.graphics.g3d.model.Node\n    com.badlogic.gdx.math.collision.BoundingBox\n      com.badlogic.gdx.math.Vector3[]\n      java.util.List\n        java.util.ListIterator\n  com.badlogic.gdx.graphics.g3d.model.NodeKeyframe\n  com.badlogic.gdx.graphics.g3d.model.NodeAnimation\n  com.badlogic.gdx.graphics.g3d.model.NodePart\n  com.badlogic.gdx.scenes.scene2d.Actor\n    com.badlogic.gdx.scenes.scene2d.Stage\n      com.badlogic.gdx.scenes.scene2d.Group\n        com.badlogic.gdx.math.Rectangle\n          com.badlogic.gdx.math.Vector2[]\n        com.badlogic.gdx.scenes.scene2d.utils.Cullable\n      com.badlogic.gdx.scenes.scene2d.Actor[]\n      boolean[]\n      com.badlogic.gdx.scenes.scene2d.ui.Table.Debug\n        com.badlogic.gdx.scenes.scene2d.ui.Table.Debug[]\n      com.badlogic.gdx.scenes.scene2d.EventListener\n        com.badlogic.gdx.scenes.scene2d.Event\n      com.badlogic.gdx.scenes.scene2d.Action\n      com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus\n    com.badlogic.gdx.scenes.scene2d.Touchable\n      com.badlogic.gdx.scenes.scene2d.Touchable[]\n  com.badlogic.gdx.scenes.scene2d.InputEvent\n    com.badlogic.gdx.scenes.scene2d.InputEvent.Type\n      com.badlogic.gdx.scenes.scene2d.InputEvent.Type[]\n  com.badlogic.gdx.scenes.scene2d.InputListener\n  java.util.HashMap\n  java.util.ArrayList\n  com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction\n    com.badlogic.gdx.scenes.scene2d.actions.DelegateAction\n  com.badlogic.gdx.scenes.scene2d.actions.FloatAction\n    com.badlogic.gdx.scenes.scene2d.actions.TemporalAction\n  com.badlogic.gdx.scenes.scene2d.actions.AlphaAction\n  com.badlogic.gdx.scenes.scene2d.actions.SequenceAction\n    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction\n  com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction\n    com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction\n  com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction\n    com.badlogic.gdx.scenes.scene2d.actions.EventAction\n  com.badlogic.gdx.scenes.scene2d.actions.LayoutAction\n  com.badlogic.gdx.scenes.scene2d.actions.AddAction\n  com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction\n  com.badlogic.gdx.scenes.scene2d.actions.RotateByAction\n  com.badlogic.gdx.scenes.scene2d.actions.TouchableAction\n  com.badlogic.gdx.scenes.scene2d.actions.AfterAction\n  com.badlogic.gdx.scenes.scene2d.actions.RepeatAction\n  com.badlogic.gdx.scenes.scene2d.actions.MoveByAction\n  com.badlogic.gdx.scenes.scene2d.actions.ColorAction\n  com.badlogic.gdx.scenes.scene2d.actions.MoveToAction\n  com.badlogic.gdx.scenes.scene2d.actions.RemoveAction\n  com.badlogic.gdx.scenes.scene2d.actions.SizeToAction\n  com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction\n  com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction\n  com.badlogic.gdx.scenes.scene2d.actions.VisibleAction\n  com.badlogic.gdx.scenes.scene2d.actions.RotateToAction\n  com.badlogic.gdx.scenes.scene2d.actions.DelayAction\n  com.badlogic.gdx.scenes.scene2d.actions.IntAction\n  com.badlogic.gdx.scenes.scene2d.actions.RunnableAction\n  com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction\n  com.badlogic.gdx.scenes.scene2d.actions.Actions\n    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction\n    com.badlogic.gdx.scenes.scene2d.Action[]\n  com.google.gwt.user.client.rpc.core.java.lang.Integer_CustomFieldSerializer\n    java.lang.Integer\n      byte\n      short\n  com.google.gwt.user.client.rpc.core.java.lang.Short_CustomFieldSerializer\n    java.lang.Short\n  com.google.gwt.user.client.rpc.core.java.lang.String_CustomFieldSerializer\n  com.google.gwt.user.client.rpc.core.java.lang.Object_Array_CustomFieldSerializer\n  com.google.gwt.user.client.rpc.core.java.lang.Float_CustomFieldSerializer\n    java.lang.Float\n  com.google.gwt.user.client.rpc.core.java.lang.Double_CustomFieldSerializer\n    java.lang.Double\n      double[]\n  com.google.gwt.user.client.rpc.core.java.lang.Byte_CustomFieldSerializer\n    java.lang.Byte\n  com.google.gwt.user.client.rpc.core.java.lang.Character_CustomFieldSerializer\n    java.lang.Character\n  com.google.gwt.user.client.rpc.core.java.lang.Boolean_CustomFieldSerializer\n    java.lang.Boolean\n  com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardControllerRenderData\n  com.badlogic.gdx.math.Frustum\n    com.badlogic.gdx.math.Plane[]\n  com.badlogic.gdx.math.Circle\n  com.badlogic.gdx.math.CatmullRomSpline\n    com.badlogic.gdx.math.Vector[]\n    com.badlogic.gdx.math.Path\n  com.badlogic.gdx.math.Ellipse\n  com.badlogic.gdx.math.Polygon\n  com.badlogic.gdx.math.DelaunayTriangulator\n    short[]\n  com.badlogic.gdx.math.Bresenham2\n    com.badlogic.gdx.math.GridPoint2\n  com.badlogic.gdx.math.GridPoint3\n  com.badlogic.gdx.math.ConvexHull\n  com.badlogic.gdx.math.Bezier\n  com.badlogic.gdx.math.FloatCounter\n    com.badlogic.gdx.math.WindowedMean\n  com.badlogic.gdx.math.CumulativeDistribution\n  com.badlogic.gdx.math.Plane\n    com.badlogic.gdx.math.Plane.PlaneSide\n      com.badlogic.gdx.math.Plane.PlaneSide[]\n  com.badlogic.gdx.math.MathUtils\n  com.badlogic.gdx.math.GeometryUtils\n  com.badlogic.gdx.math.Polyline\n  com.badlogic.gdx.math.EarClippingTriangulator\n  com.badlogic.gdx.math.Intersector\n    com.badlogic.gdx.math.collision.Ray\n    com.badlogic.gdx.math.Intersector.MinimumTranslationVector\n    com.badlogic.gdx.math.Intersector.SplitTriangle\n  com.badlogic.gdx.math.RandomXS128\n  com.badlogic.gdx.math.BSpline\n  com.badlogic.gdx.math.collision.Segment\n  com.badlogic.gdx.math.collision.Sphere\n  com.toet.TinyVoxel.Terrain.Bundles.Bundle\n    com.toet.TinyVoxel.Terrain.Bundles.Grid[]\n    com.toet.TinyVoxel.Terrain.Bundles.Grid\n      boolean[][][]\n      int[][][]\n  com.toet.TinyVoxel.Terrain.Bundles.GridBundle\n  com.toet.TinyVoxel.Terrain.Bundles.GridInterface\n  com.google.gwt.user.client.rpc.core.java.util.HashMap_CustomFieldSerializer\n  com.google.gwt.user.client.rpc.core.java.util.Map_CustomFieldSerializerBase\n  com.google.gwt.user.client.rpc.core.java.util.ArrayList_CustomFieldSerializer\n  com.badlogic.gdx.graphics.g3d.model.data.ModelTexture\n  com.badlogic.gdx.graphics.g3d.model.data.ModelData\n    com.badlogic.gdx.graphics.g3d.model.data.ModelMesh\n      com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[]\n  com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial\n    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType\n      com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial.MaterialType[]\n  com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart\n    int[][]\n  com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation\n  com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation\n  com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart\n  com.badlogic.gdx.graphics.g3d.model.data.ModelNode\n    com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[]\n    com.badlogic.gdx.graphics.g3d.model.data.ModelNode[]\n  com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe\n  com.badlogic.gdx.scenes.scene2d.ui.Touchpad\n    com.badlogic.gdx.scenes.scene2d.ui.Touchpad.TouchpadStyle\n      com.badlogic.gdx.scenes.scene2d.utils.Drawable\n    com.badlogic.gdx.scenes.scene2d.ui.Widget\n      com.badlogic.gdx.scenes.scene2d.utils.Layout\n  com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup\n    com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup\n  com.badlogic.gdx.scenes.scene2d.ui.Stack\n  com.badlogic.gdx.scenes.scene2d.ui.Tree\n    com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle\n    com.badlogic.gdx.scenes.scene2d.utils.Selection\n      com.badlogic.gdx.scenes.scene2d.utils.Disableable\n    com.badlogic.gdx.scenes.scene2d.ui.Tree.Node\n    com.badlogic.gdx.scenes.scene2d.utils.ClickListener\n  com.badlogic.gdx.scenes.scene2d.ui.Value\n    com.badlogic.gdx.scenes.scene2d.ui.Value.Fixed\n  com.badlogic.gdx.scenes.scene2d.ui.Cell\n    com.badlogic.gdx.scenes.scene2d.ui.Table\n      com.badlogic.gdx.scenes.scene2d.ui.Skin\n        com.badlogic.gdx.graphics.g2d.BitmapFont\n          com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData\n            com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph[][]\n            com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph\n              byte[][]\n          com.badlogic.gdx.graphics.g2d.BitmapFontCache\n            float[][]\n            com.badlogic.gdx.graphics.g2d.BitmapFont.TextBounds\n            com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment\n              com.badlogic.gdx.graphics.g2d.BitmapFont.HAlignment[]\n        com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable\n          com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable\n            com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable\n            com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable\n        com.badlogic.gdx.graphics.g2d.NinePatch\n        com.badlogic.gdx.scenes.scene2d.ui.Skin.TintedDrawable\n  com.badlogic.gdx.scenes.scene2d.ui.Container\n  com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup\n  com.badlogic.gdx.scenes.scene2d.ui.Image\n  com.badlogic.gdx.scenes.scene2d.ui.TextField\n    com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle\n    com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldListener\n    com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldFilter\n      com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldFilter.DigitsOnlyFilter\n    com.badlogic.gdx.scenes.scene2d.ui.TextField.OnscreenKeyboard\n    com.badlogic.gdx.scenes.scene2d.ui.TextField.DefaultOnscreenKeyboard\n    com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldClickListener\n  com.badlogic.gdx.scenes.scene2d.ui.SplitPane\n    com.badlogic.gdx.scenes.scene2d.ui.SplitPane.SplitPaneStyle\n  com.badlogic.gdx.scenes.scene2d.ui.Window\n    com.badlogic.gdx.scenes.scene2d.ui.Window.WindowStyle\n  com.badlogic.gdx.scenes.scene2d.ui.ImageButton\n    com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle\n      com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle\n    com.badlogic.gdx.scenes.scene2d.ui.Button\n      com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup\n        com.badlogic.gdx.scenes.scene2d.ui.Button[]\n  com.badlogic.gdx.scenes.scene2d.ui.Dialog\n    com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle\n    com.badlogic.gdx.scenes.scene2d.ui.Label\n    com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle\n  com.badlogic.gdx.scenes.scene2d.ui.SelectBox\n    com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle\n      com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.ScrollPaneStyle\n      com.badlogic.gdx.scenes.scene2d.ui.List.ListStyle\n    com.badlogic.gdx.scenes.scene2d.ui.List\n      com.badlogic.gdx.scenes.scene2d.utils.ArraySelection\n    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane\n      com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener\n  com.badlogic.gdx.scenes.scene2d.ui.Slider\n    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar\n      com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle\n    com.badlogic.gdx.scenes.scene2d.ui.Slider.SliderStyle\n  com.badlogic.gdx.scenes.scene2d.ui.CheckBox\n    com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle\n    com.badlogic.gdx.scenes.scene2d.ui.TextButton\n  com.badlogic.gdx.scenes.scene2d.ui.TextArea\n    com.badlogic.gdx.scenes.scene2d.ui.TextArea.TextAreaListener\n  com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton\n    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle\n  com.badlogic.gdx.scenes.scene2d.utils.Align\n  com.badlogic.gdx.scenes.scene2d.utils.ScissorStack\n  com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable\n  com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable\n  com.badlogic.gdx.scenes.scene2d.utils.UIUtils\n  com.badlogic.gdx.scenes.scene2d.utils.FocusListener\n    com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent\n      com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type\n        com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent.Type[]\n  com.badlogic.gdx.scenes.scene2d.utils.DragListener\n  com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener\n  com.badlogic.gdx.scenes.scene2d.utils.ChangeListener\n    com.badlogic.gdx.scenes.scene2d.utils.ChangeListener.ChangeEvent\n  com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop\n    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload\n    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target\n      com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source\n  java.lang.StringIndexOutOfBoundsException\n   Adding '1' new generated units\n      Validating units:\n         [WARN] Warnings in 'C:\\Users\\Kajos\\Projects\\TinyVoxelGeneric\\html\\build\\gwt\\gen\\com\\badlogic\\gwtref\\client\\IReflectionCacheGenerated.java'\n            [WARN] Line 15646: Referencing deprecated field 'com.badlogic.gdx.graphics.Color.tmp'\n            [WARN] Line 15647: Referencing deprecated field 'com.badlogic.gdx.graphics.Color.tmp'\n            [WARN] Line 15770: Referencing deprecated field 'com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.imagePath'\n            [WARN] Line 15771: Referencing deprecated field 'com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.imagePath'\n            [WARN] Line 19851: Referencing deprecated method 'com.badlogic.gdx.graphics.VertexAttribute.Color'\n            [WARN] Line 19936: Referencing deprecated method 'com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData.getImagePath'\n            [WARN] Line 21097: Referencing deprecated method 'com.badlogic.gdx.math.collision.Ray.getEndPoint'\n            [WARN] Line 21878: Referencing deprecated method 'com.badlogic.gdx.scenes.scene2d.ui.Container.addActor'\n            [WARN] Line 21879: Referencing deprecated method 'com.badlogic.gdx.scenes.scene2d.ui.Container.addActorAt'\n            [WARN] Line 21880: Referencing deprecated method 'com.badlogic.gdx.scenes.scene2d.ui.Container.addActorBefore'\n            [WARN] Line 21881: Referencing deprecated method 'com.badlogic.gdx.scenes.scene2d.ui.Container.addActorAfter'\n            [WARN] Line 22176: Referencing deprecated method 'com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.addActor'\n            [WARN] Line 22177: Referencing deprecated method 'com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.addActorAt'\n            [WARN] Line 22178: Referencing deprecated method 'com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.addActorBefore'\n            [WARN] Line 22179: Referencing deprecated method 'com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.addActorAfter'\n:html:compileGwt FAILED\n\nBUILD FAILED\n\nTotal time: 23.141 secs\n\n```\n", "url": "https://github.com/libgdx/libgdx/issues/2311", "user": "Kjos", "labels": ["bug", "gwt"], "created": "2014-09-07 11:06:34", "closed": "2014-09-07 18:12:08", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "setDrawContact() missing", "body": "setDrawContact() fails when compiling for GWT.\n[Box2DDebugRenderer.java](https://github.com/libgdx/libgdx/blob/master/extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java) file does not contain such function.\n\nCheers\n", "url": "https://github.com/libgdx/libgdx/issues/2301", "user": "AlbertoCejas", "labels": ["bug", "gwt"], "created": "2014-09-05 11:29:27", "closed": "2014-09-05 17:32:50", "commits": {"cf054cb5d540bc909a46a1466bf9000d5a61569c": {"commitGHEventType": "closed", "commitUser": "Tom-Ski"}, "6ddb43d249aac1cc668917670af2a170755f663e": {"commitGHEventType": "referenced", "commitUser": "MobiDevelop"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cf054cb5d540bc909a46a1466bf9000d5a61569c", "commitGHEventType": "closed", "commitUser": "Tom-Ski", "commitParents": ["9525af5f4277aadf53dd25ec9569a8bcbe4c5511"], "nameRev": "cf054cb5d540bc909a46a1466bf9000d5a61569c tags/1.4.0~82^2~17^2", "commitMessage": "Add isDrawContact and setDrawContact methods to gwt emu, fixes #2301\n", "commitDateTime": "2014-09-05 18:24:01", "authoredDateTime": "2014-09-05 18:24:01", "commitGitStats": [{"filePath": "extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Box2DDebugRenderer.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.physics.box2d.Box2DDebugRenderer.isDrawContacts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.physics.box2d.Box2DDebugRenderer.setDrawContacts(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6ddb43d249aac1cc668917670af2a170755f663e", "commitGHEventType": "referenced", "commitUser": "MobiDevelop", "commitParents": ["1900f0593506091c63146579c7bacb84e99a357d", "cf054cb5d540bc909a46a1466bf9000d5a61569c"], "nameRev": "6ddb43d249aac1cc668917670af2a170755f663e tags/1.4.0~82^2~17", "commitMessage": "Merge pull request #2303 from Tom-Ski/master\n\nAdd isDrawContact and setDrawContact methods to gwt emu, fixes #2301", "commitDateTime": "2014-09-05 10:32:44", "authoredDateTime": "2014-09-05 10:32:44", "commitGitStats": [{"filePath": "extensions/gdx-box2d/gdx-box2d-gwt/src/com/badlogic/gdx/physics/box2d/gwt/emu/com/badlogic/gdx/physics/box2d/Box2DDebugRenderer.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Box2DDebugRenderer.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.physics.box2d.Box2DDebugRenderer.isDrawContacts()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.physics.box2d.Box2DDebugRenderer.setDrawContacts(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cf054cb5d540bc909a46a1466bf9000d5a61569c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 0, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["extensions"], "changesInPackagesSPOON": ["com.badlogic.gdx.physics.box2d.Box2DDebugRenderer.setDrawContacts(boolean)", "com.badlogic.gdx.physics.box2d.Box2DDebugRenderer.isDrawContacts()"]}, {"title": "Timer in GWT backend stacks up events", "body": "I believe the Timer is incorrect at the moment.\nWhat will reproduce the issue is setting the FPS very high, causing an increasing framedrop.\n\nThe scheduleRepeating basically is a setInterval, and it seems that can stack up according to:\nhttps://stackoverflow.com/questions/13349576/prevent-javascript-setinterval-function-stacking-up\nSome confirmation on this would be nice.\nThere is also a fix written for setInterval there, I'm not sure it works.\nEither way there's some documentation here as well:\nhttps://stackoverflow.com/questions/1955687/best-way-for-simple-game-loop-in-javascript\n\nrequestFrame seems the new way to go, and if WebGL is supported, that should probably work as well. There's also ways to have it fallback to setInterval.\n\nIs there a specific reason a setInterval is used?\n\nIn GWTApplication:\n\nI\n\n```\n    new Timer() {\n        @Override\n        public void run () {\n            try {\n                mainLoop();\n            } catch (Throwable t) {\n                error(\"GwtApplication\", \"exception: \" + t.getMessage(), t);\n                throw new RuntimeException(t);\n            }\n        }\n    }.scheduleRepeating((int)((1f / config.fps) * 1000)); //setInterval\n```\n", "url": "https://github.com/libgdx/libgdx/issues/2289", "user": "Kjos", "labels": ["bug", "gwt"], "created": "2014-08-31 21:30:23", "closed": "2014-12-15 13:17:30", "commits": {"814912ce9e702067324ce94b4629ba152cbcbce9": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 105.00027777777778, "commitsDetails": [{"commitHash": "814912ce9e702067324ce94b4629ba152cbcbce9", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["f73bcf42bf6bdf1e8b5def9b567102e955be53f1"], "nameRev": "814912ce9e702067324ce94b4629ba152cbcbce9 tags/1.5.1~37", "commitMessage": "Use AnimationScheduler instead of Timer\n\nCloses #2289, #2290\n", "commitDateTime": "2014-12-15 06:17:17", "authoredDateTime": "2014-12-15 06:17:17", "commitGitStats": [{"filePath": "CHANGES", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplication.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtApplicationConfiguration.java", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GwtApplication.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtApplication.setupLoop()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtApplication.setupLoop().2.run()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtApplication.setupLoop().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtApplication", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "GwtApplicationConfiguration.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtApplicationConfiguration", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Installer does not appear to recognise ADK versions higher than the recommended version", "body": "steps to replicate:\n1. open Setup with only ADK version 20 installed\n2. Error along the lines of \"gdx requires at least 19.1\"\n3. Install version 19.1\n4. \"ADK version is higher than recommended\"\n\nwhat I expected: Gdx uses the best version > 19.1\nwhat happened: Gdx used version 20 if version 19.1 is installed\n", "url": "https://github.com/libgdx/libgdx/issues/2286", "user": "NotAFile", "labels": ["bug", "build"], "created": "2014-08-31 15:06:08", "closed": "2014-09-03 19:39:19", "commits": {"fee95d29e28b6b5e82e99d376f683f1f22e20f27": {"commitGHEventType": "closed", "commitUser": "Tom-Ski"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "fee95d29e28b6b5e82e99d376f683f1f22e20f27", "commitGHEventType": "closed", "commitUser": "Tom-Ski", "commitParents": ["72af560ce559b6af5f7b7b6caba9b2ef661092ac"], "nameRev": "fee95d29e28b6b5e82e99d376f683f1f22e20f27 tags/1.4.0~112^2~1^2", "commitMessage": "Use source.properties to determine versions, fixes #2286\n", "commitDateTime": "2014-09-03 16:22:15", "authoredDateTime": "2014-09-03 16:22:15", "commitGitStats": [{"filePath": "extensions/gdx-setup/src/com/badlogic/gdx/setup/GdxSetup.java", "insertions": 70, "deletions": 20, "lines": 90}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GdxSetup.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.setup.GdxSetup.getLatestApi(java.io.File)", "TOT": 10, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "com.badlogic.gdx.setup.GdxSetup.getLatestTools(java.io.File)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.setup.GdxSetup.readAPIVersion(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.setup.GdxSetup.readBuildToolsVersion(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fee95d29e28b6b5e82e99d376f683f1f22e20f27"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 70, "deletions": 20, "lines": 90, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 15, "UPD": 5, "INS": 4, "MOV": 4, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["extensions"], "changesInPackagesSPOON": ["com.badlogic.gdx.setup.GdxSetup.readBuildToolsVersion(java.io.File)", "com.badlogic.gdx.setup.GdxSetup.getLatestTools(java.io.File)", "com.badlogic.gdx.setup.GdxSetup.readAPIVersion(java.io.File)", "com.badlogic.gdx.setup.GdxSetup.getLatestApi(java.io.File)"]}, {"title": "Timers can be wiped out when using GestureDetector", "body": "Due to the [introduction](https://github.com/libgdx/libgdx/commit/da8fb9e108abdf593f02258f0b3f52093124c937) of [checkStatics](https://github.com/libgdx/libgdx/blob/1.3.1/gdx/src/com/badlogic/gdx/utils/Timer.java#L262), if any Timer is created within libGDX, it runs the risk of wiping out user-created timers. Specifically, if one is created after a pause event, and before a resume event, the Timer constructor will call checkStatics and will clear existing Timer instances.\n\nSince GestureDetector creates a new Timer instance every time the touchDown event occurs, it could do this if it happens to run before resume. The following code demonstrates the issue by manually calling touchDown on the pause event. Simply run it, then switch to another window to pause it, then switch back and the timer will not resume.\n\n``` java\nimport com.badlogic.gdx.Game;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.input.GestureDetector;\nimport com.badlogic.gdx.utils.Timer;\n\npublic class Main extends Game {\n    GestureDetector gd;\n\n    public void create() {\n        gd = new GestureDetector(\n            new GestureDetector.GestureAdapter() {\n                public boolean touchDown (float x, float y, int pointer, int button) {\n                    return true;\n                }\n            }\n        );\n        Gdx.input.setInputProcessor(gd);\n\n        new Timer().scheduleTask(new Timer.Task() {\n            public void run() {\n                System.out.println(\"timer\");\n            }\n        }, 0, 1);\n    }\n\n    public void pause() {\n        System.out.println(\"pause\");\n        gd.touchDown(0, 0, 0, 0);\n    }\n\n    public void resume() {\n        System.out.println(\"resume\");\n    }\n}\n```\n\nThis issue was [previously reported](https://github.com/libgdx/libgdx/issues/1930), but it was closed because it did not have a test case.\n\nIt looks like checkStatics was introduced to solve an [issue](https://github.com/libgdx/libgdx/issues/1548) that occurred on mobile where the game's create event is called when the game is resumed, preventing old Timers from running again. Perhaps a better solution would be to call checkStatics when this event occurs, rather than every time a Timer is initialized.\n\nAdditionally, I suggest that checkStatics use thread.dispose() because it currently isn't cleaning up everything (it isn't calling removeLifecycleListener for example).\n", "url": "https://github.com/libgdx/libgdx/issues/2274", "user": "oakes", "labels": ["bug"], "created": "2014-08-28 15:35:32", "closed": "2014-10-23 15:28:09", "commits": {}, "ttf": 55.000277777777775, "commitsDetails": []}, {"title": "\"Tilde\" or \"Caret\" key missing", "body": "Hi devs!\n\nIn \"com.badlogic.gdx.Input.Keys\" I can not find the key which is located over the \"Tab\" key. On German keyboards it's the \"Caret\" and on English ones it's the \"Tilde\". Both are missing.\n\nIn the source I see that the line for Tilde is commented:\n// public static final int TILDE = 0;\n\nIs there a way to check if this key is pressed or how I can find out which int it needs so I can make a pull request after implementing it?\n\nCheers,\nBenedikt\n", "url": "https://github.com/libgdx/libgdx/issues/2263", "user": "BSVogler", "labels": ["bug", "desktop"], "created": "2014-08-24 15:24:38", "closed": "2016-01-05 17:13:11", "commits": {}, "ttf": 499.0002777777778, "commitsDetails": []}, {"title": "allowIpod config not working if music started after app is launched", "body": "Setting allowIpod = true in IOSApplicationConfiguration seems to have no effect if the libGDX application is launched without any music playing.\n\nSteps to reproduce:\n- start libGDX app with music off  (with allowIpod = true)\n- switch to iTunes/music app\n- start music\n- return to libGDX app (music stops, it should keep playing)\n\nI get the same result in iOS 6 and 7\nlibGDX version: 1.2.0\nroboVM version 0.0.14\n\nThere is another report of the same issue on stack overflow: http://stackoverflow.com/questions/23473429/libgdx-robovm-allowipod-does-not-work-if-game-starts-then-paused\n", "url": "https://github.com/libgdx/libgdx/issues/2136", "user": "magfort", "labels": ["bug", "ios"], "created": "2014-07-20 02:36:55", "closed": "2014-09-03 19:15:04", "commits": {}, "ttf": 45.000277777777775, "commitsDetails": []}, {"title": "iOS  real device fullscreen (hided status bar )returns  incorrect touch coordinates ", "body": "On real iOS devices ex iPhone 5 with screen resolution 640x1136 in my app I got touch values returned from range 1-620 (app fullscreen) it happens also on iPads and touches range is alway smaller about 20-40 pixels. When statusbar is showed everything looks ok. I have checked on my project and also on demo-invaders and defalut gdx app on Libgdx 1.0 and 1.2 Robovm 0.11 and 0.14 . On simulator raported touch coordinates are OK.\n\nEdit: the range of touches is 0 - 620  !!!  \n", "url": "https://github.com/libgdx/libgdx/issues/2105", "user": "radekkierner", "labels": ["bug", "ios"], "created": "2014-07-11 11:52:31", "closed": "2016-01-05 17:10:51", "commits": {}, "ttf": 543.0002777777778, "commitsDetails": []}, {"title": "Lwjgl backend doesn't support OpenGL ES 3.2+", "body": "Creating a LwjglApplication with useGL30 set to true still doesn't create an OpenGL ES 3 context. Additionally, Gdx.gl30 is null.\n\nThe issue seems to be [here](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java#L166). context should be passed in to Display.create along with the PixelFormat.\n\n[This line](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java#L241) should also check whether the major version is 3 and set gl30 accordingly.\n", "url": "https://github.com/libgdx/libgdx/issues/2087", "user": "hzeis", "labels": ["bug", "desktop"], "created": "2014-07-07 03:05:21", "closed": "2015-10-03 20:35:35", "commits": {"5d3bec3fa945d93cadfcff4c49354fe67eebf58e": {"commitGHEventType": "referenced", "commitUser": "xoppa"}}, "ttf": 453.0002777777778, "commitsDetails": [{"commitHash": "5d3bec3fa945d93cadfcff4c49354fe67eebf58e", "commitGHEventType": "referenced", "commitUser": "xoppa", "commitParents": ["c43c0a5057527f2fabc77eea904378d504c8f856"], "nameRev": "5d3bec3fa945d93cadfcff4c49354fe67eebf58e tags/1.7.2~22^2", "commitMessage": "Test to make (most of) the shaders work for gles3, see #2087\n", "commitDateTime": "2015-12-10 18:41:23", "authoredDateTime": "2015-12-10 18:41:23", "commitGitStats": [{"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglTestStarter.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LwjglTestStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglTestStarter.runTest(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5d3bec3fa945d93cadfcff4c49354fe67eebf58e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "TextField (or text-input in general) broken when setContinuousRendering(false)", "body": "How to replicate the issue:\n1. Create a TextField\n2. Set Gdx.graphics.setContinuousRendering(false)\n3. Type in the textfield\n\nThe input begins repeating as soon as the key is pressed, makes typing impossible.\n\nThis issue seems to be desktop only, as it doesn't appear on Android devices. As a result, I currently have setContinuousRendering(false) only when the ApplicationType is not Desktop.\n", "url": "https://github.com/libgdx/libgdx/issues/2085", "user": "rdamiano", "labels": ["bug", "scene2d"], "created": "2014-07-06 15:03:44", "closed": "2014-08-02 21:23:31", "commits": {"ee66b9a004495e093e4bb49761cb6ad8067ccb4a": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "ee66b9a004495e093e4bb49761cb6ad8067ccb4a", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["9228a1477e07b5b18a36fcaad6ab88d6211c4ff7"], "nameRev": "ee66b9a004495e093e4bb49761cb6ad8067ccb4a tags/1.3.0~9^2~4", "commitMessage": "Fix key repeats when non-continuous rendering\n\nCloses #2085\n", "commitDateTime": "2014-08-02 14:19:37", "authoredDateTime": "2014-08-02 14:19:37", "commitGitStats": [{"filePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglInput.java", "insertions": 10, "deletions": 1, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LwjglInput.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.LwjglInput.updateKeyboard()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.LwjglInput", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.LwjglInput.updateTime()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.LwjglInput.update()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ee66b9a004495e093e4bb49761cb6ad8067ccb4a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 1, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.lwjgl.LwjglInput.updateTime()", "com.badlogic.gdx.backends.lwjgl.LwjglInput", "com.badlogic.gdx.backends.lwjgl.LwjglInput.update()", "com.badlogic.gdx.backends.lwjgl.LwjglInput.updateKeyboard()"]}, {"title": "scene2d Window pack() bug.", "body": "I have a simple scene2d window, heres the code: http://pastebin.com/FfvpbFLf . Now the problem is, when window is packed, the fonts in all the window get distorted like this http://tinypic.com/view.php?pic=295wq4n&s=8#.U7GZlvjkCxB when character count in one of the buttons exceeds ~13. If i comment out pack(), and set window's width by hand, everything works fine. I use this skin of mine in several other windows and dialogs, some of them having text buttons, but everything works fine. Ive also tried to swap this custom skin pack file of mine to the libgdx's uiskin.png and other files which come with it, and the problem disappears in that same window in the picture above.\n", "url": "https://github.com/libgdx/libgdx/issues/2056", "user": "Ernyz", "labels": ["bug", "scene2d"], "created": "2014-06-30 17:15:06", "closed": "2014-07-23 15:35:56", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Desktop application occasionally crashes on quit", "body": "It's fairly infrequent, but it definitely happens. I have no idea what might be causing it, or if it's even LibGDX's fault. I'm not using any other external libraries. Is there any other info I can provide?\nCore dump: https://gist.github.com/JEphron/322432030b5607379833\nThoughts?\n", "url": "https://github.com/libgdx/libgdx/issues/2041", "user": "JEphron", "labels": ["bug"], "created": "2014-06-28 04:09:56", "closed": "2014-07-05 21:31:56", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Images without alpha channel look corrupt on Android", "body": "When I load a texture from an image file that has no alpha channel, it displays as random garbage when running on Android.\n- Happens with PNGs without alpha channel, and always with JPEGs, because JPEGs never have an alpha channel.\n- Can be solved by resaving the image as PNG with alpha channel.\n- The problem happens on Android, if I run my game on the Desktop (Linux) the texture looks fine. Haven't tested other platforms.\n- Doesn't matter if I load the texture through an AssetManager, directly, or through a Pixmap.\n- Doesn't matter what format I specify (ARGB8888, RGB888, etc.)\n- Doesn't matter if the image size is a power of 2 or not.\n- In the case of JPEG, I tried several export methods to save, made no difference.\n- EDIT: I tested it on a Nexus 5 with Android 4.4.4 and on emulators with Android 4.0.3 and 4.4.2.\n- EDIT: I also tried turning hardware acceleration on/off in the AndroidManifest.xml, but that also didn't make a difference.\n- EDIT: I tested on libGDX 1.2, and I'm pretty sure I have seen this bug too when I was still on libGDX 1.1.\n\nCan be reproduced with the attached file.\n![test](https://cloud.githubusercontent.com/assets/5756227/3413039/faf74bd2-fe06-11e3-9ef1-c6595165f827.png)\n", "url": "https://github.com/libgdx/libgdx/issues/2040", "user": "geertjan-apptornado", "labels": ["android", "bug"], "created": "2014-06-27 14:28:24", "closed": "2014-06-29 08:54:19", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Foreground Stage (HUD) draws Label below Model", "body": "I have two Stage :\nbgStage = new Stage()\nfgStage = new Stage(bgStage.getViewPort(), bgStage.getBatch())\nAnd a ModelBatch using its own camera...\n\nThe fgStage has no background and `fillParent(true)` and contains only one Label (fgLabel) with no background...\n\nWhen I render :\n\n``` java\npublic void render() {\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);\n\n        bgStage.draw();\n\n        Gdx.gl.glEnable(GL20.GL_DEPTH_TEST);\n        Gdx.gl.glEnable(GL20.GL_CULL_FACE);\n\n        modelBatch.begin(camera3D);\n        // .... drawing my 3D models\n        modelBatch.end();\n\n        Gdx.gl.glDisable(GL20.GL_DEPTH_TEST);\n        Gdx.gl.glDisable(GL20.GL_CULL_FACE);\n\n        // case 1\n        // the Label text is hidden behind ModelInstances\n        fgStage.draw();\n\n        // case 2\n        // the Label text is correctly rendered above ModelInstances\n        fgStage.getViewport().getCamera().update();\n        fgStage.getBatch().setProjectionMatrix(fgStage.getViewport().getCamera().combined);\n        fgStage.getBatch().begin();\n        fgLabel.draw(fgStage.getBatch(), 1);\n        fgStage.getBatch().end();\n}\n```\n\nAccording to me case 1 must behave the same as case 2. Is that true ?\nMoreover if I set fgStage background to white, the whole screen is white in both case 1 and case 2... \n\nWhat's the reason why fgStage.getRoot().draw(fgStage.getBatch(), 1); and  fgLabel.draw(fgStage.getBatch(), 1); are not producing the same rendering ?\n", "url": "https://github.com/libgdx/libgdx/issues/2039", "user": "avianey", "labels": ["bug", "scene2d"], "created": "2014-06-27 12:56:38", "closed": "2014-06-29 14:41:36", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "GWT: (De)serializing Object with 2d array field fails", "body": "Hey, I ran into an issue with the libGDX JSON (de)serializer: If i try to serialize a class that contains a 2d array of  objects (for example:     private Block[][] blocks = new Block[2][2];), everything works fine on desktop (and android). \n\nHowever, on GWT this causes an Exception:\n\nUncaught java.lang.RuntimeException: com.badlogic.gdx.utils.SerializationException: Serialization trace:\ncom.badlogic.gdx.utils.reflect.Field@10 (org.mots.crashtest.model.Container).\n\nI've added the correct gdx.reflect.include properties to the .gwt.xml files, but the error persists. Here's a simple project demonstrating the issue: https://dl.dropboxusercontent.com/u/20288789/crashtest.zip\n", "url": "https://github.com/libgdx/libgdx/issues/2032", "user": "mots", "labels": ["bug", "gwt"], "created": "2014-06-25 15:19:18", "closed": "2016-12-10 18:57:45", "commits": {}, "ttf": 899.0002777777778, "commitsDetails": []}, {"title": "Container does not draw background when there is no widget", "body": "It just returns from the `draw` method before drawing background when there is no actor. I think that's a bug, but not sure \u2014 may be it is desired to work this way? \n", "url": "https://github.com/libgdx/libgdx/issues/2031", "user": "vlaaad", "labels": ["bug", "scene2d"], "created": "2014-06-25 12:25:45", "closed": "2014-06-28 16:32:49", "commits": {"658b724118ab6c942f983dd0872a26a05c468eee": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "658b724118ab6c942f983dd0872a26a05c468eee", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["09bc31128a7d4c7d2f8e41245599eb74ae97a042"], "nameRev": "658b724118ab6c942f983dd0872a26a05c468eee tags/1.3.0~46^2~16", "commitMessage": "Draw background even when actor is null.\n\nFixes #2031\n", "commitDateTime": "2014-06-28 09:31:52", "authoredDateTime": "2014-06-28 09:31:52", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Container.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.draw(com.badlogic.gdx.graphics.g2d.Batch,float)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["658b724118ab6c942f983dd0872a26a05c468eee"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 1, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.scenes.scene2d.ui.Container.draw(com.badlogic.gdx.graphics.g2d.Batch,float)"]}, {"title": "Table::setBackground can cause crash", "body": "If you set table's background to some drawable and then set background to null, app will crash with NPE [here](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java#L876). That's because [here](https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java#L157) padding is set to null instead of `Value.zero`\n", "url": "https://github.com/libgdx/libgdx/issues/2030", "user": "vlaaad", "labels": ["bug", "scene2d"], "created": "2014-06-25 12:20:13", "closed": "2014-07-20 21:06:33", "commits": {"643c537d0727809ad45a4c32b2be6b191f93b166": {"commitGHEventType": "referenced", "commitUser": "NathanSweet"}, "2b97f364d191dd331d2ad278fe3a67a8293fb2e4": {"commitGHEventType": "referenced", "commitUser": "NathanSweet"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "643c537d0727809ad45a4c32b2be6b191f93b166", "commitGHEventType": "referenced", "commitUser": "NathanSweet", "commitParents": ["9556562d6551fad2f1a17a4133f864e8d1f254ac"], "nameRev": "643c537d0727809ad45a4c32b2be6b191f93b166 tags/1.3.0~21^2~3", "commitMessage": "Null checks for all properties.\n\n#2030\n", "commitDateTime": "2014-07-20 23:30:34", "authoredDateTime": "2014-07-20 23:30:34", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "insertions": 20, "deletions": 2, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Cell.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.size(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.width(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.height(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.minSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.space(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.space(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.spaceTop(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.spaceLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.spaceBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.spaceRight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.pad(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.padTop(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Cell.padRight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Table.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Table.setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Table.getRows()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Table.getColumns()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Table.pad(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Table.pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Table.padTop(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Table.padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Table.padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Table.padRight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2b97f364d191dd331d2ad278fe3a67a8293fb2e4", "commitGHEventType": "referenced", "commitUser": "NathanSweet", "commitParents": ["db3b817cbcd5c9551fdfbb99567b754e336018be"], "nameRev": "2b97f364d191dd331d2ad278fe3a67a8293fb2e4 tags/1.3.0~24^2~45", "commitMessage": "Null checks for Container.\n\n#2030\n", "commitDateTime": "2014-07-21 19:58:53", "authoredDateTime": "2014-07-21 19:58:53", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "insertions": 29, "deletions": 0, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Container.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.size(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.width(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.height(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.minSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.pad(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.padTop(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.ui.Container.padRight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["643c537d0727809ad45a4c32b2be6b191f93b166", "2b97f364d191dd331d2ad278fe3a67a8293fb2e4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 87, "deletions": 2, "lines": 89, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 148, "UPD": 0, "INS": 79, "MOV": 68, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 59}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.scenes.scene2d.ui.Cell.minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.spaceLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.spaceRight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Table.padTop(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.space(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Table.getColumns()", "com.badlogic.gdx.scenes.scene2d.ui.Cell.maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.width(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Table.pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Table.pad(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.pad(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.padRight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.spaceBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.pad(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.space(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Table.setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable,boolean)", "com.badlogic.gdx.scenes.scene2d.ui.Table.getRows()", "com.badlogic.gdx.scenes.scene2d.ui.Container.size(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.spaceTop(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.padTop(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.padRight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.padTop(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.width(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Table.padRight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.size(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Table.padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.minSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.minSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.height(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Cell.pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.height(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Container.minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)", "com.badlogic.gdx.scenes.scene2d.ui.Table.padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)"]}, {"title": "GWT: Constructor.getParameterTypes returns null", "body": "The GWT implementation of `Constructor.getParameterTypes` returns null. Is this by necessity, or is there a workaround? `Method.getParameters` returns something meaningful, so perhaps this can be done for constructors too?\n", "url": "https://github.com/libgdx/libgdx/issues/2028", "user": "DanielJonesOpenCredo", "labels": ["bug"], "created": "2014-06-24 19:15:50", "closed": "2014-06-28 16:23:00", "commits": {"09bc31128a7d4c7d2f8e41245599eb74ae97a042": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "09bc31128a7d4c7d2f8e41245599eb74ae97a042", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["78a8bd9890bfbdea25e2bd01322c2ddd623a1155"], "nameRev": "09bc31128a7d4c7d2f8e41245599eb74ae97a042 tags/1.3.0~46^2~17", "commitMessage": "Implement getParameterTypes\n\nCloses #2028\n", "commitDateTime": "2014-06-28 09:19:39", "authoredDateTime": "2014-06-28 09:19:39", "commitGitStats": [{"filePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/emu/com/badlogic/gdx/utils/reflect/Constructor.java", "insertions": 8, "deletions": 1, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Constructor.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.utils.reflect.Constructor.getParameterTypes()", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["09bc31128a7d4c7d2f8e41245599eb74ae97a042"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 1, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.utils.reflect.Constructor.getParameterTypes()"]}, {"title": "gdx-jnigen - BuildExecutor not working on file paths with spaces", "body": "When the following code is executed for gdx-jnigen:\n\n``` java\n// create config and target (irrelevant)\nnew AntScriptGenerator().generate(config, target);\nBuildExecutor.executeAnt(\"jni/build.xml\", \"-v\");\n```\n\nIt outputs the following (I replaced the paths because they were quite long):\n\n```\nWrote target 'Windows' build script 'jni\\build-windows32.xml'\nWrote master build script 'jni\\build.xml'\nExecuting 'ant.bat -f C:\\path\\to\\my project with spaces\\jni\\build.xml -v'\nApache Ant(TM) version 1.9.4 compiled on April 29 2014\nBuildfile: C:\\path\\to\\my does not exist!\nBuild failed\n```\n\nThe problem appears to be that the build script path passed to ant is not enclosed in quotes. Therefore, the path appears as several different command line arguments to ant, which causes the error.\n\nI'm feeling kinda lazy today but if you want I'll send you guys a pull request fixing this. It seems like an easy fix.\n", "url": "https://github.com/libgdx/libgdx/issues/2021", "user": "Hungary-Dude", "labels": ["bug"], "created": "2014-06-23 17:51:37", "closed": "2014-06-28 16:47:37", "commits": {"fc4382fdc46e18cf64a63c59faff03967a57f4ba": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "fc4382fdc46e18cf64a63c59faff03967a57f4ba", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["658b724118ab6c942f983dd0872a26a05c468eee"], "nameRev": "fc4382fdc46e18cf64a63c59faff03967a57f4ba tags/1.3.0~46^2~15", "commitMessage": "Quote path in case of spaces\n\nFixes #2021\n", "commitDateTime": "2014-06-28 09:47:02", "authoredDateTime": "2014-06-28 09:47:02", "commitGitStats": [{"filePath": "extensions/gdx-jnigen/src/com/badlogic/gdx/jnigen/BuildExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BuildExecutor.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.jnigen.BuildExecutor.executeAnt(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fc4382fdc46e18cf64a63c59faff03967a57f4ba"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["extensions"], "changesInPackagesSPOON": ["com.badlogic.gdx.jnigen.BuildExecutor.executeAnt(java.lang.String,java.lang.String)"]}, {"title": "Scene2D Debug Renderer memory leak", "body": "Hi. Nothing special - just use Table.drawDebug to debug scene and get high memory leak.\nMaybe it's deeper, e.g. ShapeRenderer, but my duty - report =)\n\nI use latest libgdx sources, Win7x64, Java 7u60x64.\n\nSecond - my app. Without drawDebug take only ~120mb.\nThird - Eclipse.\n\n![leak](https://cloud.githubusercontent.com/assets/496349/3351461/43b6eecc-fa0b-11e3-9107-175ba36915a0.png)\n\nIt cause not for only my app - tests also make a leak.\n", "url": "https://github.com/libgdx/libgdx/issues/2013", "user": "semtiko", "labels": ["bug"], "created": "2014-06-22 12:46:27", "closed": "2014-07-08 04:22:33", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "Config file is not always positioning window ", "body": "Hey, just found a small bug with window positioning when using config vars.\n\nIf i put my code like so, then it centers both axis.\nconfig.x=-1;\nconfig.y=0;\nor\nconfig.x=0;\nconfig.y=-1;\n\nBut if i put it like so, then window is in top left corner.\nconfig.x=0;\nconfig.y=0;\n", "url": "https://github.com/libgdx/libgdx/issues/2001", "user": "ghandhikus", "labels": ["bug"], "created": "2014-06-20 17:57:43", "closed": "2014-06-22 14:12:15", "commits": {"ac402df89ec40f22d673f0ef95e50c29e4a8abfb": {"commitGHEventType": "closed", "commitUser": "Tom-Ski"}, "156f4472b4040314d71961a7aec48ccc5af8b485": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "ac402df89ec40f22d673f0ef95e50c29e4a8abfb", "commitGHEventType": "closed", "commitUser": "Tom-Ski", "commitParents": ["102af7cb9e44949acf987d809d9778325c1504ac"], "nameRev": "ac402df89ec40f22d673f0ef95e50c29e4a8abfb tags/gdx-parent-1.2.0~4^2^2", "commitMessage": "Allow centering on either axis fixes #2001\n", "commitDateTime": "2014-06-22 14:53:42", "authoredDateTime": "2014-06-22 14:53:42", "commitGitStats": [{"filePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java", "insertions": 1, "deletions": 3, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LwjglGraphics.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.LwjglGraphics.setupDisplay()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "156f4472b4040314d71961a7aec48ccc5af8b485", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["b96fa2d867f3b600f4177f82782a2dbdf54c3b75", "ac402df89ec40f22d673f0ef95e50c29e4a8abfb"], "nameRev": "156f4472b4040314d71961a7aec48ccc5af8b485 tags/gdx-parent-1.2.0~4^2", "commitMessage": "Merge pull request #2014 from Tom-Ski/master\n\nAllow centering on either axis fixes #2001", "commitDateTime": "2014-06-22 16:12:12", "authoredDateTime": "2014-06-22 16:12:12", "commitGitStats": [{"filePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglGraphics.java", "insertions": 1, "deletions": 3, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LwjglGraphics.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.LwjglGraphics.setupDisplay()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ac402df89ec40f22d673f0ef95e50c29e4a8abfb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 3, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.lwjgl.LwjglGraphics.setupDisplay()"]}, {"title": "AssetManager does not dispose of unloaded sounds properly on iOS", "body": "Calling AssetManager.unload() doesn't seem to remove Sounds from memory on iOS (iPad Air, iOS 7.1.1). As far as I can tell, this is working fine on both Desktop and Android. Calling Sound.dispose() on the sound directly seems to be fine. The leak is visible in Instruments, use a large file (e.g. \"8.12.mp3\" in gdx-tests) to make this as obvious as possible.\n\nApologies if I'm just misunderstanding the AssetManager.\n\nDemo code: \n\n``` java\npackage com.mygdx.game;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.assets.AssetManager;\nimport com.badlogic.gdx.audio.Sound;\n\n\npublic class MyGdxTests extends ApplicationAdapter {\n    public AssetManager manager = new AssetManager();\n    int counter = 1;\n\n    @Override\n    public void create () {\n    }\n\n    @Override\n    public void render () {\n        if (counter == 1) {\n            // Load up the sound\n            manager.load(\"8.12.mp3\",Sound.class);\n            manager.finishLoading();\n            System.out.println(\"loaded\");\n        }\n\n        if (counter == 100) {\n            // Check it's there \n            for (String s : manager.getAssetNames()) {\n                System.out.println(\"before: \" + s);\n            }\n            // Unload the sound\n            manager.unload(\"8.12.mp3\");\n\n            // Check it's gone \n            for (String s : manager.getAssetNames()) {\n                System.out.println(\"after: \" + s); // Should never be seen (and isn't)\n            }\n            counter = 0;\n            System.out.println(\"unloaded\");\n        }\n        counter ++;\n    }\n}\n```\n\nInstruments output: \n![screen shot 2014-06-17 at 14 33 52](https://cloud.githubusercontent.com/assets/6919834/3300926/f641d1fe-f625-11e3-9693-83c054a84ae9.png)\n", "url": "https://github.com/libgdx/libgdx/issues/1986", "user": "dgmp88", "labels": ["bug", "ios"], "created": "2014-06-17 13:52:13", "closed": "2015-03-07 19:38:24", "commits": {}, "ttf": 263.0002777777778, "commitsDetails": []}, {"title": "Mpg123Decoder_getRate crashes", "body": "I'm getting a lot of these errors.. could you check?\n#00 pc 0000a348 /mnt/asec/sk.maniacs.beatmanialite-2/lib/libgdx-audio.so (Java_com_badlogic_gdx_audio_io_Mpg123Decoder_getRate)\n#01 pc 00020bcc /system/lib/libdvm.so (dvmPlatformInvoke+112)\n#02 pc 00051927 /system/lib/libdvm.so (dvmCallJNIMethod(unsigned int const_, JValue_, Method const_, Thread_)+398)\n#03 pc 000535d1 /system/lib/libdvm.so (dvmResolveNativeMethod(unsigned int const_, JValue_, Method const_, Thread_)+256)\n#04 pc 0002a060 /system/lib/libdvm.so\n#05 pc 00031510 /system/lib/libdvm.so (dvmMterpStd(Thread*)+76)\n#06 pc 0002eba8 /system/lib/libdvm.so (dvmInterpret(Thread_, Method const_, JValue*)+184)\n#07 pc 00063e75 /system/lib/libdvm.so (dvmCallMethodV(Thread_, Method const_, Object_, bool, JValue_, std::__va_list)+336)\n#08 pc 00063e99 /system/lib/libdvm.so (dvmCallMethod(Thread_, Method const_, Object_, JValue_, ...)+20)\n#09 pc 00058b6b /system/lib/libdvm.so\n#10 pc 0000d278 /system/lib/libc.so (__thread_entry+72)\n#11 pc 0000d410 /system/lib/libc.so (pthread_create+240)\n", "url": "https://github.com/libgdx/libgdx/issues/1962", "user": "marekhalmo", "labels": ["android", "bug"], "created": "2014-06-11 15:38:54", "closed": "2014-06-15 22:04:09", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Music interface getPosition() gives seconds or milliseconds based on backend.", "body": "The documentation in com.badlogic.gdx.audio.Music for getPosition() reads\n<code>\n/*\\* Returns the playback position in milliseconds. */\n</code>\n\nThe desktop backend call with AL11.AL_SEC_OFFSET natively returns a value in <b>seconds</b>.\nThe android and gwt backends return values that are divided by 1000, giving <b>seconds</b>.\nThe iOS backend returns a value multiplied by 1000, giving <b>milliseconds</b> (I assume).\n\nPerhaps change the documentation and the iOS backend or change the desktop, android, and gwt backends.\n\n(On another note, issue #921 still is around, this issue especially breaks games that need to sync time to the music, like Stepmania. Calls to Music.getPosition() on the desktop backend return values that increase too quickly (maybe this depends on the hardware implementation?). You can test this by playing music and keeping elapsed time in the application's render method with Gdx.graphics.getDeltaTIme(). If you compare the elapsed time to what getPosition() returns you will see that getPosition() increases at a faster rate that the elapsed time. You can modify the MusicTest file in gdx-tests to set this up quickly but note that this does not happen with all songs, here is one that it does happen with (for me at least): https://drive.google.com/file/d/0Bx9k9I8v-JzvV19Gd0xBUk02TWs/edit?usp=sharing.\n\nI have no clue about openal but doing a quick google search many people say that AL11.AL_SEC_OFFSET rounds and that perhaps AL_SAMPLE_OFFSET divided by the sample rate will be a more accurate value? I also notice that the desktop backend keeps track of renderedSeconds which gets added to AL_SEC_OFFSET??)\n", "url": "https://github.com/libgdx/libgdx/issues/1952", "user": "purelogiq", "labels": ["bug"], "created": "2014-06-10 06:15:00", "closed": "2014-06-29 08:55:22", "commits": {"80180dc6f9e4ea836d42794152d84f8f2aaad66a": {"commitGHEventType": "closed", "commitUser": "badlogic"}, "0f2ee4e98d13150189f494f15fb94626e35b06b8": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "80180dc6f9e4ea836d42794152d84f8f2aaad66a", "commitGHEventType": "closed", "commitUser": "badlogic", "commitParents": ["fcb18ff6ae441da1003ef87e566e4aaf05782488"], "nameRev": "80180dc6f9e4ea836d42794152d84f8f2aaad66a tags/1.3.0~46^2~12^2~1", "commitMessage": "iOS Music.getPosition() returns secs. Fixes #1952", "commitDateTime": "2014-06-28 17:29:07", "authoredDateTime": "2014-06-28 17:29:07", "commitGitStats": [{"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSMusic.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSMusic.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSMusic.getPosition()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0f2ee4e98d13150189f494f15fb94626e35b06b8", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["2979c84ee1ee2d8ee9623326bedd7d5a0d53de26", "92108d185c74cf166b83d8ee0a7f8cb1c941a87a"], "nameRev": "0f2ee4e98d13150189f494f15fb94626e35b06b8 tags/1.3.0~46^2~12", "commitMessage": "Merge pull request #2045 from purelogiq/master\n\nUpdated Music.getPosition() doc and changed iOS backend to match. Fixes #1952", "commitDateTime": "2014-06-29 10:55:17", "authoredDateTime": "2014-06-29 10:55:17", "commitGitStats": [{"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSMusic.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "gdx/src/com/badlogic/gdx/audio/Music.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSMusic.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSMusic.getPosition()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "Music.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["80180dc6f9e4ea836d42794152d84f8f2aaad66a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.iosrobovm.IOSMusic.getPosition()"]}, {"title": "Sound is only playing from behind", "body": "I have a Auzentech Forte soundcard and implemented sounds into my libgdx project, but the sound is only played on the rear speakers. If i set it to left or right it is played on the left or the right speaker not on the center right or left speaker.\n\nI play the sound by simple calling the play method\n\nexplosion = Gdx.audio.newSound(Gdx.files.internal(\"explosion.wav\"));\nexplosion.play();\n", "url": "https://github.com/libgdx/libgdx/issues/1950", "user": "Lucitus", "labels": ["bug"], "created": "2014-06-09 14:31:45", "closed": "2014-07-19 16:18:19", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "Color markup language does not work for Scene2D Labels", "body": "Apparently it's because `Label` wipes out the color specified in the markup language with its own `Color` property.  The text _does_ get parsed (i.e. `[RED]velvet` turns into `velvet`), but not recolored.\n", "url": "https://github.com/libgdx/libgdx/issues/1934", "user": "JesseTG", "labels": ["bug", "scene2d"], "created": "2014-06-04 15:26:25", "closed": "2014-09-30 23:48:44", "commits": {"5bcbd15577d87cd17acbbb03ef6ee028882bee05": {"commitGHEventType": "closed", "commitUser": "davebaol"}}, "ttf": 118.00027777777778, "commitsDetails": [{"commitHash": "5bcbd15577d87cd17acbbb03ef6ee028882bee05", "commitGHEventType": "closed", "commitUser": "davebaol", "commitParents": ["72ce29c53e3344eaeec3406410bcc3137724aef8"], "nameRev": "5bcbd15577d87cd17acbbb03ef6ee028882bee05 tags/1.4.0~14^2~1", "commitMessage": "Added color chunk pooling. This should close #1934 properly.", "commitDateTime": "2014-09-30 17:20:42", "authoredDateTime": "2014-09-30 17:20:42", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java", "insertions": 36, "deletions": 4, "lines": 40}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BitmapFontCache.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.clear()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.addColorChunk(float,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.addToCache(java.lang.CharSequence,float,float,int,int)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.obtainColorChunk(float,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.ColorChunk", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.BitmapFontCache.ColorChunk.reset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5bcbd15577d87cd17acbbb03ef6ee028882bee05"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 36, "deletions": 4, "lines": 40, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 14, "UPD": 0, "INS": 8, "MOV": 3, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.graphics.g2d.BitmapFontCache.ColorChunk", "com.badlogic.gdx.graphics.g2d.BitmapFontCache.clear()", "com.badlogic.gdx.graphics.g2d.BitmapFontCache.obtainColorChunk(float,int)", "com.badlogic.gdx.graphics.g2d.BitmapFontCache.addColorChunk(float,boolean)", "com.badlogic.gdx.graphics.g2d.BitmapFontCache.addToCache(java.lang.CharSequence,float,float,int,int)", "com.badlogic.gdx.graphics.g2d.BitmapFontCache.ColorChunk.reset()", "com.badlogic.gdx.graphics.g2d.BitmapFontCache"]}, {"title": "Drawing stages in frame buffers results in improper rendering", "body": "In the process of creating my frame buffers, so I may use GLSL shaders to perform blur behind UI elements, I've encountered a problem where transparent actors in a stage(s) end up overlapping when rendering to a frame buffer.  \n\nFor some reason, the actors will completely crop away what's behind them instead of multiplying properly when they're rendered within a frame buffer, like in this image\n\n![screenshot - 06022014 - 12 21 01 am](https://cloud.githubusercontent.com/assets/316728/3143886/7a015c72-ea0e-11e3-9132-bd31dc610bfc.png)\n\nWhen rendering without being wrapped into a frame buffer, the ui renders as expected.\n\n![screenshot - 06022014 - 12 20 22 am](https://cloud.githubusercontent.com/assets/316728/3143887/7b9c4466-ea0e-11e3-83a1-dd1a5c142c56.png)\n\nFrom what I see here in my testing, it only appears to be happening with stacked Table elements with backgrounds set to a Drawable.\n", "url": "https://github.com/libgdx/libgdx/issues/1926", "user": "nhydock", "labels": ["bug"], "created": "2014-06-02 04:30:41", "closed": "2014-06-02 17:50:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "GWT Serialize Json IntMap ", "body": "http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=14562&p=63605#p63605\n", "url": "https://github.com/libgdx/libgdx/issues/1910", "user": "kremsy", "labels": ["bug", "gwt"], "created": "2014-05-28 23:09:31", "closed": "2014-05-30 16:53:41", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Crash on iOS simulator if no audio input device is available", "body": "I've created a project with gdx-setup and built it using NetBeans. It works fine with other platforms, but trying to launch the IOS build (using Tasks->LaunchIPhoneSimulator) results in a crash of the app within the simulator due to missing audio input. My machine has no microphone.\n\nI expect the project to work at least until it tries to actually use the audio input, which I suppose will never happen in the vast majority of use cases.\n\n![screen shot 2014-05-23 at 13 16 01](https://cloud.githubusercontent.com/assets/4583935/3066014/ea6d7c7a-e26b-11e3-9bc3-92a30c7ed50c.png)\n", "url": "https://github.com/libgdx/libgdx/issues/1894", "user": "sorrge", "labels": ["bug", "ios"], "created": "2014-05-23 11:21:38", "closed": "2014-06-18 08:22:33", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "Packaging iOS project for ah-hoc distribution via Eclipse/RoboVM Tools fails with Box2D + TweenEngine", "body": "The reason this occurs is because the Gradle plug-in for Eclipse doesn't seem to add the required .jar files into the iOS project's build path. \n\nBy right, the only steps required are the following:\n\nFor Box2D, add the following line to the main `build.gradle` file for the `project(\":ios\")` block.\n\n``` groovy\nnatives \"com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-ios\"\n```\n\nFor Tween Engine, add  the line `compile fileTree (dir:'libs/', include:'*.jar')` to the `project(\":core\")` block.\n\nAt this point, using `gradlew ios:createIPA` works correctly.\n\nHowever, using \"RoboVM Tools -> Package for ah-hoc\" in Eclipse won't work. Attempting to run the exported .ipa  will result in a crash after the splash screen.\n\nTo get it to work, the following needs to be specified instead.\n\nFor Box2D, two lines need to be added:\n\n``` groovy\nproject(\":ios\") {\n... \ncompile \"com.badlogicgames.gdx:gdx-box2d:$gdxVersion\"\nnatives \"com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-ios\"\n...\n}\n```\n\nFor Tween Engine, `tween-engine-api.jar` needs to be manually added into the /libs/ folder of the iOS project. Followed by adding `compile fileTree (dir:'libs', include:'*.jar')` line to the `project(\":ios\") block in the main`build.gradle` file too. \n\nThis can be tested out with any project that uses Box2D and/or Tween Engine.\n\nMore details can be found in [this thread on the RoboVM Google Group](https://groups.google.com/forum/#!topic/robovm/fA0Q7acpMC4)\n", "url": "https://github.com/libgdx/libgdx/issues/1877", "user": "chongdashu", "labels": ["bug", "gradle", "ios"], "created": "2014-05-18 19:34:27", "closed": "2014-06-09 00:23:02", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "Matrix4.getScaleX(), Matrix4.getScaleY(), Matrix4.getScaleZ() can return negative", "body": "`Matrix4.getScaleX()`, `Matrix4.getScaleY()`, `Matrix4.getScaleZ()` can return negative scales (i.e mirrored):\n\n```\npublic float getScaleX () {\n        return (MathUtils.isZero(val[Matrix4.M01]) && MathUtils.isZero(val[Matrix4.M02])) ?\n                    val[Matrix4.M00] : \n                    (float)Math.sqrt(getScaleXSquared());\n}\n```\n\nIn this example, if  `M01` and `M02` are zero, `M00` is returned which can be negative. This contradicts the javadoc which says: `@return the scale factor on the X axis (non-negative)`. IMHO best way to solve this would be to always return the norm of the row and assume the scale was positive in the first place. \n", "url": "https://github.com/libgdx/libgdx/issues/1859", "user": "ayberkozgur", "labels": ["bug"], "created": "2014-05-15 12:14:35", "closed": "2014-05-16 13:36:13", "commits": {"09e790be7ff91977bb00b36acec6b26ba6962099": {"commitGHEventType": "closed", "commitUser": "xoppa"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "09e790be7ff91977bb00b36acec6b26ba6962099", "commitGHEventType": "closed", "commitUser": "xoppa", "commitParents": ["659ddedf102d95d83375b22a72d473ed52b0e646"], "nameRev": "09e790be7ff91977bb00b36acec6b26ba6962099 tags/1.1.0~33", "commitMessage": "Fixes #1859\n", "commitDateTime": "2014-05-16 15:29:09", "authoredDateTime": "2014-05-16 15:29:09", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/math/Matrix4.java", "insertions": 8, "deletions": 6, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Matrix4.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.math.Matrix4.getScaleX()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.math.Matrix4.getScaleY()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.math.Matrix4.getScaleZ()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["09e790be7ff91977bb00b36acec6b26ba6962099"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 6, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.math.Matrix4.getScaleY()", "com.badlogic.gdx.math.Matrix4.getScaleX()", "com.badlogic.gdx.math.Matrix4.getScaleZ()"]}, {"title": "BitmapFontCache WrappedText should map 1:1 to the original String", "body": "I add several strings to a BitmapFontCache, with addWrappedText() and save the concatenation of the Strings.\nAt some point I want to color substrings inside the saved text, but this won't work because addWrappedText() trims the whitespaces from the line's ends.\nThis will mean that the index in the BitmapFontCache won't match with the index inside the saved String, leading to issues, or even crashes if the index by chance is out of bounds.\n", "url": "https://github.com/libgdx/libgdx/issues/1844", "user": "sarkanyi", "labels": ["bug", "enhancement"], "created": "2014-05-13 14:14:51", "closed": "2014-05-14 06:13:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "gdx2d_load ignores format specified", "body": "See https://github.com/libgdx/libgdx/pull/1812#issuecomment-42738390\n\nFor whatever reason, stb_image doesn't respect the requested format. Need to perform the format conversion manually. This only affects loading pixmaps from memory.\n", "url": "https://github.com/libgdx/libgdx/issues/1826", "user": "badlogic", "labels": ["bug"], "created": "2014-05-10 10:39:23", "closed": "2014-05-10 21:00:05", "commits": {"155fd6972e7084862ccdba9b12894538685416ff": {"commitGHEventType": "closed", "commitUser": "badlogic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "155fd6972e7084862ccdba9b12894538685416ff", "commitGHEventType": "closed", "commitUser": "badlogic", "commitParents": ["9505ebd16fe7f06b53517a568f682a2ad56bb025"], "nameRev": "155fd6972e7084862ccdba9b12894538685416ff tags/1.1.0~56^2~5", "commitMessage": "fixed #1826, gdx2d_load no longer takes req format parameter, not changes in Java API\n", "commitDateTime": "2014-05-10 22:59:13", "authoredDateTime": "2014-05-10 22:59:13", "commitGitStats": [{"filePath": "gdx/jni/com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.cpp", "insertions": 19, "deletions": 19, "lines": 38}, {"filePath": "gdx/jni/com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.h", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "gdx/jni/gdx2d/gdx2d.c", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "gdx/jni/gdx2d/gdx2d.h", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java", "insertions": 31, "deletions": 11, "lines": 42}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Gdx2DPixmap.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.Gdx2DPixmap", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 8}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.convert(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.load(long[],byte[],int,int,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["155fd6972e7084862ccdba9b12894538685416ff"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 59, "deletions": 42, "lines": 101, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 13, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 8, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx", "tests"], "changesInPackagesSPOON": ["com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.load(long[],byte[],int,int,int)", "com.badlogic.gdx.graphics.g2d.Gdx2DPixmap", "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "com.badlogic.gdx.graphics.g2d.Gdx2DPixmap.convert(int)"]}, {"title": "Unwanted Transparency ", "body": "Hello!\nWe've noticed that every single sprite in our sprite batch is transparent, but we are pretty sure that every asset we use isn't. I don't have any screen shots atm, but will upload as soon as possible, but I've heard that this is a know bug not related to libgdx?\n\nWhere should I file this bug report?\n\nCheers!\n", "url": "https://github.com/libgdx/libgdx/issues/1815", "user": "Istenes", "labels": ["bug"], "created": "2014-05-08 06:22:29", "closed": "2014-05-10 13:40:12", "commits": {"f5c19b8b5b67f8be5224488860abdce29b167c59": {"commitGHEventType": "referenced", "commitUser": "badlogic"}, "c921675e138f5f838cb70b637f45df64cabd3395": {"commitGHEventType": "referenced", "commitUser": "code-disaster"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "f5c19b8b5b67f8be5224488860abdce29b167c59", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["77949b01acfe756b93ff49349f87e9caa78b4a58"], "nameRev": "f5c19b8b5b67f8be5224488860abdce29b167c59 tags/1.1.0~56^2~17", "commitMessage": "fixed issue #1815, alpha at ff was actually alpha at fe cause java sucks\n", "commitDateTime": "2014-05-10 15:37:29", "authoredDateTime": "2014-05-10 15:37:29", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/AlphaTest.java", "insertions": 8, "deletions": 2, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpriteBatch.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.SpriteBatch.createDefaultShader()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SpriteCache.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.SpriteCache.createDefaultShader()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AlphaTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.AlphaTest.create()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.tests.AlphaTest.render()", "TOT": 16, "UPD": 2, "INS": 5, "MOV": 8, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c921675e138f5f838cb70b637f45df64cabd3395", "commitGHEventType": "referenced", "commitUser": "code-disaster", "commitParents": ["982b24a7cfa9aeff3a18ff84682f2f3bdcbe7973"], "nameRev": "c921675e138f5f838cb70b637f45df64cabd3395 tags/1.9.6~9^2~19", "commitMessage": "Apply vertex color alpha scaling to default shader in CameraGroupStrategy. See #1815 for original issue.\n", "commitDateTime": "2017-01-13 12:28:20", "authoredDateTime": "2017-01-13 12:28:20", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/graphics/g3d/decals/CameraGroupStrategy.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CameraGroupStrategy.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy.createDefaultShader()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f5c19b8b5b67f8be5224488860abdce29b167c59", "c921675e138f5f838cb70b637f45df64cabd3395"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 11, "UPD": 4, "INS": 4, "MOV": 3, "DEL": 0, "spoonFilesChanged": 4, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["tests", "gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.graphics.g2d.SpriteCache.createDefaultShader()", "com.badlogic.gdx.graphics.g2d.SpriteBatch.createDefaultShader()", "com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy.createDefaultShader()", "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])"]}, {"title": "setInputProcessor missing in box2D tests?", "body": "I have experimented with box2D tests and there is no input handling in those tests e.g. in ApplyForce.java no action is triggered after key pressed. \n\nI added Gdx.input.setInputProcessor(this); in create() method of Box2DTest.java which set up the InputProcessor and now all tests and examples for subclasses work fine and there is input handling.\n", "url": "https://github.com/libgdx/libgdx/issues/1806", "user": "corpen", "labels": ["bug"], "created": "2014-05-06 02:06:44", "closed": "2014-05-10 10:41:06", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Issue of overlapped transitions in 3D animation", "body": "There is an issue with overlapped transitions in 3d model animations.\n\nIt happens when:\n1. ModelInstance is under animation1\n2. We call controller.animate(\"animation2\", 1f) with a transition time of 1 sec.\n3. We call again controller.animate(\"animation2\", 1f) BEFORE the first transition is finished, \n\nThe result is that the model becomes strangelly distorsed for the whole duration of last animation. It happens not for all models (but is 100% reprodusable for some models). It seems that is somehow related to #1351. Like some bones are used in step 1, and thay are not used in steps 2 and 3. But after applying it twice withing transition times that bones do not reset to the original state.\n\nI can not get a simple model to demonstrate the effect. Got it only on complicated work models. I could send one of them for tests privatelly, if one need.\n", "url": "https://github.com/libgdx/libgdx/issues/1803", "user": "titovmaxim", "labels": ["bug"], "created": "2014-05-04 13:17:36", "closed": "2014-05-10 20:18:38", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Robovm OpenAL sounds not playing properly after resume", "body": "Hi Team,\n\nMy game does not seem to play any sound if I pause the game (home button), then open another game (like Hearthstone), then resuming the already started game. But if I do not open another game while on the homescreen, sounds play normally. This also happens sometimes after pause and resuming several times in a row.\n\nMusic runs fine though, but cuts of after a while, I'm using a mixture of WAV and MP3 formats.\n\nBut if I pause and resume the game a couple times more, all the sounds that should be playing previously now plays immediately the moment the game is resumed. It is as if the audio thread did not resume properly the previous times.\n\nMy setup is latest nightlies with latest robovm 0.11. With iPad Mini first gen, iOS 7.1.1\n", "url": "https://github.com/libgdx/libgdx/issues/1795", "user": "AzmiTerato", "labels": ["bug", "ios"], "created": "2014-05-03 00:46:54", "closed": "2014-05-10 21:06:01", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Robovm Black screen after resume", "body": "Hi LibGDX team, \n\nMy game works fine but when resuming after a long period of time (couple of hours), the screen appears black but the game continues to run with sound. This also happens sometimes if you pause the game (home button), play another game and then resuming your game.\n\nI'm currently using latest nightlies with latest robovm 0.11, test device is iPad Mini first gen, iOS 7.1.1\n", "url": "https://github.com/libgdx/libgdx/issues/1794", "user": "AzmiTerato", "labels": ["bug", "ios"], "created": "2014-05-03 00:39:13", "closed": "2014-05-10 21:05:11", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "iPad 1 doesn't support rotate", "body": "1. Install a new project created with the awesome [Project-Setup-Gradle](https://github.com/libgdx/libgdx/wiki/Project-Setup-Gradle) tool\n2. create an ipa file for iOS\n3. attach an iPad 1 (which runs 5.1.1 - the last version of iOS supported on that device)\n4. double click on the ipa file to have iTunes launch and configure the ipa for transfer to the iPad\n5. Sync the iPad to install the app\n6. run the app on the iPad\n\nExpect: App will run and adjust to landscape or portrait\nActual: App is always in portrait mode.\n\nNotes:\n- rotate works as expected on new iOS versions\n- You have to build the IPA separately because RoboVM doesn't support  iOS 5.x (per [RoboVM issue 222](https://github.com/robovm/robovm/issues/220) )\n- total guess: This is caused by either LibGDX (or maybe RoboVM?) not taking into account [this api change](http://stackoverflow.com/questions/19164457/ipad-1-showing-portrait-mode-instead-of-landscape) from 5.x to 6.x.\n", "url": "https://github.com/libgdx/libgdx/issues/1785", "user": "mikemee", "labels": ["bug", "ios"], "created": "2014-05-01 00:31:13", "closed": "2014-06-28 22:08:09", "commits": {}, "ttf": 58.000277777777775, "commitsDetails": []}, {"title": "Gradle Setup - Missing path to Javadocs in Eclipse", "body": "Start Eclipse -> Packet Explorer -> chose Libgdx Gradle generated project -> expand Gradle Dependencies -> right click a jar -> Properties -> Javadoc Location -> Location path\n(none) <- Javadoc Path is missing here\n\nThe current class path entry belongs to container 'Gradle Dependencies' which does not allow user modifications to Javadoc locations on its entries.\n\nIn other words no Javadoc paht, no hotkey shift+F2 to open the Javadocs, and no permission to change.\n\n(Small note: The path to the source code is set and works fine.)\n\nThank you.\n\nThank you\n", "url": "https://github.com/libgdx/libgdx/issues/1780", "user": "deBugger-", "labels": ["bug", "gradle"], "created": "2014-04-29 20:34:33", "closed": "2014-05-10 10:02:04", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Music.OnCompletionListener does not call when the length of the Music is 0.", "body": "I'm currently working on a game using a music system capable of looping. The system first plays the introductory part of the music, then once that has completed, it plays the second looping part.\n\nI've encountered a problem where if the first part of the music is empty in order to make it only play the looping part with no intro, the first part's Music.OnCompletionListener never calls. I have made sure that play() is being called with no errors and that the OnCompletionListener is set properly (as the code works with non-empty music parts), which leads me to believe this is a LibGDX bug.\n\nCould be related to https://github.com/libgdx/libgdx/issues/1366, but unsure. That issue also seems to be affecting me with some of the sound effects.\n\nAnother note, this does not seem to happen on Android.\n", "url": "https://github.com/libgdx/libgdx/issues/1770", "user": "Steveice10", "labels": ["bug"], "created": "2014-04-26 23:53:13", "closed": "2014-05-03 17:35:36", "commits": {"bff3d6bade455509078571a3d2453c4b52261aee": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "bff3d6bade455509078571a3d2453c4b52261aee", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["0c54a796cc51b45edb73c20414017d86f05b0875"], "nameRev": "bff3d6bade455509078571a3d2453c4b52261aee tags/1.0.1~14^2~4", "commitMessage": "fixed #1770\n", "commitDateTime": "2014-05-03 19:35:01", "authoredDateTime": "2014-05-03 19:35:01", "commitGitStats": [{"filePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/audio/OpenALMusic.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OpenALMusic.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.audio.OpenALMusic.play()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bff3d6bade455509078571a3d2453c4b52261aee"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.lwjgl.audio.OpenALMusic.play()"]}, {"title": "1.0 version hello world crash using freetype on iphone 5", "body": "I'm using version 1.0 with standard gradle setup generated project. \non create():\nFreeTypeFontGenerator gen=new FreeTypeFontGenerator(Gdx.files.internal(\"data/fonts/hei_bold.ttf\"));\nFreeTypeFontParameter parameter=new FreeTypeFontParameter();\nparameter.size=20;\nparameter.characters=\"abc\";\nparameter.minFilter=TextureFilter.Linear;\nparameter.maxFilter=TextureFilter.Linear;\nBitmapFont font=gen.generateFont(parameter);\n\nthis is the only code in my ApplcationListener and nothing else.\n\nafter using robovm packing tool to output ipa and installing on my iphone 5, the helloworld starts,show the splash screen, then crash.\n", "url": "https://github.com/libgdx/libgdx/issues/1753", "user": "sunnyawake", "labels": ["bug", "ios"], "created": "2014-04-23 12:29:13", "closed": "2014-05-03 17:40:24", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Android softkeys alpha'd background?", "body": "I am using the latest 1.0 version. I will admit I am a Gradle noob so I may not have the most recent nightly build.  When I run my game on my android device (Droid RAZR HD) I see my wallpaper (light grid) through the softkeys at the bottom. I will attach a picture at the end of this post, you can see the green tiles from my wall paper behind my soft keys.  This never happened with the 0.9 versions.  I am not sure what is different here though.    Let me know if you need anything from me or have something I can try. \n\n![screenshot_2014-04-15-14-17-14](https://cloud.githubusercontent.com/assets/7308294/2714536/7bb2444a-c4f8-11e3-94fa-8ae7f7ae72d0.png)\n", "url": "https://github.com/libgdx/libgdx/issues/1706", "user": "dsgraham81", "labels": ["android", "bug"], "created": "2014-04-15 23:52:53", "closed": "2014-04-25 03:45:54", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Old Setup-UI uses outdated iOS Launcher code", "body": "http://badlogicgames.com/forum/viewtopic.php?f=11&t=13569\n", "url": "https://github.com/libgdx/libgdx/issues/1699", "user": "badlogic", "labels": ["bug", "ios"], "created": "2014-04-14 12:46:51", "closed": "2014-04-14 12:47:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Box2d Impulses are totally different in Android Release Mode", "body": "I use libGDX and box2D and I found a strange Behavior while Integrating Box2D in my Game (Engine).\nI started to implement https://bitbucket.org/dermetfan/libgdx-utils/wiki/Breakable and everything was fine, until i tried the same Game on my Tablet.\n\nLook here:\nhttp://youtu.be/P9ObJFNlF_w\n\nIf I have a breakable Object in Desktop Version, it behaves like expected. On Android it seemed to be much more breakable then on the Desktop Version.\nSo I started to check where this behavior comes from. The strange Thing is, that in Debugging Mode the behavior is like in the Desktop Version. Only in release mode it breaks faster. Using fixed Timesteps. \n\nI logged the NormalImpulse(or the Sum), by implementing a custom ContactListener, which delegates to the BreakableManager.\n\nIn the CallBack of my Breakable Object i log more detailed Information (all Components of the normal Impulse), but only if the Body is destroyed.\nLook at Collision NR28:\n\nDesktop:\n\nNormal Impulse: 0.29399997 Collision NR26\nNormal Impulse: 0.29400006 Collision NR27\nNormal Impulse: 3.79384 Collision NR28\nNormal Impulse: 0.29400003 Collision NR29\nNormal Impulse: 0.29400003 Collision NR30\n\nAndroid:\n\nNormal Impulse: 0.29399997 Collision NR26\nNormal Impulse: 0.29400006 Collision NR27\nNormal Impulse: 54.596504 Collision NR28\nNomalImpulse: 3.79384 n0\nNomalImpulse: 50.802666 n1\nTangentImpulse: -0.93856573 n0\nTangentImpulse: 5.5101436E19 n1\nBox strained with NormalImpuse: 54.596504 TangetImpulse: 5.5101436E19\nCritical Collision destroying Body 20.0\nNormal Impulse: 0.29400003 Collision NR29\nNormal Impulse: 0.29400003 Collision NR30\n\nAs you can see there is a significantly higher Impulse on Android Release Version (NR28). And the Component of N28 is NormalImpulse n1, which is exactly the differnce. NormalImpulse n0 matches the NormalImpulse on Desktop Version. So now i can ignore n1 part, but i guess something is wrong here?\n\nIn Debugging Mode everything is fine, like in Desktop Version.\nI found some related Issue, which could be a related problem: https://github.com/libgdx/libgdx/issues/916\n\nAny Ideas to fix?\n", "url": "https://github.com/libgdx/libgdx/issues/1681", "user": "digital-thinking", "labels": ["bug"], "created": "2014-04-11 14:02:45", "closed": "2014-05-03 17:59:13", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Intersector#intersectRayBoundsFast incorrect", "body": "Haven't tested it numerically, but Pax Britannica relies on this functionality to do intersectin testing in it's main menu. The last change broke the main menu. I reverted the BoundingBox version to the old code and left the Vector based version as is in the last HEAD. \n\nWe need to have both return the same result eventually :)\n", "url": "https://github.com/libgdx/libgdx/issues/1678", "user": "badlogic", "labels": ["bug"], "created": "2014-04-11 09:35:28", "closed": "2014-04-15 19:24:34", "commits": {"c72b0fbec3dd3c6dc7985261f9410afc014f8186": {"commitGHEventType": "referenced", "commitUser": "badlogic"}, "fbc286789a4dfae9856297b4850b58d9d734ca0c": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "c72b0fbec3dd3c6dc7985261f9410afc014f8186", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["9916b9a03bfdb92a4316ac19c8b700dbd4436fef"], "nameRev": "c72b0fbec3dd3c6dc7985261f9410afc014f8186 tags/1.0.0~55", "commitMessage": "fixed up a few things, including revert for #1678\n", "commitDateTime": "2014-04-11 11:55:49", "authoredDateTime": "2014-04-11 11:55:49", "commitGitStats": [{"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java", "insertions": 41, "deletions": 41, "lines": 82}, {"filePath": "extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/desktop/build.gradle", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "extensions/gdx-setup/src/com/badlogic/gdx/setup/resources/gitignore", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "gdx/src/com/badlogic/gdx/math/Intersector.java", "insertions": 44, "deletions": 1, "lines": 45}, {"filePath": "tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSGraphics.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSGraphics.1.touchesBegan(org.robovm.apple.foundation.NSSet,org.robovm.apple.uikit.UIEvent)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSGraphics.1.touchesCancelled(org.robovm.apple.foundation.NSSet,org.robovm.apple.uikit.UIEvent)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSGraphics.1.touchesEnded(org.robovm.apple.foundation.NSSet,org.robovm.apple.uikit.UIEvent)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSGraphics.1.touchesMoved(org.robovm.apple.foundation.NSSet,org.robovm.apple.uikit.UIEvent)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "IOSInput.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSInput.toTouchEvents(org.robovm.apple.foundation.NSSet,org.robovm.apple.uikit.UIEvent)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Intersector.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.math.Intersector.intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox)", "TOT": 22, "UPD": 0, "INS": 21, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "IOSRobovmTests.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.IOSRobovmTests.createApplication()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "fbc286789a4dfae9856297b4850b58d9d734ca0c", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["c72b0fbec3dd3c6dc7985261f9410afc014f8186", "f83a7e663794aa2676219aae60855ae80ccaa096"], "nameRev": "fbc286789a4dfae9856297b4850b58d9d734ca0c tags/1.0.0~54", "commitMessage": "fixed up a few things, including revert for #1678\n", "commitDateTime": "2014-04-11 12:01:06", "authoredDateTime": "2014-04-11 12:01:06", "commitGitStats": [{"filePath": "CHANGES", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSApplication.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSApplication.getUIWindow()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DragAndDrop.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source.dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.addSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source).1.dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c72b0fbec3dd3c6dc7985261f9410afc014f8186"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 97, "deletions": 60, "lines": 157, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 41, "UPD": 1, "INS": 21, "MOV": 9, "DEL": 10, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["tests", "backends", "extensions", "gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.math.Intersector.intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox)", "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "com.badlogic.gdx.backends.iosrobovm.IOSGraphics.1.touchesBegan(org.robovm.apple.foundation.NSSet,org.robovm.apple.uikit.UIEvent)", "com.badlogic.gdx.backends.iosrobovm.IOSInput.toTouchEvents(org.robovm.apple.foundation.NSSet,org.robovm.apple.uikit.UIEvent)", "com.badlogic.gdx.backends.iosrobovm.IOSGraphics.1.touchesEnded(org.robovm.apple.foundation.NSSet,org.robovm.apple.uikit.UIEvent)", "com.badlogic.gdx.backends.iosrobovm.IOSGraphics.1.touchesCancelled(org.robovm.apple.foundation.NSSet,org.robovm.apple.uikit.UIEvent)", "com.badlogic.gdx.backends.iosrobovm.IOSGraphics.1.touchesMoved(org.robovm.apple.foundation.NSSet,org.robovm.apple.uikit.UIEvent)"]}, {"title": "FragmentApplication never disposed", "body": "@bartolkaruza (and maybe other Fragment contributors)\nThe dispose() is never called when a fragment is detached, do we need to explicitly call something else than the initializeForView in the AndroidFragmentApplication ?\n\nThanks !\n", "url": "https://github.com/libgdx/libgdx/issues/1677", "user": "VinceAngel", "labels": ["android", "bug"], "created": "2014-04-11 08:19:08", "closed": "2014-04-11 23:45:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Error generating IPA from command line", "body": "I'm trying to generate my IPA with _$ gradlew ios:generateIPA_ from commandline but I'm receiving this error:\n\n```\n    FAILURE: Build failed with an exception.\n\n    * What went wrong:\n    Execution failed for task ':ios:createIPA'.\n    > No @Marshaler found for parameter 3 of @Callback method<org.robovm.apple.uikit.UIApplication: long $cb$beginBackgroundTaskWithExpirationHandler$(org.robovm.apple.uikit.UIApplication,org.robov    m.objc.Selector,java.lang.Runnable)>\n```\n\nI have unpacked the lastest robovm release under Downloads, and I also updated robovm eclipse plugin. All to 0.0.11.\n\nMy build.gradle is configurated with roboVMVersion = \"0.0.11\".\n\nWhat could be the problem?\n\nThanks!\n", "url": "https://github.com/libgdx/libgdx/issues/1669", "user": "patriciog", "labels": ["bug", "ios"], "created": "2014-04-10 07:59:11", "closed": "2014-04-11 15:01:01", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Using Viewport forces a call to Gdx.gl.glViewport", "body": "When using a Stage, the usage of Viewport forces a call to Gdx.gl.glViewport due to the update() method. This unnecessarily couples the OpenGL actual rendering surface to the Stage's virtual camera. With 0.9.9 and earlier versions, it was possible to use multiple stages without their updates causing the glViewport to change.\n", "url": "https://github.com/libgdx/libgdx/issues/1661", "user": "zairon", "labels": ["bug", "scene2d"], "created": "2014-04-08 21:57:12", "closed": "2014-05-10 13:48:17", "commits": {"afa366056a8c4104d91726609eac593f2bfe0751": {"commitGHEventType": "closed", "commitUser": "NathanSweet"}}, "ttf": 31.00027777777778, "commitsDetails": [{"commitHash": "afa366056a8c4104d91726609eac593f2bfe0751", "commitGHEventType": "closed", "commitUser": "NathanSweet", "commitParents": ["146c3d087d7896bb9588bb232de1502b66ed43bf"], "nameRev": "afa366056a8c4104d91726609eac593f2bfe0751 tags/1.0.0~74", "commitMessage": "Don't update apply glViewport every frame.\n\ncloses #1661\n", "commitDateTime": "2014-04-09 01:05:18", "authoredDateTime": "2014-04-09 01:05:18", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Stage.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.scenes.scene2d.Stage.draw()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["afa366056a8c4104d91726609eac593f2bfe0751"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.scenes.scene2d.Stage.draw()"]}, {"title": "Minor error in ReflectionTest", "body": "Hey I just started with libgdx and it's been great so far! Anyway, while checking out the tests I came over a small bug in ReflectionTest, where it threw an exception with the following message:\n\n```\nFAILED: Method not found: mul, for class: com.badlogic.gdx.math.Vector2 [...]\n```\n\nIt's probably just because of refactoring, but anyway, I found that if I replaced the second parameter on line 57 from \"mul\" to \"scl\":\n\n```\nMethod mMul = ClassReflection.getMethod(Vector2.class, \"scl\", float.class);\n```\n\nIt would run as intended :)\n\nThanks. Karakaz out\n", "url": "https://github.com/libgdx/libgdx/issues/1647", "user": "Karakaz", "labels": ["bug"], "created": "2014-04-06 21:54:35", "closed": "2014-04-07 17:53:11", "commits": {"7c09b8ebb6377c25268d9ad5e2df221c01420af8": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7c09b8ebb6377c25268d9ad5e2df221c01420af8", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["f50875996d7ac3b1db6fba510d0a91ffafa7a0f6"], "nameRev": "7c09b8ebb6377c25268d9ad5e2df221c01420af8 tags/1.0.0~91", "commitMessage": "Fixes #1647", "commitDateTime": "2014-04-07 10:53:10", "authoredDateTime": "2014-04-07 10:53:10", "commitGitStats": [{"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/ReflectionTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReflectionTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.ReflectionTest.create()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7c09b8ebb6377c25268d9ad5e2df221c01420af8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "scissorstack clipping bugged on nested groups?", "body": "I'm unsure if this is bad code or a bug.\n\nInformation and code snippets on how to reproduce here: http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=13574&p=59768\n\nUsing v0.9.9\n", "url": "https://github.com/libgdx/libgdx/issues/1640", "user": "twig", "labels": ["bug", "scene2d"], "created": "2014-04-06 00:41:24", "closed": "2014-04-14 15:56:57", "commits": {"22d76fa3468263e34956adebab903d5a03ece524": {"commitGHEventType": "referenced", "commitUser": "NathanSweet"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "22d76fa3468263e34956adebab903d5a03ece524", "commitGHEventType": "referenced", "commitUser": "NathanSweet", "commitParents": ["6bd8c65c305b08803deaa4ebb36ead246c3565ae"], "nameRev": "22d76fa3468263e34956adebab903d5a03ece524 tags/1.0.0~36", "commitMessage": "Javadocs\n\n#1640\n", "commitDateTime": "2014-04-15 01:34:11", "authoredDateTime": "2014-04-15 01:34:11", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ScissorStack.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ScissorStack.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["22d76fa3468263e34956adebab903d5a03ece524"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"]}, {"title": "GWT doesn't respect gdx.assetoutputpath", "body": "Settings `gdx.assetoutputpath` doesn't seem to have any effect - assets end up in in `war/` instead.\n\nMaven output snippet:\n\n```\nINFO] --- gwt-maven-plugin:2.6.0:compile (default) @ f2pmsoppa-libgdx-html ---\n[INFO] Compiling module com.binarytweed.F2pMsoPpa\n[INFO] /Users/danieljones/git/f2pmsoppa-libgdx/html/.\n[INFO] assets\n[INFO] Copying resources from assets to war/\n```\n\nGWT XML snippet:\n\n```\n...\n\n    <set-configuration-property name=\"gdx.assetpath\" value=\"assets\" />\n    <set-configuration-property name=\"gdx.assetoutputpath\" value=\"foo\" />\n...\n```\n", "url": "https://github.com/libgdx/libgdx/issues/1633", "user": "DanielCloudCredo", "labels": ["bug", "gwt"], "created": "2014-04-04 19:33:09", "closed": "2014-06-28 21:23:25", "commits": {"2979c84ee1ee2d8ee9623326bedd7d5a0d53de26": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 85.00027777777778, "commitsDetails": [{"commitHash": "2979c84ee1ee2d8ee9623326bedd7d5a0d53de26", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["fcb18ff6ae441da1003ef87e566e4aaf05782488"], "nameRev": "2979c84ee1ee2d8ee9623326bedd7d5a0d53de26 tags/1.3.0~46^2~13", "commitMessage": "Use assetoutputpath if it exists or can be created\n\nFixes #1633\n", "commitDateTime": "2014-06-28 14:21:39", "authoredDateTime": "2014-06-28 14:21:39", "commitGitStats": [{"filePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/FileWrapper.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/PreloaderBundleGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FileWrapper.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.gwt.preloader.FileWrapper.mkdirs()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PreloaderBundleGenerator.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.gwt.preloader.PreloaderBundleGenerator.getAssetOutputPath(com.google.gwt.core.ext.GeneratorContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2979c84ee1ee2d8ee9623326bedd7d5a0d53de26"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.gwt.preloader.PreloaderBundleGenerator.getAssetOutputPath(com.google.gwt.core.ext.GeneratorContext)", "com.badlogic.gdx.backends.gwt.preloader.FileWrapper.mkdirs()"]}, {"title": "LwjglFileHandle.parent() acts differently than the GWT equivalent", "body": "Im using the TmxMapLoader to load my maps, that contain relative paths to the tileset.\n\nExample:\n\n`data/maps/level01.tmx`\n\n```\n<tileset firstgid=\"1\" name=\"tiles-1\" tilewidth=\"16\" tileheight=\"16\" spacing=\"2\" margin=\"2\">\n  <image source=\"../tiles/tiles-1.png\" width=\"256\" height=\"32\"/>\n</tileset>\n```\n\nThe `TmxMapLoader.getRelativeFileHandle` method already processes the relative path  correctly, and calls `file.parent()` on `data/maps/level01.tmx`.\nUsing Lwjgl, it correctly returns `data/maps` - but the GwtFileHandle returns `data/maps/`, so it keeps the last dash. Calling `parent()` on the result returns the same directory again, because the `lastIndexOf(\"/\")` still equals the end of the string.\n\nI think the issue is the `index + 1` in [GwtFileHandle#L319](https://github.com/libgdx/libgdx/blob/master/backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtFileHandle.java#L319)\n", "url": "https://github.com/libgdx/libgdx/issues/1632", "user": "spiderpug", "labels": ["bug", "gwt"], "created": "2014-04-04 17:30:33", "closed": "2014-05-02 22:51:34", "commits": {"b64f18118a265cf713d6863601c030ba7dab4f76": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 28.00027777777778, "commitsDetails": [{"commitHash": "b64f18118a265cf713d6863601c030ba7dab4f76", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["245f56a2b51768a22cd2e3031ee368c5cfc891f7"], "nameRev": "b64f18118a265cf713d6863601c030ba7dab4f76 tags/1.0.1~14^2~3^2~3", "commitMessage": "Implement FileHandle list in GWT backend\n\nAlso, fixes #1632.\n", "commitDateTime": "2014-05-02 15:48:24", "authoredDateTime": "2014-05-02 15:48:24", "commitGitStats": [{"filePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/GwtFileHandle.java", "insertions": 18, "deletions": 12, "lines": 30}, {"filePath": "backends/gdx-backends-gwt/src/com/badlogic/gdx/backends/gwt/preloader/Preloader.java", "insertions": 60, "deletions": 5, "lines": 65}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GwtFileHandle.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtFileHandle", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtFileHandle.sibling(java.lang.String)", "TOT": 14, "UPD": 4, "INS": 1, "MOV": 7, "DEL": 2}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtFileHandle.name()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtFileHandle.pathWithoutExtension()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtFileHandle.list(java.io.FileFilter)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtFileHandle.list(java.io.FilenameFilter)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtFileHandle.list(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtFileHandle.parent()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.GwtFileHandle.fixSlashes(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Preloader.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.gwt.preloader.Preloader.isDirectory(java.lang.String)", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.preloader.Preloader.list(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.preloader.Preloader", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.preloader.Preloader.isChild(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.preloader.Preloader.list(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.preloader.Preloader.list(java.lang.String,java.io.FileFilter)", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.preloader.Preloader.contains(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.gwt.preloader.Preloader.preload(java.lang.String,com.badlogic.gdx.backends.gwt.preloader.Preloader$PreloaderCallback).1.onSuccess(java.lang.String).1.onSuccess(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b64f18118a265cf713d6863601c030ba7dab4f76"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 78, "deletions": 17, "lines": 95, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 55, "UPD": 8, "INS": 23, "MOV": 15, "DEL": 9, "spoonFilesChanged": 2, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.gwt.preloader.Preloader.preload(java.lang.String,com.badlogic.gdx.backends.gwt.preloader.Preloader$PreloaderCallback).1.onSuccess(java.lang.String).1.onSuccess(java.lang.Object)", "com.badlogic.gdx.backends.gwt.GwtFileHandle.fixSlashes(java.lang.String)", "com.badlogic.gdx.backends.gwt.preloader.Preloader", "com.badlogic.gdx.backends.gwt.GwtFileHandle.name()", "com.badlogic.gdx.backends.gwt.GwtFileHandle.list(java.lang.String)", "com.badlogic.gdx.backends.gwt.preloader.Preloader.list(java.lang.String,java.io.FileFilter)", "com.badlogic.gdx.backends.gwt.GwtFileHandle.list(java.io.FileFilter)", "com.badlogic.gdx.backends.gwt.preloader.Preloader.list(java.lang.String,java.lang.String)", "com.badlogic.gdx.backends.gwt.GwtFileHandle.parent()", "com.badlogic.gdx.backends.gwt.GwtFileHandle.sibling(java.lang.String)", "com.badlogic.gdx.backends.gwt.GwtFileHandle", "com.badlogic.gdx.backends.gwt.preloader.Preloader.contains(java.lang.String)", "com.badlogic.gdx.backends.gwt.preloader.Preloader.isChild(java.lang.String,java.lang.String)", "com.badlogic.gdx.backends.gwt.GwtFileHandle.list(java.io.FilenameFilter)", "com.badlogic.gdx.backends.gwt.preloader.Preloader.list(java.lang.String)", "com.badlogic.gdx.backends.gwt.preloader.Preloader.isDirectory(java.lang.String)", "com.badlogic.gdx.backends.gwt.GwtFileHandle.pathWithoutExtension()"]}, {"title": "AssetManager unload fails for g3db file with two refs to same image", "body": "I have a g3db file that references the same texture twice. When it's loaded, the AssetManager.injectDependency method gets called twice with the same texture. Both times, the texture is added as a load task. But in the end, the texture has a ref count of only 1 (should be 2).\n\nSo, during unload, the second texture unload throws here in AssetManager.java:161:\n        // get the asset and its type\n        Class type = assetTypes.get(fileName);\n        if (type == null) throw new GdxRuntimeException(\"Asset not loaded: \" + fileName);\n\nShould the duplicate texture reference be handled gracefully and result in loading the texture once with a ref count of 2?\n", "url": "https://github.com/libgdx/libgdx/issues/1628", "user": "batesj", "labels": ["bug"], "created": "2014-04-03 21:30:35", "closed": "2014-05-03 17:44:35", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "LWJGL renders incorrect size/resolution on Retina displays in Fullscreen", "body": "When running a project with the LWJGL backend on a Retina Macbook Pro and using fullscreen mode, the lower left-hand quarter of the correct viewing area fills the entire screen. \n\nI am unable to confirm whether this is a general issue for all Hi-DPI displays or just the RMBP.\n\nTo reproduce the issue, run the default LWJGL application with the following Main method on a Retina Macbook Pro:\n\n``` java\nimport com.badlogic.gdx.Graphics.DisplayMode;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration;\n\npublic class Main {\n    public static void main(String[] args) {\n        LwjglApplicationConfiguration cfg = new LwjglApplicationConfiguration();\n        DisplayMode dm = LwjglApplicationConfiguration.getDesktopDisplayMode();\n        cfg.title = \"my-gdx-game\";\n        cfg.width = dm.width;\n        cfg.height = dm.height;\n        cfg.fullscreen = true;\n\n        new LwjglApplication(new MyGdxGame(), cfg);\n    }\n}\n```\n", "url": "https://github.com/libgdx/libgdx/issues/1623", "user": "matteblair", "labels": ["bug"], "created": "2014-04-02 18:28:01", "closed": "2014-12-31 09:37:21", "commits": {}, "ttf": 272.0002777777778, "commitsDetails": []}, {"title": "Viewport bug with iOS", "body": "I posted a problem I found with FitViewport under iOS in the forums (http://badlogicgames.com/forum/viewtopic.php?f=11&t=13398&sid=4c9794361f2b36542876e62d3d6c7761) and NateS suggested I raise an issue here.\n\nNateS asked me to do another example using glViewport/SpriteBatch, but I'm afraid my newb'ness knowledge is not sure how to go about this. Instead, I have created a simple example using OrthographicCamera/SpriteBatch below. Same stretching issues as detailed in the forum post under iOS, Desktop/Android are letterboxed as expected.\n\nEDIT : After browsing through the other issues on the tracker, this issue is a duplicate of #1415. I can confirm adding the below to the render method fixes the stretching on iOS.\n\n```\n        Gdx.gl.glViewport(viewport.getViewportX(), viewport.getViewportY(), viewport.getViewportWidth(), viewport.getViewportHeight()); \n```\n\n```\npublic class MyGdxGame implements ApplicationListener {\n    private SpriteBatch batch;\n    private Texture texture;\n    private OrthographicCamera guiCam;\n//      Image is 256x256px\n    private static final int VIRTUAL_WIDTH = 256;\n        private static final int VIRTUAL_HEIGHT = 256;\n        private FitViewport viewport;\n\n    @Override\n    public void create() {      \n        batch = new SpriteBatch();\n        guiCam = new OrthographicCamera(VIRTUAL_WIDTH, VIRTUAL_HEIGHT);\n        guiCam.position.set(Gdx.graphics.getWidth() / 2, Gdx.graphics.getHeight() / 2, 0);\n        viewport = new FitViewport(VIRTUAL_WIDTH, VIRTUAL_HEIGHT, guiCam);\n        texture = new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n        texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);\n    }\n\n    @Override\n    public void dispose() {\n        batch.dispose();\n        texture.dispose();\n    }\n\n    @Override\n    public void render() {\n        Gdx.gl20.glClearColor(0, 0, 0, 1);\n        Gdx.gl20.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);\n        guiCam.update();\n        batch.setProjectionMatrix(guiCam.combined);\n        batch.begin();\n        batch.draw(texture, 0, 0);\n        batch.end();\n    }\n\n    @Override\n    public void resize(int width, int height) {\n        viewport.update(width, height, true);\n    }\n\n    @Override\n    public void pause() {\n    }\n\n    @Override\n    public void resume() {\n    }\n}\n```\n\nAndroid capture - ![image](https://cloud.githubusercontent.com/assets/7126011/2591001/a7c7d8f8-ba65-11e3-977c-f688d7914c4b.png)\n\niOS capture - \n![image](https://cloud.githubusercontent.com/assets/7126011/2591041/434eb864-ba66-11e3-9404-64d00223a83c.png)\n", "url": "https://github.com/libgdx/libgdx/issues/1620", "user": "JustGez", "labels": ["bug", "ios"], "created": "2014-04-02 13:00:31", "closed": "2014-04-09 21:20:22", "commits": {"2ba608901b33ce6c1effb9b098ab1c2159e98e2d": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "2ba608901b33ce6c1effb9b098ab1c2159e98e2d", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["70da7118c53c2c54a25e02258f628f04be03d2b9"], "nameRev": "2ba608901b33ce6c1effb9b098ab1c2159e98e2d tags/1.0.0~59", "commitMessage": "fixed issue #1620, you don't want to know how...\n", "commitDateTime": "2014-04-09 23:22:14", "authoredDateTime": "2014-04-09 23:22:14", "commitGitStats": [{"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGLES20.java", "insertions": 14, "deletions": 3, "lines": 17}, {"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSGraphics.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "gdx/jni/iosgl/iosgl20.cpp", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "gdx/jni/iosgl/iosgl20.h", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSGLES20.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSGLES20.glViewport(int,int,int,int)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSGLES20", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IOSGraphics.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSGraphics.draw(org.robovm.apple.glkit.GLKView,org.robovm.apple.coregraphics.CGRect)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2ba608901b33ce6c1effb9b098ab1c2159e98e2d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 23, "deletions": 7, "lines": 30, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 11, "UPD": 1, "INS": 8, "MOV": 1, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx", "backends", "tests"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.iosrobovm.IOSGLES20.glViewport(int,int,int,int)", "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "com.badlogic.gdx.backends.iosrobovm.IOSGraphics.draw(org.robovm.apple.glkit.GLKView,org.robovm.apple.coregraphics.CGRect)", "com.badlogic.gdx.backends.iosrobovm.IOSGLES20"]}, {"title": "Isometric TiledMap Renderers don't properly support y-down", "body": "Row order is flipped. Boo.\n", "url": "https://github.com/libgdx/libgdx/issues/1614", "user": "MobiDevelop", "labels": ["bug"], "created": "2014-04-01 18:55:16", "closed": "2014-05-03 18:02:27", "commits": {}, "ttf": 31.00027777777778, "commitsDetails": []}, {"title": "isometric renderers with images larger than tile size / tile sets with different sizes", "body": "Both isometric renderers seem to have (alignment?) issues rendering when you use images larger than tile sizes or when using tile sets that have different sizes, not sure which. \n\nUsing two tile sets (from flare).  \n\nThe grass is 64x128\nThe water, which also includes the cliff edges, uses 64x64\nThe map tiles are 64x32\n\n![withtiled2](https://cloud.githubusercontent.com/assets/806162/2580167/8ef3be20-b9aa-11e3-84e8-4f8b3fe1bf40.png)\n![withgdx3](https://cloud.githubusercontent.com/assets/806162/2580268/b0e4c212-b9ab-11e3-8e96-0cf21cd1624d.png)\n\nlink to simple map file used for the above images: https://dl.dropboxusercontent.com/u/14075939/maps2.tar\ncan also load maps from flare to see the same effect\n", "url": "https://github.com/libgdx/libgdx/issues/1610", "user": "tricid", "labels": ["bug"], "created": "2014-04-01 14:48:14", "closed": "2014-05-03 20:48:12", "commits": {"c005f9a0245009405f739b22e67e534838a9115d": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 32.000277777777775, "commitsDetails": [{"commitHash": "c005f9a0245009405f739b22e67e534838a9115d", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["c113aa3e4b1aa0142457bc1cd225ad878db41bb3"], "nameRev": "c005f9a0245009405f739b22e67e534838a9115d tags/1.0.1~14^2~2", "commitMessage": "Use tileoffset from Tiled.\n\nFixes #1610.\n", "commitDateTime": "2014-05-03 13:46:33", "authoredDateTime": "2014-05-03 13:46:33", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTile.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/TmxMapLoader.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/renderers/HexagonalTiledMapRenderer.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/renderers/IsometricStaggeredTiledMapRenderer.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/renderers/IsometricTiledMapRenderer.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthoCachedTiledMapRenderer.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AtlasTmxMapLoader.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader.loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader.Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters)", "TOT": 10, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TiledMapTile.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.getOffsetX()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.maps.tiled.setOffsetX(float)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.maps.tiled.getOffsetY()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.maps.tiled.setOffsetY(float)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TmxMapLoader.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.TmxMapLoader.loadTileSet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader.Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HexagonalTiledMapRenderer.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "IsometricStaggeredTiledMapRenderer.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "IsometricTiledMapRenderer.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "OrthoCachedTiledMapRenderer.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "OrthogonalTiledMapRenderer.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "AnimatedTiledMapTile.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile.getOffsetX()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile.setOffsetX(float)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile.getOffsetY()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile.setOffsetY(float)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StaticTiledMapTile.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile.getOffsetX()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile.setOffsetX(float)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile.getOffsetY()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile.setOffsetY(float)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c005f9a0245009405f739b22e67e534838a9115d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 102, "deletions": 10, "lines": 112, "gitFilesChange": 10}, "spoonStatsSummary": {"TOT": 52, "UPD": 0, "INS": 42, "MOV": 4, "DEL": 6, "spoonFilesChanged": 10, "spoonMethodsChanged": 20}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader.loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader.Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters)", "com.badlogic.gdx.maps.tiled.getOffsetX()", "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile.setOffsetX(float)", "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile", "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile.getOffsetY()", "com.badlogic.gdx.maps.tiled.setOffsetX(float)", "com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile.setOffsetY(float)", "com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile.setOffsetY(float)", "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile.getOffsetX()", "com.badlogic.gdx.maps.tiled.getOffsetY()", "com.badlogic.gdx.maps.tiled.TmxMapLoader.loadTileSet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader.Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)", "com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile.getOffsetX()", "com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile.setOffsetX(float)", "com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile.getOffsetY()", "com.badlogic.gdx.maps.tiled.setOffsetY(float)"]}, {"title": "Libgdx android native crash", "body": "Hi, \nI use today's nightly (31/3). \nWhat happens is that I run a Libgdx Activity (from an android Activity) and it runs fine. Than I finish the Libgdx Activity and I start it again and it crashes... This happens a lot but not all the time. \nIn debug mode it doesn't happen at all. Any ideas? It doesn't print any crash log but I think it has something to do with this log: http://pastebin.com/3BFrjbES\n\nMy code doesn't do any thing special right now. It's just printing the FPS in a stage....\n\nSome times I get this error before the previous log: EGL error: EGL_BAD_CONTEXT\n\nI tried running it with the stable version and it seems to work ok. But when I changed to use OpenGL ES 2.0 it started doing it again.\n", "url": "https://github.com/libgdx/libgdx/issues/1600", "user": "razboo", "labels": ["android", "bug"], "created": "2014-03-31 12:13:29", "closed": "2014-04-09 20:30:26", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "ScrollPane within ScrollPane not working", "body": "A ScrollPane in a ScrollPane does not work because cancelTouchFocusedChild (in ScrollPane Pan event handler) ends up being called for both ScrollPanes which prevents all subsequent Pan events from being handled.\n\nBoth ScrollPanes get the initial Pan event because it is sent based on a snapshot of the focused Actors (see Stage.java SnapshotArray<TouchFocus> touchFocuses = this.touchFocuses;)\n\nMore information and sample code to reproduce the bug are here: http://www.badlogicgames.com/forum/viewtopic.php?t=13468&p=59351\n", "url": "https://github.com/libgdx/libgdx/issues/1596", "user": "wreuven", "labels": ["bug", "scene2d"], "created": "2014-03-31 06:46:54", "closed": "2014-04-14 15:47:21", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "OrthogonalTiledMapRenderer render ordering is inverted", "body": "Default rendering order of tiles:\n\n![screenshot from 2014-03-30 17 37 35](https://cloud.githubusercontent.com/assets/1435884/2562705/2f043f8e-b85c-11e3-8ef2-a647a530464f.png)\n\nIntended rendering order of tiles:\n\n![screenshot from 2014-03-30 17 37 03](https://cloud.githubusercontent.com/assets/1435884/2562708/49474c88-b85c-11e3-99ae-385ff072760c.png)\n\nSimple solution:  Simply invert the rendering order in OrthogonalTiledMapRenderer.java:\n\n```\n#73 float y = row1 * layerTileHeight;\n#77 for (int row = row1; row < row2; row++) {\n#195 y += layerTileHeight; \n```\n\nbecomes:\n\n```\n #73 float y = row2 * layerTileHeight;\n #77 for (int row = row2; row >= row1; row--) {\n #195 y -= layerTileHeight;\n```\n\nThought I'd submit this as an issue rather than a pull request as I've no idea of the consequences of my \"solution\" on different tilemaps.  Perhaps an option to invert rendering is the best solution?  \n", "url": "https://github.com/libgdx/libgdx/issues/1594", "user": "JacobShipley", "labels": ["bug"], "created": "2014-03-30 22:47:38", "closed": "2014-05-04 21:47:29", "commits": {"34df86db858d325c9ae6951ae9e69c2fae914be7": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 34.000277777777775, "commitsDetails": [{"commitHash": "34df86db858d325c9ae6951ae9e69c2fae914be7", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["35437c5cbef3da7bd6e26089a828eb28585f5743"], "nameRev": "34df86db858d325c9ae6951ae9e69c2fae914be7 tags/1.0.1~10^2~2", "commitMessage": "Fix drawing order\n\nCloses #1594\n", "commitDateTime": "2014-05-04 14:46:32", "authoredDateTime": "2014-05-04 14:34:01", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthoCachedTiledMapRenderer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "gdx/src/com/badlogic/gdx/maps/tiled/renderers/OrthogonalTiledMapRenderer.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrthoCachedTiledMapRenderer.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OrthogonalTiledMapRenderer.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["34df86db858d325c9ae6951ae9e69c2fae914be7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)", "com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer.renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)"]}, {"title": "Bullet - weird behaviour on Mac OS X", "body": "Latest nightlies, build fresh from build server or build locally. BulletTestLocation exhibits really weird behaviour, stacked blocks explode, cars move on their own etc. Tried different JREs/JDKs (6, 7, 8), same result for all of them. \n\nSame build works on iOS and Android. Haven't tested on Windows/Linux yet, but i can only imagine it's a Mac specific issue...\n", "url": "https://github.com/libgdx/libgdx/issues/1591", "user": "badlogic", "labels": ["bug"], "created": "2014-03-30 19:12:28", "closed": "2014-04-06 19:05:43", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Timers don't work while window doesn't have focus", "body": "On Windows, timers don't seem to work when the window doesn't have focus. On refocusing the window, the timer takes a few seconds to start executing tasks again.\n", "url": "https://github.com/libgdx/libgdx/issues/1590", "user": "doobah", "labels": ["bug"], "created": "2014-03-30 11:45:42", "closed": "2014-05-03 18:18:17", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Very-Angry-Robots, Metagun, Pax Britannica rendering issues", "body": "All text and number display have some issues.\nText appears to be missing characters and the size of text and number are weird.\n1. I change the pause message in StatusView into \"0123456789\", to make it clear that some numbers are missing.\n\n![1](https://cloud.githubusercontent.com/assets/6903993/2559872/f5b43c90-b791-11e3-9ddd-a30d9c01b116.JPG)\n1. The display for score is weird.\n\n![2](https://cloud.githubusercontent.com/assets/6903993/2559874/0c8314f0-b792-11e3-88c4-445f7d76db89.JPG)\n\nI have tried searching over the Internet and implement with TextButton and Label instead, the problem remains.\n\nI really appreciate it if anyone knows how to fix it. Thanks a lot!\n", "url": "https://github.com/libgdx/libgdx/issues/1587", "user": "Liu94", "labels": ["bug"], "created": "2014-03-29 22:36:46", "closed": "2014-05-03 18:20:13", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Libgdx 1.0 TODOs", "body": "Include Netbeans, maybe split it up into a playlist? Maybe remove old videos? Update documentation page.\n", "url": "https://github.com/libgdx/libgdx/issues/1583", "user": "badlogic", "labels": ["bug", "enhancement"], "created": "2014-03-29 22:17:01", "closed": "2014-05-02 04:38:27", "commits": {}, "ttf": 33.000277777777775, "commitsDetails": []}, {"title": "Super dev mode servers live forever in IDE", "body": "Observed it in Eclipse (start gwt project in super dev mode, kill gradle process -> servers live on). I think i also saw it in IDEA once.\n", "url": "https://github.com/libgdx/libgdx/issues/1581", "user": "badlogic", "labels": ["bug", "gradle"], "created": "2014-03-29 21:39:41", "closed": "2014-05-10 13:41:21", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "isKeyPressed right shift key always returns true after holding down both shift keys", "body": "What steps will reproduce the problem?\n1. Hold down both left and right shift key. Gdx.input.isKeyPressed returns true for both as expected.\n2. Release keys. isKeyPressed returns true for right shift key still. Furthermore, returns true for right shift until it is pressed again.\n\nUsing libgdx 0.9.9\n", "url": "https://github.com/libgdx/libgdx/issues/1570", "user": "so3arbelnox", "labels": ["bug"], "created": "2014-03-28 07:42:56", "closed": "2014-05-03 18:21:18", "commits": {}, "ttf": 36.000277777777775, "commitsDetails": []}, {"title": "Timer thread dies on android an is not resurrected", "body": "I am working with the Timer utility on an android application. LibGdx version is 0.9.9 (latest stable).\nThe issue is caused (again) by android's weird policy with keeping static objects over app restarts.\nThe following is a description what causes the problem to occur:\n- The app launches for the first time \n- `Timer` is creating its `TimerThread`\n- The thread registers itself as a `LifecycleListener`\n- The app is left (works best for me when I turn off the screen and wait for the device to be pattern-locked)\n- When the app is entered again, `onCreate` is called, leading to a new `initialize()ation`=> `Gdx.app` is new, with a new list of LifecycleListeners\n- `Timer.thread` is not null, for it \"statically survived\" => It is not being created in `Timer.instance.start` (the method itself probably isn't even called, because `instance` survived, too)\n- The timer's LifecycleListener methods are not invoked either, because the listener is not registered any more  \n\n=> The thread remains dead\n\nFor fixing the problem, I suggest setting `Timer.thread` to null in `Timer.TimerThread.pause`. If you are concerned about increased unnecessary `TimerThread` instantiations, one might as well keep a reference to the actual `Thread` which is created in `TimerThread.resume`, allowing to poll the thread's state in `Timer.instance`\n\n**Additional information:**\nStrangely, I was not able to reproduce this issue when being connected to the pc (i.e. a power source). So I suggest using adb over network when debugging \nThe problem occurred with all of our team members, which is 6 persons with at least 3 different device types.  \n", "url": "https://github.com/libgdx/libgdx/issues/1548", "user": "suluke", "labels": ["android", "bug"], "created": "2014-03-25 11:23:58", "closed": "2014-05-10 16:25:01", "commits": {"da8fb9e108abdf593f02258f0b3f52093124c937": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 46.000277777777775, "commitsDetails": [{"commitHash": "da8fb9e108abdf593f02258f0b3f52093124c937", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["7d62b253e29d534799ad32a82a4f56a5bbfa9880"], "nameRev": "da8fb9e108abdf593f02258f0b3f52093124c937 tags/1.1.0~56^2~11", "commitMessage": "fixed issue #1548, timer, statics, android, POS\n", "commitDateTime": "2014-05-10 18:27:42", "authoredDateTime": "2014-05-10 18:27:42", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/utils/Timer.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Timer.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.utils.Timer.checkStatics()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.utils.Timer.instance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.utils.Timer.start()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["da8fb9e108abdf593f02258f0b3f52093124c937"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 1, "lines": 18, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["tests", "gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "com.badlogic.gdx.utils.Timer.instance()", "com.badlogic.gdx.utils.Timer.start()", "com.badlogic.gdx.utils.Timer.checkStatics()"]}, {"title": "ios multitouch problem", "body": "Recently, I updated my game to use robovm and libgdx nightlies. After updating my game lost multitouch feature. I created new project for debug and detect that the second touching is never detected and fired.\nimg.addListener(new ActorGestureListener() {\n            @Override\n            public void touchDown(InputEvent event, float x, float y,\n                    int pointer, int button) {\n                Debug.log(\"touch down: \" + pointer + \",\" + button);\n            }\n        });\nFirst touch is ok but when I touch the 2nd finger(while keeping the 1st finger) this log is never printed. That make the zoom feature in my game doesn't work. It didn't happen before I update to the nightlies.\n", "url": "https://github.com/libgdx/libgdx/issues/1534", "user": "bachtrong43", "labels": ["bug", "scene2d"], "created": "2014-03-24 08:43:49", "closed": "2014-05-03 18:51:03", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "GWT dont display .g3db file", "body": "GWT dont display .g3db file when i releave, but It display in debug mode (...?gwt.codesvr=127.0.0.1:9997)\nI tried to edit com.badlogic.gdxinvaders.simulation.Simulation and have same problem\n\n```\n            assetManager.load(\"data/wpawn.g3db\", Model.class);\n    assetManager.load(\"data/invader.obj\", Model.class);\n    assetManager.load(\"data/block.obj\", Model.class);\n    assetManager.load(\"data/shot.obj\", Model.class);\n    assetManager.finishLoading();       \n    shipModel = assetManager.get(\"data/wpawn.g3db\");\n    invaderModel = assetManager.get(\"data/invader.obj\");\n    blockModel = assetManager.get(\"data/block.obj\");\n    shotModel = assetManager.get(\"data/shot.obj\");\n```\n", "url": "https://github.com/libgdx/libgdx/issues/1505", "user": "vuongthanhtai", "labels": ["bug", "gwt"], "created": "2014-03-20 13:53:34", "closed": "2014-05-09 18:39:36", "commits": {}, "ttf": 50.000277777777775, "commitsDetails": []}, {"title": "Music and Sound not working (Robovm)", "body": "So I've got my project ported to robovm and the only thing not working now is the music. Music works fine in my desktop and android projects but refuses to work on ios. I get not errors at all about loading so I'm assuming that it's loading properly, it just won't play :/. \n\nI have tried .mp3, .m4a, and .wav but still no results. \n\nJust so you know, I have cleared the cache, updated libgdx to the latest nightly build, and cleaned the project. I'm not sure what else to do or if it's a known issue. Is there something special I have to do to make sound work on robovm?\n", "url": "https://github.com/libgdx/libgdx/issues/1485", "user": "CodingMadeEasy", "labels": ["bug", "ios"], "created": "2014-03-18 06:22:16", "closed": "2014-03-19 06:46:05", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "3D Api: textures changes randomly", "body": "I tested xoppa's newest tutorial (frustum culling), it works fine with desktop and bluestacks emu, but when I test it in my phone (galaxy mini), models' textures changed when rotating/moving. It's like it doesnt always bind right texture. My test works like that too (textures changing), even I dont use frustum culling.\nUsing newest libgdx from git.\n\nhttp://i58.tinypic.com/2lt5w5v.png\n(you can see there are some invaders with ship's texture, and when rotating, other object's will change texture too)\n", "url": "https://github.com/libgdx/libgdx/issues/1472", "user": "bosoni", "labels": ["bug"], "created": "2014-03-15 07:54:57", "closed": "2015-03-11 19:07:44", "commits": {}, "ttf": 361.0002777777778, "commitsDetails": []}, {"title": "BETOP controller crashed on Mac os.", "body": "like this issue which i found:https://code.google.com/p/libgdx/issues/detail?id=1199\n\nMy controller is BETOP BTP-2175S, you can see it at:http://www.betop-cn.com/plus/view.php?aid=1858\nand the controller works fine with Libgdx on windows(Windows 7), by the way, it's works fine on my Mac Os with other games, so i guess it's not the controller's driver problem on my system.\n\nMy Libgdx version is: libgdx-nightly-20140213 \n\nI'm on Mac OS 10.9.1 with Java 1.7. The controller is connected via USB.\nthese steps will reproduce the problem:\n1. Add controller extension to project\n2. In create() method i add the line:System.out.println(Controllers.getControllers());\n3. Connect Betop Controller\n4. Run app\nthen eclipse print the error log:\njava(3220,0x10f3e9000) malloc: **\\* error for object 0x7fb12248e6b1: pointer being freed was not allocated\n**\\* set a breakpoint in malloc_error_break to debug\n\nAnd Mac os alert the error dialog:\nProcess:         java [3220]\nPath:            /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/bin/java\nIdentifier:      net.java.openjdk.cmd\nVersion:         1.0 (1.0)\nCode Type:       X86-64 (Native)\nParent Process:  eclipse [2520]\nResponsible:     eclipse [2520]\nUser ID:         501\n\nDate/Time:       2014-03-11 23:02:25.732 +0800\nOS Version:      Mac OS X 10.9.1 (13B42)\nReport Version:  11\nAnonymous UUID:  88A1FEAC-3E5D-6A3B-1C97-01BE05F7A8A1\n\nSleep/Wake UUID: 0EC64E1D-4149-46C3-A3B1-CBBC6F37F133\n\nCrashed Thread:  23  Java: LWJGL Application\n\nException Type:  EXC_CRASH (SIGABRT)\nException Codes: 0x0000000000000000, 0x0000000000000000\n\nApplication Specific Information:\nabort() called\n**\\* error for object 0x7fb12248e6b1: pointer being freed was not allocated\n\nThread 0:: AppKit Thread  Dispatch queue: com.apple.main-thread\n0   com.apple.CoreGraphics          0x00007fff8ee7183f get_current_display_system_state + 162\n1   com.apple.CoreGraphics          0x00007fff8ee7a321 CGSGetDisplayModeDescriptionOfLength + 432\n2   com.apple.HIServices            0x00007fff8d758b7c _scaleFactorForRect + 157\n3   com.apple.HIServices            0x00007fff8d75c6bb dockClientNotificationProc + 148\n4   com.apple.CoreGraphics          0x00007fff8eeed7c2 CGSConnectionNotifier::invoke_callbacks(unsigned int, void_, unsigned long) const + 612\n5   com.apple.CoreGraphics          0x00007fff8eeed4f4 (anonymous namespace)::notify_datagram_handler(unsigned int, CGSDatagramType, void_, unsigned long, void*) + 106\n6   com.apple.CoreGraphics          0x00007fff8eea75c1 CGSDatagramReadStream::dispatch_next_main_queue_datagram() + 287\n7   com.apple.CoreGraphics          0x00007fff8eea67b6 CGSDatagramReadStream::dispatch_next_datagram() + 42\n8   com.apple.CoreGraphics          0x00007fff8eea677c CGSDatagramReadStream::dispatch_datagrams() + 50\n9   com.apple.CoreGraphics          0x00007fff8ef07c5c ___ZN21CGSDatagramReadStream24dispatch_datagrams_asyncEP16dispatch_queue_sPS__block_invoke + 18\n10  libdispatch.dylib               0x00007fff92ee61d7 _dispatch_call_block_and_release + 12\n11  libdispatch.dylib               0x00007fff92ee32ad _dispatch_client_callout + 8\n12  libdispatch.dylib               0x00007fff92eeaf03 _dispatch_main_queue_callback_4CF + 333\n13  com.apple.CoreFoundation        0x00007fff8f98e839 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9\n14  com.apple.CoreFoundation        0x00007fff8f949b14 **CFRunLoopRun + 1636\n15  com.apple.CoreFoundation        0x00007fff8f949275 CFRunLoopRunSpecific + 309\n16  com.apple.HIToolbox             0x00007fff9748ff0d RunCurrentEventLoopInMode + 226\n17  com.apple.HIToolbox             0x00007fff9748fcb7 ReceiveNextEventCommon + 479\n18  com.apple.HIToolbox             0x00007fff9748fabc _BlockUntilNextEventMatchingListInModeWithFilter + 65\n19  com.apple.AppKit                0x00007fff94f9828e _DPSNextEvent + 1434\n20  com.apple.AppKit                0x00007fff94f978db -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] + 122\n21  libosxapp.dylib                 0x000000010ad656f4 -[NSApplicationAWT nextEventMatchingMask:untilDate:inMode:dequeue:] + 124\n22  com.apple.AppKit                0x00007fff94f8b9cc -[NSApplication run] + 553\n23  libosxapp.dylib                 0x000000010ad65557 +[NSApplicationAWT runAWTLoopWithApp:] + 156\n24  liblwawt.dylib                  0x000000010acbdba9 -[AWTStarter starter:] + 873\n25  com.apple.Foundation            0x00007fff8c7510de __NSThreadPerformPerform + 229\n26  com.apple.CoreFoundation        0x00007fff8f9588f1 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION** + 17\n27  com.apple.CoreFoundation        0x00007fff8f94a062 __CFRunLoopDoSources0 + 242\n28  com.apple.CoreFoundation        0x00007fff8f9497ef __CFRunLoopRun + 831\n29  com.apple.CoreFoundation        0x00007fff8f949275 CFRunLoopRunSpecific + 309\n30  java                            0x0000000101bec3b0 CreateExecutionEnvironment + 871\n31  java                            0x0000000101be6b5c JLI_Launch + 1952\n32  java                            0x0000000101bec70d main + 101\n33  java                            0x0000000101be63b4 start + 52\n\nThread 1:\n0   libsystem_kernel.dylib          0x00007fff909f9a3a __semwait_signal + 10\n1   libsystem_pthread.dylib         0x00007fff917287f3 pthread_join + 433\n2   java                            0x0000000101beb9b0 ContinueInNewThread0 + 102\n3   java                            0x0000000101be77c7 ContinueInNewThread + 201\n4   java                            0x0000000101beb785 JVMInit + 315\n5   java                            0x0000000101be7545 JLI_Launch + 4489\n6   java                            0x0000000101bec70d main + 101\n7   java                            0x0000000101bec042 apple_main + 92\n8   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n9   libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n10  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 2:: Dispatch queue: com.apple.libdispatch-manager\n0   libsystem_kernel.dylib          0x00007fff909fa662 kevent64 + 10\n1   libdispatch.dylib               0x00007fff92ee543d _dispatch_mgr_invoke + 239\n2   libdispatch.dylib               0x00007fff92ee5152 _dispatch_mgr_thread + 52\n\nThread 3:\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x00000001029f70be ParkCommon(ParkEvent_, long long) + 42\n4   libjvm.dylib                    0x00000001029f78b0 Monitor::IWait(Thread_, long long) + 160\n5   libjvm.dylib                    0x00000001029f7a8c Monitor::wait(bool, long, bool) + 246\n6   libjvm.dylib                    0x0000000102aef9e6 Threads::destroy_vm() + 80\n7   libjvm.dylib                    0x0000000102909a83 jni_DestroyJavaVM + 223\n8   java                            0x0000000101be7b06 JavaMain + 805\n9   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n10  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n11  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 4:\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x00000001029f70be ParkCommon(ParkEvent_, long long) + 42\n4   libjvm.dylib                    0x00000001029f78b0 Monitor::IWait(Thread_, long long) + 160\n5   libjvm.dylib                    0x00000001029f7b0d Monitor::wait(bool, long, bool) + 375\n6   libjvm.dylib                    0x0000000102868e6e GCTaskManager::get_task(unsigned int) + 56\n7   libjvm.dylib                    0x0000000102869d63 GCTaskThread::run() + 349\n8   libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread*) + 294\n9   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n10  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n11  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 5:\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x00000001029f70be ParkCommon(ParkEvent_, long long) + 42\n4   libjvm.dylib                    0x00000001029f78b0 Monitor::IWait(Thread_, long long) + 160\n5   libjvm.dylib                    0x00000001029f7b0d Monitor::wait(bool, long, bool) + 375\n6   libjvm.dylib                    0x0000000102868e6e GCTaskManager::get_task(unsigned int) + 56\n7   libjvm.dylib                    0x0000000102869d63 GCTaskThread::run() + 349\n8   libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread*) + 294\n9   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n10  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n11  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 6:\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x00000001029f70be ParkCommon(ParkEvent_, long long) + 42\n4   libjvm.dylib                    0x00000001029f78b0 Monitor::IWait(Thread_, long long) + 160\n5   libjvm.dylib                    0x00000001029f7b0d Monitor::wait(bool, long, bool) + 375\n6   libjvm.dylib                    0x0000000102868e6e GCTaskManager::get_task(unsigned int) + 56\n7   libjvm.dylib                    0x0000000102869d63 GCTaskThread::run() + 349\n8   libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread*) + 294\n9   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n10  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n11  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 7:\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x00000001029f70be ParkCommon(ParkEvent_, long long) + 42\n4   libjvm.dylib                    0x00000001029f78b0 Monitor::IWait(Thread_, long long) + 160\n5   libjvm.dylib                    0x00000001029f7b0d Monitor::wait(bool, long, bool) + 375\n6   libjvm.dylib                    0x0000000102868e6e GCTaskManager::get_task(unsigned int) + 56\n7   libjvm.dylib                    0x0000000102869d63 GCTaskThread::run() + 349\n8   libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread*) + 294\n9   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n10  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n11  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 8:\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a17ddb os::PlatformEvent::park(long long) + 385\n3   libjvm.dylib                    0x00000001029f78b0 Monitor::IWait(Thread_, long long) + 160\n4   libjvm.dylib                    0x00000001029f7b0d Monitor::wait(bool, long, bool) + 375\n5   libjvm.dylib                    0x0000000102b2a8b0 VMThread::loop() + 444\n6   libjvm.dylib                    0x0000000102b2a35b VMThread::run() + 121\n7   libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread_) + 294\n8   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n9   libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n10  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 9:: Java: Reference Handler\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x0000000102a0fe57 ObjectMonitor::wait(long long, bool, Thread_) + 757\n4   libjvm.dylib                    0x0000000102abf4a3 ObjectSynchronizer::wait(Handle, long long, Thread_) + 203\n5   libjvm.dylib                    0x000000010292b0fc JVM_MonitorWait + 156\n6   ???                             0x0000000103168698 0 + 4346775192\n7   ???                             0x000000010315c058 0 + 4346724440\n8   ???                             0x000000010315c058 0 + 4346724440\n9   ???                             0x00000001031564e7 0 + 4346701031\n10  libjvm.dylib                    0x00000001028d6d90 JavaCalls::call_helper(JavaValue_, methodHandle_, JavaCallArguments_, Thread_) + 554\n11  libjvm.dylib                    0x00000001028d72a7 JavaCalls::call_virtual(JavaValue_, KlassHandle, Symbol_, Symbol_, JavaCallArguments_, Thread_) + 283\n12  libjvm.dylib                    0x00000001028d73e4 JavaCalls::call_virtual(JavaValue_, Handle, KlassHandle, Symbol_, Symbol_, Thread_) + 74\n13  libjvm.dylib                    0x00000001029263ca thread_entry(JavaThread_, Thread_) + 173\n14  libjvm.dylib                    0x0000000102aefb47 JavaThread::thread_main_inner() + 155\n15  libjvm.dylib                    0x0000000102af124f JavaThread::run() + 419\n16  libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread_) + 294\n17  libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n18  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n19  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 10:: Java: Finalizer\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x0000000102a0fe57 ObjectMonitor::wait(long long, bool, Thread_) + 757\n4   libjvm.dylib                    0x0000000102abf4a3 ObjectSynchronizer::wait(Handle, long long, Thread_) + 203\n5   libjvm.dylib                    0x000000010292b0fc JVM_MonitorWait + 156\n6   ???                             0x0000000103168698 0 + 4346775192\n7   ???                             0x000000010315c058 0 + 4346724440\n8   ???                             0x000000010315c233 0 + 4346724915\n9   ???                             0x000000010315c233 0 + 4346724915\n10  ???                             0x00000001031564e7 0 + 4346701031\n11  libjvm.dylib                    0x00000001028d6d90 JavaCalls::call_helper(JavaValue_, methodHandle_, JavaCallArguments_, Thread_) + 554\n12  libjvm.dylib                    0x00000001028d72a7 JavaCalls::call_virtual(JavaValue_, KlassHandle, Symbol_, Symbol_, JavaCallArguments_, Thread_) + 283\n13  libjvm.dylib                    0x00000001028d73e4 JavaCalls::call_virtual(JavaValue_, Handle, KlassHandle, Symbol_, Symbol_, Thread_) + 74\n14  libjvm.dylib                    0x00000001029263ca thread_entry(JavaThread_, Thread_) + 173\n15  libjvm.dylib                    0x0000000102aefb47 JavaThread::thread_main_inner() + 155\n16  libjvm.dylib                    0x0000000102af124f JavaThread::run() + 419\n17  libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread_) + 294\n18  libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n19  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n20  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 11:\n0   libsystem_kernel.dylib          0x00007fff909f9e6a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff91725f08 _pthread_wqthread + 330\n2   libsystem_pthread.dylib         0x00007fff91728fb9 start_wqthread + 13\n\nThread 12:\n0   libsystem_kernel.dylib          0x00007fff909f9e6a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff91725f08 _pthread_wqthread + 330\n2   libsystem_pthread.dylib         0x00007fff91728fb9 start_wqthread + 13\n\nThread 13:: Java: Signal Dispatcher\n0   libsystem_kernel.dylib          0x00007fff909f5a56 semaphore_wait_trap + 10\n1   libjvm.dylib                    0x0000000102a194a0 check_pending_signals(bool) + 128\n2   libjvm.dylib                    0x0000000102a15da8 signal_thread_entry(JavaThread_, Thread_) + 57\n3   libjvm.dylib                    0x0000000102aefb47 JavaThread::thread_main_inner() + 155\n4   libjvm.dylib                    0x0000000102af124f JavaThread::run() + 419\n5   libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread*) + 294\n6   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n7   libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n8   libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 14:: Java: C2 CompilerThread0\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x00000001029f70be ParkCommon(ParkEvent_, long long) + 42\n4   libjvm.dylib                    0x00000001029f78b0 Monitor::IWait(Thread_, long long) + 160\n5   libjvm.dylib                    0x00000001029f7a74 Monitor::wait(bool, long, bool) + 222\n6   libjvm.dylib                    0x00000001027c10ab CompileQueue::get() + 153\n7   libjvm.dylib                    0x00000001027c1c43 CompileBroker::compiler_thread_loop() + 425\n8   libjvm.dylib                    0x0000000102aefb47 JavaThread::thread_main_inner() + 155\n9   libjvm.dylib                    0x0000000102af124f JavaThread::run() + 419\n10  libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread*) + 294\n11  libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n12  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n13  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 15:: Java: C2 CompilerThread1\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x00000001029f70be ParkCommon(ParkEvent_, long long) + 42\n4   libjvm.dylib                    0x00000001029f78b0 Monitor::IWait(Thread_, long long) + 160\n5   libjvm.dylib                    0x00000001029f7a74 Monitor::wait(bool, long, bool) + 222\n6   libjvm.dylib                    0x00000001027c10ab CompileQueue::get() + 153\n7   libjvm.dylib                    0x00000001027c1c43 CompileBroker::compiler_thread_loop() + 425\n8   libjvm.dylib                    0x0000000102aefb47 JavaThread::thread_main_inner() + 155\n9   libjvm.dylib                    0x0000000102af124f JavaThread::run() + 419\n10  libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread*) + 294\n11  libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n12  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n13  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 16:: Java: Service Thread\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x00000001029f70be ParkCommon(ParkEvent_, long long) + 42\n4   libjvm.dylib                    0x00000001029f78b0 Monitor::IWait(Thread_, long long) + 160\n5   libjvm.dylib                    0x00000001029f7b0d Monitor::wait(bool, long, bool) + 375\n6   libjvm.dylib                    0x0000000102a6f1d5 ServiceThread::service_thread_entry(JavaThread_, Thread_) + 109\n7   libjvm.dylib                    0x0000000102aefb47 JavaThread::thread_main_inner() + 155\n8   libjvm.dylib                    0x0000000102af124f JavaThread::run() + 419\n9   libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread*) + 294\n10  libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n11  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n12  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 17:\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a17ddb os::PlatformEvent::park(long long) + 385\n3   libjvm.dylib                    0x00000001029f78b0 Monitor::IWait(Thread_, long long) + 160\n4   libjvm.dylib                    0x00000001029f7b0d Monitor::wait(bool, long, bool) + 375\n5   libjvm.dylib                    0x0000000102af001a WatcherThread::sleep() const + 126\n6   libjvm.dylib                    0x0000000102af0edd WatcherThread::run() + 243\n7   libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread_) + 294\n8   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n9   libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n10  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 18:\n0   libsystem_kernel.dylib          0x00007fff909f9e6a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff91725f08 _pthread_wqthread + 330\n2   libsystem_pthread.dylib         0x00007fff91728fb9 start_wqthread + 13\n\nThread 19:: Java: AWT-Shutdown\n0   libsystem_kernel.dylib          0x00007fff909f9716 __psynch_cvwait + 10\n1   libsystem_pthread.dylib         0x00007fff91726c3b _pthread_cond_wait + 727\n2   libjvm.dylib                    0x0000000102a16e29 os::PlatformEvent::park() + 173\n3   libjvm.dylib                    0x0000000102a0fe57 ObjectMonitor::wait(long long, bool, Thread_) + 757\n4   libjvm.dylib                    0x0000000102abf4a3 ObjectSynchronizer::wait(Handle, long long, Thread_) + 203\n5   libjvm.dylib                    0x000000010292b0fc JVM_MonitorWait + 156\n6   ???                             0x0000000103168698 0 + 4346775192\n7   ???                             0x000000010315c058 0 + 4346724440\n8   ???                             0x000000010315c058 0 + 4346724440\n9   ???                             0x000000010315c706 0 + 4346726150\n10  ???                             0x00000001031564e7 0 + 4346701031\n11  libjvm.dylib                    0x00000001028d6d90 JavaCalls::call_helper(JavaValue_, methodHandle_, JavaCallArguments_, Thread_) + 554\n12  libjvm.dylib                    0x00000001028d72a7 JavaCalls::call_virtual(JavaValue_, KlassHandle, Symbol_, Symbol_, JavaCallArguments_, Thread_) + 283\n13  libjvm.dylib                    0x00000001028d73e4 JavaCalls::call_virtual(JavaValue_, Handle, KlassHandle, Symbol_, Symbol_, Thread_) + 74\n14  libjvm.dylib                    0x00000001029263ca thread_entry(JavaThread_, Thread_) + 173\n15  libjvm.dylib                    0x0000000102aefb47 JavaThread::thread_main_inner() + 155\n16  libjvm.dylib                    0x0000000102af124f JavaThread::run() + 419\n17  libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread_) + 294\n18  libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n19  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n20  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 20:\n0   libsystem_kernel.dylib          0x00007fff909f9e6a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff91725f08 _pthread_wqthread + 330\n2   libsystem_pthread.dylib         0x00007fff91728fb9 start_wqthread + 13\n\nThread 21:\n0   libsystem_kernel.dylib          0x00007fff909f5a1a mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff909f4d18 mach_msg + 64\n2   com.apple.CoreFoundation        0x00007fff8f94a315 __CFRunLoopServiceMachPort + 181\n3   com.apple.CoreFoundation        0x00007fff8f949939 __CFRunLoopRun + 1161\n4   com.apple.CoreFoundation        0x00007fff8f949275 CFRunLoopRunSpecific + 309\n5   com.apple.AppKit                0x00007fff951381ce _NSEventThread + 144\n6   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n7   libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n8   libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 22:: com.apple.audio.IOThread.client\n0   libsystem_kernel.dylib          0x00007fff909f5a1a mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff909f4d18 mach_msg + 64\n2   com.apple.audio.CoreAudio       0x00007fff8bd75918 HALB_MachPort::SendMessageWithReply(unsigned int, unsigned int, unsigned int, unsigned int, mach_msg_header_t_, bool, unsigned int) + 98\n3   com.apple.audio.CoreAudio       0x00007fff8bd758a6 HALB_MachPort::SendSimpleMessageWithSimpleReply(unsigned int, unsigned int, int, int&, bool, unsigned int) + 42\n4   com.apple.audio.CoreAudio       0x00007fff8bd7402e HALC_ProxyIOContext::IOWorkLoop() + 950\n5   com.apple.audio.CoreAudio       0x00007fff8bd73bcd HALC_ProxyIOContext::IOThreadEntry(void_) + 97\n6   com.apple.audio.CoreAudio       0x00007fff8bd73a8d HALB_IOThread::Entry(void*) + 75\n7   libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n8   libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n9   libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 23 Crashed:: Java: LWJGL Application\n0   libsystem_kernel.dylib          0x00007fff909f9866 __pthread_kill + 10\n1   libsystem_pthread.dylib         0x00007fff9172535c pthread_kill + 92\n2   libsystem_c.dylib               0x00007fff92a16bba abort + 125\n3   libsystem_malloc.dylib          0x00007fff968ed093 free + 411\n4   libgdx-controllers-desktop.dylib    0x000000010ff2a7d7 OIS::MacHIDManager::enumerateDeviceProperties(__CFDictionary_) + 167\n5   libgdx-controllers-desktop.dylib    0x000000010ff2a3d7 OIS::MacHIDManager::iterateAndOpenDevices(unsigned int) + 135\n6   libgdx-controllers-desktop.dylib    0x000000010ff233ad OIS::InputManager::createInputSystem(std::multimap<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > >&) + 45\n7   libgdx-controllers-desktop.dylib    0x000000010ff21cf6 Java_com_badlogic_gdx_controllers_desktop_ois_Ois_createInputManager + 70\n8   ???                             0x0000000103168698 0 + 4346775192\n9   ???                             0x000000010315c175 0 + 4346724725\n10  ???                             0x000000010315c058 0 + 4346724440\n11  ???                             0x000000010315c058 0 + 4346724440\n12  ???                             0x00000001031564e7 0 + 4346701031\n13  libjvm.dylib                    0x00000001028d6d90 JavaCalls::call_helper(JavaValue_, methodHandle_, JavaCallArguments_, Thread_) + 554\n14  libjvm.dylib                    0x00000001028d6b60 JavaCalls::call(JavaValue_, methodHandle, JavaCallArguments_, Thread_) + 40\n15  libjvm.dylib                    0x0000000102a60580 Reflection::invoke(instanceKlassHandle, methodHandle, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread_) + 2556\n16  libjvm.dylib                    0x0000000102a60851 Reflection::invoke_constructor(oopDesc_, objArrayHandle, Thread_) + 417\n17  libjvm.dylib                    0x0000000102923500 JVM_NewInstanceFromConstructor + 124\n18  ???                             0x0000000103168698 0 + 4346775192\n19  ???                             0x000000010315c233 0 + 4346724915\n20  ???                             0x000000010315c233 0 + 4346724915\n21  ???                             0x000000010315c8e1 0 + 4346726625\n22  ???                             0x000000010315c233 0 + 4346724915\n23  ???                             0x000000010315c233 0 + 4346724915\n24  ???                             0x000000010315c233 0 + 4346724915\n25  ???                             0x000000010315c058 0 + 4346724440\n26  ???                             0x000000010315c233 0 + 4346724915\n27  ???                             0x000000010315c706 0 + 4346726150\n28  ???                             0x000000010315c058 0 + 4346724440\n29  ???                             0x00000001031564e7 0 + 4346701031\n30  libjvm.dylib                    0x00000001028d6d90 JavaCalls::call_helper(JavaValue_, methodHandle_, JavaCallArguments_, Thread_) + 554\n31  libjvm.dylib                    0x00000001028d72a7 JavaCalls::call_virtual(JavaValue_, KlassHandle, Symbol_, Symbol_, JavaCallArguments_, Thread_) + 283\n32  libjvm.dylib                    0x00000001028d73e4 JavaCalls::call_virtual(JavaValue_, Handle, KlassHandle, Symbol_, Symbol_, Thread_) + 74\n33  libjvm.dylib                    0x00000001029263ca thread_entry(JavaThread_, Thread_) + 173\n34  libjvm.dylib                    0x0000000102aefb47 JavaThread::thread_main_inner() + 155\n35  libjvm.dylib                    0x0000000102af124f JavaThread::run() + 419\n36  libjvm.dylib                    0x0000000102a1b1c6 java_start(Thread*) + 294\n37  libsystem_pthread.dylib         0x00007fff91724899 _pthread_body + 138\n38  libsystem_pthread.dylib         0x00007fff9172472a _pthread_start + 137\n39  libsystem_pthread.dylib         0x00007fff91728fc9 thread_start + 13\n\nThread 23 crashed with X86 Thread State (64-bit):\n  rax: 0x0000000000000000  rbx: 0x000000010f3e9000  rcx: 0x000000010f3e7be8  rdx: 0x0000000000000000\n  rdi: 0x0000000000018903  rsi: 0x0000000000000006  rbp: 0x000000010f3e7c10  rsp: 0x000000010f3e7be8\n   r8: 0x00000000fffffff8   r9: 0x0000000000000000  r10: 0x0000000008000000  r11: 0x0000000000000206\n  r12: 0x0000000101c2e000  r13: 0x00007fb1230a6000  r14: 0x0000000000000006  r15: 0x0000000000000000\n  rip: 0x00007fff909f9866  rfl: 0x0000000000000206  cr2: 0x000000010f83a000\n\nLogical CPU:     0\nError Code:      0x02000148\nTrap Number:     133\n\nBinary Images:\n       0x101be5000 -        0x101bf5fef +java (1.0 - 1.0) <5B6522F3-7E34-3652-86CB-6A03D73F1C7A> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/bin/java\n       0x101c30000 -        0x101c3ffff  libSimplifiedChineseConverter.dylib (61) <F5827491-A4E3-3471-A540-8D1FE241FD99> /System/Library/CoreServices/Encodings/libSimplifiedChineseConverter.dylib\n       0x101d0c000 -        0x101d14fff +libverify.dylib (1) <C42EBBF2-FDE6-342B-9B75-7D91194E47C1> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/libverify.dylib\n       0x101d19000 -        0x101d3afe7 +libjava.dylib (1) <64871BED-E504-307F-BCEE-EA4CCEA588EA> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/libjava.dylib\n       0x101d53000 -        0x101d58fff +libzip.dylib (1) <50D7966F-6590-3F9A-A42B-7E7EE016493E> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/libzip.dylib\n       0x101de4000 -        0x101dedff7  com.apple.java.JavaRuntimeSupport (14.9.0 - 14.9.0) <AB4F1817-A2DE-36F2-8052-3CD334906F79> /System/Library/Frameworks/JavaVM.framework/Frameworks/JavaRuntimeSupport.framework/JavaRuntimeSupport\n       0x102600000 -        0x102d45fef +libjvm.dylib (1) <7CBD0F39-332A-3790-B0FF-F5F955C325A6> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/server/libjvm.dylib\n       0x10a3d1000 -        0x10a3dbfff  JavaNativeFoundation (1) <10006281-5A71-3A5E-BEC6-22F7BB31CF81> /System/Library/Frameworks/JavaVM.framework/Versions/A/Frameworks/JavaNativeFoundation.framework/Versions/A/JavaNativeFoundation\n       0x10a3e6000 -        0x10a3ebfff  com.apple.JavaVM (14.9.0 - 14.9.0) <67BD63C5-D82F-3A31-BC43-C8810356D524> /System/Library/Frameworks/JavaVM.framework/Versions/A/JavaVM\n       0x10a3f3000 -        0x10a3f8fff  JavaLaunching (1) <528DEA76-B869-36B5-87A6-D9B722968E16> /System/Library/PrivateFrameworks/JavaLaunching.framework/Versions/A/JavaLaunching\n       0x10aaa1000 -        0x10aaf3ff7 +libgdx.dylib (0) <3C09D60D-295E-3019-8657-81AF839BC70F> /var/folders/_/libgdx.dylib\n       0x10ab35000 -        0x10aba0fff +libawt.dylib (1) <5F027771-D669-392F-8DD7-CBA3EA5DD87D> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/libawt.dylib\n       0x10abe4000 -        0x10aca9fff +libmlib_image.dylib (1) <95F6D0B2-3A92-305F-A6AE-822BC990901B> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/libmlib_image.dylib\n       0x10acb0000 -        0x10ad20fff +liblwawt.dylib (1) <9875DBAB-B5B6-322C-A085-4651CEDFCBF4> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/lwawt/liblwawt.dylib\n       0x10ad64000 -        0x10ad69fff +libosxapp.dylib (1) <8CE761D7-7DAA-36BA-8424-BF74590F8C1D> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/libosxapp.dylib\n       0x10d51b000 -        0x10d51bfff +libjawt.dylib (1) <EA979DFD-DDFF-37EC-9B3C-20213BED9456> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/libjawt.dylib\n       0x10ee78000 -        0x10eeb8fff +libfontmanager.dylib (1) <FDA0EF10-EC5D-35C2-95AD-9CF4DD64725B> /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/libfontmanager.dylib\n       0x10eedc000 -        0x10ef17fff +liblwjgl.jnilib (0) <F12B6511-536C-70C2-3056-D889FAA512AC> /var/folders/_/liblwjgl.jnilib\n       0x10ef5b000 -        0x10efa1fff +openal.dylib (0) <54903F53-A683-3AEA-8B64-C7939B878F21> /var/folders/_/openal.dylib\n       0x10efca000 -        0x10f19bfff  com.apple.audio.units.Components (1.9 - 1.9) <80991B19-4B07-3DBF-A4B3-597DA1AA65B2> /System/Library/Components/CoreAudio.component/Contents/MacOS/CoreAudio\n       0x10f245000 -        0x10f249ffd  com.apple.audio.AppleHDAHALPlugIn (2.5.3 - 2.5.3fc1) <844CFCFD-F813-36F1-A5BF-FB9D7BD7040D> /System/Library/Extensions/AppleHDA.kext/Contents/PlugIns/AppleHDAHALPlugIn.bundle/Contents/MacOS/AppleHDAHALPlugIn\n       0x10f3eb000 -        0x10f3f6fff  libGPUSupport.dylib (9.0.83) <AF15BF74-F9B3-35B9-8728-3B3A2EB6E432> /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupport.dylib\n       0x10f83f000 -        0x10f840ff9 +cl_kernels (???) <A31EFB0F-4764-4504-B84F-9C49B69784B9> cl_kernels\n       0x10f842000 -        0x10f928fef  unorm8_bgra.dylib (2.3.58) <9FF943D1-4EF7-36CA-852D-B61C2E554713> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_bgra.dylib\n       0x10f96d000 -        0x10f96efe4 +cl_kernels (???) <417BE381-4B36-4F6E-9FE8-A9E89DE96A79> cl_kernels\n       0x10ff20000 -        0x10ff31ff7 +libgdx-controllers-desktop.dylib (0) <A81D4B49-D7AF-3F2E-8478-AD2E1AFF9B3D> /var/folders/_/libgdx-controllers-desktop.dylib\n    0x123400000000 -     0x123400366ff7  com.apple.driver.AppleIntelHD3000GraphicsGLDriver (8.18.28 - 8.1.8) <7B34941E-F1C5-31B3-A68F-8B8EAD35A34D> /System/Library/Extensions/AppleIntelHD3000GraphicsGLDriver.bundle/Contents/MacOS/AppleIntelHD3000GraphicsGLDriver\n    0x7fff64830000 -     0x7fff64863817  dyld (239.3) <D1DFCF3F-0B0C-332A-BCC0-87A851B570FF> /usr/lib/dyld\n    0x7fff8bd4d000 -     0x7fff8bd9eff3  com.apple.audio.CoreAudio (4.2.0 - 4.2.0) <BF4C2FE3-8BC8-30D1-8347-2A7221268794> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\n    0x7fff8c6ec000 -     0x7fff8c6ecfff  com.apple.Accelerate (1.9 - Accelerate 1.9) <509BB27A-AE62-366D-86D8-0B06D217CF56> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\n    0x7fff8c6ed000 -     0x7fff8c9ecfff  com.apple.Foundation (6.9 - 1056) <D608EDFD-9634-3573-9B7E-081C7D085F7A> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\n    0x7fff8ca2f000 -     0x7fff8ca41ff7  com.apple.MultitouchSupport.framework (245.13 - 245.13) <D5E7416D-45AB-3690-86C6-CC4B5FCEA2D2> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\n    0x7fff8caae000 -     0x7fff8caf0ff7  libauto.dylib (185.5) <F45C36E8-B606-3886-B5B1-B6745E757CA8> /usr/lib/libauto.dylib\n    0x7fff8caf1000 -     0x7fff8caf1ffd  com.apple.audio.units.AudioUnit (1.9 - 1.9) <6E89F3CB-CC41-3728-9F9A-FDFC151E8261> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\n    0x7fff8cb38000 -     0x7fff8cb3bff7  libdyld.dylib (239.3) <62F4D752-4089-31A8-8B73-B95A68893B3C> /usr/lib/system/libdyld.dylib\n    0x7fff8cb3c000 -     0x7fff8cb55ff7  com.apple.Kerberos (3.0 - 1) <F108AFEB-198A-3BAF-BCA5-9DFCE55EFF92> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\n    0x7fff8cb56000 -     0x7fff8ccc6ff6  com.apple.CFNetwork (673.0.3 - 673.0.3) <42CFC3DB-35C8-3652-AF37-4BCC73D8BDEF> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\n    0x7fff8d627000 -     0x7fff8d62fffc  libGFXShared.dylib (9.0.83) <11A621C3-37A0-39CE-A69B-8739021BD79D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\n    0x7fff8d630000 -     0x7fff8d655ff7  com.apple.ChunkingLibrary (2.0 - 155.1) <B845DC7A-D1EA-31E2-967C-D1FE0C628036> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary\n    0x7fff8d656000 -     0x7fff8d671ff7  libPng.dylib (1038) <EF781AF8-C2E6-3179-B8A1-A584783070F1> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\n    0x7fff8d6a4000 -     0x7fff8d6a7fff  com.apple.help (1.3.3 - 46) <AE763646-D07A-3F9A-ACD4-F5CBD734EE36> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\n    0x7fff8d752000 -     0x7fff8d797ff6  com.apple.HIServices (1.22 - 466) <21807AF8-3BC7-32BB-AB96-7C35CB59D7F6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\n    0x7fff8d798000 -     0x7fff8d7bafff  com.apple.framework.familycontrols (4.1 - 410) <4FDBCD10-CAA2-3A9C-99F2-06DCB8E81DEE> /System/Library/PrivateFrameworks/FamilyControls.framework/Versions/A/FamilyControls\n    0x7fff8d7cb000 -     0x7fff8d818ff2  com.apple.print.framework.PrintCore (9.0 - 428) <8D8253E3-302F-3DB2-9C5C-572CB974E8B3> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\n    0x7fff8d975000 -     0x7fff8dac8ff7  com.apple.audio.toolbox.AudioToolbox (1.9 - 1.9) <A0B7B007-9BD8-30E2-B644-47856DA29FEE> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\n    0x7fff8dba6000 -     0x7fff8dbfffff  libTIFF.dylib (1038) <5CBFE0C2-9DD8-340B-BA63-A94CE2E476F2> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\n    0x7fff8e3bb000 -     0x7fff8e3c4fff  com.apple.CommonAuth (4.0 - 2.0) <1D263127-5F27-3128-996D-7397660D0C6E> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\n    0x7fff8e3c5000 -     0x7fff8e3ccfff  libcompiler_rt.dylib (35) <4CD916B2-1B17-362A-B403-EF24A1DAC141> /usr/lib/system/libcompiler_rt.dylib\n    0x7fff8e442000 -     0x7fff8e446fff  com.apple.CommonPanels (1.2.6 - 96) <6B434AFD-50F8-37C7-9A56-162C17E375B3> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\n    0x7fff8e4ef000 -     0x7fff8e5c0ff1  com.apple.DiskImagesFramework (10.9 - 371.1) <D456ED08-4C1D-341F-BAB8-85E34A7275C5> /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages\n    0x7fff8e5cd000 -     0x7fff8e5dffff  com.apple.ImageCapture (9.0 - 9.0) <BE0B65DA-3031-359B-8BBA-B9803D4ADBF4> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\n    0x7fff8e7d4000 -     0x7fff8ebb5ffe  libLAPACK.dylib (1094.5) <7E7A9B8D-1638-3914-BAE0-663B69865986> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\n    0x7fff8ebf5000 -     0x7fff8ebf5fff  com.apple.Cocoa (6.8 - 20) <E90E99D7-A425-3301-A025-D9E0CD11918E> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa\n    0x7fff8ec5d000 -     0x7fff8ec86fff  GLRendererFloat (9.0.83) <1F1160A8-5047-3CEE-AC1E-D29520D0B367> /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLRendererFloat.bundle/GLRendererFloat\n    0x7fff8ed10000 -     0x7fff8ed12fff  com.apple.EFILogin (2.0 - 2) <C360E8AF-E9BB-3BBA-9DF0-57A92CEF00D4> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin\n    0x7fff8ee36000 -     0x7fff8ee6eff7  com.apple.RemoteViewServices (2.0 - 94) <3F34D630-3DDB-3411-BC28-A56A9B55EBDA> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices\n    0x7fff8ee6f000 -     0x7fff8f78b05f  com.apple.CoreGraphics (1.600.0 - 599.7) <7D0FD5A7-A061-39BA-8E00-723825D2C4DD> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\n    0x7fff8f78c000 -     0x7fff8f793ff3  libcopyfile.dylib (103) <5A881779-D0D6-3029-B371-E3021C2DDA5E> /usr/lib/system/libcopyfile.dylib\n    0x7fff8f7c6000 -     0x7fff8f891fff  libvDSP.dylib (423.32) <3BF732BE-DDE0-38EB-8C54-E4E3C64F77A7> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\n    0x7fff8f8d9000 -     0x7fff8fabeff7  com.apple.CoreFoundation (6.9 - 855.11) <E22C6A1F-8996-349C-905E-96C3BBE07C2F> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\n    0x7fff8fabf000 -     0x7fff8fafdff7  libGLImage.dylib (9.0.83) <C08048A7-03CC-3E40-BCDC-7791D87AC8E4> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\n    0x7fff8fafe000 -     0x7fff8fb0cfff  com.apple.opengl (9.0.83 - 9.0.83) <AF467644-7B1D-327A-AC47-CECFCAF61990> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\n    0x7fff8fb0d000 -     0x7fff8fb18fff  libkxld.dylib (2422.1.72) <C88EF3E6-B31F-3E12-BE9B-562D912BA733> /usr/lib/system/libkxld.dylib\n    0x7fff8fb19000 -     0x7fff8fb49fff  com.apple.IconServices (25 - 25.17) <4751127E-FBD5-3ED5-8510-08D4E4166EFE> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices\n    0x7fff8fb4a000 -     0x7fff8fb59ff8  com.apple.LangAnalysis (1.7.0 - 1.7.0) <8FE131B6-1180-3892-98F5-C9C9B79072D4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\n    0x7fff8feb6000 -     0x7fff8ff9afff  com.apple.coreui (2.1 - 231) <432DB40C-6B7E-39C8-9FB5-B95917930056> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\n    0x7fff8ffa4000 -     0x7fff8ffb1ff7  libxar.1.dylib (202) <5572AA71-E98D-3FE1-9402-BB4A84E0E71E> /usr/lib/libxar.1.dylib\n    0x7fff90107000 -     0x7fff9017affb  com.apple.securityfoundation (6.0 - 55122) <119D1C53-B292-3378-AEE1-A3B1FB02F43F> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\n    0x7fff9017b000 -     0x7fff90188fff  com.apple.Sharing (132.2 - 132.2) <F983394A-226D-3244-B511-FA51FDB6ADDA> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing\n    0x7fff901b1000 -     0x7fff90261ff7  libvMisc.dylib (423.32) <049C0735-1808-39B9-943F-76CB8021744F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\n    0x7fff90262000 -     0x7fff9054cfff  com.apple.CoreServices.CarbonCore (1077.14 - 1077.14) <B00BEB34-A9F5-381F-99FD-11E405768A9A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\n    0x7fff90596000 -     0x7fff90596fff  com.apple.ApplicationServices (48 - 48) <3E3F01A8-314D-378F-835E-9CC4F8820031> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\n    0x7fff905f4000 -     0x7fff9061dff7  libc++abi.dylib (48) <8C16158F-CBF8-3BD7-BEF4-022704B2A326> /usr/lib/libc++abi.dylib\n    0x7fff9061e000 -     0x7fff906a9fff  libCoreStorage.dylib (380) <AE14C2F3-0EF1-3DCD-BF2B-A24D97D3B372> /usr/lib/libCoreStorage.dylib\n    0x7fff909e1000 -     0x7fff909e3fff  libRadiance.dylib (1038) <55F99274-5074-3C73-BAC5-AF234E71CF38> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\n    0x7fff909e4000 -     0x7fff90a00ff7  libsystem_kernel.dylib (2422.1.72) <D14913DB-47F1-3591-8DAF-D4B4EF5F8818> /usr/lib/system/libsystem_kernel.dylib\n    0x7fff90a01000 -     0x7fff90a32fff  com.apple.MediaKit (15 - 709) <23E33409-5C39-3F93-9E73-2B0E9EE8883E> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit\n    0x7fff90a33000 -     0x7fff90aaafff  com.apple.CoreServices.OSServices (600.4 - 600.4) <36B2B009-C35E-3F21-824E-E0D00E7808C7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\n    0x7fff90afd000 -     0x7fff90b05ff7  com.apple.speech.recognition.framework (4.2.4 - 4.2.4) <98BBB3E4-6239-3EF1-90B2-84EA0D3B8D61> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\n    0x7fff90b06000 -     0x7fff90bf4fff  libJP2.dylib (1038) <6C8179F5-8063-3ED6-A7C2-D5603DECDF28> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\n    0x7fff90bf7000 -     0x7fff90c1fffb  libRIP.A.dylib (599.7) <6F528EE3-99F8-3871-BD60-1306495C27D5> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib\n    0x7fff90c20000 -     0x7fff90caffff  com.apple.Metadata (10.7.0 - 800.12.2) <A9F5D471-8732-3F95-A4A2-33864B92A181> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\n    0x7fff90cb0000 -     0x7fff90cb1fff  liblangid.dylib (117) <9546E641-F730-3AB0-B3CD-E0E2FDD173D9> /usr/lib/liblangid.dylib\n    0x7fff90d4b000 -     0x7fff90db8fff  com.apple.SearchKit (1.4.0 - 1.4.0) <B9B8D510-A27E-36B0-93E9-17146D9E9045> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\n    0x7fff90db9000 -     0x7fff90dbcfff  com.apple.TCC (1.0 - 1) <32A075D9-47FD-3E71-95BC-BFB0D583F41C> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\n    0x7fff90dc1000 -     0x7fff90dc3fff  libCVMSPluginSupport.dylib (9.0.83) <E2AED858-6EEB-36C6-8C06-C3CF649A3CD5> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\n    0x7fff90dc4000 -     0x7fff90e16fff  libc++.1.dylib (120) <4F68DFC5-2077-39A8-A449-CAC5FDEE7BDE> /usr/lib/libc++.1.dylib\n    0x7fff90e47000 -     0x7fff90e4ffff  libsystem_dnssd.dylib (522.1.11) <270DCF6C-502D-389A-AA9F-DE4624A36FF7> /usr/lib/system/libsystem_dnssd.dylib\n    0x7fff91085000 -     0x7fff91086ff7  libsystem_blocks.dylib (63) <FB856CD1-2AEA-3907-8E9B-1E54B6827F82> /usr/lib/system/libsystem_blocks.dylib\n    0x7fff91087000 -     0x7fff910d5ff9  libstdc++.6.dylib (60) <0241E6A4-1368-33BE-950B-D0A175C41F54> /usr/lib/libstdc++.6.dylib\n    0x7fff910e3000 -     0x7fff910f3fff  libbsm.0.dylib (33) <2CAC00A2-1352-302A-88FA-C567D4D69179> /usr/lib/libbsm.0.dylib\n    0x7fff91123000 -     0x7fff91128fff  com.apple.DiskArbitration (2.6 - 2.6) <F8A47F61-83D1-3F92-B7A8-A169E0D187C0> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\n    0x7fff91129000 -     0x7fff91141ff7  com.apple.openscripting (1.4 - 157) <B3B037D7-1019-31E6-9D17-08E699AF3701> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\n    0x7fff911f6000 -     0x7fff911fffff  com.apple.speech.synthesis.framework (4.6.2 - 4.6.2) <0AAE45F0-FC6E-36B6-A6A7-73E6950A74AC> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\n    0x7fff91200000 -     0x7fff91330ff7  com.apple.desktopservices (1.8 - 1.8) <09DC9BB8-432F-3C7A-BB08-956A2DDFC2DE> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\n    0x7fff9142c000 -     0x7fff916faff4  com.apple.CoreImage (9.0.54) <74BB8685-69A9-3A45-8DED-EA26BD39D710> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage\n    0x7fff916fb000 -     0x7fff91722ff7  libsystem_network.dylib (241.3) <8B1E1F1D-A5CC-3BAE-8B1E-ABC84337A364> /usr/lib/system/libsystem_network.dylib\n    0x7fff91723000 -     0x7fff9172aff7  libsystem_pthread.dylib (53.1.4) <AB498556-B555-310E-9041-F67EC9E00E2C> /usr/lib/system/libsystem_pthread.dylib\n    0x7fff9172b000 -     0x7fff91772ff7  libcups.2.dylib (372) <348EED62-6C20-35D6-8EFB-E80943965100> /usr/lib/libcups.2.dylib\n    0x7fff91773000 -     0x7fff9190fff7  com.apple.QuartzCore (1.8 - 332.0) <994D1E0A-64B6-398C-B9A2-C362F02DE943> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\n    0x7fff9195a000 -     0x7fff9195eff7  libheimdal-asn1.dylib (323.12) <063A01C2-E547-39D9-BB42-4CC8E64ADE70> /usr/lib/libheimdal-asn1.dylib\n    0x7fff9195f000 -     0x7fff9196afff  libGL.dylib (9.0.83) <984A960A-C159-3AE5-8B40-E2B451F6C712> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\n    0x7fff9196d000 -     0x7fff91972fff  libmacho.dylib (845) <1D2910DF-C036-3A82-A3FD-44FF73B5FF9B> /usr/lib/system/libmacho.dylib\n    0x7fff9238a000 -     0x7fff925d2fff  com.apple.CoreData (107 - 481) <E5AFBA07-F73E-3B3F-9099-F51224EE8EAD> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\n    0x7fff925d3000 -     0x7fff925dfff3  com.apple.AppleFSCompression (56 - 1.0) <5652B0D0-EB08-381F-B23A-6DCF96991FB5> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\n    0x7fff925ea000 -     0x7fff926d9fff  libFontParser.dylib (111.1) <835A8253-6AB9-3AAB-9CBF-171440DEC486> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\n    0x7fff926da000 -     0x7fff926e4ff7  libcsfde.dylib (380) <3A54B430-EC05-3DE9-86C3-00C1BEAC7F9B> /usr/lib/libcsfde.dylib\n    0x7fff927b6000 -     0x7fff927b8ff7  libquarantine.dylib (71) <7A1A2BCB-C03D-3A25-BFA4-3E569B2D2C38> /usr/lib/system/libquarantine.dylib\n    0x7fff9280c000 -     0x7fff92810fff  libsystem_stats.dylib (93.1.26) <B9E26A9E-FBBC-3938-B8B7-6CF7CA8C99AD> /usr/lib/system/libsystem_stats.dylib\n    0x7fff92811000 -     0x7fff9285ffff  com.apple.opencl (2.3.57 - 2.3.57) <FC03A80D-543A-3448-83FF-D399C3A240D9> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\n    0x7fff92860000 -     0x7fff928c4ff9  com.apple.Heimdal (4.0 - 2.0) <E7D20A4D-4674-37E1-A949-635FFF7C439A> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\n    0x7fff928cf000 -     0x7fff928d1ff7  com.apple.securityhi (9.0 - 55005) <405E2BC6-2B6F-3B6B-B48E-2FD39214F052> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\n    0x7fff92931000 -     0x7fff9295afff  com.apple.DictionaryServices (1.2 - 208) <A539A058-BA57-35EE-AA08-D0B0E835127D> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\n    0x7fff9295b000 -     0x7fff9299cfff  com.apple.PerformanceAnalysis (1.47 - 47) <784ED7B8-FAE4-36CE-8C76-B7D300316C9F> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\n    0x7fff9299d000 -     0x7fff929b8ff7  libCRFSuite.dylib (34) <FFAE75FA-C54E-398B-AA97-18164CD9789D> /usr/lib/libCRFSuite.dylib\n    0x7fff929ba000 -     0x7fff92a43ff7  libsystem_c.dylib (997.1.1) <61833FAA-7281-3FF9-937F-686B6F20427C> /usr/lib/system/libsystem_c.dylib\n    0x7fff92a44000 -     0x7fff92bfcff3  libicucore.A.dylib (511.27) <003B6C21-CBD1-3486-9A1D-030ADF5FA061> /usr/lib/libicucore.A.dylib\n    0x7fff92ebd000 -     0x7fff92ecaff0  libbz2.1.0.dylib (29) <0B98AC35-B138-349C-8063-2B987A75D24C> /usr/lib/libbz2.1.0.dylib\n    0x7fff92ed3000 -     0x7fff92ed8ff7  libunwind.dylib (35.3) <78DCC358-2FC1-302E-B395-0155B47CB547> /usr/lib/system/libunwind.dylib\n    0x7fff92ed9000 -     0x7fff92ee1ff3  libCGCMS.A.dylib (599.7) <92AA4E85-7633-36E2-BAD0-7B1A2E48E75C> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGCMS.A.dylib\n    0x7fff92ee2000 -     0x7fff92efcfff  libdispatch.dylib (339.1.9) <46878A5B-4248-3057-962C-6D4A235EEF31> /usr/lib/system/libdispatch.dylib\n    0x7fff92f10000 -     0x7fff92f11fff  libunc.dylib (28) <62682455-1862-36FE-8A04-7A6B91256438> /usr/lib/system/libunc.dylib\n    0x7fff92f74000 -     0x7fff92f7fff7  com.apple.DirectoryService.Framework (10.9 - 173.1.1) <F8566D1F-450F-3571-911F-75C68E45919F> /System/Library/Frameworks/DirectoryService.framework/Versions/A/DirectoryService\n    0x7fff92f80000 -     0x7fff92f83ffa  libCGXType.A.dylib (599.7) <2FC9C2BC-B5C5-3C27-93F9-51C6C4512E9D> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib\n    0x7fff92f94000 -     0x7fff92f98fff  libpam.2.dylib (20) <B93CE8F5-DAA8-30A1-B1F6-F890509513CB> /usr/lib/libpam.2.dylib\n    0x7fff92f99000 -     0x7fff92fc1ffb  libxslt.1.dylib (13) <C9794936-633C-3F0C-9E71-30190B9B41C1> /usr/lib/libxslt.1.dylib\n    0x7fff92fc2000 -     0x7fff92fcdff7  com.apple.NetAuth (5.0 - 5.0) <C811E662-9EC3-3B74-808A-A75D624F326B> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\n    0x7fff92fce000 -     0x7fff92fcfff7  libsystem_sandbox.dylib (278.10) <A47E7E11-3C76-318E-B67D-98972B86F094> /usr/lib/system/libsystem_sandbox.dylib\n    0x7fff92fd0000 -     0x7fff9305cff7  com.apple.ink.framework (10.9 - 207) <8A50B893-AD03-3826-8555-A54FEAF08F47> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\n    0x7fff93060000 -     0x7fff93067ff7  liblaunch.dylib (842.1.4) <FCBF0A02-0B06-3F97-9248-5062A9DEB32C> /usr/lib/system/liblaunch.dylib\n    0x7fff93068000 -     0x7fff9316dfff  com.apple.ImageIO.framework (3.3.0 - 1038) <2C058216-C6D8-3380-A7EA-92A3F04520C1> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\n    0x7fff9316e000 -     0x7fff93172ff7  libcache.dylib (62) <BDC1E65B-72A1-3DA3-A57C-B23159CAAD0B> /usr/lib/system/libcache.dylib\n    0x7fff9317e000 -     0x7fff93207fff  com.apple.ColorSync (4.9.0 - 4.9.0) <B756B908-9AD1-3F5D-83F9-7A0B068387D2> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync\n    0x7fff93208000 -     0x7fff93214ff7  com.apple.OpenDirectory (10.9 - 173.1.1) <6B78BD7B-5622-38E6-8FC6-86A117E3ACCA> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\n    0x7fff934f5000 -     0x7fff93524ff5  com.apple.GSS (4.0 - 2.0) <ED98D992-CC14-39F3-9ABC-8D7F986487CC> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\n    0x7fff93526000 -     0x7fff93530fff  libcommonCrypto.dylib (60049) <8C4F0CA0-389C-3EDC-B155-E62DD2187E1D> /usr/lib/system/libcommonCrypto.dylib\n    0x7fff93531000 -     0x7fff93537fff  com.apple.AOSNotification (1.7.0 - 760.3) <7901B867-60F7-3645-BB3E-18C51A6FBCC6> /System/Library/PrivateFrameworks/AOSNotification.framework/Versions/A/AOSNotification\n    0x7fff93538000 -     0x7fff93593ffb  com.apple.AE (665.5 - 665.5) <BBA230F9-144C-3CAB-A77A-0621719244CD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\n    0x7fff93594000 -     0x7fff935d3fff  libGLU.dylib (9.0.83) <8B457205-513B-3477-AE9C-3AD979D5FE11> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\n    0x7fff935d4000 -     0x7fff935fbffb  libsystem_info.dylib (449.1.3) <7D41A156-D285-3849-A2C3-C04ADE797D98> /usr/lib/system/libsystem_info.dylib\n    0x7fff9361e000 -     0x7fff93671fff  com.apple.ScalableUserInterface (1.0 - 1) <CF745298-7373-38D2-B3B1-727D5A569E48> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/ScalableUserInterface.framework/Versions/A/ScalableUserInterface\n    0x7fff9368b000 -     0x7fff93694ff7  libcldcpuengine.dylib (2.3.58) <A2E1ED7B-FC7E-31F6-830A-FF917689766B> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib\n    0x7fff9373f000 -     0x7fff93750ff7  libsystem_asl.dylib (217.1.4) <655FB343-52CF-3E2F-B14D-BEBF5AAEF94D> /usr/lib/system/libsystem_asl.dylib\n    0x7fff9390e000 -     0x7fff9391fff7  libz.1.dylib (53) <42E0C8C6-CA38-3CA4-8619-D24ED5DD492E> /usr/lib/libz.1.dylib\n    0x7fff93920000 -     0x7fff9396efff  libcorecrypto.dylib (161.1) <F3973C28-14B6-3006-BB2B-00DD7F09ABC7> /usr/lib/system/libcorecrypto.dylib\n    0x7fff9396f000 -     0x7fff93971ff3  libsystem_configuration.dylib (596.12) <C4F633D9-94C8-35D9-BB2D-84C5122533C7> /usr/lib/system/libsystem_configuration.dylib\n    0x7fff93a72000 -     0x7fff93aa1fd2  libsystem_m.dylib (3047.16) <B7F0E2E4-2777-33FC-A787-D6430B630D54> /usr/lib/system/libsystem_m.dylib\n    0x7fff93aa2000 -     0x7fff93aa8ff7  libsystem_platform.dylib (24.1.4) <331BA4A5-55CE-3B95-99EB-44E0C89D7FB8> /usr/lib/system/libsystem_platform.dylib\n    0x7fff93aa9000 -     0x7fff93aa9fff  com.apple.Accelerate.vecLib (3.9 - vecLib 3.9) <F8D0CC77-98AC-3B58-9FE6-0C25421827B6> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\n    0x7fff93aaa000 -     0x7fff93ad9fff  com.apple.DebugSymbols (106 - 106) <E1BDED08-523A-36F4-B2DA-9D5C712F0AC7> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\n    0x7fff93ada000 -     0x7fff93adbff7  libDiagnosticMessagesClient.dylib (100) <4CDB0F7B-C0AF-3424-BC39-495696F0DB1E> /usr/lib/libDiagnosticMessagesClient.dylib\n    0x7fff93b34000 -     0x7fff93b42fff  com.apple.CommerceCore (1.0 - 42) <ACC2CE3A-913A-39E0-8344-B76F8F694EF5> /System/Library/PrivateFrameworks/CommerceKit.framework/Versions/A/Frameworks/CommerceCore.framework/Versions/A/CommerceCore\n    0x7fff93b43000 -     0x7fff93bb2ff1  com.apple.ApplicationServices.ATS (360 - 363.1) <88976B22-A9B8-3E7B-9AE6-0B8E09A968FC> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\n    0x7fff93c41000 -     0x7fff93d0afff  com.apple.LaunchServices (572.23 - 572.23) <8D955BDE-2C4C-3DD4-B4D7-2D916174FE1D> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\n    0x7fff93d0b000 -     0x7fff93d37ff7  com.apple.framework.SystemAdministration (1.0 - 1.0) <36C562FF-5D91-318C-A19C-6B4453FB78B9> /System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration\n    0x7fff93e60000 -     0x7fff93e9aff3  com.apple.bom (12.0 - 192) <989690DB-B9CC-3DB5-89AE-B5D33EDC474E> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom\n    0x7fff9425a000 -     0x7fff9428fffc  com.apple.LDAPFramework (2.4.28 - 194.5) <7E31A674-C6AB-33BE-BD5E-F5E3C6E22894> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP\n    0x7fff94290000 -     0x7fff942d7fff  libFontRegistry.dylib (127) <A77A0480-AA5D-3CC8-8B68-69985CD546DC> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\n    0x7fff942fc000 -     0x7fff9472fffb  com.apple.vision.FaceCore (3.0.0 - 3.0.0) <F42BFC9C-0B16-35EF-9A07-91B7FDAB7FC5> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\n    0x7fff94730000 -     0x7fff94731fff  com.apple.TrustEvaluationAgent (2.0 - 25) <334A82F4-4AE4-3719-A511-86D0B0723E2B> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\n    0x7fff94732000 -     0x7fff9498aff1  com.apple.security (7.0 - 55471) <233831C5-C457-3AD5-AFE7-E3E2DE6929C9> /System/Library/Frameworks/Security.framework/Versions/A/Security\n    0x7fff9498b000 -     0x7fff949e3ff7  com.apple.Symbolication (1.4 - 129) <16D42516-7B5E-357C-898A-FAA9EE7642B3> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication\n    0x7fff949e4000 -     0x7fff94a18fff  libssl.0.9.8.dylib (50) <B15F967C-B002-36C2-9621-3456D8509F50> /usr/lib/libssl.0.9.8.dylib\n    0x7fff94a19000 -     0x7fff94b0aff9  libiconv.2.dylib (41) <BB44B115-AC32-3877-A0ED-AEC6232A4563> /usr/lib/libiconv.2.dylib\n    0x7fff94de6000 -     0x7fff94f73ff7  GLEngine (9.0.83) <26CCE609-D645-3945-A678-517ED5B65785> /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLEngine.bundle/GLEngine\n    0x7fff94f74000 -     0x7fff95ae8ff7  com.apple.AppKit (6.9 - 1265) <0E9FC8BF-DA3C-34C5-91CC-12BC922B5F01> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\n    0x7fff95ce0000 -     0x7fff95ce9ff3  libsystem_notify.dylib (121) <52571EC3-6894-37E4-946E-064B021ED44E> /usr/lib/system/libsystem_notify.dylib\n    0x7fff96139000 -     0x7fff96149ffb  libsasl2.2.dylib (170) <C8E25710-68B6-368A-BF3E-48EC7273177B> /usr/lib/libsasl2.2.dylib\n    0x7fff9614a000 -     0x7fff9614cffb  libutil.dylib (34) <DAC4A6CF-A1BB-3874-9569-A919316D30E8> /usr/lib/libutil.dylib\n    0x7fff9614d000 -     0x7fff96186ff7  com.apple.QD (3.50 - 298) <C1F20764-DEF0-34CF-B3AB-AB5480D64E66> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\n    0x7fff96187000 -     0x7fff9618afff  libCoreVMClient.dylib (58.1) <EBC36C69-C896-3C3D-8589-3E9023E7E56F> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\n    0x7fff961b2000 -     0x7fff96318fff  libGLProgrammability.dylib (9.0.83) <9C97E814-F674-30F8-8C2D-C45FC1E7D934> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLProgrammability.dylib\n    0x7fff9634e000 -     0x7fff9634fff7  libSystem.B.dylib (1197.1.1) <BFC0DC97-46C6-3BE0-9983-54A98734897A> /usr/lib/libSystem.B.dylib\n    0x7fff9665b000 -     0x7fff967c9ff7  libBLAS.dylib (1094.5) <DE93A590-5FA5-32A2-A16C-5D7D7361769F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\n    0x7fff967ca000 -     0x7fff967cbff7  com.apple.print.framework.Print (9.0 - 260) <EE00FAE1-DA03-3EC2-8571-562518C46994> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\n    0x7fff967cc000 -     0x7fff968abfff  libcrypto.0.9.8.dylib (50) <B95B9DBA-39D3-3EEF-AF43-44608B28894E> /usr/lib/libcrypto.0.9.8.dylib\n    0x7fff968ac000 -     0x7fff968c4ff7  com.apple.GenerationalStorage (2.0 - 160.2) <79629AC7-896F-3302-8AC1-4939020F08C3> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage\n    0x7fff968dc000 -     0x7fff968f7ff7  libsystem_malloc.dylib (23.1.10) <FFE5C472-B23A-318A-85BF-77CDE61900D1> /usr/lib/system/libsystem_malloc.dylib\n    0x7fff96b0f000 -     0x7fff96b16fff  com.apple.NetFS (6.0 - 4.0) <8E26C099-CE9D-3819-91A2-64EA929C6137> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\n    0x7fff96b1c000 -     0x7fff96bdeff1  com.apple.CoreText (352.0 - 367.15) <E5C70FC8-C861-39B8-A491-595E5B55CFC8> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\n    0x7fff96bdf000 -     0x7fff96becff4  com.apple.Librarian (1.2 - 1) <F1A2744D-8536-32C7-8218-9972C6300DAE> /System/Library/PrivateFrameworks/Librarian.framework/Versions/A/Librarian\n    0x7fff96f38000 -     0x7fff96ffbff7  com.apple.backup.framework (1.5.1 - 1.5.1) <FC4E949B-B41A-3F21-8AF8-AEDB13146FEA> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup\n    0x7fff97120000 -     0x7fff9714cfff  com.apple.CoreServicesInternal (184.8 - 184.8) <707E05AE-DDA8-36FD-B0FF-7F15A061B46A> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal\n    0x7fff97156000 -     0x7fff97172fff  libresolv.9.dylib (54) <11C2C826-F1C6-39C6-B4E8-6E0C41D4FA95> /usr/lib/libresolv.9.dylib\n    0x7fff972b1000 -     0x7fff972b4ffc  com.apple.IOSurface (91 - 91) <07CA8A59-1E32-3FB6-B506-18DAF58A8CE0> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\n    0x7fff972c2000 -     0x7fff972c3ffb  libremovefile.dylib (33) <3543F917-928E-3DB2-A2F4-7AB73B4970EF> /usr/lib/system/libremovefile.dylib\n    0x7fff972c4000 -     0x7fff972c5ff7  libodfde.dylib (20) <C00A4EBA-44BC-3C53-BFD0-819B03FFD462> /usr/lib/libodfde.dylib\n    0x7fff972e7000 -     0x7fff97351ff7  com.apple.framework.IOKit (2.0.1 - 907.1.13) <C1E95F5C-B79B-31BE-9F2A-1B25163C1F16> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\n    0x7fff97352000 -     0x7fff97352fff  com.apple.Carbon (154 - 157) <45A9A40A-78FF-3EA0-8FAB-A4F81052FA55> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\n    0x7fff97353000 -     0x7fff9735dff7  com.apple.bsd.ServiceManagement (2.0 - 2.0) <2D27B498-BB9C-3D88-B05A-76908A8A26F3> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\n    0x7fff9735e000 -     0x7fff973c1ff7  com.apple.SystemConfiguration (1.13 - 1.13) <F05F4149-981B-380B-8F50-51CE804BBB89> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\n    0x7fff97461000 -     0x7fff9770bffd  com.apple.HIToolbox (2.1 - 696) <1CFFF37B-C392-3088-B0A4-C08C55B2AF8F> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\n    0x7fff9773d000 -     0x7fff97747ff7  com.apple.CrashReporterSupport (10.9 - 538) <B487466B-3AA1-3854-A808-A61F049FA794> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\n    0x7fff97748000 -     0x7fff97761ff7  com.apple.Ubiquity (1.3 - 289) <C7F1B734-CE81-334D-BE41-8B20D95A1F9B> /System/Library/PrivateFrameworks/Ubiquity.framework/Versions/A/Ubiquity\n    0x7fff97762000 -     0x7fff9790ff27  libobjc.A.dylib (551.1) <AD7FD984-271E-30F4-A361-6B20319EC73B> /usr/lib/libobjc.A.dylib\n    0x7fff97910000 -     0x7fff97955ff7  libcurl.4.dylib (78) <A722B4F0-1F6C-3E16-9CB1-4C6ADC15221E> /usr/lib/libcurl.4.dylib\n    0x7fff97cef000 -     0x7fff97cf2ff7  com.apple.LoginUICore (3.0 - 3.0) <1ECBDA90-D6ED-3333-83EB-9C8232DFAD7C> /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore\n    0x7fff97cf3000 -     0x7fff97d17fff  libxpc.dylib (300.1.17) <4554927A-9467-365C-91F1-5A116989DD7F> /usr/lib/system/libxpc.dylib\n    0x7fff97d18000 -     0x7fff97dffff7  libxml2.2.dylib (26) <A1DADD11-89E5-3DE4-8802-07186225967F> /usr/lib/libxml2.2.dylib\n    0x7fff97e00000 -     0x7fff97e80fff  com.apple.CoreSymbolication (3.0 - 141) <B018335C-698B-3F87-AF1C-6115C4FA8954> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\n    0x7fff97e81000 -     0x7fff97e98fff  com.apple.CFOpenDirectory (10.9 - 173.1.1) <3FB4D5FE-860B-3BDE-BAE2-3531D919EF10> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\n    0x7fff97e99000 -     0x7fff97f51ff7  com.apple.DiscRecording (8.0 - 8000.4.6) <CDAAAD04-A1D0-3C67-ABCC-EFC9E8D44E7E> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording\n    0x7fff97f9c000 -     0x7fff97f9efff  com.apple.ExceptionHandling (1.5 - 10) <0DD670E1-08D5-3570-BE98-19030BEA9845> /System/Library/Frameworks/ExceptionHandling.framework/Versions/A/ExceptionHandling\n    0x7fff97fae000 -     0x7fff98282fc7  com.apple.vImage (7.0 - 7.0) <D241DBFA-AC49-31E2-893D-EAAC31890C90> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\n    0x7fff987a8000 -     0x7fff9880cff3  com.apple.datadetectorscore (5.0 - 354.0) <9ACF24B8-3268-3134-A5BC-D72C9371A195> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore\n    0x7fff98826000 -     0x7fff9882aff7  libGIF.dylib (1038) <C29B4323-1B9E-36B9-96C2-7CEDBAA124F0> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\n    0x7fff9882b000 -     0x7fff98850ff7  com.apple.CoreVideo (1.8 - 117.2) <4674339E-26D0-35FA-9958-422832B39B12> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\n    0x7fff98851000 -     0x7fff98851ff7  libkeymgr.dylib (28) <3AA8D85D-CF00-3BD3-A5A0-E28E1A32A6D8> /usr/lib/system/libkeymgr.dylib\n    0x7fff99721000 -     0x7fff99721fff  com.apple.CoreServices (59 - 59) <7A697B5E-F179-30DF-93F2-8B503CEEEFD5> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\n    0x7fff99722000 -     0x7fff9980cfff  libsqlite3.dylib (158) <00269BF9-43BE-39E0-9C85-24585B9923C8> /usr/lib/libsqlite3.dylib\n    0x7fff9980d000 -     0x7fff9980dffd  libOpenScriptingUtil.dylib (157) <19F0E769-0989-3062-9AFB-8976E90E9759> /usr/lib/libOpenScriptingUtil.dylib\n    0x7fff9980e000 -     0x7fff99832ff7  libJPEG.dylib (1038) <86F349A8-882D-3326-A0B0-63257F68B1A7> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\n\nExternal Modification Summary:\n  Calls made by other processes targeting this process:\n    task_for_pid: 3\n    thread_create: 0\n    thread_set_state: 0\n  Calls made by this process:\n    task_for_pid: 0\n    thread_create: 0\n    thread_set_state: 0\n  Calls made by all processes on this machine:\n    task_for_pid: 7074537\n    thread_create: 0\n    thread_set_state: 0\n\nVM Region Summary:\nReadOnly portion of Libraries: Total=182.4M resident=56.2M(31%) swapped_out_or_unallocated=126.2M(69%)\nWritable regions: Total=1.3G written=22.2M(2%) resident=44.3M(3%) swapped_out=4K(0%) unallocated=1.3G(97%)\n\nREGION TYPE                      VIRTUAL\n===========                      =======\nCG backing stores                  5824K\nCG image                           1036K\nCG raster data                       12K\nCG shared images                    212K\nCoreImage                             8K\nDispatch continuations             8192K\nIOKit                              3200K\nKernel Alloc Once                     8K\nMALLOC                             58.9M\nMALLOC (admin)                       32K\nMALLOC_LARGE (reserved)            15.6M        reserved VM address space (unallocated)\nMemory Tag 242                       12K\nMemory Tag 249                      156K\nOpenCL                               24K\nSTACK GUARD                        56.1M\nStack                              26.7M\nVM_ALLOCATE                        63.4M\nVM_ALLOCATE (reserved)              1.1G        reserved VM address space (unallocated)\n__DATA                             21.5M\n__IMAGE                             528K\n__LINKEDIT                         70.1M\n__TEXT                            112.2M\n__UNICODE                           544K\nmapped file                        50.2M\nshared memory                         4K\n===========                      =======\nTOTAL                               1.6G\nTOTAL, minus reserved VM space    478.7M\n\nModel: MacBookAir4,1, BootROM MBA41.0077.B0F, 2 processors, Intel Core i5, 1.6 GHz, 4 GB, SMC 1.74f4\nGraphics: Intel HD Graphics 3000, Intel HD Graphics 3000, Built-In, 384 MB\nMemory Module: BANK 0/DIMM0, 2 GB, DDR3, 1333 MHz, 0x80CE, 0x4D34373142353737334448302D4348392020\nMemory Module: BANK 1/DIMM0, 2 GB, DDR3, 1333 MHz, 0x80CE, 0x4D34373142353737334448302D4348392020\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0xE9), Broadcom BCM43xx 1.0 (5.106.98.100.22)\nBluetooth: Version 4.2.0f6 12982, 3 services, 15 devices, 1 incoming serial ports\nNetwork Service: Wi-Fi, AirPort, en0\nSerial ATA Device: APPLE SSD SM128C, 121.33 GB\nUSB Device: FaceTime Camera (Built-in)\nUSB Device: Hub\nUSB Device: Apple Internal Keyboard / Trackpad\nUSB Device: BRCM20702 Hub\nUSB Device: Bluetooth USB Host Controller\nUSB Device: Hub\nUSB Device: USB 2.0 Hub\nUSB Device: [BETOP (GAME FOR WINDOWS)]\nUSB Device: Microsoft Basic Optical Mouse v2.0\nUSB Device: Wired Keyboard 600\nThunderbolt Bus: MacBook Air, Apple Inc., 8.1\n", "url": "https://github.com/libgdx/libgdx/issues/1458", "user": "sleeplessman", "labels": ["bug"], "created": "2014-03-11 15:16:16", "closed": "2014-08-31 19:33:09", "commits": {}, "ttf": 173.00027777777777, "commitsDetails": []}, {"title": "iOS - Viewport stretched - possibly related to bug #1407", "body": "Hello,\n\nI am following libgdx wiki, in particular the part about changing the viewport in Scene2d:\n\nhttps://github.com/libgdx/libgdx/wiki/Scene2d#wiki-viewport\n\nI used the code provided, with some stage size of mine and using **fillY() instead of fit()**:\n\n``` java\npublic void resize (int width, int height) {\n    Vector2 size = Scaling.fillY.apply(STAGE_WIDTH, STAGE_HEIGHT, width, height);\n    this.viewportX = (int)(width - size.x) / 2;\n    this.viewportY = (int)(height - size.y) / 2;\n    this.viewportWidth = (int)size.x;\n    this.viewportHeight = (int)size.y;\n    Gdx.gl.glViewport(this.viewportX, this.viewportY, this.viewportWidth, this.viewportHeight);\n    stage.setViewport(STAGE_WIDTH, STAGE_HEIGHT, true, this.viewportX, this.viewportY, this.viewportWidth, this.viewportHeight);\n}\n```\n\nWorks well in Android and Desktop.\n\n**However in iOS the viewport is streched**, as like the line Gdx.gl.glViewport(this.viewportX, this.viewportY, this.viewportWidth, this.viewportHeight); is not called.\n\nI found out that **in my render(float delta) I have to call glViewport again, each time**:\n\n``` java\npublic void render(float delta) {\n\nGdx.gl.glViewport(this.viewportX, this.viewportY, this.viewportWidth, this.viewportHeight); // Must call this again, to keep the new viewport.\n\nGdx.gl.glClearColor(1, 1, 1, 1);\nGdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\nthis.stage.act(delta);\nthis.stage.draw();\n}\n```\n\nI don't know why, as glViewport is called only in resize() (and now in render() also).\n\nMaybe it is called again somewhere in the Robovm backend?\n", "url": "https://github.com/libgdx/libgdx/issues/1415", "user": "manhluong", "labels": ["bug", "ios"], "created": "2014-03-02 17:18:27", "closed": "2014-04-09 21:51:32", "commits": {}, "ttf": 38.000277777777775, "commitsDetails": []}, {"title": "iOS application TextureWrap Weird Behavior", "body": "When creating an infinite scrolling background which repeats, I set up textures like so:\n\n```\nthis.cityTexture = new Texture(Gdx.files.internal(\"data/city_2.png\"));\nthis.cityTexture.setWrap(TextureWrap.Repeat, TextureWrap.ClampToEdge);\nthis.cityRegion = new TextureRegion(cityTexture, (int)(this.gameWidth/scaleFactor),this.cityTexture.getHeight());\nthis.citySprite = new Sprite(this.cityRegion);\nthis.citySprite.setSize(gameWidth, citySprite.getHeight()*scaleFactor); //width never changes\n```\n\nThe scale factor is just a constant used to keep the gameplay consistent across different size screens.\nThen I scroll the textures like this:\n\n```\ncityRegion.setRegion((int) (cityRegion.getRegionX()+(xDelta*.5)), cityRegion.getRegionY(), cityRegion.getRegionWidth(), cityRegion.getRegionHeight());\ncitySprite.setRegion(cityRegion);\n```\n\nOn Android, html, and desktop this behaves as expected and the city texture lazily goes by in the background. On iOS, it appears to do one of two things ( it is difficult to determine what is actually happening). Either it is moving forward and then scrolling causing a choppy like motion or it is shrinking, scrolling and then growing to original size. Perhaps it is because I have scaled the sprite using setSize?\n", "url": "https://github.com/libgdx/libgdx/issues/1410", "user": "brthornbury", "labels": ["bug", "ios"], "created": "2014-02-28 20:22:19", "closed": "2014-04-09 21:52:36", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "[Intersector] intersectRayPlane & intersectLinePlane Bug", "body": "The calculation of t in both methods is incorrect, as shown below.\n\nIt is:\n\n``` java\nfloat t = -(origin.dot(plane.getNormal()) + plane.getD()) / denom;\n```\n\nand should be:\n\n``` java\nfloat t = (-origin.dot(plane.getNormal()) + plane.getD()) / denom;\n```\n\nYou can see that the current implementation is incorrect using the following code:\n\n``` java\nVector3 intersection = new Vector3();\nRay ray = new Ray(new Vector3(10, 0, 10), new Vector3(-1, -1, -1));\nIntersector.intersectRayPlane(ray, new Plane(new Vector3(0, 1, 0), 5), intersection);\n```\n\nintersection will be (5.0,-5.0,5.0) which is obviously not a point on the given plane.\n\nThe implementation also limits t to values >= 0 which I think is mathematically not correct.\n", "url": "https://github.com/libgdx/libgdx/issues/1371", "user": "Shraikn", "labels": ["bug"], "created": "2014-02-19 16:25:48", "closed": "2014-05-10 16:06:07", "commits": {"7d62b253e29d534799ad32a82a4f56a5bbfa9880": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 79.00027777777778, "commitsDetails": [{"commitHash": "7d62b253e29d534799ad32a82a4f56a5bbfa9880", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["22510e59235b25e7ae556a7dd2f82931ac6f9ee4"], "nameRev": "7d62b253e29d534799ad32a82a4f56a5bbfa9880 tags/1.1.0~56^2~12", "commitMessage": "fixed issue #1371, t was limited in case of line plane intersection, which is of course wrong)\n", "commitDateTime": "2014-05-10 18:06:02", "authoredDateTime": "2014-05-10 18:06:02", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/math/Intersector.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Intersector.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.math.Intersector.intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7d62b253e29d534799ad32a82a4f56a5bbfa9880"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.math.Intersector.intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)"]}, {"title": "Sound not playing when audio file is too short", "body": "Using this code:\n`\nclickSound = Gdx.audio.newSound(Gdx.files.internal(\"data/button-click.ogg\"));\nclickSound.play();\n`\nand this .ogg file\nhttp://www.filedropper.com/button-click\n\nlibGDX does not seem to play the sound. If I modify the .ogg file to be at least 300ms, then the sound plays.\n", "url": "https://github.com/libgdx/libgdx/issues/1366", "user": "EyeOfMidas", "labels": ["bug"], "created": "2014-02-18 20:28:00", "closed": "2014-05-10 19:52:41", "commits": {"27e3649935cf4960441007a72afaad61ccfce913": {"commitGHEventType": "referenced", "commitUser": "badlogic"}, "22510e59235b25e7ae556a7dd2f82931ac6f9ee4": {"commitGHEventType": "referenced", "commitUser": "badlogic"}, "9505ebd16fe7f06b53517a568f682a2ad56bb025": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 80.00027777777778, "commitsDetails": [{"commitHash": "27e3649935cf4960441007a72afaad61ccfce913", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["79643e7e89601f1b80db16a39bbdaec4cef70869"], "nameRev": "27e3649935cf4960441007a72afaad61ccfce913 tags/1.1.0~56^2~14", "commitMessage": "added test for issue #1366\n", "commitDateTime": "2014-05-10 17:50:08", "authoredDateTime": "2014-05-10 17:50:08", "commitGitStats": [{"filePath": "tests/gdx-tests-android/assets/data/chirp.wav", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/ShortSoundTets.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShortSoundTets.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.ShortSoundTets", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "22510e59235b25e7ae556a7dd2f82931ac6f9ee4", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["27e3649935cf4960441007a72afaad61ccfce913"], "nameRev": "22510e59235b25e7ae556a7dd2f82931ac6f9ee4 tags/1.1.0~56^2~13", "commitMessage": "also tried it with an ogg to reproduce issue #1366\n", "commitDateTime": "2014-05-10 17:52:19", "authoredDateTime": "2014-05-10 17:52:19", "commitGitStats": [{"filePath": "tests/gdx-tests-android/assets/data/chirp.ogg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/{ShortSoundTets.java => ShortSoundTest.java}", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShortSoundTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.ShortSoundTets", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.tests.ShortSoundTets.create()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9505ebd16fe7f06b53517a568f682a2ad56bb025", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["faf7a1a727ef293721650621d49c5a4b4c4fb098"], "nameRev": "9505ebd16fe7f06b53517a568f682a2ad56bb025 tags/1.1.0~56^2~6", "commitMessage": "fixed issue #1366, reduced buffer size in OggInputStream to 512 for short sound files\n", "commitDateTime": "2014-05-10 21:53:32", "authoredDateTime": "2014-05-10 21:53:32", "commitGitStats": [{"filePath": "CHANGES", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/audio/OggInputStream.java", "insertions": 12, "deletions": 10, "lines": 22}, {"filePath": "tests/gdx-tests-android/assets/data/tic.ogg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "tests/gdx-tests-android/assets/data/tic_long.ogg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/ShortSoundTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OggInputStream.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.audio.OggInputStream", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.audio.OggInputStream.getPageAndPacket()", "TOT": 12, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 6}, {"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.audio.OggInputStream.readPCM()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShortSoundTest.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.ShortSoundTest.create()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["27e3649935cf4960441007a72afaad61ccfce913", "22510e59235b25e7ae556a7dd2f82931ac6f9ee4", "9505ebd16fe7f06b53517a568f682a2ad56bb025"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 31, "deletions": 14, "lines": 45, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 25, "UPD": 3, "INS": 12, "MOV": 0, "DEL": 10, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["tests", "backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "com.badlogic.gdx.tests.ShortSoundTets", "com.badlogic.gdx.backends.lwjgl.audio.OggInputStream.getPageAndPacket()", "com.badlogic.gdx.backends.lwjgl.audio.OggInputStream", "com.badlogic.gdx.backends.lwjgl.audio.OggInputStream.readPCM()"]}, {"title": "/tmp exec", "body": "If /tmp mounted with \"noexec\" desktop compiled program just won't init. Maybe some sort of warning should be added into lib?\n\nHere, it checks if it can write but does not check exec permission:\n\nSharedLibraryLoader.java\nprivate File getExtractedFile (String dirName, String fileName) \n\nThere is other method:\nprivate void loadFile (String sourcePath)\n\nwhich checks actual exec and used a bit before. Not sure why 2 of them are used :/\n", "url": "https://github.com/libgdx/libgdx/issues/1301", "user": "alexzk1", "labels": ["bug"], "created": "2014-02-07 03:57:23", "closed": "2014-02-11 20:46:18", "commits": {"cff4b2ae3ba995fba4b36118ba72352326411697": {"commitGHEventType": "referenced", "commitUser": "badlogic"}, "dbaf2207efba5f495f00d5c52e8e90869138188b": {"commitGHEventType": "referenced", "commitUser": "NathanSweet"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "cff4b2ae3ba995fba4b36118ba72352326411697", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["02506863c8a9502d8515bfb1d4432f5bef9c55fc"], "nameRev": "cff4b2ae3ba995fba4b36118ba72352326411697 tags/1.0.0~277^2~7", "commitMessage": "fixed #1301, additional check if shared lib is executable\n", "commitDateTime": "2014-02-11 21:46:40", "authoredDateTime": "2014-02-11 21:46:40", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/gdx-tests/src/com/badlogic/gdx/tests/UtfFontTest.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SharedLibraryLoader.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.utils.SharedLibraryLoader.canWrite(java.io.File)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "UtfFontTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "dbaf2207efba5f495f00d5c52e8e90869138188b", "commitGHEventType": "referenced", "commitUser": "NathanSweet", "commitParents": ["29cb39d8233f4272c35ad06a436a176dc79e117b"], "nameRev": "dbaf2207efba5f495f00d5c52e8e90869138188b tags/1.0.0~230", "commitMessage": "Better canWrite, doesn't overwrite existing file.\n\n#1301\n#1388\n", "commitDateTime": "2014-02-25 18:33:30", "authoredDateTime": "2014-02-25 18:33:30", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java", "insertions": 15, "deletions": 5, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SharedLibraryLoader.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.utils.SharedLibraryLoader.canWrite(java.io.File)", "TOT": 15, "UPD": 4, "INS": 3, "MOV": 7, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cff4b2ae3ba995fba4b36118ba72352326411697"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.utils.SharedLibraryLoader.canWrite(java.io.File)"]}, {"title": "GWT backend bugs on Firefox (glClear seems to fail)", "body": "What steps will reproduce the problem?\n1.Run on GWT a simple app that do not render on the complete screen each frame\n\nWhat is the expected output? What do you see instead?\nYou should see the clearing color (let's say full black) ; instead you see the backbuffer flickering ; backbuffer is not cleared by the glClear call.\nRunning the same with Chrome works flawlessly (clearing is performed).\n\nWhat version of libgdx are you using?\nUsing the github with a sync just before filling the issue\n\nPlease provide any additional information below.\nan example render methods that show this ;\npublic void render (float delta) {\n    inputController.update();\n    Gdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n    Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);\n    modelBatch.begin(cam);\n    modelBatch.render(instance, environment);\n    modelBatch.render(instance2, environment);\n    modelBatch.end();\n}\n\nPerhaps a firefox bug ; but I tried with release 26 and 25 with the same result. Also checked for an open issue for Firefox but didn't find any. Also, there are lots of WebGL demo working fine with Firefox 26.\n\nComplete system is Windows 8 x64 + Firefox v26\n\nI will make additional test (check gl acceleration and such) and complete this issue.\n", "url": "https://github.com/libgdx/libgdx/issues/1254", "user": "vbousquet", "labels": ["bug", "gwt"], "created": "2014-01-28 09:58:10", "closed": "2014-05-03 04:43:56", "commits": {}, "ttf": 94.00027777777778, "commitsDetails": []}, {"title": "Black Screen Camera up problem", "body": "Hi,\nStep to reproduce the bug:\n1) Create a scene with a model placed in the origin (cube, sphere, capsule whatever...)\n2) Place the perspective camera on the y axis like (0,10,0)\n3) Make the camera lookAt the origin\n4) Render the scene will result in a black screen\n\nThe error is due to the normalizeUp function called from lookAt method of Camera class which will set the up vector of the camera to Zero because the new direction will be (0, -1, 0) and the current up vector is (0,1,0) so their cross product will give a Zero vector. \n", "url": "https://github.com/libgdx/libgdx/issues/1198", "user": "lordjone", "labels": ["bug"], "created": "2014-01-15 15:25:31", "closed": "2014-02-11 21:24:08", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "Bug in nightly build of Bullet (ios)?", "body": "I'm currently using the latest nightlies of libgdx and the Bullet extension and have stumbled upon a relatively big issue when deploying my app on ios. For the most part, the Bullet extension seems to work fine. However, in my code my app crashes every time a Bullet-method is invoked that uses the Matrix4 class. For instance, when I call the method \"btRigidBody.getWorldTransform()\" the app crashes at exactly that point in the code (tested with System.out.println). Similarly, the methods\n- new btDefaultMotionState( some Matrix4 object ),\n- btPairCachingGhostObject.setWorldTransform( some Matrix4 object ),\n- btPairCachingGhostObject.getWorldTransform(),\n- btRigidBody.getWorldTransform(),\n- btPairCachingGhostObject.getWorldTransform( some Matrix4 object ),\n- btRigidBody.getWorldTransform( some Matrix4 object ),\n- ...,\n\nall seem to crash. HOWEVER, it appears that the crashes only happen on a REAL ios device. The methods run fine on desktop (mac/windows), android (tested on galaxy s2) and even on the ios device simulators. Unfortunately, they seem to crash on my ios test device, which is the old ipad mini (without retina screen, ios version 7.0.4). \n\nIn order to make sure that the crashes indeed appear to originate from the bullet extension, I have compiled and run KinematicTest.java. Again, it runs fine on the desktop, android devices and the ios device simulators, but crashes on my ipad mini. Can somebody please verify if KinematicTest.java is able to run successfully on a real ios device when using the latest nightlies? I would appreciate it a lot! \n\nOh yes, I'm using also using the latest Robovm plugin (v0.0.7)\n\nI've also posted this issue on the libgdx forum. http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=12276\n", "url": "https://github.com/libgdx/libgdx/issues/1171", "user": "DrLey", "labels": ["bug"], "created": "2014-01-10 13:38:43", "closed": "2014-03-30 18:56:27", "commits": {"591316a437a56840fc61c40482439bc77683a99a": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 79.00027777777778, "commitsDetails": [{"commitHash": "591316a437a56840fc61c40482439bc77683a99a", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["b22c87deaced500b7181dbb1ee9bdcc8535ee283"], "nameRev": "591316a437a56840fc61c40482439bc77683a99a tags/1.0.0~130^2", "commitMessage": "fixed ios bullet build, issue #1171\n", "commitDateTime": "2014-03-30 20:56:19", "authoredDateTime": "2014-03-30 20:56:19", "commitGitStats": [{"filePath": "extensions/gdx-bullet/jni/src/custom/gdx/linearmath/mathtypes.cpp", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/LwjglDebugStarter.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSRobovmTests.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.IOSRobovmTests.createApplication()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LwjglDebugStarter.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["591316a437a56840fc61c40482439bc77683a99a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 2, "lines": 10, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["tests", "extensions"], "changesInPackagesSPOON": ["com.badlogic.gdx.tests.lwjgl.LwjglDebugStarter.main(java.lang.String[])"]}, {"title": "Applet Native Loader Regression Bug", "body": "Please see the bug on google code for the progression of this bug (which is a regression that happened two times already):\n\nhttps://code.google.com/p/libgdx/issues/detail?id=1341\n\nThis is an example copy/paste from the JAVA CONSOLE (recall, this is an applet, not a standalone application):\n\nCouldn't load shared library 'gdx.dll' for target: Windows 7, 32-bit\ncom.badlogic.gdx.utils.GdxRuntimeException: Couldn't load shared library 'gdx.dll' for target: Windows 7, 32-bit\n    at com.badlogic.gdx.utils.SharedLibraryLoader.load(SharedLibraryLoader.java:110)\n    at com.badlogic.gdx.utils.GdxNativesLoader.load(GdxNativesLoader.java:34)\n    at com.badlogic.gdx.backends.lwjgl.LwjglNativesLoader.load(LwjglNativesLoader.java:46)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.<init>(LwjglApplication.java:76)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplication.<init>(LwjglApplication.java:72)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplet$LwjglAppletApplication.<init>(LwjglApplet.java:38)\n    at com.badlogic.gdx.backends.lwjgl.LwjglApplet$1.addNotify(LwjglApplet.java:52)\n    at java.awt.Container.addNotify(Unknown Source)\n    at java.awt.Panel.addNotify(Unknown Source)\n    at java.awt.Container.addImpl(Unknown Source)\n    at java.awt.Container.add(Unknown Source)\n    at org.lwjgl.util.applet.AppletLoader.switchApplet(AppletLoader.java:1326)\n    at org.lwjgl.util.applet.AppletLoader$2.run(AppletLoader.java:909)\n    at java.awt.event.InvocationEvent.dispatch(Unknown Source)\n    at java.awt.EventQueue.dispatchEventImpl(Unknown Source)\n    at java.awt.EventQueue.access$200(Unknown Source)\n    at java.awt.EventQueue$3.run(Unknown Source)\n    at java.awt.EventQueue$3.run(Unknown Source)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\n    at java.awt.EventQueue.dispatchEvent(Unknown Source)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n    at java.awt.EventDispatchThread.run(Unknown Source)\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: Unable to read file for extraction: gdx.dll\n    at com.badlogic.gdx.utils.SharedLibraryLoader.readFile(SharedLibraryLoader.java:119)\n    at com.badlogic.gdx.utils.SharedLibraryLoader.loadFile(SharedLibraryLoader.java:231)\n    at com.badlogic.gdx.utils.SharedLibraryLoader.load(SharedLibraryLoader.java:108)\n    ... 26 more\n\nI verified that it's not an OS issue. I get similar stack traces for Mac OS X 10.8 (Java 1.6 - long story), and Ubuntu 12.04 (Java 1.7, and Java 1.6).\n\nThe bug is _not present_ in the nightly from 20130703. I just verified this by syncing to the git repository as available on that day, and rebuilding GDX.\n\nThe current RELEASE has this issue, and so does the code currently checked in the repository (verified today).\n", "url": "https://github.com/libgdx/libgdx/issues/1165", "user": "ahii", "labels": ["bug"], "created": "2014-01-09 07:33:18", "closed": "2014-05-10 15:41:34", "commits": {}, "ttf": 121.00027777777778, "commitsDetails": []}, {"title": "Possible issue in screen size (robovm)", "body": "I add a banner subview in top of the libgdx view just like this->\n\nhttps://dl.dropboxusercontent.com/u/78073642/ImagenesPosteadasEnForos/2014-01-02%2017.10.46.jpg\n\nAll my buttons are set with scene2d, but i notice that i have to press below the buttons to get the changed event. \n if i do not add the banner view there is no problem about pressing the buttons.\n\nI was looking the source code in the robovm back-end and i think the problem is the function getBounds, cause you are getting the size of all the screen, and not the view that is using libgx\n\nCGSize getBounds (UIViewController viewController) {\n    CGSize bounds = UIScreen.getMainScreen().getBounds().size();\n         ....\n        ......\n}\n", "url": "https://github.com/libgdx/libgdx/issues/1145", "user": "Yayo-Arellano", "labels": ["bug", "ios"], "created": "2014-01-03 02:40:55", "closed": "2014-02-11 21:58:13", "commits": {"d78f7d6453b261b966459f261dfc1a1a9ec438ed": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "d78f7d6453b261b966459f261dfc1a1a9ec438ed", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["c333dca168d492f00ee0d9b9594009d3d019b31d"], "nameRev": "d78f7d6453b261b966459f261dfc1a1a9ec438ed tags/1.0.0~277^2~1", "commitMessage": "fixed #1145\n", "commitDateTime": "2014-02-11 22:58:32", "authoredDateTime": "2014-02-11 22:58:32", "commitGitStats": [{"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSApplication.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "tests/gdx-tests-iosrobovm/Info.plist.xml", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "tests/gdx-tests-iosrobovm/src/com/badlogic/gdx/tests/IOSRobovmTests.java", "insertions": 9, "deletions": 2, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSApplication.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSApplication.getBounds(org.robovm.cocoatouch.uikit.UIViewController)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IOSRobovmTests.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.IOSRobovmTests.createApplication()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d78f7d6453b261b966459f261dfc1a1a9ec438ed"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.iosrobovm.IOSApplication.getBounds(org.robovm.cocoatouch.uikit.UIViewController)"]}, {"title": "g3db issue on ipad1/Ios5.1", "body": "imo g3db (not g3dj) models cause a crash on ipad 1:\nhttp://www.badlogicgames.com/forum/viewtopic.php?f=11&t=12116&p=54406#p54406\n", "url": "https://github.com/libgdx/libgdx/issues/1139", "user": "ChristophMinnameier", "labels": ["bug", "ios"], "created": "2013-12-30 19:07:01", "closed": "2014-04-09 21:50:57", "commits": {}, "ttf": 100.00027777777778, "commitsDetails": []}, {"title": "Fix SpriteBatch shader for Windows Phone 8.1", "body": "```\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.GL10;\nimport com.badlogic.gdx.graphics.OrthographicCamera;\nimport com.badlogic.gdx.graphics.Texture;\nimport com.badlogic.gdx.graphics.Texture.TextureFilter;\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\nimport com.badlogic.gdx.graphics.g2d.TextureRegion;\n\npublic class Game implements ApplicationListener {\n\nprivate OrthographicCamera camera;\nprivate SpriteBatch batch;\nprivate Texture texture;\nprivate Sprite sprite;\n\n@Override\npublic void create() {      \n\n    float w = Gdx.graphics.getWidth();\n    float h = Gdx.graphics.getHeight();\n\n    this.camera = new OrthographicCamera(1, h/w);\n    this.batch = new SpriteBatch();\n\n    this.texture = new Texture(Gdx.files.internal(\"data/libgdx.png\"));\n    this.texture.setFilter(TextureFilter.Linear, TextureFilter.Linear);\n\n    TextureRegion region = new TextureRegion(texture, 0, 0, 512, 275);\n\n    this.sprite = new Sprite(region);\n    this.sprite.setSize(0.9f, 0.9f * this.sprite.getHeight() / this.sprite.getWidth());\n    this.sprite.setOrigin(this.sprite.getWidth()/2, this.sprite.getHeight()/2);\n    this.sprite.setPosition(-this.sprite.getWidth()/2, -this.sprite.getHeight()/2);\n}\n\n@Override\npublic void dispose() {\n    //this.stage.dispose();\n    this.batch.dispose();\n    this.texture.dispose();\n}\n\n@Override\npublic void render() {      \n\n    Gdx.gl.glClearColor(1, 1, 1, 1);\n    Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);\n\n    this.batch.setProjectionMatrix(camera.combined);\n    this.batch.begin();\n    this.sprite.draw(batch);\n    this.batch.end();\n}\n\n@Override\npublic void resize(int width, int height) {\n}\n\n@Override\npublic void pause() {\n}\n\n@Override\npublic void resume() {\n}\n}\n```\n\njava.lang.IllegalArgumentException: Error compiling shader: Shader compilation errors\n(5, 9): Macro already defined\n(5, 14): syntax error, unexpected NEWLINE_TOK, expecting IDENT_TOK or MACRO_DEFINITION\n\n```\nat com.badlogic.gdx.graphics.g2d.SpriteBatch.createDefaultShader(SpriteBatch.java:195)\nat com.badlogic.gdx.graphics.g2d.SpriteBatch.<init>(SpriteBatch.java:159)\nat com.badlogic.gdx.graphics.g2d.SpriteBatch.<init>(SpriteBatch.java:96)\nat com.lz.run.Game.create(Game.java:35)\nat com.badlogic.gdx.backends.gwt.GwtApplication.setupLoop(GwtApplication.java:177)\nat com.badlogic.gdx.backends.gwt.GwtApplication$1$1.update(GwtApplication.java:139)\nat com.badlogic.gdx.backends.gwt.preloader.Preloader$1$1.onSuccess(Preloader.java:184)\nat com.badlogic.gdx.backends.gwt.preloader.AssetDownloader$4$1.onEvent(AssetDownloader.java:171)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:601)\nat com.google.gwt.dev.shell.MethodAdaptor.invoke(MethodAdaptor.java:103)\nat com.google.gwt.dev.shell.MethodDispatch.invoke(MethodDispatch.java:71)\nat com.google.gwt.dev.shell.OophmSessionHandler.invoke(OophmSessionHandler.java:172)\nat com.google.gwt.dev.shell.BrowserChannelServer.reactToMessages(BrowserChannelServer.java:293)\nat com.google.gwt.dev.shell.BrowserChannelServer.processConnection(BrowserChannelServer.java:547)\nat com.google.gwt.dev.shell.BrowserChannelServer.run(BrowserChannelServer.java:364)\nat java.lang.Thread.run(Thread.java:722)\n```\n", "url": "https://github.com/libgdx/libgdx/issues/1138", "user": "damon-kwok", "labels": ["bug", "gwt"], "created": "2013-12-30 07:19:51", "closed": "2015-02-02 18:08:44", "commits": {}, "ttf": 399.0002777777778, "commitsDetails": []}, {"title": "Sound not play on ios device", "body": "Same projects, sound could play on simulators and some ios devices but on some devices sound couldn't be played. tested with iphone 3gs 6.1.3 (no sound), ipad mini 6.1.3(sound ok), ipad 2 (ios 7 no sound), simulators(sound ok)\n", "url": "https://github.com/libgdx/libgdx/issues/1126", "user": "bachtrong43", "labels": ["bug", "ios"], "created": "2013-12-26 05:07:54", "closed": "2014-03-14 20:27:54", "commits": {}, "ttf": 78.00027777777778, "commitsDetails": []}, {"title": "Issue with glGetUniformLocation on different graphic drivers(?!)", "body": "This is not a bug on your side, I think it's more an issue of the implementation of the opengl driver.\n\nOn some graphic cards you can use\n\n```\nprogram.getUniformLocation(\"u_lightPosition\");\n```\n\nto get the uniform location of an array\n\n```\n// this tries to get\nuniform vec3 u_lightPosition[10];\n```\n\nand on others you have to use\n\n```\nprogram.getUniformLocation(\"u_lightPosition[0]\");\n```\n\ninstead.\n\nOn my nvidia card @ home I can use the last one. On my Nexus 4 too. At work I have to use the other one, otherwise, glGetUniformLocation returns -1\n\nThis btw. should be the reason why the pointlights in your default shader do not work. (for everyone)\n\nTill now I did not find any solution for that. Did you?\n", "url": "https://github.com/libgdx/libgdx/issues/1106", "user": "andretietz", "labels": ["bug"], "created": "2013-12-20 15:49:27", "closed": "2014-01-05 23:37:37", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "multi-touch problem on HTC One", "body": "When touching screen very fast and frequent (50+ times in 5 sec) on HTC One(801e), it would cause the Exception:\n\nE/InputEventReceiver(14112): Exception dispatching input event.\nE/MessageQueue-JNI(14112): Exception in MessageQueue callback: handleReceiveCallback\nE/MessageQueue-JNI(14112): java.lang.ArrayIndexOutOfBoundsException: length=20; index=20\nE/MessageQueue-JNI(14112):  at com.badlogic.gdx.backends.android.AndroidMultiTouchHandler.onTouch(AndroidMultiTouchHandler.java:48)\nE/MessageQueue-JNI(14112):  at com.badlogic.gdx.backends.android.AndroidInput.onTouch(AndroidInput.java:404)\nE/MessageQueue-JNI(14112):  at android.view.View.dispatchTouchEvent(View.java:7193)\nE/MessageQueue-JNI(14112):  at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2187)\nE/MessageQueue-JNI(14112):  at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1930)\nE/MessageQueue-JNI(14112):  at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2187)\nE/MessageQueue-JNI(14112):  at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1930)\nE/MessageQueue-JNI(14112):  at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2187)\nE/MessageQueue-JNI(14112):  at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1930)\nE/MessageQueue-JNI(14112):  at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2187)\nE/MessageQueue-JNI(14112):  at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:1930)\nE/MessageQueue-JNI(14112):  at com.android.internal.policy.impl.PhoneWindow$DecorView.superDispatchTouchEvent(PhoneWindow.java:2046)\nE/MessageQueue-JNI(14112):  at com.android.internal.policy.impl.PhoneWindow.superDispatchTouchEvent(PhoneWindow.java:1500)\nE/MessageQueue-JNI(14112):  at android.app.Activity.dispatchTouchEvent(Activity.java:2454)\nE/MessageQueue-JNI(14112):  at com.android.internal.policy.impl.PhoneWindow$DecorView.dispatchTouchEvent(PhoneWindow.java:1994)\nE/MessageQueue-JNI(14112):  at android.view.View.dispatchPointerEvent(View.java:7392)\nE/MessageQueue-JNI(14112):  at android.view.ViewRootImpl.deliverPointerEvent(ViewRootImpl.java:3605)\nE/MessageQueue-JNI(14112):  at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:3534)\nE/MessageQueue-JNI(14112):  at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:4648)\nE/MessageQueue-JNI(14112):  at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:4627)\nE/MessageQueue-JNI(14112):  at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:4723)\nE/MessageQueue-JNI(14112):  at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:196)\nE/MessageQueue-JNI(14112):  at android.os.MessageQueue.nativePollOnce(Native Method)\nE/MessageQueue-JNI(14112):  at android.os.MessageQueue.next(MessageQueue.java:131)\nE/MessageQueue-JNI(14112):  at android.os.Looper.loop(Looper.java:132)\nE/MessageQueue-JNI(14112):  at android.app.ActivityThread.main(ActivityThread.java:5536)\nE/MessageQueue-JNI(14112):  at java.lang.reflect.Method.invokeNative(Native Method)\nE/MessageQueue-JNI(14112):  at java.lang.reflect.Method.invoke(Method.java:511)\nE/MessageQueue-JNI(14112):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1074)\nE/MessageQueue-JNI(14112):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:841)\nE/MessageQueue-JNI(14112):  at dalvik.system.NativeStart.main(Native Method)\nW/dalvikvm(14112): threadid=1: thread exiting with uncaught exception (group=0x410f4540)\n\nI declared an new InputListener object and implemented touchDown() to determine whether an Balloon is hit or not. (see the attach file)\nIt is no problem on most of mine and my friends' Android devices but HTC One.\nHere is the code:\n\nStage stage;\nstage.addListener(new InputListener() {\n\n```\npublic boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {\n\n    if(!ClassGDX.bGameIsPaused){\n        bHitAnyBalloon = false;\n        for(int i=iBalloonAmount-1;i>=0;i--){\n            float fPointX = balloon[i].getX() + balloon[i].fCenterX;\n            float fPointY = balloon[i].getY() + balloon[i].fCenterY;\n            double dDis = Math.pow((float)x-fPointX,2) + Math.pow((float)y-fPointY,2) - Math.pow(balloon[i].fRadius,2);\n            if(dDis<=0){ //hit the balloon\n                    //... do something\n                }\n            }\n        }\n    }\n\n    return false;\n}\n```\n\n});\n\nApp name: Balloon Zoo\nhttps://play.google.com/store/apps/details?id=com.fingerfun.balloonzoo\n\nThank you very much!\n", "url": "https://github.com/libgdx/libgdx/issues/1095", "user": "deantsai0326", "labels": ["bug"], "created": "2013-12-16 16:21:52", "closed": "2013-12-23 23:35:44", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "TiledMapPacker: multiple  TMX tilemaps input generate wrong results", "body": "In TiledMapPacker I see two issues:\n- when filling the tilesetsToPack the name of the tilesets have to be unique across all the maps. This not not necessarily true as the names can be set by the user.\n- The packTilesets method treats the gids of the tiles as if they were unique across all maps but they are only unique inside a single map. Because the gids are then used as index in the atlas file the texture regions get mixed up.\n", "url": "https://github.com/libgdx/libgdx/issues/1087", "user": "hneuer", "labels": ["bug"], "created": "2013-12-15 12:02:08", "closed": "2015-02-02 19:30:03", "commits": {}, "ttf": 414.0002777777778, "commitsDetails": []}, {"title": "Label fontScale", "body": "When I set the fontScale for the label (<1), the label doesn't fill to the cell. See the attachment for the detail.(I used libgdx version 0.9.9)\n![scale](https://f.cloud.github.com/assets/6166994/1730788/6b5f64ee-62ef-11e3-87ee-25b066896f53.png)\n![noscale](https://f.cloud.github.com/assets/6166994/1730789/7e9bee9c-62ef-11e3-9e7e-1f624dd796db.png)\n", "url": "https://github.com/libgdx/libgdx/issues/1077", "user": "bachtrong43", "labels": ["bug"], "created": "2013-12-12 05:38:03", "closed": "2013-12-26 16:42:09", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "Something wrong with the depth on android LWP?", "body": "test pictures here:\n\nhttp://kepfeltoltes.hu/131205/device-2013-12-05-213738_www.kepfeltoltes.hu_.png\n\nhttp://kepfeltoltes.hu/131205/device-2013-12-05-213805_www.kepfeltoltes.hu_.png\n\nand how it looks like in real:\n\nhttp://kepfeltoltes.hu/131205/bench1_www.kepfeltoltes.hu_.png\n\nThe codes :\n\n```\n            ModelInstance instance = new ModelInstance(model);\n            instance.transform.setToTranslation(-4, 0, 0);\n            instance.transform.mul(transform.setToRotation(Axis.X, (float) (Math.random()*360)));\n```\n\n**in onCreate()**\n\n```\n        Gdx.gl.glClearDepthf(1.0f);\n        Gdx.gl.glEnable(GL20.GL_DEPTH_TEST);\n        Gdx.gl.glDepthFunc(GL20.GL_LESS);\n        Gdx.gl.glDepthRangef(0f, 1f);\n        Gdx.gl.glEnable(GL20.GL_TEXTURE_2D);\n```\n\n**in render()**\n\n```\n        Gdx.gl.glViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\n\n        Gdx.gl.glClearColor(.1f, .1f, .1f, 1f);\n        Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT | GL20.GL_DEPTH_BUFFER_BIT);\n```\n\nSo what is happening here?\n", "url": "https://github.com/libgdx/libgdx/issues/1057", "user": "ghost", "labels": ["bug"], "created": "2013-12-05 20:42:46", "closed": "2013-12-27 17:20:09", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "Possible bug in modelbatch.render", "body": "I've a 3d \"world\" with many planes. \n-  Each plane has a different size\n-  Each plane has a different _z_ coordinate\n-  Each plane is parallel to the others.\n-  Each plane moves around the x or y coordinates according to some user input.\n\nI've a field called _instances_ which is of type _Array<ModelInstance>_ the elements in this _instances_ array are inserted by _z_ sorting. (Eg: the element at index _'i'_ has a z value lower than any other element with _index>i_ )\n\nWhen In the render method i call the following\n\n``` java\n                    modelBatch.begin(cam);\n                    modelBatch.render(instances, environment);\n                    modelBatch.end();\n```\n\nIn some cases, some layers disappear going away. I don't think this is a z fighting cause i disabled the DEPTH_TEST in the render method and also because I tried with only 2 semi transparent layers and one simply disappeared.\n\nThe following code will perform a single ModelInstance draw per begin/end block And everything works as expected\n\n``` java\n            for (int i=0;i<instances.size; i++) {\n                    modelBatch.begin(cam);\n                    modelBatch.render(instances.get(i), environment);\n                    modelBatch.end();\n            }\n```\n\nFor a visual effect of what I mean take a look at the following pictures. In order to understand the pictures you've to know that\n- 2 semi transparent layers are drawn here\n- 1 contains the text \"TURN ON THE\" ( coordinates on right side of the screen: 5x, 5y, 5z)\n- 1 contains the text \"DARKEST OF TIMES\" (coordinates in the right side of the screen (4x, 4y, 4z)\n\n![glitch](https://dl.dropboxusercontent.com/u/2462575/Screenshot_2013-12-01-14-54-44.png)\n![notglitch](https://dl.dropboxusercontent.com/u/2462575/Screenshot_2013-12-01-14-54-49.png)\n", "url": "https://github.com/libgdx/libgdx/issues/1026", "user": "vekexasia", "labels": ["bug"], "created": "2013-12-01 20:15:51", "closed": "2014-01-09 10:43:25", "commits": {}, "ttf": 38.000277777777775, "commitsDetails": []}, {"title": "IOSGraphics returning wrong width and height", "body": "The dimensions returned by IOSGraphics.getWidth() and getHeight() don't seem to take into account whether the status bar is hidden, which leads to a \"squashed\" image if it's visible.\n\nTo test the bug, edit the Info.plist.xml file and change the value of the \"UIStatusBarHidden\" key to <false/>.\n", "url": "https://github.com/libgdx/libgdx/issues/1011", "user": "AbeJellinek", "labels": ["bug", "ios"], "created": "2013-11-28 04:09:55", "closed": "2014-02-11 22:02:19", "commits": {}, "ttf": 75.00027777777778, "commitsDetails": []}, {"title": "LwjglInput setCursorPosition and getY mouse origin inconsistent.", "body": "In getY the mouse position is manipulated to make the top left corner of the window the origin, while setCursorPosition uses the lower left corner as the origin.\n\nBecause of this the following snippet will cause the cursor to jump up and down on the y axis:\n\n``` java\nGdx.input.setCursorPosition(Gdx.input.getX(), Gdx.input.getY());\n```\n\nRelevant methods from LwjglInput.java:\n\n``` java\npublic int getY () {\n    return Gdx.graphics.getHeight() - 1 - Mouse.getY();\n}\n\npublic void setCursorPosition (int x, int y) {\n    Mouse.setCursorPosition(x, y - 1);\n}\n```\n", "url": "https://github.com/libgdx/libgdx/issues/1003", "user": "teomat", "labels": ["bug"], "created": "2013-11-25 20:12:49", "closed": "2013-12-26 16:59:48", "commits": {"5860df981ce3025aabc1e129435203f11213dd15": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 30.00027777777778, "commitsDetails": [{"commitHash": "5860df981ce3025aabc1e129435203f11213dd15", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["e8111a020b7e04029ebdc0e82b2bb5122ad7a839"], "nameRev": "5860df981ce3025aabc1e129435203f11213dd15 tags/1.0.0~375^2~4", "commitMessage": "Fix setCursorPosition to use top-left origin\n\nFixes #1003.\n", "commitDateTime": "2013-12-26 09:58:07", "authoredDateTime": "2013-12-26 09:58:07", "commitGitStats": [{"filePath": "backends/gdx-backend-lwjgl/src/com/badlogic/gdx/backends/lwjgl/LwjglInput.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LwjglInput.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.lwjgl.LwjglInput.setCursorPosition(int,int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5860df981ce3025aabc1e129435203f11213dd15"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.lwjgl.LwjglInput.setCursorPosition(int,int)"]}, {"title": "[RoboVM] Timer usually doesn't start", "body": "When running a LibGDX app under iOS using the RoboVM backend, the timer doesn't work. Here's a complete `ApplicationListener` to demonstrate the issue:\n\n```\npackage com.example;\n\nimport com.badlogic.gdx.ApplicationListener;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.graphics.GL10;\nimport com.badlogic.gdx.utils.Timer;\n\npublic class MyApplicationListener implements ApplicationListener {\n    @Override\n    public void create() {\n        Timer.schedule(new Timer.Task() {\n            @Override\n            public void run() {\n                System.exit(1);\n            }\n        }, 0, 1/30.0f);\n    }\n\n    @Override\n    public void resize(int width, int height) {}\n\n    @Override\n    public void render() {\n        Gdx.gl.glClearColor(((float)((++c)&0xFF))/((float)0xFF), 0, 0, 0);\n        Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);\n    }\n\n    @Override\n    public void pause() {}\n\n    @Override\n    public void resume() {}\n\n    @Override\n    public void dispose() { }\n\n    int c = 0;\n}\n```\n\nUnder iOS, this often continues to run, indicating the timer was never started. As a Java desktop app, this always exits immediately as expected. Sometimes it works in iOS, but most times it doesn't. After many clean-build-deploy-undeploy cycles, I have not yet observed a pattern. It is intermittent both in the simulator and on a device.\n\nUsing LibGDX 0.9.9 and RoboVM 0.0.6. Building with Maven.\n", "url": "https://github.com/libgdx/libgdx/issues/998", "user": "steve-taylor", "labels": ["bug", "ios"], "created": "2013-11-23 16:40:09", "closed": "2014-04-09 21:33:53", "commits": {}, "ttf": 137.00027777777777, "commitsDetails": []}, {"title": "Backspace and del key doesn't work in the HTML5 text input box on Mac OS X", "body": "Hi,\nthe backspace and del key doesn't work in the HTML5/GWT text input box on Mac OS X. You can't delete a character that you typed in the text input box. In iOS and the desktop project works it well. I tested the nightly build from today and the 0.9.9 version. Works it at someone?\n\n```\nGdx.input.getTextInput(new TextInputListener(){\n                @Override\n                public void input(String text) {\n\n                }\n\n                @Override\n                public void canceled() {\n\n                }\n\n            }, \"What is your name?\", \"\");\n```\n", "url": "https://github.com/libgdx/libgdx/issues/990", "user": "Andrej1A", "labels": ["bug", "gwt"], "created": "2013-11-22 14:57:56", "closed": "2014-05-22 17:15:21", "commits": {}, "ttf": 181.00027777777777, "commitsDetails": []}, {"title": "Minimize allocations for touch events (RoboVM backend)", "body": "Hi,\n\nThere seems to be a lot of object creation for touch events on robovm. This will then lead to gc hiccups. \n\n![screen shot 2013-11-21 at 11 20 27](https://f.cloud.github.com/assets/6010095/1600686/f992443a-5376-11e3-8430-47cd1ae6c382.png)\n\nsee https://groups.google.com/forum/#!topic/robovm/KFiP2iCxM2E\n", "url": "https://github.com/libgdx/libgdx/issues/988", "user": "ofey85", "labels": ["bug", "ios"], "created": "2013-11-22 13:08:16", "closed": "2014-05-06 21:14:56", "commits": {}, "ttf": 165.00027777777777, "commitsDetails": []}, {"title": "FileHandle.exists isn't coherent on iOS", "body": "It seems that by default libgdx fallbacks to the classpath for internal files, however, the exists() method is overridden in the IOSFileHandle class to only look at bare files.\nThis leads to situation where you can read() a file handle but its exists() method returns false.\nIs this intended ? If not would it suffice to remove the override exists method or does it serves another purpose ?\n\nThanks by advance.\n", "url": "https://github.com/libgdx/libgdx/issues/958", "user": "carnaval", "labels": ["bug", "ios"], "created": "2013-11-13 18:25:11", "closed": "2013-11-23 16:55:57", "commits": {"883f9a3d12729a11ad9d0104c2c28558354c3527": {"commitGHEventType": "closed", "commitUser": "MobiDevelop"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "883f9a3d12729a11ad9d0104c2c28558354c3527", "commitGHEventType": "closed", "commitUser": "MobiDevelop", "commitParents": ["0f3cb4e455a31e2ac855736364d541855ec2295f"], "nameRev": "883f9a3d12729a11ad9d0104c2c28558354c3527 tags/1.0.0~444^2~3", "commitMessage": "Fix existence check.\n\nThe file() method should always be used in case the FileHandle\nimplementation needs to append a path to accurately represent the file.\nFixes #958.\n", "commitDateTime": "2013-11-23 09:51:56", "authoredDateTime": "2013-11-23 09:51:56", "commitGitStats": [{"filePath": "backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSFileHandle.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "gdx/src/com/badlogic/gdx/files/FileHandle.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IOSFileHandle.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.backends.iosrobovm.IOSFileHandle.exists()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "FileHandle.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.files.FileHandle.exists()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["883f9a3d12729a11ad9d0104c2c28558354c3527"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 6, "lines": 7, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx", "backends"], "changesInPackagesSPOON": ["com.badlogic.gdx.backends.iosrobovm.IOSFileHandle.exists()", "com.badlogic.gdx.files.FileHandle.exists()"]}, {"title": "Fatal Exception java.lang.ArrayIndexOutOfBoundsException ndroidMultiTouchHandler.java line 48 com.badlogic.gdx.backends.android.AndroidMultiTouchHandler.onTouch", "body": "ok here is some execution code that caused it although i dont beleive it is the code since this crash happened twice on 2 different devices at 2 different points in the game the first one was aimed when the user clicked the tips button and created this container\nImage Thing; \n    private void tipsContainerTable(){\n        final Table tipsTable = new Table();\n        tipsTable.setBackground(game_skin.getDrawable(\"hint-promt-background\"));\n        tipsTable.setSize(233, 270);\n        tipsTable.setPosition(Gdx.graphics.getWidth()/2 - tipsTable.getWidth()/2, \n                Gdx.graphics.getHeight());\n\n```\n    tipsTable.addAction(Actions.sequence(Actions.moveBy(0, \n            (-Gdx.graphics.getHeight() / 2 - tipsTable.getHeight() / 2),\n            1f, \n            Interpolation.swingOut)));\n\n\n\n    final Table tips_good = new Table();\n    final Table tips_bad = new Table();\n\n\n    ScrollPaneStyle scrollPaneStyle = new ScrollPaneStyle();\n    final ScrollPane scroll_good = new ScrollPane(tips_good, scrollPaneStyle);\n    final ScrollPane scroll_badd = new ScrollPane(tips_bad, scrollPaneStyle);\n\n    //for loop good stuff\n    for(int i = 0; i < 13; i++){\n        switch (i) {\n        case 0:\n             Thing = new Image(game_skin.getDrawable(\"hint-1up\"));\n            break;\n\n        case 1:\n             Thing = new Image(game_skin.getDrawable(\"hint-dandelion\"));\n            break;\n\n        case 2:\n             Thing = new Image(game_skin.getDrawable(\"hint-super-frog-powerup\"));\n            break;\n\n        case 3:\n             Thing = new Image(game_skin.getDrawable(\"hint-fly-frog-powerup\"));\n            break;\n\n        case 4:\n             Thing = new Image(game_skin.getDrawable(\"hint-high-jump-frog-powerup\"));\n            break;\n\n        case 5:\n             Thing = new Image(game_skin.getDrawable(\"hint-lazer-frog-powerup\"));\n            break;\n\n        case 6:\n             Thing = new Image(game_skin.getDrawable(\"hint-powerup-container\"));\n            break;\n\n        case 7:\n             Thing = new Image(game_skin.getDrawable(\"hint-ruby-b\"));\n            break;\n\n        case 8:\n             Thing = new Image(game_skin.getDrawable(\"hint-ruby-c\"));\n            break;\n\n        case 9:\n             Thing = new Image(game_skin.getDrawable(\"hint-ruby\"));\n            break;\n\n        case 10:\n             Thing = new Image(game_skin.getDrawable(\"hint-star-in-game\"));\n            break;\n\n        case 11:\n             Thing = new Image(game_skin.getDrawable(\"hint-tunnel\"));\n            break;\n\n        default:\n            break;\n        }\n        tips_good.add(Thing);\n        tips_good.row();\n    }\n\n    //for loop to add bad stuff\n    for(int i = 0; i < 9; i++){\n        switch (i) {\n        case 0:\n            Thing = new Image(game_skin.getDrawable(\"hint-bomb-green\"));\n            break;\n\n        case 1:\n            Thing = new Image(game_skin.getDrawable(\"hint-bomb-yellow\"));\n            break;\n\n        case 2:\n            Thing = new Image(game_skin.getDrawable(\"hint-crush-bug\"));\n            break;\n\n        case 3:\n            Thing = new Image(game_skin.getDrawable(\"hint-hover-bee\"));\n            break;\n\n        case 4:\n            Thing = new Image(game_skin.getDrawable(\"hint-mushroom\"));\n            break;\n\n        case 5:\n            Thing = new Image(game_skin.getDrawable(\"hint-red-seven\"));\n            break;\n\n        case 6:\n            Thing = new Image(game_skin.getDrawable(\"hint-side-bomb\"));\n            break;\n\n        case 7:\n            Thing = new Image(game_skin.getDrawable(\"hint-spike\"));\n            break;\n\n        case 8:\n            Thing = new Image(game_skin.getDrawable(\"hint-thorn-branch\"));\n            break;\n\n        default:\n            break;\n        }\n\n        tips_bad.add(Thing);\n        tips_bad.row();\n    }\n\n\n    ButtonStyle closebtnStyle = new ButtonStyle();\n    closebtnStyle.up = game_skin.getDrawable(\"close-icon-btn\");\n    closebtnStyle.down = game_skin.getDrawable(\"close-icon-btn-over\");\n    Button btn_closeButton = new Button(closebtnStyle);\n    btn_closeButton.addListener(new ClickListener() {\n        public void clicked(InputEvent event, float x, float y) {\n            Assets.playSound(Assets.sound_clickSound);\n            tipsTable.addAction(Actions.sequence(Actions.moveBy(0, \n                    -Gdx.graphics.getHeight(),\n                    1f,\n                    Interpolation.swingIn), \n                       Actions.run(new Runnable(){\n                                @Override\n                                public void run() {\n                                    settingMenu = false;    \n                                    tipsTable.clear();\n                                    tipsTable.remove();\n                                }\n                            })));\n        }\n    });\n\n    Image goodThumbUp = new Image(game_skin.getDrawable(\"good-thumbs-up\"));\n    goodThumbUp.setScaling(Scaling.none);\n\n    Image badThumbUp = new Image(game_skin.getDrawable(\"bad-thumbs-down\"));\n    badThumbUp.setScaling(Scaling.none);\n\n    tipsTable.add(goodThumbUp);\n    tipsTable.add(btn_closeButton);\n    tipsTable.add(badThumbUp);\n    tipsTable.row();\n    tipsTable.add(scroll_good).minHeight(200).maxHeight(200);\n    tipsTable.add();\n    tipsTable.add(scroll_badd).minHeight(200).maxHeight(200);\n\n    game_stage.addActor(tipsTable);\n}\n```\n\nthe second time the crash happened was when the user just started a new screen \n\npaste bin to crash A with the code i supplied \nhttp://pastebin.com/we7CcpA6\n\npaste bin at the second crash i dont know what code caused this one\nhttp://pastebin.com/tf1umW5U\n\nWhat steps will reproduce the problem in the fist one?\n1.start game\n2.choose level\n3.play hit pause hit the tips button create the container and crash\n\nWhat steps will reproduce the problem in the second one?\n1.start game main menu screen\n2.choose level next screen level select screen\n3.gamescreen.show(); = crash\n\nWhat is the expected output? What do you see instead?\nnot to have the game crash\ngame crashed\n\nWhat version of libgdx are you using? If not using the master git\nbranch, please try that before filing a bug.\n0.9.9\n", "url": "https://github.com/libgdx/libgdx/issues/945", "user": "EliDotNet", "labels": ["bug"], "created": "2013-11-10 10:51:11", "closed": "2013-12-24 14:16:07", "commits": {}, "ttf": 44.000277777777775, "commitsDetails": []}, {"title": "BasicBulletTest crashing with EXCEPTION_ACCESS_VIOLATION", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1700\n", "url": "https://github.com/libgdx/libgdx/issues/936", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 12:03:15", "closed": "2014-01-28 22:38:13", "commits": {}, "ttf": 80.00027777777778, "commitsDetails": []}, {"title": "Music \"blip\" when playing 2nd+ time", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1678\n", "url": "https://github.com/libgdx/libgdx/issues/933", "user": "badlogic", "labels": ["android", "bug"], "created": "2013-11-09 12:01:36", "closed": "2014-05-10 15:36:44", "commits": {}, "ttf": 182.00027777777777, "commitsDetails": []}, {"title": "GestureListener - touchUp event is not processed in one scenario", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1677\n", "url": "https://github.com/libgdx/libgdx/issues/932", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 12:00:49", "closed": "2013-11-23 20:10:25", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "[RoboVM] pause() and resume() not call on the device", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1676\n", "url": "https://github.com/libgdx/libgdx/issues/931", "user": "badlogic", "labels": ["bug", "ios"], "created": "2013-11-09 12:00:24", "closed": "2014-03-18 22:49:17", "commits": {}, "ttf": 129.00027777777777, "commitsDetails": []}, {"title": "InputMultiplexer / GestureDetector / tap triggers longpress in other GestureDetector", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1667\n", "url": "https://github.com/libgdx/libgdx/issues/930", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:59:52", "closed": "2014-02-15 20:34:31", "commits": {}, "ttf": 98.00027777777778, "commitsDetails": []}, {"title": "Intersection found is outside the triangle", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1651\n", "url": "https://github.com/libgdx/libgdx/issues/929", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:58:59", "closed": "2014-05-10 19:05:36", "commits": {}, "ttf": 182.00027777777777, "commitsDetails": []}, {"title": "PointLight Android Nexus 4 not working", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1646\n", "url": "https://github.com/libgdx/libgdx/issues/928", "user": "badlogic", "labels": ["android", "bug"], "created": "2013-11-09 11:58:25", "closed": "2013-12-01 14:17:43", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "html: Skin JSON containing numbers fails to deserialize correctly", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1640\n", "url": "https://github.com/libgdx/libgdx/issues/927", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:58:02", "closed": "2013-11-27 14:15:52", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "controllers extension from nightlies crashes on Mac", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1627\n", "url": "https://github.com/libgdx/libgdx/issues/926", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:57:20", "closed": "2014-07-09 11:20:17", "commits": {}, "ttf": 241.00027777777777, "commitsDetails": []}, {"title": "sound.play() dosen't loop on Nexus 4 Android 4.3", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1603\n", "url": "https://github.com/libgdx/libgdx/issues/925", "user": "badlogic", "labels": ["android", "bug"], "created": "2013-11-09 11:56:54", "closed": "2014-05-09 13:42:04", "commits": {}, "ttf": 181.00027777777777, "commitsDetails": []}, {"title": "InputProcessor not giving the correct mouse coordinates when Gdx.input.setCursorCatched(true)", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1596\n", "url": "https://github.com/libgdx/libgdx/issues/924", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:56:24", "closed": "2014-05-10 15:35:22", "commits": {}, "ttf": 182.00027777777777, "commitsDetails": []}, {"title": "Input.setCursorCatched() not actually confining the mouse", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1595\n", "url": "https://github.com/libgdx/libgdx/issues/923", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:55:49", "closed": "2014-05-10 15:33:07", "commits": {"79643e7e89601f1b80db16a39bbdaec4cef70869": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 182.00027777777777, "commitsDetails": [{"commitHash": "79643e7e89601f1b80db16a39bbdaec4cef70869", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["95b0f36f3ec663701af3ea66254ec6f63b5d6800"], "nameRev": "79643e7e89601f1b80db16a39bbdaec4cef70869 tags/1.1.0~56^2~15", "commitMessage": "fixed issue #923, added Javadocs explaining what happens to x and y coords when the mouse is catched\n", "commitDateTime": "2014-05-10 17:32:40", "authoredDateTime": "2014-05-10 17:32:40", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/Input.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Input.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["79643e7e89601f1b80db16a39bbdaec4cef70869"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"]}, {"title": "Pixmap drawPixel function not working correctly for RGBA4444 format", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1588\n", "url": "https://github.com/libgdx/libgdx/issues/922", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:55:20", "closed": "2014-02-11 22:29:19", "commits": {}, "ttf": 94.00027777777778, "commitsDetails": []}, {"title": "Bad getPosition() method values from Music class on PC", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1584\n", "url": "https://github.com/libgdx/libgdx/issues/921", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:54:54", "closed": "2014-05-10 15:26:53", "commits": {}, "ttf": 182.00027777777777, "commitsDetails": []}, {"title": "No point lights on Android with OpenGL 2.0 enabled", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1566\n", "url": "https://github.com/libgdx/libgdx/issues/920", "user": "badlogic", "labels": ["android", "bug"], "created": "2013-11-09 11:54:27", "closed": "2013-12-01 14:18:34", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Don't stop AndroidLiveWallpaper when the AndroidDayDream starts", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1442\n", "url": "https://github.com/libgdx/libgdx/issues/919", "user": "badlogic", "labels": ["android", "bug"], "created": "2013-11-09 11:54:02", "closed": "2014-05-09 19:47:13", "commits": {}, "ttf": 181.00027777777777, "commitsDetails": []}, {"title": "screenUtils.getFramBufferTexture() not working on hardware (again)", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1399\n", "url": "https://github.com/libgdx/libgdx/issues/917", "user": "badlogic", "labels": ["android", "bug"], "created": "2013-11-09 11:53:05", "closed": "2014-02-11 21:31:26", "commits": {}, "ttf": 94.00027777777778, "commitsDetails": []}, {"title": "libgdx+Box2D on JRE7/Win, impact force is \"Infinity\"", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1398\n", "url": "https://github.com/libgdx/libgdx/issues/916", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:52:36", "closed": "2014-05-08 15:39:47", "commits": {}, "ttf": 180.00027777777777, "commitsDetails": []}, {"title": "Mp3 decoding invalid memory access", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1382\n", "url": "https://github.com/libgdx/libgdx/issues/914", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:51:30", "closed": "2014-05-03 04:46:58", "commits": {}, "ttf": 174.00027777777777, "commitsDetails": []}, {"title": "BitmapFont/FreeTypeFont glyphs cut off for small fonts", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1380\n", "url": "https://github.com/libgdx/libgdx/issues/913", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:51:07", "closed": "2014-05-10 15:20:14", "commits": {}, "ttf": 182.00027777777777, "commitsDetails": []}, {"title": "Android backend resumes audio too soon on phone unlock", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1326\n", "url": "https://github.com/libgdx/libgdx/issues/912", "user": "badlogic", "labels": ["android", "bug"], "created": "2013-11-09 11:50:33", "closed": "2014-02-11 22:09:39", "commits": {}, "ttf": 94.00027777777778, "commitsDetails": []}, {"title": "Controller extension needs to re-register after losing window handle", "body": "See https://code.google.com/p/libgdx/issues/detail?id=1219\n", "url": "https://github.com/libgdx/libgdx/issues/910", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:49:35", "closed": "2014-05-01 18:45:54", "commits": {}, "ttf": 173.00027777777777, "commitsDetails": []}, {"title": "intersectRayTriangle returns false for some edge cases", "body": "See https://code.google.com/p/libgdx/issues/detail?id=968\n", "url": "https://github.com/libgdx/libgdx/issues/907", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:47:24", "closed": "2014-05-10 19:30:13", "commits": {}, "ttf": 182.00027777777777, "commitsDetails": []}, {"title": "Deadlock when pausing and view is hidden on Android", "body": "See https://code.google.com/p/libgdx/issues/detail?id=817\n", "url": "https://github.com/libgdx/libgdx/issues/904", "user": "badlogic", "labels": ["android", "bug"], "created": "2013-11-09 11:45:16", "closed": "2014-01-09 15:20:21", "commits": {}, "ttf": 61.000277777777775, "commitsDetails": []}, {"title": "XmlReader with specific xml comments cause Error parsing file", "body": "See https://code.google.com/p/libgdx/issues/detail?id=575\n", "url": "https://github.com/libgdx/libgdx/issues/902", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:43:21", "closed": "2013-11-16 18:00:28", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "On screen keyboard not visible when starting in landscape orientation", "body": "See https://code.google.com/p/libgdx/issues/detail?id=431\n", "url": "https://github.com/libgdx/libgdx/issues/901", "user": "badlogic", "labels": ["bug"], "created": "2013-11-09 11:42:18", "closed": "2014-05-03 18:23:08", "commits": {}, "ttf": 175.00027777777777, "commitsDetails": []}, {"title": "RoboVM backend stage scaling bug", "body": "I have a stage in libgdx app. If I implement resize like this:\n\npublic void resize (int width, int height) {\n    stage.setViewport(800, 480, true);\n    stage.getCamera().translate(-stage.getGutterWidth(), -stage.getGutterHeight(), 0);\n}\nIt works well. On iPad I'm getting black bars on top and bottom, so it works just like expected. The problem is I have some objects outside stage and they're drawing on black bars. So the next method from docs should do the work:\n\npublic void resize (int width, int height) {\n    Vector2 size = Scaling.fit.apply(800, 480, width, height);\n    int viewportX = (int)(width - size.x) / 2;\n    int viewportY = (int)(height - size.y) / 2;\n    int viewportWidth = (int)size.x;\n    int viewportHeight = (int)size.y;\n    Gdx.gl.glViewport(viewportX, viewportY, viewportWidth, viewportHeight);\n    stage.setViewport(800, 480, true, viewportX, viewportY, viewportWidth, viewportHeight);\n}\n\nBut it doesn't. The stage is drawn on the whole screen, so everything is stretched. But it looks like stage touches works only in right place and only \"visual\" stage is force to fill screen.\n\nBut If I run this on desktop and set the same dimension as iPad I'm getting black bars and everything goes well.\n\nMy logs from iPad and desktop:\n\n[info] dims: 1024, 768\n[info] viewport: 0, 76, 1024, 614\n\ndims: 1024, 768\nviewport: 0, 76, 1024, 614\n\nPlease fix it :)\n", "url": "https://github.com/libgdx/libgdx/issues/897", "user": "makalele2", "labels": ["bug", "ios"], "created": "2013-11-08 12:28:22", "closed": "2014-02-11 22:10:54", "commits": {}, "ttf": 95.00027777777778, "commitsDetails": []}, {"title": "Circular dependencies in AssetManager cause unload exception", "body": "When disposing the AssetManager, circular dependencies in our assets cause the reference counter of dependencies to decrease too quickly.\n\nThis is the code that causes problems with the circular dependency, as you can see, this will loop between assets that depend on each other and eventually crash:\n\n``` java\npublic synchronized void unload (String fileName) {\n\n    ...\n\n    // get the asset and its type\n    Class type = assetTypes.get(fileName);\n    if (type == null) throw new GdxRuntimeException(\"Asset not loaded: \" + fileName);\n\n    ...\n\n    // remove any dependencies (or just decrement their ref count).\n    Array<String> dependencies = assetDependencies.get(fileName);\n    if (dependencies != null) {\n        for (String dependency : dependencies) {\n            unload(dependency);\n        }\n    }\n\n    ...\n}\n```\n\nWe patched the problem by adding an if-statement before unloading the dependency:\n\n``` java\npublic synchronized void unload (String fileName) {\n\n    ...\n\n    // remove any dependencies (or just decrement their ref count).\n    Array<String> dependencies = assetDependencies.get(fileName);\n    if (dependencies != null) {\n        for (String dependency : dependencies) {\n            if (isLoaded(dependency)) unload(dependency);\n        }\n    }\n\n    ...\n}\n```\n\nThis might seem to you like it's just a problem with our assets we need to fix, but it's a little more complicated than that. I'll try to explain:\n\nOur project uses lazy asset references to tackle object serialization problems: when an object (which is loaded in the AssetManager) contains references to other objects (also assets), instead of serializing the asset itself, we serialize a reference to that asset, which can, after all assets have been loaded in the AssetManager, retrieve and internally cache the assets from the AssetManager.\n\nThis means that our JsonLoader (an instance of AssetLoader) inspects the object (using the ClassReflection methods) in the getDependencies() stage to see if there are any assets which need to be loaded to make sure the AssetManager loads all of the assets internal asset references. These assets are therefore added as dependency of this object being deserialized. Therefore: when A has a reference to B and B to A, the loading code works fine, but the unloading code crashes. The only way to fix this seems to be stepping away from the automated dependency loading, which would be quite a pain for us.\n\nAre there any ideas/suggestions how we can tackle this problem?\n", "url": "https://github.com/libgdx/libgdx/issues/879", "user": "gerritdrost", "labels": ["bug"], "created": "2013-10-28 16:57:55", "closed": "2014-05-10 15:12:19", "commits": {"95b0f36f3ec663701af3ea66254ec6f63b5d6800": {"commitGHEventType": "referenced", "commitUser": "badlogic"}}, "ttf": 193.00027777777777, "commitsDetails": [{"commitHash": "95b0f36f3ec663701af3ea66254ec6f63b5d6800", "commitGHEventType": "referenced", "commitUser": "badlogic", "commitParents": ["f5c19b8b5b67f8be5224488860abdce29b167c59"], "nameRev": "95b0f36f3ec663701af3ea66254ec6f63b5d6800 tags/1.1.0~56^2~16", "commitMessage": "fixed issue #879, unloading of circular dependencies in AssetManager would go into infinite recursion\n", "commitDateTime": "2014-05-10 17:12:14", "authoredDateTime": "2014-05-10 17:12:14", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/assets/AssetManager.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AssetManager.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.assets.AssetManager.unload(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["95b0f36f3ec663701af3ea66254ec6f63b5d6800"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": ["com.badlogic.gdx.assets.AssetManager.unload(java.lang.String)"]}, {"title": "BitmapFont has issues in rendering glyphs packed into a texture atlas", "body": "Not sure if it's a bug, but seems like that with certain CJK fonts (at least with https://github.com/android/platform_frameworks_base/blob/master/data/fonts/MTLc3m.ttf?raw=true) there are issues in creating BitmapFont objects out of glyphs packed into a texture atlas.\n\nI've put some sample code at https://gist.github.com/agatti/7180052 to reproduce the issue with the font mentioned above.  When running that code, I should see the Japanese glyph \u3059 four times in different colours, using two font sizes (two Label objects, plus one raw TextureRegion drawn in a SpriteBatch, along with a call to BitmapFont.draw), however I only see the first CJK font and the TextureRegion drawn on screen (the label with the second CJK font and the BitmapFont.draw call won't show up).  I've debugged the issue a bit and seems like that the UV/U2V2 coordinates in the TextureRegion and what's being passed from BitmapCache differ, but I don't really see why this happens.\n\nThank you.\n", "url": "https://github.com/libgdx/libgdx/issues/876", "user": "agatti", "labels": ["bug"], "created": "2013-10-27 10:40:35", "closed": "2014-05-10 15:02:49", "commits": {}, "ttf": 195.00027777777777, "commitsDetails": []}, {"title": "Pools.freeAll() should check for null objects", "body": "Pools.freeAll() method differs slightly from Pool.freeAll in that it doesn't check whether the array objects are null, thus resulting in a possible NPE. \n\nThe code in Pools is:\n\n``` java\nfor (int i = 0, n = objects.size; i < n; i++) {\n    Object object = objects.get(i);\n    ReflectionPool pool = typePools.get(object.getClass());\n```\n\nThe corresponding code in Pool.freeAll is:\n\n``` java\nfor (int i = 0; i < objects.size; i++) {\n    T object = objects.get(i);\n    if (object == null) continue;\n```\n\nA similar null check in Pools would do the trick.\n", "url": "https://github.com/libgdx/libgdx/issues/857", "user": "apotapov", "labels": ["bug"], "created": "2013-10-22 18:36:52", "closed": "2013-10-24 17:18:48", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Quaternion.setFromAxes() does not work for scaled matrices", "body": "Quaternion.setFromAxes() (and therefore Quaternion.setFromMatrix() and Matrix4.getRotation()) does not produce correct results for scaled matrices. A proposed fix is to normalize all axes, although this might not be a good idea for performance reasons.\n", "url": "https://github.com/libgdx/libgdx/issues/820", "user": "theagentd", "labels": ["bug"], "created": "2013-10-09 23:46:58", "closed": "2014-02-11 19:08:22", "commits": {"8375c1644627c05b23a75f7e0740b2faaf208abc": {"commitGHEventType": "closed", "commitUser": "xoppa"}}, "ttf": 124.00027777777778, "commitsDetails": [{"commitHash": "8375c1644627c05b23a75f7e0740b2faaf208abc", "commitGHEventType": "closed", "commitUser": "xoppa", "commitParents": ["d8fa1de2abc7849c97a7feafb5f51978cb2ea8aa"], "nameRev": "8375c1644627c05b23a75f7e0740b2faaf208abc tags/1.0.0~277^2~14^2^2~2", "commitMessage": "Normalize before getting rotation, fixes #820\n", "commitDateTime": "2014-02-11 19:54:23", "authoredDateTime": "2014-02-11 19:54:23", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/math/Matrix4.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "gdx/src/com/badlogic/gdx/math/Quaternion.java", "insertions": 77, "deletions": 31, "lines": 108}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Matrix4.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.math.Matrix4.getRotation(com.badlogic.gdx.math.Quaternion,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Quaternion.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.math.Quaternion.setFromAxes(float,float,float,float,float,float,float,float,float)", "TOT": 68, "UPD": 42, "INS": 1, "MOV": 24, "DEL": 1}, {"spoonMethodName": "com.badlogic.gdx.math.Quaternion.setFromMatrix(com.badlogic.gdx.math.Matrix4)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.math.Quaternion.setFromMatrix(boolean,com.badlogic.gdx.math.Matrix3)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.math.Quaternion.setFromMatrix(com.badlogic.gdx.math.Matrix3)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.math.Quaternion.setFromAxes(boolean,float,float,float,float,float,float,float,float,float)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.badlogic.gdx.math.Quaternion.setFromMatrix(boolean,com.badlogic.gdx.math.Matrix4)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8375c1644627c05b23a75f7e0740b2faaf208abc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 92, "deletions": 31, "lines": 123, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 75, "UPD": 42, "INS": 8, "MOV": 24, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.math.Quaternion.setFromMatrix(boolean,com.badlogic.gdx.math.Matrix4)", "com.badlogic.gdx.math.Quaternion.setFromAxes(float,float,float,float,float,float,float,float,float)", "com.badlogic.gdx.math.Quaternion.setFromMatrix(boolean,com.badlogic.gdx.math.Matrix3)", "com.badlogic.gdx.math.Quaternion.setFromMatrix(com.badlogic.gdx.math.Matrix4)", "com.badlogic.gdx.math.Matrix4.getRotation(com.badlogic.gdx.math.Quaternion,boolean)", "com.badlogic.gdx.math.Quaternion.setFromAxes(boolean,float,float,float,float,float,float,float,float,float)", "com.badlogic.gdx.math.Quaternion.setFromMatrix(com.badlogic.gdx.math.Matrix3)"]}, {"title": "Memory leak loading music or sound with AssetManager", "body": "Instruments can detect a memory leak if I use an AssetManager to load sounds or music like that:\n\nam.load(\"sound/somesound.wav\", Sound.class);  //am.update() is called on render(..)\n\ncalling am.finishLoading(); immediately after that line does not help.\n\nwhat's interesting is that creating a sound or music like this:\n\nmusic = Gdx.audio.newMusic(Gdx.files.internal(\"sound/somemusic.mp3\"));\n\ndoes not create a memory leak.\n\n![bildschirmfoto 2013-10-09 um 23 48 23](https://f.cloud.github.com/assets/2501804/1302045/c62039e8-312c-11e3-87ed-a885d0677a57.png)\n", "url": "https://github.com/libgdx/libgdx/issues/819", "user": "TheAndroidMachine", "labels": ["bug", "ios"], "created": "2013-10-09 21:51:16", "closed": "2014-05-10 13:43:54", "commits": {}, "ttf": 212.00027777777777, "commitsDetails": []}, {"title": "Scen2d Dialog: stageBackground from atlas file does not cover whole stage", "body": "This is quite similar to #800 \n\nWhen using a sprite from an atlas file the stageBackground does not cover the whole stage.\n\nNote that the testcode requires a file main.atlas with a region 'white' in it.\n\n```\npackage com.rustybyte.steamtd.desktop;\n\nimport com.badlogic.gdx.ApplicationAdapter;\nimport com.badlogic.gdx.Gdx;\nimport com.badlogic.gdx.backends.lwjgl.LwjglApplication;\nimport com.badlogic.gdx.graphics.Color;\nimport com.badlogic.gdx.graphics.GL10;\nimport com.badlogic.gdx.graphics.g2d.BitmapFont;\nimport com.badlogic.gdx.graphics.g2d.Sprite;\nimport com.badlogic.gdx.graphics.g2d.TextureAtlas;\nimport com.badlogic.gdx.scenes.scene2d.Stage;\nimport com.badlogic.gdx.scenes.scene2d.ui.Dialog;\nimport com.badlogic.gdx.scenes.scene2d.ui.Skin;\nimport com.badlogic.gdx.scenes.scene2d.ui.Window.WindowStyle;\nimport com.badlogic.gdx.scenes.scene2d.utils.Drawable;\nimport com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable;\n\npublic class Test extends ApplicationAdapter {\n    Stage stage;\n\n    @Override\n    public void create () {\n        stage = new Stage();\n\n        WindowStyle ws = new WindowStyle();\n        ws.titleFont = new BitmapFont();\n        ws.titleFontColor = Color.BLACK;\n        ws.background = createDrawable(Color.RED);\n        ws.stageBackground = createDrawable(Color.BLUE);\n\n        Skin skin = new Skin();\n        skin.add(\"default\", ws);\n        new Dialog(\"test\", skin).show(stage);\n    }\n\n    Drawable createDrawable (Color c) {\n        TextureAtlas atlas = new TextureAtlas(Gdx.files.internal(\"main.atlas\"));\n\n// From the atlas file:\n// white\n// rotate: false\n// xy: 467, 785\n// size: 1, 1\n// orig: 1, 1\n// offset: 0, 0\n// index: -1\n\n        Sprite s = atlas.createSprite(\"white\");\n        s.setColor(c);\n        return new SpriteDrawable(s);\n    }\n\n    @Override\n    public void render () {\n        Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);\n        Gdx.gl.glClearColor(1, 1, 0, 1);\n        stage.act();\n        stage.draw();\n    }\n\n    public static void main (String[] args) {\n        new LwjglApplication(new Test());\n    }\n}\n```\n\nOn the bottom and the right side the yellow background is not covered by the blue stageBackground:\n\n![image](https://f.cloud.github.com/assets/1545118/1276454/79671554-2e6b-11e3-9802-4514feadbf9f.png)\n", "url": "https://github.com/libgdx/libgdx/issues/802", "user": "hneuer", "labels": ["bug"], "created": "2013-10-06 09:45:51", "closed": "2013-10-06 19:07:37", "commits": {"0336d182e5a8e1b2e491e6604d1a7d03eff2187a": {"commitGHEventType": "referenced", "commitUser": "NathanSweet"}, "2ec84603abf265fafee4ce189cbeabe9dc6fb169": {"commitGHEventType": "closed", "commitUser": "NathanSweet"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0336d182e5a8e1b2e491e6604d1a7d03eff2187a", "commitGHEventType": "referenced", "commitUser": "NathanSweet", "commitParents": ["0ec1cb62862c880fbb5e6c611f28ac46f12d97bb"], "nameRev": "0336d182e5a8e1b2e491e6604d1a7d03eff2187a tags/0.9.9~58^2~1", "commitMessage": "OrthographicCamera was off by one pixel in both directions.\n\n#802\n", "commitDateTime": "2013-10-06 15:10:48", "authoredDateTime": "2013-10-06 15:10:48", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/graphics/OrthographicCamera.java", "insertions": 4, "deletions": 5, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrthographicCamera.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.OrthographicCamera.update(boolean)", "TOT": 11, "UPD": 0, "INS": 3, "MOV": 5, "DEL": 3}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2ec84603abf265fafee4ce189cbeabe9dc6fb169", "commitGHEventType": "closed", "commitUser": "NathanSweet", "commitParents": ["95d6d9197f269d9d35d6f0d72f9e30d4f121095f"], "nameRev": "2ec84603abf265fafee4ce189cbeabe9dc6fb169 tags/0.9.9~50", "commitMessage": "Adjust UVs for 1x1 texture regions.\n\ncloses #802\n", "commitDateTime": "2013-10-06 21:07:25", "authoredDateTime": "2013-10-06 21:07:25", "commitGitStats": [{"filePath": "gdx/src/com/badlogic/gdx/graphics/g2d/TextureRegion.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "tests/gdx-tests-lwjgl/src/com/badlogic/gdx/tests/lwjgl/Test2.java", "insertions": 0, "deletions": 60, "lines": 60}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TextureRegion.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.graphics.g2d.TextureRegion.setRegion(float,float,float,float)", "TOT": 9, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "Test2.java", "spoonMethods": [{"spoonMethodName": "com.badlogic.gdx.tests.lwjgl.Test2", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0336d182e5a8e1b2e491e6604d1a7d03eff2187a", "2ec84603abf265fafee4ce189cbeabe9dc6fb169"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 16, "deletions": 7, "lines": 23, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 20, "UPD": 0, "INS": 8, "MOV": 9, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["gdx"], "changesInPackagesSPOON": ["com.badlogic.gdx.graphics.g2d.TextureRegion.setRegion(float,float,float,float)", "com.badlogic.gdx.graphics.OrthographicCamera.update(boolean)"]}, {"title": "Image are flipped in Particle Editor preview window", "body": "To Reproduce:\n- open particle editor\n- open any image\n- image is shown flipped upside down\n\nHowever, when particle is saved then loaded from file image is shown normal.\n\nIt's also mentioned in this thread:\nhttp://www.badlogicgames.com/forum/viewtopic.php?f=11&t=3370&p=16574&hilit=particle+flipped#p16574\n", "url": "https://github.com/libgdx/libgdx/issues/798", "user": "saejox", "labels": ["bug"], "created": "2013-10-05 13:24:52", "closed": "2013-10-22 12:13:57", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "[Input] Swype Dictionary not showing", "body": "Swype keyboard does not function correctly. Whenever i focus on textfield swype dictionary bar is not showing up, it doesn't type any letters ( note numbers are fine ) in field unless I press space or enter.\n\nHowever if i switch to any app, for example google search, i open up my swype keyboard there then swap to the libgdx app I can get it show just one time, however input is still not reflected in textfield.\n\nPhone: Samsung Galaxy S2\n", "url": "https://github.com/libgdx/libgdx/issues/783", "user": "LooSik", "labels": ["bug"], "created": "2013-10-01 03:06:54", "closed": "2014-05-03 18:22:58", "commits": {}, "ttf": 214.00027777777777, "commitsDetails": []}, {"title": "Gdx.input.getPlaceholderTextInput and Gdx.input.getTextInput appear behind game window", "body": "This happens consistently in the Desktop version in Windows XP.\n\nI'm using the 9/13/13 nightlies.\n\nIt's pretty much a dealbreaker to expect the player to minimize the game to get at the dialog box.\n(My game runs in a 1200 x 800 window, not full screen)\n\nIt works fine in 32-bit Linux, but on Windows XP the pop-up dialog appears behind the game window. I tried running the JAR directly, and running the JAR from the command line. (I thought there might be a difference -- there wasn't)\n", "url": "https://github.com/libgdx/libgdx/issues/778", "user": "DeveloperMCD", "labels": ["bug"], "created": "2013-09-29 19:18:50", "closed": "2014-05-03 18:24:11", "commits": {}, "ttf": 215.00027777777777, "commitsDetails": []}, {"title": "iOS RoboVM backend Gdx.input.getTextInput crashes/freezes app", "body": "https://github.com/libgdx/libgdx/blob/master/backends/gdx-backend-robovm/src/com/badlogic/gdx/backends/iosrobovm/IOSInput.java in function buildUIAlertView\n\nTest case:\n\n```\nfinal UIAlertView uiAlertView = new UIAlertView();\nuiAlertView.setTitle(\"title\");\nuiAlertView.addButton(\"Cancel\");\nuiAlertView.addButton(\"Ok\");\nuiAlertView.setAlertViewStyle(UIAlertViewStyle.PlainTextInput);\nuiAlertView.setDelegate(delegate);\n\nuiAlertView.show();\n\nUITextField tf = uiAlertView.getTextField(0);\ntf.setText(\"input text\");\n```\n\nDelegate is created in same scope as UIAlertView.\nIt works as intended if delegate is:\n\n```\nUIAlertViewDelegate delegate = new UIAlertViewDelegate.Adapter()\n{\n    @Override\n    public void cancel(UIAlertView view){}\n};\n```\n\nBut it hangs on 3GS with iOS 5.1.1 (and 6.1 emulator) if delegate is:\n\n```\nUIAlertViewDelegate delegate = new UIAlertViewDelegate.Adapter()\n{\n    @Override\n    public void clicked(UIAlertView view, int clicked){}\n    @Override\n    public void cancel(UIAlertView view){}\n};\n```\n\nIf delegate is placed outside of this scope (f.e. as field in class) it works as expected.\nFor me it seems that delegate is garbage collected after exiting this function scope (uiAlertView has weak reference to delegate).\n", "url": "https://github.com/libgdx/libgdx/issues/773", "user": "n3o59hf", "labels": ["bug", "ios"], "created": "2013-09-26 11:56:35", "closed": "2014-02-11 23:43:42", "commits": {}, "ttf": 138.00027777777777, "commitsDetails": []}, {"title": "Problem of the getDeltaTime method on Robovm backend", "body": "Gdx.graphics.getDeltaTime:\n- Android: \n  System.out(798): 0.016878998\n  I/System.out(798): 0.016555\n  I/System.out(798): 0.017008333\n  I/System.out(798): 0.021605667\n  I/System.out(798): ---------------- Game PAUSE! ------------------\n  I/AndroidInput(798): sensor listener tear down\n  I/AndroidGraphics(798): paused\n  ..........\n  I/System.out(798): ---------------- Game RESUME! --------------------\n  I/AndroidGraphics(798): resumed\n  I/System.out(798): 0.003178333\n  I/System.out(798): 0.018956333\n  I/System.out(798): 0.017377\n  I/System.out(798): 0.015964\n- iOS: (simulator)\n  0.016682448\n  0.016924623\n  0.016373161\n  0.016685119\n  0.016688708\n  [debug] IOSApplication: paused\n  [debug] IOSApplication: resumed\n  6.7606277                              ------------------> ???????????\n  0.01706488\n  0.016952872\n  0.016331624\n  0.016594414\n  0.01705296\n", "url": "https://github.com/libgdx/libgdx/issues/771", "user": "hnvn", "labels": ["bug", "ios"], "created": "2013-09-25 09:39:42", "closed": "2014-03-18 22:48:39", "commits": {}, "ttf": 174.00027777777777, "commitsDetails": []}, {"title": "touched coordinate on the iOS", "body": "When i set viewport for my camera: \nGdx.gl.glViewport((int) _viewport.x, (int) _viewport.y,\n                          (int) _viewport.width, (int) _viewport.height);\n\ntouched coordinate is inaccurate!\n", "url": "https://github.com/libgdx/libgdx/issues/770", "user": "hnvn", "labels": ["bug", "ios"], "created": "2013-09-24 07:14:39", "closed": "2014-03-18 22:48:51", "commits": {}, "ttf": 175.00027777777777, "commitsDetails": []}, {"title": "RoboVM backend, black screen bug", "body": "Hi LibGDX team!\n\nIve ported my game from using monotouch backened to robovm, and it runs great! But sometimes the screen becomes black on resuming the game after a couple of hours. First the launcher image shows briefly (if you have launcher images set up-Default.png, Default@2x.png), then its replaced by a black screen. The continues to run with sound but nothing is rendered. Its almost as if the game loses the opengl context.\n\nResuming the game within a shorter period of time does not produce this issue (even after locking the device), the launcher image does not show in this case. Maybe we need to implement viewDidUnload or didReceiveMemoryWarning?. Im not familiar with iOS though.\n\nHappens on iPad Mini.\n\nAnyway, amazing work on the RoboVM alternative!\n", "url": "https://github.com/libgdx/libgdx/issues/742", "user": "AzmiTerato", "labels": ["bug", "ios"], "created": "2013-09-17 05:25:34", "closed": "2014-02-11 22:19:27", "commits": {}, "ttf": 147.00027777777777, "commitsDetails": []}, {"title": "Access to the actor when the action is completed", "body": "_From [name.is....@gmail.com](https://code.google.com/u/108411591485795789041/) on February 08, 2011 16:41:53_\n\nThere's actually no way to get the target of the action from\nOnActionCompleted, nor from the action itself (the class has setTarget, but no getter/public field).\n\nA solution would be to change the signature OnActionCompleted.completed to : \npublic void completed(Action action, Actor target)\n\nRegards,\nCarl\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=130_\n", "url": "https://github.com/libgdx/libgdx/issues/718", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:08:15", "closed": "2013-09-14 20:08:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "fix HelloWorld/Invaders", "body": "_From [badlogicgames](https://code.google.com/u/badlogicgames/) on February 08, 2011 16:25:07_\n\nSome folks report errors in those two projects. Seems like the commit of the API changes didn't get through. Fix this.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=129_\n", "url": "https://github.com/libgdx/libgdx/issues/717", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:08:12", "closed": "2013-09-14 20:08:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "TextureData has a problem", "body": "_From [badlogicgames](https://code.google.com/u/badlogicgames/) on February 08, 2011 09:19:47_\n\nSee Nate's test.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=127_\n", "url": "https://github.com/libgdx/libgdx/issues/715", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:08:06", "closed": "2013-09-14 20:08:08", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ParticleEmitter.setFlip(..) has no effect.", "body": "_From [moritzp...@gmail.com](https://code.google.com/u/110380137820502036004/) on February 07, 2011 23:45:49_\n\nWhen using the setFlip method on a ParticleEmitter it has no effect.\n\nThat i have to flip the emitter results in the fact that the y axis (in 2d space) is flipped upside down in contradiction to the particle editor. Maybe that is already a problem?\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=126_\n", "url": "https://github.com/libgdx/libgdx/issues/714", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:08:03", "closed": "2013-09-14 20:08:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Angle behaves unexpected in Particle Emitter", "body": "_From [moritzp...@gmail.com](https://code.google.com/u/110380137820502036004/) on February 07, 2011 22:18:21_\n\nFirst off heads off to the particle emitter.... awesome tool.\n\nOne things which caught me was the Angle control. When setting the High value to something and having Low at 0 and than creating two points on the Life line the particles get all erratic and shake on their place instead of moving in the angle direction. The graph shows a straight line with two points. See screenshot. Only when removing the point to the right the behavior is as expected.\n\nShouldn't a straight line mean the same thing no matter how many points are contained?\n\nThis happens on the jnlp version published on the badlogic blog.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=125_\n", "url": "https://github.com/libgdx/libgdx/issues/713", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:08:00", "closed": "2013-09-14 20:08:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Box2DTest.create is missing a call to Gdx.input.setInputProcessor(this);", "body": "_From [rolf.brocke@gmail.com](https://code.google.com/u/rolf.brocke@gmail.com/) on February 06, 2011 18:15:56_\n\nJust thought it should be there. I tried running SimpleTest and since Box2DTest implements InputProcessor I thought I'd be all good. Inputs didn't work though and being new to libgdx it took some time to figure out what was going on.\n\nI used MyFirstTriangle example, copied over Box2DTest and SimpleTest into the project's source path and have Triangle.java extend SimpleTest. Launching the app will show the boxes animating and colliding, but inputs won't work.\n\nModifying Box2DTest.create() to call Gdx.input.setInputProcessor(this); fixes this.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=122_\n", "url": "https://github.com/libgdx/libgdx/issues/710", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:07:48", "closed": "2013-09-14 20:07:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fade Actions on a Group to not affect their children", "body": "_From [moritzp...@gmail.com](https://code.google.com/u/110380137820502036004/) on February 05, 2011 23:08:58_\n\nWhen executing an Action on a Group like ScaleTo all the children are also effected by the Action. Aka they scale according to the parent group. This does not apply to the Fade\\* Actions which modify the Color. the children do not get affected and therefore do not change their alpha.\n\nThe following snippet shows the behavior:\n\n=== Snippet ===\n\npublic class Test implements ApplicationListener {\n\n```\nprivate Stage stage;\n\nprivate Image image;\n\npublic void create() {\n    stage = new Stage(Gdx.graphics.getWidth(), Gdx.graphics.getHeight(), false);\n\n    Group group = new Group(\"bla\");\n\n    group.x = 100;\n    group.y = 100;\n\n    image = new Image(\"img\", new Texture(Gdx.files.internal(\"textures/black_marked_0.png\")));\n\n    group.addActor(image);\n\n    ScaleTo scaleTo = ScaleTo.$(3.0f, 3.0f, 3.0f);\n    FadeOut fadeOut = FadeOut.$(3.0f);\n    Parallel parallel = Parallel.$(scaleTo, fadeOut);\n\n    group.action(parallel);\n\n    stage.addActor(group);\n}\n\npublic void render() {\n    Gdx.gl10.glClearColor(0.5f, 0.5f, 0.5f, 1.0f);\n    Gdx.gl10.glClear(GL10.GL_COLOR_BUFFER_BIT);\n\n    stage.act(Gdx.graphics.getDeltaTime());\n    stage.render();\n}\n\npublic void resume() {\n}\n\npublic void resize(final int width, final int height) {\n}\n\npublic void pause() {\n}\n\npublic void dispose() {\n}\n```\n\n}\n\n=== Snippet ===\n\nWhen putting the Parallel Action directly onto the image and not on the group, the image does scale and fade. But putting the action directly on the group does only scale the image.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=121_\n", "url": "https://github.com/libgdx/libgdx/issues/709", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:07:45", "closed": "2013-09-14 20:07:47", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "JOGL and Android backend render differently", "body": "_From [moritzp...@gmail.com](https://code.google.com/u/110380137820502036004/) on February 05, 2011 21:13:12_\n\nThe JOGL backend renders wrong when using a Stage with an Actor which is rotated and most importantly using fractions in the x and y coordinates. \n\nThe attached screenshots shows the situation. We are seeing four actors forming a square with the same texture. Each texture is rotated to form a proper square with the borders. The actor in the lower left is not rotated and in its original orientation.\n\nOn the left image we see the false rendering with the x and y coordinates having a .5 value. The image on the right has rounded x and y coordinates so it does not show the error.\n\nTherefore we are probably dealing with a rounding issue.\n\nThe rendering problem does not appear on the on the android backend. I can not simply reproduce it with a simple test case but the screenshots originate from the very same code once the x value is rounded and once not.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=120_\n", "url": "https://github.com/libgdx/libgdx/issues/708", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:07:39", "closed": "2013-09-14 20:07:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "The composite Actions Sequence and Parallel do not propagate the OnActionCompleted to their child Actions", "body": "_From [moritzp...@gmail.com](https://code.google.com/u/110380137820502036004/) on February 05, 2011 20:19:45_\n\nThe title says it all.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=119_\n", "url": "https://github.com/libgdx/libgdx/issues/707", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 20:07:36", "closed": "2013-09-14 20:07:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "The Sequence and Parallel Action classes create objects when instantiated", "body": "_From [moritzp...@gmail.com](https://code.google.com/u/110380137820502036004/) on February 05, 2011 18:20:34_\n\nWhen a new Sequence or Parallel is created a varargs parameter is used to provide the subactions. These params are put into a newly created array every time the static $ method is called. This object creation will eventually be garbage collected which stops the program execution.\n\nIt would be better to pass an action array, which the user can control from the outside.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=118_\n", "url": "https://github.com/libgdx/libgdx/issues/706", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 20:07:32", "closed": "2013-09-14 20:07:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "OnActionCompleted listener is not removed when an Action finished", "body": "_From [moritzp...@gmail.com](https://code.google.com/u/110380137820502036004/) on February 05, 2011 18:14:38_\n\nWhen requesting an action it is expected to get a vanilla action without anything set but the params the user provided when getting it.\n\nSteps to reproduce:\n1. Obtain any kind of Action and set a OnActionCompleted listener\n2. Let the action executed so that it is finished (back in the pool)\n3. Get a new action of the same type. It has the previously set listener\n\nThe following snippet shows the problem. The sysout should print null all the time.\n\n=== Snippet ===\n\npublic class Test implements ApplicationListener {\n\n```\nprivate Stage stage;\n\nprivate Image image;\n\nclass Listener implements OnActionCompleted {\n\n    public void completed(final Action action) {\n        // do stuff\n    }\n\n}\n\npublic void create() {\n    stage = new Stage(400, 400, false);\n\n    image = new Image(\"img\", new Texture(Gdx.files.internal(\"textures/black.png\")));\n    stage.addActor(image);\n}\n\npublic void resume() {\n}\n\npublic void render() {\n\n    ScaleTo scale = ScaleTo.$(1.0f, 1.0f, 0.1f);\n    System.out.println(scale.getCompletionListener());\n\n    scale.setCompletionListener(new Listener());\n\n    image.action(scale);\n\n    stage.act(Gdx.graphics.getDeltaTime());\n}\n\npublic void resize(final int width, final int height) {\n}\n\npublic void pause() {\n}\n\npublic void dispose() {\n}\n```\n\n}\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=117_\n", "url": "https://github.com/libgdx/libgdx/issues/705", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:07:30", "closed": "2013-09-14 20:07:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Pixmap.drawCircle() is kaputt", "body": "_From [badlogicgames](https://code.google.com/u/badlogicgames/) on February 05, 2011 12:07:41_\n\nsee PixmapTest in test suite. User reported issues with line drawing and the color green as well. Sounds suspiciously like a one by off error somewhere.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=116_\n", "url": "https://github.com/libgdx/libgdx/issues/704", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:07:27", "closed": "2013-09-14 20:07:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Parallel Action NullPointerException", "body": "_From [can...@gmail.com](https://code.google.com/u/102115008550572502171/) on February 04, 2011 22:24:35_\n\nstacktrace:\nCaused by: java.lang.NullPointerException\n    at com.badlogic.gdx.scenes.scene2d.actions.Parallel.copy(Unknown Source)\n    at com.badlogic.gdx.scenes.scene2d.actions.Forever.act(Unknown Source)\n    at com.badlogic.gdx.scenes.scene2d.Actor.act(Unknown Source)\n    at com.badlogic.gdx.scenes.scene2d.Group.act(Unknown Source)\n    at com.badlogic.gdx.scenes.scene2d.Stage.act(Unknown Source)\n    at test.Test.render(Test.java:25)\n\nCan be reproduced with the Test file attached.\n\nI'm using the latest nightly (4 feb), may be it's related with the pool provider, but i couldn't get far because the debugger cannot point to source line number (i suppose debugging data is stripped from nightly, may be it would be better to include them, as lib users can help you spotting/fixing defects)\n\nregards,\n   Cani\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=114_\n", "url": "https://github.com/libgdx/libgdx/issues/702", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:07:12", "closed": "2013-09-14 20:07:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "AndroidSound cannot play sound.", "body": "_From [to.wan...@gmail.com](https://code.google.com/u/103495398839381203885/) on January 28, 2011 12:14:44_\n\nbackends/gdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidSound.java\n\nThe current code did not retry when the Android SoundPool failed to initialize. So in most of the cases, it cannot play any sounds. I make a patch to repair it. In the future, I think the libmpg123 is the right way to implement sound API.\n\n$ svn diff AndroidSound.java \n# Index: AndroidSound.java\n\n--- AndroidSound.java   ( revision 1428 )\n+++ AndroidSound.java   (working copy)\n@@ -1,11 +1,11 @@\n /*\n- Copyright 2010 Mario Zechner (contact@badlogicgames.com), Nathan Sweet (admin@esotericsoftware.com)\n  - \\* \n  - *\n- Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the\n- License. You may obtain a copy of the License at\n  - \\* \n  - *\n- http://www.apache.org/licenses/LICENSE-2.0 - \\* \n  - *\n- Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\"\n- BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language\n- governing permissions and limitations under the License.\n  @@ -19,6 +19,7 @@\n  import com.badlogic.gdx.audio.Sound;\n  \n  final class AndroidSound implements Sound {\n  -   private static final int RETRY = 3;\n    final SoundPool soundPool;\n    final AudioManager manager;\n    final int soundId;\n    @@ -38,8 +39,15 @@\n    }\n  \n  @Override public void play (float volume) {\n  -// int streamVolume = manager.getStreamVolume(AudioManager.STREAM_MUSIC);\n  -       soundPool.play(soundId, volume, volume, 1, 0, 1);\n  -        int streamid = 0;\n  -        int retry = 0;\n  -        do {\n  -          streamid = soundPool.play(soundId, volume, volume, 1, 0, 1.0f);\n  -          try {\n  -            Thread.sleep(50);\n  -          } catch (Exception e) {}\n  -        } while ( streamid == 0 && retry++ <= RETRY);\n    }\n  \n  }\n  +\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=106_\n", "url": "https://github.com/libgdx/libgdx/issues/694", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:06:34", "closed": "2013-09-14 20:06:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "No way to handle user canelling text input", "body": "_From [andrey.o...@gmail.com](https://code.google.com/u/116795291256733549846/) on January 27, 2011 19:30:05_\n\ngetTextInput function shows an input box asking user to enter text, and then is supposed to call function named input with entered text as argument, which I am overloading. The problem is that if a person pushes back button on his phone instead of pressing OK, input never gets called, which means that from program's standpoint there is no way to tell if user is still entering text or pressed back long ago. This is a problem.\n\nUsing nightly builds from 3-4 days ago.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=105_\n", "url": "https://github.com/libgdx/libgdx/issues/693", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:06:32", "closed": "2013-09-14 20:06:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "resume() not called at startup", "body": "_From [mjstonet...@gmail.com](https://code.google.com/u/108539097462832781931/) on January 21, 2011 22:40:59_\n\nWhat steps will reproduce the problem? 1. Load the invaders demo (.81)\n2. Put a breakpoint in GdxInvaders.resume()\n3. Debug the game.\n\nExpected: breakpoint hit (as specified on the Architecture docs). Actual behaviour: Breakpoint not hit. What version of the product are you using? On what operating system? .81, Windows / Eclipse\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=104_\n", "url": "https://github.com/libgdx/libgdx/issues/692", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:06:28", "closed": "2013-09-14 20:06:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Jogl Can't Find libopenal.dylib on OSX", "body": "_From [navar...@gmail.com](https://code.google.com/u/104269842067547605287/) on January 21, 2011 02:52:18_\n\nThis problem occurs with the latest nightly binaries (rev. 1390). What steps will reproduce the problem? 1. Create a class whose main method creates a new JoglApplication. \n2. Add gdx-backend-jogl.jar and gdx-backend-jogl-natives.jar to build path\n3. Build and run. What is the expected output? What do you see instead? The Jogl backend should load libopenal.dylib from gdx-backend-jogl-natives.jar/native/macosx/libopenal.dylib.  However, the actual path is gdx-backend-jogl-natives.jar/native/macosx/openal.dylib.\n\nThis causes the following error:\nException in thread \"main\" com.badlogic.gdx.utils.GdxRuntimeException: Creating window failed\n    at com.badlogic.gdx.backends.jogl.JoglApplication.<init>(Unknown Source)\n    at com.foo.test.main(test.java:33)\nCaused by: java.lang.reflect.InvocationTargetException\n    at java.awt.EventQueue.invokeAndWait(EventQueue.java:1034)\n    at javax.swing.SwingUtilities.invokeAndWait(SwingUtilities.java:1320)\n    ... 2 more\nCaused by: java.lang.RuntimeException: couldn't find libopenal.dylib in jar file.\n    at com.badlogic.gdx.backends.jogl.JoglNativesLoader.load(Unknown Source)\n    at com.badlogic.gdx.backends.jogl.JoglNativesLoader.loadLibraries(Unknown Source)\n    at com.badlogic.gdx.backends.jogl.JoglApplication.initialize(Unknown Source)\n    at com.badlogic.gdx.backends.jogl.JoglApplication$1.run(Unknown Source)\n    at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:199)\n    at java.awt.EventQueue.dispatchEvent(EventQueue.java:633)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:296)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:211)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:201)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:196)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:188)\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:122) What version of the product are you using? On what operating system? Using nightly build revision 1390 (downloaded January 19th, 2011), on OSX 10.6.6, using Eclipse Platform Version 3.6.1.r361_v20100909-9gF78GrkFqw7GrsZnvz0JWNTeb6fue6896L, with Build id: M20100909-0800. Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=102_\n", "url": "https://github.com/libgdx/libgdx/issues/690", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:06:19", "closed": "2013-09-14 20:06:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Input.isTouched() broken on Desktop", "body": "_From [xtophena...@gmail.com](https://code.google.com/u/106188873643963298482/) on January 18, 2011 11:40:11_\n\nWhat steps will reproduce the problem? It appears Input.isTouched() is broken in the latest nightly build on desktop. Android is working fine. Input.isTouched() correctly returns false initially, goes to true when a mouse button is pressed but does not go back to false when the button is released. Input.isTouched() stays on true after the initial button click. Everything else appears to be working fine. What version of the product are you using? On what operating system? Nightly Build 1/18/2010. Broken for Desktop. OK on Android.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=99_\n", "url": "https://github.com/libgdx/libgdx/issues/687", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:06:04", "closed": "2013-09-14 20:06:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Sequence Copy/Finish-Issue", "body": "_From [thomas.t...@googlemail.com](https://code.google.com/u/110759639387810803479/) on January 18, 2011 03:09:46_\n\nWhat steps will reproduce the problem? 1. Create a Sequence inside a Forever-Action. In my example I wanted an Image to ScaleUp and down all the time. It made: ScaleUp,Down,Up and from that point stopped scaling.\n\ne.g.:\nanyactor.action(Forever.$(Sequence.$(ScaleTo.$(1.1f, 1.1f,0.3f),ScaleTo.$(1f, 1f, 0.3f))));\n\nThe problem was the copy-mechanism of Sequence. Sequence called the finish()-method of every included action that is done. That is okay aslong you don't want to restart/copy the sequence.\n\nWhen ScaleTo obtains an unused ScaleTo-Action it retrieves the last finished action(which is still referenced in the sequence) (in my case the ScaleTo(1,1,0.3)) and sets the new values for the first ScaleTo of the Sequence (in this case ScaleTo(1.1,1.1,0.3))\nWhen the scale adds the second ScaleTo the values are already corrupted and the whole Sequence is trapped at the 1.1,1.1-Values.\n\nI know wrote it confuse but it was a very mind blowing debugging :D\n\nTo make the long story short, the Sequence's child-actions are now finished at the time the Sequence is finished. That solved at least my problem. BTW: What is about that $ as a method-name! Is that something special? Never saw that before :D What is the expected output? What do you see instead? What version of the product are you using? On what operating system? Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=98_\n", "url": "https://github.com/libgdx/libgdx/issues/686", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:06:00", "closed": "2013-09-14 20:06:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Pool.java appears to have incomplete newObject() function and the Array inside of it is private", "body": "_From [tamas...@gmail.com](https://code.google.com/u/114912866592413670525/) on January 14, 2011 23:53:17_\n\nI would like to use Pool.java to store all of my units but the newObject() function appears to be unfinished and when I extended it, I cannot see the inner Array because it is private\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=96_\n", "url": "https://github.com/libgdx/libgdx/issues/684", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:05:53", "closed": "2013-09-14 20:05:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Black screen in loading gdxtest as well as gdx-helloworld", "body": "_From [mewf...@gmail.com](https://code.google.com/u/114694344940924760515/) on January 09, 2011 03:53:31_\n\nWhat steps will reproduce the problem? 1. connect phone to pc with usb debugging\n2. change to sleep mode by pressing power button\n3. start the project(s) in eclipse to run in the device\n4. press power button to return from sleep mode What is the expected output? What do you see instead? Expected: both program run fine as it is\nInstead what I saw is black screen, back button etc all no response What version of the product are you using? On what operating system? latest version from svn Please provide any additional information below. I am not sure if this is a problem only in the case mentioned, if it is, it may not be important (programs won't run in sleep mode except usb debug). However, I am concerned whether this bug may appear on some other cases.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=92_\n", "url": "https://github.com/libgdx/libgdx/issues/680", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:05:28", "closed": "2013-09-14 20:05:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PerspectiveCamera shouldn't abouse projection matrix by default", "body": "_From [badlogicgames](https://code.google.com/u/badlogicgames/) on January 02, 2011 21:40:21_\n\nMesses with lighting and fog calculations. Make projection -> projection matrix, view -> model view the default.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=89_\n", "url": "https://github.com/libgdx/libgdx/issues/677", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:05:15", "closed": "2013-09-14 20:05:17", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Android Windows 64bit Error", "body": "_From [talkquazi@gmail.com](https://code.google.com/u/talkquazi@gmail.com/) on December 23, 2010 05:07:37_\n1. Download GDX Invaders\n2. Download Eclipse\n3. Runa As Java Application Windows 7 64bit Home Premium\n\nExpecting to see a windows build of the game instead i get the following error output.\n\nNOTE: That this error is only for the non android compile. The android version packs and works just fine.\n\nException in thread \"main\" com.badlogic.gdx.utils.GdxRuntimeException: Creating window failed\n    at com.badlogic.gdx.backends.jogl.JoglApplication.<init>(Unknown Source)\n    at com.badlogic.gdxinvaders.GdxInvadersDesktop.main(GdxInvadersDesktop.java:25)\nCaused by: java.lang.reflect.InvocationTargetException\n    at java.awt.EventQueue.invokeAndWait(Unknown Source)\n    at javax.swing.SwingUtilities.invokeAndWait(Unknown Source)\n    ... 2 more\nCaused by: java.lang.UnsatisfiedLinkError: C:\\Users\\Admin\\AppData\\Local\\Temp\\5928646645802gluegen-rt-win64.dll: &#37;1 is not a valid Win32 application\n    at java.lang.ClassLoader$NativeLibrary.load(Native Method)\n    at java.lang.ClassLoader.loadLibrary0(Unknown Source)\n    at java.lang.ClassLoader.loadLibrary(Unknown Source)\n    at java.lang.Runtime.load0(Unknown Source)\n    at java.lang.System.load(Unknown Source)\n    at com.badlogic.gdx.backends.jogl.JoglNativesLoader.loadLibrary(Unknown Source)\n    at com.badlogic.gdx.backends.jogl.JoglNativesLoader.loadLibraries(Unknown Source)\n    at com.badlogic.gdx.backends.jogl.JoglApplication.initialize(Unknown Source)\n    at com.badlogic.gdx.backends.jogl.JoglApplication$1.run(Unknown Source)\n    at java.awt.event.InvocationEvent.dispatch(Unknown Source)\n    at java.awt.EventQueue.dispatchEvent(Unknown Source)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n    at java.awt.EventDispatchThread.run(Unknown Source)\n\n0.81 - windows 7 64bit home premium\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=86_\n", "url": "https://github.com/libgdx/libgdx/issues/674", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:05:01", "closed": "2013-09-14 20:05:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "UnsatisfiedLinkError: Couldn't load gdx: findLibrary returned null", "body": "_From [UtMan1...@gmail.com](https://code.google.com/u/102404041570909118001/) on December 23, 2010 03:16:35_\n\nWhat steps will reproduce the problem? 1.Run Any Project referencing GDX What is the expected output? What do you see instead? Expected: The HelloWorld example from the website. Instead: Force close and this error. What version of the product are you using? On what operating system? gdx 0.81, Windows 7, Eclipse Java EE IDE for Web Developers (Galileo) Please provide any additional information below. The project is hosted on my friends server. He's running it on XP and it works, but I get this error on my Win7 machine. Any reason?\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=85_\n", "url": "https://github.com/libgdx/libgdx/issues/673", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:04:59", "closed": "2013-09-14 20:05:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "gdx compilation is broken since r1253", "body": "_From [igokoro](https://code.google.com/u/igokoro/) on December 22, 2010 09:55:24_\n\ngdx compilation is broken since r1253 as BitmapFont trying to use private member \"color\" of the SpriteBatch .\n\nEither give SpriteBatch .color member default (package) access modifier or return SpriteBatch .getColor().toFloatBits().\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=84_\n", "url": "https://github.com/libgdx/libgdx/issues/672", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:04:56", "closed": "2013-09-14 20:04:58", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Font color resets spriteBatch color", "body": "_From [tobias.w...@gmail.com](https://code.google.com/u/113866277779216050036/) on December 17, 2010 18:45:55_\n\nMaybe it is working as intended, but when I write a font to a spritebatch, the master blending color seems to change (to the font color).\n\nTo prevent this I have to use:\n        Color col=batch.getColor();\n        font.draw(batch, \"foo\", x, y);\n        batch.setColor(col);\n\nI think it would be better when the font uses \"his\" color but doesn't touch the master blending color of the spriteBatch.\n\nThis example illustrates the problem:\n    BitmapFont font;\n    font.setColor(Color.BLACK);\n    [...]\n    spriteBatch.setColor(1.0f,1.0f,1.0f,1.0f);\n    pinfo.render(); // playerinfo, renders a sprite and a text via font\n    otherobject.render(); // I see a black texture (because the blending has changed \"silently\")\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=81_\n", "url": "https://github.com/libgdx/libgdx/issues/669", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:04:43", "closed": "2013-09-14 20:04:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SpriteBatch & possibly SpriteCache shaders don't compile on ATI", "body": "_From [badlogicgames](https://code.google.com/u/badlogicgames/) on December 17, 2010 00:43:48_\n\nProblem: precision modifiers\nFix: #ifdef hell!\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=79_\n", "url": "https://github.com/libgdx/libgdx/issues/667", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:04:36", "closed": "2013-09-14 20:04:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Texture dimensions must be a power of two", "body": "_From [tobias.w...@gmail.com](https://code.google.com/u/113866277779216050036/) on December 14, 2010 15:11:31_\n\nAs far as I know OpenGL ES 2.0 doesn't need special texture dimensions with a power of two.\n\nIn JoglGraphicsBase.java:\nif (!isPowerOfTwo(pixmap.getHeight())\n        || !isPowerOfTwo(pixmap.getWidth()))\n    throw new GdxRuntimeException(\n        \"Texture dimensions must be a power of two\");\n\nI changed it to:\nif (gl!=gl20 && !isPowerOfTwo(pixmap.getHeight())\n...\n\nIt seems to work now.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=76_\n", "url": "https://github.com/libgdx/libgdx/issues/664", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:04:23", "closed": "2013-09-14 20:04:28", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Bug in setToOrtho2D?", "body": "_From [tobias.w...@gmail.com](https://code.google.com/u/113866277779216050036/) on December 14, 2010 09:57:22_\n\nTo make some things easier, I tried to set a camera which centers on 0,0 and with a width of 1024 pixels:\nspriteBatch.getProjectionMatrix().setToOrtho2D(-512, -512, 1024, 1024);\n\nBut this didn't work.\nI checked the libgfx-source and found:\n\npublic Matrix4 setToOrtho2D (float x, float y, float width, float height) {\n    setToOrtho(0, width, 0, height, 0, 1);\n    return this;\n}\n\nbut this seems incorrect. I changed it to:\n    setToOrtho(x, x+width, y, y+height, 0, 1);\nand now it works correctly.\n\nVersion: latest from trunk.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=75_\n", "url": "https://github.com/libgdx/libgdx/issues/663", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:04:20", "closed": "2013-09-14 20:04:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Backward compatibility fix", "body": "_From [liquidro...@gmail.com](https://code.google.com/u/104052605842022108362/) on December 12, 2010 16:38:37_\n\nWhen building libgdx in android 2.2 SDK to support SD card installation as mentioned in http://developer.android.com/guide/appendix/install-location.html , libgdx breaks(crash) on devices running android 1.6 or lower due to using undefined API to check for multitouch: PackageManager.hasSystemFeature()\n\nThis patch fixes that by using reflection method mentioned in http://developer.android.com/resources/articles/backward-compatibility.html to bind the API method dynamically for checking multitouch. When API method is not found, we can safely assume that there's no multitouch anyways.\n\nIt's sad that I did not notice this until it was too late. My game did not run for all 1.6 devices and got bad 1 star rating and > 50&#37; uninstall rate due to this. :-( Really hope those guys would come back and give our game another try before rating us crappy 1 star again. Ah well, what's done is done. At least the bug is spotted and fixed. ;-)\n\nBtw, I actually am reusing my lockless queue input patch hence I actually reverted my changes to build this patch. So it's untested but it should work.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=73_\n", "url": "https://github.com/libgdx/libgdx/issues/661", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 20:04:06", "closed": "2013-09-14 20:04:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unable to decode MP3 with Mpg123Decoder", "body": "_From [banthere...@gmail.com](https://code.google.com/u/101998865455852775403/) on December 12, 2010 00:04:00_\n\nWhat steps will reproduce the problem? Mpg123Decoder mDecoder;\nFileHandle mFile = Gdx.files.absolute(\"c:\\valid\\path\\to\\file.mp3\");\nif (mFile.exists()) mDecoder = new Mpg123Decoder(mFile.path());\n\n======================================================= What is the expected output? What do you see instead? Should instantiate mDecoder, but am getting java.lang.UnsatisfiedLinkError: com.badlogic.gdx.audio.io.Mpg123Decoder.openFile(Ljava/lang/String;)\n\nSee full stack trace at bottom of ticket.\n\n======================================================= What version of the product are you using? On what operating system? Lastest nightly build at 2:00pm PST on Dec, 11 2010. Window 7 Professional 64-bit.  Eclipse 3.5.  Tried both JOGL and LWJGL backends.\n\n======================================================= Please provide any additional information below. I have the latest nightly build which, per the new blog entry, should work without \"-Djava.library.path=libs/\" in arguments.  Tried both.  It compiles fine without the VM argument, but looks like Mpg123 isn't linking.\n# \n\nStack trace\n\nException in thread \"Thread-5\" javax.media.opengl.GLException: java.lang.UnsatisfiedLinkError: com.badlogic.gdx.audio.io.Mpg123Decoder.openFile(Ljava/lang/String;)J\n    at javax.media.opengl.Threading.invokeOnOpenGLThread(Threading.java:271)\n    at javax.media.opengl.GLCanvas.maybeDoSingleThreadedWorkaround(GLCanvas.java:410)\n    at javax.media.opengl.GLCanvas.display(GLCanvas.java:244)\n    at com.badlogic.gdx.backends.jogl.JoglAnimator.display(Unknown Source)\n    at com.badlogic.gdx.backends.jogl.JoglAnimator$MainLoop.run(Unknown Source)\n    at java.lang.Thread.run(Unknown Source)\nCaused by: java.lang.UnsatisfiedLinkError: com.badlogic.gdx.audio.io.Mpg123Decoder.openFile(Ljava/lang/String;)J\n    at com.badlogic.gdx.audio.io.Mpg123Decoder.openFile(Native Method)\n    at com.badlogic.gdx.audio.io.Mpg123Decoder.<init>(Unknown Source)\n    at com.btr.basement.audio.Track.<init>(Track.java:63)\n    at com.btr.basement.audio.Deck.load(Deck.java:77)\n    at com.btr.basement.view.Load.fileSelected(Load.java:205)\n    at com.btr.basement.view.Load.update(Load.java:301)\n    at com.btr.basement.view.ViewManager.update(ViewManager.java:157)\n    at com.btr.basement.Basement.render(Basement.java:52)\n    at com.badlogic.gdx.backends.jogl.JoglGraphics.display(Unknown Source)\n    at com.sun.opengl.impl.GLDrawableHelper.display(GLDrawableHelper.java:78)\n    at javax.media.opengl.GLCanvas$DisplayAction.run(GLCanvas.java:435)\n    at com.sun.opengl.impl.GLDrawableHelper.invokeGL(GLDrawableHelper.java:194)\n    at javax.media.opengl.GLCanvas$DisplayOnEventDispatchThreadAction.run(GLCanvas.java:452)\n    at java.awt.event.InvocationEvent.dispatch(Unknown Source)\n    at java.awt.EventQueue.dispatchEvent(Unknown Source)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n    at java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n    at java.awt.EventDispatchThread.run(Unknown Source)\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=72_\n", "url": "https://github.com/libgdx/libgdx/issues/660", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 20:04:02", "closed": "2013-09-14 20:04:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Box2d Contact has not warp 'normal force' and 'tangent force' attribute", "body": "_From [hanjiaju...@gmail.com](https://code.google.com/u/106208892235623268106/) on December 08, 2010 10:28:02_\n\nBox2d Contact has not warp 'normal force' and 'tangent force' attribute.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=69_\n", "url": "https://github.com/libgdx/libgdx/issues/657", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:03:49", "closed": "2013-09-14 20:03:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "LineUnavailableException when trying to run GdxInvaders.", "body": "_From [lex...@gmail.com](https://code.google.com/u/115833908953066593809/) on November 25, 2010 02:32:02_\n\n== System: ==\nArch Linux, 64 bit.\n\n== Command line (from the invaders dir): ==\n\njava -cp bin:libs/gdx.jar:libs/gdx-backend-jogl.jar -Djava.library.path=\"libs\" com.badlogic.gdxinvaders.GdxInvadersDesktop\n\n== Exception: ==\n\nException in thread \"Thread-3\" javax.media.opengl.GLException: com.badlogic.gdx.utils.GdxRuntimeException: Couldn't create Music instance from file 'data/8.12.mp3'\n        at javax.media.opengl.Threading.invokeOnOpenGLThread(Threading.java:271)\n        at javax.media.opengl.GLCanvas.maybeDoSingleThreadedWorkaround(GLCanvas.java:410)\n        at javax.media.opengl.GLCanvas.display(GLCanvas.java:244)\n        at com.badlogic.gdx.backends.jogl.JoglAnimator.display(Unknown Source)\n        at com.badlogic.gdx.backends.jogl.JoglAnimator$MainLoop.run(Unknown Source)\n        at java.lang.Thread.run(Thread.java:662)\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: Couldn't create Music instance from file 'data/8.12.mp3'\n        at com.badlogic.gdx.backends.jogl.JoglAudio.newMusic(Unknown Source)\n        at com.badlogic.gdxinvaders.GdxInvaders.create(GdxInvaders.java:75)\n        at com.badlogic.gdx.backends.jogl.JoglGraphics.init(Unknown Source)\n        at com.sun.opengl.impl.GLDrawableHelper.init(GLDrawableHelper.java:72)\n        at javax.media.opengl.GLCanvas$InitAction.run(GLCanvas.java:418)\n        at com.sun.opengl.impl.GLDrawableHelper.invokeGL(GLDrawableHelper.java:189)\n        at javax.media.opengl.GLCanvas$DisplayOnEventDispatchThreadAction.run(GLCanvas.java:452)\n        at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:199)\n        at java.awt.EventQueue.dispatchEvent(EventQueue.java:597)\n        at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:269)\n        at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:184)\n        at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:174)\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:169)\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:161)\n        at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)\nCaused by: javax.sound.sampled.LineUnavailableException: line with format PCM_SIGNED 44100.0 Hz, 16 bit, stereo, 4 bytes/frame, little-endian not supported.\n        at com.sun.media.sound.DirectAudioDevice$DirectDL.implOpen(DirectAudioDevice.java:494)\n        at com.sun.media.sound.AbstractDataLine.open(AbstractDataLine.java:107)\n        at com.sun.media.sound.AbstractDataLine.open(AbstractDataLine.java:139)\n        at com.badlogic.gdx.backends.jogl.JoglMusic.<init>(Unknown Source)\n        ... 15 more\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=68_\n", "url": "https://github.com/libgdx/libgdx/issues/656", "user": "badlogic", "labels": ["bug", "duplicate"], "created": "2013-09-14 20:03:45", "closed": "2013-09-14 20:03:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "javadoc for Pool is out of date", "body": "_From [matt.m.m...@gmail.com](https://code.google.com/u/101714263315039909468/) on November 19, 2010 01:56:33_\n\nWhat version of the product are you using? r703 Please provide any additional information below. The class level javadoc for com.badlogic.gdx.utils.Pool still refers to a freeAll() method which does not exist.  It also states there is no method for freeing individual objects, which is not true in the current version.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=67_\n", "url": "https://github.com/libgdx/libgdx/issues/655", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:03:42", "closed": "2013-09-14 20:03:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "UnsatisfiedLinkError", "body": "_From [cyberb...@gmail.com](https://code.google.com/u/116844202687557908193/) on November 16, 2010 16:53:30_\n\nWhat steps will reproduce the problem? 1. I download and import in my eclipse the gdx-helloworld-0.8.zip\n2. If i use new World() i obtain this error: java.lang.UnsatisfiedLinkError: newWorld\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=65_\n", "url": "https://github.com/libgdx/libgdx/issues/653", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:03:34", "closed": "2013-09-14 20:03:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "README out of date in 0.8", "body": "_From [oldskoo...@gmail.com](https://code.google.com/u/109487226435840105731/) on November 16, 2010 12:28:26_\n\nWhat steps will reproduce the problem? 1. try to follow the read me :) What is the expected output? What do you see instead? It's referencing files that no longer exist, so can't be followed. Might be easier to redirect to the wiki?\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=64_\n", "url": "https://github.com/libgdx/libgdx/issues/652", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:03:31", "closed": "2013-09-14 20:03:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "toChildCoordinates transform bad coordinate when scale is applied with origin away from 0, 0", "body": "_From [lf3th...@gmail.com](https://code.google.com/u/114271525039123168784/) on November 15, 2010 11:22:04_\n\nInstead of:\nout.x = x / child.scaleX - (child.x - child.originX);\nout.y = x / child.scaleY - (child.y - child.originY);\n(Note the \"x\" on the second line.)\n\nIt should be:\nout.x = (x - child.x - child.originX) / child.scaleX + child.originX;\nout.y = (y - child.y - child.originY) / child.scaleY + child.originY;\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=62_\n", "url": "https://github.com/libgdx/libgdx/issues/650", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:03:22", "closed": "2013-09-14 20:03:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "initializeForView did not setup needed variables", "body": "_From [lf3th...@gmail.com](https://code.google.com/u/114271525039123168784/) on November 14, 2010 09:59:42_\n\nAndroidApplication.initializeForView() did not setup needed variables that causes crash if one uses it.\n\nPatch fixes the issue.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=61_\n", "url": "https://github.com/libgdx/libgdx/issues/649", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:03:19", "closed": "2013-09-14 20:03:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Patch to remove lags when calling play/pause/stop of Music on desktop(jogl) ", "body": "_From [lf3th...@gmail.com](https://code.google.com/u/114271525039123168784/) on November 13, 2010 02:33:23_\n\nWhen playing play/pause/stop, rendering thread waits for the music thread which causes lags.\n\nThis patch makes it instantaneous by making the music state atomic. This allows rendering thread to \"set and forget\". The music thread then handles it internally by matching the state.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=59_\n", "url": "https://github.com/libgdx/libgdx/issues/647", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:02:59", "closed": "2013-09-14 20:03:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "InputProcessor Gets keyUp Event While Key Held", "body": "_From [poeir.da...@gmail.com](https://code.google.com/u/107905822949501105517/) on November 09, 2010 01:34:28_\n\nWhat steps will reproduce the problem? 1.  Load attached code into Eclipse\n2.  Right click Project->Run As->Java Application\n3.  Hold W (or any other key). What is the expected output? What do you see instead? The log should say only \"MultipleController: ControllerA.keyUp 51\" repeatedly.  Instead it says \"MultipleController: ControllerA.keyUp 51\\nMultipleController: ControllerA.keyDown 51\" What version of the product are you using? On what operating system? 0.8 on Ubuntu Linux 10.04 Please provide any additional information below. The project is named MultipleController because I thought the bug only applied when using InputMultiplexer, but on closer inspection just one InputProcessor was enough to manifest the bug.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=57_\n", "url": "https://github.com/libgdx/libgdx/issues/645", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 20:02:48", "closed": "2013-09-14 20:02:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[Linux] Error: Couldn't create Music instance from file", "body": "_From [jason.mi...@gmail.com](https://code.google.com/u/106887767399886217639/) on November 06, 2010 04:03:27_\n\nThis started happening about a week ago:\n\nException in thread \"Thread-3\" javax.media.opengl.GLException: com.badlogic.gdx.utils.GdxRuntimeException: Couldn't create Music instance from file 'data/8.12.mp3'\n    at javax.media.opengl.Threading.invokeOnOpenGLThread(Threading.java:271)\n    at javax.media.opengl.GLCanvas.maybeDoSingleThreadedWorkaround(GLCanvas.java:410)\n    at javax.media.opengl.GLCanvas.display(GLCanvas.java:244)\n    at com.badlogic.gdx.backends.jogl.JoglAnimator.display(Unknown Source)\n    at com.badlogic.gdx.backends.jogl.JoglAnimator$MainLoop.run(Unknown Source)\n    at java.lang.Thread.run(Thread.java:662)\nCaused by: com.badlogic.gdx.utils.GdxRuntimeException: Couldn't create Music instance from file 'data/8.12.mp3'\n    at com.badlogic.gdx.backends.jogl.JoglAudio.newMusic(Unknown Source)\n    at com.badlogic.gdxinvaders.GdxInvaders.create(GdxInvaders.java:79)\n    at com.badlogic.gdx.backends.jogl.JoglGraphics.init(Unknown Source)\n    at com.sun.opengl.impl.GLDrawableHelper.init(GLDrawableHelper.java:72)\n    at javax.media.opengl.GLCanvas$InitAction.run(GLCanvas.java:418)\n    at com.sun.opengl.impl.GLDrawableHelper.invokeGL(GLDrawableHelper.java:189)\n    at javax.media.opengl.GLCanvas$DisplayOnEventDispatchThreadAction.run(GLCanvas.java:452)\n    at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:199)\n    at java.awt.EventQueue.dispatchEvent(EventQueue.java:597)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:269)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:184)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:174)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:169)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:161)\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)\nCaused by: javax.sound.sampled.LineUnavailableException: line with format PCM_SIGNED 44100.0 Hz, 16 bit, stereo, 4 bytes/frame, little-endian not supported.\n    at com.sun.media.sound.DirectAudioDevice$DirectDL.implOpen(DirectAudioDevice.java:494)\n    at com.sun.media.sound.AbstractDataLine.open(AbstractDataLine.java:107)\n    at com.sun.media.sound.AbstractDataLine.open(AbstractDataLine.java:139)\n    at com.badlogic.gdx.backends.jogl.JoglMusic.<init>(Unknown Source)\n    ... 15 more\n\nI can load and play the file as background music with the other sounds playing if I use the Sound class instead of Music. I found jsinfo http://www.jsresources.org/apps/jsinfo.html but did not see a text only option, so see attached for screen shot. I am just using the built in sound of my M2NPV-VM motherboard, nforce 430. It looks like It only supports one DataLine? Thanks!\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=56_\n", "url": "https://github.com/libgdx/libgdx/issues/644", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:02:36", "closed": "2013-09-14 20:02:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "category and mask filter values getting swapped", "body": "_From [map...@gmail.com](https://code.google.com/u/102328472635921928702/) on November 05, 2010 19:13:44_\n\nIt looks to me like the category and mask filter values are getting swapped in the C++/Java interface...\n\nIn http://code.google.com/p/libgdx/source/browse/trunk/gdx/jni/Box2D/Fixture.cpp (jniGetFilterData), it has:\n\n```\nfilterOut[0] = f.maskBits;\nfilterOut[1] = f.categoryBits;\nfilterOut[2] = f.groupIndex;\n```\n\nbut in http://code.google.com/p/libgdx/source/browse/trunk/gdx/src/com/badlogic/gdx/physics/box2d/Fixture.java :\n\n```\njniGetFilterData(addr, tmp);\nfilter.categoryBits = tmp[0];\nfilter.maskBits = tmp[1];\nfilter.groupIndex = tmp[2];\n```\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=55_\n", "url": "https://github.com/libgdx/libgdx/issues/643", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:02:32", "closed": "2013-09-14 20:02:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Having no soundcard/device causes a crash", "body": "_From [mans...@gmail.com](https://code.google.com/u/107650007161861942872/) on November 03, 2010 13:19:13_\n\nWhat steps will reproduce the problem? 1.Develop under a virtual machine\n2.Stupidly assume you'll never need sound thus removing all sound devices\n3.Profit? ;-/\n\nI'm not sure if its working as intended. Just noticed it while trying to start the HelloWorld example.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=54_\n", "url": "https://github.com/libgdx/libgdx/issues/642", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:02:27", "closed": "2013-09-14 20:02:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "TWL Tests, filename mismatch", "body": "_From [behoalheit](https://code.google.com/u/behoalheit/) on November 03, 2010 09:11:45_\n\ngdx-twl-tests/data/TWLLogo.png is referenced as twllogo.png in widgets.xml. This results in an exception when executing ButtonTestDesktop in linux.\n\nFix by setting the filename to lowercase or specifying the correct name in widgets.xml.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=53_\n", "url": "https://github.com/libgdx/libgdx/issues/641", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:02:22", "closed": "2013-09-14 20:02:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "KEYCODE_BACK is not mapped to a VK_ in gdx-backend-desktop", "body": "_From [jason.mi...@gmail.com](https://code.google.com/u/106887767399886217639/) on October 27, 2010 01:40:42_\n\nKEYCODE_BACK is not mapped to a VK_ in gdx-backend-desktop. \n\nMaybe use KeyEvent.VK_ESCAPE?\n\nLooks like HOME is mapped but not catched? Is there a lot of overhead to add support for MENU and SEARCH?\n\nThanks! :)\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=52_\n", "url": "https://github.com/libgdx/libgdx/issues/640", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 20:02:19", "closed": "2013-09-14 20:02:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Collision facilities not in current release", "body": "_From [can...@gmail.com](https://code.google.com/u/102115008550572502171/) on October 25, 2010 13:43:29_\n\nSome classes for collition detection missing:\nCollisionDetection.java\nCollisionMesh.java\nCollisionPacket.java\nCollisionResponse.java\nEllipsoidCollider.java\nSlideResponse.java\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=51_\n", "url": "https://github.com/libgdx/libgdx/issues/639", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 20:02:16", "closed": "2013-09-14 20:02:17", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "uiTexture.png is referenced as uitexture.png in UITest.java", "body": "_From [jason.mi...@gmail.com](https://code.google.com/u/106887767399886217639/) on October 20, 2010 06:45:35_\n\nuiTexture.png is referenced as uitexture.png in UITest.java\n\nLinux is case sensitive so it is looking for a different file.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=50_\n", "url": "https://github.com/libgdx/libgdx/issues/638", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:02:13", "closed": "2013-09-14 20:02:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "libgdx.so for  64bit system", "body": "_From [AVerkh...@gmail.com](https://code.google.com/u/107470232674708675169/) on October 14, 2010 14:41:21_\n\nException in thread \"main\" java.lang.UnsatisfiedLinkError: /home/arsen/Development/workspace/Flexo/libs/libgdx.so: /home/arsen/Development/workspace/Flexo/libs/libgdx.so: wrong ELF class: ELFCLASS32 (Possible cause: architecture word width mismatch)\n\nUbuntu 10.10-x86_64\nsun-java-6\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=49_\n", "url": "https://github.com/libgdx/libgdx/issues/637", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:02:07", "closed": "2013-09-14 20:02:12", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Matrix.getValues() returns OpenGL incompatible floats", "body": "_From [dav...@gmail.com](https://code.google.com/u/106646971767838320186/) on October 14, 2010 12:03:40_\n\nWhat steps will reproduce the problem? 1. Set a matrix using Matrix.setToWorld with sensible position, direction and up vectors\ne.g. mWorldMatrix.setToWorld(mWorldPos, mWorldDir, new Vector3(0, 1.f, 0)); \n2. Send the matrix to openGL for a modelview transform, e.g.\ngl.glLoadMatrixf(mWorldMatrix.getValues(), 0);\n3. Do a render What is the expected output? What do you see instead? Expected output: the model renders according to the transform as if you used glTranslateF and glRotateF with the individual vectors\n\nOutput: stretchy matrix gone wrong! What version of the product are you using? On what operating system? 0.61 Please provide any additional information below. The problem is Matrix.getValues returns the floats in a column order incompatible with OpenGL. OpenGL expects matrices to be serialized in \"major column order\". The following code demonstrates a hack to fix it:\n\n```\n    float[] vals = new float[16];\n    vals = mWorldMatrix.getValues();\n    vals[12] = vals[3]; vals[3] = 0;\n    vals[13] = vals[7]; vals[7] = 0;\n    vals[14] = vals[11]; vals[11] = 0;\n    g.glLoadMatrixf(vals, 0);\n```\n\nIf I've done something stupid let me know - it's been years since I've done any OpenGL and I'm still remembering how everything works!\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=48_\n", "url": "https://github.com/libgdx/libgdx/issues/636", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:02:04", "closed": "2013-09-14 20:02:06", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Intersector.intersectRayBoundsFast Gives False Negative With Flat Bounding Boxes", "body": "_From [poeir.da...@gmail.com](https://code.google.com/u/107905822949501105517/) on October 09, 2010 02:02:28_\n\nWhat steps will reproduce the problem? The JUnit tests in the file attached to http://code.google.com/p/libgdx/issues/detail?id=45 include one with a flat bounding box (one where the y min and y max are both 0).  This flat bounding box is not considered to be intersected. What is the expected output? What do you see instead? Flat bounding boxes should still be intersectable by rays that do not parallel the flat plane.  I'm not sure if they should be intersectable by parallel rays if that ray at the same y-coordinate (or other flat coordinate). What version of the product are you using? On what operating system? libgdx 0.61 on Ubuntu Linus 10.04\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=46_\n", "url": "https://github.com/libgdx/libgdx/issues/634", "user": "badlogic", "labels": ["bug", "duplicate"], "created": "2013-09-14 20:01:57", "closed": "2013-09-14 20:01:59", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Camera.getPickRay() With BoundingBox Using Intersector", "body": "_From [poeir.da...@gmail.com](https://code.google.com/u/107905822949501105517/) on October 09, 2010 01:59:51_\n\nWhat steps will reproduce the problem? The attached Eclipse project (adapted from a larger program) displays a grid of four squares where touching one indicates at the bottom which square is being touched by using Intersector.intersectRayBoundsFast(...). What is the expected output? What do you see instead? Clicking on any of the squares should display the corresponding color in text at the bottom of the screen.\n\nClicking near the top of the red or green square indicates that no bounding box is being intersected, but the red or green square should be indicated. What version of the product are you using? On what operating system? 0.61 on Ubuntu Linux 10.04.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=45_\n", "url": "https://github.com/libgdx/libgdx/issues/633", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:01:46", "closed": "2013-09-14 20:01:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": ".obj loader does not handle multiple spaces in a line correctly", "body": "_From [christoph.schroeder.nospam@gmail.com](https://code.google.com/u/christoph.schroeder.nospam@gmail.com/) on October 07, 2010 03:27:49_\n\nWhat steps will reproduce the problem? 1. modify the ship.obj from the space invaders sample:\n   change \n   \"v -0.46604296 -4.6098739e-2 6.1004010e-2\"\n   to:\n   \"v  -0.46604296 -4.6098739e-2 6.1004010e-2\"\n2. start the project What is the expected output? What do you see instead? the model should load normally\ninstead an exception is thrown:\njava.lang.NumberFormatException: empty String\n    at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1012)\n    at java.lang.Float.parseFloat(Float.java:439)\n    at com.badlogic.gdx.graphics.loaders.ObjLoader.loadObjFromString(Unknown Source)\n    at com.badlogic.gdx.graphics.loaders.ObjLoader.loadObj(Unknown Source)\n    at com.badlogic.gdx.graphics.ModelLoader.loadObj(Unknown Source)\n    at com.badlogic.gdxinvaders.Renderer.<init>(Renderer.java:102 +- some lines 'shipMesh = ModelLoader.loadObj( app.getGraphics(), in, true, true );')\n.... What version of the product are you using? On what operating system? tested on windows and linux, gdx-invaders.zip (Sep 12) Please provide any additional information below. svn/trunk/gdx/src/com/badlogic/gdx/graphics/loaders/ObjLoader.java:100\nString[] tokens = line.split( \" \" );\nreplace with \nString[] tokens = line.split( \"[ ]+\" );\n\ncontinue for other occurrences\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=44_\n", "url": "https://github.com/libgdx/libgdx/issues/632", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:01:42", "closed": "2013-09-14 20:01:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fix allocations of temporary objects in Intersector", "body": "_From [badlogicgames](https://code.google.com/u/badlogicgames/) on October 03, 2010 07:01:26_\n\nFor the love of the fsm, fix them stupid temporary object allocations in the Intersector!\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=43_\n", "url": "https://github.com/libgdx/libgdx/issues/631", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:01:39", "closed": "2013-09-14 20:01:41", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "BufferUtils.cpp:16: error: cast from \u2018float*\u2019 to \u2018int\u2019 loses precision", "body": "_From [jason.mi...@gmail.com](https://code.google.com/u/106887767399886217639/) on September 27, 2010 04:09:01_\n\nCompiling latest gdx on linux recieve this error:\n\nBuilding file: ../jni/BufferUtils.cpp\nInvoking: GCC C++ Compiler\ng++ -fPIC -DFIXED_POINT -DCHECK_OVERFLOW -I\"/usr/lib/jvm/java-6-sun-1.6.0.20//include\" -I\"/home/mechacthulhu/workspace/gdx/jni\" -I\"/usr/lib/jvm/java-6-sun-1.6.0.20//include/linux\" -O2 -Wall -c -I../jni/ -mfpmath=sse -msse2 -MMD -MP -MF\"jni/BufferUtils.d\" -MT\"jni/BufferUtils.d\" -o\"jni/BufferUtils.o\" \"../jni/BufferUtils.cpp\"\n../jni/BufferUtils.cpp: In function \u2018jint Java_com_badlogic_gdx_utils_BufferUtils_copyJni___3FLjava_nio_Buffer_2II(JNIEnv_, _jclass_, _jfloatArray_, _jobject_, jint, jint)\u2019:\n../jni/BufferUtils.cpp:16: error: cast from \u2018float_\u2019 to \u2018int\u2019 loses precision\nmake: *_\\* [jni/BufferUtils.o] Error 1\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=42_\n", "url": "https://github.com/libgdx/libgdx/issues/630", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:01:37", "closed": "2013-09-14 20:01:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "GDXInvaders crash when we try to run it on Android Emulator", "body": "_From [gur...@gmail.com](https://code.google.com/u/109036969802655969362/) on September 22, 2010 02:24:51_\n\nWhat steps will reproduce the problem? 1. Extract the GDXInvaders.zip and import projects in Eclipse (Android development environment)\n2. Build the project and try to run it as Android application on Android Emulator(AVD)\n3. You will see some logs in the LogCat, then it just crash What is the expected output? What do you see instead? It just crash while launching the application on Android Emulator.\nExpected Behavior : It should run in same manner as the desktop version run. What version of the product are you using? On what operating system? gdxinvaders.zip uploaded on Sept 12 Please provide any additional information below. Log from the LogCat\n09-22 10:16:16.103: DEBUG/AndroidRuntime(367): >>>>>>>>>>>>>> AndroidRuntime START <<<<<<<<<<<<<<\n09-22 10:16:16.103: DEBUG/AndroidRuntime(367): CheckJNI is ON\n09-22 10:16:16.682: DEBUG/AndroidRuntime(367): --- registering native functions ---\n09-22 10:16:18.203: DEBUG/AndroidRuntime(367): Shutting down VM\n09-22 10:16:18.232: DEBUG/dalvikvm(367): Debugger has detached; object registry had 1 entries\n09-22 10:16:18.252: INFO/AndroidRuntime(367): NOTE: attach of thread 'Binder Thread #3' failed\n09-22 10:16:19.403: DEBUG/AndroidRuntime(375): >>>>>>>>>>>>>> AndroidRuntime START <<<<<<<<<<<<<<\n09-22 10:16:19.403: DEBUG/AndroidRuntime(375): CheckJNI is ON\n09-22 10:16:19.892: DEBUG/AndroidRuntime(375): --- registering native functions ---\n09-22 10:16:21.313: INFO/ActivityManager(72): Starting activity: Intent { act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 cmp=com.badlogic.gdxinvaders/.GdxInvadersAndroid }\n09-22 10:16:21.442: DEBUG/AndroidRuntime(375): Shutting down VM\n09-22 10:16:21.473: DEBUG/dalvikvm(375): Debugger has detached; object registry had 0 entries\n09-22 10:16:21.533: INFO/AndroidRuntime(375): NOTE: attach of thread 'Binder Thread #3' failed\n09-22 10:16:21.613: INFO/ActivityManager(72): Start proc com.badlogic.gdxinvaders for activity com.badlogic.gdxinvaders/.GdxInvadersAndroid: pid=382 uid=10035 gids={}\n09-22 10:16:23.463: DEBUG/dalvikvm(382): Trying to load lib /data/data/com.badlogic.gdxinvaders/lib/libgdx.so 0x43dc1410\n09-22 10:16:23.502: DEBUG/dalvikvm(382): Added shared lib /data/data/com.badlogic.gdxinvaders/lib/libgdx.so 0x43dc1410\n09-22 10:16:23.502: DEBUG/dalvikvm(382): No JNI_OnLoad found in /data/data/com.badlogic.gdxinvaders/lib/libgdx.so 0x43dc1410, skipping init\n09-22 10:16:23.652: DEBUG/qemud(38): fdhandler_accept_event: accepting on fd 10\n09-22 10:16:23.652: DEBUG/qemud(38): created client 0x64768 listening on fd 15\n09-22 10:16:23.676: DEBUG/qemud(38): client_fd_receive: attempting registration for service 'sensors'\n09-22 10:16:23.676: DEBUG/qemud(38): client_fd_receive:    -> received channel id 9\n09-22 10:16:23.682: DEBUG/qemud(38): client_registration: registration succeeded for client 9\n09-22 10:16:23.713: DEBUG/qemud(38): fdhandler_event: disconnect on fd 15\n09-22 10:16:24.322: DEBUG/libEGL(382): egl.cfg not found, using default config\n09-22 10:16:24.353: DEBUG/libEGL(382): loaded /system/lib/egl/libGLES_android.so\n09-22 10:16:24.703: DEBUG/dalvikvm(382): GC_FOR_MALLOC freed 1237 objects / 91720 bytes in 237ms\n09-22 10:16:24.763: INFO/dalvikvm-heap(382): Grow heap (frag case) to 3.723MB for 960016-byte allocation\n09-22 10:16:24.922: DEBUG/dalvikvm(382): GC_FOR_MALLOC freed 60 objects / 3344 bytes in 155ms\n09-22 10:16:25.093: DEBUG/dalvikvm(382): GC_EXTERNAL_ALLOC freed 54 objects / 2632 bytes in 147ms\n09-22 10:16:25.232: DEBUG/texture(382): creating texture mipmaps: 512, 512\n09-22 10:16:25.452: DEBUG/texture(382): creating texture mipmaps: 512, 512\n09-22 10:16:26.042: DEBUG/dalvikvm(382): GC_EXTERNAL_ALLOC freed 198 objects / 11032 bytes in 141ms\n09-22 10:16:26.122: DEBUG/texture(382): creating texture mipmaps: 512, 512\n09-22 10:16:26.323: DEBUG/AudioSink(34): bufferCount (4) is too small and increased to 12\n09-22 10:16:26.603: WARN/dalvikvm(382): JNI WARNING: threadid=7 using JNI after critical get\n09-22 10:16:26.622: WARN/dalvikvm(382):              in Lcom/badlogic/gdx/utils/BufferUtils;.copyJni ([FLjava/nio/Buffer;II)V (GetDirectBufferAddress)\n09-22 10:16:26.653: INFO/dalvikvm(382): \"GLThread 8\" prio=5 tid=7 NATIVE\n09-22 10:16:26.653: INFO/dalvikvm(382):   | group=\"main\" sCount=0 dsCount=0 s=N obj=0x43dca6d8 self=0x209fe8\n09-22 10:16:26.663: INFO/dalvikvm(382):   | sysTid=388 nice=0 sched=0/0 cgrp=default handle=2138408\n09-22 10:16:26.702: INFO/dalvikvm(382):   at com.badlogic.gdx.utils.BufferUtils.copyJni(Native Method)\n09-22 10:16:26.702: INFO/dalvikvm(382):   at com.badlogic.gdx.utils.BufferUtils.copy((null):-1)\n09-22 10:16:26.732: INFO/dalvikvm(382):   at com.badlogic.gdx.graphics.Mesh.setVertices((null):-1)\n09-22 10:16:26.732: INFO/dalvikvm(382):   at com.badlogic.gdx.graphics. SpriteBatch .renderMesh((null):-1)\n09-22 10:16:26.742: INFO/dalvikvm(382):   at com.badlogic.gdx.graphics. SpriteBatch .enableBlending((null):-1)\n09-22 10:16:26.762: INFO/dalvikvm(382):   at com.badlogic.gdxinvaders.screens.MainMenu.render(MainMenu.java:76)\n09-22 10:16:26.772: INFO/dalvikvm(382):   at com.badlogic.gdxinvaders.GdxInvaders.render(GdxInvaders.java:48)\n09-22 10:16:26.782: INFO/dalvikvm(382):   at com.badlogic.gdx.backends.android.AndroidGraphics.onDrawFrame((null):-1)\n09-22 10:16:26.782: INFO/dalvikvm(382):   at android.opengl.GLSurfaceView$GLThread.guardedRun(GLSurfaceView.java:1332)\n09-22 10:16:26.782: INFO/dalvikvm(382):   at android.opengl.GLSurfaceView$GLThread.run(GLSurfaceView.java:1116)\n09-22 10:16:26.804: ERROR/dalvikvm(382): VM aborting\n09-22 10:16:26.942: INFO/DEBUG(31): **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* **\\* ***\n09-22 10:16:26.942: INFO/DEBUG(31): Build fingerprint: 'generic/sdk/generic/:2.2/FRF42/36942:eng/test-keys'\n09-22 10:16:26.963: INFO/DEBUG(31): pid: 382, tid: 388  >>> com.badlogic.gdxinvaders <<<\n09-22 10:16:26.963: INFO/DEBUG(31): signal 11 (SIGSEGV), fault addr deadd00d\n09-22 10:16:26.963: INFO/DEBUG(31): r0 00000374 r1 0000000c r2 0000000c r3 deadd00d\n09-22 10:16:26.963: INFO/DEBUG(31): r4 00000026 r5 80887fc4 r6 00000001 r7 00000000\n09-22 10:16:26.982: INFO/DEBUG(31): r8 45c30d50 r9 428bfe10  10 428bfdfc  fp 00209fe8\n09-22 10:16:26.982: INFO/DEBUG(31):  ip 808881ec  sp 45c30cd8  lr afd154c5  pc 8083b162  cpsr 20000030\n09-22 10:16:27.352: INFO/DEBUG(31):          #00  pc 0003b162  /system/lib/libdvm.so\n09-22 10:16:27.352: INFO/DEBUG(31):          #01  pc 0002cff4  /system/lib/libdvm.so\n09-22 10:16:27.372: INFO/DEBUG(31):          #02  pc 0002d11a  /system/lib/libdvm.so\n09-22 10:16:27.392: INFO/DEBUG(31):          #03  pc 0002e108  /system/lib/libdvm.so\n09-22 10:16:27.392: INFO/DEBUG(31):          #04  pc 0002f2ec  /data/data/com.badlogic.gdxinvaders/lib/libgdx.so\n09-22 10:16:27.422: INFO/DEBUG(31):          #05  pc 00013974  /system/lib/libdvm.so\n09-22 10:16:27.432: INFO/DEBUG(31): code around pc:\n09-22 10:16:27.452: INFO/DEBUG(31): 8083b140 1861447c 200...\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=40_\n", "url": "https://github.com/libgdx/libgdx/issues/628", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:01:28", "closed": "2013-09-14 20:01:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "EarCutTriangulator doesn't work in all cases", "body": "_From [badlogicgames](https://code.google.com/u/badlogicgames/) on September 14, 2010 18:40:24_\n\nEarCutTriangulator doesn't work with co-linear points. Test case: S of tetris.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=39_\n", "url": "https://github.com/libgdx/libgdx/issues/627", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:01:24", "closed": "2013-09-14 20:01:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Box2DDebugRenderer bug with rotated box", "body": "_From [luciano.broussal@gmail.com](https://code.google.com/u/luciano.broussal@gmail.com/) on September 13, 2010 23:07:38_\n\ndraw a box polygon (10unit/5unit)\ndraw the same box polygon and rotate 90\n\nthe second poly gone is rendered by the debug render 50&#37; taler.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=38_\n", "url": "https://github.com/libgdx/libgdx/issues/626", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:01:22", "closed": "2013-09-14 20:01:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "desktop crash box2D rotating shape", "body": "_From [luciano.broussal@gmail.com](https://code.google.com/u/luciano.broussal@gmail.com/) on September 13, 2010 18:40:16_\n\nWhat steps will reproduce the problem? With Box2D existing test modified :\n\nput a single rotating box \n\n....\nbodyDef.fixedRotation = true;\nbodyDef.angularVelocity = 10;\nbodyDef.type = BodyType.KinematicBody; \n...\n\nclick on the rotating box => crash the desktop version each time.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=37_\n", "url": "https://github.com/libgdx/libgdx/issues/625", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:01:17", "closed": "2013-09-14 20:01:19", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Body.getMassData() returns null instead of this.massData.", "body": "_From [NicolasG...@gmail.com](https://code.google.com/u/114668890951081743763/) on August 31, 2010 13:11:41_\n\nBody.getMassData() returns null instead of this.massData. http://code.google.com/p/libgdx/source/browse/trunk/gdx/src/com/badlogic/gdx/physics/box2d/Body.java#314\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=34_\n", "url": "https://github.com/libgdx/libgdx/issues/622", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:01:06", "closed": "2013-09-14 20:01:08", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "LibGDX linux 64bit native needs -fPIC defined for the C compiler", "body": "_From [pmlo...@gmail.com](https://code.google.com/u/102582741260947584144/) on August 17, 2010 11:41:55_\n\nWhat steps will reproduce the problem? 1. I tried to build LibGDX for 64bit linux link fails What is the expected output? What do you see instead? To fix i had to change the C compiler (C++ already has it) to have -fPIC\n\nI had to install libmp123 to my system (it is wrong since it introduces a dependency on a so lib that you are not shipping with the JNI, I would expect to build it also as it happens for the Android platform. What version of the product are you using? On what operating system? SVN trunk Please provide any additional information below.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=33_\n", "url": "https://github.com/libgdx/libgdx/issues/621", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:01:02", "closed": "2013-09-14 20:01:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Vector3 dot product", "body": "_From [karthikt...@gmail.com](https://code.google.com/u/118033818539569850455/) on July 26, 2010 19:26:36_\n\nWhat steps will reproduce the problem? Vector3.java\n\nline 478:\n\n```\npublic float dot(int x, int y, int z) { \n    return this.x * x + this.y * y + this.z * z;\n}\n```\n\nit should be:\n    public float dot(float x, float y, float z) { \n        return this.x \\* x + this.y \\* y + this.z \\* z;\n    }\n\nno reason to take only int arguments\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=32_\n", "url": "https://github.com/libgdx/libgdx/issues/620", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:00:58", "closed": "2013-09-14 20:01:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Library 'libhgl.so' not found", "body": "_From [tom....@gmail.com](https://code.google.com/u/103579800128841717107/) on July 21, 2010 21:38:12_\n\nI used the helloworld project and added the project on the android 1.6 emulator. During the logs I saw the following entry:\n\n07-21 19:31:20.213: ERROR/libEGL(211): couldn't load <libhgl.so> library (Cannot load library: load_library[984]: Library 'libhgl.so' not found)\n\nEverything works as expected, but wondering if this could cause harm on real devices.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=30_\n", "url": "https://github.com/libgdx/libgdx/issues/618", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:00:49", "closed": "2013-09-14 20:00:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Crash upon waking up from standby", "body": "_From [badlogicgames](https://code.google.com/u/badlogicgames/) on July 14, 2010 19:16:38_\n\nReproduceable with Droid Invaders, but only in 1.5 Hero. Works on Nexus 1 with 2.2. Needs testing on 2.1.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=26_\n", "url": "https://github.com/libgdx/libgdx/issues/614", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:00:35", "closed": "2013-09-14 20:00:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Prismatic joint bug", "body": "_From [cpasju...@gmail.com](https://code.google.com/u/107955730618067784412/) on June 28, 2010 20:57:33_\n\nWhat steps will reproduce the problem? 1. Creating a prismatic joint seems to cause the whole body to go silly. What version of the product are you using? On what operating system? Libgdx 0.52\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=23_\n", "url": "https://github.com/libgdx/libgdx/issues/611", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 20:00:21", "closed": "2013-09-14 20:00:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "FixtureDef filter.groupIndex bug", "body": "_From [cpasju...@gmail.com](https://code.google.com/u/107955730618067784412/) on June 28, 2010 20:53:31_\n\nWhat steps will reproduce the problem? 1. Define a fixtureDef groupeIndex do not seems to work, resulting in a fixture that will never collide. This make fixturedef unusable. What version of the product are you using? On what operating system? Libgdx 0.52\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=22_\n", "url": "https://github.com/libgdx/libgdx/issues/610", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 20:00:16", "closed": "2013-09-14 20:00:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "standard void main() causes Verify error on 1.5 and 1.6 devices", "body": "_From [dasac...@gmail.com](https://code.google.com/u/105164384981209237729/) on June 22, 2010 22:38:05_\n\nThis is per the discussion we had earlier. I read that the verify error is suppose to list exactly the who/what/when/where/how right above it in logcat, but I saw nothing. This is the error\n\nE/AndroidRuntime(  666): Uncaught handler: thread main exiting due to uncaught exception\nE/AndroidRuntime(  666): java.lang.VerifyError: com.dasa.wastedspace.WastedSpace\nE/AndroidRuntime(  666):        at com.dasa.wastedspace.Game.onCreate(Game.java:26)\nE/AndroidRuntime(  666):        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1123)\nE/AndroidRuntime(  666):        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2303)\nE/AndroidRuntime(  666):        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2371)\nE/AndroidRuntime(  666):        at android.app.ActivityThread.access$1800(ActivityThread.java:118)\nE/AndroidRuntime(  666):        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1759)\nE/AndroidRuntime(  666):        at android.os.Handler.dispatchMessage(Handler.java:99)\nE/AndroidRuntime(  666):        at android.os.Looper.loop(Looper.java:123)\nE/AndroidRuntime(  666):        at android.app.ActivityThread.main(ActivityThread.java:4077)\nE/AndroidRuntime(  666):        at java.lang.reflect.Method.invokeNative(Native Method)\nE/AndroidRuntime(  666):        at java.lang.reflect.Method.invoke(Method.java:521)\nE/AndroidRuntime(  666):        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:782)\nE/AndroidRuntime(  666):        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:540)\nE/AndroidRuntime(  666):        at dalvik.system.NativeStart.main(Native Method)\n\nI basically just commented this section out of the desktop portion of the app\n\n/*\n    public static void main(String[] argv) {\n        JoglApplication app = new JoglApplication(\"Wasted Space\", 480, 320, false);\n        app.getGraphics().setRenderListener(new WastedSpace());\n    }\n    */\n\nand all is fine. I'll try and get some more useful information on this error as soon as I can to amend this issue (like a bare minimum test bed to reproduce the error)\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=21_\n", "url": "https://github.com/libgdx/libgdx/issues/609", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 20:00:13", "closed": "2013-09-14 20:00:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Stop using ArrayList in VertexAttributes", "body": "_From [dasac...@gmail.com](https://code.google.com/u/105164384981209237729/) on June 18, 2010 01:35:46_\n\nI've been doing some profiling with DDMS and trying to kill bottlenecks of my code. I'm a complete noob to java performance, but it seems that ArrayList's cause slowdowns with having to make calls like .get(i)\n\nAfter changing my ArrayList's to the likes of Object list[] = new Object[15] Im starting to see libgdx take up a larger percentage of the rendering time. A call to VertexAttributes.get(i) in Mesh.render is actually the most time consuming process according to my profile eating up 25&#37; of Mesh.render's processing time.\n\nWould it benefit the speed of Mesh.render to have VertexAttributes stop using ArrayList's?\n\nLine 47 of VertexAttributes reads\nArrayList<VertexAttribute> list = new ArrayList<VertexAttribute>();\n\nBut all the information to do this is already there\nVertexAttribute list[] = new VertexAttribute[attributes.length];\n\nand change everything else accordingly.\n\nSorry if this is a stupid recommendation, like I said before I am a complete noob to java performance and am only going by my profiling benchmarks from DDMS.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=17_\n", "url": "https://github.com/libgdx/libgdx/issues/605", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 19:59:51", "closed": "2013-09-14 19:59:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Box2D collision, broken", "body": "_From [rtaylor205@gmail.com](https://code.google.com/u/rtaylor205@gmail.com/) on June 17, 2010 19:37:14_\n\nCollision is not working, objects simply overlap.\n\nThe changes in contactFilter always returns false.\n\nAttached is a hack that makes it work, but I don't know whether this is the correct way. For now it will have to do for me :)\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=16_\n", "url": "https://github.com/libgdx/libgdx/issues/604", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 19:59:47", "closed": "2013-09-14 19:59:50", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SpriteBatch.enableBlending/disableBlending needs to flush the cache", "body": "_From [badlogicgames](https://code.google.com/u/badlogicgames/) on June 17, 2010 13:09:55_\n\nspriteBatch.begin();\nspriteBatch.draw();\nspriteBatch.disableBlending(); <-- nuuu, last draw will also be without blending\nspriteBatch.draw();\nspriteBatch.end();\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=15_\n", "url": "https://github.com/libgdx/libgdx/issues/603", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 19:59:44", "closed": "2013-09-14 19:59:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Pass projection matrix to SpriteBatch.begin", "body": "_From [dasac...@gmail.com](https://code.google.com/u/105164384981209237729/) on June 17, 2010 05:38:24_\n\nFeature Request. OrthographicCamera is a pretty nifty class that does alot of nice stuff. If it had a .getProjMatrix() method and SpriteBatch .begin had a constructor that accepted Matrix projMatrix, then one could easily utilize what's already setup with camera to display sprites in the same viewport if so desired.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=11_\n", "url": "https://github.com/libgdx/libgdx/issues/602", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 19:59:39", "closed": "2013-09-14 19:59:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Seperate OriginX and OriginY from SpriteBatch.draw", "body": "_From [dasac...@gmail.com](https://code.google.com/u/105164384981209237729/) on June 17, 2010 05:23:46_\n\nAnother feature request. OriginX and OriginY are currently set in the draw method of SpriteBatch . I get mostly unexpected results as what I pass in is dependent on other factors like scale. I have yet to get a rotation on the origin point to work correctly (my own shortcoming im sure).\n\nAnother library I used for opengl was pyglet, and when creating a Texture, you would set the origin point on the texture object. This was via an anchor_x and anchor_y which maybe is not the same concept as origin?. But in this case, it would make sense to be able to set an origin/anchor on the Texture object and this would be referenced for calculations like rotation.\n\nThe benefit to this is one calculates the origin of the texture simply based on its pixel size, so if i have a 32x32 texture and i set the origin to (16, 16) then its pretty obvious what should happen when applying various transformations during draw.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=10_\n", "url": "https://github.com/libgdx/libgdx/issues/601", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 19:59:34", "closed": "2013-09-14 19:59:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Change SpriteBatch.draw arguments from int to float", "body": "_From [dasac...@gmail.com](https://code.google.com/u/105164384981209237729/) on June 17, 2010 05:04:54_\n\nThis is a feature request. I'm not experienced with java so I dont know if there are any implications to this.\n\nCurrently the arguments: x, y, originX, originY are accepted as int. Their immediate use inside of SpriteBatch .draw have them become float. If working in a space smaller then the actual pixel size of the screen, one might want to pass float values instead. Even if working solely with int, it seems java is not partial to an argument being cast as (int) when it requires (float) so it seems like a win-win\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=9_\n", "url": "https://github.com/libgdx/libgdx/issues/600", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 19:59:29", "closed": "2013-09-14 19:59:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ContactListener Contact arg contains same Fixture for getFixtureA and getFixtureB", "body": "_From [dasac...@gmail.com](https://code.google.com/u/105164384981209237729/) on June 09, 2010 05:16:01_\n\nWhat steps will reproduce the problem? 1. Implement custom ContactListener from svn\n2. Inspect getFixtureA and getFixtureB, they are the same object What is the expected output? What do you see instead? A and B are different objects What version of the product are you using? On what operating system? libgdx svn Please provide any additional information below. I filed this earlier but its not showing up anymore, not sure what happened to it, but this is much more concise about the problem.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=7_\n", "url": "https://github.com/libgdx/libgdx/issues/598", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 19:59:17", "closed": "2013-09-14 19:59:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[box2d] groupIndex on fixtureDef.filter not functioning correctly", "body": "_From [dasac...@gmail.com](https://code.google.com/u/105164384981209237729/) on June 08, 2010 06:19:24_\n\nWhat steps will reproduce the problem? 1. Create two seperate bodies\n2. Create fixtureDef's and set .filter.groupIndex = -8\n3. createFixture's on each body\n4. Watch them still collide What is the expected output? What do you see instead? setting the fixture's groupIndex for two bodies to the same negative number is suppose to prevent the bodies from colliding. Setting it for this jni wrapper appears to do nothing. What version of the product are you using? On what operating system? libgdx0.5\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=6_\n", "url": "https://github.com/libgdx/libgdx/issues/597", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 19:59:12", "closed": "2013-09-14 19:59:16", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "UnsatisfiedLinkError: com.badlogic.gdx.physics.box2d.World.newWorld(FFZ)J", "body": "_From [dasac...@gmail.com](https://code.google.com/u/105164384981209237729/) on June 05, 2010 22:01:23_\n\nWhat steps will reproduce the problem? 1. Setup basic project as stated in README\n2. Setup VM argument to point to lib/\n3. add this one line to main() //including needed imports..\n\nWorld world = new World(new Vector2( 0, -10 ), true); What is the expected output? What do you see instead? I would expect a new World to be created successfully, Instead I get the \nfollowing error\n\nException in thread \"main\" java.lang.UnsatisfiedLinkError: \ncom.badlogic.gdx.physics.box2d.World.newWorld(FFZ)J\n    at com.badlogic.gdx.physics.box2d.World.newWorld(Native Method)\n    at com.badlogic.gdx.physics.box2d.World.<init>(World.java:68)\n    at com.dasa.helloworld. HelloWorld .main( HelloWorld .java:17) What version of the product are you using? On what operating system? gdx0.5 on windows 7 in eclipse Please provide any additional information below. Sorry, im a fuckin noob. I dont even know what this means besides there \nbeing some kind of problem loading the JNI\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=5_\n", "url": "https://github.com/libgdx/libgdx/issues/596", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 19:58:59", "closed": "2013-09-14 19:59:10", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Eclipse crash with 0.5 libs", "body": "_From [tonyo&#37;sk...@gtempaccount.com](https://code.google.com/u/102183875732111856184/) on June 05, 2010 05:53:12_\n\nWhat steps will reproduce the problem? 1. Create Android project in Eclipse\n2. Add the libraries to the project \n\nEclipse build id: 2010-02-18-1602 What is the expected output? What do you see instead? No output expected.  I see the compiler griping: \"warning: Ignoring\nInnerClasses attribute for an anonymous inner class that doesn't come with\nan associated EnclosingMethod attribute. (This class was probably produced\nby a broken compiler.)\", eating 350MB of RAM and entirely eating one processor. What version of the product are you using? On what operating system? 0.5, Win7, Eclipse build id above. Please provide any additional information below. Nothing in the project was modified but to add the libraries and adding\nthose to the class path.  Please help me understand where I went wrong.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=4_\n", "url": "https://github.com/libgdx/libgdx/issues/595", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 19:58:56", "closed": "2013-09-14 19:58:58", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Infinite loop in android audio device", "body": "_From [meurant....@gmail.com](https://code.google.com/u/108052645462476761281/) on May 25, 2010 09:18:58_\n\nHi !\n\nI think there is a little problem on\ngdx-backend-android/src/com/badlogic/gdx/backends/android/AndroidAudioDevice.java\n\nThe writeSamples can lead to an infinite loop, I don't how to post a \ntiny-patch, so I attach it here.\n\nThanks for your time. :)\n\nOlivier.\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=3_\n", "url": "https://github.com/libgdx/libgdx/issues/594", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 19:58:52", "closed": "2013-09-14 19:58:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "jMonkey on the lookout for Android developers and affiliates", "body": "_From [e.so...@gmail.com](https://code.google.com/u/100986343428185568246/) on April 27, 2010 20:09:08_\n\nHello,\n\n(@badlogicgames: you might have noticed me posting on the gl2-android \nproject as well)\n\nI am not a robot, but I suppose for the purpose of this visit I might as \nwell be. I just wanted to drop by real quick to check if you are at all \nfamiliar with the jMonkeyEngine project. It seems our projects might have a \nthing or two in common. http://jmonkeyengine.com/blog/blog/2010/02/10/android-support-confirmed- for-jme3/ http://www.jmonkeyengine.com/forum/index.php?topic=13176.0 http://www.jmonkeyengine.com/forum/index.php?topic=13217.0 We are on the lookout for an Android developer to help us bring jME3's \npreliminary Android implementation to a mature, fully functional state. http://docs.google.com/View?id=dhkt6vsf_251c54bg9hp Maybe you could be that developer? or, maybe you know someone who might be. \nNaturally we'd also appreciate having more testers or plain Android-savvy \npeople around in our community. Any reason at all for you to contact us, \nfeel free! Contact information can be found in the docs link above.\n\nThanks for your time,\n\n~ Erlend Sogge Heggen\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=2_\n", "url": "https://github.com/libgdx/libgdx/issues/593", "user": "badlogic", "labels": ["bug"], "created": "2013-09-14 19:58:48", "closed": "2013-09-14 19:58:50", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Samsung Galaxy 1.5 - Black screen instead hello world app", "body": "_From [Mariusz....@gmail.com](https://code.google.com/u/103927374618490518049/) on April 19, 2010 13:35:53_\n\nHello,\n\ni'm using Samsung Galaxy with standard Android 1.5 and when i'm running the \nhello world (without any modifications) app i see only black screen instead \nof the graphic and text. Do you have any idea whan can cause the problem or \ndo you have any solution for that? On emulator and desktop everything is OK. \nI would appreciate any help/guidlines where to look to fix that\n\nbest regards\nMariusz\n\n_Original issue: http://code.google.com/p/libgdx/issues/detail?id=1_\n", "url": "https://github.com/libgdx/libgdx/issues/592", "user": "badlogic", "labels": ["bug", "wontfix"], "created": "2013-09-14 19:58:10", "closed": "2013-09-14 19:58:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}]}