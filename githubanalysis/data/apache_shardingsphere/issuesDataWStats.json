{"projectName": "apache/shardingsphere", "bugLabels": ["bug"], "captureTime": "Fri Jul  3 23:02:36 2020", "issues": [{"title": "table name is not rewrited correctly in subquery", "body": "I have a SQL\r\n`       \r\nSELECT min(id) AS min_id, max(id) AS max_id\r\n        from (\r\n            select id\r\n            FROM msg\r\n            WHERE id &gt; #{minId}\r\n            AND date = #{date}\r\n            ORDER BY id\r\n            limit #{step}\r\n        ) a\r\n`\r\nIn version 4.0.0, the actual in log is \r\n`\r\nSELECT min(id) AS min_id, max(id) AS max_id\r\n        from (\r\n            select id\r\n            FROM msg_10\r\n            WHERE id > ?\r\n            AND date = ?\r\n            ORDER BY id\r\n            limit ?\r\n        ) a ::: [-1, 2019-04-26 00:00:00.0, 1]\r\n`\r\nBut when I upgrade to 4.0.1, the actual sql in log is\r\n`\r\nSELECT min(id) AS min_id, max(id) AS max_id\r\n        from (\r\n            select id\r\n            FROM msg\r\n            WHERE id > ?\r\n            AND date = ?\r\n            ORDER BY id\r\n            limit ?\r\n        ) a ::: [-1, 2019-04-26 00:00:00.0, 1]\r\n`", "url": "https://github.com/apache/shardingsphere/issues/6228", "user": "nkuflk", "labels": ["bug", "sharding", "subquery"], "created": "2020-07-01 04:10:03", "closed": "2020-07-03 13:01:15", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Sharding Proxy can not start without Metrics configuration.", "body": "AFAIK, metrics configuration is not necessary for Sharding Proxy. \r\nBut currently, Sharding Proxy can not start without Metrics configuration.\r\nObviously, it is not what we expect and needs handling.\r\n", "url": "https://github.com/apache/shardingsphere/issues/6181", "user": "tristaZero", "labels": ["bug", "proxy"], "created": "2020-06-24 03:42:52", "closed": "2020-06-24 08:14:17", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Sharding rules can not be persisted to config center with spring namespace", "body": "Because the root bean definition was changed from `ShardingRuleConfiguration.class` to `AlgorithmProvidedShardingRuleConfiguration.class` when parsing the namespace,  \r\nso there is no suitable converter to convert `AlgorithmProvidedShardingRuleConfiguration` to `Yaml` configuration when persisting `Sharding`  rules to config center. \r\n\r\nThe `MasterSlave` and `Encrypt` rules are the same as above.\r\n\r\nThere are code segments: \r\n\r\n`ShardingRuleBeanDefinitionParser.java`\r\n```\r\n@Override\r\n    protected AbstractBeanDefinition parseInternal(final Element element, final ParserContext parserContext) {\r\n        BeanDefinitionBuilder factory = BeanDefinitionBuilder.rootBeanDefinition(AlgorithmProvidedShardingRuleConfiguration.class);\r\n        factory.addConstructorArgValue(parseTableRulesConfiguration(element));\r\n        factory.addConstructorArgValue(parseAutoTableRulesConfiguration(element));\r\n        factory.addConstructorArgValue(parseBindingTablesConfiguration(element));\r\n        factory.addConstructorArgValue(parseBroadcastTables(element));\r\n        addDefaultDatabaseShardingStrategyRef(element, factory);\r\n        addDefaultTableShardingStrategyRef(element, factory);\r\n        addDefaultKeyGenerateStrategyRef(element, factory);\r\n        factory.addConstructorArgValue(ShardingSphereAlgorithmBeanRegistry.getAlgorithmBeanReferences(parserContext, ShardingAlgorithmFactoryBean.class));\r\n        factory.addConstructorArgValue(ShardingSphereAlgorithmBeanRegistry.getAlgorithmBeanReferences(parserContext, KeyGenerateAlgorithmFactoryBean.class));\r\n        return factory.getBeanDefinition();\r\n    }\r\n```\r\n\r\n`ConfigCenter.java`\r\n\r\n```\r\nprivate void persistRuleConfigurations(final String shardingSchemaName, final Collection<RuleConfiguration> ruleConfigurations) {\r\n        Collection<RuleConfiguration> configurations = new LinkedList<>();\r\n        for (RuleConfiguration each : ruleConfigurations) {\r\n            if (each instanceof ShardingRuleConfiguration) {\r\n                ShardingRuleConfiguration config = (ShardingRuleConfiguration) each;\r\n                Preconditions.checkState(!config.getTables().isEmpty() || null != config.getDefaultTableShardingStrategy(),\r\n                        \"No available sharding rule configuration in `%s` for orchestration.\", shardingSchemaName);\r\n                configurations.add(each);\r\n            } else if (each instanceof MasterSlaveRuleConfiguration) {\r\n                MasterSlaveRuleConfiguration config = (MasterSlaveRuleConfiguration) each;\r\n                config.getDataSources().forEach(group -> Preconditions.checkState(\r\n                        !group.getMasterDataSourceName().isEmpty(), \"No available master-slave rule configuration in `%s` for orchestration.\", shardingSchemaName));\r\n                configurations.add(each);\r\n            } else if (each instanceof EncryptRuleConfiguration) {\r\n                EncryptRuleConfiguration config = (EncryptRuleConfiguration) each;\r\n                Preconditions.checkState(!config.getEncryptors().isEmpty(), \"No available encrypt rule configuration in `%s` for orchestration.\", shardingSchemaName);\r\n                configurations.add(each);\r\n            } else if (each instanceof ShadowRuleConfiguration) {\r\n                ShadowRuleConfiguration config = (ShadowRuleConfiguration) each;\r\n                Preconditions.checkState(!config.getColumn().isEmpty() && null != config.getShadowMappings(), \"No available shadow rule configuration in `%s` for orchestration.\", shardingSchemaName);\r\n                configurations.add(each);\r\n            }\r\n        }\r\n        YamlRootRuleConfigurations yamlRuleConfigurations = new YamlRootRuleConfigurations();\r\n        yamlRuleConfigurations.setRules(new YamlRuleConfigurationSwapperEngine().swapToYamlConfigurations(configurations));\r\n        repository.persist(node.getRulePath(shardingSchemaName), YamlEngine.marshal(yamlRuleConfigurations));\r\n    }\r\n```\r\n\r\nI will try to fix it later.", "url": "https://github.com/apache/shardingsphere/issues/6098", "user": "menghaoranss", "labels": ["bug", "orchestration"], "created": "2020-06-17 10:01:02", "closed": "2020-06-22 02:19:38", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "EncryptRule use equalsIgnoreCase method to match encrypt column, but use equals method to match decrypt column.", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\nShardingSphere  4.0.1\r\n\r\n### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?\r\nShardingSphere-JDBC\r\n\r\n### Expected behavior\r\nWith the same encrypt-rule, decrypt mode work as same as encrypt mode.\r\n### Actual behavior\r\nEncrypt mode works, but decrypt mode not.\r\n\r\n### Reason analyze (If you can)\r\nEncryptRule use equalsIgnoreCase method to match encrypt column, but use equals method to match decrypt column.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n---------------------------------------------------------------\r\n sharding rule configuration: \r\n```\r\nspring:\r\n  shardingsphere:\r\n    props:\r\n      sql.show: true\r\n      query.with.cipher.column: true\r\n    sharding:\r\n      encrypt-rule:\r\n        encryptors:\r\n          encryptor_aes_salt:\r\n            type: aes-salt\r\n            props:\r\n              aes.key.value: 123456\r\n        tables:\r\n          t_account_salt:\r\n            columns:\r\n              mobile:\r\n                cipherColumn: mobile_cipher\r\n                assistedQueryColumn: mobile_assisted\r\n                encryptor: encryptor_aes_salt\r\n```\r\n---------------------------------------------------------------------------------------\r\nTip: Use mysql config with \"lower_case_table_names=1\" , it will makes mysql don't care about the column is lower case or upper case. In sharding encrypt table,  use upper case columns to design. In application config, use lower case to config the cipherColumn and assistedQueryColumn. Then insert sql works correctly, but select sql not work.\r\n\r\n----------------------------------------------------------------------------------------\r\nWith this problem, I find the code in 'encrypt-core-common' module :\r\n```\r\nEncryptTable.java : \r\n    /**\r\n     * Find encryptor.\r\n     *\r\n     * @param logicColumn column name\r\n     * @return encryptor\r\n     */\r\n    public Optional<String> findEncryptor(final String logicColumn) {\r\n        Optional<String> originLogicColumnName = findOriginLogicColumnName(logicColumn);\r\n        return originLogicColumnName.isPresent() && columns.containsKey(originLogicColumnName.get())\r\n                ? Optional.of(columns.get(originLogicColumnName.get()).getEncryptor()) : Optional.empty();\r\n    }\r\n    \r\n    private Optional<String> findOriginLogicColumnName(final String logicColumn) {\r\n        for (String each : columns.keySet()) {\r\n            if (logicColumn.equalsIgnoreCase(each)) {\r\n                return Optional.of(each);\r\n            }\r\n        }\r\n        return Optional.empty();\r\n    }\r\n\r\n```\r\nnote: Here use String's equalsIgnoreCase method to match. If true sharding-jdbc may invoke ShardingEncryptor's encrypt method.\r\n```\r\nEncryptRule.java : \r\n\r\n    /**\r\n     * Is cipher column or not.\r\n     *\r\n     * @param tableName table name\r\n     * @param columnName column name\r\n     * @return cipher column or not\r\n     */\r\n    public boolean isCipherColumn(final String tableName, final String columnName) {\r\n        return tables.containsKey(tableName) && tables.get(tableName).getCipherColumns().contains(columnName);\r\n    }\r\n\r\n```\r\nnote: tables.get(tableName).getCipherColumns() retuen a linkedlist , LinkedList's contains method use equals to match.  If true sharding-jdbc may invoke ShardingEncryptor's decrypt method.\r\n\r\n-----------------------------------------------------------------------\r\n\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\nsee previous.", "url": "https://github.com/apache/shardingsphere/issues/5893", "user": "big-mountain-z", "labels": ["bug", "encrypt", "good first issue"], "created": "2020-06-02 13:37:54", "closed": "2020-06-11 17:21:41", "commits": {"cca5561f989b4ac0c47b50cceec4a41d8bf8bf8b": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "cca5561f989b4ac0c47b50cceec4a41d8bf8bf8b", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a589870e09107c355ed97b1bc6a7e34e1a2bdd3c"], "nameRev": "cca5561f989b4ac0c47b50cceec4a41d8bf8bf8b master~133", "commitMessage": "fix issue#5893: (#5992)\n\n* fix issue#5893:\r\nEncryptRule use equalsIgnoreCase method to match encrypt column, but use equals method to match decrypt column. #5893\r\n\r\n* fix issue#5893:\r\nEncryptRule use equalsIgnoreCase method to match encrypt column, but use equals method to match decrypt column. #5893\r\nremove private function and use java8 lambda to instead of for each.", "commitDateTime": "2020-06-12 01:21:40", "authoredDateTime": "2020-06-12 01:21:40", "commitGitStats": [{"filePath": "shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-common/src/main/java/org/apache/shardingsphere/encrypt/rule/EncryptRule.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptRule.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rule.EncryptRule.isCipherColumn(java.lang.String,java.lang.String)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.rule.EncryptRule.getEncryptAssistedQueryValues(java.lang.String,java.lang.String,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.rule.EncryptRule.getEncryptValues(java.lang.String,java.lang.String,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "select case when throws nullpoint exception", "body": "select case when 1=1 then 1 else 0 end\r\n\r\njava.lang.NullPointerException: null\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) ~[antlr4-runtime-4.7.2.jar:4.7.2]\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitCaseExpression(MySQLVisitor.java:585) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0]\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitCaseExpression(MySQLVisitor.java:121) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0]\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$CaseExpressionContext.accept(MySQLStatementParser.java:17875) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0]\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18) ~[antlr4-runtime-4.7.2.jar:4.7.2]\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitRemainSimpleExpr(MySQLVisitor.java:572) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0]\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitSimpleExpr(MySQLVisitor.java:431) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0]\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitSimpleExpr(MySQLVisitor.java:121) ~[shardingsphere-sql-parser-mysql-4.1.0.jar:4.1.0]\r\n", "url": "https://github.com/apache/shardingsphere/issues/5870", "user": "zhaolin81", "labels": ["bug", "duplicate"], "created": "2020-06-01 07:29:21", "closed": "2020-06-01 12:40:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ERROR 1054 (42S22): Unknown column 't_order.order_id' in 'field list'", "body": "Which version of ShardingSphere did you use?\r\n4.1.0\r\n\r\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\nSteps to reproduce the behavior\r\n\r\nwhen executing the follow sql: \r\n```sql\r\nSELECT `t_order`.`user_id`, `t_order`.`order_id`, `t_order`.`name` FROM `t_order` ORDER BY `t_order`.`order_id` ASC  ;\r\n```\r\nthe follow error is raised:\r\n```bash\r\nERROR 1054 (42S22): Unknown column 't_order.order_id' in 'field list'\r\n```\r\n\r\nthe actual sql is wrong:\r\n```sql\r\nSELECT `t_order_0`.`user_id`, `t_order_0`.`order_id`, `t_order_0`.`name` , `t_order`.`order_id` AS ORDER_BY_DERIVED_0 FROM `t_order_0` ORDER BY `t_order_0`.`order_id` ASC\r\n```", "url": "https://github.com/apache/shardingsphere/issues/5857", "user": "hongfuli", "labels": ["SQL parse", "bug", "pending", "sharding"], "created": "2020-05-30 14:30:59", "closed": "2020-06-22 03:13:47", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Sharding Proxy Registry Center Disable SlaveDB Doesn`t Work\uff01", "body": "## registry center forbidden does not work\r\n\r\n**environments:**\r\n\r\n- mysql:5.7\r\n\r\n- shardingproxy:4.1\r\n\r\n- zk:3.6.1\r\n\r\nI have disabled my **slave_ds_1** through shardingsphere-ui, like this:\r\n![image](https://user-images.githubusercontent.com/52565931/83247105-a82f4e80-a1d5-11ea-9127-c159ee0be0ca.png)\r\nand in zk, the value has been **DISABLED**, like this:\r\n![image](https://user-images.githubusercontent.com/52565931/83247355-fe03f680-a1d5-11ea-98e4-7e4b47c0ec36.png)\r\nbut in my springboot project, I called my test interface several times, I found it still find data from the slave_ds_1 that has been forbidden. like this:\r\n![image](https://user-images.githubusercontent.com/52565931/83248300-74edbf00-a1d7-11ea-9f70-370576378c9e.png)\r\nThis is ok , that the data find from the alive db, but after I call my test interface several times, the data changed from the db that has been disabled, \r\n![image](https://user-images.githubusercontent.com/52565931/83248651-fe9d8c80-a1d7-11ea-80fa-68b3f2474e1e.png)\r\nI restart the shardingproxy but the problem still there.\r\nI really dont know why my disable set didn`t work?\r\n\r\nthis is my server.yaml:\r\n![image](https://user-images.githubusercontent.com/52565931/83249453-2c370580-a1d9-11ea-88bd-56fcb0e53533.png)\r\n\r\n\r\nthis is my confit-mater_slave.yaml:\r\n![image](https://user-images.githubusercontent.com/52565931/83249419-1c1f2600-a1d9-11ea-8a7a-bcf1db50c256.png)\r\n", "url": "https://github.com/apache/shardingsphere/issues/5851", "user": "Randdon", "labels": ["bug", "orchestration"], "created": "2020-05-29 10:28:53", "closed": "2020-06-04 03:53:44", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "rename module shardingsphere-kernal to shardingsphere-kernel", "body": "rename module shardingsphere-kernal to shardingsphere-kernel\r\nrename module shardingsphere-kernal-context to shardingsphere-kernel-context\r\nrename package org.apache.shardingsphere.kernal to org.apache.shardingsphere.kernel", "url": "https://github.com/apache/shardingsphere/issues/5837", "user": "ningpp", "labels": ["bug"], "created": "2020-05-29 03:10:43", "closed": "2020-05-29 10:38:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.ClassCastException: org.apache.shardingsphere.sql.parser.sql.segment.dml.column.ColumnSegment cannot be cast to org.apache.shardingsphere.sql.parser.sql.segment.dml.expr.ExpressionSegment ", "body": "shardingsphere 4.0.1 is ok, but 4.1.0 throws an exception\uff1f\r\n\r\nshardingsphere : 4.1.0\r\n\r\nSQL:  \r\n\r\n```sql\r\nupdate ic_goods_occupy_record set actual_amount = pre_amount, pre_amount = 0, version = version + 1, update_time = now() ,update_person = ? where biz_bill_no = ? or orig_bill_no = ? and is_deleted = 0\r\n```\r\n\r\n```\r\norg.mybatis.spring.MyBatisSystemException: nested exception is \r\norg.apache.ibatis.exceptions.PersistenceException: ### Error updating database. Cause: java.lang.ClassCastException: \r\norg.apache.shardingsphere.sql.parser.sql.segment.dml.column.ColumnSegment cannot be cast to org.apache.shardingsphere.sql.parser.sql.segment.dml.expr.ExpressionSegment \r\n### T The error may involve defaultParameterMap \r\n### The error occurred while setting parameters \r\n### SQL: update ic_goods_occupy_record set actual_amount = pre_amount, pre_amount = 0, version = version + 1, update_time = now() ,update_person = ? where biz_bill_no = ? or orig_bill_no = ? and is_deleted = 0 \r\n### Cause: java.lang.ClassCastException: org.apache.shardingsphere.sql.parser.sql.segment.dml.column.ColumnSegment cannot be cast to org.apache.shardingsphere.sql.parser.sql.segment.dml.expr.ExpressionSegment \r\nat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:78) \r\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440) \r\nat com.sun.proxy.$Proxy73.update(Unknown Source) at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287) at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67) at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57) at com.sun.proxy.$Proxy107.updateActualAmountByOrderNo(Unknown Source) \r\nat com.ncarzone.saleinventory.biz.component.goodinv.GoodsOccupyRecordComponent.updateActualAmountByOrderNo(GoodsOccupyRecordComponent.java:60)\r\nat com.ncarzone.saleinventory.biz.component.goodinv.GoodsOccupyRecordComponent$$FastClassBySpringCGLIB$$fc1b0c75.invoke() \r\nat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684) at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174) at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174) at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n```", "url": "https://github.com/apache/shardingsphere/issues/5813", "user": "xfyang1988", "labels": ["MySQL", "SQL parse", "bug"], "created": "2020-05-27 15:42:23", "closed": "2020-05-28 14:49:54", "commits": {"3723bb64ee276bd5f6e2a86e96ee7a7328c343ec": {"commitGHEventType": "referenced", "commitUser": "kimmking"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3723bb64ee276bd5f6e2a86e96ee7a7328c343ec", "commitGHEventType": "referenced", "commitUser": "kimmking", "commitParents": ["6c1a3b9c7e45b05480601084067af4c6c321280a"], "nameRev": "3723bb64ee276bd5f6e2a86e96ee7a7328c343ec master~228", "commitMessage": "fix #5813 (#5824)\n\n* fix issue #5813\r\n\r\n* simple code", "commitDateTime": "2020-05-28 22:49:53", "authoredDateTime": "2020-05-28 22:49:53", "commitGitStats": [{"filePath": "shardingsphere-integration-test/shardingsphere-test-suite/src/test/resources/integrate/cases/dml/dataset/db/update_with_column_equal_column.xml", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "shardingsphere-integration-test/shardingsphere-test-suite/src/test/resources/integrate/cases/dml/dataset/dbtbl_with_masterslave/update_with_column_equal_column.xml", "insertions": 224, "deletions": 0, "lines": 224}, {"filePath": "shardingsphere-integration-test/shardingsphere-test-suite/src/test/resources/integrate/cases/dml/dataset/masterslave/update_with_column_equal_column.xml", "insertions": 144, "deletions": 0, "lines": 144}, {"filePath": "shardingsphere-integration-test/shardingsphere-test-suite/src/test/resources/integrate/cases/dml/dataset/shadow/update_with_column_equal_column.xml", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "shardingsphere-integration-test/shardingsphere-test-suite/src/test/resources/integrate/cases/dml/dataset/tbl/update_with_column_equal_column.xml", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "shardingsphere-integration-test/shardingsphere-test-suite/src/test/resources/integrate/cases/dml/dml-integrate-test-cases.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/impl/MySQLDMLVisitor.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/update.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sql/supported/dml/update.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLDMLVisitor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignmentValue(org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.AssignmentValueContext)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "CaseExpressionContext#simpleExpr may throw NullPointerException (version: 4.1.0)", "body": "First of all, my English is not very good.(\u6240\u4ee5, \u62b1\u6b49\u54af, \u95ee\u9898\u63cf\u8ff0\u4e0d\u6e05\u695a, \u4e5f\u4e0d\u80fd\u602a\u6211\u54af)\r\n### Which version of ShardingSphere did you use?\r\nversion: 4.1.0\r\n### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?\r\nShardingSphere-JDBC \r\n### Expected behavior\r\nExecute SQL normally.\r\nShardingSphere-JDBC Version 4.0.0 does not have this problem\r\n### Actual behavior\r\nthrow NullPointerException\r\n### Reason analyze (If you can)\r\nThe following SQL is causing the problem\r\n```\r\nupdate xxx_table\r\n<trim prefix=\"set\" suffixOverrides=\",\">\r\n    <trim prefix=\"column1= case\" suffix=\"end,\" >\r\n        <foreach collection=\"list\" item=\"item\" index=\"index\">\r\n            <if test=\"item.column1 != null\">\r\n                when id = #{item.id} then #{item.column1}\r\n            </if>\r\n        </foreach>\r\n        else column1\r\n    </trim>\r\n    <trim prefix=\"column2 = case\" suffix=\"end,\" >\r\n        <foreach collection=\"list\" item=\"item\" index=\"index\">\r\n            <if test=\"item.column2 != null\">\r\n                when id = #{item.id} then #{item.column2}\r\n            </if>\r\n        </foreach>\r\n        else column2\r\n    </trim>\r\n</trim>\r\nwhere\r\n<foreach collection=\"list\" item=\"item\" open=\"( \" separator=\") or (\" close=\" )\">\r\n    id = #{item.id}\r\n</foreach>\r\n```\r\n\r\nThe actual SQL may be like this\r\n```\r\nUPDATE\r\n    xxx_table \r\nSET\r\n    column1 =\r\nCASE\r\n\t\tWHEN id = 1 THEN 'value1'\r\n\t\tWHEN id = 2 THEN 'value2'\r\n\t\tELSE column1\r\nEND,\r\n    column2 =\r\nCASE\r\n\t\tWHEN id = 1 THEN 'value21'\r\n\t\tWHEN id = 2 THEN 'value22'\r\n\t\tELSE update_user \r\nEND \r\nWHERE\r\n(\r\n    id = 1 or id = 2\r\n)\r\n```\r\n\r\nThis is just a personal analysis, it may be wrong.\r\n\r\nWhen analyzing this condition\r\n```<trim prefix=\"column1= case\" suffix=\"end,\" >```\r\nMySQLVisitor#visitCaseExpression (MySQLVisitor.java line 585)call AbstractParseTreeVisitor#visit(CaseExpressionContext#simpleExpr)\r\nwill throw NullPointerException\r\n\r\nBelow is the stack information: \r\n```\r\norg.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \r\n### Error updating database.  Cause: java.lang.NullPointerException\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: update class_conf  set `value` = case when id = ? then ?   else `value` end,          update_user = case when id = ? then ?  else update_user end  where  ( id = ? )\r\n### Cause: java.lang.NullPointerException\r\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)\r\n\tat com.sun.proxy.$Proxy165.update(Unknown Source)\r\n\tat org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:294)\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\r\n\tat com.sun.proxy.$Proxy174.batchUpdateClassConf(Unknown Source)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\r\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)\r\n\tat com.sun.proxy.$Proxy175.batchUpdateClassConf(Unknown Source)\r\n\tat com.ewt360.schooluserservice.service.biz.repo.dao.impl.ClassConfDaoImpl.batchUpdateAndInsertClassConf(ClassConfDaoImpl.java:40)\r\n\tat com.ewt360.schooluserservice.service.biz.repo.dao.impl.ClassConfDaoImpl$$FastClassBySpringCGLIB$$5ea3546e.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\r\n\tat com.ewt360.schooluserservice.service.biz.repo.dao.impl.ClassConfDaoImpl$$EnhancerBySpringCGLIB$$3dcbe6bc.batchUpdateAndInsertClassConf(<generated>)\r\n\tat com.ewt360.schooluserservice.service.biz.service.impl.classes.ClassServiceImpl.batchUpdateClassConf(ClassServiceImpl.java:643)\r\n\tat com.ewt360.schooluserservice.service.biz.service.impl.classes.ClassServiceImpl$$FastClassBySpringCGLIB$$d3833478.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\r\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\r\n\tat com.ewt360.schooluserservice.service.biz.service.impl.classes.ClassServiceImpl$$EnhancerBySpringCGLIB$$c71c74ae.batchUpdateClassConf(<generated>)\r\n\tat com.ewt360.schooluserservice.service.facade.impl.classes.ClassFacadeImpl.batchUpdateClassConf(ClassFacadeImpl.java:174)\r\n\tat com.ewt360.schooluserservice.service.facade.impl.classes.ClassFacadeImpl$$FastClassBySpringCGLIB$$9421d509.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\r\n\tat org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:150)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)\r\n\tat com.ewt360.framework.container.web.LogRequestResponse.LogRequestResponseAdvice.handle(LogRequestResponseAdvice.java:68)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:627)\r\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:616)\r\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\r\n\tat com.ewt360.schooluserservice.service.facade.impl.classes.ClassFacadeImpl$$EnhancerBySpringCGLIB$$1a370ceb.batchUpdateClassConf(<generated>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:111)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.cloud.sleuth.instrument.web.TraceFilter.doFilter(TraceFilter.java:166)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.apache.ibatis.exceptions.PersistenceException: \r\n### Error updating database.  Cause: java.lang.NullPointerException\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: update class_conf  set `value` = case when id = ? then ?   else `value` end,          update_user = case when id = ? then ?  else update_user end  where  ( id = ? )\r\n### Cause: java.lang.NullPointerException\r\n\tat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)\r\n\t... 142 common frames omitted\r\nCaused by: java.lang.NullPointerException: null\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitCaseExpression(MySQLVisitor.java:585)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitCaseExpression(MySQLVisitor.java:121)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$CaseExpressionContext.accept(MySQLStatementParser.java:17875)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitRemainSimpleExpr(MySQLVisitor.java:572)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitSimpleExpr(MySQLVisitor.java:431)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitSimpleExpr(MySQLVisitor.java:121)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SimpleExprContext.accept(MySQLStatementParser.java:12207)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBitExpr(MySQLVisitor.java:376)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBitExpr(MySQLVisitor.java:121)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$BitExprContext.accept(MySQLStatementParser.java:11916)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:316)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:121)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$PredicateContext.accept(MySQLStatementParser.java:11690)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:273)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:121)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$BooleanPrimaryContext.accept(MySQLStatementParser.java:11463)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:258)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:121)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ExprContext.accept(MySQLStatementParser.java:11241)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignmentValue(MySQLDMLVisitor.java:250)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignmentValue(MySQLDMLVisitor.java:127)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$AssignmentValueContext.accept(MySQLStatementParser.java:1941)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignment(MySQLDMLVisitor.java:242)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitAssignment(MySQLDMLVisitor.java:127)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$AssignmentContext.accept(MySQLStatementParser.java:1753)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSetAssignmentsClause(MySQLDMLVisitor.java:225)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSetAssignmentsClause(MySQLDMLVisitor.java:127)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SetAssignmentsClauseContext.accept(MySQLStatementParser.java:1801)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUpdate(MySQLDMLVisitor.java:213)\r\n\tat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUpdate(MySQLDMLVisitor.java:127)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$UpdateContext.accept(MySQLStatementParser.java:1622)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80)\r\n\tat org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61)\r\n\tat org.apache.shardingsphere.underlying.route.DataNodeRouter.createRouteContext(DataNodeRouter.java:97)\r\n\tat org.apache.shardingsphere.underlying.route.DataNodeRouter.executeRoute(DataNodeRouter.java:89)\r\n\tat org.apache.shardingsphere.underlying.route.DataNodeRouter.route(DataNodeRouter.java:76)\r\n\tat org.apache.shardingsphere.underlying.pluggble.prepare.PreparedQueryPrepareEngine.route(PreparedQueryPrepareEngine.java:54)\r\n\tat org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.executeRoute(BasePrepareEngine.java:96)\r\n\tat org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.prepare(BasePrepareEngine.java:83)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.prepare(ShardingPreparedStatement.java:183)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:143)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\r\n\tat org.apache.ibatis.executor.ReuseExecutor.doUpdate(ReuseExecutor.java:52)\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\r\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\r\n\tat com.sun.proxy.$Proxy197.update(Unknown Source)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\r\n\t... 147 common frames omitted\r\n```\r\n", "url": "https://github.com/apache/shardingsphere/issues/5809", "user": "azraelee", "labels": ["bug", "duplicate"], "created": "2020-05-27 02:56:32", "closed": "2020-05-27 12:20:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "error in MySQLNullBitmap cause result wrong when more then one NULL fields.", "body": "direct show the wrong code in class:org.apache.shardingsphere.db.protocol.mysql.packet.command.query.binary.execute.MySQLNullBitmap\r\n\r\n`\r\n\r\n    /**\r\n     * Set null bit.\r\n     *\r\n     * @param index column index\r\n     */\r\n    public void setNullBit(final int index) {\r\n        nullBitmap[getBytePosition(index)] = 1 << getBitPosition(index);\r\n    }\r\n`\r\n\r\nin mysql protocal :https://dev.mysql.com/doc/internals/en/null-bitmap.html\r\n`\r\nnulls[byte_pos] |= 1 << bit_pos\r\n`\r\n\r\nso the right is:\r\n`\r\n\r\n    public void setNullBit(final int index) {\r\n        nullBitmap[getBytePosition(index)] |= 1 << getBitPosition(index);\r\n    }\r\n`\r\n\r\nthis is reason issue #4707 ", "url": "https://github.com/apache/shardingsphere/issues/5803", "user": "wangjing112", "labels": ["MySQL", "bug", "proxy"], "created": "2020-05-26 11:25:40", "closed": "2020-06-05 09:38:24", "commits": {"4e233e0f704f5848a27688797f19af1a4dba1bdc": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "4e233e0f704f5848a27688797f19af1a4dba1bdc", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d0e54e6624170f2b0dc93615a385587dc183ec22"], "nameRev": "4e233e0f704f5848a27688797f19af1a4dba1bdc master~173", "commitMessage": "#5803, fix MySQLNullBitmap (#5931)\n\n", "commitDateTime": "2020-06-05 17:38:23", "authoredDateTime": "2020-06-05 17:38:23", "commitGitStats": [{"filePath": "shardingsphere-db-protocol/shardingsphere-db-protocol-mysql/src/main/java/org/apache/shardingsphere/db/protocol/mysql/packet/command/query/binary/execute/MySQLNullBitmap.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLNullBitmap.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.db.protocol.mysql.packet.command.query.binary.execute.MySQLNullBitmap.setNullBit(int)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "mssqlserver \uff0cwhen \"select top 1 <column> from <table>\" \uff0cthrows NullPointException", "body": "I changed to \"select top (1)\"  to sovle the problem\uff0ci think that was a bug\u3002", "url": "https://github.com/apache/shardingsphere/issues/5782", "user": "zhaolin81", "labels": ["SQL parse", "SQLServer", "bug", "duplicate"], "created": "2020-05-25 09:46:54", "closed": "2020-06-10 07:40:04", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "Why ResultSet.getNString func is not supported", "body": "\r\npublic final String getNString(final int columnIndex) throws SQLException {\r\n    throw new SQLFeatureNotSupportedException(\"getNString\");\r\n}\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/5778", "user": "zhaolin81", "labels": ["SQLServer", "bug"], "created": "2020-05-25 08:54:05", "closed": "2020-05-25 14:30:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "sharding-jdbc parse sql java.lang.NullPointerException in postgresql", "body": "dependency:\r\n`        <dependency>\r\n            <groupId>org.apache.shardingsphere</groupId>\r\n            <artifactId>sharding-jdbc-core</artifactId>\r\n            <version>4.1.0</version>\r\n        </dependency>`\r\n\r\nMy database is postgresql.\r\n\r\nI only ues jdbc to query database.\r\n\r\nwhen my sql is `select * from me`it will run success.\r\n\r\nBut when my sql is\r\n\r\n`select uuid from me`\r\n\r\nor\r\n\r\n`select * from me where uuid = '15c2c185-9068-4db9-aad7-6c0d52713f28'`\r\n\r\nit will occur error.the error info:\r\n\r\n`line 1:25 no viable alternative at input 'uuid'\r\nline 1:25 mismatched input 'uuid' expecting {'U', 'u', '!', '~', '+', '-', '(', '{', '?', INSERT, UPDATE, DELETE, ALTER, DROP, TRUNCATE, SCHEMA, REVOKE, ADD, SET, INDEX, KEY, FUNCTION, TRIGGER, PROCEDURE, CASE, CAST, IF, NOT, NULL, TRUE, FALSE, EXISTS, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, CHAR, INTERVAL, TIME, TIMESTAMP, LOCALTIME, LOCALTIMESTAMP, YEAR, MONTH, DAY, HOUR, MINUTE, SECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, PRESERVE, DEFINER, CURRENT_USER, SQL, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, NAMES, INTEGER, REAL, DECIMAL, TYPE, ADMIN, BINARY, ESCAPE, EXCLUDE, PARTITION, ROW, UNKNOWN, ALWAYS, CASCADE, GENERATED, ISOLATION, LEVEL, OPTION, PRIVILEGES, READ, ROLE, ROWS, START, TRANSACTION, ACTION, CACHE, CHARACTERISTICS, CLUSTER, COMMENTS, CONSTRAINTS, CURRENT_TIMESTAMP, CYCLE, DATA, DATABASE, DEFAULTS, DEFERRED, DEPENDS, DOMAIN, EXCLUDING, EXECUTE, EXTENDED, EXTENSION, EXTERNAL, EXTRACT, FILTER, FIRST, FOLLOWING, FORCE, GLOBAL, IDENTITY, IMMEDIATE, INCLUDING, INCREMENT, INDEXES, INHERIT, INHERITS, INCLUDE, LANGUAGE, LARGE, LAST, LOGGED, MAIN, MATCH, MAXVALUE, MINVALUE, NOTHING, NULLS, OBJECT, OIDS, OVER, OWNED, OWNER, PARTIAL, PLAIN, PRECEDING, RANGE, RENAME, REPLICA, RESET, RESTART, RESTRICT, ROUTINE, RULE, SECURITY, SEQUENCE, SESSION, SHOW, SIMPLE, STATISTICS, STORAGE, TABLESPACE, TEMP, TEMPORARY, UNBOUNDED, UNLOGGED, USAGE, VALID, VALIDATE, WITHIN, WITHOUT, ZONE, OF, GROUPS, RECURSIVE, INT2, INT4, INT8, FLOAT4, FLOAT8, MACADDR8, INT4RANGE, INT8RANGE, IDENTIFIER_, STRING_, NUMBER_, HEX_DIGIT_, BIT_NUM_}\r\nException in thread \"main\" java.lang.IndexOutOfBoundsException: Index: 0\r\n\tat java.util.Collections$EmptyList.get(Collections.java:4456)\r\n\tat org.apache.shardingsphere.sql.parser.postgresql.visitor.PostgreSQLVisitor.visitExpr(PostgreSQLVisitor.java:247)\r\n\tat org.apache.shardingsphere.sql.parser.postgresql.visitor.PostgreSQLVisitor.visitExpr(PostgreSQLVisitor.java:113)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser$ExprContext.accept(PostgreSQLStatementParser.java:5384)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitWhereClause(PostgreSQLDMLVisitor.java:486)\r\n\tat org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitWhereClause(PostgreSQLDMLVisitor.java:112)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser$WhereClauseContext.accept(PostgreSQLStatementParser.java:3257)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitSelectClause(PostgreSQLDMLVisitor.java:271)\r\n\tat org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitSelectClause(PostgreSQLDMLVisitor.java:112)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser$SelectClauseContext.accept(PostgreSQLStatementParser.java:1987)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitUnionClause(PostgreSQLDMLVisitor.java:253)\r\n\tat org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitUnionClause(PostgreSQLDMLVisitor.java:112)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser$UnionClauseContext.accept(PostgreSQLStatementParser.java:1894)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitSelect(PostgreSQLDMLVisitor.java:245)\r\n\tat org.apache.shardingsphere.sql.parser.postgresql.visitor.impl.PostgreSQLDMLVisitor.visitSelect(PostgreSQLDMLVisitor.java:112)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser$SelectContext.accept(PostgreSQLStatementParser.java:1843)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80)\r\n\tat org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61)\r\n\tat org.apache.shardingsphere.underlying.route.DataNodeRouter.createRouteContext(DataNodeRouter.java:97)\r\n\tat org.apache.shardingsphere.underlying.route.DataNodeRouter.executeRoute(DataNodeRouter.java:89)\r\n\tat org.apache.shardingsphere.underlying.route.DataNodeRouter.route(DataNodeRouter.java:76)\r\n\tat org.apache.shardingsphere.underlying.pluggble.prepare.PreparedQueryPrepareEngine.route(PreparedQueryPrepareEngine.java:54)\r\n\tat org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.executeRoute(BasePrepareEngine.java:96)\r\n\tat org.apache.shardingsphere.underlying.pluggble.prepare.BasePrepareEngine.prepare(BasePrepareEngine.java:83)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.prepare(ShardingPreparedStatement.java:183)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:116)\r\n\tat com.example.demo.Main.main(Main.java:157)`", "url": "https://github.com/apache/shardingsphere/issues/5743", "user": "liuqiankun93", "labels": ["SQL parse", "bug"], "created": "2020-05-22 02:33:12", "closed": "2020-05-23 01:14:34", "commits": {"8b9bbf13d2491811b26f5ff95eb95418bb8b7054": {"commitGHEventType": "referenced", "commitUser": "kimmking"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8b9bbf13d2491811b26f5ff95eb95418bb8b7054", "commitGHEventType": "referenced", "commitUser": "kimmking", "commitParents": ["85b547a33620749b552c1f456c054a7a1a3dc1cc", "8b42f79e49ba14c89ffd46be9dda6607daa8646b"], "nameRev": "8b9bbf13d2491811b26f5ff95eb95418bb8b7054 tags/4.1.1~9", "commitMessage": "Merge pull request #5758 from jingshanglu/dev-4.x\n\nfix for #5743", "commitDateTime": "2020-05-25 16:08:29", "authoredDateTime": "2020-05-25 16:08:29", "commitGitStats": [{"filePath": "sharding-sql-test/src/main/resources/sql/supported/dml/select.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sql/dml/select.xml", "insertions": 20, "deletions": 0, "lines": 20}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "jpaQueryFactory.selectDistinct got exception with: SQL Error: 1064, SQLState: 42000", "body": "## Bug Report\r\n my shadring jdbc info is:\r\nShardingSphere-JDBC\r\nsharding-jdbc-spring-boot-starter:4.1.0\r\nsharding-jdbc-spring-namespace:4.1.0\r\n\r\nI use spring-data-jpa with mysql in springboot project, my env is:\r\nspring-data-jpa:2.0.1.RELEASE\r\nquerydsl-apt:4.1.4\r\nspring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource\r\nspring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver\r\n\r\n\r\nwhen program below runs will got exception:\r\n```\r\nQBaseRecord qBaseRecord = QBaseRecord.baseRecord;\r\nList<Integer> existRiskPlaceTypeIds = jpaQueryFactory.selectDistinct(qBaseRecord.riskPlaceTypeId)\r\n                .from(qBaseRecord)\r\n                .fetch();\r\n```\r\nthe exception is \r\n```\r\nHibernate: \r\n    select\r\n        distinct baserecord0_.risk_place_type_id as col_0_0_ \r\n    from\r\n        tmss_base_record baserecord0_\r\n[2020-05-20 18:19:33.786] [WARN ] [http-nio-8889-exec-3] --- [org.hibernate.engine.jdbc.spi.SqlExceptionHelper:129] : SQL Error: 1064, SQLState: 42000\r\n[2020-05-20 18:19:33.788] [ERROR] [http-nio-8889-exec-3] --- [org.hibernate.engine.jdbc.spi.SqlExceptionHelper:131] : You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'baserecord0_' at line 1\r\njavax.persistence.PersistenceException: org.hibernate.exception.SQLGrammarException: could not extract ResultSet\r\n\tat org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:149)\r\n\tat org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:157)\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1423)\r\n\tat org.hibernate.query.Query.getResultList(Query.java:146)\r\n\tat com.querydsl.jpa.impl.AbstractJPAQuery.getResultList(AbstractJPAQuery.java:160)\r\n\tat com.querydsl.jpa.impl.AbstractJPAQuery.fetch(AbstractJPAQuery.java:202)\r\n\tat com.neld.tmss.service.impl.BaseRecordServiceImpl.getOnSiteFirst(BaseRecordServiceImpl.java:4095)\r\n\tat com.neld.tmss.controller.BaseRecordController.getOnSiteFirst(BaseRecordController.java:623)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:661)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.hibernate.exception.SQLGrammarException: could not extract ResultSet\r\n\tat org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:63)\r\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:111)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:97)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:69)\r\n\tat org.hibernate.loader.Loader.getResultSet(Loader.java:2168)\r\n\tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1931)\r\n\tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1893)\r\n\tat org.hibernate.loader.Loader.doQuery(Loader.java:938)\r\n\tat org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2692)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2675)\r\n\tat org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507)\r\n\tat org.hibernate.loader.Loader.list(Loader.java:2502)\r\n\tat org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:502)\r\n\tat org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:392)\r\n\tat org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)\r\n\tat org.hibernate.internal.SessionImpl.list(SessionImpl.java:1489)\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1445)\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414)\r\n\t... 59 more\r\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'baserecord0_' at line 1\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:425)\r\n\tat com.mysql.jdbc.Util.getInstance(Util.java:408)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)\r\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)\r\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)\r\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)\r\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)\r\n\tat com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1966)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.getQueryResult(PreparedStatementExecutor.java:109)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.access$200(PreparedStatementExecutor.java:45)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor$2.executeSQL(PreparedStatementExecutor.java:101)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor$2.executeSQL(PreparedStatementExecutor.java:97)\r\n\tat org.apache.shardingsphere.sharding.execute.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:82)\r\n\tat org.apache.shardingsphere.sharding.execute.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:58)\r\n\tat org.apache.shardingsphere.underlying.executor.engine.ExecutorEngine.syncExecute(ExecutorEngine.java:97)\r\n\tat org.apache.shardingsphere.underlying.executor.engine.ExecutorEngine.parallelExecute(ExecutorEngine.java:93)\r\n\tat org.apache.shardingsphere.underlying.executor.engine.ExecutorEngine.execute(ExecutorEngine.java:76)\r\n\tat org.apache.shardingsphere.sharding.execute.sql.execute.SQLExecuteTemplate.execute(SQLExecuteTemplate.java:68)\r\n\tat org.apache.shardingsphere.sharding.execute.sql.execute.SQLExecuteTemplate.execute(SQLExecuteTemplate.java:51)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.AbstractStatementExecutor.executeCallback(AbstractStatementExecutor.java:129)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:104)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:118)\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)\r\n\t... 74 more\r\n```", "url": "https://github.com/apache/shardingsphere/issues/5708", "user": "gu-yan", "labels": ["bug", "duplicate", "sharding"], "created": "2020-05-20 10:58:44", "closed": "2020-06-10 06:18:39", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "select  sum(engines)    bugs .   maybe  engines  is a  key  words ", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.1.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-proxy\r\n### Expected behavior\r\nselect  count(engines)   \r\n### Actual behavior\r\nerror   can  not   execute  the sql . \r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\n\r\n\r\nmaster-slave read write split\r\n\r\ntable:\r\nmysql.slave.sock@lsl> desc aircraft ;\r\n+----------------+--------------+------+-----+---------+-------+\r\n| Field | Type | Null | Key | Default | Extra |\r\n+----------------+--------------+------+-----+---------+-------+\r\n| aircraft_code | char(3) | NO | PRI | NULL | |\r\n| aircraft_type | char(64) | NO | | NULL | |\r\n| engines | tinyint(4) | YES | | NULL | |\r\n| category | char(10) | NO | | NULL | |\r\n| wide_body | char(3) | NO | | NULL | |\r\n| wing_span | float(6,2) | NO | | NULL | |\r\n| length1 | float(6,2) | NO | | NULL | |\r\n| weight | int(7) | NO | | NULL | |\r\n| capacity | smallint(3) | NO | | NULL | |\r\n| pay_load | int(7) | NO | | NULL | |\r\n| cruising_speed | mediumint(5) | NO | | NULL | |\r\n| range_miles | mediumint(5) | NO | | NULL | |\r\n| pressurized | char(3) | NO | | NULL | |\r\n+----------------+--------------+------+-----+---------+-------+\r\n13 rows in set (0.01 sec)\r\n\r\nrun sql on proxy port 3307 :\r\n\r\nselect sum(engines) from aircraft ;\r\n\r\nerror list :\r\n\r\n3307@(none)> use xxxx\r\nDatabase changed\r\n3307@xxxx> select sum(engines) from aircraft ;\r\nERROR 10002 (C1000): 2Unknown exception: [null]\r\n3307@xxxx>\r\n\r\nstdout.log :\r\n\r\n[INFO ] 15:08:01.982 [epollEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0xb154cdd8, L:/0.0.0.0:3307] READ COMPLETE\r\nline 1:11 no viable alternative at input 'sum(engines'\r\nline 1:11 no viable alternative at input 'sum(engines'\r\n[ERROR] 15:08:51.210 [ShardingSphere-Command-3] o.a.s.s.f.c.CommandExecutorTask - Exception occur:\r\njava.lang.NullPointerException: null\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:315)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitPredicate(MySQLVisitor.java:121)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$PredicateContext.accept(MySQLStatementParser.java:11690)\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:273)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitBooleanPrimary(MySQLVisitor.java:121)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$BooleanPrimaryContext.accept(MySQLStatementParser.java:11463)\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:258)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitExpr(MySQLVisitor.java:121)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ExprContext.accept(MySQLStatementParser.java:11241)\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.createProjection(MySQLDMLVisitor.java:441)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjection(MySQLDMLVisitor.java:429)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjection(MySQLDMLVisitor.java:127)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ProjectionContext.accept(MySQLStatementParser.java:5370)\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjections(MySQLDMLVisitor.java:405)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitProjections(MySQLDMLVisitor.java:127)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ProjectionsContext.accept(MySQLStatementParser.java:4865)\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:324)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:127)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectClauseContext.accept(MySQLStatementParser.java:4551)\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:317)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:127)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$UnionClauseContext.accept(MySQLStatementParser.java:4446)\r\n\r\nt org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:309)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:127)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectContext.accept(MySQLStatementParser.java:3098)\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80)\r\nat org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61)\r\nat org.apache.shardingsphere.shardingproxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(TextProtocolBackendHandlerFactory.java:69)\r\nat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.(MySQLComQueryPacketExecutor.java:65)\r\nat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecutorFactory.newInstance(MySQLCommandExecutorFactory.java:70)\r\nat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecuteEngine.getCommandExecutor(MySQLCommandExecuteEngine.java:59)\r\nat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:92)\r\nline 1:28 no viable alternative at input 'engines'\r\nline 1:28 mismatched input 'engines' expecting {TRUNCATE, COLUMN, POSITION, VIEW, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, SIGNED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CODE, CONTEXT, SOURCE, CHANNEL, CLONE, AGGREGATE, INSTALL, COMPONENT, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, IO_THREAD, SQL_THREAD, SQL_BEFORE_GTIDS, SQL_AFTER_GTIDS, MASTER_LOG_FILE, MASTER_LOG_POS, RELAY_LOG_FILE, RELAY_LOG_POS, SQL_AFTER_MTS_GAPS, UNTIL, DEFAULT_AUTH, PLUGIN_DIR, STOP, IDENTIFIER_}\r\n[ERROR] 15:12:03.617 [ShardingSphere-Command-10] o.a.s.s.f.c.CommandExecutorTask - Exception occur:\r\njava.lang.NullPointerException: null\r\n\r\ncan repeat\r\n\r\nand alter table\r\n\r\n3307@xxxx> alter table aircraft change engines bb tinyint ;\r\nERROR 10002 (C1000): 2Unknown exception: [null]\r\n\r\nget ERRORS\r\n\r\n3307@xxxx> alter table aircraft change engines bb tinyint ;\r\nQuery OK, 135 rows affected (0.05 sec)\r\n\r\ncolumn engines with `` can run well .\r\n\r\nstdout.log shows errors :\r\n\r\nline 1:31 no viable alternative at input 'engines'\r\nline 1:31 extraneous input 'engines' expecting {TRUNCATE, COLUMN, POSITION, VIEW, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, SIGNED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CODE, CONTEXT, SOURCE, CHANNEL, CLONE, AGGREGATE, INSTALL, COMPONENT, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, IO_THREAD, SQL_THREAD, SQL_BEFORE_GTIDS, SQL_AFTER_GTIDS, MASTER_LOG_FILE, MASTER_LOG_POS, RELAY_LOG_FILE, RELAY_LOG_POS, SQL_AFTER_MTS_GAPS, UNTIL, DEFAULT_AUTH, PLUGIN_DIR, STOP, IDENTIFIER_}\r\n[ERROR] 16:00:36.817 [ShardingSphere-Command-5] o.a.s.s.f.c.CommandExecutorTask - Exception occur:\r\njava.lang.NullPointerException: null\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitColumnName(MySQLVisitor.java:224)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.MySQLVisitor.visitColumnName(MySQLVisitor.java:121)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ColumnNameContext.accept(MySQLStatementParser.java:9266)\r\n\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitColumnDefinition(MySQLDDLVisitor.java:227)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitColumnDefinition(MySQLDDLVisitor.java:90)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$ColumnDefinitionContext.accept(MySQLStatementParser.java:23179)\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitAlterDefinitionClause(MySQLDDLVisitor.java:189)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitAlterDefinitionClause(MySQLDDLVisitor.java:90)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$AlterDefinitionClauseContext.accept(MySQLStatementParser.java:24842)\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitAlterTable(MySQLDDLVisitor.java:161)\r\nat org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDDLVisitor.visitAlterTable(MySQLDDLVisitor.java:90)\r\nat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$AlterTableContext.accept(MySQLStatementParser.java:19238)\r\nat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\nat org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:80)\r\nat org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:61)\r\nat org.apache.shardingsphere.shardingproxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(TextProtocolBackendHandlerFactory.java:69)\r\nat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.(MySQLComQueryPacketExecutor.java:65)\r\nat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecutorFactory.newInstance(MySQLCommandExecutorFactory.java:70)\r\nat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecuteEngine.getCommandExecutor(MySQLCommandExecuteEngine.java:59)\r\nat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:92)\r\nat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:71)\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\nat java.lang.Thread.run(Thread.java:748)", "url": "https://github.com/apache/shardingsphere/issues/5591", "user": "nilly", "labels": ["SQL parse", "bug"], "created": "2020-05-14 02:24:52", "closed": "2020-05-16 15:05:01", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Range from 0 to more than Integer.MAX_VALUE occur exception", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.1.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-proxy\r\n### Expected behavior\r\nquery success\r\n### Actual behavior\r\nthrow exception\r\n![image](https://user-images.githubusercontent.com/19368482/81636431-6cab2b00-9446-11ea-8df6-23b6493dc38f.png)\r\n![image](https://user-images.githubusercontent.com/19368482/81636474-8ba9bd00-9446-11ea-8d20-6be5ed47634c.png)\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nquery data range from 0 to 3147483647 \uff08more than Integer.MAX_VALUE\uff09\r\n### Example codes for reproduce this issue (such as a github link).\r\n#### config-xxx.yaml\r\n```yaml\r\nschemaName: databasemanager\r\n\r\ndataSources:\r\n  ds_0:\r\n    url: jdbc:mysql://192.168.137.102:3306/databasemanager?serverTimezone=UTC&useSSL=false\r\n    username: root\r\n    password: xxxx\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 50\r\n  ds_1:\r\n    url: jdbc:mysql://192.168.137.102:3307/databasemanager?serverTimezone=UTC&useSSL=false\r\n    username: root\r\n    password: xxxxx\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 50\r\n\r\nshardingRule:\r\n  tables:\r\n    t_cluster:\r\n      actualDataNodes: ds_${0..1}.t_cluster\r\n      tableStrategy:\r\n        none:\r\n      databaseStrategy:\r\n        complex:\r\n          shardingColumns: clusterId\r\n          algorithmClassName: org.apache.shardingsphere.shardingproxy.algorithm.complex.AutoPartitionByLong\r\n    t_cluster_instance:\r\n      actualDataNodes: ds_${0..1}.t_cluster_instance\r\n      tableStrategy:\r\n        none:\r\n      databaseStrategy:\r\n        inline:\r\n          shardingColumn: clusterId\r\n          algorithmExpression: ds_${clusterId.hashCode().abs() % 2}\r\n  bindingTables:\r\n    - t_cluster,t_cluster_instance\r\n  defaultDatabaseStrategy:\r\n    none:\r\n  defaultTableStrategy:\r\n    none:\r\n\r\n\r\n```\r\n\r\n#### table\r\n```sql\r\ncreate table `t_cluster` (\r\n\t`clusterId` bigint (20),\r\n\t`clusterName` varchar (384),\r\n\t`projectId` varchar (192),\r\n\t`createTime` datetime ,\r\n\t`updateTime` datetime \r\n); \r\n```\r\n\r\n#### execute sql\r\n```sql\r\nselect * from t_cluster t where  t.clusterId > 3 and t.clusterId < 3147483647\r\n```", "url": "https://github.com/apache/shardingsphere/issues/5544", "user": "xiaoxiong581", "labels": ["bug", "volunteer wanted"], "created": "2020-05-12 03:50:49", "closed": "2020-05-26 08:23:18", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "Generated order-by with alias bug", "body": "In https://github.com/apache/shardingsphere/pull/5485, @EasonYi fix the rewriting bug for group-by alias. But now there is another bug:\r\n> select distinct `a`.`id` from `aa` as `a`\r\n\r\nThis statement will be rewriting to:\r\n>  select distinct `a`.`id` , `a`.`id` AS ORDER_BY_DERIVED_0 from `aa1` ORDER BY `a`.`id` ASC  as `a`\r\n\r\nIt occurs an error with a wrong insert position now:\r\n> from `aa1` ORDER BY `a`.`id` ASC  as `a`\r\n\r\nOrder by clause should be after alias:\r\n> from `aa1` as `a`  ORDER BY `a`.`id` ASC\r\n", "url": "https://github.com/apache/shardingsphere/issues/5486", "user": "kimmking", "labels": ["SQL parse", "bug", "sharding"], "created": "2020-05-09 03:57:05", "closed": "2020-06-22 10:54:32", "commits": {"addc8f417e1d209d5059b010adffe183c103dec2": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 44.000277777777775, "commitsDetails": [{"commitHash": "addc8f417e1d209d5059b010adffe183c103dec2", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["6b18ba4d28dc202cb069ee26530eeca27031dafc"], "nameRev": "addc8f417e1d209d5059b010adffe183c103dec2 master~42", "commitMessage": "fix #5486 (#6117)\n\n* fix #5486\r\n\r\n* fix\r\n\r\n* simple code\r\n\r\n* format code", "commitDateTime": "2020-06-22 18:54:31", "authoredDateTime": "2020-06-22 18:54:31", "commitGitStats": [{"filePath": "shardingsphere-features/shardingsphere-encrypt/shardingsphere-encrypt-rewrite/src/test/resources/encrypt/select_for_query_with_cipher.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-rewrite/src/main/java/org/apache/shardingsphere/sharding/rewrite/token/generator/impl/TableTokenGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-rewrite/src/main/java/org/apache/shardingsphere/sharding/rewrite/token/pojo/TableToken.java", "insertions": 17, "deletions": 9, "lines": 26}, {"filePath": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-rewrite/src/test/resources/sharding/delete.xml", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-rewrite/src/test/resources/sharding/select.xml", "insertions": 12, "deletions": 6, "lines": 18}, {"filePath": "shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-rewrite/src/test/resources/sharding/show.xml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/generic/table/SimpleTableSegment.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/delete.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/select-aggregate.xml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/select-expression.xml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/select-group-by.xml", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/select-join.xml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/select-or.xml", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/select-order-by.xml", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/select-pagination-group-by-order-by.xml", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/select-pagination.xml", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/select.xml", "insertions": 23, "deletions": 23, "lines": 46}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/case/dml/update.xml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sharding.rewrite.token.generator.impl.TableTokenGenerator.generateSQLTokens(org.apache.shardingsphere.sql.parser.binder.type.TableAvailable)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TableToken.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sharding.rewrite.token.pojo.TableToken", "TOT": 8, "UPD": 4, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.sharding.rewrite.token.pojo.TableToken.toString(org.apache.shardingsphere.infra.route.context.RouteUnit)", "TOT": 7, "UPD": 4, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleTableSegment.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.sql.segment.generic.table.SimpleTableSegment.getStopIndex()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "java.sql.SQLSyntaxErrorException: Unknown column 'table_alias0.id' in 'order clause'", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.1.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nLogic SQL: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3` as `table_alias0` group by `table_alias0`.`id`\r\n\r\nActual SQL: ds_unit_test_partition ::: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3_0` as `table_alias0` group by `table_alias0`.`id` ORDER BY **`table_alias0`.`id`** ASC\r\n\r\n### Actual behavior\r\nActual SQL: ds_unit_test_partition ::: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3_0` as `table_alias0` group by `table_alias0`.`id` ORDER BY **`table_alias0.id`** ASC\r\n### _java.sql.SQLSyntaxErrorException: Unknown column 'table_alias0.id' in 'order clause'_\r\n\r\n### Reason analyze (If you can)\r\n```java\r\n// OrderByTokenGenerator#generateSQLToken\r\nif (each.getSegment() instanceof ColumnOrderByItemSegment) {\r\n                ColumnOrderByItemSegment columnOrderByItemSegment = (ColumnOrderByItemSegment) each.getSegment();\r\n                QuoteCharacter quoteCharacter = columnOrderByItemSegment.getColumn().getIdentifier().getQuoteCharacter();\r\n                columnLabel = **quoteCharacter.getStartDelimiter() +** columnOrderByItemSegment.getText() **+ quoteCharacter.getEndDelimiter()**;\r\n            }\r\n```\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nLogic SQL: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3` as `table_alias0` group by `table_alias0`.`id`\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/5473", "user": "EasonYi", "labels": ["bug", "sharding"], "created": "2020-05-08 10:01:13", "closed": "2020-05-11 10:12:50", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "MemoryQueryResult  NPE  when select * from table", "body": "### Which version of ShardingSphere did you use?\r\n4.0.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nreturn expected metaData and resultSet\r\n### Actual behavior\r\norg.apache.shardingsphere.core.exception.ShardingException: java.util.concurrent.ExecutionException: java.lang.NullPointerException\r\n        at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.throwException(ShardingExecuteEngine.java:144)\r\n        at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.getGroupResults(ShardingExecuteEngine.java:134)\r\n        at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.parallelExecute(ShardingExecuteEngine.java:102)\r\n        at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:83)\r\n        at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:73)\r\n        at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:56)\r\n        at org.apache.shardingsphere.shardingjdbc.executor.AbstractStatementExecutor.executeCallback(AbstractStatementExecutor.java:140)\r\n        at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.executeQuery(PreparedStatementExecutor.java:109)\r\n        at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:123)\r\n### Reason analyze (If you can)\r\nexecute select * from table\r\nwhen user define a unsigned bigint default null column in a table and set null to this column in a row\r\n\r\nthe stack trace is \r\njava.lang.NullPointerException\r\n        at org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.getRowValue(MemoryQueryResult.java:88)\r\n        at org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.getRows(MemoryQueryResult.java:63)\r\n        at org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.<init>(MemoryQueryResult.java:55)\r\n        at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.getQueryResult(PreparedStatementExecutor.java:116)\r\n        at org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.access$200(PreparedStatementExecutor.java:50)\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nthe source code `resultSet.getBigDecimal(columnIndex).toBigInteger();`  may cause NPE\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/5467", "user": "DreamerBear", "labels": ["bug", "kernel"], "created": "2020-05-08 08:31:43", "closed": "2020-05-09 03:21:17", "commits": {"d91f6611b6ca09306f86454d7e93c503b62edab8": {"commitGHEventType": "referenced", "commitUser": "tuohai666"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d91f6611b6ca09306f86454d7e93c503b62edab8", "commitGHEventType": "referenced", "commitUser": "tuohai666", "commitParents": ["fd2dbeb7ab95eacf1d84f9143ab40c79a0ce28e2"], "nameRev": "d91f6611b6ca09306f86454d7e93c503b62edab8 remotes/origin/resolveConflict~191", "commitMessage": "Fixes #5467 (#5472)\n\n* fix NPE\r\n\r\n* Update MemoryQueryResult.java", "commitDateTime": "2020-05-09 11:21:16", "authoredDateTime": "2020-05-09 11:21:16", "commitGitStats": [{"filePath": "shardingsphere-underlying/shardingsphere-executor/src/main/java/org/apache/shardingsphere/underlying/executor/sql/execute/jdbc/queryresult/MemoryQueryResult.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MemoryQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.executor.sql.execute.jdbc.queryresult.MemoryQueryResult.getRowValue(java.sql.ResultSet,int)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Wrong rewritten SQL for `ON DUPLICATE KEY UPDATE` when configuring encrypt rule.", "body": "### SQL Case: \r\n```sql\r\nINSERT INTO t_account_bak(account_id, certificate_number, password, amount, status) VALUES (?, ?, ?, ?, ?), (2, '222X', 'bbb', 2000, 'OK'), (?, ?, ?, ?, ?), (4, '444X', 'ddd', 4000, 'OK') ON DUPLICATE KEY UPDATE password = ?\r\n```\r\n\r\n### The expected rewritten SQL is\r\n```sql\r\nINSERT INTO t_account_bak(account_id, cipher_certificate_number, assisted_query_certificate_number, plain_certificate_number, cipher_password, assisted_query_password, plain_password, cipher_amount, plain_amount, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?), (2, 'encrypt_222X', 'assisted_query_222X', '222X', 'encrypt_bbb', 'assisted_query_bbb', 'bbb', 'encrypt_2000', 2000, 'OK'), (?, ?, ?, ?, ?, ?, ?, ?, ?, ?), (4, 'encrypt_444X', 'assisted_query_444X', '444X', 'encrypt_ddd', 'assisted_query_ddd', 'ddd', 'encrypt_4000', 4000, 'OK') ON DUPLICATE KEY UPDATE cipher_password = ?, assisted_query_password = ?, plain_password = ?\" INSERT INTO t_account_bak(account_id, certificate_number, password, amount, status) VALUES (?, ?, ?, ?, ?), (2, '222X', 'bbb', 2000, 'OK'), (?, ?, ?, ?, ?), (4, '444X', 'ddd', 4000, 'OK') ON DUPLICATE KEY UPDATE password = ?\r\n```\r\n\r\n### The related parameter and function:\r\n\r\nThe following items in `EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter`\r\n```java\r\nprivate boolean queryWithCipherColumn;\r\npublic void rewrite(final ParameterBuilder parameterBuilder, final InsertStatementContext insertStatementContext, final List<Object> parameters)\r\n```\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/5465", "user": "tristaZero", "labels": ["bug", "encrypt"], "created": "2020-05-08 07:31:16", "closed": "2020-05-15 12:38:39", "commits": {"adf9c473f6c6a0b2541efb87594d44267ad5d119": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "adf9c473f6c6a0b2541efb87594d44267ad5d119", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["55438fafeda49a45182bf9847d864f93bf76a3d3"], "nameRev": "adf9c473f6c6a0b2541efb87594d44267ad5d119 remotes/origin/resolveConflict~85", "commitMessage": "Issue5423 and issue5465 (#5590)\n\n* BugFix\uff1a1.ON DUPLICATE KEY UPDATE Sub-Clause paramter dropped   https://github.com/apache/shardingsphere/issues/5210\r\n\r\nBugFix: 2.ON DUPLICATE KEY UPDATE Sub-Clause encrypt logic: missing assistedQueryColumn.\r\n\r\n* Add Apache License to org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContext\r\n\r\n* 1.Add Tests for org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContext\r\n\r\n2.Improve Tests for GroupedParameterBuilder\r\n\r\n* 1.Improve Tests coverage of InsertStatementContextTest\r\n\r\n* 1.Remove EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter implement of QueryWithCipherColumnAware\r\n\r\n* 1.Improve Tests coverage of GroupedParameterBuilder ,OnDuplicateUpdateContext\r\n\r\n* 1.Improve Tests coverage of GroupedParameterBuilder\r\n\r\n* Add testcase ,   sharding test case will fail.\r\n\r\n* Add testcase ,   sharding test case will fail.\r\n\r\n* BugFix\uff1a\r\n1.https://github.com/apache/shardingsphere/issues/5210\r\nON DUPLICATE KEY UPDATE Sub-Clause paramter dropped\r\n\r\nBugFix:\r\n2.https://github.com/apache/shardingsphere/issues/5465\r\n1)ON DUPLICATE KEY UPDATE Sub-Clause encrypt logic: missing assistedQueryColumn.\r\n2)REMOVE wrong implements of QueryWithCipherColumnAware in  org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter\r\n\r\n* merge upstream\r\n\r\n* improve code style.\r\n\r\n* improve code style.\r\n\r\n* improve code style.\r\n\r\n* improve code style.\r\n\r\n* improve code style.\r\n\r\n* improve code style.\r\n\r\n* Remove redundant blank lines\r\n\r\n* Update OnDuplicateUpdateContext.java\r\n\r\ndocument format adjusted.\r\n\r\n* Update OnDuplicateUpdateContextTest.java\r\n\r\najust code style", "commitDateTime": "2020-05-15 18:05:23", "authoredDateTime": "2020-05-15 18:05:23", "commitGitStats": [{"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/parameter/impl/EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter.java", "insertions": 30, "deletions": 30, "lines": 60}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptInsertOnUpdateTokenGenerator.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/test/resources/encrypt/insert.xml", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/sharding/insert.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingSpherePreparedStatementTest.java", "insertions": 78, "deletions": 5, "lines": 83}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/segment/insert/values/OnDuplicateUpdateContext.java", "insertions": 111, "deletions": 0, "lines": 111}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/statement/dml/InsertStatementContext.java", "insertions": 37, "deletions": 8, "lines": 45}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/segment/insert/values/OnDuplicateUpdateContextTest.java", "insertions": 136, "deletions": 0, "lines": 136}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/statement/impl/InsertStatementContextTest.java", "insertions": 35, "deletions": 1, "lines": 36}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/impl/MySQLDMLVisitor.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying/rewrite/context/SQLRewriteContext.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying/rewrite/engine/GenericSQLRewriteEngine.java", "insertions": 23, "deletions": 1, "lines": 24}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying/rewrite/engine/RouteSQLRewriteEngine.java", "insertions": 15, "deletions": 1, "lines": 16}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying/rewrite/parameter/builder/impl/GroupedParameterBuilder.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/test/java/org/apache/shardingsphere/underlying/rewrite/impl/GroupedParameterBuilderTest.java", "insertions": 34, "deletions": 2, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter.rewrite(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder,org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext,java.util.List)", "TOT": 56, "UPD": 20, "INS": 6, "MOV": 22, "DEL": 8}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "EncryptInsertOnUpdateTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.addAssistedQueryColumn(java.lang.String,java.lang.String,org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptParameterAssignmentToken)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.addAssistedQueryAssignment(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment,org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptLiteralAssignmentToken)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.generateParameterSQLToken(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.generateLiteralSQLToken(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingSpherePreparedStatementTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingSpherePreparedStatementTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingSpherePreparedStatementTest.assertAddOnDuplicateKey()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OnDuplicateUpdateContext.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContext", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsertStatementContext.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getInsertValueContexts(java.util.List)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getOnDuplicateKeyUpdateValueContext(java.util.List,java.util.concurrent.atomic.AtomicInteger)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getOnDuplicateKeyUpdateParameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getInsertValueContexts(java.util.List,java.util.concurrent.atomic.AtomicInteger)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OnDuplicateUpdateContextTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContextTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsertStatementContextTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.impl.InsertStatementContextTest.assertGetGroupedParameters()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.impl.InsertStatementContextTest.assertGetGroupedParametersWithOnDuplicateParameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.impl.InsertStatementContextTest.setUpOnDuplicateValues(org.apache.shardingsphere.sql.parser.sql.statement.dml.InsertStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLDMLVisitor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitOnDuplicateKeyClause(org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.OnDuplicateKeyClauseContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLRewriteContext.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.context.SQLRewriteContext", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GenericSQLRewriteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.engine.GenericSQLRewriteEngine.getParameters(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.engine.GenericSQLRewriteEngine.rewrite(org.apache.shardingsphere.underlying.rewrite.context.SQLRewriteContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteSQLRewriteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.engine.RouteSQLRewriteEngine.getParameters(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder,org.apache.shardingsphere.underlying.route.context.RouteResult,org.apache.shardingsphere.underlying.route.context.RouteUnit)", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "GroupedParameterBuilder.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.parameter.builder.impl.GroupedParameterBuilder", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.parameter.builder.impl.GroupedParameterBuilder.getParameters()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GroupedParameterBuilderTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.impl.GroupedParameterBuilderTest.assertGetParameters()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.impl.GroupedParameterBuilderTest.assertGetParametersWithOnDuplicateKeyParameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.impl.GroupedParameterBuilderTest.assertGetOnDuplicateKeyParametersWithModify()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.impl.GroupedParameterBuilderTest.assertGetDerivedColumnName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.impl.GroupedParameterBuilderTest.createOnDuplicateKeyUpdateParameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["adf9c473f6c6a0b2541efb87594d44267ad5d119"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 239, "deletions": 47, "lines": 286, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 91, "UPD": 23, "INS": 28, "MOV": 26, "DEL": 14, "spoonFilesChanged": 9, "spoonMethodsChanged": 19}, "statsSkippedReason": "", "changesInPackagesGIT": ["shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying", "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser", "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite", "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql"], "changesInPackagesSPOON": ["org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getInsertValueContexts(java.util.List,java.util.concurrent.atomic.AtomicInteger)", "org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContext", "org.apache.shardingsphere.underlying.rewrite.engine.RouteSQLRewriteEngine.getParameters(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder,org.apache.shardingsphere.underlying.route.context.RouteResult,org.apache.shardingsphere.underlying.route.context.RouteUnit)", "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext", "org.apache.shardingsphere.underlying.rewrite.parameter.builder.impl.GroupedParameterBuilder.getParameters()", "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getOnDuplicateKeyUpdateParameters()", "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getOnDuplicateKeyUpdateValueContext(java.util.List,java.util.concurrent.atomic.AtomicInteger)", "org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter.rewrite(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder,org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext,java.util.List)", "org.apache.shardingsphere.underlying.rewrite.engine.GenericSQLRewriteEngine.getParameters(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder)", "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.generateParameterSQLToken(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment)", "org.apache.shardingsphere.underlying.rewrite.engine.GenericSQLRewriteEngine.rewrite(org.apache.shardingsphere.underlying.rewrite.context.SQLRewriteContext)", "org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitOnDuplicateKeyClause(org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.OnDuplicateKeyClauseContext)", "org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter", "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.generateLiteralSQLToken(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment)", "org.apache.shardingsphere.underlying.rewrite.parameter.builder.impl.GroupedParameterBuilder", "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getInsertValueContexts(java.util.List)", "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.addAssistedQueryColumn(java.lang.String,java.lang.String,org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptParameterAssignmentToken)", "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.addAssistedQueryAssignment(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment,org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptLiteralAssignmentToken)", "org.apache.shardingsphere.underlying.rewrite.context.SQLRewriteContext"]}, {"title": "MYSQL (no viable alternative at input)", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.1.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nNo output log\r\n\r\n### Actual behavior\r\nline 1:45 no viable alternative at input 'CONVERT(substring(customer_code,3),signed'\r\nline 1:45 no viable alternative at input 'CONVERT(substring(customer_code,3),signed'\r\n\r\n### Reason analyze (If you can)\r\nUnsupported function\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nselect CONVERT(substring(customer_code, 3) , signed) as maxCustNo from tb_sp_user_customer order by id desc limit 1\r\n\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\nselect CONVERT(substring(customer_code, 3) , signed) as maxCustNo from tb_sp_user_customer order by id desc limit 1\r\n", "url": "https://github.com/apache/shardingsphere/issues/5452", "user": "kuangyoubo", "labels": ["SQL parse", "bug"], "created": "2020-05-07 02:38:59", "closed": "2020-05-22 11:11:10", "commits": {"2a979c9fbfdf89715b2461fd9019e77fb5b338e6": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}, "85b547a33620749b552c1f456c054a7a1a3dc1cc": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "2a979c9fbfdf89715b2461fd9019e77fb5b338e6", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["f1b50e1b2c55cc260641ff8be32324188ae25cc9"], "nameRev": "2a979c9fbfdf89715b2461fd9019e77fb5b338e6 remotes/origin/revert-5764-issue#5301-14~9", "commitMessage": "#5452, fix syntax rule of SUBSTRING and CONVERT (#5753)\n\n", "commitDateTime": "2020-05-22 19:11:09", "authoredDateTime": "2020-05-22 19:11:09", "commitGitStats": [{"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 5, "deletions": 4, "lines": 9}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "85b547a33620749b552c1f456c054a7a1a3dc1cc", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["308f09f1fdb78cf650a4a75cf9b5adb88cbcedb2"], "nameRev": "85b547a33620749b552c1f456c054a7a1a3dc1cc tags/4.1.1~10", "commitMessage": "#5452, carry PR#5753 to dev-4.x (#5754)\n\n", "commitDateTime": "2020-05-22 19:11:48", "authoredDateTime": "2020-05-22 19:11:48", "commitGitStats": [{"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 5, "deletions": 4, "lines": 9}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "master-slave mode doesn't read the meta data to obtain column definition", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n5.0.0-RC1\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\nUse master-slave rule, execute SQL `select * from t_order` return correct result.\r\n\r\n### Actual behavior\r\nCan't return result and burst warnings.\r\n```\r\nmysql> use master_slave_db;\r\nDatabase changed\r\nmysql> select * from t_order_0;\r\nQuery OK, 0 rows affected, 25971 warnings (3 min 40.86 sec)\r\n```\r\n\r\n### Reason analyze (If you can)\r\nThe first packet Sharding-Proxy returned is an EOF packet, that means column definition packets lost. \r\nDebug in the codes, I found queryHeader size is 0. queryHeader  is obtained from meta data, master-slave mode doesn't read the meta data.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nConfig a master-rule and execute the SQL like `select * from`.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/5433", "user": "tuohai666", "labels": ["bug", "sharding"], "created": "2020-05-06 05:19:18", "closed": "2020-05-07 09:20:16", "commits": {"630ddceba2fec5096b47bd85ff451d8bf9bb54ec": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "630ddceba2fec5096b47bd85ff451d8bf9bb54ec", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["8da86834547542637e8d818fce4d118d9654a255"], "nameRev": "630ddceba2fec5096b47bd85ff451d8bf9bb54ec remotes/origin/resolveConflict~205", "commitMessage": "Fixes #5433 (#5455)\n\n* refactor OrchestrationRuleRootConfigurationsYamlSwapper\r\n\r\n* remove OrchestrationRuleRootConfigurationsYamlSwapper\r\n\r\n* deprecate MasterSlaveDataSourceFactory and fixes #5433", "commitDateTime": "2020-05-07 17:20:15", "authoredDateTime": "2020-05-07 17:20:15", "commitGitStats": [{"filePath": "examples/sharding-jdbc-example/orchestration-example/orchestration-raw-jdbc-example/src/main/resources/META-INF/nacos/local/master-slave.yaml", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "examples/sharding-jdbc-example/orchestration-example/orchestration-raw-jdbc-example/src/main/resources/META-INF/zookeeper/local/master-slave.yaml", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "examples/sharding-jdbc-example/other-feature-example/hint-example/hint-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/hint/raw/jdbc/ExampleMain.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "examples/sharding-jdbc-example/other-feature-example/hint-example/hint-raw-jdbc-example/src/main/resources/META-INF/hint-master-only.yaml", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "examples/sharding-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlDataSourceFactory.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "examples/sharding-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/java/org/apache/shardingsphere/example/sharding/raw/jdbc/factory/YamlRangeDataSourceFactory.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "examples/sharding-jdbc-example/sharding-example/sharding-raw-jdbc-example/src/main/resources/META-INF/master-slave.yaml", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "examples/sharding-proxy-example/sharding-proxy-boot-mybatis-example/src/main/resources/conf/config-master_slave.yaml", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "examples/sharding-proxy-example/sharding-proxy-hint-example/src/main/resources/conf/config-master-only.yaml", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/test/resources/yaml/master-slave-rule.yaml", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/MixSQLRewriterParameterizedTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/ShardingSQLRewriterParameterizedTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-distribution/sharding-proxy-distribution/src/main/resources/conf/config-master_slave.yaml", "insertions": 14, "deletions": 12, "lines": 26}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/engine/BaseIT.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env/masterslave/sharding-rule.yaml", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/api/MasterSlaveDataSourceFactory.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/api/yaml/YamlMasterSlaveDataSourceFactory.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShadowPreparedStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShadowStatement.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/common/base/{AbstractMasterSlaveJDBCDatabaseAndTableTest.java => AbstractMasterSlaveJDBCTest.java}", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/MasterSlavePreparedStatementTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/MasterSlaveStatementTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/config-master-slave.yaml", "insertions": 23, "deletions": 22, "lines": 45}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/config-sharding.yaml", "insertions": 16, "deletions": 16, "lines": 32}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/encrypt-config.yaml", "insertions": 16, "deletions": 16, "lines": 32}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/test/resources/yaml/unit/masterSlave.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/StatementExecutorWrapper.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-bootstrap/src/main/java/org/apache/shardingsphere/shardingproxy/Bootstrap.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "sharding-proxy/sharding-proxy-bootstrap/src/main/resources/conf/config-master_slave.yaml", "insertions": 14, "deletions": 12, "lines": 26}, {"filePath": "sharding-proxy/sharding-proxy-common/src/main/java/org/apache/shardingsphere/shardingproxy/config/ShardingConfigurationLoader.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-common/src/test/java/org/apache/shardingsphere/shardingproxy/config/ShardingConfigurationLoaderTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-common/src/test/resources/conf/config-master_slave.yaml", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/OrchestrationRuleRootConfigurationsYamlSwapper.java", "insertions": 0, "deletions": 126, "lines": 126}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/sharding/OrchestrationSpringBootRulesConfigurationProperties.java", "insertions": 2, "deletions": 17, "lines": 19}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/metadata/schema/RuleSchemaMetaData.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "shardingsphere-underlying/shardingsphere-route/src/main/java/org/apache/shardingsphere/underlying/route/DataNodeRouter.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "SQLLogger#logSQL throws an NPE when invoked in ShardingStatement ", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\ncurrent master branch - 5.0.0-RC1-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nsql.show is available \r\n### Actual behavior\r\nset sql.show true and run test of transaction-2pc-xa-raw-jdbc-example module, an NPE throws out from ShardingStatement.\r\n### Reason analyze (If you can)\r\nWhen #logSQL execute, ExecutionContext was not init complete yet.\r\n```java\r\n    private ExecutionContext createExecutionContext(final String sql) throws SQLException {\r\n        clearStatements();\r\n        RuntimeContext runtimeContext = connection.getRuntimeContext();\r\n        SQLStatement sqlStatement = runtimeContext.getSqlParserEngine().parse(sql, false);\r\n        RouteContext routeContext = new DataNodeRouter(\r\n                runtimeContext.getMetaData(), runtimeContext.getProperties(), runtimeContext.getRules()).route(sqlStatement, sql, Collections.emptyList());\r\n        SQLRewriteResult sqlRewriteResult = new SQLRewriteEntry(runtimeContext.getMetaData().getSchema().getConfiguredSchemaMetaData(),\r\n                runtimeContext.getProperties(), runtimeContext.getRules()).rewrite(sql, Collections.emptyList(), routeContext);\r\n        ExecutionContext result = new ExecutionContext(routeContext.getSqlStatementContext(), ExecutionContextBuilder.build(runtimeContext.getMetaData(), sqlRewriteResult));\r\n        logSQL(sql, runtimeContext.getProperties());\r\n        return result;\r\n    }\r\n    \r\n    private void logSQL(final String sql, final ConfigurationProperties properties) {\r\n        if (properties.<Boolean>getValue(ConfigurationPropertyKey.SQL_SHOW)) {\r\n            SQLLogger.logSQL(sql, properties.<Boolean>getValue(ConfigurationPropertyKey.SQL_SIMPLE), executionContext);\r\n        }\r\n    }\r\n```\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nset sql.show true and run test of transaction-2pc-xa-raw-jdbc-example module\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/5422", "user": "TaoZhiMLND", "labels": ["bug", "jdbc"], "created": "2020-05-05 03:43:12", "closed": "2020-05-05 05:59:54", "commits": {"55bf2a0a39d689c19419621e2f5bd348746b5935": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "55bf2a0a39d689c19419621e2f5bd348746b5935", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["dfb5051e782074dca3d5ba8311b0efa10e4a6380"], "nameRev": "55bf2a0a39d689c19419621e2f5bd348746b5935 remotes/origin/resolveConflict~217", "commitMessage": "Fixes #5422 (#5426)\n\n", "commitDateTime": "2020-05-05 13:59:53", "authoredDateTime": "2020-05-05 13:59:53", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingStatement.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.logSQL(org.apache.shardingsphere.shardingjdbc.jdbc.core.context.RuntimeContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.logSQL(org.apache.shardingsphere.shardingjdbc.jdbc.core.context.RuntimeContext,org.apache.shardingsphere.underlying.executor.sql.context.ExecutionContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.createExecutionContext()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingStatement.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.logSQL(java.lang.String,org.apache.shardingsphere.underlying.common.config.properties.ConfigurationProperties)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.logSQL(java.lang.String,org.apache.shardingsphere.underlying.common.config.properties.ConfigurationProperties,org.apache.shardingsphere.underlying.executor.sql.context.ExecutionContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.createExecutionContext(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "The keyGenerator doesn't work in transaction-2pc-xa-raw-jdbc-example module when a oracle database used", "body": "I have reproduced the behavior as @lvye351 says in #5383. The keyGenerator doesn't work in the transaction-2pc-xa-raw-jdbc sample module when a oracle database 12c and ojbdc8.jar used.\r\n\r\nThe log is as follows,\r\n![image](https://user-images.githubusercontent.com/9602831/80979380-db422480-8e59-11ea-8043-0b38dedcad5b.png)\r\n\r\n\r\nIt seems that when table t_order created, its tableMetaData doesn't put into schemaMetaData.\r\nI will try to find out the reason and fix it.\r\n", "url": "https://github.com/apache/shardingsphere/issues/5421", "user": "TaoZhiMLND", "labels": ["Oracle", "bug", "kernel"], "created": "2020-05-04 14:50:46", "closed": "2020-05-06 13:04:33", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "sharding-scaling nullpoint", "body": "## Bug Report\r\n \r\n\r\n### Which version of ShardingSphere did you use?\r\n4.1.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-scaling\r\n\r\n### Expected behavior\r\n\r\n\r\n\r\n### Actual behavior\r\nI use sharding-scaling and sharding-proxy to move data from old cluster to the new cluster.\r\nBelow exception occured:\r\n`[ERROR] 09:53:53.645 [pool-1-thread-21] o.a.s.s.c.e.e.SyncTaskExecuteCallback - RealtimeDataSyncTask realtime-hc_hiwork_suite_new execute exception exit\r\njava.lang.NullPointerException: null\r\n\tat org.apache.shardingsphere.shardingscaling.mysql.MySQLBinlogReader.handleUpdateRowsEvent(MySQLBinlogReader.java:137)\r\n\tat org.apache.shardingsphere.shardingscaling.mysql.MySQLBinlogReader.read(MySQLBinlogReader.java:97)\r\n\tat org.apache.shardingsphere.shardingscaling.mysql.MySQLBinlogReader.run(MySQLBinlogReader.java:75)\r\n`\r\nthe following code caused a nullpointexception:\r\n`!oldValue.equals(newValue)`\r\n\r\nThe reason is that there is a field, it's oldValue is null.\r\n\r\n\r\n### Reason analyze (If you can)\r\n\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nUse scaling to sync database, and update a row which has null value. \r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\nThe correct logic :\r\n`boolean updated = false;\r\n                if(null == oldValue){\r\n                    updated = null != newValue;\r\n                }else{\r\n                    updated = !oldValue.equals(newValue);\r\n                }`\r\n", "url": "https://github.com/apache/shardingsphere/issues/5390", "user": "henrypoter", "labels": ["bug", "scaling"], "created": "2020-04-30 02:34:53", "closed": "2020-05-19 03:46:33", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": "sharding-scaling getTableNames error", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.1.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-scaling\r\n\r\n### Expected behavior\r\nI have a table, it's primary key's type is bigint.\r\nwhen the scaling fetch the primary key range, it use rs.getInt() rather than rs.getLong(),  which cause  Integer overflow.\r\nProof:\r\norg.apache.shardingsphere.shardingscaling.core.synctask.history.HistoryDataSyncTaskGroup line 141-142\r\n\r\n### Actual behavior\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nwhen the primary key's value is bigger than Integer.MAX\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/5389", "user": "henrypoter", "labels": ["bug", "scaling"], "created": "2020-04-30 02:26:01", "closed": "2020-05-08 01:00:46", "commits": {"2fca0763fdb32ebb22d848ff7108ce698d4a85a2": {"commitGHEventType": "referenced", "commitUser": "KomachiSion"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "2fca0763fdb32ebb22d848ff7108ce698d4a85a2", "commitGHEventType": "referenced", "commitUser": "KomachiSion", "commitParents": ["1b02f0fd18fece0e35a0fb1b59fa86efa0630a6b"], "nameRev": "2fca0763fdb32ebb22d848ff7108ce698d4a85a2 remotes/origin/resolveConflict~202", "commitMessage": "Fix split error when pk is bigint(#5389) (#5460)\n\nCo-authored-by: avalon566 <avalon566@163.com>", "commitDateTime": "2020-05-08 09:00:45", "authoredDateTime": "2020-05-08 09:00:45", "commitGitStats": [{"filePath": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/job/preparer/splitter/InventoryDataTaskSplitter.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InventoryDataTaskSplitter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingscaling.core.job.preparer.splitter.InventoryDataTaskSplitter.splitByPrimaryKeyRange(org.apache.shardingsphere.shardingscaling.core.config.SyncConfiguration,org.apache.shardingsphere.shardingscaling.core.metadata.MetaDataManager,javax.sql.DataSource)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "InlineShardingAlgorithm in version of 5.x is not incompatible previous profiles", "body": "### Which version of ShardingSphere did you use?\r\n5.0.0-RC1-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nWhen I use the following configuration.\r\n```\r\nspring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=user_id\r\nspring.shardingsphere.sharding.default-database-strategy.standard.shardingAlgorithm.type=INLINE\r\nspring.shardingsphere.sharding.default-database-strategy.standard.shardingAlgorithm.props.algorithm.expression=ds_$->{user_id % 2}\r\nspring.shardingsphere.sharding.binding-tables=t_order,t_order_item\r\nspring.shardingsphere.sharding.broadcast-tables=t_address\r\n```\r\n\r\n### Actual behavior\r\nThe following error will occur.\r\n```\r\nException in thread \"main\" org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:\r\nScript5.groovy: 1: illegal string body character after dollar sign;\r\n   solution: either escape a literal dollar sign \"\\$5\" or bracket the value expression \"${5}\" @ line 1, column 5.\r\n   {it -> \"t_order_$->{order_id % 2}\"}\r\n```\r\n\r\n### Reason analyze (If you can)\r\nI tracked the source code and compared to version  4.x,  found `InlineShardingAlgorithm` in version 5.x not calls `InlineExpressionParser.handlePlaceHolder` method, so cause above error.\r\n\r\n4.x version source code of `InlineShardingStrategy` class.\r\n```\r\nPreconditions.checkNotNull(inlineShardingStrategyConfig.getShardingColumn(), \"Sharding column cannot be null.\");\r\nPreconditions.checkNotNull(inlineShardingStrategyConfig.getAlgorithmExpression(), \"Sharding algorithm expression cannot be null.\");\r\nshardingColumn = inlineShardingStrategyConfig.getShardingColumn();\r\nString algorithmExpression = InlineExpressionParser.handlePlaceHolder(inlineShardingStrategyConfig.getAlgorithmExpression().trim());\r\nclosure = new InlineExpressionParser(algorithmExpression).evaluateClosure();\r\n```\r\n\r\n5.x version source code of `InlineShardingAlgorithm` class.\r\n``` \r\nPreconditions.checkNotNull(properties.get(ALGORITHM_EXPRESSION), \"Inline sharding algorithm expression cannot be null.\");\r\nClosure<?> closure = new InlineExpressionParser(properties.get(ALGORITHM_EXPRESSION).toString()).evaluateClosure();\r\nClosure<?> result = closure.rehydrate(new Expando(), null, null);\r\nresult.setResolveStrategy(Closure.DELEGATE_ONLY);\r\nresult.setProperty(shardingValue.getColumnName(), shardingValue.getValue());\r\nreturn result.call().toString();\r\n```", "url": "https://github.com/apache/shardingsphere/issues/5378", "user": "kekerzzZ", "labels": ["bug", "sharding"], "created": "2020-04-29 07:30:31", "closed": "2020-04-30 04:28:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "The junit test of transaction-2pc-xa-raw-jdbc-example module failed when a oracle database used", "body": "The Junit test in the transaction-2pc-xa-raw-jdbc sample module failed when I used oracle database 12c and ojbdc8.jar. \r\nThe exception stack is as follows, \r\n```\r\njava.sql.SQLSyntaxErrorException: ORA-00942: \u8868\u6216\u89c6\u56fe\u4e0d\u5b58\u5728\r\n\r\n\r\n\tat oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:509)\r\n\tat oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:461)\r\n\tat oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1104)\r\n\tat oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:550)\r\n\tat oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:268)\r\n\tat oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:655)\r\n\tat oracle.jdbc.driver.T4CStatement.doOall8(T4CStatement.java:229)\r\n\tat oracle.jdbc.driver.T4CStatement.doOall8(T4CStatement.java:41)\r\n\tat oracle.jdbc.driver.T4CStatement.executeForRows(T4CStatement.java:928)\r\n\tat oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1205)\r\n\tat oracle.jdbc.driver.OracleStatement.executeUpdateInternal(OracleStatement.java:1747)\r\n\tat oracle.jdbc.driver.OracleStatement.executeLargeUpdate(OracleStatement.java:1712)\r\n\tat oracle.jdbc.driver.OracleStatement.executeUpdate(OracleStatement.java:1699)\r\n\tat oracle.jdbc.driver.OracleStatementWrapper.executeUpdate(OracleStatementWrapper.java:285)\r\n\tat oracle.jdbc.OracleDatabaseMetaData.getIndexInfo(OracleDatabaseMetaData.java:3802)\r\n\tat org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaDataLoader.load(IndexMetaDataLoader.java:50)\r\n\tat org.apache.shardingsphere.sql.parser.binder.metadata.table.TableMetaDataLoader.load(TableMetaDataLoader.java:46)\r\n\tat org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader.load(ShardingMetaDataLoader.java:84)\r\n\tat org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader.load(ShardingMetaDataLoader.java:67)\r\n\tat org.apache.shardingsphere.core.metadata.ShardingMetaDataLoader.load(ShardingMetaDataLoader.java:53)\r\n\tat org.apache.shardingsphere.underlying.common.metadata.schema.RuleSchemaMetaDataLoader.load(RuleSchemaMetaDataLoader.java:70)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.context.AbstractRuntimeContext.createMetaData(AbstractRuntimeContext.java:91)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.context.AbstractRuntimeContext.<init>(AbstractRuntimeContext.java:77)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.context.impl.ShardingRuntimeContext.<init>(ShardingRuntimeContext.java:48)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource.<init>(ShardingDataSource.java:44)\r\n\tat org.apache.shardingsphere.shardingjdbc.api.ShardingDataSourceFactory.createDataSource(ShardingDataSourceFactory.java:48)\r\n\tat org.apache.shardingsphere.shardingjdbc.api.yaml.YamlShardingDataSourceFactory.createDataSource(YamlShardingDataSourceFactory.java:50)\r\n\tat org.apache.shardingsphere.example.transaction.xa.raw.jdbc.XAOrderService.<init>(XAOrderService.java:42)\r\n\tat org.apache.shardingsphere.example.transaction.xa.raw.jdbc.XAOrderServiceTest.setUp(XAOrderServiceTest.java:36)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)\r\nCaused by: Error : 942, Position : 27, Sql = analyze table C##DEMO_DS_0.t_order_0 compute statistics, OriginalSql = analyze table C##DEMO_DS_0.t_order_0 compute statistics, Error Msg = ORA-00942: \u8868\u6216\u89c6\u56fe\u4e0d\u5b58\u5728\r\n\r\n\tat oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:513)\r\n\t... 51 more\r\n```\r\nWhen the table not exists, OracleDatabaseMetaData. GetIndexInfo will throw an exception, on the contrary the Mysql will not. \r\n\r\nI added an isTableExist method in `IndexMetaDataLoader` to solve this issue as the `ColumnMetaDataLoader` do,  and it works.\r\nThe source code is like the following,\r\n```\r\n    public static Collection<IndexMetaData> load(final Connection connection, final String table) throws SQLException {\r\n        if (!isTableExist(connection, connection.getCatalog(), table)) {\r\n            return Collections.emptyList();\r\n        }\r\n        Collection<IndexMetaData> result = new HashSet<>();\r\n        try (ResultSet resultSet = connection.getMetaData().getIndexInfo(connection.getCatalog(), connection.getSchema(), table, false, false)) {\r\n            while (resultSet.next()) {\r\n                String indexName = resultSet.getString(INDEX_NAME);\r\n                result.add(new IndexMetaData(indexName));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    \r\n    private static boolean isTableExist(final Connection connection, final String catalog, final String table) throws SQLException {\r\n        try (ResultSet resultSet = connection.getMetaData().getTables(catalog, null, table, null)) {\r\n            return resultSet.next();\r\n        }\r\n    }\r\n```\r\nBefore commit a pr, I want to extract the isTableExist method from class IndexMetaDataLoader and ColumnMetaDataLoader. Could someone give me some advice about how to do the extract ? I will really appreciate any help on this, thanks.\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/5309", "user": "TaoZhiMLND", "labels": ["Oracle", "bug", "kernel"], "created": "2020-04-24 18:00:33", "closed": "2020-04-26 05:05:10", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "order by not support string column when query more than one database", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nmore than one database query support order by use string column\r\n### Actual behavior\r\nnot support, only support when route one database, cross database support i test is int\u3001datetime etc, if use string column to order by, query sql is always executing, cann't get result or error\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\n## issue is #4665 , at that time you think the issue is same as #4850 , i see it solved in 4.0.1 verion, but when i use 4.0.1 to test, it also has #4465 quesion, please check!\r\n", "url": "https://github.com/apache/shardingsphere/issues/5274", "user": "xiaoxiong581", "labels": ["bug", "proxy", "sharding"], "created": "2020-04-23 02:58:48", "closed": "2020-05-09 07:16:55", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "ON DUPLICATE KEY UPDATE Sub-Clause paramter dropped", "body": "DAO\u5c42\u4f7f\u7528 MyBatis\uff0c\u5f53\u4f7f\u7528 INSERT INTO VALUES \r\nON DUPLICATE KEY UPDATE \r\n\u8bed\u53e5\u65f6\uff0cUPDATE \u90e8\u5206\u53c2\u6570\u5168\u90fd\u4f1a\u4e22\u5931", "url": "https://github.com/apache/shardingsphere/issues/5210", "user": "hollydragon", "labels": ["SQL parse", "bug", "pending"], "created": "2020-04-16 08:42:38", "closed": "2020-05-15 12:37:40", "commits": {"adf9c473f6c6a0b2541efb87594d44267ad5d119": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "adf9c473f6c6a0b2541efb87594d44267ad5d119", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["55438fafeda49a45182bf9847d864f93bf76a3d3"], "nameRev": "adf9c473f6c6a0b2541efb87594d44267ad5d119 remotes/origin/resolveConflict~85", "commitMessage": "Issue5423 and issue5465 (#5590)\n\n* BugFix\uff1a1.ON DUPLICATE KEY UPDATE Sub-Clause paramter dropped   https://github.com/apache/shardingsphere/issues/5210\r\n\r\nBugFix: 2.ON DUPLICATE KEY UPDATE Sub-Clause encrypt logic: missing assistedQueryColumn.\r\n\r\n* Add Apache License to org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContext\r\n\r\n* 1.Add Tests for org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContext\r\n\r\n2.Improve Tests for GroupedParameterBuilder\r\n\r\n* 1.Improve Tests coverage of InsertStatementContextTest\r\n\r\n* 1.Remove EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter implement of QueryWithCipherColumnAware\r\n\r\n* 1.Improve Tests coverage of GroupedParameterBuilder ,OnDuplicateUpdateContext\r\n\r\n* 1.Improve Tests coverage of GroupedParameterBuilder\r\n\r\n* Add testcase ,   sharding test case will fail.\r\n\r\n* Add testcase ,   sharding test case will fail.\r\n\r\n* BugFix\uff1a\r\n1.https://github.com/apache/shardingsphere/issues/5210\r\nON DUPLICATE KEY UPDATE Sub-Clause paramter dropped\r\n\r\nBugFix:\r\n2.https://github.com/apache/shardingsphere/issues/5465\r\n1)ON DUPLICATE KEY UPDATE Sub-Clause encrypt logic: missing assistedQueryColumn.\r\n2)REMOVE wrong implements of QueryWithCipherColumnAware in  org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter\r\n\r\n* merge upstream\r\n\r\n* improve code style.\r\n\r\n* improve code style.\r\n\r\n* improve code style.\r\n\r\n* improve code style.\r\n\r\n* improve code style.\r\n\r\n* improve code style.\r\n\r\n* Remove redundant blank lines\r\n\r\n* Update OnDuplicateUpdateContext.java\r\n\r\ndocument format adjusted.\r\n\r\n* Update OnDuplicateUpdateContextTest.java\r\n\r\najust code style", "commitDateTime": "2020-05-15 18:05:23", "authoredDateTime": "2020-05-15 18:05:23", "commitGitStats": [{"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/parameter/impl/EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter.java", "insertions": 30, "deletions": 30, "lines": 60}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptInsertOnUpdateTokenGenerator.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/test/resources/encrypt/insert.xml", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/sharding/insert.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingSpherePreparedStatementTest.java", "insertions": 78, "deletions": 5, "lines": 83}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/segment/insert/values/OnDuplicateUpdateContext.java", "insertions": 111, "deletions": 0, "lines": 111}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/statement/dml/InsertStatementContext.java", "insertions": 37, "deletions": 8, "lines": 45}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/segment/insert/values/OnDuplicateUpdateContextTest.java", "insertions": 136, "deletions": 0, "lines": 136}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/statement/impl/InsertStatementContextTest.java", "insertions": 35, "deletions": 1, "lines": 36}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/mysql/visitor/impl/MySQLDMLVisitor.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying/rewrite/context/SQLRewriteContext.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying/rewrite/engine/GenericSQLRewriteEngine.java", "insertions": 23, "deletions": 1, "lines": 24}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying/rewrite/engine/RouteSQLRewriteEngine.java", "insertions": 15, "deletions": 1, "lines": 16}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying/rewrite/parameter/builder/impl/GroupedParameterBuilder.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/test/java/org/apache/shardingsphere/underlying/rewrite/impl/GroupedParameterBuilderTest.java", "insertions": 34, "deletions": 2, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter.rewrite(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder,org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext,java.util.List)", "TOT": 56, "UPD": 20, "INS": 6, "MOV": 22, "DEL": 8}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "EncryptInsertOnUpdateTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.addAssistedQueryColumn(java.lang.String,java.lang.String,org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptParameterAssignmentToken)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.addAssistedQueryAssignment(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment,org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptLiteralAssignmentToken)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.generateParameterSQLToken(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.generateLiteralSQLToken(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingSpherePreparedStatementTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingSpherePreparedStatementTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingSpherePreparedStatementTest.assertAddOnDuplicateKey()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OnDuplicateUpdateContext.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContext", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsertStatementContext.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getInsertValueContexts(java.util.List)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getOnDuplicateKeyUpdateValueContext(java.util.List,java.util.concurrent.atomic.AtomicInteger)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getOnDuplicateKeyUpdateParameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getInsertValueContexts(java.util.List,java.util.concurrent.atomic.AtomicInteger)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OnDuplicateUpdateContextTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContextTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsertStatementContextTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.impl.InsertStatementContextTest.assertGetGroupedParameters()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.impl.InsertStatementContextTest.assertGetGroupedParametersWithOnDuplicateParameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.binder.statement.impl.InsertStatementContextTest.setUpOnDuplicateValues(org.apache.shardingsphere.sql.parser.sql.statement.dml.InsertStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLDMLVisitor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitOnDuplicateKeyClause(org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.OnDuplicateKeyClauseContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLRewriteContext.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.context.SQLRewriteContext", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GenericSQLRewriteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.engine.GenericSQLRewriteEngine.getParameters(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.engine.GenericSQLRewriteEngine.rewrite(org.apache.shardingsphere.underlying.rewrite.context.SQLRewriteContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteSQLRewriteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.engine.RouteSQLRewriteEngine.getParameters(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder,org.apache.shardingsphere.underlying.route.context.RouteResult,org.apache.shardingsphere.underlying.route.context.RouteUnit)", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "GroupedParameterBuilder.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.parameter.builder.impl.GroupedParameterBuilder", "TOT": 4, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.parameter.builder.impl.GroupedParameterBuilder.getParameters()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GroupedParameterBuilderTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.impl.GroupedParameterBuilderTest.assertGetParameters()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.impl.GroupedParameterBuilderTest.assertGetParametersWithOnDuplicateKeyParameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.impl.GroupedParameterBuilderTest.assertGetOnDuplicateKeyParametersWithModify()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.impl.GroupedParameterBuilderTest.assertGetDerivedColumnName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.impl.GroupedParameterBuilderTest.createOnDuplicateKeyUpdateParameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["adf9c473f6c6a0b2541efb87594d44267ad5d119"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 239, "deletions": 47, "lines": 286, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 91, "UPD": 23, "INS": 28, "MOV": 26, "DEL": 14, "spoonFilesChanged": 9, "spoonMethodsChanged": 19}, "statsSkippedReason": "", "changesInPackagesGIT": ["shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying", "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser", "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite", "shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql"], "changesInPackagesSPOON": ["org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getInsertValueContexts(java.util.List,java.util.concurrent.atomic.AtomicInteger)", "org.apache.shardingsphere.sql.parser.binder.segment.insert.values.OnDuplicateUpdateContext", "org.apache.shardingsphere.underlying.rewrite.engine.RouteSQLRewriteEngine.getParameters(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder,org.apache.shardingsphere.underlying.route.context.RouteResult,org.apache.shardingsphere.underlying.route.context.RouteUnit)", "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext", "org.apache.shardingsphere.underlying.rewrite.parameter.builder.impl.GroupedParameterBuilder.getParameters()", "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getOnDuplicateKeyUpdateParameters()", "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getOnDuplicateKeyUpdateValueContext(java.util.List,java.util.concurrent.atomic.AtomicInteger)", "org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter.rewrite(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder,org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext,java.util.List)", "org.apache.shardingsphere.underlying.rewrite.engine.GenericSQLRewriteEngine.getParameters(org.apache.shardingsphere.underlying.rewrite.parameter.builder.ParameterBuilder)", "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.generateParameterSQLToken(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment)", "org.apache.shardingsphere.underlying.rewrite.engine.GenericSQLRewriteEngine.rewrite(org.apache.shardingsphere.underlying.rewrite.context.SQLRewriteContext)", "org.apache.shardingsphere.sql.parser.mysql.visitor.impl.MySQLDMLVisitor.visitOnDuplicateKeyClause(org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.OnDuplicateKeyClauseContext)", "org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter", "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.generateLiteralSQLToken(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment)", "org.apache.shardingsphere.underlying.rewrite.parameter.builder.impl.GroupedParameterBuilder", "org.apache.shardingsphere.sql.parser.binder.statement.dml.InsertStatementContext.getInsertValueContexts(java.util.List)", "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.addAssistedQueryColumn(java.lang.String,java.lang.String,org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptParameterAssignmentToken)", "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptInsertOnUpdateTokenGenerator.addAssistedQueryAssignment(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.assignment.AssignmentSegment,org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptLiteralAssignmentToken)", "org.apache.shardingsphere.underlying.rewrite.context.SQLRewriteContext"]}, {"title": "org.antlr.v4.runtime.tree.ErrorNodeImpl cannot be cast to org.antlr.v4.runtime.ParserRuleContext", "body": "Caused by: java.lang.ClassCastException: org.antlr.v4.runtime.tree.ErrorNodeImpl cannot be cast to org.antlr.v4.runtime.ParserRuleContext\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractPredicate(PredicateExtractor.java:140) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithParen(PredicateExtractor.java:124) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractPredicateSegment(PredicateExtractor.java:98) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:79) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extract(PredicateExtractor.java:71) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.WhereExtractor.extract(WhereExtractor.java:48) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:47) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.sql.parser.core.SQLParseKernel.parse(SQLParseKernel.java:59) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.sql.parser.SQLParseEngine.parse0(SQLParseEngine.java:70) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.sql.parser.SQLParseEngine.parse(SQLParseEngine.java:52) ~[shardingsphere-sql-parser-engine-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.parse(ShardingRouter.java:86) ~[sharding-core-route-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:61) ~[sharding-core-route-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:59) ~[sharding-core-entry-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:85) ~[sharding-core-entry-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:68) ~[sharding-core-entry-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:249) ~[sharding-jdbc-core-4.0.1.jar:4.0.1]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:190) ~[sharding-jdbc-core-4.0.1.jar:4.0.1]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_201]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_201]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_201]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_201]\r\n\tat org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) ~[mybatis-3.4.5.jar:3.4.5]\r\n\tat com.sun.proxy.$Proxy220.execute(Unknown Source) ~[na:na]\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) ~[mybatis-3.4.5.jar:3.4.5]\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.4.5.jar:3.4.5]\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.4.5.jar:3.4.5]\r\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.4.5.jar:3.4.5]\r\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.4.5.jar:3.4.5]\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.4.5.jar:3.4.5]\r\n\tat com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:108) ~[pagehelper-5.1.7.jar:na]\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.4.5.jar:3.4.5]\r\n\tat com.sun.proxy.$Proxy218.query(Unknown Source) ~[na:na]\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ~[mybatis-3.4.5.jar:3.4.5]\r\n\t... 83 common frames omitted\r\nwhen I use this SQL querying, it told me this message. I want to know whether it is a bug? because when I use version 3.1 it is ok. but now, I use version 4.0.1, it wrong....\r\nSQL :\r\nselect\r\n    <include refid=\"No_Price_Column_List\"/>\r\n    from table_name\r\n    where CURRENT_TIMESTAMP BETWEEN startTime AND endTime AND type=1\r\n    AND a in\r\n    <foreach collection=\"list\" item=\"item\" open=\"(\" close=\")\" separator=\",\">\r\n      #{item}\r\n    </foreach>\r\n    and status = 0 order by mtime asc", "url": "https://github.com/apache/shardingsphere/issues/5123", "user": "fyuan1030", "labels": ["SQL parse", "bug"], "created": "2020-04-09 09:43:23", "closed": "2020-04-16 12:58:36", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Bad function name", "body": "Someone gave a bad spelling for function name", "url": "https://github.com/apache/shardingsphere/issues/5114", "user": "tristaZero", "labels": ["bug"], "created": "2020-04-09 04:13:23", "closed": "2020-04-09 04:18:56", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "adding a schema on config center is not working", "body": "## Bug Report\r\n\r\n**adding a schema on config center is not working,but updating authentication or props is working,before rebooting sharding-proxy. adding a schema on config center is the same as  [#2346](https://github.com/apache/incubator-shardingsphere/issues/2346)**\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n- [x] 4.0.0\r\n- [x] 4.0.1\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nAfter adding a schema on config center, I hope the Sharding Rroxy could refresh and load configuration automatically or semi-automatic(by sending a command manually), that is, Then I can see that new schema by `show databases;` **adding a schema on config center is the same as  [#2346](https://github.com/apache/incubator-shardingsphere/issues/2346)**\r\n### Actual behavior\r\n![](https://raw.githubusercontent.com/myzero1/show-time/master/tmp/QQ%E5%9B%BE%E7%89%8720200331175222.png)\r\n![](https://raw.githubusercontent.com/myzero1/show-time/master/tmp/QQ%E5%9B%BE%E7%89%8720200331175232.png)\r\n![](https://raw.githubusercontent.com/myzero1/show-time/master/tmp/QQ%E5%9B%BE%E7%89%8720200331175941.png)\r\n", "url": "https://github.com/apache/shardingsphere/issues/5043", "user": "myzero1", "labels": ["bug", "orchestration"], "created": "2020-04-02 02:23:25", "closed": "2020-04-17 06:37:15", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "Update statement has wrong parameter count", "body": "SQL:\r\n> UPDATE t_order SET status = status - ? WHERE order_id = ? AND user_id = ?\r\n\r\nExpected parameter count: 3\r\nActual parameter count: 2", "url": "https://github.com/apache/shardingsphere/issues/4993", "user": "tristaZero", "labels": ["SQL parse", "bug"], "created": "2020-03-29 10:09:44", "closed": "2020-03-29 11:16:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Sharding-Proxy doesn't response for \"Unsupported Command\" from PSQL cli", "body": "## Bug Report\r\n\r\nSharding-Proxy doesn't response for \"Unsupported Command\" from PSQL cli\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.1\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\n\r\nExpected for error messages\r\n\r\n### Actual behavior\r\n\r\nBlocked without response\r\n\r\n### Reason analyze (If you can)\r\n\r\nNone\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n1. Start Sharding-Proxy with configuration from samples.\r\n2. Connect to Sharding-Proxy with ***psql (PostgreSQL) 10.12 (Ubuntu 10.12-0ubuntu0.18.04.1)***\r\n3. Execute any **unsupported** command\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\nNone", "url": "https://github.com/apache/shardingsphere/issues/4978", "user": "wenmingwei", "labels": ["bug", "proxy"], "created": "2020-03-27 11:42:06", "closed": "2020-03-31 03:11:51", "commits": {"56f9fe902e5e19bbc54c1dd385e965875345e943": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "56f9fe902e5e19bbc54c1dd385e965875345e943", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["12774f377316b079f65118a270b0ba8f73c2daa5"], "nameRev": "56f9fe902e5e19bbc54c1dd385e965875345e943 tags/shardingsphere-ui-4.1.0~18", "commitMessage": "#4978, Sharding-Proxy doesn't response for \"Unsupported Command\" from PSQL cli (#5009)\n\n", "commitDateTime": "2020-03-31 11:11:50", "authoredDateTime": "2020-03-31 11:11:50", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/command/CommandExecutorTask.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/MySQLCommandExecuteEngine.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/PostgreSQLErrPacketFactory.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/PostgreSQLCommandExecuteEngine.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-spi/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/engine/CommandExecuteEngine.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandExecutorTask.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLCommandExecuteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecuteEngine.getOtherPacket()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLErrPacketFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.PostgreSQLErrPacketFactory.newInstance(java.lang.Exception)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "PostgreSQLCommandExecuteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.getErrorPacket(java.lang.Exception)", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.getOtherPacket()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandExecuteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.engine.getOtherPacket()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "ShardingProxy can not load `shardingAlgorithm.jar` from an external path", "body": "- [x] Modify Dokerfile\r\n- [x] Update [ShardingSphere doc](https://shardingsphere.apache.org/document/current/cn/manual/sharding-proxy/docker/)\r\n- [x] Update [docker hub description](https://hub.docker.com/r/apache/sharding-proxy/)", "url": "https://github.com/apache/shardingsphere/issues/4919", "user": "tristaZero", "labels": ["bug", "proxy"], "created": "2020-03-24 10:15:45", "closed": "2020-03-27 05:49:28", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Case insensitive for DESC table for encrypt", "body": "DESC table is case sensitive now, We should change it to case insensitive.", "url": "https://github.com/apache/shardingsphere/issues/4770", "user": "terrymanu", "labels": ["bug", "encrypt"], "created": "2020-03-15 16:28:09", "closed": "2020-03-27 14:27:34", "commits": {"14b1cc7815e62d540e65cbc65ccea23908b51bda": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "14b1cc7815e62d540e65cbc65ccea23908b51bda", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["50c67b406d99c1bddc8b302538185b23d306a298"], "nameRev": "14b1cc7815e62d540e65cbc65ccea23908b51bda tags/shardingsphere-ui-4.1.0~40", "commitMessage": "Fixes insensitive for DESC table for encrypt. (#4964)\n\n* fixes #4770, get column encrypt field from SchemaMetaData instead of EncryptRule.\r\n\r\n* fixes code review problem.", "commitDateTime": "2020-03-27 22:27:33", "authoredDateTime": "2020-03-27 22:27:33", "commitGitStats": [{"filePath": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/EncryptResultDecoratorEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/EncryptDALResultDecorator.java", "insertions": 2, "deletions": 7, "lines": 9}, {"filePath": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/DecoratedEncryptColumnsMergedResult.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/EncryptColumnsMergedResult.java", "insertions": 48, "deletions": 15, "lines": 63}, {"filePath": "encrypt-core/encrypt-core-merge/src/main/java/org/apache/shardingsphere/encrypt/merge/dal/impl/MergedEncryptColumnsMergedResult.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptResultDecoratorEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.EncryptResultDecoratorEngine.newInstance(org.apache.shardingsphere.spi.database.type.DatabaseType,org.apache.shardingsphere.encrypt.rule.EncryptRule,org.apache.shardingsphere.underlying.common.config.properties.ConfigurationProperties,org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptDALResultDecorator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.EncryptDALResultDecorator", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.EncryptDALResultDecorator.decorate(org.apache.shardingsphere.underlying.executor.QueryResult,org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext,org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaData)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.EncryptDALResultDecorator.decorate(org.apache.shardingsphere.underlying.merge.result.MergedResult,org.apache.shardingsphere.sql.parser.binder.statement.SQLStatementContext,org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaData)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DecoratedEncryptColumnsMergedResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.impl.DecoratedEncryptColumnsMergedResult", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptColumnsMergedResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.impl.EncryptColumnsMergedResult", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.impl.EncryptColumnsMergedResult.getValue(int,java.lang.Class)", "TOT": 27, "UPD": 9, "INS": 1, "MOV": 16, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.impl.EncryptColumnsMergedResult.next()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.impl.EncryptColumnsMergedResult.getAssistedQueryColumns()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.impl.EncryptColumnsMergedResult.getPlainColumns()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.impl.EncryptColumnsMergedResult.getTableEncryptColumnMetaDatas()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.impl.EncryptColumnsMergedResult.getLogicColumnOfCipher(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MergedEncryptColumnsMergedResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.merge.dal.impl.MergedEncryptColumnsMergedResult", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptResultSet.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.EncryptResultSet.createMergedResult(org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext,java.sql.ResultSet)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "count(distinct col) renturn null", "body": "mybatis\uff1aint getMsgDay(@Param(\"account_uid\") String account_uid);\r\n\r\nSQL\uff1aSELECT COUNT(DISTINCT DATE_FORMAT(create_time,'%Y%m%d')) as count FROM table_name\r\nWHERE account_uid = #{account_uid}\r\n\r\nif there is no data, then return null, not return 0, it case an exection:\r\norg.apache.ibatis.binding.BindingException: Mapper method 'com.*.getMsgDay attempted to return null from a method with a primitive return type (int).", "url": "https://github.com/apache/shardingsphere/issues/4680", "user": "yidwf", "labels": ["bug", "sharding"], "created": "2020-03-10 02:46:59", "closed": "2020-06-19 13:21:45", "commits": {}, "ttf": 101.00027777777778, "commitsDetails": []}, {"title": "DESC table cannot display encrypt related columns", "body": "", "url": "https://github.com/apache/shardingsphere/issues/4658", "user": "terrymanu", "labels": ["bug", "encrypt"], "created": "2020-03-08 09:36:31", "closed": "2020-03-08 11:15:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Use Navicat client open database, console print ClassCastException error log.", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\nLastest master code\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nUse Navicat client, open database.\r\n### Actual behavior\r\nCan open database, but console print error log.\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\n```\r\n[INFO ] 12:23:05.330 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x1b9ce6ac, L:/0:0:0:0:0:0:0:0:3308] READ: [id: 0x2d2ad5dd, L:/127.0.0.1:3308 - R:/127.0.0.1:50754]\r\n[INFO ] 12:23:05.331 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x1b9ce6ac, L:/0:0:0:0:0:0:0:0:3308] READ COMPLETE\r\n[INFO ] 12:23:06.075 [ShardingSphere-Command-0] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 12:23:06.075 [ShardingSphere-Command-0] ShardingSphere-SQL - Logic SQL: SET NAMES utf8mb4\r\n[INFO ] 12:23:06.075 [ShardingSphere-Command-0] ShardingSphere-SQL - SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.SetStatement@3e5a50af, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@2c15d279)\r\n[INFO ] 12:23:06.076 [ShardingSphere-Command-0] ShardingSphere-SQL - Actual SQL: ds_0 ::: SET NAMES utf8mb4\r\n[INFO ] 12:23:06.076 [ShardingSphere-Command-0] ShardingSphere-SQL - Actual SQL: ds_1 ::: SET NAMES utf8mb4\r\n[INFO ] 12:23:06.164 [ShardingSphere-Command-1] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 12:23:06.164 [ShardingSphere-Command-1] ShardingSphere-SQL - Logic SQL: SHOW VARIABLES LIKE 'lower_case_%'\r\n[INFO ] 12:23:06.164 [ShardingSphere-Command-1] ShardingSphere-SQL - SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowOtherStatement@46335750, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@8b98b9b)\r\n[INFO ] 12:23:06.164 [ShardingSphere-Command-1] ShardingSphere-SQL - Actual SQL: ds_1 ::: SHOW VARIABLES LIKE 'lower_case_%'\r\n[INFO ] 12:23:10.510 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x1b9ce6ac, L:/0:0:0:0:0:0:0:0:3308] READ: [id: 0xca3fe6d8, L:/127.0.0.1:3308 - R:/127.0.0.1:50807]\r\n[INFO ] 12:23:10.511 [nioEventLoopGroup-2-1] i.n.handler.logging.LoggingHandler - [id: 0x1b9ce6ac, L:/0:0:0:0:0:0:0:0:3308] READ COMPLETE\r\n[INFO ] 12:23:10.521 [ShardingSphere-Command-5] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 12:23:10.521 [ShardingSphere-Command-5] ShardingSphere-SQL - Logic SQL: SET NAMES utf8mb4\r\n[INFO ] 12:23:10.521 [ShardingSphere-Command-5] ShardingSphere-SQL - SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.SetStatement@5542c1ce, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@75a4a8d3)\r\n[INFO ] 12:23:10.521 [ShardingSphere-Command-5] ShardingSphere-SQL - Actual SQL: ds_0 ::: SET NAMES utf8mb4\r\n[INFO ] 12:23:10.521 [ShardingSphere-Command-5] ShardingSphere-SQL - Actual SQL: ds_1 ::: SET NAMES utf8mb4\r\n[INFO ] 12:23:10.575 [ShardingSphere-Command-7] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 12:23:10.576 [ShardingSphere-Command-7] ShardingSphere-SQL - Logic SQL: SHOW TABLE STATUS\r\n[INFO ] 12:23:10.576 [ShardingSphere-Command-7] ShardingSphere-SQL - SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowTableStatusStatement@37669c66, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@33590e52)\r\n[INFO ] 12:23:10.576 [ShardingSphere-Command-7] ShardingSphere-SQL - Actual SQL: ds_1 ::: SHOW TABLE STATUS\r\n[INFO ] 12:23:10.616 [ShardingSphere-Command-4] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 12:23:10.617 [ShardingSphere-Command-4] ShardingSphere-SQL - Logic SQL: SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'databasemanager' UNION SELECT COUNT(*) FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'databasemanager' UNION SELECT COUNT(*) FROM information_schema.ROUTINES WHERE ROUTINE_SCHEMA = 'databasemanager'\r\n[INFO ] 12:23:10.617 [ShardingSphere-Command-4] ShardingSphere-SQL - SQLStatement: SelectStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@3f763a5b, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@7ae644d8), tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@7ae644d8, projectionsContext=ProjectionsContext(startIndex=7, stopIndex=14, distinctRow=false, projections=[AggregationProjection(type=COUNT, innerExpression=(*), alias=Optional.empty, derivedAggregationProjections=[], index=-1)], columnLabels=[COUNT(*)]), groupByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext@7ee6828c, orderByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.OrderByContext@532eca15, paginationContext=org.apache.shardingsphere.sql.parser.relation.segment.select.pagination.PaginationContext@5d8496c9, containsSubquery=false)\r\n[INFO ] 12:23:10.617 [ShardingSphere-Command-4] ShardingSphere-SQL - Actual SQL: ds_1 ::: SELECT COUNT(*) FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'databasemanager' UNION SELECT COUNT(*) FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'databasemanager' UNION SELECT COUNT(*) FROM information_schema.ROUTINES WHERE ROUTINE_SCHEMA = 'databasemanager'\r\n[INFO ] 12:23:10.671 [ShardingSphere-Command-8] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 12:23:10.671 [ShardingSphere-Command-8] ShardingSphere-SQL - Logic SQL: SELECT TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'databasemanager' ORDER BY TABLE_SCHEMA, TABLE_TYPE\r\n[INFO ] 12:23:10.671 [ShardingSphere-Command-8] ShardingSphere-SQL - SQLStatement: SelectStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@5139217f, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@4386d13), tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@4386d13, projectionsContext=ProjectionsContext(startIndex=7, stopIndex=42, distinctRow=false, projections=[ColumnProjection(owner=null, name=TABLE_SCHEMA, alias=Optional.empty), ColumnProjection(owner=null, name=TABLE_NAME, alias=Optional.empty), ColumnProjection(owner=null, name=TABLE_TYPE, alias=Optional.empty)], columnLabels=[TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE]), groupByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext@3db4633e, orderByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.OrderByContext@7c134aa6, paginationContext=org.apache.shardingsphere.sql.parser.relation.segment.select.pagination.PaginationContext@6439ae82, containsSubquery=false)\r\n[INFO ] 12:23:10.671 [ShardingSphere-Command-8] ShardingSphere-SQL - Actual SQL: ds_1 ::: SELECT TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE FROM information_schema.TABLES WHERE TABLE_SCHEMA = 'databasemanager' ORDER BY TABLE_SCHEMA, TABLE_TYPE\r\n[INFO ] 12:23:10.690 [ShardingSphere-Command-9] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 12:23:10.690 [ShardingSphere-Command-9] ShardingSphere-SQL - Logic SQL: SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLUMN_TYPE FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'databasemanager' ORDER BY TABLE_SCHEMA, TABLE_NAME\r\n[INFO ] 12:23:10.690 [ShardingSphere-Command-9] ShardingSphere-SQL - SQLStatement: SelectStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@4a6ca2d2, tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@f6e35fb), tablesContext=org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext@f6e35fb, projectionsContext=ProjectionsContext(startIndex=7, stopIndex=56, distinctRow=false, projections=[ColumnProjection(owner=null, name=TABLE_SCHEMA, alias=Optional.empty), ColumnProjection(owner=null, name=TABLE_NAME, alias=Optional.empty), ColumnProjection(owner=null, name=COLUMN_NAME, alias=Optional.empty), ColumnProjection(owner=null, name=COLUMN_TYPE, alias=Optional.empty)], columnLabels=[TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLUMN_TYPE]), groupByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext@6951246d, orderByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.OrderByContext@3eabbbb8, paginationContext=org.apache.shardingsphere.sql.parser.relation.segment.select.pagination.PaginationContext@117ef48d, containsSubquery=false)\r\n[INFO ] 12:23:10.691 [ShardingSphere-Command-9] ShardingSphere-SQL - Actual SQL: ds_1 ::: SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLUMN_TYPE FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'databasemanager' ORDER BY TABLE_SCHEMA, TABLE_NAME\r\n[ERROR] 12:23:10.916 [ShardingSphere-Command-10] o.a.s.s.f.c.CommandExecutorTask - Exception occur: \r\njava.lang.ClassCastException: org.apache.shardingsphere.sql.parser.sql.segment.dml.expr.subquery.SubquerySegment cannot be cast to org.apache.shardingsphere.sql.parser.sql.segment.generic.TableSegment\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitJoinedTable(MySQLDMLVisitor.java:515)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitJoinedTable(MySQLDMLVisitor.java:119)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$JoinedTableContext.accept(MySQLStatementParser.java:6736)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.getTableSegments(MySQLDMLVisitor.java:338)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitTableReference(MySQLDMLVisitor.java:490)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitTableReference(MySQLDMLVisitor.java:119)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$TableReferenceContext.accept(MySQLStatementParser.java:6265)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitEscapedTableReference(MySQLDMLVisitor.java:476)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitEscapedTableReference(MySQLDMLVisitor.java:119)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$EscapedTableReferenceContext.accept(MySQLStatementParser.java:5936)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitTableReferences(MySQLDMLVisitor.java:469)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitTableReferences(MySQLDMLVisitor.java:119)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$TableReferencesContext.accept(MySQLStatementParser.java:5880)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitFromClause(MySQLDMLVisitor.java:461)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitFromClause(MySQLDMLVisitor.java:119)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$FromClauseContext.accept(MySQLStatementParser.java:5835)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:315)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitSelectClause(MySQLDMLVisitor.java:119)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectClauseContext.accept(MySQLStatementParser.java:4542)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:303)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitUnionClause(MySQLDMLVisitor.java:119)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$UnionClauseContext.accept(MySQLStatementParser.java:4437)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:295)\r\n\tat org.apache.shardingsphere.sql.parser.visitor.impl.MySQLDMLVisitor.visitSelect(MySQLDMLVisitor.java:119)\r\n\tat org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser$SelectContext.accept(MySQLStatementParser.java:3095)\r\n\tat org.antlr.v4.runtime.tree.AbstractParseTreeVisitor.visit(AbstractParseTreeVisitor.java:18)\r\n\tat org.apache.shardingsphere.sql.parser.SQLParserEngine.parse0(SQLParserEngine.java:72)\r\n\tat org.apache.shardingsphere.sql.parser.SQLParserEngine.parse(SQLParserEngine.java:53)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(TextProtocolBackendHandlerFactory.java:69)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.<init>(MySQLComQueryPacketExecutor.java:65)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecutorFactory.newInstance(MySQLCommandExecutorFactory.java:70)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecuteEngine.getCommandExecutor(MySQLCommandExecuteEngine.java:58)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:89)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:70)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```", "url": "https://github.com/apache/shardingsphere/issues/4640", "user": "dongzl", "labels": ["SQL parse", "bug"], "created": "2020-03-07 04:28:40", "closed": "2020-03-08 06:38:39", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Check Call statement in MySQL", "body": "There're two Call statements in MySQL g4 file for now. We need to determine which one is right.", "url": "https://github.com/apache/shardingsphere/issues/4627", "user": "tuohai666", "labels": ["SQL parse", "bug"], "created": "2020-03-06 05:54:29", "closed": "2020-03-06 11:07:48", "commits": {"8843c5387f7d401a6a82b30b01fdbefdc0225875": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8843c5387f7d401a6a82b30b01fdbefdc0225875", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["5768dcc680a0b97084890037792bfa9b547179c7"], "nameRev": "8843c5387f7d401a6a82b30b01fdbefdc0225875 tags/shardingsphere-ui-4.1.0~230", "commitMessage": "#4627, fix Call statement (#4633)\n\n* #4627, fix Call statement", "commitDateTime": "2020-03-06 19:07:47", "authoredDateTime": "2020-03-06 19:07:47", "commitGitStats": [{"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/core/constant/RuleName.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/DMLStatement.g4", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/StoreProcedure.g4", "insertions": 0, "deletions": 24, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/org/apache/shardingsphere/sql/parser/autogen/MySQLStatement.g4", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RuleName.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.core.constant.RuleName", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "distinct returns wrong result", "body": "sharding-proxy version:4.0.0\r\n\r\nI insert some rows to sharding-proxy by my custom hash algorithm.\r\n\r\n\r\nperson_id|name|last_update_time|account|which data node\r\n-|-|-|-|-|\r\n174fd27ef0f34fd5b9296f102ffdbd47|\tliuqiang|\t2020-02-12 20:47:10\t|3|ds_0\r\n4295029899a64d1bbfc5b4d37b628f0c|\twangwu|\t2020-02-12 20:28:22|\t2|ds_0\r\na672ba34d2f14f4d8e3ee9e8ccfd6ca5|\tliyi|\t2020-02-12 20:47:16|\t1|ds_0\r\nbf840dc0eaf64f7a8a7493c3ffea8799|\thuangyao|\t2020-02-12 20:28:38|\t3|ds_0\r\nc63b749e981a4dc6b4942b18978e0d08|\tlisi|\t2020-02-12 20:28:17|\t2|ds_0\r\ne28da7bc9ddc45bdb2974041ed564fc3|\tzhangsan|\t2020-02-12 20:27:48|\t1|ds_0\r\nf741d4fb69f14b869dac11e2889fe8c1|\tpenggang|\t2020-02-12 20:28:34|\t3|ds_0\r\n0596342115c14328b2b0458d0860a90c|\tlingang|\t2020-02-12 20:28:47|\t3|ds_1\r\n2f8b95104c114cc5a8ab6bc86ef9ab62|\tluyang|\t2020-02-12 20:28:50|\t2|ds_1\r\n4397392fb6274bf2bfcfc41ae1da55a5|\ttangliang\t|2020-02-12 20:28:42|\t1|ds_1\r\nc57c358c49cc4da6b98477ad8a55db3f|\thelp|\t2020-02-13 16:01:28|\t3|ds_1\r\nd9edd130ab8241f6be4b96a12cdb0404|\tzhaoliu|\t2020-02-12 20:28:26|\t2|ds_1\r\nf97ea21d03124aa8b59a23bad5585e81|\twanger|\t2020-02-12 20:28:29|\t1|ds_1\r\n\r\nthen,I execute this SQL:\r\n```SQL\r\nselect distinct account from tbperson;\r\n```\r\nresult is :\r\n\r\naccount\r\n-|\r\n3|\r\n2|\r\n1|\r\n3|\r\n2|\r\n1|\r\n\r\nright result gonna be:\r\n\r\naccount\r\n-|\r\n3|\r\n2|\r\n1|\r\n\r\nlook forward to your reply.\r\n\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/4565", "user": "nevereverever", "labels": ["bug", "sharding"], "created": "2020-03-02 08:10:39", "closed": "2020-03-06 06:58:33", "commits": {"b8f4d8d29cad5dc664d7fe80f4b8cfa43a344ca4": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "b8f4d8d29cad5dc664d7fe80f4b8cfa43a344ca4", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["c608197f2117c84c8d4cd958d14917a4a59294ef"], "nameRev": "b8f4d8d29cad5dc664d7fe80f4b8cfa43a344ca4 tags/shardingsphere-ui-4.1.0~234", "commitMessage": "fix #4565 for distinct bug (#4597)\n\n* fix #4565 for distinct bug\r\n\r\n* Polish package import\r\n\r\n* Polish for checkstyle\r\n\r\n* Polish checkstyle for test\r\n\r\n* fix unit test\r\n\r\n* add testcases for distinct without order by\r\n\r\n* remove an unused import\r\n\r\n* Polish for checkstyle\r\n\r\n* Polish the checkstyle\r\n\r\n* add sql parser cases\r\n\r\n* Polish checkstyle", "commitDateTime": "2020-03-06 14:58:32", "authoredDateTime": "2020-03-06 14:58:32", "commitGitStats": [{"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sharding/rewrite/token/generator/impl/OrderByTokenGenerator.java", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/db/select_distinct_with_multi_column_without_oder_by.xml", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/db/select_distinct_with_owner_column_without_oder_by.xml", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/db/select_distinct_with_owner_star_without_oder_by.xml", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/db/select_distinct_with_single_column_without_order_by.xml", "insertions": 182, "deletions": 0, "lines": 182}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_distinct_with_multi_column_without_order_by.xml", "insertions": 124, "deletions": 0, "lines": 124}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_distinct_with_owner_column_without_order_by.xml", "insertions": 122, "deletions": 0, "lines": 122}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_distinct_with_owner_star_without_order_by.xml", "insertions": 125, "deletions": 0, "lines": 125}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_distinct_with_single_column_without_order_by.xml", "insertions": 222, "deletions": 0, "lines": 222}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/masterslave/select_distinct_with_multi_column_without_order_by.xml", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/masterslave/select_distinct_with_owner_column_without_order_by.xml", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/masterslave/select_distinct_with_owner_star_without_order_by.xml", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/masterslave/select_distinct_with_single_column_without_order_by.xml", "insertions": 102, "deletions": 0, "lines": 102}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/shadow/select_distinct_with_multi_column_without_order_by.xml", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/shadow/select_distinct_with_owner_column_without_order_by.xml", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/shadow/select_distinct_with_owner_star_without_order_by.xml", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/shadow/select_distinct_with_single_column_without_order_by.xml", "insertions": 102, "deletions": 0, "lines": 102}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/tbl/select_distinct_with_multi_column_without_order_by.xml", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/tbl/select_distinct_with_owner_column_without_order_by.xml", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/tbl/select_distinct_with_owner_star_without_order_by.xml", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/tbl/select_distinct_with_single_column_without_order_by.xml", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dql-integrate-test-cases.xml", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "sharding-sql-test/src/main/resources/sql/supported/dql/select-distinct.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/orderby/engine/OrderByContextEngine.java", "insertions": 26, "deletions": 1, "lines": 27}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/orderby/engine/OrderByContextEngineTest.java", "insertions": 23, "deletions": 2, "lines": 25}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sql/dml/select.xml", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrderByTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sharding.rewrite.token.generator.impl.OrderByTokenGenerator.generateOrderByIndex(org.apache.shardingsphere.sql.parser.relation.statement.dml.SelectStatementContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sharding.rewrite.token.generator.impl.OrderByTokenGenerator.generateSQLToken(org.apache.shardingsphere.sql.parser.relation.statement.dml.SelectStatementContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "OrderByContextEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.engine.OrderByContextEngine.createOrderByContextForDistinctRowWithoutGroupBy(org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement,org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.engine.OrderByContextEngine.createOrderBy(org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement,org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "OrderByContextEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.engine.OrderByContextEngineTest.assertCreateOrderInDistinctByWithoutOrderBy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Identify MySQL syntax allowed in Prepared Statements", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n5.0.0-RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nUse MySQL C API to prepare and execute the SQL 'BEGIN' right.\r\n### Actual behavior\r\nC API return an unknown exception.\r\n### Reason analyze (If you can)\r\nC API expect a ER_UNSUPPORTED_PS message. But Proxy return a success message for now.\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/4501", "user": "tuohai666", "labels": ["bug", "proxy"], "created": "2020-02-27 10:46:08", "closed": "2020-03-03 11:42:31", "commits": {"e4c154a8402e54bb9b29971a86a03ddc5a426c6c": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "e4c154a8402e54bb9b29971a86a03ddc5a426c6c", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["1e50d71909d71028bc2adb1c1ad44c7a79083c1a"], "nameRev": "e4c154a8402e54bb9b29971a86a03ddc5a426c6c tags/shardingsphere-ui-4.1.0~261", "commitMessage": "#4501, Identify MySQL syntax allowed in Prepared Statements (#4502)\n\n* #4501, Identify MySQL syntax allowed in Prepared Statements\r\n\r\n* #4501, revert\r\n\r\n* #4501, add Statements\r\n\r\n* #4501, add Statements\r\n\r\n* #4501, add Statements\r\n\r\n* #4501, add Statements\r\n\r\n* #4501, add Statements\r\n\r\n* #4501, add Statements\r\n\r\n* #4501, add Statements\r\n\r\n* #4501, add MySQLComStmtPrepareChecker\r\n\r\n* #4501, for checkstyle\r\n\r\n* #4501, for checkstyle\r\n\r\n* #4501, refine\r\n", "commitDateTime": "2020-03-03 19:42:31", "authoredDateTime": "2020-03-03 19:42:31", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareChecker.java", "insertions": 108, "deletions": 0, "lines": 108}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareExecutor.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/constant/MySQLServerErrorCode.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/AnalyzeTableStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/CacheIndexStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ChecksumTableStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/FlushStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/InstallPluginStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/KillStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/LoadIndexInfoStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/OptimizeTableStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/RepairTableStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ResetStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ShowBinaryLogsStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ShowBinlogStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ShowCreateEventStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ShowCreateFunctionStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ShowCreateProcedureStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ShowCreateViewStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ShowErrorsStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ShowStatusStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/ShowWarningsStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dal/dialect/mysql/UninstallPluginStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/ddl/CreateDatabaseStatement.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/ddl/CreateViewStatement.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/ddl/DropDatabaseStatement.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/ddl/DropViewStatement.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/ddl/RenameTableStatement.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dml/CallStatement.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dml/DoStatement.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/dml/ReplaceStatement.java", "insertions": 161, "deletions": 0, "lines": 161}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/rl/ChangeMasterStatement.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/rl/RLStatement.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/rl/StartSlaveStatement.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/statement/rl/StopSlaveStatement.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/DALStatement.g4", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/DDLStatement.g4", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/MySQLKeyword.g4", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/RLStatement.g4", "insertions": 55, "deletions": 0, "lines": 55}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/org/apache/shardingsphere/sql/parser/autogen/MySQLStatement.g4", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/impl/MySQLDALVisitor.java", "insertions": 140, "deletions": 0, "lines": 140}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/impl/MySQLDDLVisitor.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/impl/MySQLDMLVisitor.java", "insertions": 32, "deletions": 1, "lines": 33}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/impl/MySQLRLVisitor.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-spi/src/main/java/org/apache/shardingsphere/sql/parser/api/visitor/RLVisitor.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-sql92/src/main/antlr4/imports/sql92/DDLStatement.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-sql92/src/main/antlr4/org/apache/shardingsphere/sql/parser/autogen/SQL92Statement.g4", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Correct the `DataTypeName` for each DataBase", "body": "The definition of `DataTypeName` in `RuleName.g4`(Antlr grammer file) of each DataBase is not correct so far, therefore this issue is created to correct them. The sub-task list is below,\r\n- [x] Correct the `DataTypeName` for `MySQL`.\r\n- [x] Correct the `DataTypeName` for `PostgreSQL`. \r\n- [x] Correct the `DataTypeName` for `SQLServer`. \r\n- [x] Correct the `DataTypeName` for `Oracle`. \r\n- [x] Correct the `DataTypeName` for `SQL92`. \r\n\r\nQ1: How to learn about the definition of `DataTypeName`?\r\nA:\r\n - Official document of each DataBase, i.g [MySQL](https://dev.mysql.com/doc/refman/8.0/en/data-types.html).\r\n- [Antlr SQL grammer](https://github.com/antlr/grammars-v4/tree/master/sql)\r\n- Other related Website. (I am not sure. \ud83d\ude03 )\r\n\r\nQ2: Which file of ShardingSphere does `DataTypeName` exist?\r\nA: All files named with `RuleName.g4`", "url": "https://github.com/apache/shardingsphere/issues/4482", "user": "tristaZero", "labels": ["SQL parse", "bug"], "created": "2020-02-26 03:59:32", "closed": "2020-03-22 04:40:43", "commits": {"f95a90bed5ced562e63db20d2036078f993c3a0e": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}, "e2eb1b354d7242228b3ffe0e795adc6611be72c8": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}, "f8f805ce99146066386d741fd133e3fdcb13a45f": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "f95a90bed5ced562e63db20d2036078f993c3a0e", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["1b1cbb1c136e8c0e67ccc830791554f6e26c62ea"], "nameRev": "f95a90bed5ced562e63db20d2036078f993c3a0e tags/shardingsphere-ui-4.1.0~283", "commitMessage": "#4482 Correct the `DataTypeName` for PostgreSQL (#4525)\n\n* #4482 Correct the `DataTypeName` for PostgreSQL\r\n\r\n* remove doublePrecision and add keyword DOUBLEPRECISION in PostgreSQLKeyword.g4\r\n", "commitDateTime": "2020-03-01 13:57:30", "authoredDateTime": "2020-03-01 13:57:30", "commitGitStats": [{"filePath": "sharding-sql-test/src/main/resources/sql/supported/ddl/alter.xml", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/BaseRule.g4", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/Keyword.g4", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/antlr4/imports/postgresql/PostgreSQLKeyword.g4", "insertions": 128, "deletions": 0, "lines": 128}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/PostgreSQLVisitor.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sql/ddl/alter-table.xml", "insertions": 102, "deletions": 26, "lines": 128}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PostgreSQLVisitor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.visitor.PostgreSQLVisitor.visitDataTypeName(org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser.DataTypeNameContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e2eb1b354d7242228b3ffe0e795adc6611be72c8", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["b5f754d829062f6431642df22b3cfcf58e52b35d"], "nameRev": "e2eb1b354d7242228b3ffe0e795adc6611be72c8 tags/shardingsphere-ui-4.1.0~263", "commitMessage": "#4482 Correct the `DataTypeName` for SQLServer (#4577)\n\n* #4482 Correct the `DataTypeName` for SQLServer\r\n\r\n* format\r\n\r\n* add a empty line at end of file.\r\n", "commitDateTime": "2020-03-03 18:23:06", "authoredDateTime": "2020-03-03 18:23:06", "commitGitStats": [{"filePath": "sharding-sql-test/src/main/resources/sql/supported/ddl/alter.xml", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-sqlserver/src/main/antlr4/imports/sqlserver/BaseRule.g4", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-sqlserver/src/main/antlr4/imports/sqlserver/Keyword.g4", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-sqlserver/src/main/antlr4/imports/sqlserver/SQLServerKeyword.g4", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sql/ddl/alter-table.xml", "insertions": 33, "deletions": 45, "lines": 78}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f8f805ce99146066386d741fd133e3fdcb13a45f", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["310e2ac33ca4df1592e4feebe549c6c5b3af517e"], "nameRev": "f8f805ce99146066386d741fd133e3fdcb13a45f tags/shardingsphere-ui-4.1.0~192", "commitMessage": "#4482 Correct the DataTypeName for Oracle. (#4704)\n\n* #4482 Correct the `DataTypeName` for oracle\r\n\r\n* delete blank line", "commitDateTime": "2020-03-11 12:56:23", "authoredDateTime": "2020-03-11 12:56:23", "commitGitStats": [{"filePath": "sharding-sql-test/src/main/resources/sql/supported/ddl/alter.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-oracle/src/main/antlr4/imports/oracle/BaseRule.g4", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-oracle/src/main/antlr4/imports/oracle/Keyword.g4", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-oracle/src/main/antlr4/imports/oracle/OracleKeyword.g4", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sql/ddl/alter-table.xml", "insertions": 57, "deletions": 0, "lines": 57}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 3, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SQL exec `order by` and `desc` feedback result may hung", "body": "Sharding-proxy version: 4.0.0-RC3\r\n\r\n- Problems encountered 1\uff1aQuery SQL `select association,rounds,election_time as electionTime,title from zhyxh where doctor_id = 848224 order by association,election_time desc` feedback results hung. \r\n\r\n    Query SQL `select association,rounds,election_time as electionTime,title from zhyxh where doctor_id = 848224` feedback results ok.\r\n\r\n\r\n  logs:  no error in logs\r\n\r\n- Problems encountered 2\uff1aQuery SQL `select rtitle_ch,rn_ch,r_data,rstatus_ch,rtype_ch,researcher_ch,researcher_phone,researcher_email,researcher_addr_ch,researcher_unit_ch,exp_org_ch,applicant_ch,applicant_unit_ch,study_disease_ch from chictr where id in\r\n                 (  \r\n                        '2443'\r\n                 , \r\n                        '2615'\r\n                 ) \r\n                order by r_data desc` feedback results error `10002 - 2Unknown exception: [No signature of method: java.lang.String.mod() is applicable for argument types: (java.lang.Integer) values: [2]`.\r\n\r\n\r\n  logs: `[DEBUG] 16:12:04.484 [ShardingSphere-Command-3] o.a.s.s.f.m.c.MySQLCommandExecutorFactory - Execute packet type: COM_QUERY, value: MySQLComQueryPacket(sql=select rtitle_ch,rn_ch,r_data,rstatus_ch,rtype_ch,researcher_ch,researcher_phone,researcher_email,researcher_addr_ch,researcher_unit_ch,exp_org_ch,applicant_ch,applicant_unit_ch,study_disease_ch from chictr where id in\r\n                 (  \r\n                        '2443'\r\n                 , \r\n                        '2615'\r\n                 ) \r\n                order by r_data desc)\r\n[ERROR] 16:12:04.536 [ShardingSphere-Command-3] o.a.s.s.f.c.CommandExecutorTask - Exception occur: \r\ngroovy.lang.MissingMethodException: No signature of method: java.lang.String.mod() is applicable for argument types: (java.lang.Integer) values: [2]\r\nPossible solutions: drop(int), find(), any(), take(int), use([Ljava.lang.Object;), find(groovy.lang.Closure)\r\n        at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:58)\r\n        at org.codehaus.groovy.runtime.callsite.PojoMetaClassSite.call(PojoMetaClassSite.java:49)\r\n        at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n        at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:58)\r\n        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\r\n        at Script109$_run_closure1.doCall(Script109.groovy:1)\r\n        at sun.reflect.GeneratedMethodAccessor28.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n        at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n        at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\r\n        at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\r\n        at groovy.lang.Closure.call(Closure.java:426)\r\n        at groovy.lang.Closure.call(Closure.java:420)\r\n        at org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.execute(InlineShardingStrategy.java:90)\r\n        at org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.doSharding(InlineShardingStrategy.java:72)\r\n        at org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.doSharding(InlineShardingStrategy.java:59)\r\n        at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeDataSources(StandardRoutingEngine.java:200)\r\n        at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route0(StandardRoutingEngine.java:188)\r\n        at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditionsWithCondition(StandardRoutingEngine.java:118)\r\n        at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditions(StandardRoutingEngine.java:112)\r\n        at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.getDataNodes(StandardRoutingEngine.java:97)\r\n        at org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:75)\r\n        at org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.route(ShardingRouter.java:107)\r\n        at org.apache.shardingsphere.core.route.StatementRoutingEngine.route(StatementRoutingEngine.java:54)\r\n        at org.apache.shardingsphere.core.SimpleQueryShardingEngine.route(SimpleQueryShardingEngine.java:58)\r\n        at org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:91)\r\n        at org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:74)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.StatementExecutorWrapper.doShardingRoute(StatementExecutorWrapper.java:78)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.StatementExecutorWrapper.route(StatementExecutorWrapper.java:64)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:77)\r\n        at org.apache.shardingsphere.shardingproxy.backend.text.query.QueryBackendHandler.execute(QueryBackendHandler.java:54)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute(MySQLComQueryPacketExecutor.java:73)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:86)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:66)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)`\r\n", "url": "https://github.com/apache/shardingsphere/issues/4460", "user": "lklkxcxc", "labels": ["bug", "proxy"], "created": "2020-02-25 08:02:18", "closed": "2020-03-18 02:05:47", "commits": {"ac11781e16d31a7da719d58d5ec491b19a0afadf": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "ac11781e16d31a7da719d58d5ec491b19a0afadf", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a3e9f28959c3cbde9e711bee1ee889e200dea3e0"], "nameRev": "ac11781e16d31a7da719d58d5ec491b19a0afadf tags/shardingsphere-ui-4.1.0~89", "commitMessage": "#4460, fix order by string column exception (#4850)\n\n* #4460, fix order by string column exception\r\n\r\n* #4460, different delimiters for different drivers\r\n\r\n* #4460, find column from all tables parsed\r\n\r\n* #4460, fix index order by item problem\r\n\r\n* #4460, remove isCaseSensitive from QueryResult\r\n\r\n* #4460, remove setter of isCaseSensitive\r\n\r\n* #4460, isCaseSensitive => caseSensitive\r\n\r\n* #4460, split getOrderValuesCaseSensitive to small methods\r\n\r\n* #4460, re-design generateEmptyResultSQL()\r\n\r\n* #4460, fix test cases\r\n\r\n* #4460, add TODO: consider add a getDialectDelimeter() interface in parse module", "commitDateTime": "2020-03-23 15:06:57", "authoredDateTime": "2020-03-23 15:06:57", "commitGitStats": [{"filePath": "encrypt-core/encrypt-core-common/src/main/java/org/apache/shardingsphere/encrypt/metadata/EncryptColumnMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/ShardingMetaDataLoader.java", "insertions": 14, "deletions": 10, "lines": 24}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/ShardingTableMetaDataDecorator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/sharding/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/sharding/execute/sql/execute/result/StreamQueryResult.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/sharding/execute/sql/execute/result/MemoryQueryResultTest.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/sharding/execute/sql/execute/result/StreamQueryResultTest.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/sharding/merge/dql/ShardingDQLResultMerger.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/sharding/merge/dql/groupby/GroupByMemoryMergedResult.java", "insertions": 22, "deletions": 5, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/sharding/merge/dql/groupby/GroupByStreamMergedResult.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByStreamMergedResult.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValue.java", "insertions": 40, "deletions": 6, "lines": 46}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/sharding/merge/dql/ShardingDQLResultMergerTest.java", "insertions": 66, "deletions": 42, "lines": 108}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/sharding/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/sharding/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 27, "deletions": 4, "lines": 31}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 52, "deletions": 22, "lines": 74}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/sharding/merge/dql/orderby/OrderByValueTest.java", "insertions": 87, "deletions": 18, "lines": 105}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/sharding/route/DatabaseTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/sharding/route/engine/type/standard/AbstractSQLRouteTest.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractStatementExecutor.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/EncryptRuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/MasterSlaveRuntimeContext.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/ShadowRuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/ShardingRuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/EncryptSchema.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/MasterSlaveSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/ShadowSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/ShardingSchema.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/TransparentSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeaderTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaData.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/column/ColumnMetaDataLoader.java", "insertions": 40, "deletions": 5, "lines": 45}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/schema/SchemaMetaDataLoader.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/main/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/TableMetaDataLoader.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-binder/src/test/java/org/apache/shardingsphere/sql/parser/binder/metadata/table/SchemaMetaDataTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-underlying/shardingsphere-executor/src/main/java/org/apache/shardingsphere/underlying/executor/QueryResult.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Fix example project incorrect references", "body": "org.apache.shardingsphere.core.yaml package classification migration caused org.apache.shardingsphere.example project build to fail", "url": "https://github.com/apache/shardingsphere/issues/4459", "user": "yuzel", "labels": ["bug", "example"], "created": "2020-02-25 07:55:43", "closed": "2020-02-25 09:50:00", "commits": {"c7d9c1b9e4d3b8ccfef8ed54b172dccec223f1fc": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "7a31f09f14342bb066f181c7e053f67a875739d9": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c7d9c1b9e4d3b8ccfef8ed54b172dccec223f1fc", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["8be4f4d657b360d808060c421315f85e252cc0c4"], "nameRev": "c7d9c1b9e4d3b8ccfef8ed54b172dccec223f1fc tags/shardingsphere-ui-4.1.0~307", "commitMessage": "#4459 fix sharding-proxy-hint-example incorrect references (#4469)\n\n", "commitDateTime": "2020-02-25 17:49:59", "authoredDateTime": "2020-02-25 17:49:59", "commitGitStats": [{"filePath": "examples/pom.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "examples/sharding-proxy-example/sharding-proxy-hint-example/pom.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "examples/sharding-proxy-example/sharding-proxy-hint-example/src/main/java/org/apache/shardingsphere/example/proxy/hint/config/DatasourceConfig.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "examples/sharding-proxy-example/sharding-proxy-hint-example/src/main/java/org/apache/shardingsphere/example/proxy/hint/factory/YamlDataSourceFactory.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DatasourceConfig.java", "spoonMethods": []}, {"spoonFilePath": "YamlDataSourceFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.example.proxy.hint.factory.YamlDataSourceFactory.createDataSource(java.io.File)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7a31f09f14342bb066f181c7e053f67a875739d9", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["98328881af6f5b800bd26da0b1c81b736f0d6044"], "nameRev": "7a31f09f14342bb066f181c7e053f67a875739d9 tags/shardingsphere-ui-4.1.0~297", "commitMessage": "#4406 fix MySQL, PostgreSQL DDL cannot parse Integer, Double, Decimal (#4456)\n\n* #4406 fix MySQL, PostgreSQL DDL cannot parse Integer, Double, Decimal\r\n\r\n* #4459 Correct the `DataTypeName` for mysql\r\n", "commitDateTime": "2020-02-27 12:37:56", "authoredDateTime": "2020-02-27 12:37:56", "commitGitStats": [{"filePath": "sharding-sql-test/src/main/resources/sql/supported/ddl/alter.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/Keyword.g4", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/MySQLKeyword.g4", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sql/ddl/alter-table.xml", "insertions": 114, "deletions": 0, "lines": 114}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "When the table field type contains Integer, Double, BigDecimal, alter table fails", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nalter table successfully\r\n\r\n### Actual behavior\r\n\r\nHibernate: \r\nwhen  field type is Bigdecimal\r\n    alter table cc_v3_sydx.cc_manual_collect_record \r\n       add column rfidNum decimal(19,2)\r\nline 3:30 mismatched input 'decimal' expecting {TRUNCATE, POSITION, VIEW, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CODE, CONTEXT, CLONE, AGGREGATE, INSTALL, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, UNIX_TIMESTAMP, LOWER, UPPER, IDENTIFIER_}\r\nline 3:41 mismatched input '2' expecting {ALTER, DROP, TRUNCATE, ADD, INDEX, WITH, UNION, ORDER, CHAR, CHARACTER, DEFAULT, ENABLE, DISABLE, TABLESPACE, MODIFY, WITHOUT, UPGRADE, CHECK, PASSWORD, ALGORITHM, ANALYZE, CHANGE, CHECKSUM, COALESCE, COLLATE, COMMENT, COMPRESSION, CONNECTION, CONVERT, DATA, DISCARD, ENCRYPTION, ENGINE, EXCHANGE, FORCE, IMPORT_, LOCK, OPTIMIZE, REBUILD, REMOVE, RENAME, REORGANIZE, REPAIR, MAX_ROWS, MIN_ROWS, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE}\r\n2020-02-21 23:36:11.071 [main] ERROR org.springframework.boot.SpringApplication -\r\n\t\t\t\t\tApplication startup failed\r\n\r\nwhen  field type is  Integer:\r\nHibernate: \r\n    \r\n    alter table cc_v3_sydx.cc_manual_collect_record \r\n       add column rfidNumInt integer\r\nline 3:29 mismatched input 'integer' expecting {TRUNCATE, POSITION, VIEW, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CODE, CONTEXT, CLONE, AGGREGATE, INSTALL, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, UNIX_TIMESTAMP, LOWER, UPPER, IDENTIFIER_}\r\n2020-02-21 23:45:14.558 [main] ERROR org.springframework.boot.SpringApplication -\r\n\t\t\t\t\tApplication startup failed\r\n\r\nwhen  field type is  Double:\r\n\r\nHibernate: \r\n    \r\n    alter table cc_v3_sydx.cc_manual_collect_record \r\n       add column rfidNumInt double precision\r\nline 3:29 mismatched input 'double' expecting {TRUNCATE, POSITION, VIEW, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CODE, CONTEXT, CLONE, AGGREGATE, INSTALL, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, UNIX_TIMESTAMP, LOWER, UPPER, IDENTIFIER_}\r\n2020-02-21 23:46:21.119 [main] ERROR org.springframework.boot.SpringApplication -\r\n\t\t\t\t\tApplication startup failed\r\n\r\n### Reason analyze (If you can)\r\nSimilar to this question\uff1a\r\nhttps://github.com/apache/incubator-shardingsphere/issues/2632#issue-462558017\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/4406", "user": "lzq574947385", "labels": ["SQL parse", "bug"], "created": "2020-02-21 15:54:55", "closed": "2020-02-27 04:37:57", "commits": {"7a31f09f14342bb066f181c7e053f67a875739d9": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "7a31f09f14342bb066f181c7e053f67a875739d9", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["98328881af6f5b800bd26da0b1c81b736f0d6044"], "nameRev": "7a31f09f14342bb066f181c7e053f67a875739d9 tags/shardingsphere-ui-4.1.0~297", "commitMessage": "#4406 fix MySQL, PostgreSQL DDL cannot parse Integer, Double, Decimal (#4456)\n\n* #4406 fix MySQL, PostgreSQL DDL cannot parse Integer, Double, Decimal\r\n\r\n* #4459 Correct the `DataTypeName` for mysql\r\n", "commitDateTime": "2020-02-27 12:37:56", "authoredDateTime": "2020-02-27 12:37:56", "commitGitStats": [{"filePath": "sharding-sql-test/src/main/resources/sql/supported/ddl/alter.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/Keyword.g4", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/MySQLKeyword.g4", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sql/ddl/alter-table.xml", "insertions": 114, "deletions": 0, "lines": 114}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Wrong stop index for any segment with alias", "body": "The stop index of segment is calculated as itself's stop index, rather than calculated with stop index of alias. To review all segment with alias and correct them is necessary.", "url": "https://github.com/apache/shardingsphere/issues/4398", "user": "tristaZero", "labels": ["SQL parse", "bug"], "created": "2020-02-21 07:00:34", "closed": "2020-02-24 03:34:39", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Join table SQL can not be rewritten correctly", "body": "At present, SQL case below could not work well when using new parser, and the reason is that `ON t_order.order_id` is not managed.\r\n```\r\n <sql-case id=\"select_inner_join_related_with_name\" value=\"SELECT t_order_item.* FROM t_order JOIN t_order_item ON t_order.order_id = t_order_item.order_id WHERE t_order.order_id = ?\" />\r\n```\r\nHere is the excpetion,\r\n```\r\norg.h2.jdbc.JdbcSQLException: Column \"t_order.order_id\" not found; SQL statement:\r\nSELECT t_order_item_0.* FROM t_order_0 JOIN t_order_item_0 ON t_order.order_id = t_order_item.order_id WHERE t_order_0.order_id = 1000 [42122-196]\r\n```", "url": "https://github.com/apache/shardingsphere/issues/4397", "user": "tristaZero", "labels": ["SQL parse", "bug"], "created": "2020-02-21 06:57:18", "closed": "2020-02-21 11:44:36", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Dulplicated table token", "body": "Table segment is handled twice by rewriter, so dulplicated table token come out.", "url": "https://github.com/apache/shardingsphere/issues/4394", "user": "tristaZero", "labels": ["SQL parse", "bug"], "created": "2020-02-21 06:42:32", "closed": "2020-02-21 07:28:36", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fix bug and keep consist with old parser engine and new parser engine", "body": "- [x] can skip multiple for insert\r\n- [x] lock supported\r\n- [x] table segment visitor from projections\r\n- [x] table segment visitor from where predicate\r\n- [x] Join table SQL can not be rewritten correctly\r\n- [x] Move table segment handling from parser to token generator\r\n", "url": "https://github.com/apache/shardingsphere/issues/4390", "user": "terrymanu", "labels": ["SQL parse", "bug"], "created": "2020-02-20 13:57:59", "closed": "2020-02-23 07:48:42", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Bad parsing for column name", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nWhen update one record with 4.0.0-RC1\uff0cI can update successfully.\r\n\r\n### Actual behavior\r\nWhen upgrade 4.0.0 (same as 4.0.0-RC3), I got error.\r\n\r\n> The error occurred while setting parameters\r\n   SQL: UPDATE xr_menu  SET parent_id=?, category=?, name=?, path=?, component=?, icon=?, sort=?, hidden=?, always_show=?, breadcrumb=?, no_cache=?, affix=?, remark=?, created_time=?, modified_time=?, version=?  WHERE id=?   AND version=?  AND deleted=0\r\n   Cause: java.lang.IllegalStateException\r\n\tat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.3.jar:3.5.3]\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:199) ~[mybatis-3.5.3.jar:3.5.3]\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor409.invoke(Unknown Source) ~[na:na]\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005) ~[na:na]\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.3.jar:2.0.3]\r\n\t... 138 common frames omitted\r\nCaused by: java.lang.IllegalStateException: null\r\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:429) ~[guava-20.0.jar:na]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.util.ExtractorUtils.getFirstChildNode(ExtractorUtils.java:48) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.impl.common.column.ColumnExtractor.getColumnSegment(ColumnExtractor.java:45) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.impl.common.column.ColumnExtractor.extract(ColumnExtractor.java:41) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.impl.common.column.ColumnsExtractor.extract(ColumnsExtractor.java:44) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:52) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.sql.parser.core.SQLParseKernel.parse(SQLParseKernel.java:59) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.sql.parser.SQLParseEngine.parse0(SQLParseEngine.java:70) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.sql.parser.SQLParseEngine.parse(SQLParseEngine.java:52) ~[shardingsphere-sql-parser-engine-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.parse(ShardingRouter.java:86) ~[sharding-core-route-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:61) ~[sharding-core-route-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:59) ~[sharding-core-entry-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:85) ~[sharding-core-entry-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:68) ~[sharding-core-entry-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:249) ~[sharding-jdbc-core-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:190) ~[sharding-jdbc-core-4.0.0.jar:4.0.0]\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.3.jar:3.5.3]\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.3.jar:3.5.3]\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor431.invoke(Unknown Source) ~[na:na]\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005) ~[na:na]\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63) ~[mybatis-3.5.3.jar:3.5.3]\r\n\tat com.sun.proxy.$Proxy191.update(Unknown Source) ~[na:na]\r\n\tat com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doUpdate(MybatisSimpleExecutor.java:54) ~[mybatis-plus-core-3.3.0.jar:3.3.0]\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.3.jar:3.5.3]\r\n\tat com.baomidou.mybatisplus.core.executor.MybatisCachingExecutor.update(MybatisCachingExecutor.java:83) ~[mybatis-plus-core-3.3.0.jar:3.3.0]\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor430.invoke(Unknown Source) ~[na:na]\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:45005) ~[na:na]\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\r\n\tat org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49) ~[mybatis-3.5.3.jar:3.5.3]\r\n\tat com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor.intercept(OptimisticLockerInterceptor.java:150) ~[mybatis-plus-extension-3.3.0.jar:3.3.0]\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.5.3.jar:3.5.3]\r\n\tat com.sun.proxy.$Proxy190.update(Unknown Source) ~[na:na]\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.3.jar:3.5.3]\r\n\t... 142 common frames omitted\r\n\r\n### Reason analyze (If you can)\r\nI simplely debug in \r\nhttps://github.com/apache/incubator-shardingsphere/blob/f81f4f03b1dd4b426adf1f29ffe93f9540ce6fc9/sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java#L178\r\nI found sqlRouteResult lost sql parameter.\r\nI try to insert record, it still lost all parameter.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n>shardingRule:\r\n  tables:\r\n    cgl_monitor:\r\n      actualDataNodes: ds0.cgl_monitor$->{0..6}\r\n      tableStrategy:\r\n        inline:\r\n          shardingColumn: id\r\n          algorithmExpression: cgl_monitor$->{id % 7}\r\n\r\n>UPDATE xr_menu  SET parent_id=?, category=?, name=?, path=?, component=?, icon=?, sort=?, hidden=?, always_show=?, breadcrumb=?, no_cache=?, affix=?, remark=?, created_time=?, modified_time=?, version=?  WHERE id=?   AND version=?  AND deleted=0\r\n\r\nsharding rule configuration is simplified\uff0cbecause the table (xr_menu) is no need sharding\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/4371", "user": "techzhou", "labels": ["SQL parse", "bug"], "created": "2020-02-19 10:57:29", "closed": "2020-02-27 03:10:13", "commits": {"98328881af6f5b800bd26da0b1c81b736f0d6044": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "98328881af6f5b800bd26da0b1c81b736f0d6044", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["7d97737d59c9b953d10e5d99a7c2f99c0d0c4342"], "nameRev": "98328881af6f5b800bd26da0b1c81b736f0d6044 tags/shardingsphere-ui-4.1.0~298", "commitMessage": "add 'component' to unreservedWord for #4371 (#4490)\n\n", "commitDateTime": "2020-02-27 11:10:12", "authoredDateTime": "2020-02-27 11:10:12", "commitGitStats": [{"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Bugfix for new Visitor parser", "body": "- [x] Add judgement for sub query used at select items.\r\n- [x] Return corrent Segment for boolean value.", "url": "https://github.com/apache/shardingsphere/issues/4363", "user": "tristaZero", "labels": ["SQL parse", "bug"], "created": "2020-02-19 05:17:56", "closed": "2020-02-19 07:43:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ShardingProxy can't get columnMetadata for PostgreSQL", "body": "## Bug Report\r\n\r\nSimilar problem with #4182 .\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0 and 5.0.0-RC1-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\n\r\ngetColumns interface get right columnMetadata.\r\n\r\n### Actual behavior\r\n\r\n#### For 4.0.0 version\r\n\r\nThrow exception:\r\n```\r\nline 1:167 no viable alternative at input '(SELECTn.nspname,c.relname,a.attname,a.atttypid,a.attnotnullOR(t.typtype='d'ANDt.typnotnull)ASattnotnull,a.atttypmod,a.attlen,row_number()OVER('\r\n[ERROR] 16:59:15.575 [pool-4-thread-1] o.a.s.s.f.c.CommandExecutorTask - Exception occur: \r\njava.lang.UnsupportedOperationException: Cannot support multiple schemas in one SQL\r\n\tat org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext.setSchema(TablesContext.java:75)\r\n\tat org.apache.shardingsphere.sql.parser.relation.segment.table.TablesContext.<init>(TablesContext.java:63)\r\n\tat org.apache.shardingsphere.sql.parser.relation.statement.impl.CommonSQLStatementContext.<init>(CommonSQLStatementContext.java:41)\r\n\tat org.apache.shardingsphere.sql.parser.relation.statement.impl.SelectSQLStatementContext.<init>(SelectSQLStatementContext.java:79)\r\n\tat org.apache.shardingsphere.sql.parser.relation.SQLStatementContextFactory.newInstance(SQLStatementContextFactory.java:54)\r\n\tat org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.route(ShardingRouter.java:103)\r\n\tat org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:63)\r\n\tat org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:59)\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:85)\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:68)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.PreparedStatementExecutorWrapper.doShardingRoute(PreparedStatementExecutorWrapper.java:83)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.PreparedStatementExecutorWrapper.route(PreparedStatementExecutorWrapper.java:69)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:83)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.binary.bind.PostgreSQLComBindExecutor.execute(PostgreSQLComBindExecutor.java:81)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:92)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:72)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\nsql.show don't print.\r\n\r\n#### For 5.0.0-RC1-SNAPSHOT\r\n\r\ncan't return right result.\r\n\r\nsql.show is \r\n```\r\nline 1:167 missing ')' at '('\r\nline 1:178 mismatched input 'BY' expecting {')', ','}\r\n[INFO ] 16:54:30.806 [pool-4-thread-1] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 16:54:30.806 [pool-4-thread-1] ShardingSphere-SQL - Logic SQL: SELECT * FROM (SELECT n.nspname,c.relname,a.attname,a.atttypid,a.attnotnull OR (t.typtype = 'd' AND t.typnotnull) AS attnotnull,a.atttypmod,a.attlen,row_number() OVER (PARTITION BY a.attrelid ORDER BY a.attnum) AS attnum, null as attidentity,pg_catalog.pg_get_expr(def.adbin, def.adrelid) AS adsrc,dsc.description,t.typbasetype,t.typtype  FROM pg_catalog.pg_namespace n  JOIN pg_catalog.pg_class c ON (c.relnamespace = n.oid)  JOIN pg_catalog.pg_attribute a ON (a.attrelid=c.oid)  JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid)  LEFT JOIN pg_catalog.pg_attrdef def ON (a.attrelid=def.adrelid AND a.attnum = def.adnum)  LEFT JOIN pg_catalog.pg_description dsc ON (c.oid=dsc.objoid AND a.attnum = dsc.objsubid)  LEFT JOIN pg_catalog.pg_class dc ON (dc.oid=dsc.classoid AND dc.relname='pg_class')  LEFT JOIN pg_catalog.pg_namespace dn ON (dc.relnamespace=dn.oid AND dn.nspname='pg_catalog')  WHERE c.relkind in ('r','p','v','f','m') and a.attnum > 0 AND NOT a.attisdropped  AND c.relname LIKE E't_order') c WHERE true  AND attname LIKE E'%' ORDER BY nspname,c.relname,attnum \r\n[INFO ] 16:54:30.806 [pool-4-thread-1] ShardingSphere-SQL - SQLStatement: SelectSQLStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@5c510d54, tablesContext=TablesContext(tables=[], schema=Optional.absent())), projectionsContext=ProjectionsContext(startIndex=7, stopIndex=7, distinctRow=false, projections=[ShorthandProjection(owner=Optional.absent())], columnLabels=[]), groupByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext@72dd9bf7, orderByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.OrderByContext@7747736b, paginationContext=org.apache.shardingsphere.sql.parser.relation.segment.select.pagination.PaginationContext@6a8c3439, containsSubquery=false)\r\n[INFO ] 16:54:30.806 [pool-4-thread-1] ShardingSphere-SQL - Actual SQL: ds_0 ::: SELECT * FROM (SELECT n.nspname,c.relname,a.attname,a.atttypid,a.attnotnull OR (t.typtype = 'd' AND t.typnotnull) AS attnotnull,a.atttypmod,a.attlen,row_number() OVER (PARTITION BY a.attrelid ORDER BY a.attnum) AS attnum, null as attidentity,pg_catalog.pg_get_expr(def.adbin, def.adrelid) AS adsrc,dsc.description,t.typbasetype,t.typtype  FROM pg_catalog.pg_namespace n  JOIN pg_catalog.pg_class c ON (c.relnamespace = n.oid)  JOIN pg_catalog.pg_attribute a ON (a.attrelid=c.oid)  JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid)  LEFT JOIN pg_catalog.pg_attrdef def ON (a.attrelid=def.adrelid AND a.attnum = def.adnum)  LEFT JOIN pg_catalog.pg_description dsc ON (c.oid=dsc.objoid AND a.attnum = dsc.objsubid)  LEFT JOIN pg_catalog.pg_class dc ON (dc.oid=dsc.classoid AND dc.relname='pg_class')  LEFT JOIN pg_catalog.pg_namespace dn ON (dc.relnamespace=dn.oid AND dn.nspname='pg_catalog')  WHERE c.relkind in ('r','p','v','f','m') and a.attnum > 0 AND NOT a.attisdropped  AND c.relname LIKE E't_order') c WHERE true  AND attname LIKE E'%' ORDER BY nspname,c.relname,attnum \r\n\r\n```\r\n\r\n### Reason analyze (If you can)\r\n\r\nIt seems that `getColumns` will be translate to SQL \r\n```sql\r\nSELECT * FROM (SELECT n.nspname,c.relname,a.attname,a.atttypid,a.attnotnull OR (t.typtype = 'd' AND t.typnotnull) AS attnotnull,a.atttypmod,a.attlen,row_number() OVER (PARTITION BY a.attrelid ORDER BY a.attnum) AS attnum, null as attidentity,pg_catalog.pg_get_expr(def.adbin, def.adrelid) AS adsrc,dsc.description,t.typbasetype,t.typtype  FROM pg_catalog.pg_namespace n  JOIN pg_catalog.pg_class c ON (c.relnamespace = n.oid)  JOIN pg_catalog.pg_attribute a ON (a.attrelid=c.oid)  JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid)  LEFT JOIN pg_catalog.pg_attrdef def ON (a.attrelid=def.adrelid AND a.attnum = def.adnum)  LEFT JOIN pg_catalog.pg_description dsc ON (c.oid=dsc.objoid AND a.attnum = dsc.objsubid)  LEFT JOIN pg_catalog.pg_class dc ON (dc.oid=dsc.classoid AND dc.relname='pg_class')  LEFT JOIN pg_catalog.pg_namespace dn ON (dc.relnamespace=dn.oid AND dn.nspname='pg_catalog')  WHERE c.relkind in ('r','p','v','f','m') and a.attnum > 0 AND NOT a.attisdropped  AND c.relname LIKE E't_order') c WHERE true  AND attname LIKE E'%' ORDER BY nspname,c.relname,attnum \r\n```\r\n\r\nbut ShardingSphere can't support this SQL.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nconfiguration:\r\n```yaml\r\nschemaName: sharding_db\r\n\r\ndataSources:\r\n  ds_0:\r\n    url: jdbc:postgresql://127.0.0.1:5432/demo_ds_0?serverTimezone=UTC&useSSL=false\r\n    username: root\r\n    password: 1\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 50\r\n  ds_1:\r\n    url: jdbc:postgresql://127.0.0.1:5432/demo_ds_1?serverTimezone=UTC&useSSL=false\r\n    username: root\r\n    password: 1\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 50\r\n\r\nshardingRule:\r\n  tables:\r\n    t_order:\r\n      actualDataNodes: ds_${0..1}.t_order_${0..1}\r\n      tableStrategy:\r\n        inline:\r\n          shardingColumn: order_id\r\n          algorithmExpression: t_order_${order_id % 2}\r\n      keyGenerator:\r\n        type: SNOWFLAKE\r\n        column: order_id\r\n    t_order_item:\r\n      actualDataNodes: ds_${0..1}.t_order_item_${0..1}\r\n      tableStrategy:\r\n        inline:\r\n          shardingColumn: order_id\r\n          algorithmExpression: t_order_item_${order_id % 2}\r\n      keyGenerator:\r\n        type: SNOWFLAKE\r\n        column: order_item_id\r\n  bindingTables:\r\n    - t_order,t_order_item\r\n  defaultDatabaseStrategy:\r\n    inline:\r\n      shardingColumn: user_id\r\n      algorithmExpression: ds_${user_id % 2}\r\n  defaultTableStrategy:\r\n    none:\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\n```java\r\ntry (Connection connection = DriverManager.getConnection(\"jdbc:postgresql://localhost:3307/sharding_db\", \"root\", \"root\"){\r\n    DatabaseMetaData metaData = connection.getMetaData();\r\n    ResultSet rs = metaData.getColumns(\"sharding_db\", null, \"t_order\", \"%\");\r\n}\r\n```\r\n", "url": "https://github.com/apache/shardingsphere/issues/4287", "user": "KomachiSion", "labels": ["SQL parse", "bug"], "created": "2020-02-13 09:10:01", "closed": "2020-06-17 08:38:12", "commits": {}, "ttf": 124.00027777777778, "commitsDetails": []}, {"title": "Why the readOnly filed in the ShardingConnection is true.", "body": "## Question\r\nWhen get a shardingConnection , the `readOnly` filed is aways true,however ,the same filed in the pthysical datasource connection is false. Can you explain why in the `AbstractConnectionAdapter` class the readOnly is true\r\n", "url": "https://github.com/apache/shardingsphere/issues/4280", "user": "gxgmy521", "labels": ["bug", "jdbc"], "created": "2020-02-13 05:59:21", "closed": "2020-02-27 10:51:58", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "No available sharding rule configuration in `logic_db` for orchestration.", "body": "## Question\r\n\r\n**I just want to \uff1a**\r\n- sharding database with hit\r\n-  Dynamic configuration\r\nso i use orchestration \r\n```\r\n        <dependency>\r\n            <groupId>org.apache.shardingsphere</groupId>\r\n            <artifactId>sharding-jdbc-orchestration-spring-boot-starter</artifactId>\r\n            <version>4.0.0</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.apache.shardingsphere</groupId>\r\n            <artifactId>sharding-orchestration-reg-zookeeper-curator</artifactId>\r\n            <version>4.0.0</version>\r\n        </dependency>\r\n```\r\n```\r\nspring.shardingsphere.datasource.names=db0,db1,db2\r\n\r\nspring.shardingsphere.datasource.db0.driver-class-name=com.mysql.jdbc.Driver\r\nspring.shardingsphere.datasource.db0.url=jdbc:mysql://127.0.0.1:3306/db0?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\nspring.shardingsphere.datasource.db0.username=root\r\nspring.shardingsphere.datasource.db0.password=root\r\nspring.shardingsphere.datasource.db0.type=com.alibaba.druid.pool.DruidDataSource\r\n\r\nspring.shardingsphere.datasource.db1.driver-class-name=com.mysql.jdbc.Driver\r\nspring.shardingsphere.datasource.db1.url=jdbc:mysql://127.0.0.1:3306/db1?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\nspring.shardingsphere.datasource.db1.username=root\r\nspring.shardingsphere.datasource.db1.password=root\r\nspring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource\r\n\r\nspring.shardingsphere.datasource.db2.driver-class-name=com.mysql.jdbc.Driver\r\nspring.shardingsphere.datasource.db2.url=jdbc:mysql://127.0.0.1:3306/db2?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\nspring.shardingsphere.datasource.db2.username=root\r\nspring.shardingsphere.datasource.db2.password=root\r\nspring.shardingsphere.datasource.db2.type=com.alibaba.druid.pool.DruidDataSource\r\n\r\n# \u6570\u636e\u5e93\u7684hit \u7b56\u7565\r\nspring.shardingsphere.sharding.default-database-strategy.hint.algorithm-class-name=com.springboot.config.DbAlgorithm\r\n\r\nspring.shardingsphere.props.sql.show=true\r\nspring.shardingsphere.orchestration.name=sharding4\r\nspring.shardingsphere.orchestration.overwrite=true\r\nspring.shardingsphere.orchestration.registry.type=zookeeper\r\nspring.shardingsphere.orchestration.registry.server-lists=localhost:2181\r\nspring.shardingsphere.orchestration.registry.namespace=sharding-jdbc-user\r\n```\r\nThese configurations take effect locally, but when I configure to the configuration center, the program starts incorrectly\uff1a\r\n```\r\nCaused by: java.lang.IllegalStateException: No available sharding rule configuration in `logic_db` for orchestration.\r\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:197) ~[guava-18.0.jar:na]\r\n\tat org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.persistShardingRuleConfiguration(ConfigurationService.java:133) ~[sharding-orchestration-core-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.persistRuleConfiguration(ConfigurationService.java:113) ~[sharding-orchestration-core-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.persistConfiguration(ConfigurationService.java:79) ~[sharding-orchestration-core-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.orchestration.internal.registry.ShardingOrchestrationFacade.init(ShardingOrchestrationFacade.java:77) ~[sharding-orchestration-core-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.shardingjdbc.orchestration.internal.datasource.AbstractOrchestrationDataSource.initShardingOrchestrationFacade(AbstractOrchestrationDataSource.java:114) ~[sharding-jdbc-orchestration-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.shardingjdbc.orchestration.internal.datasource.OrchestrationShardingDataSource.<init>(OrchestrationShardingDataSource.java:73) ~[sharding-jdbc-orchestration-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration.shardingDataSourceByLocal(OrchestrationSpringBootConfiguration.java:130) ~[sharding-jdbc-orchestration-spring-boot-starter-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration$$EnhancerBySpringCGLIB$$f0ac3f5a.CGLIB$shardingDataSourceByLocal$2(<generated>) ~[sharding-jdbc-orchestration-spring-boot-starter-4.0.0.jar:4.0.0]\r\n\tat org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration$$EnhancerBySpringCGLIB$$f0ac3f5a$$FastClassBySpringCGLIB$$48fdf05e.invoke(<generated>) ~[sharding-jdbc-orchestration-spring-boot-starter-4.0.0.jar:4.0.0]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) ~[spring-core-5.0.11.RELEASE.jar:5.0.11.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:365) ~[spring-context-5.0.11.RELEASE.jar:5.0.11.RELEASE]\r\n\tat org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration$$EnhancerBySpringCGLIB$$f0ac3f5a.shardingDataSourceByLocal(<generated>) ~[sharding-jdbc-orchestration-spring-boot-starter-4.0.0.jar:4.0.0]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.0.11.RELEASE.jar:5.0.11.RELEASE]\r\n\t... 70 common frames omitted\r\n```\r\nI tried this configuration again, and it was successful\u3002\r\n```\r\n# \u6570\u636e\u5e93\r\nspring.shardingsphere.datasource.names=db0,db1\r\n\r\n# \u5bf9\u4e8e\u672a\u914d\u7f6e\u5206\u7247\u89c4\u5219\u7684\u8868\u9ed8\u8ba4\u7684\u6570\u636e\u5e93\r\nspring.shardingsphere.sharding.default-data-source-name=db0\r\n\r\n# \u6570\u636e\u6e90\u914d\u7f6e\r\nspring.shardingsphere.datasource.db0.type=com.alibaba.druid.pool.DruidDataSource\r\nspring.shardingsphere.datasource.db0.driver-class-name=com.mysql.jdbc.Driver\r\nspring.shardingsphere.datasource.db0.url=jdbc:mysql://127.0.0.1:3306/db0?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\nspring.shardingsphere.datasource.db0.username=root\r\nspring.shardingsphere.datasource.db0.password=root\r\n\r\nspring.shardingsphere.datasource.db1.type=com.alibaba.druid.pool.DruidDataSource\r\nspring.shardingsphere.datasource.db1.driver-class-name=com.mysql.jdbc.Driver\r\nspring.shardingsphere.datasource.db1.url=jdbc:mysql://127.0.0.1:3306/db1?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai\r\nspring.shardingsphere.datasource.db1.username=root\r\nspring.shardingsphere.datasource.db1.password=root\r\n\r\n# \u5206\u8868\u7b56\u7565\r\nspring.shardingsphere.sharding.tables.goods.actual-data-nodes=db$->{0..1}.goods_$->{0..1}\r\nspring.shardingsphere.sharding.tables.goods.table-strategy.inline.sharding-column=id\r\nspring.shardingsphere.sharding.tables.goods.table-strategy.inline.algorithm-expression=goods_$->{id % 2}\r\n# \u5206\u5e93\u7b56\u7565\r\nspring.shardingsphere.sharding.default-database-strategy.hint.algorithm-class-name=com.springboot.config.DbAlgorithm\r\n\r\nspring.shardingsphere.props.sql.show=true\r\nspring.shardingsphere.orchestration.name=sharding\r\nspring.shardingsphere.orchestration.overwrite=true\r\nspring.shardingsphere.orchestration.registry.type=zookeeper\r\nspring.shardingsphere.orchestration.registry.server-lists=localhost:2181\r\nspring.shardingsphere.orchestration.registry.namespace=sharding-jdbc-user\r\n```\r\nThe difference between the above two configurations is that the second configuration adds the table sharding strategy\r\n\r\nAnyone can tell me what to do\uff01\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/4276", "user": "TongRuii", "labels": ["bug", "orchestration"], "created": "2020-02-13 02:33:37", "closed": "2020-02-19 23:39:55", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "CuratorZookeeperInstance can't read server.yaml orchestration props config. ", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC & Sharding-Proxy\r\n### Expected behavior\r\ncan read props config and make the props effectively.\r\n### Actual behavior\r\ncan't read props config.\r\n### Reason analyze (If you can)\r\nJDK Properties#getProperty method can't read other type data without String.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/4270", "user": "dongzl", "labels": ["bug", "orchestration"], "created": "2020-02-12 12:58:55", "closed": "2020-02-16 05:39:22", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "use CAPI in stmt mode ,mysql_stmt_prepare and mysql_stmt_execute return incorrect response", "body": "## Bug Report\r\n### Which version of ShardingSphere did you use?\r\n4.0.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\napache-shardingsphere-incubating-4.0.0-sharding-proxy-bin\r\n\r\n### Expected behavior\r\n### Actual behavior\r\n\r\ntwo questions :\r\n\r\nQuestion 1:\r\nuse CAPI in stmt mode, mysql_stmt_prepare get incorrect response according to mysql protocol, packages of column definition information is lost \r\n\r\nQuestion 2:\r\nAlso use CAPI in stmt mode, mysql_stmt_bind_result return error, msg is \"Using unsupported buffer type: 15  (parameter: 1)\"\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nsharding rule configuration:\r\n```\r\nschemaName: sbtest\r\n#\r\ndataSources:\r\n  ds_0:\r\n    url: jdbc:mysql://127.0.0.1:8905/sbtest?serverTimezone=UTC&useSSL=false\r\n    username: test\r\n    password: test\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 50\r\n  ds_1:\r\n    url: jdbc:mysql://127.0.0.1:8906/sbtest?serverTimezone=UTC&useSSL=false\r\n    username: test\r\n    password: test\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 50\r\n\tshardingRule:\r\n  tables:\r\n    sbtest1:\r\n      actualDataNodes: ds_${0..1}.customer\r\n      keyGenerator:\r\n        type: SNOWFLAKE\r\n        column: id\r\n    sbtest2:\r\n      actualDataNodes: ds_${0..1}.order_line\r\n      keyGenerator:\r\n        type: SNOWFLAKE\r\n        column: id\r\n  bindingTables:\r\n    - sbtest1,sbtest2\r\n  defaultDatabaseStrategy:\r\n    inline:\r\n      shardingColumn: id\r\n      algorithmExpression: ds_${id % 2}\r\n  defaultTableStrategy:\r\n    none:\r\n```\r\n\r\ncreate table: \r\n\r\n```\r\nCREATE TABLE `customer` (\r\n  `aid` bigint(20) unsigned NOT NULL AUTO_INCREMENT,\r\n  `c_id` int(11) NOT NULL,\r\n  `c_d_id` tinyint(4) NOT NULL,\r\n  `c_w_id` smallint(6) NOT NULL,\r\n  `c_first` varchar(16) NOT NULL,\r\n  `c_middle` char(2) NOT NULL,\r\n  `c_last` varchar(16) NOT NULL,\r\n  `c_street_1` varchar(20) NOT NULL,\r\n  `c_street_2` varchar(20) NOT NULL,\r\n  `c_city` varchar(20) NOT NULL,\r\n  `c_state` char(2) NOT NULL,\r\n  `c_zip` char(9) NOT NULL,\r\n  `c_phone` char(16) NOT NULL,\r\n  `c_since` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\r\n  `c_credit` char(2) NOT NULL,\r\n  `c_credit_lim` bigint(20) NOT NULL,\r\n  `c_discount` decimal(4,2) NOT NULL,\r\n  `c_balance` decimal(12,2) NOT NULL,\r\n  `c_ytd_payment` decimal(12,2) NOT NULL,\r\n  `c_payment_cnt` smallint(6) NOT NULL,\r\n  `c_delivery_cnt` smallint(6) NOT NULL,\r\n  `c_data` text NOT NULL,\r\n  PRIMARY KEY (`aid`),\r\n  UNIQUE KEY `c_w_id` (`c_w_id`,`c_d_id`,`c_id`),\r\n  KEY `idx_customer` (`c_w_id`,`c_d_id`,`c_last`,`c_first`)\r\n) ENGINE=InnoDB AUTO_INCREMENT=432069856137838593 DEFAULT CHARSET=utf8mb4\r\n```\r\n\r\nexecute sql:\r\n\r\n```\r\nSELECT c_last  FROM customer WHERE c_w_id = ?;\r\n```\r\n\r\nPseudocode:\r\n\r\n```\r\n#define SELECT_QUERY \"SELECT c_last  FROM customer WHERE c_w_id = ?\"\r\nstmt = mysql_stmt_init(mysql);\r\nmysql_stmt_prepare(stmt, SELECT_QUERY, strlen(SELECT_QUERY)); // questions 1\r\nmysql_stmt_bind_param(stmt, param);\r\nmysql_stmt_execute(stmt);\r\ncolumn.buffer_type = MYSQL_TYPE_STRING;\r\ncolumn.buffer = c_last;\r\ncolumn.buffer_length = sizeof(c_last);\r\ncolumn.length= &length;\r\ncolumn.error= &error;\r\ncolumn.is_null= &is_null;\r\nmysql_stmt_bind_result(stmt, column);  // question 2: return error \r\n```\r\n\r\n\r\n\r\n### Reason analyze (If you can)\r\n\r\nQuestion 1:\r\n\r\nI use some way to capture packets, here is the response packages return from two sources: connect to sharding proxy and connect to mysql\r\n\r\n\r\nmysql_stmt_prepare response from  sharding proxy:\r\n\r\n```\r\nSource [127.0.0.1:54992] -> Dest [127.0.0.1:5059]:\r\n  [0000]  4b 00 00 00 16 53 45 4c 45 43 54 20 63 5f 6c 61  K....SELECT c_la\r\n  [0016]  73 74 20 20 46 52 4f 4d 20 63 75 73 74 6f 6d 65  st  FROM custome\r\n  [0032]  72 20 57 48 45 52 45 20 63 5f 77 5f 69 64 20 3d  r WHERE c_w_id =\r\n  [0048]  20 3f 20 20 41 4e 44 20 63 5f 64 5f 69 64 20 3d   ?  AND c_d_id =\r\n  [0064]  20 3f 20 41 4e 44 20 63 5f 69 64 20 3d 20 3f      ? AND c_id = ?\r\n\r\n\r\n2020-02-10 10:38:24.386146 - Read >>>\r\nSource [127.0.0.1:54992] <- Dest [127.0.0.1:5059]:\r\n  [0000]  0c 00 00 01 00 34 00 00 00 00 00 03 00 00 00 00  .....4..........\r\n\r\n\r\n2020-02-10 10:38:24.386185 - Read >>>\r\nSource [127.0.0.1:54992] <- Dest [127.0.0.1:5059]:\r\n  [0000]  22 00 00 02 03 64 65 66 04 74 70 63 63 08 63 75  \"....def.tpcc.cu\r\n  [0016]  73 74 6f 6d 65 72 00 00 00 0c 21 00 64 00 00 00  stomer....!.d...\r\n  [0032]  0f 00 00 00 00 00                                ......\r\n\r\n\r\n2020-02-10 10:38:24.386193 - Read >>>\r\nSource [127.0.0.1:54992] <- Dest [127.0.0.1:5059]:\r\n  [0000]  22 00 00 03 03 64 65 66 04 74 70 63 63 08 63 75  \"....def.tpcc.cu\r\n  [0016]  73 74 6f 6d 65 72 00 00 00 0c 21 00 64 00 00 00  stomer....!.d...\r\n  [0032]  0f 00 00 00 00 00                                ......\r\n\r\n\r\n2020-02-10 10:38:24.386201 - Read >>>\r\nSource [127.0.0.1:54992] <- Dest [127.0.0.1:5059]:\r\n  [0000]  22 00 00 04 03 64 65 66 04 74 70 63 63 08 63 75  \"....def.tpcc.cu\r\n  [0016]  73 74 6f 6d 65 72 00 00 00 0c 21 00 64 00 00 00  stomer....!.d...\r\n  [0032]  0f 00 00 00 00 00                                ......\r\n                               \r\n2020-02-10 10:38:24.386207 - Read >>>\r\nSource [127.0.0.1:54992] <- Dest [127.0.0.1:5059]:\r\n  [0000]  05 00 00 05 fe 00 00 02 00                       .........\t\t\t\t\t\t\t   \r\n```\r\n\r\nmysql_stmt_prepare response from  mysql:\r\n\r\n```\r\nSource [127.0.0.1:54992] -> Dest [127.0.0.1:5059]:\r\n  [0000]  4b 00 00 00 16 53 45 4c 45 43 54 20 63 5f 6c 61  K....SELECT c_la\r\n  [0016]  73 74 20 20 46 52 4f 4d 20 63 75 73 74 6f 6d 65  st  FROM custome\r\n  [0032]  72 20 57 48 45 52 45 20 63 5f 77 5f 69 64 20 3d  r WHERE c_w_id =\r\n  [0048]  20 3f 20 20 41 4e 44 20 63 5f 64 5f 69 64 20 3d   ?  AND c_d_id =\r\n  [0064]  20 3f 20 41 4e 44 20 63 5f 69 64 20 3d 20 3f      ? AND c_id = ?\r\n  \r\n2020-02-10 11:11:34.349068 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  0c 00 00 01 00 01 00 00 00 01 00 03 00 00 00 00  ................\r\n\r\n\r\n2020-02-10 11:11:34.349116 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  17 00 00 02 03 64 65 66 00 00 00 01 3f 00 0c 3f  .....def....?..?\r\n  [0016]  00 00 00 00 00 fd 80 00 00 00 00                 ...........\r\n\r\n\r\n2020-02-10 11:11:34.349132 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  17 00 00 03 03 64 65 66 00 00 00 01 3f 00 0c 3f  .....def....?..?\r\n  [0016]  00 00 00 00 00 fd 80 00 00 00 00                 ...........\r\n\r\n\r\n2020-02-10 11:11:34.349147 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  17 00 00 04 03 64 65 66 00 00 00 01 3f 00 0c 3f  .....def....?..?\r\n  [0016]  00 00 00 00 00 fd 80 00 00 00 00                 ...........\r\n\r\n\r\n2020-02-10 11:11:34.349159 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  05 00 00 05 fe 00 00 02 00                       .........\r\n\r\n2020-02-10 11:11:34.349167 - Read >>>**\uff08this piece of packages lost in sharding proxy\uff09**\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  36 00 00 06 03 64 65 66 04 74 70 63 63 08 63 75  6....def.tpcc.cu\r\n  [0016]  73 74 6f 6d 65 72 08 63 75 73 74 6f 6d 65 72 06  stomer.customer.\r\n  [0032]  63 5f 6c 61 73 74 06 63 5f 6c 61 73 74 0c 08 00  c_last.c_last...\r\n  [0048]  10 00 00 00 fd 01 50 00 00 00                    ......P...\r\n\r\n\r\n2020-02-10 11:11:34.349198 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  05 00 00 07 fe 00 00 02 00                       .........\r\n\r\n```\r\n\r\naccording to above packages ,  sharding proxy lost column defination information, just return  param definitions  .\r\n\r\n\r\nQuestion 2:\r\n\r\ncolumn type in response from sharding proxy to mysql_stmt_execute is incorrect, \r\ncolumn 'c_last' is char,it should return `MYSQL_TYPE_VAR_STRING` \uff080xfd\uff09, but returns `MYSQL_TYPE_VARCHAR`(0x0f).\r\ncolumn type will stored in struct `MYSQL_STMT` (fields.type) ,then call mysql_stmt_bind_result will get error ,because MYSQL_TYPE_VARCHAR is not allowed to bind result.\r\n\r\nthe same to column type varchar.\r\n\r\ncaptured packages:\r\n\r\nmysql_stmt_execute response from sharding proxy:\r\n\r\n```\r\n2020-02-10 10:38:24.393292 - Read >>>\r\nSource [127.0.0.1:54992] <- Dest [127.0.0.1:5059]:\r\n  [0000]  01 00 00 01 01                                   .....\r\n\r\n\r\n2020-02-10 10:38:24.393333 - Read >>>\r\nSource [127.0.0.1:54992] <- Dest [127.0.0.1:5059]:\r\n  [0000]  36 00 00 02 03 64 65 66 04 74 70 63 63 08 63 75  6....def.tpcc.cu\r\n  [0016]  73 74 6f 6d 65 72 08 63 75 73 74 6f 6d 65 72 06  stomer.customer.\r\n  [0032]  63 5f 6c 61 73 74 06 63 5f 6c 61 73 74 0c 21 00  c_last.c_last.!.\r\n  [0048]  10 00 00 00  **{0f: this byte is column type}** 00  00 00 00 00                    ..........\r\n\r\n\r\n2020-02-10 10:38:24.393344 - Read >>>\r\nSource [127.0.0.1:54992] <- Dest [127.0.0.1:5059]:\r\n  [0000]  05 00 00 03 fe 00 00 02 00                       .........\r\n\r\n\r\n2020-02-10 10:38:24.393349 - Read >>>\r\nSource [127.0.0.1:54992] <- Dest [127.0.0.1:5059]:\r\n  [0000]  0c 00 00 04 00 00 09 42 41 52 42 41 52 42 41 52  .......BARBARBAR\r\n\r\n\r\n2020-02-10 10:38:24.393353 - Read >>>\r\nSource [127.0.0.1:54992] <- Dest [127.0.0.1:5059]:\r\n  [0000]  05 00 00 05 fe 00 00 02 00                       .........\r\n\r\n```\r\n\r\nmysql_stmt_execute response from mysql:\r\n\r\n```\r\n2020-02-10 11:11:34.351845 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  01 00 00 01 01                                   .....\r\n\r\n\r\n2020-02-10 11:11:34.351876 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  36 00 00 02 03 64 65 66 04 74 70 63 63 08 63 75  6....def.tpcc.cu\r\n  [0016]  73 74 6f 6d 65 72 08 63 75 73 74 6f 6d 65 72 06  stomer.customer.\r\n  [0032]  63 5f 6c 61 73 74 06 63 5f 6c 61 73 74 0c 08 00  c_last.c_last...\r\n  [0048]  10 00 00 00 **{fd : this byte is column type}** 01 50 00 00 00                    ......P...\r\n\r\n\r\n2020-02-10 11:11:34.351890 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  05 00 00 03 fe 00 00 02 00                       .........\r\n\r\n\r\n2020-02-10 11:11:34.351896 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  0c 00 00 04 00 00 09 42 41 52 42 41 52 42 41 52  .......BARBARBAR\r\n\r\n\r\n2020-02-10 11:11:34.351901 - Read >>>\r\nSource [127.0.0.1:36438] <- Dest [127.0.0.1:8901]:\r\n  [0000]  05 00 00 05 fe 00 00 02 00                       .........\r\n```\r\n\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/4255", "user": "Arnow", "labels": ["bug", "proxy"], "created": "2020-02-12 05:26:15", "closed": "2020-02-18 15:09:55", "commits": {"00f0db675f0f0ec0e622304b99a6d889446fd6c3": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "12c47db65c6d2afd03dbbe7ba785be9120503efd": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "00f0db675f0f0ec0e622304b99a6d889446fd6c3", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["c50328b4fec5f7937b8a257d297f6d988df314cc"], "nameRev": "00f0db675f0f0ec0e622304b99a6d889446fd6c3 tags/shardingsphere-ui-4.1.0~359", "commitMessage": "#4255, use CAPI in stmt mode return incorrect response (#4353)\n\n* #4255, use CAPI in stmt mode ,mysql_stmt_prepare and mysql_stmt_execute return incorrect response\r\n\r\n* #4255, refine\r\n\r\n* #4255, for checkstyle\r\n\r\n* #4255, add reference #4355 for Column Types\r\n\r\n* #4255, add reference #4358 for Parameter Types\r\n\r\n* #4255, for comments\r\n\r\n", "commitDateTime": "2020-02-18 23:09:54", "authoredDateTime": "2020-02-18 23:09:54", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareExecutor.java", "insertions": 1, "deletions": 7, "lines": 8}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/constant/MySQLColumnType.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/MySQLColumnDefinition41Packet.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/constant/MySQLColumnTypeTest.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLComStmtPrepareExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.prepare.MySQLComStmtPrepareExecutor.execute()", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.prepare.MySQLComStmtPrepareExecutor", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "MySQLColumnType.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.constant.MySQLColumnType", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLColumnDefinition41Packet.java", "spoonMethods": []}, {"spoonFilePath": "MySQLColumnTypeTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.constant.MySQLColumnTypeTest.assertValueOfJDBC()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "12c47db65c6d2afd03dbbe7ba785be9120503efd", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["94ab8bd183ca7c685ead26f0161b72fc9aa44032"], "nameRev": "12c47db65c6d2afd03dbbe7ba785be9120503efd tags/shardingsphere-ui-4.1.0~313", "commitMessage": "#4255, column definition information for mysql_stmt_prepare (#4444)\n\n* #4255, column definition information for mysql_stmt_prepare\r\n\r\n* #4255, for comments\r\n\r\n", "commitDateTime": "2020-02-24 22:24:03", "authoredDateTime": "2020-02-24 22:24:03", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareExecutor.java", "insertions": 16, "deletions": 11, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLComStmtPrepareExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.prepare.MySQLComStmtPrepareExecutor.execute()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.prepare.MySQLComStmtPrepareExecutor.getNumColumns()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.prepare.MySQLComStmtPrepareExecutor.getColumnsCount(org.apache.shardingsphere.sql.parser.sql.statement.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Has error when use orchestration and mybatis-plus with springboot", "body": "## Bug Report\r\nProject: Shading-JDBC\r\nVerson:4.0.0\r\n\r\nI works well on local sharding config with mybatis-plus, and I think it will works well too on orchestration config with registry, but it won't. The error message is \"Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.\"\r\n\r\nThe springboot version is 2.2.4 and I use mybatis-plus and sharding-jdbc-orchestration-spring-boot-starter\r\n\r\n        <dependency>\r\n            <groupId>com.baomidou</groupId>\r\n            <artifactId>mybatis-plus-boot-starter</artifactId>\r\n            <version>3.3.1</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.shardingsphere</groupId>\r\n            <artifactId>sharding-transaction-xa-core</artifactId>\r\n            <version>4.0.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.shardingsphere</groupId>\r\n            <artifactId>sharding-jdbc-orchestration-spring-boot-starter</artifactId>\r\n            <version>4.0.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.shardingsphere</groupId>\r\n            <artifactId>sharding-orchestration-reg-zookeeper-curator</artifactId>\r\n            <version>4.0.0</version>\r\n        </dependency>\r\n\r\nI have read the source code and compared org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.java(works well) with org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration.java (can not work, throws error when startup project)\r\n\r\nI found @AutoConfigureBefore(DataSourceAutoConfiguration.class) is missing in  OrchestrationSpringBootConfiguration.java, I think this is the real reason, I try to add @AutoConfigureBefore in OrchestrationSpringBootConfiguration.java and repackage and replace the local sharding-jdbc-orchestration-spring-boot-starter.jar with the jar I modified, then the error \r\nhas gone.\r\nBecause mybatis-plus include spring-boot-starter-jdbc.jar, I think its DataSourceAutoConfiguration loads config before  OrchestrationSpringBootConfiguration so the error happened.", "url": "https://github.com/apache/shardingsphere/issues/4230", "user": "yl1935", "labels": ["bug", "spring"], "created": "2020-02-11 02:11:41", "closed": "2020-03-04 16:01:56", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "sharding +encrypt rewrite for SQL `select with `OR` and `AND`` cause StringIndexOutOfBoundsException. ", "body": "### Which version of ShardingSphere did you use?\r\n4.0.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nselect SQL execute successfully.\r\n### Actual behavior\r\n```\r\njava.lang.StringIndexOutOfBoundsException: String index out of range: -3\r\n\r\n\tat java.lang.String.substring(String.java:1955)\r\n\tat org.apache.shardingsphere.underlying.rewrite.sql.impl.AbstractSQLBuilder.getConjunctionText(AbstractSQLBuilder.java:58)\r\n\tat org.apache.shardingsphere.underlying.rewrite.sql.impl.AbstractSQLBuilder.toSQL(AbstractSQLBuilder.java:50)\r\n\tat org.apache.shardingsphere.underlying.rewrite.engine.impl.DefaultSQLRewriteEngine.rewrite(DefaultSQLRewriteEngine.java:34)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.getSQLUnit(EncryptPreparedStatement.java:181)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.executeQuery(EncryptPreparedStatement.java:120)\r\n```\r\n### Reason analyze (If you can)\r\nThe SQL parse result like this :\r\n![image](https://user-images.githubusercontent.com/8772975/73934497-899d0300-4919-11ea-839b-e076ed32c321.png)\r\nIt cause the rewrited SQL tokens are repeated, and the rewrite indexs are error.\r\n![image](https://user-images.githubusercontent.com/8772975/73934533-9c173c80-4919-11ea-962e-6590a318d097.png)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n`SELECT * FROM t_query_encrypt WHERE pwd = ? and (id = ? or id =?)`\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/4188", "user": "xiyelife", "labels": ["bug", "encrypt"], "created": "2020-02-06 11:50:15", "closed": "2020-02-07 13:02:59", "commits": {"8f7187bb5b053da8c92e6724c6c74d3648ddce45": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "8f7187bb5b053da8c92e6724c6c74d3648ddce45", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["5ebee15d426b4598b0b99f3db14d54fc963dffe2"], "nameRev": "8f7187bb5b053da8c92e6724c6c74d3648ddce45 tags/shardingsphere-ui-4.1.0~446", "commitMessage": "Fix bad rewrite Result for or query sql when using encryptRule (#4201)\n\n* fix #4188\r\n\r\n* delete EqualsAndHashCode from sql token\r\n", "commitDateTime": "2020-02-07 21:02:58", "authoredDateTime": "2020-02-07 21:02:58", "commitGitStats": [{"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptPredicateColumnTokenGenerator.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/pojo/EncryptPredicateEqualRightValueToken.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/pojo/EncryptPredicateInRightValueToken.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatementTest.java", "insertions": 17, "deletions": 1, "lines": 18}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying/rewrite/sql/token/pojo/generic/SubstitutableColumnNameToken.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptPredicateColumnTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptPredicateColumnTokenGenerator.generateSQLTokens(org.apache.shardingsphere.sql.parser.relation.statement.SQLStatementContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptPredicateRightValueTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptPredicateRightValueTokenGenerator.generateSQLTokens(java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptPredicateEqualRightValueToken.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateEqualRightValueToken", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptPredicateInRightValueToken.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateInRightValueToken", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptPreparedStatementTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatementTest", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatementTest.assertSelectWithOr()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SubstitutableColumnNameToken.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.sql.token.pojo.generic.SubstitutableColumnNameToken", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Bad SQLRewriteResult when using encryptRule.", "body": "SQL: SELECT * FROM t_query_encrypt WHERE pwd = ? and (id = ? or id =?)\r\nError log:\r\njava.lang.StringIndexOutOfBoundsException: String index out of range: -3\r\n\r\nWhen run the above sql in `EncryptPreparedStatementTest`, you will get this exception.", "url": "https://github.com/apache/shardingsphere/issues/4187", "user": "tristaZero", "labels": ["bug", "encrypt"], "created": "2020-02-06 11:48:12", "closed": "2020-02-07 09:25:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Sharding-proxy 4.0.0 can query columns for table", "body": "## Bug Report\r\n\r\nWhen query columns of sharding table by `getColumns` method of JDBC, sharding-proxy will throw exception:\r\n```\r\nException in thread \"main\" java.sql.SQLException: 2Unknown exception: [Cannot find table rule and default data source with logic table: '%']\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1086)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)\r\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)\r\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)\r\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2828)\r\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2777)\r\n\tat com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1651)\r\n\tat com.mysql.jdbc.DatabaseMetaData$2.forEach(DatabaseMetaData.java:2711)\r\n\tat com.mysql.jdbc.DatabaseMetaData$2.forEach(DatabaseMetaData.java:2598)\r\n\tat com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)\r\n\tat com.mysql.jdbc.DatabaseMetaData.getColumns(DatabaseMetaData.java:2597)\r\n\tat jdbc.JDBCUtil.main(JDBCUtil.java:38)\r\n```\r\n\r\nBut I used sharding-proxy 4.0.0-RC2, It can work well.\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\n\r\nget Column info from Result Set.\r\n\r\n### Actual behavior\r\n\r\nThrow exception.\r\n\r\n### Reason analyze (If you can)\r\n\r\nthe method `getColumn` should map to SQL `SHOW FULL COLUMNS ...`\r\n\r\nSo I think there are some error in `parse` or `extractor`.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n```yaml\r\nschemaName: sharding_db\r\n\r\ndataSources:\r\n ds_0:\r\n   url: jdbc:mysql://127.0.0.1:3306/demo_ds_0?serverTimezone=UTC&useSSL=false\r\n   username: root\r\n   password:\r\n   connectionTimeoutMilliseconds: 30000\r\n   idleTimeoutMilliseconds: 60000\r\n   maxLifetimeMilliseconds: 1800000\r\n   maxPoolSize: 50\r\n ds_1:\r\n   url: jdbc:mysql://127.0.0.1:3306/demo_ds_1?serverTimezone=UTC&useSSL=false\r\n   username: root\r\n   password:\r\n   connectionTimeoutMilliseconds: 30000\r\n   idleTimeoutMilliseconds: 60000\r\n   maxLifetimeMilliseconds: 1800000\r\n   maxPoolSize: 50\r\n\r\nshardingRule:\r\n tables:\r\n   t_order:\r\n     actualDataNodes: ds_${0..1}.t_order_${0..1}\r\n     tableStrategy:\r\n       inline:\r\n         shardingColumn: order_id\r\n         algorithmExpression: t_order_${order_id % 2}\r\n     keyGenerator:\r\n       type: SNOWFLAKE\r\n       column: order_id\r\n   t_order_item:\r\n     actualDataNodes: ds_${0..1}.t_order_item_${0..1}\r\n     tableStrategy:\r\n       inline:\r\n         shardingColumn: order_id\r\n         algorithmExpression: t_order_item_${order_id % 2}\r\n     keyGenerator:\r\n       type: SNOWFLAKE\r\n       column: order_item_id\r\n bindingTables:\r\n   - t_order,t_order_item\r\n defaultDatabaseStrategy:\r\n   inline:\r\n     shardingColumn: user_id\r\n     algorithmExpression: ds_${user_id % 2}\r\n defaultTableStrategy:\r\n   none:\r\n\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\n```java\r\n        Class.forName(\"com.mysql.jdbc.Driver\");\r\n        try (Connection connection = DriverManager.getConnection(\"jdbc:mysql://localhost:3307/sharding_db\", \"root\", \"root\");\r\n            Statement statement = connection.createStatement()) {\r\n            ResultSet rs = metaData.getColumns(\"sharding_db\", null, \"t_order\", \"%\");\r\n       }\r\n```\r\n", "url": "https://github.com/apache/shardingsphere/issues/4182", "user": "KomachiSion", "labels": ["SQL parse", "bug"], "created": "2020-02-06 07:41:14", "closed": "2020-02-07 15:47:33", "commits": {"292994d0dba646ff304cb0c2938729fe47022d7f": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "05ad5da334b47ef2ef3f0a71d63bb37ec583ee48": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "9ad836e235c04c15301b6aecbdbd4a4b1d5fed96": {"commitGHEventType": "referenced", "commitUser": "tuohai666"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "292994d0dba646ff304cb0c2938729fe47022d7f", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["8f7187bb5b053da8c92e6724c6c74d3648ddce45"], "nameRev": "292994d0dba646ff304cb0c2938729fe47022d7f tags/shardingsphere-ui-4.1.0~445", "commitMessage": "#4182, ignore showLike context in show columns (#4204)\n\n* #4182, ignore showLike context in show columns\r\n\r\n* #4182, ignore showLike context in show columns\r\n\r\n* #4182, ignore showLike context in show columns\r\n", "commitDateTime": "2020-02-07 23:47:32", "authoredDateTime": "2020-02-07 23:47:32", "commitGitStats": [{"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/DALStatement.g4", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/MySQLDALVisitor.java", "insertions": 0, "deletions": 5, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLDALVisitor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.visitor.MySQLDALVisitor.visitShowColumns(org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.ShowColumnsContext)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "05ad5da334b47ef2ef3f0a71d63bb37ec583ee48", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9ad836e235c04c15301b6aecbdbd4a4b1d5fed96", "commitGHEventType": "referenced", "commitUser": "tuohai666", "commitParents": ["7065af6ac03aebfdb81150f10dd1c2fc7798cff8"], "nameRev": "9ad836e235c04c15301b6aecbdbd4a4b1d5fed96 tags/4.0.1~10", "commitMessage": "#4182, ignore showLike context in show columns (#4298)\n\n", "commitDateTime": "2020-02-14 11:33:33", "authoredDateTime": "2020-02-14 11:33:33", "commitGitStats": [{"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/DALStatement.g4", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Actual SQL Missing parameters", "body": "## Bug Report\r\nI found a similar problem #3136 \r\nbut this sql still not working:\r\ninsert into t_quiz_order_ref (ORDER_ID, QUESTION_ID, OP_ORDER_ID, START_TIME, EXPIRE_TIME) values (?, ?, ? ,date_add(now(), interval ? second) ,date_add(now(), interval ? second)) \r\n\r\nShardingSphere version: 4.0.0\r\nmy project use: sharding-jdbc-spring-boot-starter\r\n\r\nstack trace log:\r\n2020-01-20 17:12:29.990[]|GEYI.local|debug|http-nio-8888-exec-1|com.airing.dubbo.mapper.QuizMapper.insertOrderRef|==>  Preparing: INSERT INTO t_quiz_order_ref (ORDER_ID, QUESTION_ID, OP_ORDER_ID, START_TIME, EXPIRE_TIME) VALUES (?, ?, ? ,date_add(now(), interval ? second) ,date_add(now(), interval ? second)) \r\n2020-01-20 17:12:30.016[]|GEYI.local|debug|http-nio-8888-exec-1|com.airing.dubbo.mapper.QuizMapper.insertOrderRef|==> Parameters: 61d25387afc34c74a3e4859f4a5cbf19(String), 1(Integer), fc8e54473c4c407fa5e52dec7802ec57(String), 3(Integer), 15(Integer)\r\n2020-01-20 17:12:30.757[]|GEYI.local|info |http-nio-8888-exec-1|ShardingSphere-SQL|Rule Type: sharding\r\n2020-01-20 17:12:30.758[]|GEYI.local|info |http-nio-8888-exec-1|ShardingSphere-SQL|Logic SQL: \r\n```\r\nINSERT INTO t_quiz_order_ref\r\n        (ORDER_ID, QUESTION_ID, OP_ORDER_ID, START_TIME, EXPIRE_TIME)\r\n        VALUES\r\n          \r\n            (?, ?, ?\r\n            ,date_add(now(), interval ? second)\r\n            ,date_add(now(), interval ? second))\r\n```\r\n2020-01-20 17:12:30.758[]|GEYI.local|info |http-nio-8888-exec-1|ShardingSphere-SQL|SQLStatement: InsertSQLStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.core.parse.sql.statement.dml.InsertStatement@6f7ba39b, tablesContext=TablesContext(tables=[Table(name=t_quiz_order_ref, alias=Optional.absent())], schema=Optional.absent())), columnNames=[order_id, question_id, op_order_id, start_time, expire_time], insertValueContexts=[InsertValueContext(parametersCount=3, valueExpressions=[ParameterMarkerExpressionSegment(startIndex=138, stopIndex=138, parameterMarkerIndex=0), ParameterMarkerExpressionSegment(startIndex=141, stopIndex=141, parameterMarkerIndex=1), ParameterMarkerExpressionSegment(startIndex=144, stopIndex=144, parameterMarkerIndex=2), CommonExpressionSegment(startIndex=159, stopIndex=192, text=date_add(now(),interval?second)), CommonExpressionSegment(startIndex=207, stopIndex=240, text=date_add(now(),interval?second))], parameters=[61d25387afc34c74a3e4859f4a5cbf19, 1, fc8e54473c4c407fa5e52dec7802ec57])])\r\n2020-01-20 17:12:30.759[]|GEYI.local|info |http-nio-8888-exec-1|ShardingSphere-SQL|Actual SQL: ds0 :::\r\n```\r\nINSERT INTO t_quiz_order_ref1\r\n        (ORDER_ID, QUESTION_ID, OP_ORDER_ID, START_TIME, EXPIRE_TIME)\r\n        VALUES\r\n          \r\n            (?, ?, ?, date_add(now(),interval?second), date_add(now(),interval?second))\r\n```\r\n::: [61d25387afc34c74a3e4859f4a5cbf19, 1, fc8e54473c4c407fa5e52dec7802ec57]", "url": "https://github.com/apache/shardingsphere/issues/4051", "user": "geyi", "labels": ["SQL parse", "bug"], "created": "2020-01-20 09:39:52", "closed": "2020-01-20 15:09:57", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ConfigurationLogger can't log none sharding strategy", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\nConfigurationLogger log none sharding strategy when it be set.\r\n\r\n### Actual behavior\r\n\r\nConfigurationLogger can't log none sharding strategy correctly.\r\n\r\n### Reason analyze (If you can)\r\n\r\nThere are two reason cause this problem:\r\n1. `ShardingStrategyConfigurationYamlSwapper` do not handle `NoneShardingStrategyConfiguration`\r\n2. `DefaultYamlRepresenter` ignore all null, empty collection and empty map.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\n```java\r\n    private static void printToYaml() {\r\n        YamlShardingRuleConfiguration yamlShardingRuleConfiguration = getYamlShardingRuleConfiguration();\r\n        ConfigurationLogger.log(yamlShardingRuleConfiguration.getClass().getName(), YamlEngine.marshal(yamlShardingRuleConfiguration));\r\n    }\r\n\r\n    private static YamlShardingRuleConfiguration getYamlShardingRuleConfiguration() {\r\n        YamlShardingRuleConfiguration result = new YamlShardingRuleConfiguration();\r\n        YamlTableRuleConfiguration yamlTableRuleConfiguration = getYamlTableRuleConfiguration();\r\n        result.getTables().put(\"t_order\", yamlTableRuleConfiguration);\r\n        return result;\r\n    }\r\n\r\n    private static YamlTableRuleConfiguration getYamlTableRuleConfiguration() {\r\n        YamlTableRuleConfiguration result = new YamlTableRuleConfiguration();\r\n        YamlShardingStrategyConfiguration database = new YamlShardingStrategyConfiguration();\r\n        YamlInlineShardingStrategyConfiguration inline = new YamlInlineShardingStrategyConfiguration();\r\n        inline.setAlgorithmExpression(\"ds_${user_id % 2}\");\r\n        inline.setShardingColumn(\"user_id\");\r\n        database.setInline(inline);\r\n        result.setDatabaseStrategy(database);\r\n        YamlShardingStrategyConfiguration table = new YamlShardingStrategyConfiguration();\r\n        table.setNone(new YamlNoneShardingStrategyConfiguration());\r\n        result.setTableStrategy(table);\r\n        return result;\r\n    }\r\n```\r\n", "url": "https://github.com/apache/shardingsphere/issues/4047", "user": "KomachiSion", "labels": ["bug", "sharding"], "created": "2020-01-20 08:30:05", "closed": "2020-01-20 12:24:52", "commits": {"0dc84b61cd10e507502549348e69ab1f78c22543": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0dc84b61cd10e507502549348e69ab1f78c22543", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["1f24d3a3900d22a9726227f2ed5ccbce9b51c6aa"], "nameRev": "0dc84b61cd10e507502549348e69ab1f78c22543 tags/shardingsphere-ui-4.1.0~516^2~41", "commitMessage": "Fixes #4047, ConfigurationLogger can log none sharding strategy. (#4050)\n\n* Fix log configuration error for none sharding strategy.\r\n\r\n* For checkstyle\r\n", "commitDateTime": "2020-01-20 20:24:51", "authoredDateTime": "2020-01-20 20:24:51", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/log/ConfigurationLogger.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/yaml/representer/processor/NoneShardingStrategyTupleProcessor.java", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/yaml/representer/processor/ShardingTupleProcessorFactory.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/yaml/swapper/ShardingStrategyConfigurationYamlSwapper.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/log/ConfigurationLoggerTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/yaml/swapper/ShardingStrategyConfigurationYamlSwapperTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/registry/config/service/ConfigurationService.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/yaml/engine/YamlEngine.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/yaml/representer/DefaultYamlRepresenter.java", "insertions": 55, "deletions": 0, "lines": 55}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/yaml/{engine/DefaultYamlRepresenter.java => representer/processor/SkipUnsetTupleProcessor.java}", "insertions": 12, "deletions": 11, "lines": 23}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/yaml/representer/processor/TupleProcessor.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/yaml/engine/fixture/FixtureTupleProcessor.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/yaml/{engine => representer}/DefaultYamlRepresenterTest.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConfigurationLogger.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.log.ConfigurationLogger.log(org.apache.shardingsphere.api.config.sharding.ShardingRuleConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NoneShardingStrategyTupleProcessor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.yaml.representer.processor.NoneShardingStrategyTupleProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingTupleProcessorFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.yaml.representer.processor.ShardingTupleProcessorFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingStrategyConfigurationYamlSwapper.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.yaml.swapper.ShardingStrategyConfigurationYamlSwapper.swap(org.apache.shardingsphere.api.config.sharding.strategy.ShardingStrategyConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationLoggerTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.log.ConfigurationLoggerTest.assertLogShardingRuleConfiguration()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.log.ConfigurationLoggerTest.assertLogRuleConfigurationWithShardingRuleConfiguration()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.log.ConfigurationLoggerTest.getShardingRuleConfiguration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingStrategyConfigurationYamlSwapperTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.yaml.swapper.ShardingStrategyConfigurationYamlSwapperTest.assertSwapToYamlWithNone()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationService.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.persistShardingRuleConfiguration(java.lang.String,org.apache.shardingsphere.api.config.sharding.ShardingRuleConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine.marshal(java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine.marshal(java.lang.Object,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultYamlRepresenter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.representer.DefaultYamlRepresenter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SkipUnsetTupleProcessor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.DefaultYamlRepresenter", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.DefaultYamlRepresenter.representJavaBeanProperty(java.lang.Object,org.yaml.snakeyaml.introspector.Property,java.lang.Object,org.yaml.snakeyaml.nodes.Tag)", "TOT": 9, "UPD": 8, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.DefaultYamlRepresenter.isUnwantedNodeTuple(org.yaml.snakeyaml.nodes.Node)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.DefaultYamlRepresenter.isEmptyCollectionNode(org.yaml.snakeyaml.nodes.Node)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TupleProcessor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.representer.processor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FixtureTupleProcessor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.fixture.FixtureTupleProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultYamlRepresenterTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.DefaultYamlRepresenterTest.assertToYamlWithNull()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.DefaultYamlRepresenterTest.assertToYamlWithEmpty()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.DefaultYamlRepresenterTest.assertToYamlWithValue()", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.representer.DefaultYamlRepresenterTest.assertToYamlWithTupleProcessor()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "ResultSet miss the plain column because of using contains to get the logicColumn when using data mask\uff08sharding+encrypt\uff09", "body": "### Which version of ShardingSphere did you use?\r\n4.0.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc\r\n### Expected behavior\r\nreturn the all of table's columns.\r\n### Actual behavior\r\nresultSet miss the logic column because of using contains to get the logicColumn\r\n### Reason analyze (If you can)\r\nsharding+encrypt\uff0c the same issue with https://github.com/apache/incubator-shardingsphere/issues/3750.  \r\n\r\nIt should fix the class ShardingResultSetMetaData.java like EncryptResultSetMetaData.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/4044", "user": "xiyelife", "labels": ["bug", "encrypt"], "created": "2020-01-20 06:54:18", "closed": "2020-01-20 09:44:38", "commits": {"e36890c713bf0bacb3bc89392abdab52bd3727af": {"commitGHEventType": "referenced", "commitUser": "SteNicholas"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e36890c713bf0bacb3bc89392abdab52bd3727af", "commitGHEventType": "referenced", "commitUser": "SteNicholas", "commitParents": ["878f0f1e8ee2b4d9ee7b7d0f89044e1d87d0c04f"], "nameRev": "e36890c713bf0bacb3bc89392abdab52bd3727af tags/shardingsphere-ui-4.1.0~516^2~43", "commitMessage": "fixed for #4044 (#4046)\n\nfixed for #4044", "commitDateTime": "2020-01-20 17:44:37", "authoredDateTime": "2020-01-20 17:44:37", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSetMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingResultSetMetaData.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ShardingResultSetMetaData.getLogicColumn(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Raw-yaml configuration configure none sharding strategy failed", "body": "## Bug Report\r\n\r\nSimilar problem to #4005 .\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC1 \uff5e 4.0.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\n```yaml\r\nshardingRule:\r\n  tables:\r\n    t_order:\r\n      actualDataNodes: ds_${0..1}.t_order\r\n      databaseStrategy:\r\n        inline:\r\n          shardingColumn: user_id\r\n          algorithmExpression: ds_${user_id % 2}\r\n      tableStrategy:\r\n          none: \r\n```\r\n\r\ntableStrategy in shardingRule of t_order is `NoneStrategy`.\r\n\r\n### Actual behavior\r\n\r\ntableStrategy in shardingRule of t_order is null.\r\n\r\n### Reason analyze (If you can)\r\n\r\n`Yaml.loadAs()` parse value of `none` as `Tag.NULL`. So set the tableStrategy as null.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nconfiguration\r\n```yaml\r\ndataSources:\r\n  ds_0: !!com.zaxxer.hikari.HikariDataSource\r\n    driverClassName: com.mysql.jdbc.Driver\r\n    jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n    username: root\r\n    password:\r\n  ds_1: !!com.zaxxer.hikari.HikariDataSource\r\n    driverClassName: com.mysql.jdbc.Driver\r\n    jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n    username: root\r\n    password:\r\n\r\nshardingRule:\r\n  tables:\r\n    t_order:\r\n      actualDataNodes: ds_${0..1}.t_order\r\n      databaseStrategy:\r\n        inline:\r\n          shardingColumn: user_id\r\n          algorithmExpression: ds_${user_id % 2}\r\n      tableStrategy:\r\n        none: \r\n\r\n```\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/4043", "user": "KomachiSion", "labels": ["bug", "sharding"], "created": "2020-01-20 06:52:53", "closed": "2020-02-03 09:55:26", "commits": {"4d7ffdda90586f0521d199e3051f64d01c54dbac": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "4d7ffdda90586f0521d199e3051f64d01c54dbac", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["670cc249f025d8aca68d9ab16569d4c5c1dbddc3"], "nameRev": "4d7ffdda90586f0521d199e3051f64d01c54dbac tags/shardingsphere-ui-4.1.0~477", "commitMessage": "Fixes #4043, raw-yaml can configure none sharding strategy. (#4149)\n\n* Fixes #4043, raw-yaml can configure none sharding strategy.\r\n\r\n* For checkstyle\r\n", "commitDateTime": "2020-02-03 17:55:25", "authoredDateTime": "2020-02-03 17:55:25", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/yaml/constructor/YamlRootShardingConfigurationConstructor.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/yaml/constructor/construct/YamlNoneShardingStrategyConfigurationConstruct.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/yaml/engine/YamlEngineShardingConfigurationTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/MixSQLRewriterParameterizedTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sharding/rewrite/parameterized/ShardingSQLRewriterParameterizedTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/api/yaml/YamlShardingDataSourceFactory.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/api/yaml/YamlOrchestrationShardingDataSourceFactory.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/yaml/constructor/YamlOrchestrationShardingRuleConfigurationConstructor.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/registry/config/listener/SchemaChangedListener.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/registry/config/service/ConfigurationService.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/registry/config/service/ConfigurationServiceTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-proxy/sharding-proxy-common/src/main/java/org/apache/shardingsphere/shardingproxy/config/ShardingConfigurationLoader.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-common/src/main/java/org/apache/shardingsphere/shardingproxy/config/yaml/constructor/YamlProxyRuleConfigurationConstructor.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-proxy/sharding-proxy-common/src/test/java/org/apache/shardingsphere/shardingproxy/config/ShardingConfigurationLoaderTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-proxy/sharding-proxy-common/src/test/resources/conf/config-sharding.yaml", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/yaml/constructor/AbstractTypeConstructor.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/main/java/org/apache/shardingsphere/underlying/common/yaml/engine/YamlEngine.java", "insertions": 46, "deletions": 5, "lines": 51}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/yaml/constructor/AbstractTypeConstructorTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/yaml/engine/fixture/DefaultYamlRepresenterFixture.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/yaml/engine/fixture/FixtureCustomClass.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "shardingsphere-underlying/shardingsphere-common/src/test/java/org/apache/shardingsphere/underlying/common/yaml/engine/fixture/FixtureTypeConstructor.java", "insertions": 40, "deletions": 0, "lines": 40}], "commitSpoonAstDiffStats": [{"spoonFilePath": "YamlRootShardingConfigurationConstructor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.yaml.constructor.YamlRootShardingConfigurationConstructor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlNoneShardingStrategyConfigurationConstruct.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.yaml.constructor.construct.YamlNoneShardingStrategyConfigurationConstruct", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlEngineShardingConfigurationTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.yaml.engine.YamlEngineShardingConfigurationTest.assertShardingRuleDefault(org.apache.shardingsphere.core.yaml.config.sharding.YamlRootShardingConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.yaml.engine.YamlEngineShardingConfigurationTest.assertUnmarshalWithYamlFile()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.yaml.engine.YamlEngineShardingConfigurationTest.assertUnmarshalWithYamlBytes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MixSQLRewriterParameterizedTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sharding.rewrite.parameterized.MixSQLRewriterParameterizedTest.createRuleConfiguration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingSQLRewriterParameterizedTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sharding.rewrite.parameterized.ShardingSQLRewriterParameterizedTest.createRuleConfiguration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlShardingDataSourceFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.api.yaml.YamlShardingDataSourceFactory.createDataSource(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.api.yaml.YamlShardingDataSourceFactory.createDataSource(byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.api.yaml.YamlShardingDataSourceFactory.createDataSource(java.util.Map,java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.api.yaml.YamlShardingDataSourceFactory.createDataSource(java.util.Map,byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlOrchestrationShardingDataSourceFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.orchestration.api.yaml.YamlOrchestrationShardingDataSourceFactory.unmarshal(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.orchestration.api.yaml.YamlOrchestrationShardingDataSourceFactory.unmarshal(byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlOrchestrationShardingRuleConfigurationConstructor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.orchestration.internal.yaml.constructor.YamlOrchestrationShardingRuleConfigurationConstructor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SchemaChangedListener.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.orchestration.internal.registry.config.listener.SchemaChangedListener.createShardingRuleChangedEvent(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationService.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.loadShardingRuleConfiguration(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigurationServiceTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationServiceTest.createShardingRuleConfiguration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingConfigurationLoader.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.config.ShardingConfigurationLoader.loadRuleConfiguration(java.io.File,org.apache.shardingsphere.shardingproxy.config.yaml.YamlProxyServerConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlProxyRuleConfigurationConstructor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.config.yaml.constructor.YamlProxyRuleConfigurationConstructor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingConfigurationLoaderTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.config.ShardingConfigurationLoaderTest.assertShardingRuleConfiguration(org.apache.shardingsphere.core.yaml.config.sharding.YamlShardingRuleConfiguration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractTypeConstructor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.constructor.AbstractTypeConstructor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine.unmarshal(java.io.File,java.lang.Class)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine.unmarshal(byte[],java.lang.Class)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine.unmarshal(java.lang.String,java.lang.Class)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine.unmarshal(java.io.File,java.lang.Class,org.yaml.snakeyaml.constructor.Constructor)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine.unmarshal(byte[],java.lang.Class,org.yaml.snakeyaml.constructor.Constructor)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.YamlEngine.unmarshal(java.lang.String,java.lang.Class,org.yaml.snakeyaml.constructor.Constructor)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractTypeConstructorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.constructor.AbstractTypeConstructorTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultYamlRepresenterFixture.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.fixture.DefaultYamlRepresenterFixture", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FixtureCustomClass.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.fixture.FixtureCustomClass", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FixtureTypeConstructor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.common.yaml.engine.fixture.FixtureTypeConstructor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "sharding+encrypt when sql contains \"\\n\"\uff0csql rewrite error  for mybatis. \uff08in\uff09", "body": "### Which version of ShardingSphere did you use?\r\n4.0.0  and dev branch\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc\r\n### Expected behavior\r\nthe `(`  are not in pairs , there are 5 `(`  in the actual SQL.\r\n### Actual behavior\r\n```\r\nShardingSphere-SQL                       : Logic SQL: select\r\n    *\r\n    from user_info\r\n     WHERE (  mobile in\r\n                  (\r\n                    ?\r\n                  ) )\r\n```\r\n```\r\nShardingSphere-SQL                       : Actual SQL: ds1 ::: select\r\n    *\r\n    from user_info_1\r\n     WHERE (  mobile in\r\n                  (\r\n                   (?) ) ::: [15xxxxxxxxxx]\r\n```\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/4037", "user": "xiyelife", "labels": ["SQL parse", "bug"], "created": "2020-01-20 05:34:10", "closed": "2020-02-14 04:47:39", "commits": {"ec80464899a90f7541a681c92be565cd92f4f0fd": {"commitGHEventType": "referenced", "commitUser": "cherrylzhao"}, "236af2b0b5f01a1df44e1e46f2bfbd3f849e3da1": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 24.00027777777778, "commitsDetails": [{"commitHash": "ec80464899a90f7541a681c92be565cd92f4f0fd", "commitGHEventType": "referenced", "commitUser": "cherrylzhao", "commitParents": ["9ad836e235c04c15301b6aecbdbd4a4b1d5fed96"], "nameRev": "ec80464899a90f7541a681c92be565cd92f4f0fd tags/4.0.1~9", "commitMessage": "Fixes #4037. IN operator contains space and `\\n` `\\t` `\\r` (#4193)\n\n* fixes for #4037\r\n\r\n* rename the unit case name\r\n", "commitDateTime": "2020-02-14 11:34:28", "authoredDateTime": "2020-02-14 11:34:28", "commitGitStats": [{"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/EncryptConditionEngine.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/test/resources/encrypt/select_for_query_with_cipher.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/router/sharding/condition/generator/impl/ConditionValueInOperatorGeneratorTest.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/core/constant/Bracket.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/core/extractor/impl/dml/PredicateExtractor.java", "insertions": 28, "deletions": 3, "lines": 31}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/predicate/value/PredicateBracketValue.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/predicate/value/PredicateInRightValue.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/predicate/value/PredicateLeftBracketValue.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/predicate/value/PredicateRightBracketValue.java", "insertions": 35, "deletions": 0, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptConditionEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.EncryptConditionEngine.createInEncryptCondition(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.PredicateSegment,org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.value.PredicateInRightValue)", "TOT": 13, "UPD": 2, "INS": 2, "MOV": 7, "DEL": 2}]}, {"spoonFilePath": "EncryptPredicateRightValueTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptPredicateRightValueTokenGenerator.generateSQLToken(org.apache.shardingsphere.encrypt.rewrite.EncryptCondition)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ConditionValueInOperatorGeneratorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.condition.generator.impl.ConditionValueInOperatorGeneratorTest.assertNowExpression()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Bracket.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.core.constant.Bracket", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PredicateExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractInPredicate(org.antlr.v4.runtime.ParserRuleContext,java.util.Map,org.apache.shardingsphere.sql.parser.sql.segment.dml.column.ColumnSegment)", "TOT": 16, "UPD": 3, "INS": 1, "MOV": 11, "DEL": 1}]}, {"spoonFilePath": "PredicateBracketValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.value.PredicateBracketValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PredicateInRightValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.value.PredicateInRightValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PredicateLeftBracketValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.value.PredicateLeftBracketValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PredicateRightBracketValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.value.PredicateRightBracketValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "236af2b0b5f01a1df44e1e46f2bfbd3f849e3da1", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a4b3a911218841370fe39d296691b203c2d5ce2b"], "nameRev": "236af2b0b5f01a1df44e1e46f2bfbd3f849e3da1 tags/shardingsphere-ui-4.1.0~391", "commitMessage": "Fixes #4037 in 5.x for #4193 in 4.0.1 (#4296)\n\n* Fixes #4037 in 5.x for #4193 in 4.0.1\r\n\r\n* reset the code format\r\n", "commitDateTime": "2020-02-14 12:47:39", "authoredDateTime": "2020-02-14 12:47:39", "commitGitStats": [{"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/condition/EncryptConditionEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/test/resources/encrypt/select_for_query_with_cipher.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/sharding/route/engine/condition/generator/impl/ConditionValueInOperatorGeneratorTest.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/core/constant/Bracket.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/core/extractor/impl/dml/PredicateExtractor.java", "insertions": 29, "deletions": 4, "lines": 33}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/predicate/value/PredicateBracketValue.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/predicate/value/PredicateInRightValue.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/predicate/value/PredicateLeftBracketValue.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/predicate/value/PredicateRightBracketValue.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/MySQLVisitor.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-postgresql/src/main/java/org/apache/shardingsphere/sql/parser/visitor/PostgreSQLVisitor.java", "insertions": 12, "deletions": 2, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptConditionEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.condition.EncryptConditionEngine.createInEncryptCondition(java.lang.String,org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.PredicateSegment,org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.value.PredicateInRightValue)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "EncryptPredicateRightValueTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.token.generator.impl.EncryptPredicateRightValueTokenGenerator.generateSQLToken(org.apache.shardingsphere.encrypt.rewrite.condition.EncryptCondition)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ConditionValueInOperatorGeneratorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sharding.route.engine.condition.generator.impl.ConditionValueInOperatorGeneratorTest.assertNowExpression()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Bracket.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.core.constant.Bracket", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PredicateExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractInPredicate(org.antlr.v4.runtime.ParserRuleContext,java.util.Map,org.apache.shardingsphere.sql.parser.sql.segment.dml.column.ColumnSegment)", "TOT": 16, "UPD": 3, "INS": 1, "MOV": 11, "DEL": 1}]}, {"spoonFilePath": "PredicateBracketValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.value.PredicateBracketValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PredicateInRightValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.value.PredicateInRightValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PredicateLeftBracketValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.value.PredicateLeftBracketValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PredicateRightBracketValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.sql.segment.dml.predicate.value.PredicateRightBracketValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLVisitor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.visitor.MySQLVisitor.createBracketValue(org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.PredicateContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.visitor.MySQLVisitor.createInSegment(org.apache.shardingsphere.sql.parser.autogen.MySQLStatementParser.PredicateContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLVisitor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sql.parser.visitor.PostgreSQLVisitor.createBracketValue(org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser.PredicateContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.sql.parser.visitor.PostgreSQLVisitor.createInSegment(org.apache.shardingsphere.sql.parser.autogen.PostgreSQLStatementParser.PredicateContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "sharding-jdbc-spring-boot-starter can't support NoneShardingStrategy", "body": "## Bug Report\r\n\r\nRelated issue #3977 .\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC1 ~ 4.0.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\n```yaml\r\nspring:\r\n  shardingsphere:\r\n    sharding:\r\n      tables:\r\n        t_order:\r\n          actualDataNodes: ds$->{0..1}.t_order\r\n          databaseStrategy:\r\n            inline:\r\n              shardingColumn: order_id\r\n              algorithmExpression: ds$->{order_id % 2}\r\n          tableStrategy:\r\n            none: \r\n```\r\ntableStrategy in shardingRule of `t_order` is NoneStrategy.\r\n\r\n### Actual behavior\r\n\r\ntableStrategy is null.\r\n\r\n### Reason analyze (If you can)\r\n\r\nspring-boot will process yaml parse result to properties.\r\nSo if the value is empty map or collection, it will ignore this propertries.\r\nAnd then when instance bean, spring boot find there are no properties for `tableStrategy`, and skip instance `tableStrategy`.\r\n\r\ndetail see `YamlProcessor` in `org.springframework.beans.factory.config` And `ValueObjectBinder` in ` org.springframework.boot.context.properties.bind`.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nconfiguration:\r\n```yaml\r\nspring:\r\n  shardingsphere:\r\n    datasource:\r\n      names: ds0, ds1\r\n      ds0:\r\n        type: org.apache.commons.dbcp2.BasicDataSource\r\n        driverClassName: com.mysql.jdbc.Driver\r\n        url: jdbc:mysql://localhost:3306/demo_ds_0?useUnicode=true\r\n        username: root\r\n        password:\r\n      ds1:\r\n        type: org.apache.commons.dbcp2.BasicDataSource\r\n        driverClassName: com.mysql.jdbc.Driver\r\n        url: jdbc:mysql://localhost:3306/demo_ds_1?useUnicode=true\r\n        username: root\r\n        password:\r\n    sharding:\r\n      tables:\r\n        t_order:\r\n          actualDataNodes: ds$->{0..1}.t_order\r\n          databaseStrategy:\r\n            inline:\r\n              shardingColumn: order_id\r\n              algorithmExpression: ds$->{order_id % 2}\r\n          tableStrategy:\r\n            none: {}\r\n    props:\r\n      sql:\r\n        show: true\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/4005", "user": "KomachiSion", "labels": ["bug", "spring"], "created": "2020-01-17 06:53:48", "closed": "2020-01-20 03:06:01", "commits": {"7baf8364abce7ef5749569d8e82d665fa19f8a29": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "b08ac07485bc479004f1471b5323c8893670c59f": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "7baf8364abce7ef5749569d8e82d665fa19f8a29", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["e50fc90a7de3d2c25f833aed28eeda8cae79545a"], "nameRev": "7baf8364abce7ef5749569d8e82d665fa19f8a29 tags/shardingsphere-ui-4.1.0~516^2~53", "commitMessage": "For #4005, fix none sharding strategy can't be config in spring-boot (#4021)\n\n* For #4005, fix none sharding strategy can't be config in spring-boot-starter\r\n\r\n* For checkstyle\r\n", "commitDateTime": "2020-01-19 20:09:19", "authoredDateTime": "2020-01-19 20:09:19", "commitGitStats": [{"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-spring/sharding-spring-boot-util/src/main/java/org/apache/shardingsphere/spring/boot/converter/StringToNoneShardingStrategyConfigurationConverter.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-spring/sharding-spring-boot-util/src/test/java/org/apache/shardingsphere/spring/boot/converter/StringToNoneShardingStrategyConfigurationConverterTest.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrchestrationSpringBootConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SpringBootConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "StringToNoneShardingStrategyConfigurationConverter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StringToNoneShardingStrategyConfigurationConverterTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverterTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b08ac07485bc479004f1471b5323c8893670c59f", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["00382146ab77335603d58a131ad5f80afa71a5fd"], "nameRev": "b08ac07485bc479004f1471b5323c8893670c59f tags/4.0.1~18", "commitMessage": "For #4005, fix none sharding strategy can't be config in spring-boot (#4022)\n\n* For #4005, fix none sharding strategy can't be config in spring-boot\r\n\r\n* For checkstyle\r\n", "commitDateTime": "2020-01-19 20:09:48", "authoredDateTime": "2020-01-19 20:09:48", "commitGitStats": [{"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-spring/sharding-spring-boot-util/src/main/java/org/apache/shardingsphere/spring/boot/converter/StringToNoneShardingStrategyConfigurationConverter.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-spring/sharding-spring-boot-util/src/test/java/org/apache/shardingsphere/spring/boot/converter/StringToNoneShardingStrategyConfigurationConverterTest.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrchestrationSpringBootConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SpringBootConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "StringToNoneShardingStrategyConfigurationConverter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StringToNoneShardingStrategyConfigurationConverterTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.spring.boot.converter.StringToNoneShardingStrategyConfigurationConverterTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sharding-JDBC lost insertValuesContexts when insert", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n 4.0.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\ninsert table success\r\n\r\n### Actual behavior\r\nsql not use route, products all table sql and mybatis exception\r\n\r\n### Reason analyze (If you can)\r\nI guess columns is too many(89) couse sql analysis exception when structuring sqlStatementContext\uff0cshardingConditions is empty because there is no insertValueContexts in sqlStatementContext,so not use table rule and setting parameters exception\r\n\r\n   debug:\r\n![image](https://user-images.githubusercontent.com/31645800/72487070-c3617900-3847-11ea-8b3c-500c9cf86f11.png)\r\n\r\nexception:\r\n\r\n```\r\norg.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \r\n### Error updating database.  Cause: java.lang.IllegalStateException\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: INSERT INTO orders ( id, orderId, outOrderId, orderType, state, createDate, paymentDate, issueDate, orderpayment,         paymentStatus, splitTag, orderCategory, mergeDate, isSysMerge, mergeNumber, liangpinTag,         logisticStatus, logisticVendorType, logisticVendor, paidAmount, isUrgent, username, baseStore,         paymentType, shad_phoneNumber, shad_mobilephone, shad_countrySubentity, shad_cityName, shad_name,         shad_addressLine1, shad_addressLine2, shippingFirstName, shad_postalZone, shad_latitudeValue,         shad_longitudeValue, shad_countryIso3166Alpha2Code, shad_countryName, discount, carriageFee,         serviceCharge, providerCode, version, source, buyerMemo, sellerMemo, invoicecontact_channelCode,         invoicecontact_electronicMail, invoicecontact_name, invoicecontact_note, invoicecontact_telefax,         invoicecontact_telephone, invoicecontact_value, invoicecontact_buyer, invoicecontact_taxpayernum,         needinvoice, createdstate, prioritylevelcode, shippingtaxcategory, financeMemo, modifiedtime,         reissuereason, storememo, scheduledshippingdate, oriorderid, lastname, reissuetype, contact_channelCode,         contact_electronicMail, contact_name, contact_note, contact_telefax, contact_telephone, contact_value,         parentorder, invoicetype, emailid, shippingandhandling, invoicecontent, shippinglastname,         customerlocale, currencycode, employeeid, shippingmethod, firstname, creationtime, invoicetitle,         expressSend, typecode, tenant, alipay_norderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'single', ? )          ,              ( ?, ?, ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             1, ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, 'OrderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'singlerderData', 'single', ? )          ,              ( ?, ?, ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             1, ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, ?, ?,             ?, ?, ?, 'OrderData', 'singlerderData', 'singlerderData', 'singlerderData', 'single', ? )\r\n### Cause: java.lang.IllegalStateException\r\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)\r\n\tat com.sun.proxy.$Proxy45.insert(Unknown Source)\r\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\r\n\tat com.sun.proxy.$Proxy65.batchSaveOrder(Unknown Source)\r\n\tat com.lppz.oms.create.service.CreateOrderServiceImpl.createOrdersToDB(CreateOrderServiceImpl.java:94)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy71.createOrdersToDB(Unknown Source)\r\n\tat com.lppz.oms.create.service.OrderCreateServiceImpl.createBatchOrder(OrderCreateServiceImpl.java:109)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy74.createBatchOrder(Unknown Source)\r\n\tat com.lppz.oms.create.consumer.CreateConsumer$1.doBiz(CreateConsumer.java:92)\r\n\tat com.lppz.oms.create.helper.MQServiceImpl$1.doBiz(MQServiceImpl.java:222)\r\n\tat com.lppz.oms.create.helper.MQServiceImpl$1.doBiz(MQServiceImpl.java:209)\r\n\tat com.lppz.util.rocketmq.listener.BaseLppzMessageListener.doHandleMsgList(BaseLppzMessageListener.java:158)\r\n\tat com.lppz.util.rocketmq.listener.lock.BaseLppzLockMessageListener.doHandleMsgList(BaseLppzLockMessageListener.java:70)\r\n\tat com.lppz.util.rocketmq.disruptor.BaseLockRocketHandler.handle(BaseLockRocketHandler.java:15)\r\n\tat com.lppz.util.rocketmq.disruptor.BaseLockRocketMqEventHandler.onEvent(BaseLockRocketMqEventHandler.java:27)\r\n\tat com.lppz.util.rocketmq.disruptor.BaseLockRocketMqEventHandler.onEvent(BaseLockRocketMqEventHandler.java:7)\r\n\tat com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:137)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n```\r\n shardingRule:\r\n    defaultDataSourceName: ds0\r\n    defaultDatabaseStrategy:\r\n      standard: {preciseAlgorithmClassName: com.lppz.ss.algorithm.HashPreciseShardingAlgorithm,\r\n                 shardingColumn: id}\r\n    defaultTableStrategy:\r\n      standard: {preciseAlgorithmClassName: com.lppz.ss.algorithm.HashPreciseShardingAlgorithm,\r\n                 shardingColumn: id}\r\n    defaultKeyGenerator:\r\n      column: id\r\n      props: {}\r\n      type: SNOWFLAKE\r\n    tables:\r\n      busi_promotion_info:\r\n        actualDataNodes: ds${0..1}.busi_promotion_info_${0..1}\r\n      orders:\r\n        actualDataNodes: ds${0..1}.orders_${0..1}\r\n      orderlines:\r\n        actualDataNodes: ds${0..1}.orderlines_${0..1}\r\n      order_sharding:\r\n        actualDataNodes: ds${0..1}.order_sharding_${0..1}\r\n      outorderidgenerator:\r\n        actualDataNodes: ds${0..1}.outorderidgenerator_${0..1}\r\n      paymentinfo:\r\n        actualDataNodes: ds${0..1}.paymentinfo_${0..1}\r\n      shipments:\r\n        actualDataNodes: ds${0..1}.shipments_${0..1}\r\n```\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3992", "user": "leego86", "labels": ["SQL parse", "bug"], "created": "2020-01-16 02:29:52", "closed": "2020-01-21 10:42:55", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Parse engine rejects CURRENT_USER in 4.0.0", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\nUpdate from 3.1.0 to 4.0.0 would not change the parser rules.\r\n\r\n### Actual behavior\r\n\r\nIntegration tests fail because flyway can't perform a migration when executing `select CURRENT_USER`\r\n\r\n### Reason analyze (If you can)\r\n\r\n```\r\norg.postgresql:postgresql:42.2.6\r\norg.flywaydb:flyway-core:5.2.4\r\norg.testcontainers:postgresql:1.12.0\r\n\r\nsql = \"SELECT CURRENT_USER\"\r\nparseEngine = {SQLParseEngine@4966} \r\n databaseTypeName = \"PostgreSQL\"\r\n\r\nline 1:7 mismatched input 'CURRENT_USER' expecting {'U', 'u', '!', '~', '+', '-', '*', '(', '{', '?', INSERT, UPDATE, DELETE, ALTER, DROP, TRUNCATE, SCHEMA, REVOKE, ADD, SET, INDEX, KEY, FUNCTION, TRIGGER, PROCEDURE, DISTINCT, CASE, CAST, IF, NOT, NULL, TRUE, FALSE, EXISTS, ALL, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, CHAR, INTERVAL, TIME, TIMESTAMP, LOCALTIME, LOCALTIMESTAMP, YEAR, MONTH, DAY, HOUR, MINUTE, SECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, PRESERVE, DEFINER, SQL, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, NAMES, INTEGER, REAL, DECIMAL, TYPE, ADMIN, BINARY, ESCAPE, EXCLUDE, PARTITION, ROW, UNKNOWN, ALWAYS, CASCADE, GENERATED, ISOLATION, LEVEL, OPTION, PRIVILEGES, READ, ROLE, ROWS, START, TRANSACTION, ACTION, CACHE, CHARACTERISTICS, CLUSTER, COMMENTS, CONSTRAINTS, CURRENT_TIMESTAMP, CYCLE, DATA, DATABASE, DEFAULTS, DEFERRED, DEPENDS, DOMAIN, EXCLUDING, EXECUTE, EXTENDED, EXTENSION, EXTERNAL, EXTRACT, FILTER, FIRST, FOLLOWING, FORCE, GLOBAL, IDENTITY, IMMEDIATE, INCLUDING, INCREMENT, INDEXES, INHERIT, INHERITS, INCLUDE, LANGUAGE, LARGE, LAST, LOGGED, MAIN, MATCH, MAXVALUE, MINVALUE, NOTHING, NULLS, OBJECT, OIDS, OVER, OWNED, OWNER, PARTIAL, PLAIN, PRECEDING, RANGE, RENAME, REPLICA, RESET, RESTART, RESTRICT, ROUTINE, RULE, SECURITY, SEQUENCE, SESSION, SHOW, SIMPLE, STATISTICS, STORAGE, TABLESPACE, TEMP, TEMPORARY, UNBOUNDED, UNLOGGED, USAGE, VALID, VALIDATE, WITHIN, WITHOUT, ZONE, OF, GROUPS, RECURSIVE, IDENTIFIER_, STRING_, NUMBER_, HEX_DIGIT_, BIT_NUM_}\r\n\r\njava.lang.IllegalStateException\r\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:429)\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.util.ExtractorUtils.getFirstChildNode(ExtractorUtils.java:48)\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.select.SelectItemsExtractor.extract(SelectItemsExtractor.java:54)\r\n\tat org.apache.shardingsphere.sql.parser.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:47)\r\n\tat org.apache.shardingsphere.sql.parser.core.SQLParseKernel.parse(SQLParseKernel.java:59)\r\n\tat org.apache.shardingsphere.sql.parser.SQLParseEngine.parse0(SQLParseEngine.java:70)\r\n\tat org.apache.shardingsphere.sql.parser.SQLParseEngine.parse(SQLParseEngine.java:52)\r\n\tat org.apache.shardingsphere.core.route.router.masterslave.MasterSlaveRouter.route(MasterSlaveRouter.java:56)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.<init>(MasterSlavePreparedStatement.java:68)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.<init>(MasterSlavePreparedStatement.java:53)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.connection.MasterSlaveConnection.prepareStatement(MasterSlaveConnection.java:76)\r\n\tat org.flywaydb.core.internal.jdbc.JdbcTemplate.prepareStatement(JdbcTemplate.java:333)\r\n\tat org.flywaydb.core.internal.jdbc.JdbcTemplate.queryForString(JdbcTemplate.java:190)\r\n\tat org.flywaydb.core.internal.database.postgresql.PostgreSQLConnection.<init>(PostgreSQLConnection.java:48)\r\n\tat org.flywaydb.core.internal.database.postgresql.PostgreSQLDatabase.getConnection(PostgreSQLDatabase.java:56)\r\n\tat org.flywaydb.core.internal.database.postgresql.PostgreSQLDatabase.getConnection(PostgreSQLDatabase.java:31)\r\n\tat org.flywaydb.core.internal.database.base.Database.getMainConnection(Database.java:366)\r\n\tat org.flywaydb.core.Flyway.prepareSchemas(Flyway.java:1773)\r\n\tat org.flywaydb.core.Flyway.execute(Flyway.java:1678)\r\n\tat org.flywaydb.core.Flyway.migrate(Flyway.java:1356)\r\n```\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nShould be reproducible if the mentioned statement is executed with the PostgreSQL SQLParseEngine \r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3990", "user": "encodeering", "labels": ["SQL parse", "bug"], "created": "2020-01-15 12:52:53", "closed": "2020-01-20 11:34:23", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Hintmanager  databaseShardingOnly problem", "body": "## Bug Report\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n### Which version of ShardingSphere did you use?\r\n**4.0.0**\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\ni can hint databases with sth outside my database, for example , i want to get the hint key from my http header ,then route by the key.\r\n### Actual behavior\r\nit route to all my datasources\r\n### Reason analyze (If you can)\r\nmaybe the hintmanager has wrong code \r\n\r\nthis code is in hintmanager,i use **setDatabaseShardingValue** method to config my shardkey,\r\nhere, it put an empty key for the sharding values. \r\n\r\n***\r\n    public void setDatabaseShardingValue(final Comparable<?> value) {\r\n        databaseShardingValues.clear();\r\n        tableShardingValues.clear();\r\n        databaseShardingValues.put(\"\", value);\r\n        databaseShardingOnly = true;\r\n    }\r\n***\r\nbut when i followed it in the **getDatabaseShardingValues** method, it gets the shardingValues\r\nby the logicTable, so I can not get the shardingvalues which i configed.\r\n\r\n***\r\n    public static Collection<Comparable<?>> getDatabaseShardingValues(final String logicTable) {\r\n        return null == HINT_MANAGER_HOLDER.get() ? Collections.<Comparable<?>>emptyList() : HINT_MANAGER_HOLDER.get().databaseShardingValues.get(logicTable);\r\n    }\r\n***\r\n\r\nthen  in the **routeDataSources** method of  **StandardRoutingEngine** \r\n\r\n***\r\n    private Collection<String> routeDataSources(final TableRule tableRule, final List<RouteValue> databaseShardingValues) {\r\n        if (databaseShardingValues.isEmpty()) {\r\n            return tableRule.getActualDatasourceNames();\r\n        }\r\n        Collection<String> result = new LinkedHashSet<>(shardingRule.getDatabaseShardingStrategy(tableRule).doSharding(tableRule.getActualDatasourceNames(), databaseShardingValues));\r\n        Preconditions.checkState(!result.isEmpty(), \"no database route info\");\r\n        Preconditions.checkState(tableRule.getActualDatasourceNames().containsAll(result), \r\n                \"Some routed data sources do not belong to configured data sources. routed data sources: `%s`, configured data sources: `%s`\", result, tableRule.getActualDatasourceNames());\r\n        return result;\r\n    }\r\n***\r\nthe databaseShardingValues is empty , so it returns all the actualDatasources, not only the datasource i conifged.\r\n\r\ncould you please provide an example for this situation?", "url": "https://github.com/apache/shardingsphere/issues/3964", "user": "tmjGitAccount", "labels": ["bug", "sharding"], "created": "2020-01-14 05:33:35", "closed": "2020-02-12 10:28:02", "commits": {"9d9c0673a47cd269cfc27181e7afc6085146c40c": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "9d9c0673a47cd269cfc27181e7afc6085146c40c", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["ad11519249cff053d753c3793d1b94ecb483d7f0"], "nameRev": "9d9c0673a47cd269cfc27181e7afc6085146c40c tags/shardingsphere-ui-4.1.0~406", "commitMessage": "Fixes #3964 and #4256, fix hint database sharding only can't work well. (#4266)\n\n", "commitDateTime": "2020-02-12 18:28:00", "authoredDateTime": "2020-02-12 18:28:00", "commitGitStats": [{"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/sharding/route/engine/type/standard/ShardingStandardRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingStandardRoutingEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.sharding.route.engine.type.standard.ShardingStandardRoutingEngine.getDatabaseShardingValuesFromHint()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Oracle insert statement encrypt bug of version 4.0.0", "body": "Oracle insert statement exists encrypt bug for 4.0.0 release version. Because of oracle insert statement definition modification, the columnNames couldn't be extracted. The bug will be fixed in 4.0.1 version. `InsertValuesExtractor` could extract column segements by `InsertValuesClause` rule, but oracle insert statement `insertValuesClause` lack of `columnNames` , which cause encrypt problem for extracting column segements.", "url": "https://github.com/apache/shardingsphere/issues/3962", "user": "SteNicholas", "labels": ["bug", "encrypt"], "created": "2020-01-14 00:24:56", "closed": "2020-01-14 14:37:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "sharding with encrypt can not work well.", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC4-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc\r\n### Expected behavior\r\nsharding with encrypt can work well\r\n### Actual behavior\r\nonly sharding , encrypt can not work well\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3949", "user": "xiyelife", "labels": ["bug", "encrypt", "sharding"], "created": "2020-01-13 05:08:39", "closed": "2020-01-13 06:27:46", "commits": {"8f37cc3d0695c4815420e74fe77126114584cef3": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8f37cc3d0695c4815420e74fe77126114584cef3", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d5ab72d3b766264183ecadb6922d733262c21d8f"], "nameRev": "8f37cc3d0695c4815420e74fe77126114584cef3 tags/shardingsphere-ui-4.1.0~516^2~84", "commitMessage": "fixed for #3949 (#3950)\n\n", "commitDateTime": "2020-01-13 14:27:46", "authoredDateTime": "2020-01-13 14:27:46", "commitGitStats": [{"filePath": "sharding-core/sharding-core-entry/src/main/java/org/apache/shardingsphere/core/shard/BaseShardingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseShardingEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.shard.BaseShardingEngine.createSQLRewriteContextDecorator(org.apache.shardingsphere.sharding.route.engine.context.ShardingRouteContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Spring-Boot + sharding-proxy   decodes  failed  after  encoding  by  AES", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC4-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-proxy\r\n### Expected behavior\r\nExecuting `select * from t_user`, it will return  the result.\r\n### Actual behavior\r\nWhen i execute `select * from t_user` it  can not return  the result.\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\nThe proxy yaml config:\r\n```\r\nschemaName: encrypt_db\r\n\r\ndataSource:\r\n  url: jdbc:mysql://localhost:3306/demo_ds?serverTimezone=UTC&useSSL=false\r\n  username: root\r\n  password:\r\n  connectionTimeoutMilliseconds: 30000\r\n  idleTimeoutMilliseconds: 60000\r\n  maxLifetimeMilliseconds: 1800000\r\n  maxPoolSize: 50\r\n\r\nencryptRule:\r\n  encryptors:\r\n    encryptor_aes:\r\n      type: aes\r\n      props:\r\n        aes.key.value: 123456abc\r\n    encryptor_md5:\r\n      type: md5\r\n  tables:\r\n    t_user:\r\n      columns:\r\n        user_name:\r\n          plainColumn: user_name\r\n          cipherColumn: user_name_cipher\r\n          encryptor: encryptor_aes\r\n          \r\n        pwd:\r\n          plainColumn: pwd_plain\r\n          cipherColumn: pwd_cipher\r\n          encryptor: encryptor_md5\r\n\r\n```\r\nthe exception:\r\n\r\n ```\r\njavax.crypto.IllegalBlockSizeException: Input length must be multiple of 16 when decrypting with padded cipher\r\n        at com.sun.crypto.provider.CipherCore.prepareInputBuffer(CipherCore.java:1005)\r\n        at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:848)\r\n        at com.sun.crypto.provider.AESCipher.engineDoFinal(AESCipher.java:446)\r\n        at javax.crypto.Cipher.doFinal(Cipher.java:2164)\r\n        at org.apache.shardingsphere.encrypt.strategy.impl.AESEncryptor.decrypt(AESEncryptor.java:73)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.getQueryData(JDBCDatabaseCommunicationEngine.java:216)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor.getQueryData(MySQLComStmtExecuteExecutor.java:118)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor.getQueryData(MySQLComStmtExecuteExecutor.java:57)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.MySQLCommandExecuteEngine.writeQueryData(MySQLCommandExecuteEngine.java:83)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:100)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:72)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n```", "url": "https://github.com/apache/shardingsphere/issues/3932", "user": "haetao", "labels": ["bug", "encrypt", "spring"], "created": "2020-01-11 02:14:08", "closed": "2020-03-14 04:11:58", "commits": {}, "ttf": 63.000277777777775, "commitsDetails": []}, {"title": "proxy select table throw NullPointerException!", "body": "use:sharding-proxy-4.0.0\r\n\r\nstdout.log :\r\n`\r\n[ERROR] 20:47:17.372 [ShardingSphere-Command-13] o.a.s.s.f.c.CommandExecutorTask - Exception occur: \r\njava.lang.NullPointerException: null\r\n        at org.apache.shardingsphere.shardingproxy.backend.response.query.QueryHeader.<init>(QueryHeader.java:67)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.callback.ProxySQLExecuteCallback.getQueryHeaders(ProxySQLExecuteCallback.java:89)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.callback.ProxySQLExecuteCallback.executeSQL(ProxySQLExecuteCallback.java:81)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.callback.ProxySQLExecuteCallback.executeSQL(ProxySQLExecuteCallback.java:73)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.callback.ProxySQLExecuteCallback.executeSQL(ProxySQLExecuteCallback.java:45)\r\n        at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:79)\r\n        at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:61)\r\n        at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.syncGroupExecute(ShardingExecuteEngine.java:125)\r\n        at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.parallelExecute(ShardingExecuteEngine.java:102)\r\n        at org.apache.shardingsphere.core.execute.engine.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:83)\r\n        at org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:73)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.JDBCExecuteEngine.execute(JDBCExecuteEngine.java:82)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:99)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:84)\r\n        at org.apache.shardingsphere.shardingproxy.backend.text.query.QueryBackendHandler.execute(QueryBackendHandler.java:54)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute(MySQLComQueryPacketExecutor.java:73)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:92)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:72)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n`\r\n\r\nproxy log:\r\n`\r\n2020-01-08 20:55:48,644 [ShardingSphere-Command-2] INFO [ShardingSphere-SQL] Rule Type: sharding\r\n2020-01-08 20:55:48,645 [ShardingSphere-Command-2] INFO [ShardingSphere-SQL] Logic SQL: /* ApplicationName=DBeaver 6.1.2 - Main */ SET SQL_SELECT_LIMIT=200\r\n2020-01-08 20:55:48,645 [ShardingSphere-Command-2] INFO [ShardingSphere-SQL] SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.SetStatement@178abd17, tablesContext=TablesContext(tables=[], schema=Optional.absent()))\r\n2020-01-08 20:55:48,645 [ShardingSphere-Command-2] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SET SQL_SELECT_LIMIT=200\r\n2020-01-08 20:55:48,658 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Rule Type: sharding\r\n2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Logic SQL: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets limit 10\r\n2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] SQLStatement: SelectSQLStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dml.SelectStatement@77adb0a6, tablesContext=TablesContext(tables=[Table(name=t_role_assets, alias=Optional.absent())], schema=Optional.absent())), projectionsContext=ProjectionsContext(startIndex=50, stopIndex=50, distinctRow=false, projections=[ShorthandProjection(owner=Optional.absent())], columnLabels=[roleid, dailydiamondconsume, dailyrecharge, diamond, energy, gold, guildgold, roleexp, totaldiamond, totaldropgold, totalexp, totalrecharge, vippoint, energytime]), groupByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.groupby.GroupByContext@5dd9ba9a, orderByContext=org.apache.shardingsphere.sql.parser.relation.segment.select.orderby.OrderByContext@8965fd, paginationContext=org.apache.shardingsphere.sql.parser.relation.segment.select.pagination.PaginationContext@1934d0c0, containsSubquery=false)\r\n2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets0 limit 10\r\n2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets1 limit 10\r\n2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets2 limit 10\r\n2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets0 limit 10\r\n2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets1 limit 10\r\n2020-01-08 20:55:48,659 [ShardingSphere-Command-14] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SELECT * from t_role_assets2 limit 10\r\n2020-01-08 20:55:48,670 [ShardingSphere-Command-4] INFO [ShardingSphere-SQL] Rule Type: sharding\r\n2020-01-08 20:55:48,670 [ShardingSphere-Command-4] INFO [ShardingSphere-SQL] Logic SQL: /* ApplicationName=DBeaver 6.1.2 - Main */ SET SQL_SELECT_LIMIT=DEFAULT\r\n2020-01-08 20:55:48,670 [ShardingSphere-Command-4] INFO [ShardingSphere-SQL] SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.SetStatement@6d0df86d, tablesContext=TablesContext(tables=[], schema=Optional.absent()))\r\n2020-01-08 20:55:48,670 [ShardingSphere-Command-4] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SET SQL_SELECT_LIMIT=DEFAULT\r\n2020-01-08 20:55:48,675 [ShardingSphere-Command-5] INFO [ShardingSphere-SQL] Rule Type: sharding\r\n2020-01-08 20:55:48,675 [ShardingSphere-Command-5] INFO [ShardingSphere-SQL] Logic SQL: /* ApplicationName=DBeaver 6.1.2 - Main */ SHOW WARNINGS\r\n2020-01-08 20:55:48,675 [ShardingSphere-Command-5] INFO [ShardingSphere-SQL] SQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.sql.parser.sql.statement.dal.dialect.mysql.ShowOtherStatement@50305fb5, tablesContext=TablesContext(tables=[], schema=Optional.absent()))\r\n2020-01-08 20:55:48,675 [ShardingSphere-Command-5] INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: /* ApplicationName=DBeaver 6.1.2 - Main */ SHOW WARNINGS\r\n\r\n\r\n`\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/3905", "user": "wangjing112", "labels": ["bug", "proxy"], "created": "2020-01-08 13:02:34", "closed": "2020-01-10 03:53:19", "commits": {"d7ab7217e47cc1ec1f7a9e7274794715af42eb78": {"commitGHEventType": "referenced", "commitUser": "cherrylzhao"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "d7ab7217e47cc1ec1f7a9e7274794715af42eb78", "commitGHEventType": "referenced", "commitUser": "cherrylzhao", "commitParents": ["4dff62324277c4194742de4c4a552f967bf2d20f", "a4cd7cc871f4b693f738c025adda3e395ab9c3bf"], "nameRev": "d7ab7217e47cc1ec1f7a9e7274794715af42eb78 tags/shardingsphere-ui-4.1.0~516^2~95", "commitMessage": "Merge pull request #3918 from SteNicholas/alter-table-metadata\n\nfix #3905 QueryHeader load logic table metadata", "commitDateTime": "2020-01-10 11:53:19", "authoredDateTime": "2020-01-10 11:53:19", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeader.java", "insertions": 19, "deletions": 21, "lines": 40}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeaderTest.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingRule.java", "spoonMethods": []}, {"spoonFilePath": "QueryHeader.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.response.query.QueryHeader", "TOT": 51, "UPD": 13, "INS": 8, "MOV": 22, "DEL": 8}]}, {"spoonFilePath": "QueryHeaderTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.response.query.QueryHeaderTest.getShardingSchema()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Insert SQL with null value of shardingColumns may be routed to multiple dataNodes.", "body": "## Bug Report\r\n\r\nAccording to the discussion in #3644. the value of shardingColumns should not be `null`.\r\nBut I found that there are different behavior between literal SQL and parameters SQL.\r\n\r\nWhen I use literal SQL like `INSERT INTO t_order (order_id, user_id, status) VALUES (100, null, 'xxx')`, The SQL will be routed to multiple data nodes. \r\n\r\nAnd if I use parameters SQL like `INSERT INTO t_order (order_id, user_id, status) VALUES (?, ?, ?) paramters=[100, null, 'xxx']`, the SQL will throw sharding column can't be null exception.\r\n\r\nSo I think it's a bug for literal insert SQL.\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC3\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\nThrow same exception for literal insert SQL with null value of sharding columns.\r\n\r\n### Actual behavior\r\n\r\nRouted to multiple data nodes.\r\n\r\n### Reason analyze (If you can)\r\n\r\nThe reason is in `InsertClauseShardingConditionEngine.createShardingCondition`. \r\n\r\nExpressionSegment of null value in literal insert SQL is `CommonExpressionSegment`, but the method do not handle `CommonExpressionSegment`. So the null value do not be added to shardingValues and also not throw exception.\r\n\r\nWhen routingEngine get shardingValues, the shardingValues is empty. So SQL be routed to all nodes. \r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nshardingConfiguration:\r\n```\r\nspring:\r\n  shardingsphere:\r\n    datasource:\r\n      names: ds0, ds1\r\n      ds0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.cj.jdbc.Driver\r\n        username: root\r\n        password: \"\"\r\n        jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_0?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=Asia/Shanghai\r\n      ds1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.cj.jdbc.Driver\r\n        username: root\r\n        password: \"\"\r\n        jdbcUrl: jdbc:mysql://localhost:3306/demo_ds_1?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=Asia/Shanghai\r\n    sharding:\r\n      tables:\r\n        t_order:\r\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\r\n          key-generator:\r\n            column: order_id\r\n            type: SNOWFLAKE\r\n          database-strategy:\r\n            inline:\r\n              sharding-column: user_id\r\n              algorithm-expression: ds$->{user_id % 2}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_$->{order_id % 2}\r\n    props:\r\n      sql:\r\n        show: true\r\n```\r\n\r\nSQL:\r\n```\r\nCREATE TABLE IF NOT EXISTS `t_order` (order_id bigint primary key, user_id int, status varchar(50));\r\nINSERT INTO `t_order` (order_id, user_id, status) VALUES (100, null, 'xxx')\r\n```\r\n", "url": "https://github.com/apache/shardingsphere/issues/3884", "user": "KomachiSion", "labels": ["bug", "sharding"], "created": "2020-01-07 02:19:26", "closed": "2020-01-08 00:44:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "PostgreSQL Proxy read parameters error in all types except String", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\nPreparedStatement works.\r\n`\r\n        PreparedStatement preparedStatement = connection.prepareStatement(\"INSERT INTO t_order(order_id,user_id, status) values(?, ?, ?)\");\r\n        preparedStatement.setLong(1, 8888);\r\n        preparedStatement.setInt(2, 8888);\r\n        preparedStatement.setString(3, \"8888\");\r\n        preparedStatement.executeUpdate();\r\n`\r\n\r\n### Actual behavior\r\n`\r\norg.postgresql.util.PSQLException: \r\n\tat org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2440)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2183)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:308)\r\n\tat org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:441)\r\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:365)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:143)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:120)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)\r\n`\r\n### Reason analyze (If you can)\r\nInsufficient fix of https://github.com/apache/incubator-shardingsphere/pull/3344, due to my suggestion.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nAll parameters except String.\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3861", "user": "tuohai666", "labels": ["bug", "proxy"], "created": "2020-01-03 10:54:13", "closed": "2020-01-03 12:04:55", "commits": {"c5c5150ae8e28dce871eacf62edc950ad67b1e45": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c5c5150ae8e28dce871eacf62edc950ad67b1e45", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["abef15548780b4400999a9cdc6ff75be037ab9f1"], "nameRev": "c5c5150ae8e28dce871eacf62edc950ad67b1e45 tags/shardingsphere-ui-4.1.0~516^2~115", "commitMessage": "#3861, PostgreSQL Proxy read parameters error in all types except String (#3863)\n\n", "commitDateTime": "2020-01-03 20:04:54", "authoredDateTime": "2020-01-03 20:04:54", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/binary/bind/PostgreSQLComBindPacket.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/binary/bind/protocol/PostgreSQLStringBinaryProtocolValue.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PostgreSQLComBindPacket.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.postgresql.packet.command.query.binary.bind.PostgreSQLComBindPacket.getParameters(org.apache.shardingsphere.shardingproxy.transport.postgresql.payload.PostgreSQLPacketPayload,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLStringBinaryProtocolValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.postgresql.packet.command.query.binary.bind.protocol.PostgreSQLStringBinaryProtocolValue.read(org.apache.shardingsphere.shardingproxy.transport.postgresql.payload.PostgreSQLPacketPayload)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Insert with encrypt does'not handle with the `on duplicate key update` 's prepared statement  patameters.", "body": "### Which version of ShardingSphere did you use?\r\nsharding-jdbc-4.0.0-RC4-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc\r\n### Expected behavior\r\n`insert into user_info (cust_id, unique_id, name, ident, mobile, password, reg_time, modify_time, reg_source, reg_app_channel, reg_device_info, status, is_mobile_authed, complate_cust_info, time_inst, time_upd, has_checked, system) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now() , ?, ?, ?) ON DUPLICATE KEY UPDATE id = 1, ident = ?, reg_source= ? `\r\nthe sql above can work fine.\r\n### Actual behavior\r\n```\r\n2020-01-03 10:48:12.687  INFO 28800 --- [batis-jap-test0] ShardingSphere-SQL                       : Rule Type: encrypt\r\n2020-01-03 10:48:12.688  INFO 28800 --- [batis-jap-test0] ShardingSphere-SQL                       : SQL: insert into user_info (cust_id, unique_id, name_enc, name,\r\n      ident_enc, ident, mobile_enc, mobile, password,\r\n      reg_time, modify_time, reg_source,\r\n      reg_app_channel, reg_device_info, status,\r\n      is_mobile_authed, complate_cust_info, time_inst,\r\n      time_upd, has_checked, system)\r\n    values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now(), ?, ?, ?)\r\n    ON DUPLICATE KEY UPDATE id = 1, ident = ?,  reg_source = ?\r\n2020-01-03 10:48:13.563  INFO 28800 --- [batis-jap-test0] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]\r\n2020-01-03 10:48:13.616  INFO 28800 --- [batis-jap-test0] o.s.jdbc.support.SQLErrorCodesFactory    : SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]\r\n2020-01-03 10:48:13.624 ERROR 28800 --- [batis-jap-test0] t.ThreadMybatisAndJPATest$Half           : \r\n\r\norg.springframework.jdbc.BadSqlGrammarException: \r\n### Error updating database.  Cause: java.sql.SQLException: No value specified for parameter 21\r\n### The error may involve transparent.mybatis.mapper.UserInfoMapper.insertOnDuplicateKey-Inline\r\n### The error occurred while setting parameters\r\n### SQL: insert into user_info (cust_id, unique_id, name,       ident, mobile, password,       reg_time, modify_time, reg_source,       reg_app_channel, reg_device_info, status,       is_mobile_authed, complate_cust_info, time_inst,       time_upd, has_checked, system)     values (?, ?, ?,       ?, ?, ?,       ?, ?, ?,       ?, ?, ?,       ?, ?,  now() ,       ?, ?, ?)     ON DUPLICATE KEY UPDATE id = 1, ident = ?,  reg_source = ?\r\n### Cause: java.sql.SQLException: No value specified for parameter 21\r\n; bad SQL grammar []; nested exception is java.sql.SQLException: No value specified for parameter 21\r\n\tat org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:99)\r\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)\r\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\r\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\r\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)\r\n\tat com.sun.proxy.$Proxy107.insert(Unknown Source)\r\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\r\n\tat com.sun.proxy.$Proxy116.insertOnDuplicateKey(Unknown Source)\r\n\tat transparent.ThreadMybatisAndJPATest.testMybatis(ThreadMybatisAndJPATest.java:96)\r\n\tat transparent.ThreadMybatisAndJPATest$Half.call(ThreadMybatisAndJPATest.java:227)\r\n\tat transparent.ThreadMybatisAndJPATest$Half.call(ThreadMybatisAndJPATest.java:216)\r\n\tat java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.sql.SQLException: No value specified for parameter 21\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)\r\n\tat com.mysql.jdbc.PreparedStatement.checkAllParametersSet(PreparedStatement.java:2211)\r\n\tat com.mysql.jdbc.PreparedStatement.fillSendPacket(PreparedStatement.java:2191)\r\n\tat com.mysql.jdbc.PreparedStatement.fillSendPacket(PreparedStatement.java:2121)\r\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1162)\r\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.execute(EncryptPreparedStatement.java:142)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)\r\n\tat com.sun.proxy.$Proxy120.execute(Unknown Source)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\r\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)\r\n\t... 13 common frames omitted\r\n```\r\n### Reason analyze (If you can)\r\n\r\nno preparedStatement parameter after `on duplicate key update` work fine.\r\nsuch as this sql:\r\n`insert into user_info (cust_id, unique_id, name, ident, mobile, password, reg_time, modify_time, reg_source, reg_app_channel, reg_device_info, status, is_mobile_authed, complate_cust_info, time_inst, time_upd, has_checked, system) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, now() , ?, ?, ?) ON DUPLICATE KEY UPDATE id = 1`\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3855", "user": "xiyelife", "labels": ["bug", "encrypt"], "created": "2020-01-03 02:54:24", "closed": "2020-01-03 12:01:38", "commits": {"abef15548780b4400999a9cdc6ff75be037ab9f1": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "abef15548780b4400999a9cdc6ff75be037ab9f1", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["63c47f74b1363a3a0ce17ccc719b614dc146497a"], "nameRev": "abef15548780b4400999a9cdc6ff75be037ab9f1 tags/shardingsphere-ui-4.1.0~516^2~116", "commitMessage": "fixed for #3855  (#3862)\n\n* fixed for #3855 Insert with encrypt does'not handle with the  's prepared statement patameters.\r\n\r\n* add judgement for empty.\r\n", "commitDateTime": "2020-01-03 20:01:38", "authoredDateTime": "2020-01-03 20:01:38", "commitGitStats": [{"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/parameter/EncryptParameterRewriterBuilder.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/main/java/org/apache/shardingsphere/encrypt/rewrite/parameter/impl/EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter.java", "insertions": 76, "deletions": 0, "lines": 76}, {"filePath": "encrypt-core/encrypt-core-rewrite/src/test/resources/encrypt/insert.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "shardingsphere-underlying/shardingsphere-rewrite/shardingsphere-rewrite-engine/src/main/java/org/apache/shardingsphere/underlying/rewrite/parameter/builder/impl/GroupedParameterBuilder.java", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptParameterRewriterBuilder.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.parameter.EncryptParameterRewriterBuilder.getParameterRewriters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.encrypt.rewrite.parameter.impl.EncryptInsertOnDuplicateKeyUpdateValueParameterRewriter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GroupedParameterBuilder.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.parameter.builder.impl.GroupedParameterBuilder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.underlying.rewrite.parameter.builder.impl.GroupedParameterBuilder.getParameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "\u2018NullPointerException\u2019 when getting database index", "body": "the environment  is that sharding-jdbc-4.0.0-rc3,sqlserver2012. Hibernate. Dbcp2 connection pool. Triggered when getting a database index. I  think that  Using DBCP directly does not have this problem. This is a screenshot of sharding- JDBC\r\n![exception](https://user-images.githubusercontent.com/31737411/71704604-429d8880-2e16-11ea-885a-f419e27cd567.png)\r\n\r\nIn this class, there is a NullPointerException, which can be run without an NullPointerException\uff0cSo what's the problem? How does it work?", "url": "https://github.com/apache/shardingsphere/issues/3854", "user": "software-market", "labels": ["bug", "sharding"], "created": "2020-01-03 02:46:24", "closed": "2020-01-09 09:53:33", "commits": {"2ebb031281c297a477b26568b8740a8c4bf46545": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "2ebb031281c297a477b26568b8740a8c4bf46545", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["ff86546718ef92bdf90d7f58a8a84e84760f4c14"], "nameRev": "2ebb031281c297a477b26568b8740a8c4bf46545 tags/shardingsphere-ui-4.1.0~516^2~97", "commitMessage": "Fixed #3854 (#3912)\n\n", "commitDateTime": "2020-01-09 17:53:32", "authoredDateTime": "2020-01-09 17:53:32", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/DatabaseMetaDataResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/DatabaseMetaDataResultSetTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DatabaseMetaDataResultSet.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.DatabaseMetaDataResultSet.generateDatabaseMetaDataObject(int,int,java.sql.ResultSet)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "DatabaseMetaDataResultSetTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.DatabaseMetaDataResultSetTest.mockResultSet()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sharding-Proxy starts up failed with Orchestration in scenario `sharding+encrypt+masterSlave`.", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-rc4\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-proxy\r\n### Expected behavior\r\nproxy starts up well!\r\n### Actual behavior\r\nproxy starts up failed!\r\n### Reason analyze (If you can)\r\nSharding-Proxy gets the configuration from Configuration Center when it is initlizating. It recognizes these RuleConfiguration by key words. But there is a problem, for example:\r\n   \r\n   The `sharding+encrypt` rule configuration in Configuration Center as follows, Proxy recognizes these RuleConfigurations by key words (`tables:\\n`-->shardingRule, `encryptors:\\n`-->encryptRule ).\r\n   We can see that there is a key word 'tables:' exists in shardingRule and encryptRule at the same time. So, we can't identify shardingRule by using key word `tables:`, it can use `encryptRule` as `shardingRule`\r\n   or use `shardingRule` as `encryptRule` in complex scenario.( for example `sharding+encrypt`,Proxy can use `shardingRule` as `encryptRule` )\r\n\r\n**sharding+encrypt rule configuration**\r\n```\r\nencryptRule:\r\n  encryptors:\r\n    encryptor_aes:\r\n      props:\r\n        aes.key.value: 123456abc\r\n      type: aes\r\n  tables:\r\n    t_user:\r\n      columns:\r\n        user_name:\r\n          cipherColumn: assisted_query_pwd\r\n          encryptor: encryptor_aes\r\n          plainColumn: user_name_plain\r\ntables:\r\n  t_user:\r\n    actualDataNodes: ds_${0..1}.t_user_${0..1}\r\n    databaseStrategy:\r\n      inline:\r\n        algorithmExpression: ds_${user_id % 2}\r\n        shardingColumn: user_id\r\n    keyGenerator:\r\n      column: user_id\r\n      type: SNOWFLAKE\r\n    logicTable: t_user\r\n    tableStrategy:\r\n      inline:\r\n        algorithmExpression: t_user_${user_id % 2}\r\n        shardingColumn: user_id\r\n```\r\n\r\n**method**  `getSchemaRules`\r\n\r\n![image](https://user-images.githubusercontent.com/46469719/71499699-a6ff9b80-289c-11ea-824c-c634f8e812ea.png)\r\n\r\n**method**  `isShardingRule` , `isEncryptRule`\r\n\r\n![image](https://user-images.githubusercontent.com/46469719/71499743-efb75480-289c-11ea-9b6e-337af0060359.png)\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/3817", "user": "haetao", "labels": ["bug", "orchestration", "proxy"], "created": "2019-12-27 03:36:56", "closed": "2019-12-30 03:56:33", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "When the default character code of my project is not UTF-8, decryption fails due to scrambling", "body": "When the default character code of my project is not UTF-8, decryption fails due to scrambling", "url": "https://github.com/apache/shardingsphere/issues/3810", "user": "minghu-zhang", "labels": ["bug", "encrypt"], "created": "2019-12-26 10:54:04", "closed": "2019-12-27 04:55:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Statement parameter more not set, when using  springboot-mybatis-hikari encryption ", "body": "version: proxy-dev\r\n\r\n```\r\norg.springframework.dao.TransientDataAccessResourceException: \r\n### Error updating database.  Cause: java.sql.SQLException: Statement parameter 4 not set.\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: INSERT INTO t_user (user_id, user_name, pwd) VALUES (?, ?, ?)\r\n### Cause: java.sql.SQLException: Statement parameter 4 not set.\r\n```", "url": "https://github.com/apache/shardingsphere/issues/3807", "user": "geomonlin", "labels": ["bug", "encrypt"], "created": "2019-12-26 08:10:51", "closed": "2019-12-26 09:06:06", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\"useServerPrepStmts=true\" doesn't work", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\ncan get datetime/timestamp correctly\r\n### Actual behavior\r\n![image](https://user-images.githubusercontent.com/37646009/71435819-a1337a00-2725-11ea-8866-d139eb618036.png)\r\n\r\n `[DEBUG] 14:33:14.155 [ShardingSphere-Command-0] o.a.s.s.f.m.c.MySQLCommandExecutorFactory - Execute packet type: COM_STMT_PREPARE, value: MySQLComStmtPreparePacket(sql=/*{\"Cookie\":\"cookie\"}*/select * from dbrest)\r\n[ERROR] 14:33:14.159 [ShardingSphere-Command-0] o.a.s.s.f.c.CommandExecutorTask - Exception occur: \r\njava.lang.ClassCastException: org.apache.shardingsphere.shardingproxy.backend.schema.TransparentSchema cannot be cast to org.apache.shardingsphere.shardingproxy.backend.schema.ShardingSchema\r\n`\r\n\r\nAfter fixing the issue, following error occures at client.\r\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 8\tat com.mysql.jdbc.ResultSetRow.getNativeTimestamp(ResultSetRow.java:614)\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n1. configuration:\r\nschemaName: test\r\ndataSources:\r\n  ds_0:\r\n    url: jdbc:mysql://192.168.1.46:3306/test\r\n    username: root\r\n    password: test\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 50\r\n\r\n2. JDBC url:\r\njdbc:mysql://192.168.1.46:3307/test?user=root&password=root&useServerPrepStmts=true&zeroDateTimeBehavior=convertToNull\r\n** useServerPrepStmts=true** should be used.\r\n3. data \r\nCREATE TABLE IF NOT EXISTS `dbrest` (\r\n  `fid` varchar(50) DEFAULT NULL,\r\n  `fint` int(11) DEFAULT NULL,\r\n  `ffloat` float DEFAULT NULL,\r\n  `ftext` text,\r\n  `fdate` date DEFAULT NULL,\r\n  `fdatetime` datetime DEFAULT NULL,\r\n  `ftimestamp` timestamp NULL DEFAULT CURRENT_TIMESTAMP,\r\n  `ftime` time DEFAULT NULL,\r\n  `fblob` varchar(50) DEFAULT NULL\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\r\n\r\nINSERT INTO `dbrest` (`fid`, `fint`, `ffloat`, `ftext`, `fdate`, `fdatetime`, `ftimestamp`, `ftime`, `fblob`) VALUES\r\n\t('1', 1, 1, '1', NULL, NULL, '2019-12-25 14:20:43', NULL, NULL);\r\n\r\n**If there are no \"null\" value, it can return correctly.**\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3801", "user": "Simbafa", "labels": ["bug", "proxy"], "created": "2019-12-25 06:51:28", "closed": "2019-12-27 04:58:32", "commits": {"0fa4d198634976a11594b8406af5d609087dc812": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "0fa4d198634976a11594b8406af5d609087dc812", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["bf667c4f2c44f2be62543b9a091c33fc514a0d80"], "nameRev": "0fa4d198634976a11594b8406af5d609087dc812 tags/4.0.0~10", "commitMessage": "#3801, fix transparent mode (#3816)\n\n", "commitDateTime": "2019-12-27 12:58:31", "authoredDateTime": "2019-12-27 12:58:31", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/TransparentSchema.java", "insertions": 0, "deletions": 6, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PreparedStatementExecutorWrapper.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.PreparedStatementExecutorWrapper.doTransparentRoute(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.wrapper.PreparedStatementExecutorWrapper.route(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TransparentSchema.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.schema.impl.TransparentSchema.getParseEngine()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Optimize the running time of UI unit test", "body": "## Bug Report\r\n\r\nThe running time of UI unit test is too long and the file is too large\r\n\r\n![image](https://user-images.githubusercontent.com/16662470/71409075-3e85a400-267b-11ea-80d3-686ebfcb8a13.png)\r\n", "url": "https://github.com/apache/shardingsphere/issues/3797", "user": "wqzwh", "labels": ["bug", "ui"], "created": "2019-12-24 10:29:34", "closed": "2019-12-26 16:07:06", "commits": {"614f0cb10c7fc9f8f4e422c0474930b185a9a732": {"commitGHEventType": "referenced", "commitUser": "beckhampu"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "614f0cb10c7fc9f8f4e422c0474930b185a9a732", "commitGHEventType": "referenced", "commitUser": "beckhampu", "commitParents": ["f1c6063dbb3ccea7f7a52a72457699fc4cae99e2"], "nameRev": "614f0cb10c7fc9f8f4e422c0474930b185a9a732 tags/4.0.0~14", "commitMessage": "fix[sharding-ui-frontend]:Optimize the running time of UI unit test #3797 (#3803)\n\n", "commitDateTime": "2019-12-27 00:07:06", "authoredDateTime": "2019-12-27 00:07:06", "commitGitStats": [{"filePath": "sharding-ui/sharding-ui-frontend/build/webpack.unit.conf.js", "insertions": 4, "deletions": 57, "lines": 61}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Use spring-boot configures MasterSlave  with  RegistryCenter Zookeeper, the MasterSlave configuration  on  RegistryCenter  is  wrong", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-rc3\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc\r\n### Expected behavior\r\nyaml configuration format:\r\n` slaveDataSourceNames:\r\n    - slave_ds_0\r\n    - slave_ds_1`\r\n### Actual behavior\r\n`masterDataSourceName: ds_master\r\nname: ds_ms\r\nslaveDataSourceNames: !!set\r\n  ds_slave_0: null\r\n  ds_slave_1: null`\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nJust run  by  using  spring-boot  to  configure.\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3772", "user": "haetao", "labels": ["bug", "spring"], "created": "2019-12-19 11:11:57", "closed": "2019-12-20 13:04:31", "commits": {"9ecc56bc445e3932729f3ead038c23751ea33918": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "9ecc56bc445e3932729f3ead038c23751ea33918", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["7a70fe67a68a7e781c156640041b872349431189"], "nameRev": "9ecc56bc445e3932729f3ead038c23751ea33918 tags/4.0.0~23", "commitMessage": "Fixes #3772, the MasterSlave configuration is wrong when use spring-boot (#3777)\n\n", "commitDateTime": "2019-12-20 21:04:30", "authoredDateTime": "2019-12-20 21:04:30", "commitGitStats": [{"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/api/config/masterslave/MasterSlaveRuleConfiguration.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/MasterSlaveRule.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/yaml/config/masterslave/YamlMasterSlaveRuleConfiguration.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/rule/OrchestrationMasterSlaveRule.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/type/OrchestrationSpringBootRegistryMasterSlaveTest.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveRuleConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.api.config.masterslave.MasterSlaveRuleConfiguration", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveRule.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rule.MasterSlaveRule", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YamlMasterSlaveRuleConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.yaml.config.masterslave.YamlMasterSlaveRuleConfiguration", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OrchestrationMasterSlaveRule.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.orchestration.internal.rule.OrchestrationMasterSlaveRule.getSlaveDataSourceNames()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OrchestrationSpringBootRegistryMasterSlaveTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.orchestration.spring.boot.type.OrchestrationSpringBootRegistryMasterSlaveTest.init()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "no viable alternative at input '(channel'", "body": "# Which version of ShardingSphere did you use?\r\n4.0.0-RC3\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc\r\n### Expected behavior\r\nexecute sql:\r\ninsert into demo(channel, name) values ('xx', 'xx') \r\nreport error:\r\nno viable alternative at input '(channel'\r\n### Actual behavior\r\nInsert record faild\r\n### Reason analyze (If you can)\r\n'channel' seems to be the keywords of sql parsing\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nsql:\r\ninsert into demo(channel, name) values ('xx', 'xx')\r\n\r\nspring:\r\n  shardingsphere:\r\n    datasource:\r\n      names: ds0\r\n      ds0:\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        type: com.alibaba.druid.pool.DruidDataSource\r\n    props:\r\n      sql:\r\n        show: true\r\n    sharding:\r\n      tables:\r\n        user:\r\n          actual-data-nodes: ds0.demo_$->{0..1}\r\n          key-generator:\r\n            column: id\r\n            type: SNOWFLAKE\r\n          table-strategy:\r\n            inline:\r\n              algorithm-expression: demo_$->{id % 2}\r\n              sharding-column: id\r\n", "url": "https://github.com/apache/shardingsphere/issues/3757", "user": "snakeeeeeeeee", "labels": ["SQL parse", "bug"], "created": "2019-12-18 07:01:11", "closed": "2019-12-18 12:06:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ResultSet miss the plain column  because of using contains to get the logicColumn when using  data mask.", "body": "### Which version of ShardingSphere did you use?\r\nsharding-jdbc-4.0.0-RC3\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc\r\n### Expected behavior\r\nreturn the all of table's columns.\r\n### Actual behavior\r\nresultSet miss the logic column  because of using contains to get the logicColumn\r\n\r\n### Reason analyze (If you can)\r\norg.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.EncryptResultSetMetaData#getLogicColumn\r\n![image](https://user-images.githubusercontent.com/8772975/70986422-cf4b0580-20f8-11ea-9a29-84bd067f6c48.png)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nrules are:\r\n![image](https://user-images.githubusercontent.com/8772975/70986801-952e3380-20f9-11ea-913a-af53a04aa70a.png)\r\n\r\nThe boss_real_name contains real_name cause the resultSet missing.\r\nI think that it should use equals  insteaded\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3750", "user": "xiyelife", "labels": ["bug", "encrypt"], "created": "2019-12-17 10:18:35", "closed": "2019-12-23 03:57:39", "commits": {"764c5cf19ff7bfde2107259fee84326faa0f3ba2": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "764c5cf19ff7bfde2107259fee84326faa0f3ba2", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["de3afc01634b31953f78873d7467704be3730fc8"], "nameRev": "764c5cf19ff7bfde2107259fee84326faa0f3ba2 tags/4.0.0~20", "commitMessage": "fix for #3750 (#3768)\n\n* fix for #3750\r\n\r\n* preparedstatement  select with plainColumn for contains column\r\n", "commitDateTime": "2019-12-23 11:57:39", "authoredDateTime": "2019-12-23 11:57:39", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSetMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/common/base/AbstractEncryptJDBCDatabaseAndTableTest.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatementTest.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/encrypt_data.sql", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/jdbc_init.sql", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptResultSetMetaData.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.EncryptResultSetMetaData.getLogicColumn(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractEncryptJDBCDatabaseAndTableTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.common.base.AbstractEncryptJDBCDatabaseAndTableTest.createEncryptRuleConfiguration()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptPreparedStatementTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatementTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatementTest.assertSelectWithPlainColumnForContainsColumn()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sql parse - support MySQL `Mod` function", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nsql that contains MySQL `Mod` function in WHERE clause shall work\r\n\r\n### Actual behavior\r\n- error log got : line 1:36 extraneous input 'MOD'\r\n- inforamtation about `ORDER BY` and `LIMIT ` lost after sql parase\r\n\r\n### Reason analyze (If you can)\r\nmaybe same as #3271 \r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n`\r\nSELECT * FROM xxl_mq_message WHERE MOD(id, 3) = 2 ORDER BY id ASC LIMIT 0,2\r\n`", "url": "https://github.com/apache/shardingsphere/issues/3748", "user": "BearKid", "labels": ["bug", "sharding"], "created": "2019-12-17 09:49:10", "closed": "2019-12-18 06:40:17", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "sharding-proxy cannot query data  when 'max.connections.size.per.query=1' for server.yaml  using springboot and mybatis framework", "body": "sharding-proxy version: dev,4.0.0-rc3\r\n\r\nconfiguration\uff1a\r\n       [config-sharding.yaml](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-proxy/sharding-proxy-bootstrap/src/main/resources/conf/config-sharding.yaml)\r\n      [server.yaml](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-proxy/sharding-proxy-bootstrap/src/main/resources/conf/server.yaml)\r\n\r\n[Running example](https://github.com/apache/incubator-shardingsphere-example/blob/dev/sharding-proxy-example/sharding-proxy-boot-mybatis-example/src/main/java/org/apache/shardingsphere/example/proxy/spring/boot/mybatis/SpringBootStarterExample.java)\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/3725", "user": "geomonlin", "labels": ["bug", "sharding"], "created": "2019-12-12 05:07:43", "closed": "2019-12-12 10:01:07", "commits": {"44069f508734f1a29fba0feb8fbc3821270aba4c": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "a41f4370470739aabef7079c3b20af5d24095eac": {"commitGHEventType": "referenced", "commitUser": "avalon566"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "44069f508734f1a29fba0feb8fbc3821270aba4c", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["2ad26082407d739f486935c56366df80c52068b1"], "nameRev": "44069f508734f1a29fba0feb8fbc3821270aba4c tags/4.0.0~34", "commitMessage": "#3725, fix MemoryQueryResult wrong data type (#3728)\n\n", "commitDateTime": "2019-12-12 18:01:06", "authoredDateTime": "2019-12-12 18:01:06", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResultTest.java", "insertions": 25, "deletions": 2, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MemoryQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.getRowValue(java.sql.ResultSet,int)", "TOT": 12, "UPD": 0, "INS": 4, "MOV": 6, "DEL": 2}]}, {"spoonFilePath": "MemoryQueryResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResultTest.assertGetValueByUnsignedInteger()", "TOT": 9, "UPD": 2, "INS": 1, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResultTest.assertGetCalendarValue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResultTest.assertGetValueByUnsignedBigInt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResultTest.assertGetValueBySignedInteger()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a41f4370470739aabef7079c3b20af5d24095eac", "commitGHEventType": "referenced", "commitUser": "avalon566", "commitParents": ["0e2aa9140101d051d5c4bf1532ce6dc052c446cf"], "nameRev": "a41f4370470739aabef7079c3b20af5d24095eac tags/shardingsphere-ui-4.1.0~252^2~39", "commitMessage": "Sharding scaling synchronize main branch (#3754)\n\n* Correct mismatched comments (#3594)\r\n\r\n* #3587, cache DataSourceMetaData (#3588)\r\n\r\n* #3587, cache DataSourceMetaData\r\n\r\n* #3587, add test case\r\n\r\n* fixes apollo debug & warn log, control log out by slf4j xml file. (#3583)\r\n\r\n* fixes apollo debug & warn log.\r\n\r\n* Move jul-to-slf4j -> root pom.\r\n\r\n* fixes jul-to-slf4j scope -> compile.\r\n\r\n* remove maven default scope.\r\n\r\n* Update snowflake algorithm to support modulus of 2^n  (#3595)\r\n\r\n* update vibration offset\r\n\r\n* add vibration offset test case\r\n\r\n* update vibration offset\r\n\r\n* update vibration offset\r\n\r\n* modify vibration offset test case\r\n\r\n* modify vibration offset test case\r\n\r\n* Refactor metadata (#3604)\r\n\r\n* decouple DatabaseType and DataSourceInfo\r\n\r\n* fix use == for string equals\r\n\r\n* decouple DataSourceMetaData and DataSourceInfo\r\n\r\n* fix javadoc\r\n\r\n* refactor LogicSchema.getDataSourceInfoMap()\r\n\r\n* reuse DatabaseAccessConfiguration and remove DataSourceInfo\r\n\r\n* refactor SQLExecuteCallback\r\n\r\n* change TableMetaDataInitializer's getTables parameter error. (#3589)\r\n\r\n* Modify SnowflakeShardingKeyGeneratorTest Unit-test case (#3610)\r\n\r\n* make all pom files consist (#3614)\r\n\r\n* make consist with pom\r\n\r\n* make consist with pom\r\n\r\n* adjust dependency sequence of ui-backend\r\n\r\n* for code style\r\n\r\n* ignore db test (#3615)\r\n\r\n* simplify test case assertLastDigitalOfGenerateKeySameMillisecond (#3616)\r\n\r\n* support SELECT DATABASE() (#3622)\r\n\r\n* Fixes #3627 (#3629)\r\n\r\n* move StatementExecuteUnit to sql package\r\n\r\n* move ShardingExecuteEngine to engine package\r\n\r\n* for code style\r\n\r\n* rename QueryResultBasedQueryResultFixture and ResultSetBasedQueryResultFixture\r\n\r\n* refactor DistinctQueryResult.getQueryRows()\r\n\r\n* skip distinct merge for group by and aggregation only\r\n\r\n* add DQLMergeEngine.isNeedProcessOrderBy\r\n\r\n* use group by to merge distinct row\r\n\r\n* add DQLMergeEngine.setGroupByForDistinctRow\r\n\r\n* remove useless SelectItemsSegment.findSelectItemSegments\r\n\r\n* code style for AggregationDistinctQueryResult\r\n\r\n* code style for AggregationDistinctQueryResult\r\n\r\n* remove DistinctQueryResult.divide()\r\n\r\n* remove useless DistinctQueryResult\r\n\r\n* use group by to process aggregation distinct\r\n\r\n* remove useless AggregationDistinctQueryResult\r\n\r\n* remove useless AggregationDistinctQueryMetaData\r\n\r\n* remove useless QueryResult.getQueryResultMetaData()\r\n\r\n* remove useless QueryRow.distinctColumnIndexes\r\n\r\n* remove useless QueryRow.distinctColumnIndexes\r\n\r\n* remove useless QueryRow.@EqualsAndHashCode\r\n\r\n* remove useless QueryRow\r\n\r\n* adjust constructor seq of DQLMergeEngine\r\n\r\n* refactor DQLMergeEngine's constructor\r\n\r\n* move ProjectionsContext.getColumnLabels() to ProjectionsContextEngine\r\n\r\n* remove DQLMergeEngine.tableMetas\r\n\r\n* refactor DQLMergeEngine\r\n\r\n* code style for ProjectionsContextEngine\r\n\r\n* #3550, update SERVER_VERSION of Sharding-Proxy (#3632)\r\n\r\n* Add maxVibrationOffset to LeafSnowflakeKeyGenerator (#3636)\r\n\r\n* #3640, fix missing milliseconds when reading (#3643)\r\n\r\n* #3640, fix missing milliseconds when reading\r\n\r\n* #3640, for test case\r\n\r\n* Uniform naming style for properties (#3649)\r\n\r\n* Decouple sharding-core-execute module and encrypt (#3654)\r\n\r\n* remove getter of StreamQueryResult.queryResultMetaData\r\n\r\n* refactor MemoryQueryResult\r\n\r\n* refactor StreamQueryResult\r\n\r\n* refactor StreamQueryResult\r\n\r\n* refactor MemoryQueryResult\r\n\r\n* refactor QueryResultMetaData\r\n\r\n* move decrypt from MemoryQueryResult & StreamQueryResult to EncryptResultSet, ShardingResultSet & JDBCDatabaseCommunicationEngine\r\n\r\n* remove useless SuppressWarnings\r\n\r\n* adjust method sequence of QueryResult\r\n\r\n* use MergedResult.getValue(columnIndex) instead of MergedResult.getValue(columnLabel)\r\n\r\n* remove useless MergedResult.getValue(columnLabel)\r\n\r\n* remove useless QueryResult.getValue(columnLabel)\r\n\r\n* decouple QueryResultMetaData and queryWithCipherColumn\r\n\r\n* remove QueryResultMetaData.queryWithCipherColumn\r\n\r\n* refactor QueryResultMetaData.findShardingEncryptorWithTable\r\n\r\n* remove QueryResultMetaData.getShardingEncryptor\r\n\r\n* remove QueryResultMetaData.columnLabelAndIndexes\r\n\r\n* remove QueryResultMetaData\r\n\r\n* remove QueryResultUtil\r\n\r\n* Update docker java version (#3652)\r\n\r\n* Update docker java version\r\n\r\n* Revert \"Update docker java version\"\r\n\r\nThis reverts commit 16c913b251db84bd5e87f863d86329af9f029547.\r\n\r\n* Change postgresql driver version\r\n\r\n* Remove QueryResult\u2018s fixture from merge test case (#3661)\r\n\r\n* remove useless throw exception for MergeEngineFactory\r\n\r\n* remove useless throw exception for MergeEngineFactoryTest\r\n\r\n* decouple MergeEngineFactoryTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple DALMergeEngineTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowCreateTableMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowDatabasesMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowOtherMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowTablesMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* refactor LogicTablesMergedResult's constructor\r\n\r\n* decouple DQLMergeEngineTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple StreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple MemoryQueryResultRowTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple MemoryMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByMemoryMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByRowComparatorTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByValueTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple IteratorStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple OrderByStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple OrderByValueTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple LimitDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple RowNumberDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple TopAndRowNumberDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* remove ResultSetBasedQueryResultFixture\r\n\r\n* decouple DescribeTableMergedResultTest and QueryResultBasedQueryResultFixture\r\n\r\n* remove QueryResultBasedQueryResultFixture\r\n\r\n* Decouple hook and route dependency for execute module (#3665)\r\n\r\n* decouple RouteUnit and SQLExecutionHook\r\n\r\n* decouple RouteUnit and StatementExecuteUnit\r\n\r\n* refactor SQLExecuteCallback.executeSQL\r\n\r\n* decouple RouteUnit and SQLExecutePrepareCallback\r\n\r\n* refactor SQLExecutePrepareCallback.createStatementExecuteUnit()\r\n\r\n* parse sqlserver keyword (#3667)\r\n\r\n* ci test (#3669)\r\n\r\n* Fixes #3671 (#3672)\r\n\r\n* remove useless constructor for ShowDatabasesMergedResult\r\n\r\n* refactor ShowDatabasesMergedResult\r\n\r\n* hide plain column for desc table\r\n\r\n* fix test case\r\n\r\n* Simplify memory merged result  (#3682)\r\n\r\n* for code style\r\n\r\n* pull up currentResultSetRow to MemoryMergedResult\r\n\r\n* remove useless labelAndIndexMap for MemoryMergedResult\r\n\r\n* refactor MemoryMergedResult.init()\r\n\r\n* pull up setCurrentResultSetRow to MemoryMergedResult\r\n\r\n* remove ShowIndexMergedResult, ShowTablesMergedResult & ShowTableStatusMergedResult\r\n\r\n* Fixes #2884 (#3663)\r\n\r\n* Fixes #2884\r\n* Fixes #2884, add test cases;\r\n* Format adjustment.\r\n* End file with a blank line.\r\n\r\n* load-table-metadata (#3684)\r\n\r\n* optimize orchestration datasource (#3685)\r\n\r\n* Decouple encrypt and sharding with ResultSet (#3688)\r\n\r\n* remove ShardingRule.isRoutingByHint()\r\n\r\n* refactor AbstractDataSourceAdapter.close()\r\n\r\n* remove useless getter for AbstractConnectionAdapter\r\n\r\n* decouple encrypt and sharding from ResultSet\r\n\r\n* clear code,delete no use empty judgment code. (#3690)\r\n\r\n* change TableMetaDataInitializer's getTables parameter error.\r\n\r\n* clear code,delete no use empty judgment code.\r\n\r\n* for code style (#3689)\r\n\r\n* fixes #3701, refactor ColumnMetaData class, remove notNull & autoIncrement fields. (#3705)\r\n\r\n* Standardize of merge engnie (#3709)\r\n\r\n* add LocalDataMergedResult\r\n\r\n* remove ShowDatabasesMergedResult's constructor of queryResults\r\n\r\n* refactor LocalDataMergedResult\r\n\r\n* add LocalDataMergedResult & SingleLocalDataMergedResult\r\n\r\n* remove LocalMergedResultAdapter\r\n\r\n* rename MergedResultMetaData to EncryptorMetaData\r\n\r\n* rename ShowOtherMergedResult to TransparentMergedResult\r\n\r\n* refactor test case for TransparentMergedResultTest\r\n\r\n* refactor SingleLocalDataMergedResultTest\r\n\r\n* add MultipleLocalDataMergedResultTest\r\n\r\n* add package name of encrypt.dal and encrypt.dql\r\n\r\n* rename EncryptMergeEngine to DQLEncryptMergeEngine\r\n\r\n* add generic for MemoryMergedResult\r\n\r\n* refactor EncryptResultSet's field as final\r\n\r\n* add desc table for encrypt only\r\n\r\n* refactor desc table for sharding + encrypt\r\n\r\n* remove DescribeTableMergedResult from DALMergeEngine\r\n\r\n* statement function strtodate (#3718)\r\n\r\n* Refactor: update a tiny issue (#3714)\r\n\r\n* Statement function base64 aesencrypt (#3726)\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* #3725, fix MemoryQueryResult wrong data type (#3728)\r\n\r\n* Encrypt statement column (#3715)\r\n\r\n* encrypt-statement-column\r\n\r\n* encrypt statement column\r\n\r\n* encrypt statement column\r\n\r\n* encrypte statement column\r\n\r\n* Check tableRule and throw error information friendly (#3734)\r\n\r\n* Encrypt select statement in operator (#3733)\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* Decouple Rewrite module with sharding and encrypt (#3741)\r\n\r\n* move getLogicAndActualTables from BaseShardingEngine to ShardingSQLRewriteEngine\r\n\r\n* refactor ShardingSQLRewriteEngine\r\n\r\n* add DefaultSQLBuilder and ShardingSQLBuilder\r\n\r\n* refactor DefaultSQLBuilder & ShardingSQLBuilder's input params\r\n\r\n* add AbstractSQLBuilder\r\n\r\n* split Alterable to LogicAndActualTablesAware and RoutingUnitAware\r\n\r\n* remove useless toString\r\n\r\n* split InsertValuesToken to ShardingInsertValuesToken & EncryptInsertValuesToken\r\n\r\n* Add Multilingual Settings (#3708)\r\n\r\n* feature[sharding-ui-frontend]:Support multilingual presentation #3266\r\n\r\n* refactor[sharding-ui-frontend]:Improve translation content\r\n\r\n* [sharding-ui-frontend]:Add Multilingual Settings\r\n\r\n* feature[sharding-ui-frontend]:Keep the name unified\r\n\r\n* Add new module shardingsphere-sql-rewriter (#3746)\r\n\r\n* add new module shardingsphere-sql-rewriter\r\n\r\n* rename package from org.apache.shardingsphere.core.rewrite ot org.apache.shardingsphere.sql.rewriter\r\n\r\n* rename package from org.apache.shardingsphere.core.rewrite ot org.apache.shardingsphere.sql.rewriter\r\n\r\n* add module shardingsphere-sql-rewriter-test\r\n\r\n* remove useless jaxb entity\r\n\r\n* rename EncryptRewriteAssertionsRootEntityLoader to RewriteAssertionsRootEntityLoader\r\n\r\n* refactor EncryptSQLRewriteEngineParameterizedTest\r\n\r\n* refactor EncryptSQLRewriteEngineParameterizedTest\r\n\r\n* add SQLRewriteEngineTestParameters\r\n\r\n* add AbstractSQLRewriteEngineParameterizedTest\r\n\r\n* refactor AbstractSQLRewriteEngineParameterizedTest.testParameters\r\n\r\n* add SQLRewriteEngineTestParameters.type\r\n\r\n* remove useless getter for AbstractSQLRewriteEngineParameterizedTest\r\n\r\n* rename SQLRewriteEngineParameterizedTest to SQLRewriterParameterizedTest\r\n\r\n* remove useless param from AbstractSQLRewriterParameterizedTest\r\n\r\n* rename AbstractSQLRewriterParameterizedTest.createSQLRewriteResults()\r\n\r\n* refactor EncryptSQLRewriterParameterizedTest\r\n\r\n* refactor EncryptSQLRewriterParameterizedTest\r\n\r\n* refactor pom of shardingsphere-sql-rewriter\r\n\r\n* use RelationMetas instead of TableMetas in rewriter module\r\n\r\n* add InsertValue\r\n\r\n* add ShardingInsertValue\r\n\r\n* decouple sharding-core-common & shardingsphere-sql-rewriter\r\n\r\n* rename package from org.apache.shardingsphere.sql.rewriter.feature to org.apache.shardingsphere.sql.rewriter\r\n\r\n* replace removed datasourceInfo\r\n", "commitDateTime": "2019-12-18 15:20:32", "authoredDateTime": "2019-12-18 15:20:32", "commitGitStats": [{"filePath": "jenkinsfile", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "pom.xml", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-core/database-time-service/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DataSourceInfo.java", "insertions": 0, "deletions": 35, "lines": 35}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DatabaseType.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ColumnMetaData.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/EncryptColumnMetaData.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ShardingGeneratedKeyColumnMetaData.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/DataSourceMetas.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MariaDBDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaData.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaData.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/EncryptRule.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java", "insertions": 1, "deletions": 12, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/encrypt/EncryptTable.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/keygen/SnowflakeShardingKeyGenerator.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/H2DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MariaDBDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MySQLDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/OracleDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/PostgreSQLDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQL92DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQLServerDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/ShardingSphereDataSourceMetaDataTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaDataTest.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaDataTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaDataTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetaDataTest.java", "insertions": 2, "deletions": 14, "lines": 16}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetasTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/EncryptRuleTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/TableRuleTest.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/encrypt/impl/EncryptTableTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/keygen/SnowflakeShardingKeyGeneratorTest.java", "insertions": 59, "deletions": 5, "lines": 64}, {"filePath": "sharding-core/sharding-core-entry/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-entry/src/main/java/org/apache/shardingsphere/core/BaseShardingEngine.java", "insertions": 17, "deletions": 40, "lines": 57}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/PreparedQueryShardingEngineTest.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/SimpleQueryShardingEngineTest.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteDataMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecutorService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingGroupExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingThreadFactoryBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/hook/SPISQLExecutionHook.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/hook/SQLExecutionHook.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataInitializer.java", "insertions": 4, "deletions": 12, "lines": 16}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataLoader.java", "insertions": 15, "deletions": 24, "lines": 39}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => sql}/StatementExecuteUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallback.java", "insertions": 22, "deletions": 12, "lines": 34}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteTemplate.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaData.java", "insertions": 0, "deletions": 219, "lines": 219}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResult.java", "insertions": 0, "deletions": 151, "lines": 151}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResult.java", "insertions": 0, "deletions": 186, "lines": 186}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 69, "deletions": 68, "lines": 137}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResult.java", "insertions": 14, "deletions": 52, "lines": 66}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaData.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 0, "deletions": 139, "lines": 139}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResult.java", "insertions": 45, "deletions": 75, "lines": 120}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRow.java", "insertions": 0, "deletions": 89, "lines": 89}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareTemplate.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteEngineTest.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/hook/SPISQLExecutionHookTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/hook/fixture/SQLExecutionHookFixture.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallbackTest.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaDataTest.java", "insertions": 0, "deletions": 129, "lines": 129}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResultTest.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResultTest.java", "insertions": 0, "deletions": 212, "lines": 212}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResultTest.java", "insertions": 240, "deletions": 99, "lines": 339}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaDataTest.java", "insertions": 0, "deletions": 117, "lines": 117}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 0, "deletions": 292, "lines": 292}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResultTest.java", "insertions": 95, "deletions": 158, "lines": 253}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRowTest.java", "insertions": 0, "deletions": 81, "lines": 81}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareTemplateTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-merge/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergeEngineFactory.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergedResult.java", "insertions": 0, "deletions": 31, "lines": 31}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngine.java", "insertions": 11, "deletions": 22, "lines": 33}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/common/MultipleLocalDataMergedResult.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/{show/LocalMergedResultAdapter.java => common/SingleLocalDataMergedResult.java}", "insertions": 25, "deletions": 17, "lines": 42}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/{show/ShowOtherMergedResult.java => common/TransparentMergedResult.java}", "insertions": 7, "deletions": 23, "lines": 30}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/LogicTablesMergedResult.java", "insertions": 10, "deletions": 31, "lines": 41}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowCreateTableMergedResult.java", "insertions": 4, "deletions": 11, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResult.java", "insertions": 0, "deletions": 84, "lines": 84}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowIndexMergedResult.java", "insertions": 0, "deletions": 57, "lines": 57}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowTableStatusMergedResult.java", "insertions": 0, "deletions": 61, "lines": 61}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowTablesMergedResult.java", "insertions": 0, "deletions": 58, "lines": 58}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngine.java", "insertions": 43, "deletions": 76, "lines": 119}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/DecoratorMergedResult.java", "insertions": 0, "deletions": 15, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/MemoryMergedResult.java", "insertions": 25, "deletions": 30, "lines": 55}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/StreamMergedResult.java", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResult.java", "insertions": 24, "deletions": 34, "lines": 58}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResult.java", "insertions": 2, "deletions": 16, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/AggregationUnitFactory.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctAverageAggregationUnit.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctCountAggregationUnit.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctSumAggregationUnit.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/orderby/CompareUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dal/DALEncryptMergeEngine.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/{dal/desc => encrypt/dal}/DescribeTableMergedResult.java", "insertions": 16, "deletions": 49, "lines": 65}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/{dal/show/ShowShardingCTLMergedResult.java => encrypt/dql/DQLEncryptMergeEngine.java}", "insertions": 10, "deletions": 15, "lines": 25}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dql/EncryptMergedResult.java", "insertions": 72, "deletions": 0, "lines": 72}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dql/EncryptorMetaData.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/MergeEngineFactoryTest.java", "insertions": 13, "deletions": 21, "lines": 34}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngineTest.java", "insertions": 12, "deletions": 15, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/MultipleLocalDataMergedResultTest.java", "insertions": 74, "deletions": 0, "lines": 74}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/SingleLocalDataMergedResultTest.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/TransparentMergedResultTest.java", "insertions": 79, "deletions": 0, "lines": 79}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/desc/DescribeTableMergedResultTest.java", "insertions": 0, "deletions": 201, "lines": 201}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowCreateTableMergedResultTest.java", "insertions": 31, "deletions": 52, "lines": 83}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResultTest.java", "insertions": 0, "deletions": 143, "lines": 143}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowOtherMergedResultTest.java", "insertions": 0, "deletions": 417, "lines": 417}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowTablesMergedResultTest.java", "insertions": 28, "deletions": 35, "lines": 63}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 95, "deletions": 137, "lines": 232}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/DecoratorMergedResultTest.java", "insertions": 0, "deletions": 19, "lines": 19}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/MemoryMergedResultTest.java", "insertions": 13, "deletions": 64, "lines": 77}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/MemoryQueryResultRowTest.java", "insertions": 5, "deletions": 15, "lines": 20}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/StreamMergedResultTest.java", "insertions": 20, "deletions": 373, "lines": 393}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/fixture/TestMemoryMergedResult.java", "insertions": 21, "deletions": 6, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 54, "deletions": 79, "lines": 133}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparatorTest.java", "insertions": 28, "deletions": 27, "lines": 55}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 74, "deletions": 103, "lines": 177}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByValueTest.java", "insertions": 10, "deletions": 16, "lines": 26}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/AggregationUnitFactoryTest.java", "insertions": 20, "deletions": 5, "lines": 25}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/iterator/IteratorStreamMergedResultTest.java", "insertions": 18, "deletions": 30, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 16, "deletions": 33, "lines": 49}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByValueTest.java", "insertions": 25, "deletions": 47, "lines": 72}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResultTest.java", "insertions": 19, "deletions": 43, "lines": 62}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResultTest.java", "insertions": 23, "deletions": 47, "lines": 70}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResultTest.java", "insertions": 27, "deletions": 51, "lines": 78}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/encrypt/dal/DescribeTableMergedResultTest.java", "insertions": 104, "deletions": 0, "lines": 104}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/DescribeQueryResultFixture.java", "insertions": 0, "deletions": 105, "lines": 105}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/TestQueryResult.java", "insertions": 0, "deletions": 229, "lines": 229}, {"filePath": "sharding-core/sharding-core-rewrite/pom.xml", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilder.java", "insertions": 0, "deletions": 92, "lines": 92}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/token/pojo/generic/InsertValuesToken.java", "insertions": 0, "deletions": 114, "lines": 114}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptCondition.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptConditionEngine.java", "insertions": 4, "deletions": 18, "lines": 22}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/aware/EncryptRuleAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/aware/QueryWithCipherColumnAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/context/EncryptSQLRewriteContextDecorator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/EncryptParameterRewriter.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/EncryptParameterRewriterBuilder.java", "insertions": 15, "deletions": 15, "lines": 30}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptAssignmentParameterRewriter.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptInsertValueParameterRewriter.java", "insertions": 26, "deletions": 13, "lines": 39}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptPredicateParameterRewriter.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/EncryptTokenGenerateBuilder.java", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/BaseEncryptSQLTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/AssistQueryAndPlainInsertColumnsTokenGenerator.java", "insertions": 20, "deletions": 11, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptAssignmentTokenGenerator.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptForUseDefaultInsertColumnsTokenGenerator.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptInsertValuesTokenGenerator.java", "insertions": 42, "deletions": 32, "lines": 74}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptPredicateColumnTokenGenerator.java", "insertions": 10, "deletions": 24, "lines": 34}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java", "insertions": 24, "deletions": 20, "lines": 44}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptProjectionTokenGenerator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/InsertCipherNameTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptAssignmentToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/encrypt/token/pojo/EncryptInsertValuesToken.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptLiteralAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptParameterAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptPredicateRightValueToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/aware/SQLRouteResultAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/aware/ShardingRuleAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/context/ShardingSQLRewriteContextDecorator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/engine/ShardingSQLRewriteEngine.java", "insertions": 14, "deletions": 17, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/ShardingParameterRewriterBuilder.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/impl/ShardingGeneratedKeyInsertValueParameterRewriter.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/impl/ShardingPaginationParameterRewriter.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/sql/ShardingSQLBuilder.java", "insertions": 95, "deletions": 0, "lines": 95}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/IgnoreForSingleRoute.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/AggregationDistinctTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/DistinctProjectionPrefixTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/IndexTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/OffsetTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/OrderByTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/ProjectionsTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/RowCountTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/generator/impl/InsertValuesTokenGenerator.java => sql/rewriter/sharding/token/generator/impl/ShardingInsertValuesTokenGenerator.java}", "insertions": 16, "deletions": 15, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/TableTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/BaseGeneratedKeyTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyAssignmentTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyForUseDefaultInsertColumnsTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyInsertColumnTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyInsertValuesTokenGenerator.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/LogicAndActualTablesAware.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/sql/token/pojo/Alterable.java => sql/rewriter/sharding/token/pojo/RoutingUnitAware.java}", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/AggregationDistinctToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/DistinctProjectionPrefixToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/GeneratedKeyAssignmentToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/GeneratedKeyInsertColumnToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/IndexToken.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/LiteralGeneratedKeyAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/OffsetToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/OrderByToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/ParameterMarkerGeneratedKeyAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/ProjectionsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/RowCountToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/{test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteAssertionsRootEntity.java => main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/impl/ShardingInsertValue.java}", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/impl/ShardingInsertValuesToken.java", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token => sql/rewriter/sharding/token/pojo/impl}/ShardingTokenGenerateBuilder.java", "insertions": 20, "deletions": 20, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/TableToken.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/EncryptSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 161, "lines": 161}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/MixSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 257, "lines": 257}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/ShardingSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 249, "lines": 249}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteAssertionEntity.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteInputEntity.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteOutputEntity.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptConditionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/encrypt/parameterized/EncryptSQLRewriterParameterizedTest.java", "insertions": 93, "deletions": 0, "lines": 93}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptLiteralAssignmentTokenTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptParameterAssignmentTokenTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptPredicateTokenTest.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/NormalEncryptorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/QueryAssistedEncryptorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/ShardingKeyGeneratorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/mix/parameterized/MixSQLRewriterParameterizedTest.java", "insertions": 124, "deletions": 0, "lines": 124}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/sharding/parameterized/ShardingSQLRewriterParameterizedTest.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/META-INF/services/org.apache.shardingsphere.spi.encrypt.ShardingEncryptor", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/META-INF/services/org.apache.shardingsphere.spi.keygen.ShardingKeyGenerator", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-core/sharding-core-route/pom.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ShardingRouter.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngine.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/DatabaseTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/hook/SPIRoutingHookTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/spi/SPITimeServiceTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/complex/ComplexRoutingEngineTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/AbstractSQLRouteTest.java", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-jdbc-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-proxy-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-ui-distribution/pom.xml", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-distribution/shardingsphere-src-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/pom.xml", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/engine/BaseIT.java", "insertions": 27, "deletions": 35, "lines": 62}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/env/IntegrateTestEnvironment.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env.properties", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractStatementExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutor.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutor.java", "insertions": 4, "deletions": 9, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactory.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutor.java", "insertions": 11, "deletions": 16, "lines": 27}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractResultSetAdapter.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/AbstractRuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/EncryptRuntimeContext.java", "insertions": 5, "deletions": 11, "lines": 16}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/RuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/ShardingRuntimeContext.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/ShardingDataSource.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSet.java", "insertions": 118, "deletions": 65, "lines": 183}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSet.java", "insertions": 67, "deletions": 27, "lines": 94}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatement.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ResultSetEncryptorMetaData.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 25, "deletions": 7, "lines": 32}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingStatement.java", "insertions": 23, "deletions": 6, "lines": 29}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/common/base/AbstractEncryptJDBCDatabaseAndTableTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractBaseExecutorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutorTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactoryTest.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/fixture/TestDataSource.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSetTest.java", "insertions": 33, "deletions": 37, "lines": 70}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatementTest.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatementTest.java", "insertions": 25, "deletions": 9, "lines": 34}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/jdbc_init.sql", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingRootInvokeHook.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHook.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-opentracing/src/test/java/org/apache/shardingsphere/opentracing/hook/OpenTracingRootInvokeHookTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/test/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHookTest.java", "insertions": 7, "deletions": 16, "lines": 23}, {"filePath": "sharding-orchestration/sharding-orchestration-config/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/pom.xml", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/java/org/apache/shardingsphere/orchestration/config/apollo/ApolloConfigCenterTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/resources/apollo-env.properties", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/resources/logback-test.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-zookeeper-curator/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSnowflakeKeyGenerator.java", "insertions": 18, "deletions": 7, "lines": 25}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGeneratorTest.java", "insertions": 87, "deletions": 87, "lines": 174}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSnowflakeKeyGeneratorTest.java", "insertions": 130, "deletions": 64, "lines": 194}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java", "insertions": 50, "deletions": 16, "lines": 66}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/QueryHeaderEncryptorMetaData.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallback.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxySQLExecuteCallback.java", "insertions": 3, "deletions": 28, "lines": 31}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/StatementExecutorWrapper.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/executor/BackendExecutorContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeader.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/LogicSchema.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/EncryptSchema.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/MasterSlaveSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/ShardingSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/TransparentSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ShowDatabasesBackendHandler.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowStatusExecutor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowTableStatusExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/show/ShardingCTLShowBackendHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallbackTest.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeaderTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-frontend/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/executor/UserExecutorGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/constant/MySQLServerInfo.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacket.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacketTest.java", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/codec/PostgreSQLPacketCodecEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/config/JdbcDataSourceConfiguration.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-sql-test/src/main/java/org/apache/shardingsphere/test/sql/loader/SQLCasesLoader.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dml/insert.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-bitronix/pom.xml", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/MariaDBXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/OracleXADataSourceDefinition.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/PostgreSQLXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/SQLServerXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-base/pom.xml", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/main/java/org/apache/shardingsphere/transaction/base/seata/at/SeataTransactionBroadcaster.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/main/java/org/apache/shardingsphere/transaction/base/seata/at/TransactionalSQLExecutionHook.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/test/java/org/apache/shardingsphere/transaction/base/seata/at/SeataATShardingTransactionManagerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/test/java/org/apache/shardingsphere/transaction/base/seata/at/TransactionalSQLExecutionHookTest.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "sharding-ui/sharding-ui-backend/pom.xml", "insertions": 34, "deletions": 31, "lines": 65}, {"filePath": "sharding-ui/sharding-ui-frontend/src/App.vue", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "sharding-ui/sharding-ui-frontend/src/components/Head/index.vue", "insertions": 20, "deletions": 17, "lines": 37}, {"filePath": "sharding-ui/sharding-ui-frontend/src/lang/en-US.js", "insertions": 23, "deletions": 4, "lines": 27}, {"filePath": "sharding-ui/sharding-ui-frontend/src/lang/zh-CN.js", "insertions": 25, "deletions": 6, "lines": 31}, {"filePath": "sharding-ui/sharding-ui-frontend/src/main.js", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/registry-center/module/registryCenter.vue", "insertions": 28, "deletions": 28, "lines": 56}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/rule-config/index.vue", "insertions": 9, "deletions": 8, "lines": 17}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/rule-config/module/schema.vue", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/index.vue", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/module/dataSource.vue", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/module/instance.vue", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/item/SelectItemsSegment.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/test/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/item/SelectItemsSegmentTest.java", "insertions": 0, "deletions": 41, "lines": 41}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/MySQLKeyword.g4", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/groupby/engine/GroupByContextEngine.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/ProjectionsContext.java", "insertions": 2, "deletions": 45, "lines": 47}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/engine/ProjectionsContextEngine.java", "insertions": 43, "deletions": 4, "lines": 47}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/statement/impl/SelectSQLStatementContext.java", "insertions": 0, "deletions": 10, "lines": 10}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/ProjectionsContextTest.java", "insertions": 11, "deletions": 115, "lines": 126}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/engine/ProjectionsContextEngineTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/statement/impl/SelectSQLStatementContextTest.java", "insertions": 2, "deletions": 20, "lines": 22}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-sqlserver/src/main/antlr4/imports/sqlserver/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sharding/dml/insert.xml", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sharding/dml/select.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "shardingsphere-sql-rewriter/pom.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/pom.xml", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/context/SQLRewriteContext.java", "insertions": 18, "deletions": 29, "lines": 47}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/context/SQLRewriteContextDecorator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/SQLRewriteEngine.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/SQLRewriteResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/impl/DefaultSQLRewriteEngine.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/ParameterBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/impl/GroupedParameterBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/impl/StandardParameterBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/rewriter/ParameterRewriter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/rewriter/ParameterRewriterBuilder.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/SQLBuilder.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/impl/AbstractSQLBuilder.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/impl/DefaultSQLBuilder.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/CollectionSQLTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/OptionalSQLTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/SQLTokenGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/SQLTokenGenerators.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/aware/ParametersAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/aware/PreviousSQLTokensAware.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/token/generator/aware/TableMetasAware.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/generator/aware/RelationMetasAware.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/builder/DefaultTokenGeneratorBuilder.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/builder/SQLTokenGeneratorBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/generic/RemoveTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/Attachable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/SQLToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/Substitutable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/InsertColumnsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/pojo/generic/InsertValue.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/pojo/generic/InsertValuesToken.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/RemoveToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/SubstitutableColumnNameToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/UseDefaultInsertColumnsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilderTest.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter/impl/DefaultSQLBuilderTest.java", "insertions": 11, "deletions": 13, "lines": 24}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameter/builder => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter}/impl/GroupedParameterBuilderTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameter/builder => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter}/impl/StandardParameterBuilderTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/pom.xml", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/AbstractSQLRewriterParameterizedTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/parameter/SQLRewriteEngineTestParameters.java", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/parameter/SQLRewriteEngineTestParametersBuilder.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteAssertionEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteAssertionsRootEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteInputEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteOutputEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/loader/EncryptRewriteAssertionsRootEntityLoader.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/loader/RewriteAssertionsRootEntityLoader.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "org.antlr.v4.runtime.tree.TerminalNodeImpl cannot be cast to org.antlr.v4.runtime.ParserRuleContext", "body": "## Bug Report\r\n\r\n**Shardingjdbc 4.0.0-RC2**, \r\n\r\n \r\n### Mybtais sql like: \r\n  insert into users set\r\n            order_id = #{orim.orderId,jdbcType=BIGINT},\r\n            s_id = #{orim.sId,jdbcType=BIGINT},\r\n            `name` = CONVERT(to_base64(aes_encrypt(#{orim.`name`,jdbcType=VARCHAR},\r\n#{dataSecret,jdbcType=VARCHAR})) USING utf8),\r\n            addr = #{orim.Addr,jdbcType=VARCHAR},\r\n            mobile = CONVERT(to_base64(aes_encrypt(#{orim.mobile,jdbcType=VARCHAR},\r\n#{dataSecret,jdbcType=VARCHAR})) USING utf8),\r\n            tel =  CONVERT(to_base64(aes_encrypt(#{orim.tel,jdbcType=VARCHAR},\r\n#{dataSecret,jdbcType=VARCHAR})) USING utf8)\r\n        ON DUPLICATE KEY UPDATE\r\n          `name`=values(`name`),\r\n          addr=values(addr),\r\n          mobile=values(mobile),\r\n          tel=values(tel)\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingJDBC did you use?\r\n4.0.0-RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nCaused by: java.lang.ClassCastException: org.antlr.v4.runtime.tree.TerminalNodeImpl cannot be cast to org.antlr.v4.runtime.ParserRuleContext\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.impl.dml.update.AssignmentExtractor.extract(AssignmentExtractor.java:52) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.impl.dml.update.SetAssignmentsExtractor.extract(SetAssignmentsExtractor.java:49) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:47) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.core.parse.core.SQLParseKernel.parse(SQLParseKernel.java:62) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.core.parse.SQLParseEngine.parse0(SQLParseEngine.java:71) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.core.parse.SQLParseEngine.parse(SQLParseEngine.java:53) ~[sharding-core-parse-common-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.parse(ParsingSQLRouter.java:66) ~[sharding-core-route-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:64) ~[sharding-core-route-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60) ~[sharding-core-entry-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:86) ~[sharding-core-entry-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:70) ~[sharding-core-entry-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224) ~[sharding-jdbc-core-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:170) ~[sharding-jdbc-core-4.0.0-RC2.jar:4.0.0-RC2]\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47) ~[mybatis-3.5.2.jar:3.5.2]\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74) ~[mybatis-3.5.2.jar:3.5.2]\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50) ~[mybatis-3.5.2.jar:3.5.2]\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117) ~[mybatis-3.5.2.jar:3.5.2]\r\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76) ~[mybatis-3.5.2.jar:3.5.2]\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197) ~[mybatis-3.5.2.jar:3.5.2]\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184) ~[mybatis-3.5.2.jar:3.5.2]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.2.jar:2.0.2]\r\n\tat com.sun.proxy.$Proxy80.insert(Unknown Source) ~[?:?]\r\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271) ~[mybatis-spring-2.0.2.jar:2.0.2]\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62) ~[mybatis-3.5.2.jar:3.5.2]\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:57) ~[mybatis-3.5.2.jar:3.5.2]\r\n\tat com.sun.proxy.$Proxy81.insertWithEncrypt(Unknown Source) ~[?:?]\r\n\tat com.yundasys.order.service.impl.OrderServiceImpl.saveDesensitizedOrder2DB(OrderServiceImpl.java:393) ~[classes/:?]\r\n\tat com.yundasys.order.kafka.OrderConsumer.saveOrder2DB(OrderConsumer.java:46) ~[classes/:?]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_211]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_211]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_211]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_211]\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.1.8.RELEASE.jar:5.1.8.RELEASE]\r\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.1.8.RELEASE.jar:5.1.8.RELEASE]\r\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE]\r\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:283) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE]\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:79) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE]\r\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1275) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1258) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE]\r\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1219) ~[spring-kafka-2.2.7.RELEASE.jar:2.2.7.RELEASE]\r\n\t... 9 more\r\n", "url": "https://github.com/apache/shardingsphere/issues/3724", "user": "yhsmy", "labels": ["SQL parse", "bug"], "created": "2019-12-12 03:49:35", "closed": "2019-12-12 06:38:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Can not use MySQL function named STR_TO_DATE  for insert statements", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nexecute SQL successfully\r\n### Actual behavior\r\n```\r\nError updating database.  Cause: java.sql.SQLException: No value specified for parameter 2\r\n```\r\n### Example codes.\r\nmybatis mapper:\r\n```\r\n<insert id=\"test\">\r\n    insert into test (`date`, `value` ) values (STR_TO_DATE(#{date},'%Y-%m-%d'),#{value})\r\n</insert>\r\n```\r\ndao:\r\n```\r\npublic interface MapperTest{\r\nint test(@Param(\"date\")String date,@Param(\"value\")String value);\r\n}\r\n```\r\ntest:\r\n```\r\n@RunWith(SpringJUnit4ClassRunner.class)\r\n@SpringBootTest(classes = TestApplication.class)\r\npublic class MapperTest {\r\n\r\n    @Autowired\r\n    private MapperTest mapperTest;\r\n\r\n    @Test\r\n    public void test(){\r\n        mapperTest.test(\"2017-01-06\",\"test\");\r\n    }\r\n}\r\n```\r\nresult log:\r\n```\r\n2019-12-11 15:37:24,521  INFO  50931 --- [           main] ShardingSphere-SQL                         99: [] Rule Type: sharding\r\n2019-12-11 15:37:24,521  INFO  50931 --- [           main] ShardingSphere-SQL                         99: [] Logic SQL: insert into test    (    `date`,    `value`    )    values (STR_TO_DATE(?,'%Y-%m-%d'),?    )\r\n2019-12-11 15:37:24,521  INFO  50931 --- [           main] ShardingSphere-SQL                         99: [] SQLStatement: InsertSQLStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.core.parse.sql.statement.dml.InsertStatement@3741a170, tablesContext=TablesContext(tables=[Table(name=test, alias=Optional.absent())], schema=Optional.absent())), columnNames=[date, value], insertValueContexts=[InsertValueContext(parametersCount=1, valueExpressions=[CommonExpressionSegment(startIndex=65, stopIndex=89, text=STR_TO_DATE(?,'%Y-%m-%d')), ParameterMarkerExpressionSegment(startIndex=91, stopIndex=91, parameterMarkerIndex=1)], parameters=[2017-01-06])])\r\n2019-12-11 15:37:24,521  INFO  50931 --- [           main] ShardingSphere-SQL                         99: [] Actual SQL: testDataSource ::: insert into test    (    `date`,    `value`    )    values (STR_TO_DATE(?,'%Y-%m-%d'), ?) ::: [2017-01-06]\r\n2019-12-11 15:37:24,562 ERROR  50972 --- [           main] druid.sql.Statement                       149: [] {conn-10020, pstmt-20000} execute error. insert into test    (    `date`,    `value`    )    values (STR_TO_DATE(?,'%Y-%m-%d'), ?)\r\njava.sql.SQLException: No value specified for parameter 2\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:963)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:896)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:885)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)\r\n\tat com.mysql.jdbc.PreparedStatement.checkAllParametersSet(PreparedStatement.java:2205)\r\n\tat com.mysql.jdbc.PreparedStatement.fillSendPacket(PreparedStatement.java:2185)\r\n\tat com.mysql.jdbc.PreparedStatement.fillSendPacket(PreparedStatement.java:2115)\r\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1158)\r\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)\r\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\r\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)\r\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\r\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.SQLExecuteCallbackFactory$2.executeSQL(SQLExecuteCallbackFactory.java:65)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.SQLExecuteCallbackFactory$2.executeSQL(SQLExecuteCallbackFactory.java:61)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:68)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:57)\r\n\tat org.apache.shardingsphere.core.execute.ShardingExecuteEngine.syncGroupExecute(ShardingExecuteEngine.java:125)\r\n\tat org.apache.shardingsphere.core.execute.ShardingExecuteEngine.parallelExecute(ShardingExecuteEngine.java:102)\r\n\tat org.apache.shardingsphere.core.execute.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:83)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:73)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:56)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.AbstractStatementExecutor.executeCallback(AbstractStatementExecutor.java:134)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:158)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:165)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\r\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)\r\n\tat com.sun.proxy.$Proxy114.insert(Unknown Source)\r\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)\r\n```", "url": "https://github.com/apache/shardingsphere/issues/3716", "user": "GungnirLaevatain", "labels": ["SQL parse", "bug"], "created": "2019-12-11 07:55:38", "closed": "2019-12-11 10:30:49", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Hide plain column for SQL: DESC table", "body": "Current version(4.0.0-RC3) can convert cipher column to logic column for encrypt for SQL DESC table, and can hide query assist column, but do not process with plain column.\r\nWe need to hide plain column too, `DESC table` should show logic column only for encrypt.\r\n", "url": "https://github.com/apache/shardingsphere/issues/3671", "user": "terrymanu", "labels": ["bug", "encrypt"], "created": "2019-12-05 10:43:40", "closed": "2019-12-05 14:57:18", "commits": {"8542822c36ae8c60a8d9a584d90c0b78462e802a": {"commitGHEventType": "closed", "commitUser": "tuohai666"}, "a41f4370470739aabef7079c3b20af5d24095eac": {"commitGHEventType": "referenced", "commitUser": "avalon566"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8542822c36ae8c60a8d9a584d90c0b78462e802a", "commitGHEventType": "closed", "commitUser": "tuohai666", "commitParents": ["640a4f77d8ce60860ee6b82d0c0109899b93bc50"], "nameRev": "8542822c36ae8c60a8d9a584d90c0b78462e802a tags/4.0.0~47", "commitMessage": "Fixes #3671 (#3672)\n\n* remove useless constructor for ShowDatabasesMergedResult\r\n\r\n* refactor ShowDatabasesMergedResult\r\n\r\n* hide plain column for desc table\r\n\r\n* fix test case\r\n", "commitDateTime": "2019-12-05 22:57:14", "authoredDateTime": "2019-12-05 22:57:14", "commitGitStats": [{"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/desc/DescribeTableMergedResult.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResult.java", "insertions": 19, "deletions": 22, "lines": 41}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/desc/DescribeTableMergedResultTest.java", "insertions": 7, "deletions": 11, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResultTest.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ShowDatabasesBackendHandler.java", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DALMergeEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.DALMergeEngine.merge()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DescribeTableMergedResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.desc.DescribeTableMergedResult.optimize(org.apache.shardingsphere.core.execute.sql.execute.result.QueryResult)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "ShowDatabasesMergedResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.show.ShowDatabasesMergedResult", "TOT": 9, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.show.ShowDatabasesMergedResult.convertToScheme(java.util.List)", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.show.ShowDatabasesMergedResult.next()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.show.ShowDatabasesMergedResult.getValue(int,java.lang.Class)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "DescribeTableMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.desc.DescribeTableMergedResultTest.assertFieldWithoutEncryptRule()", "TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.desc.DescribeTableMergedResultTest.assertAllWithoutEncryptRule()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.desc.DescribeTableMergedResultTest.createShardingRuleWithoutEncryptRule()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.desc.DescribeTableMergedResultTest.createShardingRuleWithEncryptRule()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.desc.DescribeTableMergedResultTest.createQueryResult()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShowDatabasesMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.show.ShowDatabasesMergedResultTest.setUp()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dal.show.ShowDatabasesMergedResultTest.buildMergedShowDatabasesMergedResult()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ShowDatabasesBackendHandler.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.admin.ShowDatabasesBackendHandler.getSchemaNames()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.admin.ShowDatabasesBackendHandler.execute()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a41f4370470739aabef7079c3b20af5d24095eac", "commitGHEventType": "referenced", "commitUser": "avalon566", "commitParents": ["0e2aa9140101d051d5c4bf1532ce6dc052c446cf"], "nameRev": "a41f4370470739aabef7079c3b20af5d24095eac tags/shardingsphere-ui-4.1.0~252^2~39", "commitMessage": "Sharding scaling synchronize main branch (#3754)\n\n* Correct mismatched comments (#3594)\r\n\r\n* #3587, cache DataSourceMetaData (#3588)\r\n\r\n* #3587, cache DataSourceMetaData\r\n\r\n* #3587, add test case\r\n\r\n* fixes apollo debug & warn log, control log out by slf4j xml file. (#3583)\r\n\r\n* fixes apollo debug & warn log.\r\n\r\n* Move jul-to-slf4j -> root pom.\r\n\r\n* fixes jul-to-slf4j scope -> compile.\r\n\r\n* remove maven default scope.\r\n\r\n* Update snowflake algorithm to support modulus of 2^n  (#3595)\r\n\r\n* update vibration offset\r\n\r\n* add vibration offset test case\r\n\r\n* update vibration offset\r\n\r\n* update vibration offset\r\n\r\n* modify vibration offset test case\r\n\r\n* modify vibration offset test case\r\n\r\n* Refactor metadata (#3604)\r\n\r\n* decouple DatabaseType and DataSourceInfo\r\n\r\n* fix use == for string equals\r\n\r\n* decouple DataSourceMetaData and DataSourceInfo\r\n\r\n* fix javadoc\r\n\r\n* refactor LogicSchema.getDataSourceInfoMap()\r\n\r\n* reuse DatabaseAccessConfiguration and remove DataSourceInfo\r\n\r\n* refactor SQLExecuteCallback\r\n\r\n* change TableMetaDataInitializer's getTables parameter error. (#3589)\r\n\r\n* Modify SnowflakeShardingKeyGeneratorTest Unit-test case (#3610)\r\n\r\n* make all pom files consist (#3614)\r\n\r\n* make consist with pom\r\n\r\n* make consist with pom\r\n\r\n* adjust dependency sequence of ui-backend\r\n\r\n* for code style\r\n\r\n* ignore db test (#3615)\r\n\r\n* simplify test case assertLastDigitalOfGenerateKeySameMillisecond (#3616)\r\n\r\n* support SELECT DATABASE() (#3622)\r\n\r\n* Fixes #3627 (#3629)\r\n\r\n* move StatementExecuteUnit to sql package\r\n\r\n* move ShardingExecuteEngine to engine package\r\n\r\n* for code style\r\n\r\n* rename QueryResultBasedQueryResultFixture and ResultSetBasedQueryResultFixture\r\n\r\n* refactor DistinctQueryResult.getQueryRows()\r\n\r\n* skip distinct merge for group by and aggregation only\r\n\r\n* add DQLMergeEngine.isNeedProcessOrderBy\r\n\r\n* use group by to merge distinct row\r\n\r\n* add DQLMergeEngine.setGroupByForDistinctRow\r\n\r\n* remove useless SelectItemsSegment.findSelectItemSegments\r\n\r\n* code style for AggregationDistinctQueryResult\r\n\r\n* code style for AggregationDistinctQueryResult\r\n\r\n* remove DistinctQueryResult.divide()\r\n\r\n* remove useless DistinctQueryResult\r\n\r\n* use group by to process aggregation distinct\r\n\r\n* remove useless AggregationDistinctQueryResult\r\n\r\n* remove useless AggregationDistinctQueryMetaData\r\n\r\n* remove useless QueryResult.getQueryResultMetaData()\r\n\r\n* remove useless QueryRow.distinctColumnIndexes\r\n\r\n* remove useless QueryRow.distinctColumnIndexes\r\n\r\n* remove useless QueryRow.@EqualsAndHashCode\r\n\r\n* remove useless QueryRow\r\n\r\n* adjust constructor seq of DQLMergeEngine\r\n\r\n* refactor DQLMergeEngine's constructor\r\n\r\n* move ProjectionsContext.getColumnLabels() to ProjectionsContextEngine\r\n\r\n* remove DQLMergeEngine.tableMetas\r\n\r\n* refactor DQLMergeEngine\r\n\r\n* code style for ProjectionsContextEngine\r\n\r\n* #3550, update SERVER_VERSION of Sharding-Proxy (#3632)\r\n\r\n* Add maxVibrationOffset to LeafSnowflakeKeyGenerator (#3636)\r\n\r\n* #3640, fix missing milliseconds when reading (#3643)\r\n\r\n* #3640, fix missing milliseconds when reading\r\n\r\n* #3640, for test case\r\n\r\n* Uniform naming style for properties (#3649)\r\n\r\n* Decouple sharding-core-execute module and encrypt (#3654)\r\n\r\n* remove getter of StreamQueryResult.queryResultMetaData\r\n\r\n* refactor MemoryQueryResult\r\n\r\n* refactor StreamQueryResult\r\n\r\n* refactor StreamQueryResult\r\n\r\n* refactor MemoryQueryResult\r\n\r\n* refactor QueryResultMetaData\r\n\r\n* move decrypt from MemoryQueryResult & StreamQueryResult to EncryptResultSet, ShardingResultSet & JDBCDatabaseCommunicationEngine\r\n\r\n* remove useless SuppressWarnings\r\n\r\n* adjust method sequence of QueryResult\r\n\r\n* use MergedResult.getValue(columnIndex) instead of MergedResult.getValue(columnLabel)\r\n\r\n* remove useless MergedResult.getValue(columnLabel)\r\n\r\n* remove useless QueryResult.getValue(columnLabel)\r\n\r\n* decouple QueryResultMetaData and queryWithCipherColumn\r\n\r\n* remove QueryResultMetaData.queryWithCipherColumn\r\n\r\n* refactor QueryResultMetaData.findShardingEncryptorWithTable\r\n\r\n* remove QueryResultMetaData.getShardingEncryptor\r\n\r\n* remove QueryResultMetaData.columnLabelAndIndexes\r\n\r\n* remove QueryResultMetaData\r\n\r\n* remove QueryResultUtil\r\n\r\n* Update docker java version (#3652)\r\n\r\n* Update docker java version\r\n\r\n* Revert \"Update docker java version\"\r\n\r\nThis reverts commit 16c913b251db84bd5e87f863d86329af9f029547.\r\n\r\n* Change postgresql driver version\r\n\r\n* Remove QueryResult\u2018s fixture from merge test case (#3661)\r\n\r\n* remove useless throw exception for MergeEngineFactory\r\n\r\n* remove useless throw exception for MergeEngineFactoryTest\r\n\r\n* decouple MergeEngineFactoryTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple DALMergeEngineTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowCreateTableMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowDatabasesMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowOtherMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowTablesMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* refactor LogicTablesMergedResult's constructor\r\n\r\n* decouple DQLMergeEngineTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple StreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple MemoryQueryResultRowTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple MemoryMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByMemoryMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByRowComparatorTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByValueTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple IteratorStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple OrderByStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple OrderByValueTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple LimitDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple RowNumberDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple TopAndRowNumberDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* remove ResultSetBasedQueryResultFixture\r\n\r\n* decouple DescribeTableMergedResultTest and QueryResultBasedQueryResultFixture\r\n\r\n* remove QueryResultBasedQueryResultFixture\r\n\r\n* Decouple hook and route dependency for execute module (#3665)\r\n\r\n* decouple RouteUnit and SQLExecutionHook\r\n\r\n* decouple RouteUnit and StatementExecuteUnit\r\n\r\n* refactor SQLExecuteCallback.executeSQL\r\n\r\n* decouple RouteUnit and SQLExecutePrepareCallback\r\n\r\n* refactor SQLExecutePrepareCallback.createStatementExecuteUnit()\r\n\r\n* parse sqlserver keyword (#3667)\r\n\r\n* ci test (#3669)\r\n\r\n* Fixes #3671 (#3672)\r\n\r\n* remove useless constructor for ShowDatabasesMergedResult\r\n\r\n* refactor ShowDatabasesMergedResult\r\n\r\n* hide plain column for desc table\r\n\r\n* fix test case\r\n\r\n* Simplify memory merged result  (#3682)\r\n\r\n* for code style\r\n\r\n* pull up currentResultSetRow to MemoryMergedResult\r\n\r\n* remove useless labelAndIndexMap for MemoryMergedResult\r\n\r\n* refactor MemoryMergedResult.init()\r\n\r\n* pull up setCurrentResultSetRow to MemoryMergedResult\r\n\r\n* remove ShowIndexMergedResult, ShowTablesMergedResult & ShowTableStatusMergedResult\r\n\r\n* Fixes #2884 (#3663)\r\n\r\n* Fixes #2884\r\n* Fixes #2884, add test cases;\r\n* Format adjustment.\r\n* End file with a blank line.\r\n\r\n* load-table-metadata (#3684)\r\n\r\n* optimize orchestration datasource (#3685)\r\n\r\n* Decouple encrypt and sharding with ResultSet (#3688)\r\n\r\n* remove ShardingRule.isRoutingByHint()\r\n\r\n* refactor AbstractDataSourceAdapter.close()\r\n\r\n* remove useless getter for AbstractConnectionAdapter\r\n\r\n* decouple encrypt and sharding from ResultSet\r\n\r\n* clear code,delete no use empty judgment code. (#3690)\r\n\r\n* change TableMetaDataInitializer's getTables parameter error.\r\n\r\n* clear code,delete no use empty judgment code.\r\n\r\n* for code style (#3689)\r\n\r\n* fixes #3701, refactor ColumnMetaData class, remove notNull & autoIncrement fields. (#3705)\r\n\r\n* Standardize of merge engnie (#3709)\r\n\r\n* add LocalDataMergedResult\r\n\r\n* remove ShowDatabasesMergedResult's constructor of queryResults\r\n\r\n* refactor LocalDataMergedResult\r\n\r\n* add LocalDataMergedResult & SingleLocalDataMergedResult\r\n\r\n* remove LocalMergedResultAdapter\r\n\r\n* rename MergedResultMetaData to EncryptorMetaData\r\n\r\n* rename ShowOtherMergedResult to TransparentMergedResult\r\n\r\n* refactor test case for TransparentMergedResultTest\r\n\r\n* refactor SingleLocalDataMergedResultTest\r\n\r\n* add MultipleLocalDataMergedResultTest\r\n\r\n* add package name of encrypt.dal and encrypt.dql\r\n\r\n* rename EncryptMergeEngine to DQLEncryptMergeEngine\r\n\r\n* add generic for MemoryMergedResult\r\n\r\n* refactor EncryptResultSet's field as final\r\n\r\n* add desc table for encrypt only\r\n\r\n* refactor desc table for sharding + encrypt\r\n\r\n* remove DescribeTableMergedResult from DALMergeEngine\r\n\r\n* statement function strtodate (#3718)\r\n\r\n* Refactor: update a tiny issue (#3714)\r\n\r\n* Statement function base64 aesencrypt (#3726)\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* #3725, fix MemoryQueryResult wrong data type (#3728)\r\n\r\n* Encrypt statement column (#3715)\r\n\r\n* encrypt-statement-column\r\n\r\n* encrypt statement column\r\n\r\n* encrypt statement column\r\n\r\n* encrypte statement column\r\n\r\n* Check tableRule and throw error information friendly (#3734)\r\n\r\n* Encrypt select statement in operator (#3733)\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* Decouple Rewrite module with sharding and encrypt (#3741)\r\n\r\n* move getLogicAndActualTables from BaseShardingEngine to ShardingSQLRewriteEngine\r\n\r\n* refactor ShardingSQLRewriteEngine\r\n\r\n* add DefaultSQLBuilder and ShardingSQLBuilder\r\n\r\n* refactor DefaultSQLBuilder & ShardingSQLBuilder's input params\r\n\r\n* add AbstractSQLBuilder\r\n\r\n* split Alterable to LogicAndActualTablesAware and RoutingUnitAware\r\n\r\n* remove useless toString\r\n\r\n* split InsertValuesToken to ShardingInsertValuesToken & EncryptInsertValuesToken\r\n\r\n* Add Multilingual Settings (#3708)\r\n\r\n* feature[sharding-ui-frontend]:Support multilingual presentation #3266\r\n\r\n* refactor[sharding-ui-frontend]:Improve translation content\r\n\r\n* [sharding-ui-frontend]:Add Multilingual Settings\r\n\r\n* feature[sharding-ui-frontend]:Keep the name unified\r\n\r\n* Add new module shardingsphere-sql-rewriter (#3746)\r\n\r\n* add new module shardingsphere-sql-rewriter\r\n\r\n* rename package from org.apache.shardingsphere.core.rewrite ot org.apache.shardingsphere.sql.rewriter\r\n\r\n* rename package from org.apache.shardingsphere.core.rewrite ot org.apache.shardingsphere.sql.rewriter\r\n\r\n* add module shardingsphere-sql-rewriter-test\r\n\r\n* remove useless jaxb entity\r\n\r\n* rename EncryptRewriteAssertionsRootEntityLoader to RewriteAssertionsRootEntityLoader\r\n\r\n* refactor EncryptSQLRewriteEngineParameterizedTest\r\n\r\n* refactor EncryptSQLRewriteEngineParameterizedTest\r\n\r\n* add SQLRewriteEngineTestParameters\r\n\r\n* add AbstractSQLRewriteEngineParameterizedTest\r\n\r\n* refactor AbstractSQLRewriteEngineParameterizedTest.testParameters\r\n\r\n* add SQLRewriteEngineTestParameters.type\r\n\r\n* remove useless getter for AbstractSQLRewriteEngineParameterizedTest\r\n\r\n* rename SQLRewriteEngineParameterizedTest to SQLRewriterParameterizedTest\r\n\r\n* remove useless param from AbstractSQLRewriterParameterizedTest\r\n\r\n* rename AbstractSQLRewriterParameterizedTest.createSQLRewriteResults()\r\n\r\n* refactor EncryptSQLRewriterParameterizedTest\r\n\r\n* refactor EncryptSQLRewriterParameterizedTest\r\n\r\n* refactor pom of shardingsphere-sql-rewriter\r\n\r\n* use RelationMetas instead of TableMetas in rewriter module\r\n\r\n* add InsertValue\r\n\r\n* add ShardingInsertValue\r\n\r\n* decouple sharding-core-common & shardingsphere-sql-rewriter\r\n\r\n* rename package from org.apache.shardingsphere.sql.rewriter.feature to org.apache.shardingsphere.sql.rewriter\r\n\r\n* replace removed datasourceInfo\r\n", "commitDateTime": "2019-12-18 15:20:32", "authoredDateTime": "2019-12-18 15:20:32", "commitGitStats": [{"filePath": "jenkinsfile", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "pom.xml", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-core/database-time-service/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DataSourceInfo.java", "insertions": 0, "deletions": 35, "lines": 35}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DatabaseType.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ColumnMetaData.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/EncryptColumnMetaData.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ShardingGeneratedKeyColumnMetaData.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/DataSourceMetas.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MariaDBDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaData.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaData.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/EncryptRule.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java", "insertions": 1, "deletions": 12, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/encrypt/EncryptTable.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/keygen/SnowflakeShardingKeyGenerator.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/H2DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MariaDBDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MySQLDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/OracleDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/PostgreSQLDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQL92DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQLServerDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/ShardingSphereDataSourceMetaDataTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaDataTest.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaDataTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaDataTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetaDataTest.java", "insertions": 2, "deletions": 14, "lines": 16}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetasTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/EncryptRuleTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/TableRuleTest.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/encrypt/impl/EncryptTableTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/keygen/SnowflakeShardingKeyGeneratorTest.java", "insertions": 59, "deletions": 5, "lines": 64}, {"filePath": "sharding-core/sharding-core-entry/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-entry/src/main/java/org/apache/shardingsphere/core/BaseShardingEngine.java", "insertions": 17, "deletions": 40, "lines": 57}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/PreparedQueryShardingEngineTest.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/SimpleQueryShardingEngineTest.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteDataMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecutorService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingGroupExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingThreadFactoryBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/hook/SPISQLExecutionHook.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/hook/SQLExecutionHook.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataInitializer.java", "insertions": 4, "deletions": 12, "lines": 16}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataLoader.java", "insertions": 15, "deletions": 24, "lines": 39}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => sql}/StatementExecuteUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallback.java", "insertions": 22, "deletions": 12, "lines": 34}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteTemplate.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaData.java", "insertions": 0, "deletions": 219, "lines": 219}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResult.java", "insertions": 0, "deletions": 151, "lines": 151}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResult.java", "insertions": 0, "deletions": 186, "lines": 186}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 69, "deletions": 68, "lines": 137}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResult.java", "insertions": 14, "deletions": 52, "lines": 66}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaData.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 0, "deletions": 139, "lines": 139}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResult.java", "insertions": 45, "deletions": 75, "lines": 120}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRow.java", "insertions": 0, "deletions": 89, "lines": 89}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareTemplate.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteEngineTest.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/hook/SPISQLExecutionHookTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/hook/fixture/SQLExecutionHookFixture.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallbackTest.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaDataTest.java", "insertions": 0, "deletions": 129, "lines": 129}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResultTest.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResultTest.java", "insertions": 0, "deletions": 212, "lines": 212}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResultTest.java", "insertions": 240, "deletions": 99, "lines": 339}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaDataTest.java", "insertions": 0, "deletions": 117, "lines": 117}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 0, "deletions": 292, "lines": 292}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResultTest.java", "insertions": 95, "deletions": 158, "lines": 253}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRowTest.java", "insertions": 0, "deletions": 81, "lines": 81}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareTemplateTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-merge/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergeEngineFactory.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergedResult.java", "insertions": 0, "deletions": 31, "lines": 31}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngine.java", "insertions": 11, "deletions": 22, "lines": 33}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/common/MultipleLocalDataMergedResult.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/{show/LocalMergedResultAdapter.java => common/SingleLocalDataMergedResult.java}", "insertions": 25, "deletions": 17, "lines": 42}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/{show/ShowOtherMergedResult.java => common/TransparentMergedResult.java}", "insertions": 7, "deletions": 23, "lines": 30}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/LogicTablesMergedResult.java", "insertions": 10, "deletions": 31, "lines": 41}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowCreateTableMergedResult.java", "insertions": 4, "deletions": 11, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResult.java", "insertions": 0, "deletions": 84, "lines": 84}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowIndexMergedResult.java", "insertions": 0, "deletions": 57, "lines": 57}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowTableStatusMergedResult.java", "insertions": 0, "deletions": 61, "lines": 61}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowTablesMergedResult.java", "insertions": 0, "deletions": 58, "lines": 58}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngine.java", "insertions": 43, "deletions": 76, "lines": 119}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/DecoratorMergedResult.java", "insertions": 0, "deletions": 15, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/MemoryMergedResult.java", "insertions": 25, "deletions": 30, "lines": 55}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/StreamMergedResult.java", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResult.java", "insertions": 24, "deletions": 34, "lines": 58}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResult.java", "insertions": 2, "deletions": 16, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/AggregationUnitFactory.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctAverageAggregationUnit.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctCountAggregationUnit.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctSumAggregationUnit.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/orderby/CompareUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dal/DALEncryptMergeEngine.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/{dal/desc => encrypt/dal}/DescribeTableMergedResult.java", "insertions": 16, "deletions": 49, "lines": 65}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/{dal/show/ShowShardingCTLMergedResult.java => encrypt/dql/DQLEncryptMergeEngine.java}", "insertions": 10, "deletions": 15, "lines": 25}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dql/EncryptMergedResult.java", "insertions": 72, "deletions": 0, "lines": 72}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dql/EncryptorMetaData.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/MergeEngineFactoryTest.java", "insertions": 13, "deletions": 21, "lines": 34}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngineTest.java", "insertions": 12, "deletions": 15, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/MultipleLocalDataMergedResultTest.java", "insertions": 74, "deletions": 0, "lines": 74}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/SingleLocalDataMergedResultTest.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/TransparentMergedResultTest.java", "insertions": 79, "deletions": 0, "lines": 79}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/desc/DescribeTableMergedResultTest.java", "insertions": 0, "deletions": 201, "lines": 201}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowCreateTableMergedResultTest.java", "insertions": 31, "deletions": 52, "lines": 83}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResultTest.java", "insertions": 0, "deletions": 143, "lines": 143}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowOtherMergedResultTest.java", "insertions": 0, "deletions": 417, "lines": 417}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowTablesMergedResultTest.java", "insertions": 28, "deletions": 35, "lines": 63}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 95, "deletions": 137, "lines": 232}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/DecoratorMergedResultTest.java", "insertions": 0, "deletions": 19, "lines": 19}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/MemoryMergedResultTest.java", "insertions": 13, "deletions": 64, "lines": 77}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/MemoryQueryResultRowTest.java", "insertions": 5, "deletions": 15, "lines": 20}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/StreamMergedResultTest.java", "insertions": 20, "deletions": 373, "lines": 393}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/fixture/TestMemoryMergedResult.java", "insertions": 21, "deletions": 6, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 54, "deletions": 79, "lines": 133}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparatorTest.java", "insertions": 28, "deletions": 27, "lines": 55}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 74, "deletions": 103, "lines": 177}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByValueTest.java", "insertions": 10, "deletions": 16, "lines": 26}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/AggregationUnitFactoryTest.java", "insertions": 20, "deletions": 5, "lines": 25}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/iterator/IteratorStreamMergedResultTest.java", "insertions": 18, "deletions": 30, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 16, "deletions": 33, "lines": 49}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByValueTest.java", "insertions": 25, "deletions": 47, "lines": 72}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResultTest.java", "insertions": 19, "deletions": 43, "lines": 62}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResultTest.java", "insertions": 23, "deletions": 47, "lines": 70}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResultTest.java", "insertions": 27, "deletions": 51, "lines": 78}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/encrypt/dal/DescribeTableMergedResultTest.java", "insertions": 104, "deletions": 0, "lines": 104}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/DescribeQueryResultFixture.java", "insertions": 0, "deletions": 105, "lines": 105}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/TestQueryResult.java", "insertions": 0, "deletions": 229, "lines": 229}, {"filePath": "sharding-core/sharding-core-rewrite/pom.xml", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilder.java", "insertions": 0, "deletions": 92, "lines": 92}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/token/pojo/generic/InsertValuesToken.java", "insertions": 0, "deletions": 114, "lines": 114}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptCondition.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptConditionEngine.java", "insertions": 4, "deletions": 18, "lines": 22}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/aware/EncryptRuleAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/aware/QueryWithCipherColumnAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/context/EncryptSQLRewriteContextDecorator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/EncryptParameterRewriter.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/EncryptParameterRewriterBuilder.java", "insertions": 15, "deletions": 15, "lines": 30}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptAssignmentParameterRewriter.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptInsertValueParameterRewriter.java", "insertions": 26, "deletions": 13, "lines": 39}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptPredicateParameterRewriter.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/EncryptTokenGenerateBuilder.java", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/BaseEncryptSQLTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/AssistQueryAndPlainInsertColumnsTokenGenerator.java", "insertions": 20, "deletions": 11, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptAssignmentTokenGenerator.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptForUseDefaultInsertColumnsTokenGenerator.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptInsertValuesTokenGenerator.java", "insertions": 42, "deletions": 32, "lines": 74}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptPredicateColumnTokenGenerator.java", "insertions": 10, "deletions": 24, "lines": 34}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java", "insertions": 24, "deletions": 20, "lines": 44}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptProjectionTokenGenerator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/InsertCipherNameTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptAssignmentToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/encrypt/token/pojo/EncryptInsertValuesToken.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptLiteralAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptParameterAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptPredicateRightValueToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/aware/SQLRouteResultAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/aware/ShardingRuleAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/context/ShardingSQLRewriteContextDecorator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/engine/ShardingSQLRewriteEngine.java", "insertions": 14, "deletions": 17, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/ShardingParameterRewriterBuilder.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/impl/ShardingGeneratedKeyInsertValueParameterRewriter.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/impl/ShardingPaginationParameterRewriter.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/sql/ShardingSQLBuilder.java", "insertions": 95, "deletions": 0, "lines": 95}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/IgnoreForSingleRoute.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/AggregationDistinctTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/DistinctProjectionPrefixTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/IndexTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/OffsetTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/OrderByTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/ProjectionsTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/RowCountTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/generator/impl/InsertValuesTokenGenerator.java => sql/rewriter/sharding/token/generator/impl/ShardingInsertValuesTokenGenerator.java}", "insertions": 16, "deletions": 15, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/TableTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/BaseGeneratedKeyTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyAssignmentTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyForUseDefaultInsertColumnsTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyInsertColumnTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyInsertValuesTokenGenerator.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/LogicAndActualTablesAware.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/sql/token/pojo/Alterable.java => sql/rewriter/sharding/token/pojo/RoutingUnitAware.java}", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/AggregationDistinctToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/DistinctProjectionPrefixToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/GeneratedKeyAssignmentToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/GeneratedKeyInsertColumnToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/IndexToken.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/LiteralGeneratedKeyAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/OffsetToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/OrderByToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/ParameterMarkerGeneratedKeyAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/ProjectionsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/RowCountToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/{test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteAssertionsRootEntity.java => main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/impl/ShardingInsertValue.java}", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/impl/ShardingInsertValuesToken.java", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token => sql/rewriter/sharding/token/pojo/impl}/ShardingTokenGenerateBuilder.java", "insertions": 20, "deletions": 20, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/TableToken.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/EncryptSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 161, "lines": 161}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/MixSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 257, "lines": 257}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/ShardingSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 249, "lines": 249}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteAssertionEntity.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteInputEntity.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteOutputEntity.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptConditionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/encrypt/parameterized/EncryptSQLRewriterParameterizedTest.java", "insertions": 93, "deletions": 0, "lines": 93}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptLiteralAssignmentTokenTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptParameterAssignmentTokenTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptPredicateTokenTest.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/NormalEncryptorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/QueryAssistedEncryptorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/ShardingKeyGeneratorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/mix/parameterized/MixSQLRewriterParameterizedTest.java", "insertions": 124, "deletions": 0, "lines": 124}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/sharding/parameterized/ShardingSQLRewriterParameterizedTest.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/META-INF/services/org.apache.shardingsphere.spi.encrypt.ShardingEncryptor", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/META-INF/services/org.apache.shardingsphere.spi.keygen.ShardingKeyGenerator", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-core/sharding-core-route/pom.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ShardingRouter.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngine.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/DatabaseTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/hook/SPIRoutingHookTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/spi/SPITimeServiceTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/complex/ComplexRoutingEngineTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/AbstractSQLRouteTest.java", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-jdbc-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-proxy-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-ui-distribution/pom.xml", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-distribution/shardingsphere-src-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/pom.xml", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/engine/BaseIT.java", "insertions": 27, "deletions": 35, "lines": 62}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/env/IntegrateTestEnvironment.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env.properties", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractStatementExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutor.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutor.java", "insertions": 4, "deletions": 9, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactory.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutor.java", "insertions": 11, "deletions": 16, "lines": 27}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractResultSetAdapter.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/AbstractRuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/EncryptRuntimeContext.java", "insertions": 5, "deletions": 11, "lines": 16}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/RuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/ShardingRuntimeContext.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/ShardingDataSource.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSet.java", "insertions": 118, "deletions": 65, "lines": 183}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSet.java", "insertions": 67, "deletions": 27, "lines": 94}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatement.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ResultSetEncryptorMetaData.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 25, "deletions": 7, "lines": 32}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingStatement.java", "insertions": 23, "deletions": 6, "lines": 29}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/common/base/AbstractEncryptJDBCDatabaseAndTableTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractBaseExecutorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutorTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactoryTest.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/fixture/TestDataSource.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSetTest.java", "insertions": 33, "deletions": 37, "lines": 70}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatementTest.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatementTest.java", "insertions": 25, "deletions": 9, "lines": 34}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/jdbc_init.sql", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingRootInvokeHook.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHook.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-opentracing/src/test/java/org/apache/shardingsphere/opentracing/hook/OpenTracingRootInvokeHookTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/test/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHookTest.java", "insertions": 7, "deletions": 16, "lines": 23}, {"filePath": "sharding-orchestration/sharding-orchestration-config/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/pom.xml", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/java/org/apache/shardingsphere/orchestration/config/apollo/ApolloConfigCenterTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/resources/apollo-env.properties", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/resources/logback-test.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-zookeeper-curator/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSnowflakeKeyGenerator.java", "insertions": 18, "deletions": 7, "lines": 25}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGeneratorTest.java", "insertions": 87, "deletions": 87, "lines": 174}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSnowflakeKeyGeneratorTest.java", "insertions": 130, "deletions": 64, "lines": 194}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java", "insertions": 50, "deletions": 16, "lines": 66}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/QueryHeaderEncryptorMetaData.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallback.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxySQLExecuteCallback.java", "insertions": 3, "deletions": 28, "lines": 31}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/StatementExecutorWrapper.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/executor/BackendExecutorContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeader.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/LogicSchema.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/EncryptSchema.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/MasterSlaveSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/ShardingSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/TransparentSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ShowDatabasesBackendHandler.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowStatusExecutor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowTableStatusExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/show/ShardingCTLShowBackendHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallbackTest.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeaderTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-frontend/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/executor/UserExecutorGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/constant/MySQLServerInfo.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacket.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacketTest.java", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/codec/PostgreSQLPacketCodecEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/config/JdbcDataSourceConfiguration.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-sql-test/src/main/java/org/apache/shardingsphere/test/sql/loader/SQLCasesLoader.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dml/insert.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-bitronix/pom.xml", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/MariaDBXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/OracleXADataSourceDefinition.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/PostgreSQLXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/SQLServerXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-base/pom.xml", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/main/java/org/apache/shardingsphere/transaction/base/seata/at/SeataTransactionBroadcaster.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/main/java/org/apache/shardingsphere/transaction/base/seata/at/TransactionalSQLExecutionHook.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/test/java/org/apache/shardingsphere/transaction/base/seata/at/SeataATShardingTransactionManagerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/test/java/org/apache/shardingsphere/transaction/base/seata/at/TransactionalSQLExecutionHookTest.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "sharding-ui/sharding-ui-backend/pom.xml", "insertions": 34, "deletions": 31, "lines": 65}, {"filePath": "sharding-ui/sharding-ui-frontend/src/App.vue", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "sharding-ui/sharding-ui-frontend/src/components/Head/index.vue", "insertions": 20, "deletions": 17, "lines": 37}, {"filePath": "sharding-ui/sharding-ui-frontend/src/lang/en-US.js", "insertions": 23, "deletions": 4, "lines": 27}, {"filePath": "sharding-ui/sharding-ui-frontend/src/lang/zh-CN.js", "insertions": 25, "deletions": 6, "lines": 31}, {"filePath": "sharding-ui/sharding-ui-frontend/src/main.js", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/registry-center/module/registryCenter.vue", "insertions": 28, "deletions": 28, "lines": 56}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/rule-config/index.vue", "insertions": 9, "deletions": 8, "lines": 17}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/rule-config/module/schema.vue", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/index.vue", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/module/dataSource.vue", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/module/instance.vue", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/item/SelectItemsSegment.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/test/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/item/SelectItemsSegmentTest.java", "insertions": 0, "deletions": 41, "lines": 41}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/MySQLKeyword.g4", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/groupby/engine/GroupByContextEngine.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/ProjectionsContext.java", "insertions": 2, "deletions": 45, "lines": 47}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/engine/ProjectionsContextEngine.java", "insertions": 43, "deletions": 4, "lines": 47}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/statement/impl/SelectSQLStatementContext.java", "insertions": 0, "deletions": 10, "lines": 10}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/ProjectionsContextTest.java", "insertions": 11, "deletions": 115, "lines": 126}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/engine/ProjectionsContextEngineTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/statement/impl/SelectSQLStatementContextTest.java", "insertions": 2, "deletions": 20, "lines": 22}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-sqlserver/src/main/antlr4/imports/sqlserver/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sharding/dml/insert.xml", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sharding/dml/select.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "shardingsphere-sql-rewriter/pom.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/pom.xml", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/context/SQLRewriteContext.java", "insertions": 18, "deletions": 29, "lines": 47}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/context/SQLRewriteContextDecorator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/SQLRewriteEngine.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/SQLRewriteResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/impl/DefaultSQLRewriteEngine.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/ParameterBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/impl/GroupedParameterBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/impl/StandardParameterBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/rewriter/ParameterRewriter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/rewriter/ParameterRewriterBuilder.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/SQLBuilder.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/impl/AbstractSQLBuilder.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/impl/DefaultSQLBuilder.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/CollectionSQLTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/OptionalSQLTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/SQLTokenGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/SQLTokenGenerators.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/aware/ParametersAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/aware/PreviousSQLTokensAware.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/token/generator/aware/TableMetasAware.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/generator/aware/RelationMetasAware.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/builder/DefaultTokenGeneratorBuilder.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/builder/SQLTokenGeneratorBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/generic/RemoveTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/Attachable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/SQLToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/Substitutable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/InsertColumnsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/pojo/generic/InsertValue.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/pojo/generic/InsertValuesToken.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/RemoveToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/SubstitutableColumnNameToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/UseDefaultInsertColumnsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilderTest.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter/impl/DefaultSQLBuilderTest.java", "insertions": 11, "deletions": 13, "lines": 24}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameter/builder => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter}/impl/GroupedParameterBuilderTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameter/builder => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter}/impl/StandardParameterBuilderTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/pom.xml", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/AbstractSQLRewriterParameterizedTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/parameter/SQLRewriteEngineTestParameters.java", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/parameter/SQLRewriteEngineTestParametersBuilder.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteAssertionEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteAssertionsRootEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteInputEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteOutputEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/loader/EncryptRewriteAssertionsRootEntityLoader.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/loader/RewriteAssertionsRootEntityLoader.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Integrate sharding jdbc with sql server", "body": "## Can anybody help me?\r\nI have worked on it for about 3 days,and it didnot work yet.\r\nHere is my yaml\r\n```\r\nserver:\r\n  port: 8081\r\nspring:\r\n  shardingsphere:\r\n    sharding:\r\n      default-database-strategy:\r\n        inline:\r\n          algorithm-expression: db$->{id % 3}\r\n          sharding-column: id\r\n      tables:\r\n        book:\r\n          #\u7531\u6570\u636e\u6e90\u540d + \u8868\u540d\u7ec4\u6210\uff0c\u4ee5\u5c0f\u6570\u70b9\u5206\u9694\u3002\r\n          #\u591a\u4e2a\u8868\u4ee5\u9017\u53f7\u5206\u9694\uff0c\u652f\u6301inline\u8868\u8fbe\u5f0f\u3002\u7f3a\u7701\u8868\u793a\u4f7f\u7528\u5df2\u77e5\u6570\u636e\u6e90\u4e0e\u903b\u8f91\u8868\u540d\u79f0\u751f\u6210\u6570\u636e\u8282\u70b9\u3002\r\n          #\u7528\u4e8e\u5e7f\u64ad\u8868\uff08\u5373\u6bcf\u4e2a\u5e93\u4e2d\u90fd\u9700\u8981\u4e00\u4e2a\u540c\u6837\u7684\u8868\u7528\u4e8e\u5173\u8054\u67e5\u8be2\uff0c\u591a\u4e3a\u5b57\u5178\u8868\uff09\u6216\u53ea\u5206\u5e93\u4e0d\u5206\u8868\u4e14\u6240\u6709\u5e93\u7684\u8868\u7ed3\u6784\u5b8c\u5168\u4e00\u81f4\u7684\u60c5\u51b5\r\n          actual-data-nodes: db$->{0..2}.book_$->{0..1}\r\n#          key-generator:\r\n#            #\u81ea\u589e\u5217\u540d\u79f0\uff0c\u7f3a\u7701\u8868\u793a\u4e0d\u4f7f\u7528\u81ea\u589e\u4e3b\u952e\u751f\u6210\u5668\r\n#            column: id\r\n#            #\u81ea\u589e\u5217\u503c\u751f\u6210\u5668\u7c7b\u578b\uff0c\u7f3a\u7701\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u81ea\u589e\u5217\u503c\u751f\u6210\u5668\u3002\u53ef\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u5217\u503c\u751f\u6210\u5668\u6216\u9009\u62e9\u5185\u7f6e\u7c7b\u578b\uff1aSNOWFLAKE/UUID/LEAF_SEGMENT\r\n#            type: SNOWFLAKE\r\n          table-strategy:\r\n            inline:\r\n              algorithm-expression: book_$->{id % 2}\r\n              sharding-column: id\r\n      binding-tables: book\r\n    datasource:\r\n      db0:\r\n        driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\r\n        url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=db0\r\n        password: \r\n        type: com.alibaba.druid.pool.DruidDataSource\r\n        username: sa\r\n      db1:\r\n        driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\r\n        url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=db1\r\n        password: \r\n        type: com.alibaba.druid.pool.DruidDataSource\r\n        username: sa\r\n      db2:\r\n        driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\r\n        url: jdbc:sqlserver://127.0.0.1:1433;DatabaseName=db2\r\n        password: \r\n        type: com.alibaba.druid.pool.DruidDataSource\r\n        username: sa\r\n      dsmaster: ''\r\n      names: db0,db1,db2\r\n    props:\r\n      sql:\r\n        show: true\r\n  main:\r\n    allow-bean-definition-overriding: true\r\nmybatis-plus:\r\n  typeAliasesPackage: cn.wccy.sharding.shardingtest.entity\r\n  mapper-locations:\r\n    - classpath*:mapper/*.xml\r\n```\r\nAnd the maven pom is below:`mssql-jdbc 6.4.0.jre8`,`sharding-jdbc-spring-boot-starter 4.0.0-RC2`\r\n```\r\n        <!-- Sharding jdbc -->\r\n        <dependency>\r\n            <groupId>org.apache.shardingsphere</groupId>\r\n            <artifactId>sharding-jdbc-spring-boot-starter</artifactId>\r\n            <version>4.0.0-RC2</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.baomidou</groupId>\r\n            <artifactId>mybatis-plus-boot-starter</artifactId>\r\n            <version>3.1.1</version>\r\n            <!--<exclusions>\r\n                <exclusion>\r\n                    <groupId>org.springframework.boot</groupId>\r\n                    <artifactId>spring-boot-starter-jdbc</artifactId>\r\n                </exclusion>\r\n            </exclusions>-->\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.microsoft.sqlserver</groupId>\r\n            <artifactId>mssql-jdbc</artifactId>\r\n            <version>6.4.0.jre8</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n            <exclusions>\r\n                <exclusion>\r\n                    <groupId>org.junit.vintage</groupId>\r\n                    <artifactId>junit-vintage-engine</artifactId>\r\n                </exclusion>\r\n            </exclusions>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-configuration-processor</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>4.12</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>fastjson</artifactId>\r\n            <version>1.2.58</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>druid-spring-boot-starter</artifactId>\r\n            <version>1.1.18</version>\r\n        </dependency>\r\n```\r\nAnd I have tried mysql also.It works well.I do not know why.\r\nHere is the test code below\r\n```\r\n@Test\r\npublic void saveBatch() {\r\n\tList<Book> bookList = new ArrayList<>();\r\n\tfor (int i = 0;i < 100;i ++) {\r\n\t\tBook book = new Book();\r\n\t\tbook.setId(i);\r\n\t\tbook.setCount(i);\r\n\t\tbook.setName(\"test\" + i);\r\n\t\tbookList.add(book);\r\n\t}\r\n\tbookService.saveBatch(bookList);\r\n}\r\n```\r\nand the exception stack trace:\r\n```\r\norg.apache.ibatis.exceptions.PersistenceException: \r\n### Error flushing statements.  Cause: com.microsoft.sqlserver.jdbc.SQLServerException: The value is not set for the parameter number 1.\r\n### Cause: com.microsoft.sqlserver.jdbc.SQLServerException: The value is not set for the parameter number 1.\r\n\r\n\tat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.flushStatements(DefaultSqlSession.java:254)\r\n\tat com.baomidou.mybatisplus.extension.service.impl.ServiceImpl.saveBatch(ServiceImpl.java:132)\r\n\tat com.baomidou.mybatisplus.extension.service.IService.saveBatch(IService.java:58)\r\n\tat com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$f8525d18.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$519/1914538677.proceedWithInvocation(Unknown Source)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:99)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)\r\n\tat cn.wccy.sharding.shardingtest.service.impl.BookServiceImpl$$EnhancerBySpringCGLIB$$2f2168f1.saveBatch(<generated>)\r\n\tat cn.wccy.sharding.shardingtest.service.BookServiceTest.saveBatch(BookServiceTest.java:61)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:483)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: com.microsoft.sqlserver.jdbc.SQLServerException: The value is not set for the parameter number 1.\r\n\tat com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:228)\r\n\tat com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.buildParamTypeDefinitions(SQLServerPreparedStatement.java:377)\r\n\tat com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.buildPreparedStrings(SQLServerPreparedStatement.java:329)\r\n\tat com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatementBatch(SQLServerPreparedStatement.java:2607)\r\n\tat com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtBatchExecCmd.doExecute(SQLServerPreparedStatement.java:2545)\r\n\tat com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7344)\r\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:2713)\r\n\tat com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:224)\r\n\tat com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:204)\r\n\tat com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeBatch(SQLServerPreparedStatement.java:2458)\r\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.executeBatch(DruidPooledPreparedStatement.java:565)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.BatchPreparedStatementExecutor$4.executeSQL(BatchPreparedStatementExecutor.java:168)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.BatchPreparedStatementExecutor$4.executeSQL(BatchPreparedStatementExecutor.java:164)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:68)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:57)\r\n\tat org.apache.shardingsphere.core.execute.ShardingExecuteEngine.syncGroupExecute(ShardingExecuteEngine.java:125)\r\n\tat org.apache.shardingsphere.core.execute.ShardingExecuteEngine.serialExecute(ShardingExecuteEngine.java:90)\r\n\tat org.apache.shardingsphere.core.execute.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:83)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:73)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteTemplate.executeGroup(SQLExecuteTemplate.java:56)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.AbstractStatementExecutor.executeCallback(AbstractStatementExecutor.java:132)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.BatchPreparedStatementExecutor.executeBatch(BatchPreparedStatementExecutor.java:171)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeBatch(ShardingPreparedStatement.java:231)\r\n\tat com.baomidou.mybatisplus.core.executor.MybatisBatchExecutor.doFlushStatements(MybatisBatchExecutor.java:132)\r\n\tat org.apache.ibatis.executor.BaseExecutor.flushStatements(BaseExecutor.java:129)\r\n\tat org.apache.ibatis.executor.BaseExecutor.flushStatements(BaseExecutor.java:122)\r\n\tat org.apache.ibatis.executor.CachingExecutor.flushStatements(CachingExecutor.java:114)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.flushStatements(DefaultSqlSession.java:252)\r\n\t... 45 more\r\n```\r\nI need help,really.", "url": "https://github.com/apache/shardingsphere/issues/3662", "user": "EricLye", "labels": ["SQL parse", "bug"], "created": "2019-12-04 10:12:52", "closed": "2019-12-05 10:02:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "A yaml wrong or a program's bug", "body": "**Which version of ShardingSphere did you use?**\r\ndev  or all\r\n\r\n**Which project did you use? Sharding-JDBC or Sharding-Proxy?**\r\nSharding-JDBC \r\n\r\n**Expected behavior**\r\nRun `void org.apache.shardingsphere.shardingjdbc.orchestration.api.yaml.sharding.YamlOrchestrationShardingWithMasterSlaveIntegrateTest.assertWithDataSource() throws Exception` test unit.\r\n\r\nuntil the under code\r\n`List<TableMetaData> org.apache.shardingsphere.core.execute.metadata.TableMetaDataLoader.load(Map<String, List<DataNode>> dataNodeGroups, ShardingRule shardingRule, String logicTableName) throws SQLException`\r\nthe file TableMetaDataLoader.java line number is 99\r\n`DataSourceMetaData dataSourceMetaData = TableMetaDataLoader.this.dataSourceMetas.getDataSourceMetaData(dataSourceName);`\r\nthe dataSourceMetaData  is not null..\r\n\r\n![image](https://user-images.githubusercontent.com/10703753/70104797-2624f980-167a-11ea-949a-27d5abcfc9db.png)\r\n\r\n\r\n**Actual behavior**\r\nthe dataSourceMetaData  is null..\r\n\r\n**Reason analyze (If you can)**\r\n![image](https://user-images.githubusercontent.com/10703753/70022945-e5bd7100-15d0-11ea-9bfe-1cfd176adb51.png)\r\nWith masterSlaveRules config\uff0c\uff0c\uff0cthe dataSourceMetaData  must be null....because the yaml is not right to  map to code Map.class \r\n\r\n**Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.**\r\nRun `void org.apache.shardingsphere.shardingjdbc.orchestration.api.yaml.sharding.YamlOrchestrationShardingWithMasterSlaveIntegrateTest.assertWithDataSource() throws Exception` test unit.\r\n\r\n**Example codes for reproduce this issue (such as a github link).**\r\nYamlOrchestrationShardingWithMasterSlaveIntegrateTest.java    assertWithDataSource()", "url": "https://github.com/apache/shardingsphere/issues/3642", "user": "beijing-penguin", "labels": ["bug"], "created": "2019-12-03 05:33:33", "closed": "2019-12-08 14:34:47", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Timestamp miss milliseconds when reading from sharding-proxy", "body": "### Which version of ShardingSphere did you use?\r\n4.0.0-RC4 compile by myselft from the source code\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nread the timestamp value from sharding-proxy should contains the milliseconds\r\n### Actual behavior\r\nmiss the milliseconds when reading from sharding-proxy\r\n### Reason analyze (If you can)\r\nmaybe there is type converstion or byte read bug in sharding-proxy?\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nJust any database client tools to connect to the proxy to select query a reacord with timestamp values with milliseconds in real database tables\r\n### Example codes for reproduce this issue (such as a github link).\r\njust a very easy select statement test can reproduce this issue.\r\nthis is the followup testing after the issue #3550 fixed by #3632 \r\nI have left an comment there for the easy reference", "url": "https://github.com/apache/shardingsphere/issues/3640", "user": "lightning-pro", "labels": ["bug", "proxy"], "created": "2019-12-03 04:13:17", "closed": "2019-12-03 09:15:44", "commits": {"4ec19be699ad450c059e27b5ef723e9592672fb7": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "a41f4370470739aabef7079c3b20af5d24095eac": {"commitGHEventType": "referenced", "commitUser": "avalon566"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4ec19be699ad450c059e27b5ef723e9592672fb7", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["2e230c3cac353dc2d2de82077d6fb82ee38ced5f"], "nameRev": "4ec19be699ad450c059e27b5ef723e9592672fb7 tags/4.0.0~55", "commitMessage": "#3640, fix missing milliseconds when reading (#3643)\n\n* #3640, fix missing milliseconds when reading\r\n\r\n* #3640, for test case\r\n", "commitDateTime": "2019-12-03 17:15:43", "authoredDateTime": "2019-12-03 17:15:43", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacket.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacketTest.java", "insertions": 19, "deletions": 2, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLTextResultSetRowPacket.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.text.MySQLTextResultSetRowPacket.write(org.apache.shardingsphere.shardingproxy.transport.mysql.payload.MySQLPacketPayload)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MySQLTextResultSetRowPacketTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.text.MySQLTextResultSetRowPacketTest.assertWrite()", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.text.MySQLTextResultSetRowPacketTest.assertTimestampWithoutNanos()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a41f4370470739aabef7079c3b20af5d24095eac", "commitGHEventType": "referenced", "commitUser": "avalon566", "commitParents": ["0e2aa9140101d051d5c4bf1532ce6dc052c446cf"], "nameRev": "a41f4370470739aabef7079c3b20af5d24095eac tags/shardingsphere-ui-4.1.0~252^2~39", "commitMessage": "Sharding scaling synchronize main branch (#3754)\n\n* Correct mismatched comments (#3594)\r\n\r\n* #3587, cache DataSourceMetaData (#3588)\r\n\r\n* #3587, cache DataSourceMetaData\r\n\r\n* #3587, add test case\r\n\r\n* fixes apollo debug & warn log, control log out by slf4j xml file. (#3583)\r\n\r\n* fixes apollo debug & warn log.\r\n\r\n* Move jul-to-slf4j -> root pom.\r\n\r\n* fixes jul-to-slf4j scope -> compile.\r\n\r\n* remove maven default scope.\r\n\r\n* Update snowflake algorithm to support modulus of 2^n  (#3595)\r\n\r\n* update vibration offset\r\n\r\n* add vibration offset test case\r\n\r\n* update vibration offset\r\n\r\n* update vibration offset\r\n\r\n* modify vibration offset test case\r\n\r\n* modify vibration offset test case\r\n\r\n* Refactor metadata (#3604)\r\n\r\n* decouple DatabaseType and DataSourceInfo\r\n\r\n* fix use == for string equals\r\n\r\n* decouple DataSourceMetaData and DataSourceInfo\r\n\r\n* fix javadoc\r\n\r\n* refactor LogicSchema.getDataSourceInfoMap()\r\n\r\n* reuse DatabaseAccessConfiguration and remove DataSourceInfo\r\n\r\n* refactor SQLExecuteCallback\r\n\r\n* change TableMetaDataInitializer's getTables parameter error. (#3589)\r\n\r\n* Modify SnowflakeShardingKeyGeneratorTest Unit-test case (#3610)\r\n\r\n* make all pom files consist (#3614)\r\n\r\n* make consist with pom\r\n\r\n* make consist with pom\r\n\r\n* adjust dependency sequence of ui-backend\r\n\r\n* for code style\r\n\r\n* ignore db test (#3615)\r\n\r\n* simplify test case assertLastDigitalOfGenerateKeySameMillisecond (#3616)\r\n\r\n* support SELECT DATABASE() (#3622)\r\n\r\n* Fixes #3627 (#3629)\r\n\r\n* move StatementExecuteUnit to sql package\r\n\r\n* move ShardingExecuteEngine to engine package\r\n\r\n* for code style\r\n\r\n* rename QueryResultBasedQueryResultFixture and ResultSetBasedQueryResultFixture\r\n\r\n* refactor DistinctQueryResult.getQueryRows()\r\n\r\n* skip distinct merge for group by and aggregation only\r\n\r\n* add DQLMergeEngine.isNeedProcessOrderBy\r\n\r\n* use group by to merge distinct row\r\n\r\n* add DQLMergeEngine.setGroupByForDistinctRow\r\n\r\n* remove useless SelectItemsSegment.findSelectItemSegments\r\n\r\n* code style for AggregationDistinctQueryResult\r\n\r\n* code style for AggregationDistinctQueryResult\r\n\r\n* remove DistinctQueryResult.divide()\r\n\r\n* remove useless DistinctQueryResult\r\n\r\n* use group by to process aggregation distinct\r\n\r\n* remove useless AggregationDistinctQueryResult\r\n\r\n* remove useless AggregationDistinctQueryMetaData\r\n\r\n* remove useless QueryResult.getQueryResultMetaData()\r\n\r\n* remove useless QueryRow.distinctColumnIndexes\r\n\r\n* remove useless QueryRow.distinctColumnIndexes\r\n\r\n* remove useless QueryRow.@EqualsAndHashCode\r\n\r\n* remove useless QueryRow\r\n\r\n* adjust constructor seq of DQLMergeEngine\r\n\r\n* refactor DQLMergeEngine's constructor\r\n\r\n* move ProjectionsContext.getColumnLabels() to ProjectionsContextEngine\r\n\r\n* remove DQLMergeEngine.tableMetas\r\n\r\n* refactor DQLMergeEngine\r\n\r\n* code style for ProjectionsContextEngine\r\n\r\n* #3550, update SERVER_VERSION of Sharding-Proxy (#3632)\r\n\r\n* Add maxVibrationOffset to LeafSnowflakeKeyGenerator (#3636)\r\n\r\n* #3640, fix missing milliseconds when reading (#3643)\r\n\r\n* #3640, fix missing milliseconds when reading\r\n\r\n* #3640, for test case\r\n\r\n* Uniform naming style for properties (#3649)\r\n\r\n* Decouple sharding-core-execute module and encrypt (#3654)\r\n\r\n* remove getter of StreamQueryResult.queryResultMetaData\r\n\r\n* refactor MemoryQueryResult\r\n\r\n* refactor StreamQueryResult\r\n\r\n* refactor StreamQueryResult\r\n\r\n* refactor MemoryQueryResult\r\n\r\n* refactor QueryResultMetaData\r\n\r\n* move decrypt from MemoryQueryResult & StreamQueryResult to EncryptResultSet, ShardingResultSet & JDBCDatabaseCommunicationEngine\r\n\r\n* remove useless SuppressWarnings\r\n\r\n* adjust method sequence of QueryResult\r\n\r\n* use MergedResult.getValue(columnIndex) instead of MergedResult.getValue(columnLabel)\r\n\r\n* remove useless MergedResult.getValue(columnLabel)\r\n\r\n* remove useless QueryResult.getValue(columnLabel)\r\n\r\n* decouple QueryResultMetaData and queryWithCipherColumn\r\n\r\n* remove QueryResultMetaData.queryWithCipherColumn\r\n\r\n* refactor QueryResultMetaData.findShardingEncryptorWithTable\r\n\r\n* remove QueryResultMetaData.getShardingEncryptor\r\n\r\n* remove QueryResultMetaData.columnLabelAndIndexes\r\n\r\n* remove QueryResultMetaData\r\n\r\n* remove QueryResultUtil\r\n\r\n* Update docker java version (#3652)\r\n\r\n* Update docker java version\r\n\r\n* Revert \"Update docker java version\"\r\n\r\nThis reverts commit 16c913b251db84bd5e87f863d86329af9f029547.\r\n\r\n* Change postgresql driver version\r\n\r\n* Remove QueryResult\u2018s fixture from merge test case (#3661)\r\n\r\n* remove useless throw exception for MergeEngineFactory\r\n\r\n* remove useless throw exception for MergeEngineFactoryTest\r\n\r\n* decouple MergeEngineFactoryTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple DALMergeEngineTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowCreateTableMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowDatabasesMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowOtherMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowTablesMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* refactor LogicTablesMergedResult's constructor\r\n\r\n* decouple DQLMergeEngineTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple StreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple MemoryQueryResultRowTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple MemoryMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByMemoryMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByRowComparatorTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByValueTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple IteratorStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple OrderByStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple OrderByValueTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple LimitDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple RowNumberDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple TopAndRowNumberDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* remove ResultSetBasedQueryResultFixture\r\n\r\n* decouple DescribeTableMergedResultTest and QueryResultBasedQueryResultFixture\r\n\r\n* remove QueryResultBasedQueryResultFixture\r\n\r\n* Decouple hook and route dependency for execute module (#3665)\r\n\r\n* decouple RouteUnit and SQLExecutionHook\r\n\r\n* decouple RouteUnit and StatementExecuteUnit\r\n\r\n* refactor SQLExecuteCallback.executeSQL\r\n\r\n* decouple RouteUnit and SQLExecutePrepareCallback\r\n\r\n* refactor SQLExecutePrepareCallback.createStatementExecuteUnit()\r\n\r\n* parse sqlserver keyword (#3667)\r\n\r\n* ci test (#3669)\r\n\r\n* Fixes #3671 (#3672)\r\n\r\n* remove useless constructor for ShowDatabasesMergedResult\r\n\r\n* refactor ShowDatabasesMergedResult\r\n\r\n* hide plain column for desc table\r\n\r\n* fix test case\r\n\r\n* Simplify memory merged result  (#3682)\r\n\r\n* for code style\r\n\r\n* pull up currentResultSetRow to MemoryMergedResult\r\n\r\n* remove useless labelAndIndexMap for MemoryMergedResult\r\n\r\n* refactor MemoryMergedResult.init()\r\n\r\n* pull up setCurrentResultSetRow to MemoryMergedResult\r\n\r\n* remove ShowIndexMergedResult, ShowTablesMergedResult & ShowTableStatusMergedResult\r\n\r\n* Fixes #2884 (#3663)\r\n\r\n* Fixes #2884\r\n* Fixes #2884, add test cases;\r\n* Format adjustment.\r\n* End file with a blank line.\r\n\r\n* load-table-metadata (#3684)\r\n\r\n* optimize orchestration datasource (#3685)\r\n\r\n* Decouple encrypt and sharding with ResultSet (#3688)\r\n\r\n* remove ShardingRule.isRoutingByHint()\r\n\r\n* refactor AbstractDataSourceAdapter.close()\r\n\r\n* remove useless getter for AbstractConnectionAdapter\r\n\r\n* decouple encrypt and sharding from ResultSet\r\n\r\n* clear code,delete no use empty judgment code. (#3690)\r\n\r\n* change TableMetaDataInitializer's getTables parameter error.\r\n\r\n* clear code,delete no use empty judgment code.\r\n\r\n* for code style (#3689)\r\n\r\n* fixes #3701, refactor ColumnMetaData class, remove notNull & autoIncrement fields. (#3705)\r\n\r\n* Standardize of merge engnie (#3709)\r\n\r\n* add LocalDataMergedResult\r\n\r\n* remove ShowDatabasesMergedResult's constructor of queryResults\r\n\r\n* refactor LocalDataMergedResult\r\n\r\n* add LocalDataMergedResult & SingleLocalDataMergedResult\r\n\r\n* remove LocalMergedResultAdapter\r\n\r\n* rename MergedResultMetaData to EncryptorMetaData\r\n\r\n* rename ShowOtherMergedResult to TransparentMergedResult\r\n\r\n* refactor test case for TransparentMergedResultTest\r\n\r\n* refactor SingleLocalDataMergedResultTest\r\n\r\n* add MultipleLocalDataMergedResultTest\r\n\r\n* add package name of encrypt.dal and encrypt.dql\r\n\r\n* rename EncryptMergeEngine to DQLEncryptMergeEngine\r\n\r\n* add generic for MemoryMergedResult\r\n\r\n* refactor EncryptResultSet's field as final\r\n\r\n* add desc table for encrypt only\r\n\r\n* refactor desc table for sharding + encrypt\r\n\r\n* remove DescribeTableMergedResult from DALMergeEngine\r\n\r\n* statement function strtodate (#3718)\r\n\r\n* Refactor: update a tiny issue (#3714)\r\n\r\n* Statement function base64 aesencrypt (#3726)\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* #3725, fix MemoryQueryResult wrong data type (#3728)\r\n\r\n* Encrypt statement column (#3715)\r\n\r\n* encrypt-statement-column\r\n\r\n* encrypt statement column\r\n\r\n* encrypt statement column\r\n\r\n* encrypte statement column\r\n\r\n* Check tableRule and throw error information friendly (#3734)\r\n\r\n* Encrypt select statement in operator (#3733)\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* Decouple Rewrite module with sharding and encrypt (#3741)\r\n\r\n* move getLogicAndActualTables from BaseShardingEngine to ShardingSQLRewriteEngine\r\n\r\n* refactor ShardingSQLRewriteEngine\r\n\r\n* add DefaultSQLBuilder and ShardingSQLBuilder\r\n\r\n* refactor DefaultSQLBuilder & ShardingSQLBuilder's input params\r\n\r\n* add AbstractSQLBuilder\r\n\r\n* split Alterable to LogicAndActualTablesAware and RoutingUnitAware\r\n\r\n* remove useless toString\r\n\r\n* split InsertValuesToken to ShardingInsertValuesToken & EncryptInsertValuesToken\r\n\r\n* Add Multilingual Settings (#3708)\r\n\r\n* feature[sharding-ui-frontend]:Support multilingual presentation #3266\r\n\r\n* refactor[sharding-ui-frontend]:Improve translation content\r\n\r\n* [sharding-ui-frontend]:Add Multilingual Settings\r\n\r\n* feature[sharding-ui-frontend]:Keep the name unified\r\n\r\n* Add new module shardingsphere-sql-rewriter (#3746)\r\n\r\n* add new module shardingsphere-sql-rewriter\r\n\r\n* rename package from org.apache.shardingsphere.core.rewrite ot org.apache.shardingsphere.sql.rewriter\r\n\r\n* rename package from org.apache.shardingsphere.core.rewrite ot org.apache.shardingsphere.sql.rewriter\r\n\r\n* add module shardingsphere-sql-rewriter-test\r\n\r\n* remove useless jaxb entity\r\n\r\n* rename EncryptRewriteAssertionsRootEntityLoader to RewriteAssertionsRootEntityLoader\r\n\r\n* refactor EncryptSQLRewriteEngineParameterizedTest\r\n\r\n* refactor EncryptSQLRewriteEngineParameterizedTest\r\n\r\n* add SQLRewriteEngineTestParameters\r\n\r\n* add AbstractSQLRewriteEngineParameterizedTest\r\n\r\n* refactor AbstractSQLRewriteEngineParameterizedTest.testParameters\r\n\r\n* add SQLRewriteEngineTestParameters.type\r\n\r\n* remove useless getter for AbstractSQLRewriteEngineParameterizedTest\r\n\r\n* rename SQLRewriteEngineParameterizedTest to SQLRewriterParameterizedTest\r\n\r\n* remove useless param from AbstractSQLRewriterParameterizedTest\r\n\r\n* rename AbstractSQLRewriterParameterizedTest.createSQLRewriteResults()\r\n\r\n* refactor EncryptSQLRewriterParameterizedTest\r\n\r\n* refactor EncryptSQLRewriterParameterizedTest\r\n\r\n* refactor pom of shardingsphere-sql-rewriter\r\n\r\n* use RelationMetas instead of TableMetas in rewriter module\r\n\r\n* add InsertValue\r\n\r\n* add ShardingInsertValue\r\n\r\n* decouple sharding-core-common & shardingsphere-sql-rewriter\r\n\r\n* rename package from org.apache.shardingsphere.sql.rewriter.feature to org.apache.shardingsphere.sql.rewriter\r\n\r\n* replace removed datasourceInfo\r\n", "commitDateTime": "2019-12-18 15:20:32", "authoredDateTime": "2019-12-18 15:20:32", "commitGitStats": [{"filePath": "jenkinsfile", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "pom.xml", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-core/database-time-service/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DataSourceInfo.java", "insertions": 0, "deletions": 35, "lines": 35}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DatabaseType.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ColumnMetaData.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/EncryptColumnMetaData.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ShardingGeneratedKeyColumnMetaData.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/DataSourceMetas.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MariaDBDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaData.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaData.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/EncryptRule.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java", "insertions": 1, "deletions": 12, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/encrypt/EncryptTable.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/keygen/SnowflakeShardingKeyGenerator.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/H2DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MariaDBDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MySQLDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/OracleDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/PostgreSQLDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQL92DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQLServerDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/ShardingSphereDataSourceMetaDataTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaDataTest.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaDataTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaDataTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetaDataTest.java", "insertions": 2, "deletions": 14, "lines": 16}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetasTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/EncryptRuleTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/TableRuleTest.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/encrypt/impl/EncryptTableTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/keygen/SnowflakeShardingKeyGeneratorTest.java", "insertions": 59, "deletions": 5, "lines": 64}, {"filePath": "sharding-core/sharding-core-entry/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-entry/src/main/java/org/apache/shardingsphere/core/BaseShardingEngine.java", "insertions": 17, "deletions": 40, "lines": 57}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/PreparedQueryShardingEngineTest.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/SimpleQueryShardingEngineTest.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteDataMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecutorService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingGroupExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingThreadFactoryBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/hook/SPISQLExecutionHook.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/hook/SQLExecutionHook.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataInitializer.java", "insertions": 4, "deletions": 12, "lines": 16}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataLoader.java", "insertions": 15, "deletions": 24, "lines": 39}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => sql}/StatementExecuteUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallback.java", "insertions": 22, "deletions": 12, "lines": 34}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteTemplate.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaData.java", "insertions": 0, "deletions": 219, "lines": 219}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResult.java", "insertions": 0, "deletions": 151, "lines": 151}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResult.java", "insertions": 0, "deletions": 186, "lines": 186}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 69, "deletions": 68, "lines": 137}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResult.java", "insertions": 14, "deletions": 52, "lines": 66}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaData.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 0, "deletions": 139, "lines": 139}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResult.java", "insertions": 45, "deletions": 75, "lines": 120}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRow.java", "insertions": 0, "deletions": 89, "lines": 89}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareTemplate.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteEngineTest.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/hook/SPISQLExecutionHookTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/hook/fixture/SQLExecutionHookFixture.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallbackTest.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaDataTest.java", "insertions": 0, "deletions": 129, "lines": 129}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResultTest.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResultTest.java", "insertions": 0, "deletions": 212, "lines": 212}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResultTest.java", "insertions": 240, "deletions": 99, "lines": 339}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaDataTest.java", "insertions": 0, "deletions": 117, "lines": 117}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 0, "deletions": 292, "lines": 292}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResultTest.java", "insertions": 95, "deletions": 158, "lines": 253}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRowTest.java", "insertions": 0, "deletions": 81, "lines": 81}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareTemplateTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-merge/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergeEngineFactory.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergedResult.java", "insertions": 0, "deletions": 31, "lines": 31}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngine.java", "insertions": 11, "deletions": 22, "lines": 33}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/common/MultipleLocalDataMergedResult.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/{show/LocalMergedResultAdapter.java => common/SingleLocalDataMergedResult.java}", "insertions": 25, "deletions": 17, "lines": 42}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/{show/ShowOtherMergedResult.java => common/TransparentMergedResult.java}", "insertions": 7, "deletions": 23, "lines": 30}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/LogicTablesMergedResult.java", "insertions": 10, "deletions": 31, "lines": 41}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowCreateTableMergedResult.java", "insertions": 4, "deletions": 11, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResult.java", "insertions": 0, "deletions": 84, "lines": 84}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowIndexMergedResult.java", "insertions": 0, "deletions": 57, "lines": 57}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowTableStatusMergedResult.java", "insertions": 0, "deletions": 61, "lines": 61}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowTablesMergedResult.java", "insertions": 0, "deletions": 58, "lines": 58}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngine.java", "insertions": 43, "deletions": 76, "lines": 119}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/DecoratorMergedResult.java", "insertions": 0, "deletions": 15, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/MemoryMergedResult.java", "insertions": 25, "deletions": 30, "lines": 55}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/StreamMergedResult.java", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResult.java", "insertions": 24, "deletions": 34, "lines": 58}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResult.java", "insertions": 2, "deletions": 16, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/AggregationUnitFactory.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctAverageAggregationUnit.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctCountAggregationUnit.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctSumAggregationUnit.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/orderby/CompareUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dal/DALEncryptMergeEngine.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/{dal/desc => encrypt/dal}/DescribeTableMergedResult.java", "insertions": 16, "deletions": 49, "lines": 65}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/{dal/show/ShowShardingCTLMergedResult.java => encrypt/dql/DQLEncryptMergeEngine.java}", "insertions": 10, "deletions": 15, "lines": 25}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dql/EncryptMergedResult.java", "insertions": 72, "deletions": 0, "lines": 72}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dql/EncryptorMetaData.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/MergeEngineFactoryTest.java", "insertions": 13, "deletions": 21, "lines": 34}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngineTest.java", "insertions": 12, "deletions": 15, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/MultipleLocalDataMergedResultTest.java", "insertions": 74, "deletions": 0, "lines": 74}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/SingleLocalDataMergedResultTest.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/TransparentMergedResultTest.java", "insertions": 79, "deletions": 0, "lines": 79}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/desc/DescribeTableMergedResultTest.java", "insertions": 0, "deletions": 201, "lines": 201}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowCreateTableMergedResultTest.java", "insertions": 31, "deletions": 52, "lines": 83}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResultTest.java", "insertions": 0, "deletions": 143, "lines": 143}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowOtherMergedResultTest.java", "insertions": 0, "deletions": 417, "lines": 417}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowTablesMergedResultTest.java", "insertions": 28, "deletions": 35, "lines": 63}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 95, "deletions": 137, "lines": 232}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/DecoratorMergedResultTest.java", "insertions": 0, "deletions": 19, "lines": 19}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/MemoryMergedResultTest.java", "insertions": 13, "deletions": 64, "lines": 77}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/MemoryQueryResultRowTest.java", "insertions": 5, "deletions": 15, "lines": 20}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/StreamMergedResultTest.java", "insertions": 20, "deletions": 373, "lines": 393}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/fixture/TestMemoryMergedResult.java", "insertions": 21, "deletions": 6, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 54, "deletions": 79, "lines": 133}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparatorTest.java", "insertions": 28, "deletions": 27, "lines": 55}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 74, "deletions": 103, "lines": 177}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByValueTest.java", "insertions": 10, "deletions": 16, "lines": 26}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/AggregationUnitFactoryTest.java", "insertions": 20, "deletions": 5, "lines": 25}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/iterator/IteratorStreamMergedResultTest.java", "insertions": 18, "deletions": 30, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 16, "deletions": 33, "lines": 49}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByValueTest.java", "insertions": 25, "deletions": 47, "lines": 72}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResultTest.java", "insertions": 19, "deletions": 43, "lines": 62}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResultTest.java", "insertions": 23, "deletions": 47, "lines": 70}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResultTest.java", "insertions": 27, "deletions": 51, "lines": 78}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/encrypt/dal/DescribeTableMergedResultTest.java", "insertions": 104, "deletions": 0, "lines": 104}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/DescribeQueryResultFixture.java", "insertions": 0, "deletions": 105, "lines": 105}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/TestQueryResult.java", "insertions": 0, "deletions": 229, "lines": 229}, {"filePath": "sharding-core/sharding-core-rewrite/pom.xml", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilder.java", "insertions": 0, "deletions": 92, "lines": 92}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/token/pojo/generic/InsertValuesToken.java", "insertions": 0, "deletions": 114, "lines": 114}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptCondition.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptConditionEngine.java", "insertions": 4, "deletions": 18, "lines": 22}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/aware/EncryptRuleAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/aware/QueryWithCipherColumnAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/context/EncryptSQLRewriteContextDecorator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/EncryptParameterRewriter.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/EncryptParameterRewriterBuilder.java", "insertions": 15, "deletions": 15, "lines": 30}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptAssignmentParameterRewriter.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptInsertValueParameterRewriter.java", "insertions": 26, "deletions": 13, "lines": 39}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptPredicateParameterRewriter.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/EncryptTokenGenerateBuilder.java", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/BaseEncryptSQLTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/AssistQueryAndPlainInsertColumnsTokenGenerator.java", "insertions": 20, "deletions": 11, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptAssignmentTokenGenerator.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptForUseDefaultInsertColumnsTokenGenerator.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptInsertValuesTokenGenerator.java", "insertions": 42, "deletions": 32, "lines": 74}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptPredicateColumnTokenGenerator.java", "insertions": 10, "deletions": 24, "lines": 34}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java", "insertions": 24, "deletions": 20, "lines": 44}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptProjectionTokenGenerator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/InsertCipherNameTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptAssignmentToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/encrypt/token/pojo/EncryptInsertValuesToken.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptLiteralAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptParameterAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptPredicateRightValueToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/aware/SQLRouteResultAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/aware/ShardingRuleAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/context/ShardingSQLRewriteContextDecorator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/engine/ShardingSQLRewriteEngine.java", "insertions": 14, "deletions": 17, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/ShardingParameterRewriterBuilder.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/impl/ShardingGeneratedKeyInsertValueParameterRewriter.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/impl/ShardingPaginationParameterRewriter.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/sql/ShardingSQLBuilder.java", "insertions": 95, "deletions": 0, "lines": 95}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/IgnoreForSingleRoute.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/AggregationDistinctTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/DistinctProjectionPrefixTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/IndexTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/OffsetTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/OrderByTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/ProjectionsTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/RowCountTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/generator/impl/InsertValuesTokenGenerator.java => sql/rewriter/sharding/token/generator/impl/ShardingInsertValuesTokenGenerator.java}", "insertions": 16, "deletions": 15, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/TableTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/BaseGeneratedKeyTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyAssignmentTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyForUseDefaultInsertColumnsTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyInsertColumnTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyInsertValuesTokenGenerator.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/LogicAndActualTablesAware.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/sql/token/pojo/Alterable.java => sql/rewriter/sharding/token/pojo/RoutingUnitAware.java}", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/AggregationDistinctToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/DistinctProjectionPrefixToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/GeneratedKeyAssignmentToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/GeneratedKeyInsertColumnToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/IndexToken.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/LiteralGeneratedKeyAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/OffsetToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/OrderByToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/ParameterMarkerGeneratedKeyAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/ProjectionsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/RowCountToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/{test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteAssertionsRootEntity.java => main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/impl/ShardingInsertValue.java}", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/impl/ShardingInsertValuesToken.java", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token => sql/rewriter/sharding/token/pojo/impl}/ShardingTokenGenerateBuilder.java", "insertions": 20, "deletions": 20, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/TableToken.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/EncryptSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 161, "lines": 161}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/MixSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 257, "lines": 257}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/ShardingSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 249, "lines": 249}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteAssertionEntity.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteInputEntity.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteOutputEntity.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptConditionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/encrypt/parameterized/EncryptSQLRewriterParameterizedTest.java", "insertions": 93, "deletions": 0, "lines": 93}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptLiteralAssignmentTokenTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptParameterAssignmentTokenTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptPredicateTokenTest.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/NormalEncryptorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/QueryAssistedEncryptorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/ShardingKeyGeneratorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/mix/parameterized/MixSQLRewriterParameterizedTest.java", "insertions": 124, "deletions": 0, "lines": 124}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/sharding/parameterized/ShardingSQLRewriterParameterizedTest.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/META-INF/services/org.apache.shardingsphere.spi.encrypt.ShardingEncryptor", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/META-INF/services/org.apache.shardingsphere.spi.keygen.ShardingKeyGenerator", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-core/sharding-core-route/pom.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ShardingRouter.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngine.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/DatabaseTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/hook/SPIRoutingHookTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/spi/SPITimeServiceTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/complex/ComplexRoutingEngineTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/AbstractSQLRouteTest.java", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-jdbc-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-proxy-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-ui-distribution/pom.xml", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-distribution/shardingsphere-src-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/pom.xml", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/engine/BaseIT.java", "insertions": 27, "deletions": 35, "lines": 62}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/env/IntegrateTestEnvironment.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env.properties", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractStatementExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutor.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutor.java", "insertions": 4, "deletions": 9, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactory.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutor.java", "insertions": 11, "deletions": 16, "lines": 27}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractResultSetAdapter.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/AbstractRuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/EncryptRuntimeContext.java", "insertions": 5, "deletions": 11, "lines": 16}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/RuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/ShardingRuntimeContext.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/ShardingDataSource.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSet.java", "insertions": 118, "deletions": 65, "lines": 183}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSet.java", "insertions": 67, "deletions": 27, "lines": 94}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatement.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ResultSetEncryptorMetaData.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 25, "deletions": 7, "lines": 32}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingStatement.java", "insertions": 23, "deletions": 6, "lines": 29}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/common/base/AbstractEncryptJDBCDatabaseAndTableTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractBaseExecutorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutorTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactoryTest.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/fixture/TestDataSource.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSetTest.java", "insertions": 33, "deletions": 37, "lines": 70}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatementTest.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatementTest.java", "insertions": 25, "deletions": 9, "lines": 34}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/jdbc_init.sql", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingRootInvokeHook.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHook.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-opentracing/src/test/java/org/apache/shardingsphere/opentracing/hook/OpenTracingRootInvokeHookTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/test/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHookTest.java", "insertions": 7, "deletions": 16, "lines": 23}, {"filePath": "sharding-orchestration/sharding-orchestration-config/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/pom.xml", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/java/org/apache/shardingsphere/orchestration/config/apollo/ApolloConfigCenterTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/resources/apollo-env.properties", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/resources/logback-test.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-zookeeper-curator/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSnowflakeKeyGenerator.java", "insertions": 18, "deletions": 7, "lines": 25}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGeneratorTest.java", "insertions": 87, "deletions": 87, "lines": 174}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSnowflakeKeyGeneratorTest.java", "insertions": 130, "deletions": 64, "lines": 194}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java", "insertions": 50, "deletions": 16, "lines": 66}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/QueryHeaderEncryptorMetaData.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallback.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxySQLExecuteCallback.java", "insertions": 3, "deletions": 28, "lines": 31}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/StatementExecutorWrapper.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/executor/BackendExecutorContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeader.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/LogicSchema.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/EncryptSchema.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/MasterSlaveSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/ShardingSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/TransparentSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ShowDatabasesBackendHandler.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowStatusExecutor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowTableStatusExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/show/ShardingCTLShowBackendHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallbackTest.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeaderTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-frontend/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/executor/UserExecutorGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/constant/MySQLServerInfo.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacket.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacketTest.java", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/codec/PostgreSQLPacketCodecEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/config/JdbcDataSourceConfiguration.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-sql-test/src/main/java/org/apache/shardingsphere/test/sql/loader/SQLCasesLoader.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dml/insert.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-bitronix/pom.xml", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/MariaDBXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/OracleXADataSourceDefinition.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/PostgreSQLXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/SQLServerXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-base/pom.xml", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/main/java/org/apache/shardingsphere/transaction/base/seata/at/SeataTransactionBroadcaster.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/main/java/org/apache/shardingsphere/transaction/base/seata/at/TransactionalSQLExecutionHook.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/test/java/org/apache/shardingsphere/transaction/base/seata/at/SeataATShardingTransactionManagerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/test/java/org/apache/shardingsphere/transaction/base/seata/at/TransactionalSQLExecutionHookTest.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "sharding-ui/sharding-ui-backend/pom.xml", "insertions": 34, "deletions": 31, "lines": 65}, {"filePath": "sharding-ui/sharding-ui-frontend/src/App.vue", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "sharding-ui/sharding-ui-frontend/src/components/Head/index.vue", "insertions": 20, "deletions": 17, "lines": 37}, {"filePath": "sharding-ui/sharding-ui-frontend/src/lang/en-US.js", "insertions": 23, "deletions": 4, "lines": 27}, {"filePath": "sharding-ui/sharding-ui-frontend/src/lang/zh-CN.js", "insertions": 25, "deletions": 6, "lines": 31}, {"filePath": "sharding-ui/sharding-ui-frontend/src/main.js", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/registry-center/module/registryCenter.vue", "insertions": 28, "deletions": 28, "lines": 56}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/rule-config/index.vue", "insertions": 9, "deletions": 8, "lines": 17}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/rule-config/module/schema.vue", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/index.vue", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/module/dataSource.vue", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/module/instance.vue", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/item/SelectItemsSegment.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/test/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/item/SelectItemsSegmentTest.java", "insertions": 0, "deletions": 41, "lines": 41}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/MySQLKeyword.g4", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/groupby/engine/GroupByContextEngine.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/ProjectionsContext.java", "insertions": 2, "deletions": 45, "lines": 47}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/engine/ProjectionsContextEngine.java", "insertions": 43, "deletions": 4, "lines": 47}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/statement/impl/SelectSQLStatementContext.java", "insertions": 0, "deletions": 10, "lines": 10}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/ProjectionsContextTest.java", "insertions": 11, "deletions": 115, "lines": 126}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/engine/ProjectionsContextEngineTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/statement/impl/SelectSQLStatementContextTest.java", "insertions": 2, "deletions": 20, "lines": 22}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-sqlserver/src/main/antlr4/imports/sqlserver/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sharding/dml/insert.xml", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sharding/dml/select.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "shardingsphere-sql-rewriter/pom.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/pom.xml", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/context/SQLRewriteContext.java", "insertions": 18, "deletions": 29, "lines": 47}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/context/SQLRewriteContextDecorator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/SQLRewriteEngine.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/SQLRewriteResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/impl/DefaultSQLRewriteEngine.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/ParameterBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/impl/GroupedParameterBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/impl/StandardParameterBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/rewriter/ParameterRewriter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/rewriter/ParameterRewriterBuilder.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/SQLBuilder.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/impl/AbstractSQLBuilder.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/impl/DefaultSQLBuilder.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/CollectionSQLTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/OptionalSQLTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/SQLTokenGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/SQLTokenGenerators.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/aware/ParametersAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/aware/PreviousSQLTokensAware.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/token/generator/aware/TableMetasAware.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/generator/aware/RelationMetasAware.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/builder/DefaultTokenGeneratorBuilder.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/builder/SQLTokenGeneratorBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/generic/RemoveTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/Attachable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/SQLToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/Substitutable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/InsertColumnsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/pojo/generic/InsertValue.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/pojo/generic/InsertValuesToken.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/RemoveToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/SubstitutableColumnNameToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/UseDefaultInsertColumnsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilderTest.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter/impl/DefaultSQLBuilderTest.java", "insertions": 11, "deletions": 13, "lines": 24}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameter/builder => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter}/impl/GroupedParameterBuilderTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameter/builder => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter}/impl/StandardParameterBuilderTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/pom.xml", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/AbstractSQLRewriterParameterizedTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/parameter/SQLRewriteEngineTestParameters.java", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/parameter/SQLRewriteEngineTestParametersBuilder.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteAssertionEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteAssertionsRootEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteInputEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteOutputEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/loader/EncryptRewriteAssertionsRootEntityLoader.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/loader/RewriteAssertionsRootEntityLoader.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Inaccurate result when execute `desc encrypt_table`", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nHere is the configuration,\r\n```\r\nschemaName: encrypt_db\r\n\r\ndataSource:\r\n  url: jdbc:mysql://127.0.0.1:3306/demo_ds?serverTimezone=UTC&useSSL=false\r\n  username: root\r\n  password:\r\n  connectionTimeoutMilliseconds: 30000\r\n  idleTimeoutMilliseconds: 60000\r\n  maxLifetimeMilliseconds: 1800000\r\n  maxPoolSize: 50\r\n\r\nencryptRule:\r\n  encryptors:\r\n    encryptor_aes:\r\n      type: aes\r\n      props:\r\n        aes.key.value: 123456abc\r\n    encryptor_md5:\r\n      type: md5\r\n  tables:\r\n    t_encrypt:\r\n      columns:\r\n        user_id:\r\n          plainColumn: user_plain\r\n          cipherColumn: user_cipher\r\n          encryptor: encryptor_aes\r\n        order_id:\r\n          cipherColumn: order_cipher\r\n          encryptor: encryptor_md5\r\n```\r\n\r\nWhen execute `desc t_encrypt;`, expected result is \r\n```\r\nmysql> desc t_encrypt;\r\n+--------------+--------------+------+------+---------+----------------+\r\n| Field        | Type         | Null | Key  | Default | Extra          |\r\n+--------------+--------------+------+------+---------+----------------+\r\n| id           | int(11)      | NO   | PRI  | NULL    | auto_increment |\r\n| user_id  | varchar(200) | YES  |      | NULL    |                |\r\n| order_id | varchar(200) | YES  |      | NULL    |                |\r\n+--------------+--------------+------+------+---------+----------------+\r\n```\r\n### Actual behavior\r\n```\r\nmysql> desc t_encrypt;\r\n+--------------+--------------+------+------+---------+----------------+\r\n| Field        | Type         | Null | Key  | Default | Extra          |\r\n+--------------+--------------+------+------+---------+----------------+\r\n| id           | int(11)      | NO   | PRI  | NULL    | auto_increment |\r\n| user_plain   | varchar(200) | YES  |      | NULL    |                |\r\n| user_cipher  | varchar(200) | YES  |      | NULL    |                |\r\n| order_cipher | varchar(200) | YES  |      | NULL    |                |\r\n+--------------+--------------+------+------+---------+----------------+\r\n```\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3639", "user": "tristaZero", "labels": ["bug", "encrypt", "proxy"], "created": "2019-12-03 04:12:28", "closed": "2019-12-13 03:26:17", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Encryp-JDBC rewrite wrong sql when sql contain character '('", "body": "Encrypt-JDBC rewrite wrong sql when sql contain character '('. Besides, it works normally with the version of 4.0.0-RC2.\r\n\r\n\r\nVersion of ShardingSphere\r\n4.0.0-RC3\r\n\r\nJDBC I use\r\nEncrypt-JDBC\r\n\r\nExpected behavior\r\nRewrite the sql correct which is contain character '('\r\n\r\nActual behavior\r\nThe rewrite sql error when sql contain character '('\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n1.MySQL table and encrypt configuration\r\ntable\uff1a\r\ncreate table t_demo{\r\nusername varchar(20),\r\nphone varchar(20),\r\nusername_encrypt(64),\r\nphone_encrypt(64)\r\n}\r\nencrypt configuration\r\nspring.shardingsphere.datasource.name = ds\r\nspring.shardingsphere.datasource.ds.type = com.alibaba.druid.pool.DruidDataSource\r\nspring.shardingsphere.datasource.ds.driver-class-name = com.mysql.jdbc.Driver\r\nspring.shardingsphere.datasource.ds.url = xxx\r\nspring.shardingsphere.datasource.ds.username = xxx\r\nspring.shardingsphere.datasource.ds.password = xxx\r\nspring.shardingsphere.encrypt.encryptors.encryptor_aes.type = AES\r\nspring.shardingsphere.encrypt.tables.t_demo.columns.username.plainColumn = username\r\nspring.shardingsphere.encrypt.tables.t_demo.columns.username.cipherColumn = username_encrypt\r\nspring.shardingsphere.encrypt.tables.t_demo.columns.phone.plainColumn = phone\r\nspring.shardingsphere.encrypt.tables.t_demo.columns.phone.cipherColumn = phone_encrypt\r\nspring.shardingsphere.encrypt.tables.t_demo.columns.phone.encryptor = encryptor_aes\r\nspring.shardingsphere.encrypt.tables.t_demo.columns.username.encryptor = encryptor_aes\r\n\r\n2.My dao method definition\r\nList<User> query(@Param(\"phoneList\") List<String> phoneList);\r\n\r\n3.My mybatis sql\r\n<select id=\"query\" resultMap=\"xxx\">\r\n        SELECT * FROM t_demo t\r\n        WHERE\r\n        (t.username IN\r\n        <foreach collection=\"phoneList\" open=\"(\" separator=\",\" close=\")\" item=\"phone\">\r\n            #{phone}\r\n        </foreach>\r\n        OR t.phone IN\r\n        <foreach collection=\"phoneList\" open=\"(\" separator=\",\" close=\")\" item=\"phone\">\r\n            #{phone}\r\n        </foreach>)\r\n        AND delete = 0\r\n</select>\r\n\r\n4.Encrypt-JDBC rewrite sql(The rewrite sql get more left parenthesis)\r\nmethod: EncryptPreparedStatement.getSQLUnit(final String sql)\r\n\r\nsql: select * from t_demo t where (t.username_encrypt in (('xxx','xxxx') or t.phone_encrypt in (('xxx','xxxx')) and delete = 0;\r\n", "url": "https://github.com/apache/shardingsphere/issues/3618", "user": "HongJinFeng", "labels": ["bug", "encrypt"], "created": "2019-11-28 02:54:30", "closed": "2019-12-13 10:20:31", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "Performance declined by DatabaseMetaData::getUserName()", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC4-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nBoth\r\n### Expected behavior\r\nPerformance stable after merge https://github.com/apache/incubator-shardingsphere/pull/3541\r\n### Actual behavior\r\nPerformance declined\r\n### Reason analyze (If you can)\r\n` \r\nDataSourceMetaData dataSourceMetaData = databaseType.getDataSourceMetaData(new DataSourceInfo(metaData.getURL(), metaData.getUserName()));\r\n`\r\n\r\nmetaData.getUserName() will send a query: **select user()**. This additional SQL will be sent in each query and apparently influence the performance.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nAll scenarios when execute an SQL.\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3587", "user": "tuohai666", "labels": ["bug", "sharding"], "created": "2019-11-25 07:00:52", "closed": "2019-11-25 14:17:15", "commits": {"0b2e443b2cd275cb541d080d9966f3e2459f05d5": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "a41f4370470739aabef7079c3b20af5d24095eac": {"commitGHEventType": "referenced", "commitUser": "avalon566"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0b2e443b2cd275cb541d080d9966f3e2459f05d5", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["e7dbeeab1dde8cd53d8aaad8962fa562c8aad604"], "nameRev": "0b2e443b2cd275cb541d080d9966f3e2459f05d5 tags/4.0.0~68", "commitMessage": "#3587, cache DataSourceMetaData (#3588)\n\n* #3587, cache DataSourceMetaData\r\n\r\n* #3587, add test case\r\n", "commitDateTime": "2019-11-25 22:17:14", "authoredDateTime": "2019-11-25 22:17:14", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallback.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallbackTest.java", "insertions": 92, "deletions": 0, "lines": 92}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLExecuteCallback.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute0(org.apache.shardingsphere.core.execute.StatementExecuteUnit,boolean,java.util.Map)", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLExecuteCallbackTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallbackTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a41f4370470739aabef7079c3b20af5d24095eac", "commitGHEventType": "referenced", "commitUser": "avalon566", "commitParents": ["0e2aa9140101d051d5c4bf1532ce6dc052c446cf"], "nameRev": "a41f4370470739aabef7079c3b20af5d24095eac tags/shardingsphere-ui-4.1.0~252^2~39", "commitMessage": "Sharding scaling synchronize main branch (#3754)\n\n* Correct mismatched comments (#3594)\r\n\r\n* #3587, cache DataSourceMetaData (#3588)\r\n\r\n* #3587, cache DataSourceMetaData\r\n\r\n* #3587, add test case\r\n\r\n* fixes apollo debug & warn log, control log out by slf4j xml file. (#3583)\r\n\r\n* fixes apollo debug & warn log.\r\n\r\n* Move jul-to-slf4j -> root pom.\r\n\r\n* fixes jul-to-slf4j scope -> compile.\r\n\r\n* remove maven default scope.\r\n\r\n* Update snowflake algorithm to support modulus of 2^n  (#3595)\r\n\r\n* update vibration offset\r\n\r\n* add vibration offset test case\r\n\r\n* update vibration offset\r\n\r\n* update vibration offset\r\n\r\n* modify vibration offset test case\r\n\r\n* modify vibration offset test case\r\n\r\n* Refactor metadata (#3604)\r\n\r\n* decouple DatabaseType and DataSourceInfo\r\n\r\n* fix use == for string equals\r\n\r\n* decouple DataSourceMetaData and DataSourceInfo\r\n\r\n* fix javadoc\r\n\r\n* refactor LogicSchema.getDataSourceInfoMap()\r\n\r\n* reuse DatabaseAccessConfiguration and remove DataSourceInfo\r\n\r\n* refactor SQLExecuteCallback\r\n\r\n* change TableMetaDataInitializer's getTables parameter error. (#3589)\r\n\r\n* Modify SnowflakeShardingKeyGeneratorTest Unit-test case (#3610)\r\n\r\n* make all pom files consist (#3614)\r\n\r\n* make consist with pom\r\n\r\n* make consist with pom\r\n\r\n* adjust dependency sequence of ui-backend\r\n\r\n* for code style\r\n\r\n* ignore db test (#3615)\r\n\r\n* simplify test case assertLastDigitalOfGenerateKeySameMillisecond (#3616)\r\n\r\n* support SELECT DATABASE() (#3622)\r\n\r\n* Fixes #3627 (#3629)\r\n\r\n* move StatementExecuteUnit to sql package\r\n\r\n* move ShardingExecuteEngine to engine package\r\n\r\n* for code style\r\n\r\n* rename QueryResultBasedQueryResultFixture and ResultSetBasedQueryResultFixture\r\n\r\n* refactor DistinctQueryResult.getQueryRows()\r\n\r\n* skip distinct merge for group by and aggregation only\r\n\r\n* add DQLMergeEngine.isNeedProcessOrderBy\r\n\r\n* use group by to merge distinct row\r\n\r\n* add DQLMergeEngine.setGroupByForDistinctRow\r\n\r\n* remove useless SelectItemsSegment.findSelectItemSegments\r\n\r\n* code style for AggregationDistinctQueryResult\r\n\r\n* code style for AggregationDistinctQueryResult\r\n\r\n* remove DistinctQueryResult.divide()\r\n\r\n* remove useless DistinctQueryResult\r\n\r\n* use group by to process aggregation distinct\r\n\r\n* remove useless AggregationDistinctQueryResult\r\n\r\n* remove useless AggregationDistinctQueryMetaData\r\n\r\n* remove useless QueryResult.getQueryResultMetaData()\r\n\r\n* remove useless QueryRow.distinctColumnIndexes\r\n\r\n* remove useless QueryRow.distinctColumnIndexes\r\n\r\n* remove useless QueryRow.@EqualsAndHashCode\r\n\r\n* remove useless QueryRow\r\n\r\n* adjust constructor seq of DQLMergeEngine\r\n\r\n* refactor DQLMergeEngine's constructor\r\n\r\n* move ProjectionsContext.getColumnLabels() to ProjectionsContextEngine\r\n\r\n* remove DQLMergeEngine.tableMetas\r\n\r\n* refactor DQLMergeEngine\r\n\r\n* code style for ProjectionsContextEngine\r\n\r\n* #3550, update SERVER_VERSION of Sharding-Proxy (#3632)\r\n\r\n* Add maxVibrationOffset to LeafSnowflakeKeyGenerator (#3636)\r\n\r\n* #3640, fix missing milliseconds when reading (#3643)\r\n\r\n* #3640, fix missing milliseconds when reading\r\n\r\n* #3640, for test case\r\n\r\n* Uniform naming style for properties (#3649)\r\n\r\n* Decouple sharding-core-execute module and encrypt (#3654)\r\n\r\n* remove getter of StreamQueryResult.queryResultMetaData\r\n\r\n* refactor MemoryQueryResult\r\n\r\n* refactor StreamQueryResult\r\n\r\n* refactor StreamQueryResult\r\n\r\n* refactor MemoryQueryResult\r\n\r\n* refactor QueryResultMetaData\r\n\r\n* move decrypt from MemoryQueryResult & StreamQueryResult to EncryptResultSet, ShardingResultSet & JDBCDatabaseCommunicationEngine\r\n\r\n* remove useless SuppressWarnings\r\n\r\n* adjust method sequence of QueryResult\r\n\r\n* use MergedResult.getValue(columnIndex) instead of MergedResult.getValue(columnLabel)\r\n\r\n* remove useless MergedResult.getValue(columnLabel)\r\n\r\n* remove useless QueryResult.getValue(columnLabel)\r\n\r\n* decouple QueryResultMetaData and queryWithCipherColumn\r\n\r\n* remove QueryResultMetaData.queryWithCipherColumn\r\n\r\n* refactor QueryResultMetaData.findShardingEncryptorWithTable\r\n\r\n* remove QueryResultMetaData.getShardingEncryptor\r\n\r\n* remove QueryResultMetaData.columnLabelAndIndexes\r\n\r\n* remove QueryResultMetaData\r\n\r\n* remove QueryResultUtil\r\n\r\n* Update docker java version (#3652)\r\n\r\n* Update docker java version\r\n\r\n* Revert \"Update docker java version\"\r\n\r\nThis reverts commit 16c913b251db84bd5e87f863d86329af9f029547.\r\n\r\n* Change postgresql driver version\r\n\r\n* Remove QueryResult\u2018s fixture from merge test case (#3661)\r\n\r\n* remove useless throw exception for MergeEngineFactory\r\n\r\n* remove useless throw exception for MergeEngineFactoryTest\r\n\r\n* decouple MergeEngineFactoryTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple DALMergeEngineTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowCreateTableMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowDatabasesMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowOtherMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowTablesMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* refactor LogicTablesMergedResult's constructor\r\n\r\n* decouple DQLMergeEngineTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple StreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple MemoryQueryResultRowTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple MemoryMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByMemoryMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByRowComparatorTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByValueTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple IteratorStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple OrderByStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple OrderByValueTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple LimitDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple RowNumberDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple TopAndRowNumberDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* remove ResultSetBasedQueryResultFixture\r\n\r\n* decouple DescribeTableMergedResultTest and QueryResultBasedQueryResultFixture\r\n\r\n* remove QueryResultBasedQueryResultFixture\r\n\r\n* Decouple hook and route dependency for execute module (#3665)\r\n\r\n* decouple RouteUnit and SQLExecutionHook\r\n\r\n* decouple RouteUnit and StatementExecuteUnit\r\n\r\n* refactor SQLExecuteCallback.executeSQL\r\n\r\n* decouple RouteUnit and SQLExecutePrepareCallback\r\n\r\n* refactor SQLExecutePrepareCallback.createStatementExecuteUnit()\r\n\r\n* parse sqlserver keyword (#3667)\r\n\r\n* ci test (#3669)\r\n\r\n* Fixes #3671 (#3672)\r\n\r\n* remove useless constructor for ShowDatabasesMergedResult\r\n\r\n* refactor ShowDatabasesMergedResult\r\n\r\n* hide plain column for desc table\r\n\r\n* fix test case\r\n\r\n* Simplify memory merged result  (#3682)\r\n\r\n* for code style\r\n\r\n* pull up currentResultSetRow to MemoryMergedResult\r\n\r\n* remove useless labelAndIndexMap for MemoryMergedResult\r\n\r\n* refactor MemoryMergedResult.init()\r\n\r\n* pull up setCurrentResultSetRow to MemoryMergedResult\r\n\r\n* remove ShowIndexMergedResult, ShowTablesMergedResult & ShowTableStatusMergedResult\r\n\r\n* Fixes #2884 (#3663)\r\n\r\n* Fixes #2884\r\n* Fixes #2884, add test cases;\r\n* Format adjustment.\r\n* End file with a blank line.\r\n\r\n* load-table-metadata (#3684)\r\n\r\n* optimize orchestration datasource (#3685)\r\n\r\n* Decouple encrypt and sharding with ResultSet (#3688)\r\n\r\n* remove ShardingRule.isRoutingByHint()\r\n\r\n* refactor AbstractDataSourceAdapter.close()\r\n\r\n* remove useless getter for AbstractConnectionAdapter\r\n\r\n* decouple encrypt and sharding from ResultSet\r\n\r\n* clear code,delete no use empty judgment code. (#3690)\r\n\r\n* change TableMetaDataInitializer's getTables parameter error.\r\n\r\n* clear code,delete no use empty judgment code.\r\n\r\n* for code style (#3689)\r\n\r\n* fixes #3701, refactor ColumnMetaData class, remove notNull & autoIncrement fields. (#3705)\r\n\r\n* Standardize of merge engnie (#3709)\r\n\r\n* add LocalDataMergedResult\r\n\r\n* remove ShowDatabasesMergedResult's constructor of queryResults\r\n\r\n* refactor LocalDataMergedResult\r\n\r\n* add LocalDataMergedResult & SingleLocalDataMergedResult\r\n\r\n* remove LocalMergedResultAdapter\r\n\r\n* rename MergedResultMetaData to EncryptorMetaData\r\n\r\n* rename ShowOtherMergedResult to TransparentMergedResult\r\n\r\n* refactor test case for TransparentMergedResultTest\r\n\r\n* refactor SingleLocalDataMergedResultTest\r\n\r\n* add MultipleLocalDataMergedResultTest\r\n\r\n* add package name of encrypt.dal and encrypt.dql\r\n\r\n* rename EncryptMergeEngine to DQLEncryptMergeEngine\r\n\r\n* add generic for MemoryMergedResult\r\n\r\n* refactor EncryptResultSet's field as final\r\n\r\n* add desc table for encrypt only\r\n\r\n* refactor desc table for sharding + encrypt\r\n\r\n* remove DescribeTableMergedResult from DALMergeEngine\r\n\r\n* statement function strtodate (#3718)\r\n\r\n* Refactor: update a tiny issue (#3714)\r\n\r\n* Statement function base64 aesencrypt (#3726)\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* #3725, fix MemoryQueryResult wrong data type (#3728)\r\n\r\n* Encrypt statement column (#3715)\r\n\r\n* encrypt-statement-column\r\n\r\n* encrypt statement column\r\n\r\n* encrypt statement column\r\n\r\n* encrypte statement column\r\n\r\n* Check tableRule and throw error information friendly (#3734)\r\n\r\n* Encrypt select statement in operator (#3733)\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* Decouple Rewrite module with sharding and encrypt (#3741)\r\n\r\n* move getLogicAndActualTables from BaseShardingEngine to ShardingSQLRewriteEngine\r\n\r\n* refactor ShardingSQLRewriteEngine\r\n\r\n* add DefaultSQLBuilder and ShardingSQLBuilder\r\n\r\n* refactor DefaultSQLBuilder & ShardingSQLBuilder's input params\r\n\r\n* add AbstractSQLBuilder\r\n\r\n* split Alterable to LogicAndActualTablesAware and RoutingUnitAware\r\n\r\n* remove useless toString\r\n\r\n* split InsertValuesToken to ShardingInsertValuesToken & EncryptInsertValuesToken\r\n\r\n* Add Multilingual Settings (#3708)\r\n\r\n* feature[sharding-ui-frontend]:Support multilingual presentation #3266\r\n\r\n* refactor[sharding-ui-frontend]:Improve translation content\r\n\r\n* [sharding-ui-frontend]:Add Multilingual Settings\r\n\r\n* feature[sharding-ui-frontend]:Keep the name unified\r\n\r\n* Add new module shardingsphere-sql-rewriter (#3746)\r\n\r\n* add new module shardingsphere-sql-rewriter\r\n\r\n* rename package from org.apache.shardingsphere.core.rewrite ot org.apache.shardingsphere.sql.rewriter\r\n\r\n* rename package from org.apache.shardingsphere.core.rewrite ot org.apache.shardingsphere.sql.rewriter\r\n\r\n* add module shardingsphere-sql-rewriter-test\r\n\r\n* remove useless jaxb entity\r\n\r\n* rename EncryptRewriteAssertionsRootEntityLoader to RewriteAssertionsRootEntityLoader\r\n\r\n* refactor EncryptSQLRewriteEngineParameterizedTest\r\n\r\n* refactor EncryptSQLRewriteEngineParameterizedTest\r\n\r\n* add SQLRewriteEngineTestParameters\r\n\r\n* add AbstractSQLRewriteEngineParameterizedTest\r\n\r\n* refactor AbstractSQLRewriteEngineParameterizedTest.testParameters\r\n\r\n* add SQLRewriteEngineTestParameters.type\r\n\r\n* remove useless getter for AbstractSQLRewriteEngineParameterizedTest\r\n\r\n* rename SQLRewriteEngineParameterizedTest to SQLRewriterParameterizedTest\r\n\r\n* remove useless param from AbstractSQLRewriterParameterizedTest\r\n\r\n* rename AbstractSQLRewriterParameterizedTest.createSQLRewriteResults()\r\n\r\n* refactor EncryptSQLRewriterParameterizedTest\r\n\r\n* refactor EncryptSQLRewriterParameterizedTest\r\n\r\n* refactor pom of shardingsphere-sql-rewriter\r\n\r\n* use RelationMetas instead of TableMetas in rewriter module\r\n\r\n* add InsertValue\r\n\r\n* add ShardingInsertValue\r\n\r\n* decouple sharding-core-common & shardingsphere-sql-rewriter\r\n\r\n* rename package from org.apache.shardingsphere.sql.rewriter.feature to org.apache.shardingsphere.sql.rewriter\r\n\r\n* replace removed datasourceInfo\r\n", "commitDateTime": "2019-12-18 15:20:32", "authoredDateTime": "2019-12-18 15:20:32", "commitGitStats": [{"filePath": "jenkinsfile", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "pom.xml", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-core/database-time-service/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DataSourceInfo.java", "insertions": 0, "deletions": 35, "lines": 35}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DatabaseType.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ColumnMetaData.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/EncryptColumnMetaData.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ShardingGeneratedKeyColumnMetaData.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/DataSourceMetas.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MariaDBDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaData.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaData.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/EncryptRule.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java", "insertions": 1, "deletions": 12, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/encrypt/EncryptTable.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/keygen/SnowflakeShardingKeyGenerator.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/H2DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MariaDBDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MySQLDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/OracleDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/PostgreSQLDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQL92DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQLServerDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/ShardingSphereDataSourceMetaDataTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaDataTest.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaDataTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaDataTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetaDataTest.java", "insertions": 2, "deletions": 14, "lines": 16}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetasTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/EncryptRuleTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/TableRuleTest.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/encrypt/impl/EncryptTableTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/keygen/SnowflakeShardingKeyGeneratorTest.java", "insertions": 59, "deletions": 5, "lines": 64}, {"filePath": "sharding-core/sharding-core-entry/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-entry/src/main/java/org/apache/shardingsphere/core/BaseShardingEngine.java", "insertions": 17, "deletions": 40, "lines": 57}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/PreparedQueryShardingEngineTest.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/SimpleQueryShardingEngineTest.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteDataMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecutorService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingGroupExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingThreadFactoryBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/hook/SPISQLExecutionHook.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/hook/SQLExecutionHook.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataInitializer.java", "insertions": 4, "deletions": 12, "lines": 16}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataLoader.java", "insertions": 15, "deletions": 24, "lines": 39}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => sql}/StatementExecuteUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallback.java", "insertions": 22, "deletions": 12, "lines": 34}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteTemplate.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaData.java", "insertions": 0, "deletions": 219, "lines": 219}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResult.java", "insertions": 0, "deletions": 151, "lines": 151}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResult.java", "insertions": 0, "deletions": 186, "lines": 186}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 69, "deletions": 68, "lines": 137}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResult.java", "insertions": 14, "deletions": 52, "lines": 66}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaData.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 0, "deletions": 139, "lines": 139}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResult.java", "insertions": 45, "deletions": 75, "lines": 120}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRow.java", "insertions": 0, "deletions": 89, "lines": 89}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareTemplate.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteEngineTest.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/hook/SPISQLExecutionHookTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/hook/fixture/SQLExecutionHookFixture.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallbackTest.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaDataTest.java", "insertions": 0, "deletions": 129, "lines": 129}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResultTest.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResultTest.java", "insertions": 0, "deletions": 212, "lines": 212}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResultTest.java", "insertions": 240, "deletions": 99, "lines": 339}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaDataTest.java", "insertions": 0, "deletions": 117, "lines": 117}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 0, "deletions": 292, "lines": 292}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResultTest.java", "insertions": 95, "deletions": 158, "lines": 253}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRowTest.java", "insertions": 0, "deletions": 81, "lines": 81}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareTemplateTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-merge/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergeEngineFactory.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergedResult.java", "insertions": 0, "deletions": 31, "lines": 31}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngine.java", "insertions": 11, "deletions": 22, "lines": 33}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/common/MultipleLocalDataMergedResult.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/{show/LocalMergedResultAdapter.java => common/SingleLocalDataMergedResult.java}", "insertions": 25, "deletions": 17, "lines": 42}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/{show/ShowOtherMergedResult.java => common/TransparentMergedResult.java}", "insertions": 7, "deletions": 23, "lines": 30}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/LogicTablesMergedResult.java", "insertions": 10, "deletions": 31, "lines": 41}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowCreateTableMergedResult.java", "insertions": 4, "deletions": 11, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResult.java", "insertions": 0, "deletions": 84, "lines": 84}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowIndexMergedResult.java", "insertions": 0, "deletions": 57, "lines": 57}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowTableStatusMergedResult.java", "insertions": 0, "deletions": 61, "lines": 61}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowTablesMergedResult.java", "insertions": 0, "deletions": 58, "lines": 58}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngine.java", "insertions": 43, "deletions": 76, "lines": 119}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/DecoratorMergedResult.java", "insertions": 0, "deletions": 15, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/MemoryMergedResult.java", "insertions": 25, "deletions": 30, "lines": 55}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/StreamMergedResult.java", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResult.java", "insertions": 24, "deletions": 34, "lines": 58}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResult.java", "insertions": 2, "deletions": 16, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/AggregationUnitFactory.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctAverageAggregationUnit.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctCountAggregationUnit.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctSumAggregationUnit.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/orderby/CompareUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dal/DALEncryptMergeEngine.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/{dal/desc => encrypt/dal}/DescribeTableMergedResult.java", "insertions": 16, "deletions": 49, "lines": 65}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/{dal/show/ShowShardingCTLMergedResult.java => encrypt/dql/DQLEncryptMergeEngine.java}", "insertions": 10, "deletions": 15, "lines": 25}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dql/EncryptMergedResult.java", "insertions": 72, "deletions": 0, "lines": 72}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dql/EncryptorMetaData.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/MergeEngineFactoryTest.java", "insertions": 13, "deletions": 21, "lines": 34}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngineTest.java", "insertions": 12, "deletions": 15, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/MultipleLocalDataMergedResultTest.java", "insertions": 74, "deletions": 0, "lines": 74}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/SingleLocalDataMergedResultTest.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/TransparentMergedResultTest.java", "insertions": 79, "deletions": 0, "lines": 79}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/desc/DescribeTableMergedResultTest.java", "insertions": 0, "deletions": 201, "lines": 201}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowCreateTableMergedResultTest.java", "insertions": 31, "deletions": 52, "lines": 83}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResultTest.java", "insertions": 0, "deletions": 143, "lines": 143}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowOtherMergedResultTest.java", "insertions": 0, "deletions": 417, "lines": 417}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowTablesMergedResultTest.java", "insertions": 28, "deletions": 35, "lines": 63}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 95, "deletions": 137, "lines": 232}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/DecoratorMergedResultTest.java", "insertions": 0, "deletions": 19, "lines": 19}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/MemoryMergedResultTest.java", "insertions": 13, "deletions": 64, "lines": 77}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/MemoryQueryResultRowTest.java", "insertions": 5, "deletions": 15, "lines": 20}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/StreamMergedResultTest.java", "insertions": 20, "deletions": 373, "lines": 393}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/fixture/TestMemoryMergedResult.java", "insertions": 21, "deletions": 6, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 54, "deletions": 79, "lines": 133}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparatorTest.java", "insertions": 28, "deletions": 27, "lines": 55}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 74, "deletions": 103, "lines": 177}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByValueTest.java", "insertions": 10, "deletions": 16, "lines": 26}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/AggregationUnitFactoryTest.java", "insertions": 20, "deletions": 5, "lines": 25}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/iterator/IteratorStreamMergedResultTest.java", "insertions": 18, "deletions": 30, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 16, "deletions": 33, "lines": 49}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByValueTest.java", "insertions": 25, "deletions": 47, "lines": 72}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResultTest.java", "insertions": 19, "deletions": 43, "lines": 62}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResultTest.java", "insertions": 23, "deletions": 47, "lines": 70}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResultTest.java", "insertions": 27, "deletions": 51, "lines": 78}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/encrypt/dal/DescribeTableMergedResultTest.java", "insertions": 104, "deletions": 0, "lines": 104}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/DescribeQueryResultFixture.java", "insertions": 0, "deletions": 105, "lines": 105}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/TestQueryResult.java", "insertions": 0, "deletions": 229, "lines": 229}, {"filePath": "sharding-core/sharding-core-rewrite/pom.xml", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilder.java", "insertions": 0, "deletions": 92, "lines": 92}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/token/pojo/generic/InsertValuesToken.java", "insertions": 0, "deletions": 114, "lines": 114}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptCondition.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptConditionEngine.java", "insertions": 4, "deletions": 18, "lines": 22}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/aware/EncryptRuleAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/aware/QueryWithCipherColumnAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/context/EncryptSQLRewriteContextDecorator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/EncryptParameterRewriter.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/EncryptParameterRewriterBuilder.java", "insertions": 15, "deletions": 15, "lines": 30}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptAssignmentParameterRewriter.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptInsertValueParameterRewriter.java", "insertions": 26, "deletions": 13, "lines": 39}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptPredicateParameterRewriter.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/EncryptTokenGenerateBuilder.java", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/BaseEncryptSQLTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/AssistQueryAndPlainInsertColumnsTokenGenerator.java", "insertions": 20, "deletions": 11, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptAssignmentTokenGenerator.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptForUseDefaultInsertColumnsTokenGenerator.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptInsertValuesTokenGenerator.java", "insertions": 42, "deletions": 32, "lines": 74}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptPredicateColumnTokenGenerator.java", "insertions": 10, "deletions": 24, "lines": 34}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java", "insertions": 24, "deletions": 20, "lines": 44}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptProjectionTokenGenerator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/InsertCipherNameTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptAssignmentToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/encrypt/token/pojo/EncryptInsertValuesToken.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptLiteralAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptParameterAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptPredicateRightValueToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/aware/SQLRouteResultAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/aware/ShardingRuleAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/context/ShardingSQLRewriteContextDecorator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/engine/ShardingSQLRewriteEngine.java", "insertions": 14, "deletions": 17, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/ShardingParameterRewriterBuilder.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/impl/ShardingGeneratedKeyInsertValueParameterRewriter.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/impl/ShardingPaginationParameterRewriter.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/sql/ShardingSQLBuilder.java", "insertions": 95, "deletions": 0, "lines": 95}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/IgnoreForSingleRoute.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/AggregationDistinctTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/DistinctProjectionPrefixTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/IndexTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/OffsetTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/OrderByTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/ProjectionsTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/RowCountTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/generator/impl/InsertValuesTokenGenerator.java => sql/rewriter/sharding/token/generator/impl/ShardingInsertValuesTokenGenerator.java}", "insertions": 16, "deletions": 15, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/TableTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/BaseGeneratedKeyTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyAssignmentTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyForUseDefaultInsertColumnsTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyInsertColumnTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyInsertValuesTokenGenerator.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/LogicAndActualTablesAware.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/sql/token/pojo/Alterable.java => sql/rewriter/sharding/token/pojo/RoutingUnitAware.java}", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/AggregationDistinctToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/DistinctProjectionPrefixToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/GeneratedKeyAssignmentToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/GeneratedKeyInsertColumnToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/IndexToken.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/LiteralGeneratedKeyAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/OffsetToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/OrderByToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/ParameterMarkerGeneratedKeyAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/ProjectionsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/RowCountToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/{test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteAssertionsRootEntity.java => main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/impl/ShardingInsertValue.java}", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/impl/ShardingInsertValuesToken.java", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token => sql/rewriter/sharding/token/pojo/impl}/ShardingTokenGenerateBuilder.java", "insertions": 20, "deletions": 20, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/TableToken.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/EncryptSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 161, "lines": 161}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/MixSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 257, "lines": 257}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/ShardingSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 249, "lines": 249}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteAssertionEntity.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteInputEntity.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteOutputEntity.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptConditionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/encrypt/parameterized/EncryptSQLRewriterParameterizedTest.java", "insertions": 93, "deletions": 0, "lines": 93}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptLiteralAssignmentTokenTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptParameterAssignmentTokenTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptPredicateTokenTest.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/NormalEncryptorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/QueryAssistedEncryptorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/ShardingKeyGeneratorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/mix/parameterized/MixSQLRewriterParameterizedTest.java", "insertions": 124, "deletions": 0, "lines": 124}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/sharding/parameterized/ShardingSQLRewriterParameterizedTest.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/META-INF/services/org.apache.shardingsphere.spi.encrypt.ShardingEncryptor", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/META-INF/services/org.apache.shardingsphere.spi.keygen.ShardingKeyGenerator", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-core/sharding-core-route/pom.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ShardingRouter.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngine.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/DatabaseTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/hook/SPIRoutingHookTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/spi/SPITimeServiceTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/complex/ComplexRoutingEngineTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/AbstractSQLRouteTest.java", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-jdbc-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-proxy-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-ui-distribution/pom.xml", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-distribution/shardingsphere-src-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/pom.xml", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/engine/BaseIT.java", "insertions": 27, "deletions": 35, "lines": 62}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/env/IntegrateTestEnvironment.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env.properties", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractStatementExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutor.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutor.java", "insertions": 4, "deletions": 9, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactory.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutor.java", "insertions": 11, "deletions": 16, "lines": 27}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractResultSetAdapter.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/AbstractRuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/EncryptRuntimeContext.java", "insertions": 5, "deletions": 11, "lines": 16}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/RuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/ShardingRuntimeContext.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/ShardingDataSource.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSet.java", "insertions": 118, "deletions": 65, "lines": 183}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSet.java", "insertions": 67, "deletions": 27, "lines": 94}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatement.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ResultSetEncryptorMetaData.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 25, "deletions": 7, "lines": 32}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingStatement.java", "insertions": 23, "deletions": 6, "lines": 29}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/common/base/AbstractEncryptJDBCDatabaseAndTableTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractBaseExecutorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutorTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactoryTest.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/fixture/TestDataSource.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSetTest.java", "insertions": 33, "deletions": 37, "lines": 70}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatementTest.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatementTest.java", "insertions": 25, "deletions": 9, "lines": 34}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/jdbc_init.sql", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingRootInvokeHook.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHook.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-opentracing/src/test/java/org/apache/shardingsphere/opentracing/hook/OpenTracingRootInvokeHookTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/test/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHookTest.java", "insertions": 7, "deletions": 16, "lines": 23}, {"filePath": "sharding-orchestration/sharding-orchestration-config/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/pom.xml", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/java/org/apache/shardingsphere/orchestration/config/apollo/ApolloConfigCenterTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/resources/apollo-env.properties", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/resources/logback-test.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-zookeeper-curator/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSnowflakeKeyGenerator.java", "insertions": 18, "deletions": 7, "lines": 25}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGeneratorTest.java", "insertions": 87, "deletions": 87, "lines": 174}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSnowflakeKeyGeneratorTest.java", "insertions": 130, "deletions": 64, "lines": 194}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java", "insertions": 50, "deletions": 16, "lines": 66}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/QueryHeaderEncryptorMetaData.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallback.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxySQLExecuteCallback.java", "insertions": 3, "deletions": 28, "lines": 31}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/StatementExecutorWrapper.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/executor/BackendExecutorContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeader.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/LogicSchema.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/EncryptSchema.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/MasterSlaveSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/ShardingSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/TransparentSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ShowDatabasesBackendHandler.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowStatusExecutor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowTableStatusExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/show/ShardingCTLShowBackendHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallbackTest.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeaderTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-frontend/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/executor/UserExecutorGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/constant/MySQLServerInfo.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacket.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacketTest.java", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/codec/PostgreSQLPacketCodecEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/config/JdbcDataSourceConfiguration.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-sql-test/src/main/java/org/apache/shardingsphere/test/sql/loader/SQLCasesLoader.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dml/insert.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-bitronix/pom.xml", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/MariaDBXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/OracleXADataSourceDefinition.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/PostgreSQLXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/SQLServerXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-base/pom.xml", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/main/java/org/apache/shardingsphere/transaction/base/seata/at/SeataTransactionBroadcaster.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/main/java/org/apache/shardingsphere/transaction/base/seata/at/TransactionalSQLExecutionHook.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/test/java/org/apache/shardingsphere/transaction/base/seata/at/SeataATShardingTransactionManagerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/test/java/org/apache/shardingsphere/transaction/base/seata/at/TransactionalSQLExecutionHookTest.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "sharding-ui/sharding-ui-backend/pom.xml", "insertions": 34, "deletions": 31, "lines": 65}, {"filePath": "sharding-ui/sharding-ui-frontend/src/App.vue", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "sharding-ui/sharding-ui-frontend/src/components/Head/index.vue", "insertions": 20, "deletions": 17, "lines": 37}, {"filePath": "sharding-ui/sharding-ui-frontend/src/lang/en-US.js", "insertions": 23, "deletions": 4, "lines": 27}, {"filePath": "sharding-ui/sharding-ui-frontend/src/lang/zh-CN.js", "insertions": 25, "deletions": 6, "lines": 31}, {"filePath": "sharding-ui/sharding-ui-frontend/src/main.js", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/registry-center/module/registryCenter.vue", "insertions": 28, "deletions": 28, "lines": 56}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/rule-config/index.vue", "insertions": 9, "deletions": 8, "lines": 17}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/rule-config/module/schema.vue", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/index.vue", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/module/dataSource.vue", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/module/instance.vue", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/item/SelectItemsSegment.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/test/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/item/SelectItemsSegmentTest.java", "insertions": 0, "deletions": 41, "lines": 41}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/MySQLKeyword.g4", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/groupby/engine/GroupByContextEngine.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/ProjectionsContext.java", "insertions": 2, "deletions": 45, "lines": 47}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/engine/ProjectionsContextEngine.java", "insertions": 43, "deletions": 4, "lines": 47}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/statement/impl/SelectSQLStatementContext.java", "insertions": 0, "deletions": 10, "lines": 10}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/ProjectionsContextTest.java", "insertions": 11, "deletions": 115, "lines": 126}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/engine/ProjectionsContextEngineTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/statement/impl/SelectSQLStatementContextTest.java", "insertions": 2, "deletions": 20, "lines": 22}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-sqlserver/src/main/antlr4/imports/sqlserver/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sharding/dml/insert.xml", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sharding/dml/select.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "shardingsphere-sql-rewriter/pom.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/pom.xml", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/context/SQLRewriteContext.java", "insertions": 18, "deletions": 29, "lines": 47}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/context/SQLRewriteContextDecorator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/SQLRewriteEngine.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/SQLRewriteResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/impl/DefaultSQLRewriteEngine.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/ParameterBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/impl/GroupedParameterBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/impl/StandardParameterBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/rewriter/ParameterRewriter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/rewriter/ParameterRewriterBuilder.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/SQLBuilder.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/impl/AbstractSQLBuilder.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/impl/DefaultSQLBuilder.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/CollectionSQLTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/OptionalSQLTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/SQLTokenGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/SQLTokenGenerators.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/aware/ParametersAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/aware/PreviousSQLTokensAware.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/token/generator/aware/TableMetasAware.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/generator/aware/RelationMetasAware.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/builder/DefaultTokenGeneratorBuilder.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/builder/SQLTokenGeneratorBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/generic/RemoveTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/Attachable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/SQLToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/Substitutable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/InsertColumnsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/pojo/generic/InsertValue.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/pojo/generic/InsertValuesToken.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/RemoveToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/SubstitutableColumnNameToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/UseDefaultInsertColumnsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilderTest.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter/impl/DefaultSQLBuilderTest.java", "insertions": 11, "deletions": 13, "lines": 24}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameter/builder => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter}/impl/GroupedParameterBuilderTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameter/builder => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter}/impl/StandardParameterBuilderTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/pom.xml", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/AbstractSQLRewriterParameterizedTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/parameter/SQLRewriteEngineTestParameters.java", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/parameter/SQLRewriteEngineTestParametersBuilder.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteAssertionEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteAssertionsRootEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteInputEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteOutputEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/loader/EncryptRewriteAssertionsRootEntityLoader.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/loader/RewriteAssertionsRootEntityLoader.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "(Proxy) Response num of update is Zero for postgres JDBC client", "body": "Which version of ShardingSphere did you use?\r\nsharding-proxy : 4.0.0-RC3-SNAPSHOT\r\n\r\nExpected behavior\r\nWhen update one record, update success and return response number '1'\r\n\r\nActual behavior\r\nWhen update one record, update success and return response number '0'\r\n\r\nMy configure is the same as #3555, and update process is :\r\nString sql_update =\"UPDATE t_encrypt SET content = xxx where pwd = xxx\";\r\nint num = statement.executeUpdate(sql_update);\r\n", "url": "https://github.com/apache/shardingsphere/issues/3556", "user": "RaigorJiang", "labels": ["bug", "proxy"], "created": "2019-11-19 06:24:48", "closed": "2020-04-15 08:03:34", "commits": {"5560b579512d5497161caf86c24d3fa9852b044f": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "308f09f1fdb78cf650a4a75cf9b5adb88cbcedb2": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 148.00027777777777, "commitsDetails": [{"commitHash": "5560b579512d5497161caf86c24d3fa9852b044f", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["c9db163bcf81f7c650c81f713981d19f2aa8d0f8"], "nameRev": "5560b579512d5497161caf86c24d3fa9852b044f remotes/origin/resolveConflict~343", "commitMessage": "#3556, affect rows is always zero when using sharding-proxy postgresql mode (#5194)\n\n", "commitDateTime": "2020-04-15 16:03:33", "authoredDateTime": "2020-04-15 16:03:33", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/response/update/UpdateResponse.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-database-protocol/shardingsphere-database-protocol-postgresql/src/main/java/org/apache/shardingsphere/database/protocol/postgresql/packet/generic/PostgreSQLCommandCompletePacket.java", "insertions": 13, "deletions": 4, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JDBCExecuteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.JDBCExecuteEngine.execute(org.apache.shardingsphere.underlying.executor.context.ExecutionContext)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "UpdateResponse.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.response.update.UpdateResponse", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLComBindExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.binary.bind.PostgreSQLComBindExecutor.createUpdatePacket(org.apache.shardingsphere.shardingproxy.backend.response.update.UpdateResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLComQueryExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.text.PostgreSQLComQueryExecutor.createUpdatePacket(org.apache.shardingsphere.shardingproxy.backend.response.update.UpdateResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLCommandCompletePacket.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.database.protocol.postgresql.packet.generic.PostgreSQLCommandCompletePacket", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.database.protocol.postgresql.packet.generic.PostgreSQLCommandCompletePacket.write(org.apache.shardingsphere.database.protocol.postgresql.payload.PostgreSQLPacketPayload)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "308f09f1fdb78cf650a4a75cf9b5adb88cbcedb2", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["8ad915c23dfe47e68353686320cab8be7c5ec104"], "nameRev": "308f09f1fdb78cf650a4a75cf9b5adb88cbcedb2 tags/4.1.1~11", "commitMessage": "#3556, carry PR#5194 to dev-4.x (#5733)\n\n", "commitDateTime": "2020-05-21 18:19:11", "authoredDateTime": "2020-05-21 18:19:11", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java", "insertions": 17, "deletions": 4, "lines": 21}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/response/update/UpdateResponse.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-database-protocol/shardingsphere-database-protocol-postgresql/src/main/java/org/apache/shardingsphere/database/protocol/postgresql/packet/generic/PostgreSQLCommandCompletePacket.java", "insertions": 13, "deletions": 4, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JDBCExecuteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.JDBCExecuteEngine.execute(org.apache.shardingsphere.underlying.executor.context.ExecutionContext)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "UpdateResponse.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.response.update.UpdateResponse", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLComBindExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.binary.bind.PostgreSQLComBindExecutor.createUpdatePacket(org.apache.shardingsphere.shardingproxy.backend.response.update.UpdateResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLComQueryExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.text.PostgreSQLComQueryExecutor.createUpdatePacket(org.apache.shardingsphere.shardingproxy.backend.response.update.UpdateResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLCommandCompletePacket.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.database.protocol.postgresql.packet.generic.PostgreSQLCommandCompletePacket", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.database.protocol.postgresql.packet.generic.PostgreSQLCommandCompletePacket.write(org.apache.shardingsphere.database.protocol.postgresql.payload.PostgreSQLPacketPayload)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "(Proxy) Receive error response for postgres JDBC client", "body": "### Which version of ShardingSphere did you use?\r\nsharding-proxy : 4.0.0-RC3-SNAPSHOT\r\n\r\n### Expected behavior\r\nInsert record successful and get a correct response.\r\n\r\n### Actual behavior\r\nInsert record successful but the client get an error response.\r\n\r\n### Steps to reproduce the behavior\r\nTable structure:\r\n----------------------------------\r\nCREATE TABLE public.t_encrypt (\r\n pwd varchar(32) NULL,\r\n \"content\" varchar(32) NULL\r\n)\r\n----------------------------------\r\nconfig-encrypt.yaml:\r\n----------------------------------\r\n![image](https://user-images.githubusercontent.com/5668787/69121257-d4f00400-0ad6-11ea-9704-0abb4f0badf1.png)\r\n\r\n----------------------------------\r\nCode:\r\n`statement.executeUpdate(SQL_INSERT);`\r\n\r\nActual behavior:\r\nThe insert is successful and Proxy is OK, but the client gets an error.\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/3555", "user": "RaigorJiang", "labels": ["bug", "proxy"], "created": "2019-11-19 06:11:53", "closed": "2020-04-14 10:28:45", "commits": {"6a3552f615a3aadf8c8998d0386cd7360c763958": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "8ad915c23dfe47e68353686320cab8be7c5ec104": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 147.00027777777777, "commitsDetails": [{"commitHash": "6a3552f615a3aadf8c8998d0386cd7360c763958", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["f00955686375eb2708e94ed6f573c4992fffe9cd"], "nameRev": "6a3552f615a3aadf8c8998d0386cd7360c763958 remotes/origin/resolveConflict~356", "commitMessage": "#3555, fix postgresql proxy return redundant command complete packet (#5178)\n\n* #3555, fix postgresql proxy return redundant command complete packet\r\n\r\n* #3555, for comments", "commitDateTime": "2020-04-14 18:28:44", "authoredDateTime": "2020-04-14 18:28:44", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/execute/MySQLComStmtExecuteExecutor.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/text/query/MySQLComQueryPacketExecutor.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/PostgreSQLCommandExecuteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-spi/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/api/QueryCommandExecutor.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLComStmtExecuteExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor.isErrorResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLComQueryPacketExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.isErrorResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLCommandExecuteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.writeQueryData(io.netty.channel.ChannelHandlerContext,org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection,org.apache.shardingsphere.shardingproxy.frontend.api.QueryCommandExecutor,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLComBindExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.binary.bind.PostgreSQLComBindExecutor", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.binary.bind.PostgreSQLComBindExecutor.isErrorResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.binary.bind.PostgreSQLComBindExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLComQueryExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.text.PostgreSQLComQueryExecutor", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.text.PostgreSQLComQueryExecutor.isErrorResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.text.PostgreSQLComQueryExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryCommandExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.api.isUpdateResponse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8ad915c23dfe47e68353686320cab8be7c5ec104", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d3aa8e14743a94cdab5d22187737fb1b67768a4c"], "nameRev": "8ad915c23dfe47e68353686320cab8be7c5ec104 tags/4.1.1~12", "commitMessage": "#3555, carry PR#5178 to dev-4.x (#5731)\n\n", "commitDateTime": "2020-05-21 18:17:22", "authoredDateTime": "2020-05-21 18:17:22", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/execute/MySQLComStmtExecuteExecutor.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/text/query/MySQLComQueryPacketExecutor.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/PostgreSQLCommandExecuteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/query/binary/bind/PostgreSQLComBindExecutor.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/query/text/PostgreSQLComQueryExecutor.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-spi/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/api/QueryCommandExecutor.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLComStmtExecuteExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor.isErrorResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.binary.execute.MySQLComStmtExecuteExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLComQueryPacketExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.isErrorResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLCommandExecuteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.writeQueryData(io.netty.channel.ChannelHandlerContext,org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection,org.apache.shardingsphere.shardingproxy.frontend.api.QueryCommandExecutor,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLComBindExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.binary.bind.PostgreSQLComBindExecutor", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.binary.bind.PostgreSQLComBindExecutor.isErrorResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.binary.bind.PostgreSQLComBindExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLComQueryExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.text.PostgreSQLComQueryExecutor", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.text.PostgreSQLComQueryExecutor.isErrorResponse()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.query.text.PostgreSQLComQueryExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryCommandExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.api.isUpdateResponse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "sharding 4.0.0-RC2+seata 0.9.0, error :Caused by: java.sql.SQLFeatureNotSupportedException: ParameterMetaData", "body": "## Question\r\npom.xml:\r\n\r\n```xml\r\n<dependency>\r\n            <groupId>org.apache.shardingsphere</groupId>\r\n            <artifactId>sharding-jdbc-spring-boot-starter</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.shardingsphere</groupId>\r\n            <artifactId>sharding-transaction-base-seata-at</artifactId>\r\n            <version>4.0.0-RC2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.seata</groupId>\r\n            <artifactId>seata-all</artifactId>\r\n            <version>0.9.0</version>\r\n        </dependency>\r\n```\r\n\r\n\r\nseataconfig:\r\n\r\n```java\r\n@Bean\r\n    public DataSourceProxy dataSourceProxy(DataSource dataSource)  {\r\n        return new DataSourceProxy(dataSource);\r\n    }\r\n    @Bean\r\n    public SqlSessionFactory sqlSessionFactory(DataSourceProxy dataSourceProxy) throws Exception {\r\n        MybatisSqlSessionFactoryBean factoryBean = new MybatisSqlSessionFactoryBean();\r\n        factoryBean.setDataSource(dataSourceProxy);\r\n        return factoryBean.getObject();\r\n    }\r\n```\r\n\r\n\r\nerror message :\r\n\r\n```log\r\nCaused by: java.sql.SQLFeatureNotSupportedException: ParameterMetaData\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.unsupported.AbstractUnsupportedOperationPreparedStatement.getParameterMetaData(AbstractUnsupportedOperationPreparedStatement.java:52)\r\n\tat io.seata.rm.datasource.AbstractPreparedStatementProxy.initParameterHolder(AbstractPreparedStatementProxy.java:56)\r\n\tat io.seata.rm.datasource.AbstractPreparedStatementProxy.<init>(AbstractPreparedStatementProxy.java:74)\r\n\tat io.seata.rm.datasource.PreparedStatementProxy.<init>(PreparedStatementProxy.java:49)\r\n\tat io.seata.rm.datasource.AbstractConnectionProxy.prepareStatement(AbstractConnectionProxy.java:118)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:86)\r\n\tat org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)\r\n\tat com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.prepareStatement(MybatisSimpleExecutor.java:94)\r\n\tat com.baomidou.mybatisplus.core.executor.MybatisSimpleExecutor.doUpdate(MybatisSimpleExecutor.java:53)\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\r\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)\r\n```", "url": "https://github.com/apache/shardingsphere/issues/3551", "user": "dengjin001", "labels": ["bug", "jdbc", "volunteer wanted"], "created": "2019-11-18 10:01:50", "closed": "2019-11-21 02:26:21", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Timestamp miss milliseconds", "body": "### Which version of ShardingSphere did you use?\r\nshardingsphere-4.0.0-RC2-1\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\ninsert a timestamp value into table with milliseconds\r\n\r\n### Actual behavior\r\ninsert a timestamp value into table without milliseconds\r\n\r\n### Reason analyze (If you can)\r\nI think maybe related to the Timestamp long construtor in sharding-proxy ? or btm jdbc (but when insert to my db without proxy, it works perfect,so this should not be the cause)???\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nI am using bitronix tm in my application, just a normal simple insert sql with timestamp value with milliseconds in PreparedStatement. and my client os is windows 10 with Zulu openjdk 1.8.0_232. And the sharding-proxy is in Ubuntu 18.04 with Oracle jdk 1.8.0_211 and MySQL5.7\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\ninternal application,not available in github", "url": "https://github.com/apache/shardingsphere/issues/3550", "user": "lightning-pro", "labels": ["bug", "proxy"], "created": "2019-11-18 09:49:56", "closed": "2019-12-02 08:27:26", "commits": {"353fae2a62109bd235620366b0469260c0eab030": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "a41f4370470739aabef7079c3b20af5d24095eac": {"commitGHEventType": "referenced", "commitUser": "avalon566"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "353fae2a62109bd235620366b0469260c0eab030", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["0fd18a1b0af93e3437791b43c708b5f115fc289b"], "nameRev": "353fae2a62109bd235620366b0469260c0eab030 tags/4.0.0~57", "commitMessage": "#3550, update SERVER_VERSION of Sharding-Proxy (#3632)\n\n", "commitDateTime": "2019-12-02 16:27:25", "authoredDateTime": "2019-12-02 16:27:25", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/constant/MySQLServerInfo.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLServerInfo.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.constant.MySQLServerInfo", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a41f4370470739aabef7079c3b20af5d24095eac", "commitGHEventType": "referenced", "commitUser": "avalon566", "commitParents": ["0e2aa9140101d051d5c4bf1532ce6dc052c446cf"], "nameRev": "a41f4370470739aabef7079c3b20af5d24095eac tags/shardingsphere-ui-4.1.0~252^2~39", "commitMessage": "Sharding scaling synchronize main branch (#3754)\n\n* Correct mismatched comments (#3594)\r\n\r\n* #3587, cache DataSourceMetaData (#3588)\r\n\r\n* #3587, cache DataSourceMetaData\r\n\r\n* #3587, add test case\r\n\r\n* fixes apollo debug & warn log, control log out by slf4j xml file. (#3583)\r\n\r\n* fixes apollo debug & warn log.\r\n\r\n* Move jul-to-slf4j -> root pom.\r\n\r\n* fixes jul-to-slf4j scope -> compile.\r\n\r\n* remove maven default scope.\r\n\r\n* Update snowflake algorithm to support modulus of 2^n  (#3595)\r\n\r\n* update vibration offset\r\n\r\n* add vibration offset test case\r\n\r\n* update vibration offset\r\n\r\n* update vibration offset\r\n\r\n* modify vibration offset test case\r\n\r\n* modify vibration offset test case\r\n\r\n* Refactor metadata (#3604)\r\n\r\n* decouple DatabaseType and DataSourceInfo\r\n\r\n* fix use == for string equals\r\n\r\n* decouple DataSourceMetaData and DataSourceInfo\r\n\r\n* fix javadoc\r\n\r\n* refactor LogicSchema.getDataSourceInfoMap()\r\n\r\n* reuse DatabaseAccessConfiguration and remove DataSourceInfo\r\n\r\n* refactor SQLExecuteCallback\r\n\r\n* change TableMetaDataInitializer's getTables parameter error. (#3589)\r\n\r\n* Modify SnowflakeShardingKeyGeneratorTest Unit-test case (#3610)\r\n\r\n* make all pom files consist (#3614)\r\n\r\n* make consist with pom\r\n\r\n* make consist with pom\r\n\r\n* adjust dependency sequence of ui-backend\r\n\r\n* for code style\r\n\r\n* ignore db test (#3615)\r\n\r\n* simplify test case assertLastDigitalOfGenerateKeySameMillisecond (#3616)\r\n\r\n* support SELECT DATABASE() (#3622)\r\n\r\n* Fixes #3627 (#3629)\r\n\r\n* move StatementExecuteUnit to sql package\r\n\r\n* move ShardingExecuteEngine to engine package\r\n\r\n* for code style\r\n\r\n* rename QueryResultBasedQueryResultFixture and ResultSetBasedQueryResultFixture\r\n\r\n* refactor DistinctQueryResult.getQueryRows()\r\n\r\n* skip distinct merge for group by and aggregation only\r\n\r\n* add DQLMergeEngine.isNeedProcessOrderBy\r\n\r\n* use group by to merge distinct row\r\n\r\n* add DQLMergeEngine.setGroupByForDistinctRow\r\n\r\n* remove useless SelectItemsSegment.findSelectItemSegments\r\n\r\n* code style for AggregationDistinctQueryResult\r\n\r\n* code style for AggregationDistinctQueryResult\r\n\r\n* remove DistinctQueryResult.divide()\r\n\r\n* remove useless DistinctQueryResult\r\n\r\n* use group by to process aggregation distinct\r\n\r\n* remove useless AggregationDistinctQueryResult\r\n\r\n* remove useless AggregationDistinctQueryMetaData\r\n\r\n* remove useless QueryResult.getQueryResultMetaData()\r\n\r\n* remove useless QueryRow.distinctColumnIndexes\r\n\r\n* remove useless QueryRow.distinctColumnIndexes\r\n\r\n* remove useless QueryRow.@EqualsAndHashCode\r\n\r\n* remove useless QueryRow\r\n\r\n* adjust constructor seq of DQLMergeEngine\r\n\r\n* refactor DQLMergeEngine's constructor\r\n\r\n* move ProjectionsContext.getColumnLabels() to ProjectionsContextEngine\r\n\r\n* remove DQLMergeEngine.tableMetas\r\n\r\n* refactor DQLMergeEngine\r\n\r\n* code style for ProjectionsContextEngine\r\n\r\n* #3550, update SERVER_VERSION of Sharding-Proxy (#3632)\r\n\r\n* Add maxVibrationOffset to LeafSnowflakeKeyGenerator (#3636)\r\n\r\n* #3640, fix missing milliseconds when reading (#3643)\r\n\r\n* #3640, fix missing milliseconds when reading\r\n\r\n* #3640, for test case\r\n\r\n* Uniform naming style for properties (#3649)\r\n\r\n* Decouple sharding-core-execute module and encrypt (#3654)\r\n\r\n* remove getter of StreamQueryResult.queryResultMetaData\r\n\r\n* refactor MemoryQueryResult\r\n\r\n* refactor StreamQueryResult\r\n\r\n* refactor StreamQueryResult\r\n\r\n* refactor MemoryQueryResult\r\n\r\n* refactor QueryResultMetaData\r\n\r\n* move decrypt from MemoryQueryResult & StreamQueryResult to EncryptResultSet, ShardingResultSet & JDBCDatabaseCommunicationEngine\r\n\r\n* remove useless SuppressWarnings\r\n\r\n* adjust method sequence of QueryResult\r\n\r\n* use MergedResult.getValue(columnIndex) instead of MergedResult.getValue(columnLabel)\r\n\r\n* remove useless MergedResult.getValue(columnLabel)\r\n\r\n* remove useless QueryResult.getValue(columnLabel)\r\n\r\n* decouple QueryResultMetaData and queryWithCipherColumn\r\n\r\n* remove QueryResultMetaData.queryWithCipherColumn\r\n\r\n* refactor QueryResultMetaData.findShardingEncryptorWithTable\r\n\r\n* remove QueryResultMetaData.getShardingEncryptor\r\n\r\n* remove QueryResultMetaData.columnLabelAndIndexes\r\n\r\n* remove QueryResultMetaData\r\n\r\n* remove QueryResultUtil\r\n\r\n* Update docker java version (#3652)\r\n\r\n* Update docker java version\r\n\r\n* Revert \"Update docker java version\"\r\n\r\nThis reverts commit 16c913b251db84bd5e87f863d86329af9f029547.\r\n\r\n* Change postgresql driver version\r\n\r\n* Remove QueryResult\u2018s fixture from merge test case (#3661)\r\n\r\n* remove useless throw exception for MergeEngineFactory\r\n\r\n* remove useless throw exception for MergeEngineFactoryTest\r\n\r\n* decouple MergeEngineFactoryTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple DALMergeEngineTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowCreateTableMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowDatabasesMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowOtherMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple ShowTablesMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* refactor LogicTablesMergedResult's constructor\r\n\r\n* decouple DQLMergeEngineTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple StreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple MemoryQueryResultRowTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple MemoryMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByMemoryMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByRowComparatorTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple GroupByValueTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple IteratorStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple OrderByStreamMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple OrderByValueTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple LimitDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple RowNumberDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* decouple TopAndRowNumberDecoratorMergedResultTest and ResultSetBasedQueryResultFixture\r\n\r\n* remove ResultSetBasedQueryResultFixture\r\n\r\n* decouple DescribeTableMergedResultTest and QueryResultBasedQueryResultFixture\r\n\r\n* remove QueryResultBasedQueryResultFixture\r\n\r\n* Decouple hook and route dependency for execute module (#3665)\r\n\r\n* decouple RouteUnit and SQLExecutionHook\r\n\r\n* decouple RouteUnit and StatementExecuteUnit\r\n\r\n* refactor SQLExecuteCallback.executeSQL\r\n\r\n* decouple RouteUnit and SQLExecutePrepareCallback\r\n\r\n* refactor SQLExecutePrepareCallback.createStatementExecuteUnit()\r\n\r\n* parse sqlserver keyword (#3667)\r\n\r\n* ci test (#3669)\r\n\r\n* Fixes #3671 (#3672)\r\n\r\n* remove useless constructor for ShowDatabasesMergedResult\r\n\r\n* refactor ShowDatabasesMergedResult\r\n\r\n* hide plain column for desc table\r\n\r\n* fix test case\r\n\r\n* Simplify memory merged result  (#3682)\r\n\r\n* for code style\r\n\r\n* pull up currentResultSetRow to MemoryMergedResult\r\n\r\n* remove useless labelAndIndexMap for MemoryMergedResult\r\n\r\n* refactor MemoryMergedResult.init()\r\n\r\n* pull up setCurrentResultSetRow to MemoryMergedResult\r\n\r\n* remove ShowIndexMergedResult, ShowTablesMergedResult & ShowTableStatusMergedResult\r\n\r\n* Fixes #2884 (#3663)\r\n\r\n* Fixes #2884\r\n* Fixes #2884, add test cases;\r\n* Format adjustment.\r\n* End file with a blank line.\r\n\r\n* load-table-metadata (#3684)\r\n\r\n* optimize orchestration datasource (#3685)\r\n\r\n* Decouple encrypt and sharding with ResultSet (#3688)\r\n\r\n* remove ShardingRule.isRoutingByHint()\r\n\r\n* refactor AbstractDataSourceAdapter.close()\r\n\r\n* remove useless getter for AbstractConnectionAdapter\r\n\r\n* decouple encrypt and sharding from ResultSet\r\n\r\n* clear code,delete no use empty judgment code. (#3690)\r\n\r\n* change TableMetaDataInitializer's getTables parameter error.\r\n\r\n* clear code,delete no use empty judgment code.\r\n\r\n* for code style (#3689)\r\n\r\n* fixes #3701, refactor ColumnMetaData class, remove notNull & autoIncrement fields. (#3705)\r\n\r\n* Standardize of merge engnie (#3709)\r\n\r\n* add LocalDataMergedResult\r\n\r\n* remove ShowDatabasesMergedResult's constructor of queryResults\r\n\r\n* refactor LocalDataMergedResult\r\n\r\n* add LocalDataMergedResult & SingleLocalDataMergedResult\r\n\r\n* remove LocalMergedResultAdapter\r\n\r\n* rename MergedResultMetaData to EncryptorMetaData\r\n\r\n* rename ShowOtherMergedResult to TransparentMergedResult\r\n\r\n* refactor test case for TransparentMergedResultTest\r\n\r\n* refactor SingleLocalDataMergedResultTest\r\n\r\n* add MultipleLocalDataMergedResultTest\r\n\r\n* add package name of encrypt.dal and encrypt.dql\r\n\r\n* rename EncryptMergeEngine to DQLEncryptMergeEngine\r\n\r\n* add generic for MemoryMergedResult\r\n\r\n* refactor EncryptResultSet's field as final\r\n\r\n* add desc table for encrypt only\r\n\r\n* refactor desc table for sharding + encrypt\r\n\r\n* remove DescribeTableMergedResult from DALMergeEngine\r\n\r\n* statement function strtodate (#3718)\r\n\r\n* Refactor: update a tiny issue (#3714)\r\n\r\n* Statement function base64 aesencrypt (#3726)\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* statement function base64 aesencrypt\r\n\r\n* #3725, fix MemoryQueryResult wrong data type (#3728)\r\n\r\n* Encrypt statement column (#3715)\r\n\r\n* encrypt-statement-column\r\n\r\n* encrypt statement column\r\n\r\n* encrypt statement column\r\n\r\n* encrypte statement column\r\n\r\n* Check tableRule and throw error information friendly (#3734)\r\n\r\n* Encrypt select statement in operator (#3733)\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* encrypt statement in operator\r\n\r\n* Decouple Rewrite module with sharding and encrypt (#3741)\r\n\r\n* move getLogicAndActualTables from BaseShardingEngine to ShardingSQLRewriteEngine\r\n\r\n* refactor ShardingSQLRewriteEngine\r\n\r\n* add DefaultSQLBuilder and ShardingSQLBuilder\r\n\r\n* refactor DefaultSQLBuilder & ShardingSQLBuilder's input params\r\n\r\n* add AbstractSQLBuilder\r\n\r\n* split Alterable to LogicAndActualTablesAware and RoutingUnitAware\r\n\r\n* remove useless toString\r\n\r\n* split InsertValuesToken to ShardingInsertValuesToken & EncryptInsertValuesToken\r\n\r\n* Add Multilingual Settings (#3708)\r\n\r\n* feature[sharding-ui-frontend]:Support multilingual presentation #3266\r\n\r\n* refactor[sharding-ui-frontend]:Improve translation content\r\n\r\n* [sharding-ui-frontend]:Add Multilingual Settings\r\n\r\n* feature[sharding-ui-frontend]:Keep the name unified\r\n\r\n* Add new module shardingsphere-sql-rewriter (#3746)\r\n\r\n* add new module shardingsphere-sql-rewriter\r\n\r\n* rename package from org.apache.shardingsphere.core.rewrite ot org.apache.shardingsphere.sql.rewriter\r\n\r\n* rename package from org.apache.shardingsphere.core.rewrite ot org.apache.shardingsphere.sql.rewriter\r\n\r\n* add module shardingsphere-sql-rewriter-test\r\n\r\n* remove useless jaxb entity\r\n\r\n* rename EncryptRewriteAssertionsRootEntityLoader to RewriteAssertionsRootEntityLoader\r\n\r\n* refactor EncryptSQLRewriteEngineParameterizedTest\r\n\r\n* refactor EncryptSQLRewriteEngineParameterizedTest\r\n\r\n* add SQLRewriteEngineTestParameters\r\n\r\n* add AbstractSQLRewriteEngineParameterizedTest\r\n\r\n* refactor AbstractSQLRewriteEngineParameterizedTest.testParameters\r\n\r\n* add SQLRewriteEngineTestParameters.type\r\n\r\n* remove useless getter for AbstractSQLRewriteEngineParameterizedTest\r\n\r\n* rename SQLRewriteEngineParameterizedTest to SQLRewriterParameterizedTest\r\n\r\n* remove useless param from AbstractSQLRewriterParameterizedTest\r\n\r\n* rename AbstractSQLRewriterParameterizedTest.createSQLRewriteResults()\r\n\r\n* refactor EncryptSQLRewriterParameterizedTest\r\n\r\n* refactor EncryptSQLRewriterParameterizedTest\r\n\r\n* refactor pom of shardingsphere-sql-rewriter\r\n\r\n* use RelationMetas instead of TableMetas in rewriter module\r\n\r\n* add InsertValue\r\n\r\n* add ShardingInsertValue\r\n\r\n* decouple sharding-core-common & shardingsphere-sql-rewriter\r\n\r\n* rename package from org.apache.shardingsphere.sql.rewriter.feature to org.apache.shardingsphere.sql.rewriter\r\n\r\n* replace removed datasourceInfo\r\n", "commitDateTime": "2019-12-18 15:20:32", "authoredDateTime": "2019-12-18 15:20:32", "commitGitStats": [{"filePath": "jenkinsfile", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "pom.xml", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-core/database-time-service/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DataSourceInfo.java", "insertions": 0, "deletions": 35, "lines": 35}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DatabaseType.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ColumnMetaData.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/EncryptColumnMetaData.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ShardingGeneratedKeyColumnMetaData.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/DataSourceMetas.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MariaDBDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaData.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaData.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaData.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/EncryptRule.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java", "insertions": 1, "deletions": 12, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/encrypt/EncryptTable.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/keygen/SnowflakeShardingKeyGenerator.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/H2DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MariaDBDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MySQLDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/OracleDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/PostgreSQLDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQL92DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQLServerDatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/ShardingSphereDataSourceMetaDataTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaDataTest.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaDataTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaDataTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaDataTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetaDataTest.java", "insertions": 2, "deletions": 14, "lines": 16}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetasTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/EncryptRuleTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/TableRuleTest.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/encrypt/impl/EncryptTableTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/keygen/SnowflakeShardingKeyGeneratorTest.java", "insertions": 59, "deletions": 5, "lines": 64}, {"filePath": "sharding-core/sharding-core-entry/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-entry/src/main/java/org/apache/shardingsphere/core/BaseShardingEngine.java", "insertions": 17, "deletions": 40, "lines": 57}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/PreparedQueryShardingEngineTest.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/SimpleQueryShardingEngineTest.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteDataMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecutorService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingGroupExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingThreadFactoryBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/hook/SPISQLExecutionHook.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/hook/SQLExecutionHook.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataInitializer.java", "insertions": 4, "deletions": 12, "lines": 16}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataLoader.java", "insertions": 15, "deletions": 24, "lines": 39}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/{ => sql}/StatementExecuteUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallback.java", "insertions": 22, "deletions": 12, "lines": 34}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteTemplate.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaData.java", "insertions": 0, "deletions": 219, "lines": 219}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResult.java", "insertions": 0, "deletions": 151, "lines": 151}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResult.java", "insertions": 0, "deletions": 186, "lines": 186}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 69, "deletions": 68, "lines": 137}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResult.java", "insertions": 14, "deletions": 52, "lines": 66}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaData.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 0, "deletions": 139, "lines": 139}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResult.java", "insertions": 45, "deletions": 75, "lines": 120}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRow.java", "insertions": 0, "deletions": 89, "lines": 89}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareTemplate.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/{ => engine}/ShardingExecuteEngineTest.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/hook/SPISQLExecutionHookTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/hook/fixture/SQLExecutionHookFixture.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallbackTest.java", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaDataTest.java", "insertions": 0, "deletions": 129, "lines": 129}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResultTest.java", "insertions": 0, "deletions": 184, "lines": 184}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResultTest.java", "insertions": 0, "deletions": 212, "lines": 212}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResultTest.java", "insertions": 240, "deletions": 99, "lines": 339}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaDataTest.java", "insertions": 0, "deletions": 117, "lines": 117}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 0, "deletions": 292, "lines": 292}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResultTest.java", "insertions": 95, "deletions": 158, "lines": 253}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRowTest.java", "insertions": 0, "deletions": 81, "lines": 81}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/prepare/SQLExecutePrepareTemplateTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-merge/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergeEngineFactory.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergedResult.java", "insertions": 0, "deletions": 31, "lines": 31}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngine.java", "insertions": 11, "deletions": 22, "lines": 33}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/common/MultipleLocalDataMergedResult.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/{show/LocalMergedResultAdapter.java => common/SingleLocalDataMergedResult.java}", "insertions": 25, "deletions": 17, "lines": 42}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/{show/ShowOtherMergedResult.java => common/TransparentMergedResult.java}", "insertions": 7, "deletions": 23, "lines": 30}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/LogicTablesMergedResult.java", "insertions": 10, "deletions": 31, "lines": 41}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowCreateTableMergedResult.java", "insertions": 4, "deletions": 11, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResult.java", "insertions": 0, "deletions": 84, "lines": 84}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowIndexMergedResult.java", "insertions": 0, "deletions": 57, "lines": 57}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowTableStatusMergedResult.java", "insertions": 0, "deletions": 61, "lines": 61}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dal/show/ShowTablesMergedResult.java", "insertions": 0, "deletions": 58, "lines": 58}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngine.java", "insertions": 43, "deletions": 76, "lines": 119}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/DecoratorMergedResult.java", "insertions": 0, "deletions": 15, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/MemoryMergedResult.java", "insertions": 25, "deletions": 30, "lines": 55}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/common/StreamMergedResult.java", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResult.java", "insertions": 24, "deletions": 34, "lines": 58}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResult.java", "insertions": 2, "deletions": 16, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/AggregationUnitFactory.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctAverageAggregationUnit.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctCountAggregationUnit.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/DistinctSumAggregationUnit.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/orderby/CompareUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dal/DALEncryptMergeEngine.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/{dal/desc => encrypt/dal}/DescribeTableMergedResult.java", "insertions": 16, "deletions": 49, "lines": 65}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/{dal/show/ShowShardingCTLMergedResult.java => encrypt/dql/DQLEncryptMergeEngine.java}", "insertions": 10, "deletions": 15, "lines": 25}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dql/EncryptMergedResult.java", "insertions": 72, "deletions": 0, "lines": 72}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/encrypt/dql/EncryptorMetaData.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/MergeEngineFactoryTest.java", "insertions": 13, "deletions": 21, "lines": 34}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/DALMergeEngineTest.java", "insertions": 12, "deletions": 15, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/MultipleLocalDataMergedResultTest.java", "insertions": 74, "deletions": 0, "lines": 74}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/SingleLocalDataMergedResultTest.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/common/TransparentMergedResultTest.java", "insertions": 79, "deletions": 0, "lines": 79}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/desc/DescribeTableMergedResultTest.java", "insertions": 0, "deletions": 201, "lines": 201}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowCreateTableMergedResultTest.java", "insertions": 31, "deletions": 52, "lines": 83}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowDatabasesMergedResultTest.java", "insertions": 0, "deletions": 143, "lines": 143}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowOtherMergedResultTest.java", "insertions": 0, "deletions": 417, "lines": 417}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dal/show/ShowTablesMergedResultTest.java", "insertions": 28, "deletions": 35, "lines": 63}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 95, "deletions": 137, "lines": 232}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/DecoratorMergedResultTest.java", "insertions": 0, "deletions": 19, "lines": 19}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/MemoryMergedResultTest.java", "insertions": 13, "deletions": 64, "lines": 77}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/MemoryQueryResultRowTest.java", "insertions": 5, "deletions": 15, "lines": 20}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/StreamMergedResultTest.java", "insertions": 20, "deletions": 373, "lines": 393}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/common/fixture/TestMemoryMergedResult.java", "insertions": 21, "deletions": 6, "lines": 27}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 54, "deletions": 79, "lines": 133}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparatorTest.java", "insertions": 28, "deletions": 27, "lines": 55}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 74, "deletions": 103, "lines": 177}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByValueTest.java", "insertions": 10, "deletions": 16, "lines": 26}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/aggregation/AggregationUnitFactoryTest.java", "insertions": 20, "deletions": 5, "lines": 25}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/iterator/IteratorStreamMergedResultTest.java", "insertions": 18, "deletions": 30, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 16, "deletions": 33, "lines": 49}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByValueTest.java", "insertions": 25, "deletions": 47, "lines": 72}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResultTest.java", "insertions": 19, "deletions": 43, "lines": 62}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResultTest.java", "insertions": 23, "deletions": 47, "lines": 70}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResultTest.java", "insertions": 27, "deletions": 51, "lines": 78}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/encrypt/dal/DescribeTableMergedResultTest.java", "insertions": 104, "deletions": 0, "lines": 104}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/DescribeQueryResultFixture.java", "insertions": 0, "deletions": 105, "lines": 105}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/TestQueryResult.java", "insertions": 0, "deletions": 229, "lines": 229}, {"filePath": "sharding-core/sharding-core-rewrite/pom.xml", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilder.java", "insertions": 0, "deletions": 92, "lines": 92}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/token/pojo/generic/InsertValuesToken.java", "insertions": 0, "deletions": 114, "lines": 114}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptCondition.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptConditionEngine.java", "insertions": 4, "deletions": 18, "lines": 22}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/aware/EncryptRuleAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/aware/QueryWithCipherColumnAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/context/EncryptSQLRewriteContextDecorator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/EncryptParameterRewriter.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/EncryptParameterRewriterBuilder.java", "insertions": 15, "deletions": 15, "lines": 30}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptAssignmentParameterRewriter.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptInsertValueParameterRewriter.java", "insertions": 26, "deletions": 13, "lines": 39}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/parameter/impl/EncryptPredicateParameterRewriter.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/EncryptTokenGenerateBuilder.java", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/BaseEncryptSQLTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/AssistQueryAndPlainInsertColumnsTokenGenerator.java", "insertions": 20, "deletions": 11, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptAssignmentTokenGenerator.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptForUseDefaultInsertColumnsTokenGenerator.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptInsertValuesTokenGenerator.java", "insertions": 42, "deletions": 32, "lines": 74}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptPredicateColumnTokenGenerator.java", "insertions": 10, "deletions": 24, "lines": 34}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptPredicateRightValueTokenGenerator.java", "insertions": 24, "deletions": 20, "lines": 44}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/EncryptProjectionTokenGenerator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/generator/impl/InsertCipherNameTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptAssignmentToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/encrypt/token/pojo/EncryptInsertValuesToken.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptLiteralAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptParameterAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/token/pojo/EncryptPredicateRightValueToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/aware/SQLRouteResultAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/aware/ShardingRuleAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/context/ShardingSQLRewriteContextDecorator.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/engine/ShardingSQLRewriteEngine.java", "insertions": 14, "deletions": 17, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/ShardingParameterRewriterBuilder.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/impl/ShardingGeneratedKeyInsertValueParameterRewriter.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/parameter/impl/ShardingPaginationParameterRewriter.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/sql/ShardingSQLBuilder.java", "insertions": 95, "deletions": 0, "lines": 95}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/IgnoreForSingleRoute.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/AggregationDistinctTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/DistinctProjectionPrefixTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/IndexTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/OffsetTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/OrderByTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/ProjectionsTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/RowCountTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/generator/impl/InsertValuesTokenGenerator.java => sql/rewriter/sharding/token/generator/impl/ShardingInsertValuesTokenGenerator.java}", "insertions": 16, "deletions": 15, "lines": 31}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/TableTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/BaseGeneratedKeyTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyAssignmentTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyForUseDefaultInsertColumnsTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyInsertColumnTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/sharding/token/generator/impl/keygen/GeneratedKeyInsertValuesTokenGenerator.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/LogicAndActualTablesAware.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/sql/token/pojo/Alterable.java => sql/rewriter/sharding/token/pojo/RoutingUnitAware.java}", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/AggregationDistinctToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/DistinctProjectionPrefixToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/GeneratedKeyAssignmentToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/GeneratedKeyInsertColumnToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/IndexToken.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/LiteralGeneratedKeyAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/OffsetToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/OrderByToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/ParameterMarkerGeneratedKeyAssignmentToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/ProjectionsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/RowCountToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/{test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteAssertionsRootEntity.java => main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/impl/ShardingInsertValue.java}", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/sql/rewriter/sharding/token/pojo/impl/ShardingInsertValuesToken.java", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token => sql/rewriter/sharding/token/pojo/impl}/ShardingTokenGenerateBuilder.java", "insertions": 20, "deletions": 20, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/{core/rewrite/feature/sharding/token/pojo => sql/rewriter/sharding/token/pojo/impl}/TableToken.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/EncryptSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 161, "lines": 161}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/MixSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 257, "lines": 257}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/ShardingSQLRewriteEngineParameterizedTest.java", "insertions": 0, "deletions": 249, "lines": 249}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteAssertionEntity.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteInputEntity.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/entity/EncryptRewriteOutputEntity.java", "insertions": 0, "deletions": 40, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/feature => sql/rewriter}/encrypt/EncryptConditionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/encrypt/parameterized/EncryptSQLRewriterParameterizedTest.java", "insertions": 93, "deletions": 0, "lines": 93}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptLiteralAssignmentTokenTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptParameterAssignmentTokenTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite/sql/impl => sql/rewriter/encrypt/token/pojo}/EncryptPredicateTokenTest.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/NormalEncryptorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/QueryAssistedEncryptorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/{core/rewrite => sql/rewriter}/fixture/ShardingKeyGeneratorFixture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/mix/parameterized/MixSQLRewriterParameterizedTest.java", "insertions": 124, "deletions": 0, "lines": 124}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/sql/rewriter/sharding/parameterized/ShardingSQLRewriterParameterizedTest.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/META-INF/services/org.apache.shardingsphere.spi.encrypt.ShardingEncryptor", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/META-INF/services/org.apache.shardingsphere.spi.keygen.ShardingKeyGenerator", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-core/sharding-core-route/pom.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ShardingRouter.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngine.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/DatabaseTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/hook/SPIRoutingHookTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/spi/SPITimeServiceTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/complex/ComplexRoutingEngineTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/AbstractSQLRouteTest.java", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-jdbc-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-proxy-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/sharding-ui-distribution/pom.xml", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-distribution/shardingsphere-src-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/pom.xml", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/engine/BaseIT.java", "insertions": 27, "deletions": 35, "lines": 62}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/env/IntegrateTestEnvironment.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env.properties", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractStatementExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutor.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutor.java", "insertions": 4, "deletions": 9, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactory.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutor.java", "insertions": 11, "deletions": 16, "lines": 27}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractDataSourceAdapter.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractResultSetAdapter.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/AbstractRuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/EncryptRuntimeContext.java", "insertions": 5, "deletions": 11, "lines": 16}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/RuntimeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/ShardingRuntimeContext.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/ShardingDataSource.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/EncryptResultSet.java", "insertions": 118, "deletions": 65, "lines": 183}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSet.java", "insertions": 67, "deletions": 27, "lines": 94}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatement.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ResultSetEncryptorMetaData.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 25, "deletions": 7, "lines": 32}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingStatement.java", "insertions": 23, "deletions": 6, "lines": 29}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/common/base/AbstractEncryptJDBCDatabaseAndTableTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/AbstractBaseExecutorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutorTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactoryTest.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/fixture/TestDataSource.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ShardingResultSetTest.java", "insertions": 33, "deletions": 37, "lines": 70}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatementTest.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatementTest.java", "insertions": 25, "deletions": 9, "lines": 34}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/jdbc_init.sql", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingRootInvokeHook.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHook.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-opentracing/src/test/java/org/apache/shardingsphere/opentracing/hook/OpenTracingRootInvokeHookTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/test/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHookTest.java", "insertions": 7, "deletions": 16, "lines": 23}, {"filePath": "sharding-orchestration/sharding-orchestration-config/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/pom.xml", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/java/org/apache/shardingsphere/orchestration/config/apollo/ApolloConfigCenterTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/resources/apollo-env.properties", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-apollo/src/test/resources/logback-test.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-orchestration/sharding-orchestration-config/sharding-orchestration-config-zookeeper-curator/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSnowflakeKeyGenerator.java", "insertions": 18, "deletions": 7, "lines": 25}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGeneratorTest.java", "insertions": 87, "deletions": 87, "lines": 174}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSnowflakeKeyGeneratorTest.java", "insertions": 130, "deletions": 64, "lines": 194}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java", "insertions": 50, "deletions": 16, "lines": 66}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/QueryHeaderEncryptorMetaData.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallback.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxySQLExecuteCallback.java", "insertions": 3, "deletions": 28, "lines": 31}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/StatementExecutorWrapper.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/executor/BackendExecutorContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeader.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/LogicSchema.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/EncryptSchema.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/MasterSlaveSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/ShardingSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/TransparentSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ShowDatabasesBackendHandler.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowStatusExecutor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowTableStatusExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/show/ShardingCTLShowBackendHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/callback/ProxyJDBCExecutePrepareCallbackTest.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeaderTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-frontend/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/executor/UserExecutorGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/constant/MySQLServerInfo.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacket.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacketTest.java", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/codec/PostgreSQLPacketCodecEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-scaling/sharding-scaling-core/src/main/java/org/apache/shardingsphere/shardingscaling/core/config/JdbcDataSourceConfiguration.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-sql-test/src/main/java/org/apache/shardingsphere/test/sql/loader/SQLCasesLoader.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dml/insert.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-bitronix/pom.xml", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/MariaDBXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/OracleXADataSourceDefinition.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/PostgreSQLXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/SQLServerXADataSourceDefinition.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-transaction/sharding-transaction-base/pom.xml", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/main/java/org/apache/shardingsphere/transaction/base/seata/at/SeataTransactionBroadcaster.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/main/java/org/apache/shardingsphere/transaction/base/seata/at/TransactionalSQLExecutionHook.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/test/java/org/apache/shardingsphere/transaction/base/seata/at/SeataATShardingTransactionManagerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-base/sharding-transaction-base-seata-at/src/test/java/org/apache/shardingsphere/transaction/base/seata/at/TransactionalSQLExecutionHookTest.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "sharding-ui/sharding-ui-backend/pom.xml", "insertions": 34, "deletions": 31, "lines": 65}, {"filePath": "sharding-ui/sharding-ui-frontend/src/App.vue", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "sharding-ui/sharding-ui-frontend/src/components/Head/index.vue", "insertions": 20, "deletions": 17, "lines": 37}, {"filePath": "sharding-ui/sharding-ui-frontend/src/lang/en-US.js", "insertions": 23, "deletions": 4, "lines": 27}, {"filePath": "sharding-ui/sharding-ui-frontend/src/lang/zh-CN.js", "insertions": 25, "deletions": 6, "lines": 31}, {"filePath": "sharding-ui/sharding-ui-frontend/src/main.js", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/registry-center/module/registryCenter.vue", "insertions": 28, "deletions": 28, "lines": 56}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/rule-config/index.vue", "insertions": 9, "deletions": 8, "lines": 17}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/rule-config/module/schema.vue", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/index.vue", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/module/dataSource.vue", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/runtime-status/module/instance.vue", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/main/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/item/SelectItemsSegment.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-engine/src/test/java/org/apache/shardingsphere/sql/parser/sql/segment/dml/item/SelectItemsSegmentTest.java", "insertions": 0, "deletions": 41, "lines": 41}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-mysql/src/main/antlr4/imports/mysql/MySQLKeyword.g4", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/groupby/engine/GroupByContextEngine.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/ProjectionsContext.java", "insertions": 2, "deletions": 45, "lines": 47}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/engine/ProjectionsContextEngine.java", "insertions": 43, "deletions": 4, "lines": 47}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/main/java/org/apache/shardingsphere/sql/parser/relation/statement/impl/SelectSQLStatementContext.java", "insertions": 0, "deletions": 10, "lines": 10}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/ProjectionsContextTest.java", "insertions": 11, "deletions": 115, "lines": 126}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/segment/select/projection/engine/ProjectionsContextEngineTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-relation/src/test/java/org/apache/shardingsphere/sql/parser/relation/statement/impl/SelectSQLStatementContextTest.java", "insertions": 2, "deletions": 20, "lines": 22}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-sqlserver/src/main/antlr4/imports/sqlserver/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sharding/dml/insert.xml", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/resources/sharding/dml/select.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "shardingsphere-sql-rewriter/pom.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/pom.xml", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/context/SQLRewriteContext.java", "insertions": 18, "deletions": 29, "lines": 47}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/context/SQLRewriteContextDecorator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/SQLRewriteEngine.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/SQLRewriteResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/engine/impl/DefaultSQLRewriteEngine.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/ParameterBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/impl/GroupedParameterBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/builder/impl/StandardParameterBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/rewriter/ParameterRewriter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/parameter/rewriter/ParameterRewriterBuilder.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/SQLBuilder.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/impl/AbstractSQLBuilder.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/impl/DefaultSQLBuilder.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/CollectionSQLTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/OptionalSQLTokenGenerator.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/SQLTokenGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/SQLTokenGenerators.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/aware/ParametersAware.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/aware/PreviousSQLTokensAware.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/token/generator/aware/TableMetasAware.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/generator/aware/RelationMetasAware.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/builder/DefaultTokenGeneratorBuilder.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/builder/SQLTokenGeneratorBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/generator/generic/RemoveTokenGenerator.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/Attachable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/SQLToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/Substitutable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/InsertColumnsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/pojo/generic/InsertValue.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter/sql/token/pojo/generic/InsertValuesToken.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/RemoveToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/SubstitutableColumnNameToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/main/java/org/apache/shardingsphere/sql/rewriter}/sql/token/pojo/generic/UseDefaultInsertColumnsToken.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilderTest.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter/impl/DefaultSQLBuilderTest.java", "insertions": 11, "deletions": 13, "lines": 24}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameter/builder => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter}/impl/GroupedParameterBuilderTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameter/builder => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-engine/src/test/java/org/apache/shardingsphere/sql/rewriter}/impl/StandardParameterBuilderTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/pom.xml", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/AbstractSQLRewriterParameterizedTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/parameter/SQLRewriteEngineTestParameters.java", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/engine/parameter/SQLRewriteEngineTestParametersBuilder.java", "insertions": 116, "deletions": 0, "lines": 116}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteAssertionEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteAssertionsRootEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteInputEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized}/entity/RewriteOutputEntity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/jaxb/loader/EncryptRewriteAssertionsRootEntityLoader.java => shardingsphere-sql-rewriter/shardingsphere-sql-rewriter-test/src/main/java/org/apache/shardingsphere/sql/rewriter/parameterized/loader/RewriteAssertionsRootEntityLoader.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "XA failure of PostgreSQL", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nXA transaction succeed for PostgreSQL\r\n### Actual behavior\r\n![pg_xa](https://user-images.githubusercontent.com/24643893/69022500-6e93b480-09f6-11ea-93ec-b86555e32644.png)\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3545", "user": "tuohai666", "labels": ["bug", "jdbc", "proxy", "transaction"], "created": "2019-11-18 03:29:14", "closed": "2019-12-30 02:00:44", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "XAShardingTransactionManager could not compatible with AtomikosDataSourceBean", "body": "when we use AtomikosDataSource Bean in XA, getConnection will not take effect.", "url": "https://github.com/apache/shardingsphere/issues/3533", "user": "cherrylzhao", "labels": ["bug", "transaction"], "created": "2019-11-15 15:38:39", "closed": "2019-11-17 09:18:20", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "With Oracle 11g: Tables or View does no exsit", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\n\r\n### Actual behavior\r\nWith SpringBoot2.x and Oracle11g, We will get a SQLStntaxErrorException: table or view does no exsit. After research, we get the ShardingSphere will scan the all tables in the Oracle DB(XE) and analyze these tables, but the DB account can't be had all privileges. So, occurred error, the spring boot can't be startup.\r\n### Reason analyze (If you can)\r\nShardingJDBC version 3.x don't scan the all table, so it can be startup, but 4.x does not start\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3524", "user": "pengleichen", "labels": ["bug", "jdbc"], "created": "2019-11-14 08:56:37", "closed": "2019-11-27 02:44:28", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "Create table sql not works", "body": "## Bug Report\r\n```java\r\nException in thread \"main\" java.lang.NullPointerException\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.<init>(StreamQueryResult.java:49)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.getResultSet(ShardingPreparedStatement.java:136)\r\n\tat org.jetbrains.exposed.sql.Transaction$exec$2.executeInternal(Transaction.kt:107)\r\n\tat org.jetbrains.exposed.sql.statements.Statement.executeIn$exposed(Statement.kt:59)\r\n\tat org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:183)\r\n\tat org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:125)\r\n\tat org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:101)\r\n\tat org.jetbrains.exposed.sql.Transaction.exec(Transaction.kt:92)\r\n\tat com.xiachufang.DbUtilsKt.dropTables(DbUtils.kt:22)\r\n\tat com.xiachufang.DatasourceKt$main$1.invoke(Datasource.kt:51)\r\n\tat com.xiachufang.DatasourceKt$main$1.invoke(Datasource.kt)\r\n\tat org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$1.invoke(ThreadLocalTransactionManager.kt:156)\r\n\tat org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$inTopLevelTransaction$2.invoke(ThreadLocalTransactionManager.kt:197)\r\n\tat org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:205)\r\n\tat org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.inTopLevelTransaction(ThreadLocalTransactionManager.kt:196)\r\n\tat org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt$transaction$1.invoke(ThreadLocalTransactionManager.kt:134)\r\n\tat org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.keepAndRestoreTransactionRefAfterRun(ThreadLocalTransactionManager.kt:205)\r\n\tat org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:106)\r\n\tat org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction(ThreadLocalTransactionManager.kt:104)\r\n\tat org.jetbrains.exposed.sql.transactions.ThreadLocalTransactionManagerKt.transaction$default(ThreadLocalTransactionManager.kt:103)\r\n\tat com.xiachufang.DatasourceKt.main(Datasource.kt:50)\r\n\tat com.xiachufang.DatasourceKt.main(Datasource.kt)\r\n```\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2 4.0.0-RC3\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n```sql\r\nCREATE TABLE IF NOT EXISTS board (id BIGINT PRIMARY KEY, author_id BIGINT NOT NULL, title VARCHAR(100) NOT NULL, description VARCHAR(1000) NOT NULL, status INT NOT NULL, accessibility INT NOT NULL, create_time DATETIME(6) NOT NULL, update_time DATETIME(6) NOT NULL)\r\n```\r\n\r\nFailed.\r\n\r\n### Actual behavior\r\nIt should create the table.\r\n\r\n### Reason analyze (If you can)\r\n`StreamQueryResult`  did not consider `resultSet` to be null. When executing create table sql, resultSet will be null.\r\n\r\n```java\r\npublic final class StreamQueryResult implements QueryResult {\r\n    \r\n    private final QueryResultMetaData metaData;\r\n    \r\n    private final ResultSet resultSet;\r\n    \r\n    @SneakyThrows\r\n    public StreamQueryResult(final ResultSet resultSet, final ShardingRule shardingRule) {\r\n        this.resultSet = resultSet;\r\n        metaData = new QueryResultMetaData(resultSet.getMetaData(), shardingRule);\r\n    }\r\n    \r\n    @SneakyThrows\r\n    public StreamQueryResult(final ResultSet resultSet, final EncryptRule encryptRule) {\r\n        this.resultSet = resultSet;\r\n        metaData = new QueryResultMetaData(resultSet.getMetaData(), encryptRule);\r\n    }\r\n    \r\n    @SneakyThrows\r\n    public StreamQueryResult(final ResultSet resultSet) {\r\n        this.resultSet = resultSet;\r\n        metaData = new QueryResultMetaData(resultSet.getMetaData());\r\n    }\r\n    \r\n```\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nExecute the following sql should reproduce the problem.\r\n\r\n```sql\r\nCREATE TABLE IF NOT EXISTS board (id BIGINT PRIMARY KEY, author_id BIGINT NOT NULL, title VARCHAR(100) NOT NULL, description VARCHAR(1000) NOT NULL, status INT NOT NULL, accessibility INT NOT NULL, create_time DATETIME(6) NOT NULL, update_time DATETIME(6) NOT NULL)\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3523", "user": "gfreezy", "labels": ["bug", "sharding"], "created": "2019-11-14 06:57:21", "closed": "2019-11-21 07:01:29", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "A table without rules cannot get column information through \"show full fields from table name\"", "body": "when I use statements that is \"show full fields from table name\u201c.\r\nif the table has rules , the result is column name of table.\r\nif the table has not rules , the result is nothing.\r\n\r\naccessory\uff1a\r\n1. shardingsphere version is 4.0R2", "url": "https://github.com/apache/shardingsphere/issues/3518", "user": "waterMeteors", "labels": ["bug", "sharding"], "created": "2019-11-13 12:25:07", "closed": "2019-11-19 15:12:33", "commits": {"4bd1c3defb57f53770e9d37a679f1ffc96c35878": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "4bd1c3defb57f53770e9d37a679f1ffc96c35878", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["526606295cb68f6c7871d0a655fd47d1d50745fd"], "nameRev": "4bd1c3defb57f53770e9d37a679f1ffc96c35878 tags/4.0.0~80", "commitMessage": "Fixes #3518 (#3558)\n\n", "commitDateTime": "2019-11-19 23:12:32", "authoredDateTime": "2019-11-19 23:12:32", "commitGitStats": [{"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/RoutingEngineFactory.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/router/sharding/RoutingEngineFactoryTest.java", "insertions": 45, "deletions": 0, "lines": 45}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RoutingEngineFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactory.getDALRoutingEngine(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.sql.parser.sql.statement.SQLStatement,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingEngineFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactoryTest.assertNewInstanceForShowCreateTableWithTableRule()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactoryTest.assertNewInstanceForShowCreateTableWithDefaultDataSource()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactoryTest.assertNewInstanceForShowColumnsWithTableRule()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactoryTest.assertNewInstanceForShowColumnsWithDefaultDataSource()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "dataencrypt feature with \u201cjava.sql.SQLDataException: Cannot determine value type from string 'NO'\u201d", "body": "## Bug Report\r\n\r\nHi I wanna use the data encrypt featur . I have try 4.0.0-RC2 the encrypt feature OK, but I encounter 2 issues. one is if the plain field is null , there would be output NULL exception, another one is if there is text field , also can't  works . https://github.com/apache/incubator-shardingsphere/issues/3017\r\nthose two issue would be released in 4.0.0-RC3, I download the source code , and maven install by myself. the two issues seams resolved , but a new issue occured.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3  \r\n \r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc\r\n\r\n### Expected behavior\r\nencrypt feature work well in my product env.\r\n\r\n### Actual behavior\r\njava project initial failed, exception occured, data source connect failed, \r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nLOG:\r\nCaused by: java.sql.SQLDataException: Cannot determine value type from string 'NO'\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:114)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:96)\r\n\tat com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1382)\r\n\tat com.mysql.cj.jdbc.result.ResultSetImpl.getBoolean(ResultSetImpl.java:663)\r\n\tat com.mysql.cj.jdbc.result.ResultSetImpl.getBoolean(ResultSetImpl.java:669)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.getColumnMetaDataList(EncryptRuntimeContext.java:95)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.createEncryptTableMetas(EncryptRuntimeContext.java:72)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.<init>(EncryptRuntimeContext.java:64)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.EncryptDataSource.<init>(EncryptDataSource.java:42)\r\n\tat org.apache.shardingsphere.shardingjdbc.api.EncryptDataSourceFactory.createDataSource(EncryptDataSourceFactory.java:48)\r\n\tat org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.encryptDataSource(SpringBootConfiguration.java:123)\r\n\tat org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$2c1faa12.CGLIB$encryptDataSource$2(<generated>)\r\n\tat org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$2c1faa12$$FastClassBySpringCGLIB$$b7accd0c.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)\r\n\tat org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration$$EnhancerBySpringCGLIB$$2c1faa12.encryptDataSource(<generated>)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)\r\n\t... 171 common frames omitted\r\nCaused by: com.mysql.cj.exceptions.DataConversionException: Cannot determine value type from string 'NO'\r\n\tat com.mysql.cj.result.BooleanValueFactory.createFromBytes(BooleanValueFactory.java:116)\r\n\tat com.mysql.cj.result.BooleanValueFactory.createFromBytes(BooleanValueFactory.java:47)\r\n\tat com.mysql.cj.protocol.a.MysqlTextValueDecoder.decodeByteArray(MysqlTextValueDecoder.java:132)\r\n\tat com.mysql.cj.protocol.result.AbstractResultsetRow.decodeAndCreateReturnValue(AbstractResultsetRow.java:196)\r\n\tat com.mysql.cj.protocol.result.AbstractResultsetRow.getValueFromBytes(AbstractResultsetRow.java:241)\r\n\tat com.mysql.cj.protocol.a.result.TextBufferRow.getValue(TextBufferRow.java:132)\r\n\tat com.mysql.cj.jdbc.result.ResultSetImpl.getObject(ResultSetImpl.java:1270)\r\n\t... 189 common frames omitted\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3503", "user": "cjml1982", "labels": ["bug", "jdbc"], "created": "2019-11-12 03:02:38", "closed": "2019-11-20 08:02:21", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Sharding-JDBC \"inline.algorithm-expression\"  capital letter bug", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n```java\r\n    @Column(name = \"USER_ID\", nullable = false)\r\n    private Long userId;\r\n```\r\n\r\n`sharding.jdbc.config.sharding.tables.MY_FRIEND.table-strategy.inline.algorithm-expression=test.MY_FRIEND_$->{USER_ID % 10}`\r\n\r\nThe precise-algorithm-class-name is good, but inline.algorithm-expression is error: **can't mod() null object**\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3480", "user": "ityy", "labels": ["bug", "sharding", "volunteer wanted"], "created": "2019-11-08 03:16:49", "closed": "2019-11-18 10:09:26", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Stackoverflowerror occurred in multiple queries through or condition", "body": "version: 4.0.0-RC2\r\nlog info:\r\n2019-11-08 09:49:01,215  INFO [main] SQL: select\r\n         \r\n    PRODUCT_BRAND_ID, PRODUCT_ID, CATEGORY_ID, CATEGORY_ROW\r\n     \r\n        from T_BASIC_PRODUCT_CATEGORY b\r\n         WHERE b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? OR b.PRODUCT_ID = ? ::: DataSources: slave1 \r\n\r\nDisconnected from the target VM, address: '127.0.0.1:59742', transport: 'socket'\r\n\r\n\r\njava.lang.StackOverflowError\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.util.ExtractorUtils.isMatchedNode(ExtractorUtils.java:138)\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.util.ExtractorUtils.findFirstChildNodeNoneRecursive(ExtractorUtils.java:84)\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:69)\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:73)\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:73)\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:73)\r\n.....\r\n\r\nDDL:\r\nCREATE TABLE `t_basic_product_category` (\r\n  `PRODUCT_BRAND_ID` bigint(20) NOT NULL COMMENT 'ID',\r\n  `PRODUCT_ID` bigint(20) DEFAULT NULL,\r\n  `CATEGORY_ID` bigint(20) DEFAULT NULL,\r\n  `CATEGORY_ROW` bigint(20) DEFAULT NULL,\r\n  PRIMARY KEY (`PRODUCT_BRAND_ID`),\r\n  KEY `INDEX_PRODUCT_ID` (`PRODUCT_ID`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\r\n", "url": "https://github.com/apache/shardingsphere/issues/3478", "user": "shuaiqingli", "labels": ["SQL parse", "bug"], "created": "2019-11-08 02:04:37", "closed": "2019-11-15 07:52:52", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "User UI interaction without login for a long time", "body": "## Bug Report\r\n\r\n### Steps to reproduce the behavior\uff1a\r\n\r\nIf you don't log in, go directly to the menu page, click on all kinds of connections and there is no response. You will only swipe to the first menu, and you will not jump to the login page directly, and the user name will be displayed in the upper right corner", "url": "https://github.com/apache/shardingsphere/issues/3477", "user": "wqzwh", "labels": ["bug", "ui"], "created": "2019-11-07 13:03:40", "closed": "2019-11-13 00:24:25", "commits": {"c230a754a1a9a6414d95495d15b7da7a9c44ed77": {"commitGHEventType": "referenced", "commitUser": "beckhampu"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "c230a754a1a9a6414d95495d15b7da7a9c44ed77", "commitGHEventType": "referenced", "commitUser": "beckhampu", "commitParents": ["21ee3a840c8585af2a2a116c81b1469d6b0bc54d"], "nameRev": "c230a754a1a9a6414d95495d15b7da7a9c44ed77 tags/4.0.0~92", "commitMessage": "fix3477:User UI interaction without login for a long time (#3505)\n\n* fix[sharding-ui-frontend]:Delete the local cache data, and then jump to the login page #3477\r\n\r\n* refactor[sharding-ui-frontend]:Delete port configuration\r\n", "commitDateTime": "2019-11-13 08:24:25", "authoredDateTime": "2019-11-13 08:24:25", "commitGitStats": [{"filePath": "sharding-ui/sharding-ui-frontend/src/lang/zh-CN.js", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-ui/sharding-ui-frontend/src/router/index.js", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-ui/sharding-ui-frontend/src/utils/api.js", "insertions": 4, "deletions": 12, "lines": 16}, {"filePath": "sharding-ui/sharding-ui-frontend/src/views/login/index.vue", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Proxy occurs NullPointerException when the SQL is empty String", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\nSharding-Proxy 4.0.0-RC3-SNAPSHOT\r\n\r\n### Expected behavior\r\nWhen we use IDE, such as Navicat, we can execute the selected SQL by clicking 'Run Selected', but if nothing is selected at the time, the proxy will occur NullPointerException.\r\n\r\nAs Expected, it should not go wrong\r\n\r\n### Reason analyze (If you can)\r\nIn SQLParserEngine.parse() method, when the SQL is empty, the ParseTree will be null, and then \r\noccurs the exception.\r\n", "url": "https://github.com/apache/shardingsphere/issues/3449", "user": "RaigorJiang", "labels": ["bug", "proxy"], "created": "2019-11-05 06:25:48", "closed": "2019-11-05 10:17:15", "commits": {"84e6e4fce62de8e8370f42ce4c1061c1afa0f50a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "84e6e4fce62de8e8370f42ce4c1061c1afa0f50a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["c3ad2b550f4c2be88da6599ed7781da57645fe34"], "nameRev": "84e6e4fce62de8e8370f42ce4c1061c1afa0f50a tags/4.0.0-RC3~11", "commitMessage": "Fixes #3449 (#3450)\n\n* Fixes #3449\r\n\r\n* remove test for null SQL\r\n", "commitDateTime": "2019-11-05 18:17:13", "authoredDateTime": "2019-11-05 18:17:13", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/TextProtocolBackendHandlerFactory.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/TextProtocolBackendHandlerFactoryTest.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TextProtocolBackendHandlerFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(org.apache.shardingsphere.spi.database.DatabaseType,java.lang.String,org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TextProtocolBackendHandlerFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.TextProtocolBackendHandlerFactoryTest.assertNewInstanceWithEmptyString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sharding-JDBC 4.0.0-RC2 not support '~' Operator of PostgreSQL  ", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2  4.0.0-RC3\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\n```\r\n org.apache.shardingsphere.core.exception.ShardingException: Cannot support multiple schemas in one SQL\r\n\tat org.apache.shardingsphere.core.optimize.api.segment.Tables.setSchema(Tables.java:61)\r\n\tat org.apache.shardingsphere.core.optimize.api.segment.Tables.<init>(Tables.java:53)\r\n\tat org.apache.shardingsphere.core.optimize.sharding.segment.condition.engine.WhereClauseShardingConditionEngine.createShardingConditions(WhereClauseShardingConditionEngine.java:76)\r\n\tat org.apache.shardingsphere.core.optimize.sharding.engnie.dml.ShardingSelectOptimizeEngine.optimize(ShardingSelectOptimizeEngine.java:58)\r\n\tat org.apache.shardingsphere.core.optimize.sharding.engnie.dml.ShardingSelectOptimizeEngine.optimize(ShardingSelectOptimizeEngine.java:47)\r\n\tat org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:72)\r\n\tat org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66)\r\n\tat org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60)\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:86)\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:70)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:170)\r\n```\r\n### SQL\r\n\r\n```SQL\r\n select count(1)\r\n from (\r\n          select h.id, p.id, o.id\r\n          from t_household h,\r\n               t_project p,\r\n               t_sys_org o\r\n          where h.project_id = p.id\r\n            and o.id = p.gov_org_id\r\n            and o.parent_ids ~ (',1087190707023683585,')\r\n          order by o.id) as total\r\n```\r\n\r\n### Reason analyze (If you can)\r\nIf I replace `~` with `LIKE`,  is ok. \r\nIn `Tables` class, the program treats alias as schema:` h.id, p.id, o.id` \r\n\r\n\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/3424", "user": "zcqshine", "labels": ["SQL parse", "bug"], "created": "2019-10-31 08:27:16", "closed": "2019-11-04 11:44:59", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Using Sharding-Proxy to insert orrcurs error when using JDBC  PreparedStatement  in backend database  PostgreSQL", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-rc3\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nSuccessfully inserted a record\r\n### Actual behavior\r\nNo this record in table\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n    - use database: postgresql\r\n    - sql to execute: INSERT INTO t_encrypt(pwd,content) VALUES(?,?)\r\n    - Statement: PreparedStatement\r\n    \r\nconfig:\r\n![\u5fae\u4fe1\u622a\u56fe_20191031104012](https://user-images.githubusercontent.com/46469719/67914377-e70f0e80-fbca-11e9-8624-cd743baccbcf.png)\r\n\r\nexception:\r\n![\u5fae\u4fe1\u622a\u56fe_20191031104221](https://user-images.githubusercontent.com/46469719/67914457-24739c00-fbcb-11e9-99d4-bbc5b8cb17bf.png)\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n`DataSource source = DataSourceFactory.newRawJDBCDataSource()\r\n                .dbType(DatabaseType.POSTGRESQL)\r\n                .dataSourceName(\"MyEncrypt\")\r\n                .host(\"localhost\")\r\n                .port(3307)\r\n                .userName(\"root\")\r\n                .password(\"root\")\r\n                .create();\r\n        Connection connection = source.getConnection();\r\n        PreparedStatement statement = connection.prepareStatement(\"INSERT INTO t_encrypt(pwd,content) VALUES(?,?)\");\r\n        statement.setString(1,\"password\");\r\n        statement.setString(2,\"this is encrypt test\");\r\n        statement.executeUpdate();`", "url": "https://github.com/apache/shardingsphere/issues/3419", "user": "haetao", "labels": ["bug", "proxy"], "created": "2019-10-31 02:55:47", "closed": "2019-11-19 08:20:00", "commits": {}, "ttf": 19.00027777777778, "commitsDetails": []}, {"title": " Insert failed when inserted sql contains \u201ccode\u201d column", "body": "### Which version of ShardingSphere did you use?\r\n4.0.0-RC3-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC \r\n### Expected behavior\r\ninsert successfully\r\n### Actual behavior\r\norg.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \r\nError updating database.  Cause: java.lang.IllegalStateException\r\nThe error may involve com.msxf.crm.workbench.dao.mapper.mdm.DemoMapper.insert-Inline\r\nThe error occurred while setting parameters\r\nSQL: insert into w_demo (id,code,name,create_time, create_id, create_name,update_time, update_id, update_name,deleted)     values (?, ?, ?,       ?, ?, ?,       ?, ?, ?,       ?)\r\nCause: java.lang.IllegalStateException\r\n### Reason analyze (If you can)\r\nantlr parse error:\r\n**line 1:23 no viable alternative at input '(id,code'**\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nError SQL:\r\ninsert into w_demo (id,**code**,name,create_time, create_id, create_name,update_time, update_id, update_name,deleted) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) \r\n\r\nSQL like this is ok:\r\n![image](https://user-images.githubusercontent.com/8772975/67833500-c5a51880-fb1f-11e9-890d-cec4668f87ca.png)\r\n\r\nThe insertValues is null\uff1a\r\n![1](https://user-images.githubusercontent.com/8772975/67833396-74952480-fb1f-11e9-994c-5c764f10c615.png)\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3404", "user": "xiyelife", "labels": ["SQL parse", "bug"], "created": "2019-10-30 06:17:29", "closed": "2019-10-31 02:16:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Execute \"SHOW VARIABLES LIKE 'lower_case_%'\" case QueryHeader.java throw NullPointerException", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nexecute SHOW VARIABLES LIKE 'lower_case_%' sql and return right result.\r\n### Actual behavior\r\nthrow NullPointerException\r\n### Reason analyze (If you can)\r\n`QueryHeader.java` throw this exception in 70 line. the `TableMetas` doesn't contains `VARIABLES` table, so the program throw NullPointerException.\r\nThis problem case in this PR #3379 , and I will fix it right now.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nSHOW VARIABLES LIKE 'lower_case_%'\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3397", "user": "dongzl", "labels": ["bug", "proxy"], "created": "2019-10-29 11:55:27", "closed": "2019-10-30 03:24:33", "commits": {"c7fcb4cbb968bd286006eb6fc106dfa9974fc59d": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c7fcb4cbb968bd286006eb6fc106dfa9974fc59d", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["3cdc700a2bfa5465f8fb5ccf68b21f9bbb78fb7c"], "nameRev": "c7fcb4cbb968bd286006eb6fc106dfa9974fc59d tags/4.0.0-RC3~27", "commitMessage": "fixes QueryHeader NPE bug.(#3397) (#3401)\n\n", "commitDateTime": "2019-10-30 11:24:32", "authoredDateTime": "2019-10-30 11:24:32", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeader.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeaderTest.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryHeader.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.response.query.QueryHeader", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 1}]}, {"spoonFilePath": "QueryHeaderTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.response.query.QueryHeaderTest.getShardingSchema()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Insert disordered when the configuration order of cipher columns in encryption rules inconsistent with the order of inserted sql", "body": "### Which version of ShardingSphere did you use?\r\n4.0.0-RC3-SNAPHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nWhen the configuration order of cipher columns in encryption rules inconsistent with the order of  inserted sql, the value of the original columns can save to db orderedly .\r\n### Actual behavior\r\nthe value of the original columns are disordered.\r\n### Reason analyze (If you can)\r\nRewrite the encrypted SQL using the column order in the encryption configuration.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nINSERT INTO t_account(account_id, certificate_number, password, amount, status) VALUES...\r\n**the order ins sql is certificate_number\u3001password\u3001amount**\r\n![image](https://user-images.githubusercontent.com/8772975/67558823-4f349f00-f74a-11e9-87b4-f88497e2331d.png)\r\n\r\n**the order in encryption rules is certificate_number\u3001password\u3001amount**\r\nthis case is ok!\r\n\r\n**but, if the order in sql is not 'certificate_number\u3001password\u3001amount' \uff0c the order of this case is not ok!**\r\n\r\nWe can not guarantee that the order of columns in sql is consistent with the data in encryption rules\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3374", "user": "xiyelife", "labels": ["bug", "encrypt"], "created": "2019-10-25 09:24:58", "closed": "2019-10-25 12:39:11", "commits": {"a7252d97a145faec2d74309c3f4088f174e3e3ed": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a7252d97a145faec2d74309c3f4088f174e3e3ed", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["813288e98bcddcba45b2abaa6f178ccb43091cfd"], "nameRev": "a7252d97a145faec2d74309c3f4088f174e3e3ed tags/4.0.0-RC3~41", "commitMessage": "Fixes #3374 (#3375)\n\n* refactor SQLBuilder.getStopIndex()\r\n\r\n* refactor SQLBuilder.createLogicSQL()\r\n\r\n* refactor SQLBuilder\r\n\r\n* adjust insert columns and values for insert of encrypt\r\n\r\n* refactor EncryptInsertValuesTokenGenerator.generateNewSQLToken\r\n\r\n* refactor EncryptInsertValuesTokenGenerator\r\n", "commitDateTime": "2019-10-25 20:39:10", "authoredDateTime": "2019-10-25 20:39:10", "commitGitStats": [{"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/EncryptTokenGenerateBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/generator/impl/AssistQueryAndPlainInsertColumnsTokenGenerator.java", "insertions": 8, "deletions": 10, "lines": 18}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/generator/impl/{EncryptForInsertColumnsTokenGenerator.java => EncryptInsertColumnsTokenGenerator.java}", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/generator/impl/EncryptInsertValuesTokenGenerator.java", "insertions": 35, "deletions": 41, "lines": 76}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/generator/impl/InsertCipherNameTokenGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/sql/SQLBuilder.java", "insertions": 15, "deletions": 15, "lines": 30}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/insert.xml", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptTokenGenerateBuilder.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.EncryptTokenGenerateBuilder.buildSQLTokenGenerators()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AssistQueryAndPlainInsertColumnsTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.AssistQueryAndPlainInsertColumnsTokenGenerator.getEncryptDerivedColumnNames(java.lang.String)", "TOT": 6, "UPD": 5, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.AssistQueryAndPlainInsertColumnsTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EncryptInsertColumnsTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.findInsertColumnsToken()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.processPreviousSQLToken(org.apache.shardingsphere.core.rewrite.sql.token.pojo.generic.InsertColumnsToken,java.lang.String)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.generateNewSQLToken(org.apache.shardingsphere.core.preprocessor.statement.impl.InsertSQLStatementContext,java.lang.String)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.getEncryptDerivedColumnNames(org.apache.shardingsphere.core.strategy.encrypt.EncryptTable,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptInsertValuesTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.findPreviousSQLToken(java.lang.Class)", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.encryptInsertValueToken(org.apache.shardingsphere.core.rewrite.sql.token.pojo.generic.InsertValuesToken.InsertValueToken,java.lang.String,org.apache.shardingsphere.core.preprocessor.statement.impl.InsertSQLStatementContext,org.apache.shardingsphere.core.preprocessor.segment.insert.InsertValueContext)", "TOT": 17, "UPD": 9, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext)", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.getColumnIndex(org.apache.shardingsphere.core.preprocessor.statement.impl.InsertSQLStatementContext,org.apache.shardingsphere.core.rewrite.sql.token.pojo.generic.InsertColumnsToken,java.lang.String)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.getParameterIndexCount(org.apache.shardingsphere.core.rewrite.sql.token.pojo.generic.InsertValuesToken.InsertValueToken)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "InsertCipherNameTokenGenerator.java", "spoonMethods": []}, {"spoonFilePath": "SQLBuilder.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.SQLBuilder.createLogicSQL(org.apache.shardingsphere.core.route.type.RoutingUnit,java.util.Map)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.SQLBuilder.getSQLTokenLiterals(org.apache.shardingsphere.core.rewrite.sql.token.pojo.SQLToken,org.apache.shardingsphere.core.route.type.RoutingUnit,java.util.Map)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.SQLBuilder.getConjunctionLiterals(org.apache.shardingsphere.core.rewrite.sql.token.pojo.SQLToken)", "TOT": 12, "UPD": 1, "INS": 0, "MOV": 9, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.SQLBuilder.toSQL(org.apache.shardingsphere.core.route.type.RoutingUnit,java.util.Map)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.SQLBuilder.getStopIndex(org.apache.shardingsphere.core.rewrite.sql.token.pojo.SQLToken)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.SQLBuilder.getStartIndex(org.apache.shardingsphere.core.rewrite.sql.token.pojo.SQLToken)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.SQLBuilder.getConjunctionText(org.apache.shardingsphere.core.rewrite.sql.token.pojo.SQLToken)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "oracle load meta data get index info user schema error", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC2\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Reason analyze (If you can)\r\n```java\r\n private Collection<String> getLogicIndexes(final Connection connection, final String catalog, final String actualTableName) throws SQLException {\r\n        Collection<String> result = new HashSet<>();\r\n        try (ResultSet resultSet = connection.getMetaData().getIndexInfo(catalog, catalog, actualTableName, false, false)) {\r\n            while (resultSet.next()) {\r\n                Optional<String> logicIndex = getLogicIndex(resultSet.getString(\"INDEX_NAME\"), actualTableName);\r\n                if (logicIndex.isPresent()) {\r\n                    result.add(logicIndex.get());\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n```\r\n```java\r\n   ResultSet getIndexInfo(String catalog, String schema, String table, boolean unique, boolean approximate)\r\n        throws SQLException;\r\n```\r\noracle catalog is sid \uff0cthe second param is scheam\uff0cis not sid\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3370", "user": "54chenjian", "labels": ["bug", "jdbc"], "created": "2019-10-25 05:52:47", "closed": "2019-11-20 08:01:22", "commits": {"2590964e351b864b3f53a0f45ff0a764c795f5bb": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 26.00027777777778, "commitsDetails": [{"commitHash": "2590964e351b864b3f53a0f45ff0a764c795f5bb", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["4bd1c3defb57f53770e9d37a679f1ffc96c35878"], "nameRev": "2590964e351b864b3f53a0f45ff0a764c795f5bb tags/4.0.0~79", "commitMessage": "Fixes #3370 #3539 and #2949 .Fix and change some code structure (#3541)\n\n* Fix jdbc getIndexInfo method and NullPointerException on oracle\r\n\r\n* 1.Fix jdbc getIndexInfo method and NullPointerException.\r\n2.Fix catalog and schema method parameter error.\r\n3.Fix resultSet.getString(IS_NULLABLE) and\r\nresultSet.getString(IS_AUTOINCREMENT) return type error.\r\n\r\n* fix ci\r\n\r\n* fix ci\r\n\r\n* add License\r\n\r\n* fix ci\r\n\r\n* fix ci\r\n\r\n* fix ci\r\n\r\n* fix ci\r\n\r\n* use jdbc api to fix oracle difference\r\n\r\n* use jdbc api to fix oracle difference\r\n\r\n* Fixes #3370 .and change some code structure for compatibility\r\n\r\n* fix ci\r\n\r\n* add oracle schemaName equal username\r\nadd annotation\r\n\r\n* 1.add DataSourceInfo class\r\n\r\n2.add and change TEST unit\r\n\r\n* fix and change HashMap to LinkedHashMap\r\n\r\n* 1.change TEST unit code\r\n\r\n2.change LinkedHashMap to HashMap\r\n\r\n* add License\r\n\r\n* judge dataSourceMetaData null\r\n\r\n* judge dataSourceMetaData null\r\n\r\n* Change and add TEST unit\r\n\r\n* change TEST unit\r\n\r\n* code cleanups\r\n\r\n* code trim\r\n\r\n* code checkstyle\r\n\r\n* remove eg:\"public OracleDataSourceMetaData(final String url)\"\r\n\r\n* restore\r\n\r\n* Revert\r\n\r\n* revert\r\n\r\n* revert\r\n\r\n* revert\r\n\r\n* revert\r\n\r\n* revert\r\n\r\n* code clean\r\n\r\n* code clean\r\n\r\n* add TEST\r\n\r\n* add Licensed\r\n\r\n* code clear\r\n", "commitDateTime": "2019-11-20 16:01:21", "authoredDateTime": "2019-11-20 16:01:21", "commitGitStats": [{"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DataSourceInfo.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DataSourceMetaData.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/spi/database/DatabaseType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/DataSourceMetas.java", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaData.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MariaDBDataSourceMetaData.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaData.java", "insertions": 14, "deletions": 6, "lines": 20}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaData.java", "insertions": 15, "deletions": 7, "lines": 22}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaData.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaData.java", "insertions": 15, "deletions": 7, "lines": 22}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/H2DatabaseType.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MariaDBDatabaseType.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/MySQLDatabaseType.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/OracleDatabaseType.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/PostgreSQLDatabaseType.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQL92DatabaseType.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/spi/database/SQLServerDatabaseType.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/ShardingSphereDataSourceMetaDataTest.java", "insertions": 25, "deletions": 14, "lines": 39}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaDataTest.java", "insertions": 20, "deletions": 8, "lines": 28}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaDataTest.java", "insertions": 24, "deletions": 8, "lines": 32}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaDataTest.java", "insertions": 22, "deletions": 8, "lines": 30}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaDataTest.java", "insertions": 24, "deletions": 8, "lines": 32}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQL92DataSourceMetaDataTest.java", "insertions": 22, "deletions": 7, "lines": 29}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaDataTest.java", "insertions": 30, "deletions": 12, "lines": 42}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/spi/database/H2DatabaseTypeTest.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/spi/database/MySQLDatabaseTypeTest.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/spi/database/OracleDatabaseTypeTest.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/spi/database/PostgreSQLDatabaseTypeTest.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/spi/database/SQL92DatabaseTypeTest.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/spi/database/SQLServerDatabaseTypeTest.java", "insertions": 77, "deletions": 0, "lines": 77}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataLoader.java", "insertions": 57, "deletions": 45, "lines": 102}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/SQLExecuteCallback.java", "insertions": 14, "deletions": 7, "lines": 21}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/AbstractSQLRouteTest.java", "insertions": 21, "deletions": 15, "lines": 36}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/engine/BaseIT.java", "insertions": 232, "deletions": 225, "lines": 457}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/ShardingRuntimeContext.java", "insertions": 21, "deletions": 19, "lines": 40}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/LogicSchema.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/EncryptSchema.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/MasterSlaveSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/ShardingSchema.java", "insertions": 184, "deletions": 184, "lines": 368}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/impl/TransparentSchema.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/MariaDBXADataSourceDefinition.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/OracleXADataSourceDefinition.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/PostgreSQLXADataSourceDefinition.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/SQLServerXADataSourceDefinition.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "shardingsphere-sql-parser/shardingsphere-sql-parser-test/src/test/java/org/apache/shardingsphere/sql/parser/integrate/asserts/selectitem/SelectItemAssert.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "The dataSourceProperties property of the HikariDataSource is not correctly written.", "body": "Spring Boot 2.1.9\r\nShardingSphere 4.0.0-RC2\r\n\r\napplication.yml\uff1a\r\nmaster:\r\n  type: com.zaxxer.hikari.HikariDataSource\r\n  driver-class-name: com.mysql.cj.jdbc.Driver\r\n  jdbc-url: jdbc:mysql://192.168.177.128:3306/atom?serverTimezone=UTC&useUnicode=true&useSSL=false&characterEncoding=utf-8\r\n  username: root\r\n  password: 123456\r\n  auto-commit: true\r\n  connection-timeout: 30000\r\n  idle-timeout: 600000\r\n  max-lifetime: 1800000\r\n  maximum-pool-size: 10\r\n  data-source-properties: {cachePrepStmts: true, prepStmtCacheSize: 250, prepStmtCacheSqlLimit: 2048, useServerPrepStmts: true}\r\n\r\nThere is another\uff1a\r\ndata-source-properties:\r\n  cachePrepStmts: true\r\n  prepStmtCacheSize: 250\r\n  prepStmtCacheSqlLimit: 2048\r\n  useServerPrepStmts: true\r\n  useLocalSessionState: true\r\n  rewriteBatchedStatements: true\r\n  cacheResultSetMetadata: true\r\n  cacheServerConfiguration: true\r\n  elideSetAutoCommits: true\r\n  maintainTimeStats: false\r\n\r\nThe dataSourceProperties property of HikariDataSource is not correctly written. Debug is empty", "url": "https://github.com/apache/shardingsphere/issues/3365", "user": "suikenungleung", "labels": ["bug", "spring"], "created": "2019-10-24 23:14:11", "closed": "2019-10-28 02:58:15", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "default configuration such as [defaultDataSourceName] set default value is better\uff1f", "body": "## Feature Request\r\n### Is your feature request related to a problem?\r\nyes, \r\nversion of ShardingSphere: **4.0.0-RC3-SNAPSHOT**\r\nproject: Sharding-Proxy\r\nThe problem:\r\n when I use navicat connect Sharding-Proxy, Executing a SQL\uff1a\r\n\uff3bSELECT QUERY_ID, SUM(DURATION) AS SUM_DURATION FROM INFORMATION_SCHEMA.PROFILING GROUP BY QUERY_ID;\uff3dthe sql result throw Exception:\r\n\r\n[INFO ] 19:59:49.313 [ShardingSphere-Command-5] o.a.s.s.f.m.c.MySQLCommandExecutorFactory - Execute packet type: COM_QUERY, value: MySQLComQueryPacket(sql=SELECT QUERY_ID, SUM(DURATION) AS SUM_DURATION FROM INFORMATION_SCHEMA.PROFILING GROUP BY QUERY_ID;)\r\n[ERROR] 19:59:49.898 [ShardingSphere-Command-5] o.a.s.s.f.c.CommandExecutorTask - Exception occur: \r\njava.lang.NullPointerException: null\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.datasource.JDBCBackendDataSource.createConnection(JDBCBackendDataSource.java:153)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.datasource.JDBCBackendDataSource.getConnections(JDBCBackendDataSource.java:126)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.getConnectionFromUnderlying(BackendConnection.java:198)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.getConnectionsWithoutTransaction(BackendConnection.java:181)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.getConnections(BackendConnection.java:150)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.callback.ProxyJDBCExecutePrepareCallback.getConnections(ProxyJDBCExecutePrepareCallback.java:56)\r\n\tat org.apache.shardingsphere.core.execute.sql.prepare.SQLExecutePrepareTemplate.getSQLExecuteGroups(SQLExecutePrepareTemplate.java:89)\r\n\tat org.apache.shardingsphere.core.execute.sql.prepare.SQLExecutePrepareTemplate.getSynchronizedExecuteUnitGroups(SQLExecutePrepareTemplate.java:67)\r\n\tat org.apache.shardingsphere.core.execute.sql.prepare.SQLExecutePrepareTemplate.getExecuteUnitGroups(SQLExecutePrepareTemplate.java:59)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.execute.JDBCExecuteEngine.execute(JDBCExecuteEngine.java:80)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:93)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:78)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.text.query.QueryBackendHandler.execute(QueryBackendHandler.java:54)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute(MySQLComQueryPacketExecutor.java:72)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:87)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:67)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\nI debug the source,find the reason: the file:[config-sharding.yaml] the part :[shardingRule] not configured [defaultDataSourceName] ,because the table [PROFILING] not configured in [shardingRule],so when the table [PROFILING] sharding it used defaultDataSource.\r\n\r\n### Describe the feature you would like.\r\nI see the source,find that the class[ShardingRuleConfiguration] has some default configuration,like [defaultDataSourceName],[defaultDatabaseShardingStrategyConfig] and so on,I think when the Sharding-Proxy start,like default configuration such as [defaultDataSourceName] set default value is better\uff1f", "url": "https://github.com/apache/shardingsphere/issues/3362", "user": "jiang2015", "labels": ["bug", "sharding"], "created": "2019-10-24 12:15:12", "closed": "2019-11-14 02:06:11", "commits": {"82ceff81ee4f14fec245d385f2b1d3fa1ad61a23": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "82ceff81ee4f14fec245d385f2b1d3fa1ad61a23", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["bf19232f662c70ce5a4b164d2b1593beaa8f91d4"], "nameRev": "82ceff81ee4f14fec245d385f2b1d3fa1ad61a23 tags/4.0.0~88", "commitMessage": "Fixes #3362 (#3507)\n\n* Fixes #3362\r\n\r\n* add test case\r\n\r\n* Fixes #3362, update logic\r\n\r\n* Improve word spelling\r\n\r\n* add test case\r\n", "commitDateTime": "2019-11-14 10:06:10", "authoredDateTime": "2019-11-14 10:06:10", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/ShardingRuleTest.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/RoutingEngineFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/unicast/UnicastRoutingEngine.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/router/sharding/RoutingEngineFactoryTest.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/unicast/UnicastRoutingEngineTest.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingRule.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingRule.tableRuleExists(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingRule.isAllInDefaultDataSource(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingRuleTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingRuleTest.assertIsNotAllInDefaultDataSourceWithoutDefaultDataSource()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingRuleTest.assertTableRuleExists()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingRuleTest.assertTableRuleExistsForMultipleTables()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingRuleTest.assertTableRuleNotExists()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingEngineFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactory.newInstance(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.metadata.ShardingSphereMetaData,org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext,org.apache.shardingsphere.core.route.router.sharding.condition.ShardingConditions)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "UnicastRoutingEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.type.unicast.UnicastRoutingEngine.route()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingEngineFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactoryTest.assertNewInstanceForTableRuleNotExists()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactoryTest.assertNewInstanceForSelectWithDefaultDataSource()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactoryTest.assertNewInstanceForSelectWithoutDefaultDataSource()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactoryTest.assertNewInstanceForStandard()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactoryTest.assertNewInstanceForComplex()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UnicastRoutingEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.type.unicast.UnicastRoutingEngineTest.assertRoutingForTableWithoutTableRule()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "sharding-proxy is wrong to use nacos.", "body": "Bug Report\r\nWhich version of ShardingSphere did you use?\r\n4.0.0-RC3-SNAPSHOT\r\n\r\nWhich project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-proxy\r\n\r\nExpected behavior\r\nWrite configured into nacos should correct\u3002\r\n\r\nNacosRegistryCenter.getDirectly(final String key)->configService.getConfig(dataId, group, timeoutMs)  is not null.\r\n\r\nActual behavior\r\n```\r\n[INFO ] 19:39:31.676 [main] o.a.s.core.util.ConfigurationLogger - ShardingRuleConfiguration\r\nbindingTables:\r\n- t_order,t_order_item\r\ndefaultDatabaseStrategy:\r\n  inline:\r\n    algorithmExpression: ds_${user_id % 2}\r\n    shardingColumn: user_id\r\ntables:\r\n  t_order:\r\n    actualDataNodes: ds_${0..1}.t_order_${0..1}\r\n    keyGenerator:\r\n      column: order_id\r\n      type: SNOWFLAKE\r\n    logicTable: t_order\r\n    tableStrategy:\r\n      inline:\r\n        algorithmExpression: t_order_${order_id % 2}\r\n        shardingColumn: order_id\r\n  t_order_item:\r\n    actualDataNodes: ds_${0..1}.t_order_item_${0..1}\r\n    keyGenerator:\r\n      column: order_item_id\r\n      type: SNOWFLAKE\r\n    logicTable: t_order_item\r\n    tableStrategy:\r\n      inline:\r\n        algorithmExpression: t_order_item_${order_id % 2}\r\n        shardingColumn: order_id\r\n\r\n[INFO ] 19:39:35.978 [main] o.a.s.core.util.ConfigurationLogger - Authentication\r\nusers:\r\n  root:\r\n    authorizedSchemas: ''\r\n  sharding:\r\n    authorizedSchemas: ''\r\n    password: sharding\r\n\r\n[INFO ] 19:39:35.979 [main] o.a.s.core.util.ConfigurationLogger - Properties\r\nexecutor.size: 16\r\nproxy.transaction.type: LOCAL\r\nsql.show: true\r\nproxy.opentracing.enabled: false\r\nquery.with.cipher.column: true\r\nproxy.frontend.flush.threshold: 128\r\nacceptor.size: 16\r\nmax.connections.size.per.query: 1\r\nproxy.hint.enabled: false\r\n\r\nException in thread \"main\" java.lang.NullPointerException\r\n\tat com.google.common.base.Preconditions.checkNotNull(Preconditions.java:210)\r\n\tat com.google.common.base.Joiner.toString(Joiner.java:433)\r\n\tat com.google.common.base.Joiner.appendTo(Joiner.java:111)\r\n\tat com.google.common.base.Joiner.appendTo(Joiner.java:152)\r\n\tat com.google.common.base.Joiner.join(Joiner.java:193)\r\n\tat com.google.common.base.Joiner.join(Joiner.java:183)\r\n\tat com.google.common.base.Joiner.join(Joiner.java:209)\r\n\tat org.apache.shardingsphere.orchestration.internal.registry.config.node.ConfigurationNode.getFullPath(ConfigurationNode.java:97)\r\n\tat org.apache.shardingsphere.orchestration.internal.registry.config.node.ConfigurationNode.getDataSourcePath(ConfigurationNode.java:65)\r\n\tat org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.loadDataSourceConfigurations(ConfigurationService.java:197)\r\n\tat org.apache.shardingsphere.shardingproxy.Bootstrap.getSchemaDataSourceParameterMap(Bootstrap.java:127)\r\n\tat org.apache.shardingsphere.shardingproxy.Bootstrap.startWithRegistryCenter(Bootstrap.java:116)\r\n\tat org.apache.shardingsphere.shardingproxy.Bootstrap.main(Bootstrap.java:83)\r\n\r\n```\r\n", "url": "https://github.com/apache/shardingsphere/issues/3361", "user": "geomonlin", "labels": ["bug", "orchestration", "volunteer wanted"], "created": "2019-10-24 11:51:10", "closed": "2020-02-25 10:18:52", "commits": {}, "ttf": 123.00027777777778, "commitsDetails": []}, {"title": "Parse MySQL unreserved keywords `context` error", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC3-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC \r\n\r\n### Expected behavior\r\n\r\ncan parse MySQL unreserved keywords `context`\r\n\r\n### Actual behavior\r\n\r\n```\r\nline 1:63 extraneous input 'context' expecting {'(', TRUNCATE, INDEX, CONSTRAINT, PRIMARY, UNIQUE, FOREIGN, KEY, POSITION, VIEW, USING, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, DATE, TIME, TIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TYPE, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, MODIFY, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, WITHOUT, ESCAPE, SUBPARTITION, STORAGE, SUPER, TEMPORARY, THAN, UNBOUNDED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, CHECK, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, FILE, FIXED, FOLLOWING, FULLTEXT, GLOBAL, HASH, IMPORT_, LESS, MEMORY, NONE, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, SPATIAL, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_NO_CACHE, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, CLONE, AGGREGATE, INSTALL, UNINSTALL, RESOURCE, EXPIRE, NEVER, HISTORY, OPTIONAL, REUSE, MAX_QUERIES_PER_HOUR, MAX_UPDATES_PER_HOUR, MAX_CONNECTIONS_PER_HOUR, MAX_USER_CONNECTIONS, RETAIN, RANDOM, OLD, ISSUER, SUBJECT, CACHE, GENERAL, SLOW, USER_RESOURCES, EXPORT, RELAY, HOSTS, FLUSH, RESET, RESTART, UNIX_TIMESTAMP, LOWER, IDENTIFIER_}\r\n\r\n### SQL: INSERT INTO t_config (id, context) VALUES (?, ?);\r\n### Cause: java.lang.IllegalStateException\r\n\tat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)\r\n\t... 9 more\r\nCaused by: java.lang.IllegalStateException\r\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:158)\r\n\tat org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.generateNewSQLToken(EncryptForInsertColumnsTokenGenerator.java:93)\r\n\tat org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.generateSQLToken(EncryptForInsertColumnsTokenGenerator.java:66)\r\n\tat org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptForInsertColumnsTokenGenerator.generateSQLToken(EncryptForInsertColumnsTokenGenerator.java:46)\r\n\tat org.apache.shardingsphere.core.rewrite.sql.token.generator.SQLTokenGenerators.generateSQLTokens(SQLTokenGenerators.java:78)\r\n\tat org.apache.shardingsphere.core.rewrite.context.SQLRewriteContext.generateSQLTokens(SQLRewriteContext.java:85)\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.rewriteAndConvert(BaseShardingEngine.java:115)\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:75)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:222)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:163)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\r\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\r\n\t... 15 more\r\n\r\n```\r\n\r\n### Reason analyze (If you can)\r\n\r\nMySQL g4 file set `context` as a keywords but do not set it as unreserved. So parse failed.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nSQL: INSERT INTO t_config (id, context) VALUES (?, ?);\r\n", "url": "https://github.com/apache/shardingsphere/issues/3358", "user": "KomachiSion", "labels": ["SQL parse", "bug"], "created": "2019-10-24 10:16:16", "closed": "2019-10-24 14:58:31", "commits": {"7624b48c126187ef01fd5c548f1ce9ba7010a032": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7624b48c126187ef01fd5c548f1ce9ba7010a032", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["38f70e2cbbcc9ed9b5d739c174bd02f1d33b0054"], "nameRev": "7624b48c126187ef01fd5c548f1ce9ba7010a032 tags/4.0.0-RC3~46", "commitMessage": "For #3358, parse unreserved keyword `context` (#3359)\n\n", "commitDateTime": "2019-10-24 22:58:30", "authoredDateTime": "2019-10-24 22:58:30", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Encrypt error when associated query with same column name.", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC3-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\nassociated query and decrypt successully.\r\n\r\n### Actual behavior\r\n\r\n```\r\nException in thread \"main\" javax.crypto.IllegalBlockSizeException: Input length must be multiple of 16 when decrypting with padded cipher\r\n\tat com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:936)\r\n\tat com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:847)\r\n\tat com.sun.crypto.provider.AESCipher.engineDoFinal(AESCipher.java:446)\r\n\tat javax.crypto.Cipher.doFinal(Cipher.java:2165)\r\n\tat org.apache.shardingsphere.core.strategy.encrypt.impl.AESShardingEncryptor.decrypt(AESShardingEncryptor.java:72)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.decrypt(StreamQueryResult.java:164)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.getValue(StreamQueryResult.java:72)\r\n\tat org.apache.shardingsphere.core.merge.dql.common.StreamMergedResult.getValue(StreamMergedResult.java:49)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.EncryptResultSet.getString(EncryptResultSet.java:181)\r\n\tat org.apache.shardingsphere.example.core.jdbc.repository.OrderItemRepositoryImpl.getOrderItems(OrderItemRepositoryImpl.java:114)\r\n\tat org.apache.shardingsphere.example.core.jdbc.repository.OrderItemRepositoryImpl.selectAll(OrderItemRepositoryImpl.java:101)\r\n\tat org.apache.shardingsphere.example.core.jdbc.service.OrderServiceImpl.printData(OrderServiceImpl.java:152)\r\n\tat org.apache.shardingsphere.example.core.jdbc.service.OrderServiceImpl.processSuccess(OrderServiceImpl.java:95)\r\n\tat org.apache.shardingsphere.example.core.api.ExampleExecuteTemplate.run(ExampleExecuteTemplate.java:29)\r\n\tat org.apache.shardingsphere.example.orchestration.raw.jdbc.JavaConfigurationExampleMain.main(JavaConfigurationExampleMain.java:60)\r\n```\r\n\r\n### Reason analyze (If you can)\r\n\r\nthe join tables has same column name, the column in first table is encrypted and in second not encrypted, but encryptor will try to decrypt the second table's column.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n- encrypt configuration:\r\n```\r\n    private EncryptRuleConfiguration getEncryptRuleConfiguration() {\r\n        EncryptRuleConfiguration result = new EncryptRuleConfiguration();\r\n        Properties properties = new Properties();\r\n        properties.setProperty(\"aes.key.value\", \"123456\");\r\n        EncryptorRuleConfiguration aesRuleConfiguration = new EncryptorRuleConfiguration(\"aes\", properties);\r\n        EncryptColumnRuleConfiguration columnConfigAes = new EncryptColumnRuleConfiguration(\"\", \"status\", \"\", \"status_encryptor\");\r\n        Map<String, EncryptColumnRuleConfiguration> columns = new HashMap<>();\r\n        EncryptTableRuleConfiguration tableConfig = new EncryptTableRuleConfiguration(columns);\r\n        columns.put(\"status\", columnConfigAes);\r\n        tableConfig.getColumns().putAll(columns);\r\n        result.getEncryptors().put(\"status_encryptor\", aesRuleConfiguration);\r\n        result.getTables().put(\"t_order\", tableConfig);\r\n        return result;\r\n    }\r\n```\r\n\r\n- table structure:\r\n```\r\nCREATE TABLE IF NOT EXISTS t_order (\r\n  order_id   BIGINT NOT NULL AUTO_INCREMENT,\r\n  user_id    INT    NOT NULL,\r\n  address_id BIGINT NOT NULL,\r\n  status     VARCHAR(50),\r\n  PRIMARY KEY (order_id)\r\n)\r\n\r\nCREATE TABLE IF NOT EXISTS t_order_item (\r\n  order_item_id BIGINT NOT NULL AUTO_INCREMENT,\r\n  order_id      BIGINT NOT NULL,\r\n  user_id       INT    NOT NULL,\r\n  status        VARCHAR(50),\r\n  PRIMARY KEY (order_item_id)\r\n)\r\n```\r\n\r\n- sql:\r\n```\r\nSELECT i.* FROM t_order o, t_order_item i WHERE o.order_id = i.order_id\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\nhttps://github.com/apache/incubator-shardingsphere-example\r\n\r\nmodule orchestration-raw-jdbc-example\r\n", "url": "https://github.com/apache/shardingsphere/issues/3352", "user": "KomachiSion", "labels": ["bug", "encrypt"], "created": "2019-10-24 06:46:44", "closed": "2020-06-18 08:33:38", "commits": {}, "ttf": 238.00027777777777, "commitsDetails": []}, {"title": "Rewrite error if sharding + encrypt for insert without columns", "body": "For example, the SQL is:\r\n\r\n```\r\nINSERT INTO xxx VALUES (?, ?, ?), (?, ?, ?)\r\n```\r\n\r\nIf generate key with encrypt column together, encrypt logic cannot find correct columns sequence from metadata.", "url": "https://github.com/apache/shardingsphere/issues/3340", "user": "terrymanu", "labels": ["bug", "encrypt", "sharding"], "created": "2019-10-21 12:55:39", "closed": "2019-10-21 14:10:48", "commits": {"18161a053912147b9815d341ac120b7ab5823a8f": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "18161a053912147b9815d341ac120b7ab5823a8f", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["b1b729b11ca531b30f1b129666400fee90e562da"], "nameRev": "18161a053912147b9815d341ac120b7ab5823a8f tags/4.0.0-RC3~54", "commitMessage": "Fixes #3340, record derived column into GroupedParameterBuilder (#3341)\n\n* fix test case for insert set\r\n\r\n* refactor EncryptInsertValueParameterRewriter\r\n\r\n* fix test case for insert_values_with_columns_with_plain_without_id_for_parameters\r\n\r\n* refactor EncryptInsertValueParameterRewriter\r\n\r\n* rename GeneratedKeyForInsertColumnsTokenGenerator to GeneratedKeyForUseDefaultColumnsTokenGenerator\r\n\r\n* fix case for insert_values_without_columns_without_id_for_parameters\r\n\r\n* fix case for insert_values_without_columns_with_plain_without_id_for_parameters\r\n", "commitDateTime": "2019-10-21 22:10:47", "authoredDateTime": "2019-10-21 22:10:47", "commitGitStats": [{"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/parameter/impl/EncryptInsertValueParameterRewriter.java", "insertions": 26, "deletions": 9, "lines": 35}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/sharding/parameter/impl/ShardingGeneratedKeyInsertValueParameterRewriter.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/sharding/token/ShardingTokenGenerateBuilder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/sharding/token/generator/impl/keygen/{GeneratedKeyForInsertColumnsTokenGenerator.java => GeneratedKeyForUseDefaultColumnsTokenGenerator.java}", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/parameter/builder/impl/GroupedParameterBuilder.java", "insertions": 16, "deletions": 2, "lines": 18}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/mix/insert.xml", "insertions": 16, "deletions": 20, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptInsertValueParameterRewriter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.encryptInsertValue(org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.spi.encrypt.ShardingEncryptor,java.lang.String,int,int,java.lang.Object,org.apache.shardingsphere.core.rewrite.parameter.builder.impl.StandardParameterBuilder,java.lang.String)", "TOT": 26, "UPD": 6, "INS": 0, "MOV": 17, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.rewrite(org.apache.shardingsphere.core.rewrite.parameter.builder.ParameterBuilder,org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext,java.util.List)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.encryptInsertValues(org.apache.shardingsphere.core.rewrite.parameter.builder.impl.GroupedParameterBuilder,org.apache.shardingsphere.core.preprocessor.statement.impl.InsertSQLStatementContext,org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.spi.encrypt.ShardingEncryptor,java.lang.String,java.lang.String)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.getColumnIndex(org.apache.shardingsphere.core.rewrite.parameter.builder.impl.GroupedParameterBuilder,org.apache.shardingsphere.core.preprocessor.statement.impl.InsertSQLStatementContext,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.encryptInsertValue(org.apache.shardingsphere.spi.encrypt.ShardingEncryptor,java.lang.String,int,int,java.lang.Object,org.apache.shardingsphere.core.rewrite.parameter.builder.impl.StandardParameterBuilder,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.encryptInsertValues(org.apache.shardingsphere.core.rewrite.parameter.builder.impl.GroupedParameterBuilder,org.apache.shardingsphere.core.preprocessor.statement.impl.InsertSQLStatementContext,org.apache.shardingsphere.spi.encrypt.ShardingEncryptor,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingGeneratedKeyInsertValueParameterRewriter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.sharding.parameter.impl.ShardingGeneratedKeyInsertValueParameterRewriter.rewrite(org.apache.shardingsphere.core.rewrite.parameter.builder.ParameterBuilder,org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext,java.util.List)", "TOT": 8, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ShardingTokenGenerateBuilder.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.sharding.token.ShardingTokenGenerateBuilder.buildSQLTokenGenerators()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GeneratedKeyForUseDefaultColumnsTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.sharding.token.generator.impl.keygen.GeneratedKeyForInsertColumnsTokenGenerator", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.sharding.token.generator.impl.keygen.GeneratedKeyForInsertColumnsTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext,org.apache.shardingsphere.core.route.router.sharding.keygen.GeneratedKey)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GroupedParameterBuilder.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.parameter.builder.impl.GroupedParameterBuilder", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.parameter.builder.impl.GroupedParameterBuilder.getDerivedColumnName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Rewrite error if sharding + encrypt for table name as owner of column", "body": "For example, the sql is:\r\n\r\n```\r\nSELECT t_account.password FROM t_account WHERE t_account.account_id = 1 AND t_account.password = 'aaa'\r\n```\r\n\r\nif `t_account` is a sharding table which need to rewrite to `t_account_1`, and `password` is a encrypt column which need to rewrite to `password_cipher`, the SQL can not be processed correct when sharding and encrypt use together.", "url": "https://github.com/apache/shardingsphere/issues/3335", "user": "terrymanu", "labels": ["bug", "encrypt", "sharding"], "created": "2019-10-20 14:53:19", "closed": "2019-10-21 03:03:18", "commits": {"1714a26f1ad60cc12346a7abbea36765e6388b25": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1714a26f1ad60cc12346a7abbea36765e6388b25", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["490c7829a02aec6cd802ec36c9a5fc65fa3819d8"], "nameRev": "1714a26f1ad60cc12346a7abbea36765e6388b25 tags/4.0.0-RC3~56", "commitMessage": "Fixes #3335 (#3336)\n\n* for code style\r\n\r\n* add select_with_table_as_qualified_name for sharding\r\n\r\n* only modify projection's column name, do not modify owner of encrypt\r\n\r\n* only modify predicate's column name, do not modify owner of encrypt\r\n\r\n* remove EncryptCondition.columnOwner\r\n\r\n* split Encrypt Predicate token to EncryptPredicateColumnToken and EncryptPredicateRightValueToken\r\n\r\n* rename EncryptProjectionToken to EncryptColumnNameToken\r\n\r\n* refactor EncryptPredicateColumnTokenGenerator\r\n", "commitDateTime": "2019-10-21 11:03:18", "authoredDateTime": "2019-10-21 11:03:18", "commitGitStats": [{"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/EncryptCondition.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/EncryptConditionEngine.java", "insertions": 4, "deletions": 13, "lines": 17}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/EncryptTokenGenerateBuilder.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/generator/impl/EncryptPredicateColumnTokenGenerator.java", "insertions": 97, "deletions": 0, "lines": 97}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/generator/impl/{EncryptPredicateTokenGenerator.java => EncryptPredicateRightValueTokenGenerator.java}", "insertions": 14, "deletions": 18, "lines": 32}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/generator/impl/EncryptProjectionTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/pojo/{EncryptProjectionToken.java => EncryptColumnNameToken.java}", "insertions": 4, "deletions": 11, "lines": 15}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/pojo/{EncryptPredicateToken.java => EncryptPredicateRightValueToken.java}", "insertions": 9, "deletions": 21, "lines": 30}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/EncryptConditionTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/sql/impl/EncryptPredicateTokenTest.java", "insertions": 9, "deletions": 38, "lines": 47}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/update_for_query_with_cipher.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/update_for_query_with_plain.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/mix/insert.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/mix/select_for_query_with_cipher.xml", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/mix/update_for_query_with_cipher.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/mix/update_for_query_with_plain.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/sharding/select.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/sharding/update.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptCondition.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.EncryptCondition", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 5}]}, {"spoonFilePath": "EncryptConditionEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.EncryptConditionEngine.createInEncryptCondition(java.lang.String,org.apache.shardingsphere.core.parse.sql.segment.dml.predicate.PredicateSegment,org.apache.shardingsphere.core.parse.sql.segment.dml.predicate.value.PredicateInRightValue)", "TOT": 6, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.EncryptConditionEngine.createCompareEncryptCondition(java.lang.String,org.apache.shardingsphere.core.parse.sql.segment.dml.predicate.PredicateSegment,org.apache.shardingsphere.core.parse.sql.segment.dml.predicate.value.PredicateCompareRightValue)", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.EncryptConditionEngine.getTableAlias(org.apache.shardingsphere.core.parse.sql.segment.generic.TableSegment)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "EncryptTokenGenerateBuilder.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.EncryptTokenGenerateBuilder.buildSQLTokenGenerators()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptPredicateColumnTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptPredicateColumnTokenGenerator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptPredicateRightValueTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptPredicateTokenGenerator", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptPredicateTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.rewrite.feature.encrypt.EncryptCondition)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptPredicateTokenGenerator.generateSQLTokenForQueryWithCipherColumn(org.apache.shardingsphere.core.rewrite.feature.encrypt.EncryptCondition,java.util.List)", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptPredicateTokenGenerator.generateSQLTokenForQueryWithoutCipherColumn(org.apache.shardingsphere.core.rewrite.feature.encrypt.EncryptCondition,java.util.List)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptPredicateTokenGenerator.generateSQLTokens(org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptPredicateTokenGenerator.generateSQLTokens(java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptPredicateTokenGenerator.getEncryptedValues(org.apache.shardingsphere.core.rewrite.feature.encrypt.EncryptCondition,java.util.List)", "TOT": 9, "UPD": 3, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptPredicateTokenGenerator.isGenerateSQLToken(org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptPredicateRightValueTokenGenerator.isGenerateSQLToken(org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptProjectionTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptProjectionTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.parse.sql.segment.dml.item.ColumnSelectItemSegment,java.lang.String)", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "EncryptColumnNameToken.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.pojo.EncryptProjectionToken", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.pojo.EncryptProjectionToken.toString()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.pojo.EncryptColumnNameToken.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptPredicateRightValueToken.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.pojo.EncryptPredicateToken", "TOT": 9, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.pojo.EncryptPredicateToken.toStringForIn()", "TOT": 9, "UPD": 7, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.pojo.EncryptPredicateToken.toString()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.pojo.EncryptPredicateToken.toStringForEqual()", "TOT": 8, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.pojo.EncryptPredicateRightValueToken.toStringForEqual()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptConditionTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.EncryptConditionTest.assertGetConditionValuesForEqual()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.EncryptConditionTest.assertGetConditionValuesForIn()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "EncryptPredicateTokenTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.impl.EncryptPredicateTokenTest.assertToStringWithoutPlaceholderWithoutTableOwnerWithEqual()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.impl.EncryptPredicateTokenTest.assertToStringWithPlaceholderWithoutTableOwnerWithEqual()", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.impl.EncryptPredicateTokenTest.assertToStringWithoutPlaceholderWithoutTableOwnerWithIn()", "TOT": 10, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 7}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.impl.EncryptPredicateTokenTest.assertToStringWithPlaceholderWithoutTableOwnerWithIn()", "TOT": 9, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 7}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.impl.EncryptPredicateTokenTest.assertToStringWithoutPlaceholderWithTableOwnerWithEqual()", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.impl.EncryptPredicateTokenTest.assertToStringWithPlaceholderWithTableOwnerWithEqual()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.impl.EncryptPredicateTokenTest.assertToStringWithoutPlaceholderWithTableOwnerWithIn()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.sql.impl.EncryptPredicateTokenTest.assertToStringWithPlaceholderWithTableOwnerWithIn()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Wrong rewritten SQL for encrypt insert SQL without parameters", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\n### Expected behavior\r\n <!-- FIXME -->\r\n    <!--<rewrite-assertion id=\"insert_values_with_columns_without_id_for_parameters\">-->\r\n        <!--<input sql=\"INSERT INTO t_account(password, amount, status) VALUES (?, ?, ?), ('bbb', 2000, 'OK'), (?, ?, ?), ('ddd', 4000, 'OK')\" parameters=\"aaa, 1000, OK, ccc, 3000, OK\" />-->\r\n        <!--<output sql=\"INSERT INTO t_account_1(cipher_password, cipher_amount, status, account_id, assisted_query_password) VALUES (?, ?, ?, ?, ?), ('encrypt_bbb', 'encrypt_2000', 'OK', ?, 'assisted_query_bbb'), (?, ?, ?, ?, ?), ('encrypt_ddd', 'encrypt_4000', 'OK', ?, 'assisted_query_ddd')\" parameters=\"encrypt_aaa, encrypt_1000, OK, 1, assisted_query_aaa, 1, encrypt_ccc, encrypt_3000, OK, 1, assisted_query_ccc, 1\" />-->\r\n    <!--</rewrite-assertion>-->\r\n### Actual behavior\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3318", "user": "tristaZero", "labels": ["bug", "encrypt"], "created": "2019-10-17 10:32:46", "closed": "2019-10-17 11:06:07", "commits": {"08389dd4b5c1d1ca0b18e969b3000fa59b634b6c": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "08389dd4b5c1d1ca0b18e969b3000fa59b634b6c", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["502240bb3dee9f7e40440fbdfb23ff4ca5bf850a"], "nameRev": "08389dd4b5c1d1ca0b18e969b3000fa59b634b6c tags/4.0.0-RC3~60", "commitMessage": "fix bug#3318 (#3319)\n\n* add note for bug\r\n\r\n* modify note for bug\r\n\r\n* fix bug of insert multiple values with parameters\r\n\r\n* modify findPreviousSQLToken()\r\n\r\n* fix #3318\r\n", "commitDateTime": "2019-10-17 19:06:06", "authoredDateTime": "2019-10-17 19:06:06", "commitGitStats": [{"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/generator/impl/EncryptInsertValuesTokenGenerator.java", "insertions": 32, "deletions": 20, "lines": 52}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/mix/insert.xml", "insertions": 17, "deletions": 21, "lines": 38}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptInsertValuesTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext)", "TOT": 12, "UPD": 3, "INS": 4, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.findPreviousSQLToken()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.processPreviousSQLToken(org.apache.shardingsphere.core.preprocessor.statement.impl.InsertSQLStatementContext,org.apache.shardingsphere.core.rewrite.sql.token.pojo.generic.InsertValuesToken)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.encryptInsertValueToken(org.apache.shardingsphere.core.rewrite.sql.token.pojo.generic.InsertValuesToken.InsertValueToken,java.lang.String,java.util.List,org.apache.shardingsphere.core.preprocessor.segment.insert.InsertValueContext)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.getColumnIndex(org.apache.shardingsphere.core.preprocessor.statement.impl.InsertSQLStatementContext,org.apache.shardingsphere.core.rewrite.sql.token.pojo.generic.InsertColumnsToken,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.findPreviousSQLToken(java.lang.Class)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.encryptInsertValueToken(org.apache.shardingsphere.core.rewrite.sql.token.pojo.generic.InsertValuesToken.InsertValueToken,java.lang.String,org.apache.shardingsphere.core.preprocessor.statement.impl.InsertSQLStatementContext,org.apache.shardingsphere.core.preprocessor.segment.insert.InsertValueContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptInsertValuesTokenGenerator.generateNewSQLToken(org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "tinyint(1) column type will result in a booleam value in the query data", "body": "Project: Sharding-proxy\r\nVersion: v4.0.0-RC3\r\n\r\n## Question\r\nwhen the table column type be set to tinyint(1), the query result set of this column will be set to '1'. but it's ok with tinyint(2) or tinyint(3).\r\nThis bug seems to be issued in v3.1.0 and i was told that it will be resolved in the later version.\r\n\r\nmysql> desc test2;\r\n+-------+------------------+------+------+---------+----------------+\r\n| Field | Type             | Null | Key  | Default | Extra          |\r\n+-------+------------------+------+------+---------+----------------+\r\n| id    | int(10) unsigned | NO   | PRI  | NULL    | auto_increment |\r\n| ctype | **tinyint(1)**       | NO   |      | 0       |                |\r\n+-------+------------------+------+------+---------+----------------+\r\n\r\nmysql> insert into test2 values(1,1),(2,2),(3,0),(4,1),(5,2);\r\nQuery OK, 5 rows affected (0.13 sec)\r\n\r\nIn command line mode, no value will return.\r\nmysql> select * from test2;\r\n+------+-------+\r\n| id   | ctype |\r\n+------+-------+\r\n|    1 |      |\r\n|    2 |      |\r\n|    3 |       |\r\n|    4 |      |\r\n|    5 |      |\r\n+------+-------+\r\n5 rows in set (0.03 sec)\r\n\r\nIn navicate query result, will get a booleam value except value '0'\r\n![\u5fae\u4fe1\u56fe\u7247_20191017164947](https://user-images.githubusercontent.com/48242833/66993440-2aaf4600-f0fe-11e9-966f-8684d351aca2.png)\r\n\r\nwhen set to tinyint(2), the query result is ok.\r\nmysql> alter table test2 modify ctype tinyint(2) not null default 0 comment '\u7c7b\u578b';\r\nQuery OK, 0 rows affected (0.06 sec)\r\nmysql> select * from test2;\r\n+------+-------+\r\n| id   | ctype |\r\n+------+-------+\r\n|    1 |     1 |\r\n|    2 |     2 |\r\n|    3 |     0 |\r\n|    4 |     1 |\r\n|    5 |     2 |\r\n+------+-------+\r\n5 rows in set (0.02 sec)\r\nmysql> \r\n", "url": "https://github.com/apache/shardingsphere/issues/3311", "user": "Myshiner", "labels": ["bug", "proxy"], "created": "2019-10-17 08:51:34", "closed": "2019-10-22 02:43:23", "commits": {"22f3d49f18b8a91487c095a9676bf40e3129f131": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "22f3d49f18b8a91487c095a9676bf40e3129f131", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["201e207139943e1d18759c69c7f4581878a3c4e1"], "nameRev": "22f3d49f18b8a91487c095a9676bf40e3129f131 tags/4.0.0-RC3~52", "commitMessage": "For #3311, get origin value for tinyint(1) instead of boolean for sharding-proxy (#3338)\n\n", "commitDateTime": "2019-10-22 10:43:23", "authoredDateTime": "2019-10-22 10:43:23", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/datasource/JDBCRawBackendDataSourceFactory.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JDBCRawBackendDataSourceFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.datasource.JDBCRawBackendDataSourceFactory.build(java.lang.String,org.apache.shardingsphere.shardingproxy.config.yaml.YamlDataSourceParameter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": " Encryption rules do not support uppercase fields", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nSql:\r\n```\r\n <insert id=\"saveSysUser\" parameterType=\"com.mlt.demo.entity.SysUser\">\r\n\t\tinsert into SYS_USER (ID,\r\n\t\t NAME,\r\n\t\t AGE)\r\n\t\tvalues (#{id,jdbcType=VARCHAR},\r\n                #{name,jdbcType=VARCHAR},\r\n                #{age,jdbcType=VARCHAR}\r\n\t\t)\r\n\t</insert>\r\n```\r\n\r\nConfig:\r\n\r\n```\r\nspring:\r\n  shardingsphere:\r\n    datasource:\r\n    \u00b7\u00b7\u00b7\r\n    \r\n    encrypt:\r\n      encryptors:\r\n        encryptor_aes:\r\n          type: aes\r\n          props:\r\n            aes.key.value: aes-dg\r\n        encryptor_md5:\r\n          type: md5\r\n      tables:\r\n        SYS_USER:\r\n          columns:\r\n            AGE:\r\n              plainColumn: AGE\r\n              cipherColumn: AGE_CIPHER\r\n              encryptor: encryptor_aes\r\n```\r\n\r\nerror:\r\n\r\n```Caused by: java.lang.ArrayIndexOutOfBoundsException: -1\r\n\tat java.util.ArrayList.elementData(ArrayList.java:422)\r\n\tat java.util.ArrayList.get(ArrayList.java:435)\r\n\tat org.apache.shardingsphere.core.preprocessor.segment.insert.InsertValueContext.getValue(InsertValueContext.java:86)\r\n\tat org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.encryptInsertValues(EncryptInsertValueParameterRewriter.java:75)\r\n\tat org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.rewrite(EncryptInsertValueParameterRewriter.java:63)\r\n\tat org.apache.shardingsphere.core.rewrite.feature.encrypt.context.EncryptSQLRewriteContextDecorator.decorate(EncryptSQLRewriteContextDecorator.java:43)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.getSQLUnit(EncryptPreparedStatement.java:157)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.execute(EncryptPreparedStatement.java:127)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)\r\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)\r\n\t... 52 more\r\n```\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/3309", "user": "yanyzy", "labels": ["bug", "encrypt"], "created": "2019-10-17 07:40:17", "closed": "2019-12-23 08:50:35", "commits": {}, "ttf": 67.00027777777778, "commitsDetails": []}, {"title": "Wrong parameter list when auto-generated key need to add.", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\n    <!-- FIXME -->\r\n    <!--<rewrite-assertion id=\"insert_multiple_values_without_columns_without_id_for_parameters\" db-type=\"MySQL\">-->\r\n        <!--<input sql=\"INSERT INTO t_account VALUES (?, ?), (1000, 'OK')\" parameters=\"1000, OK\" />-->\r\n        <!--<output sql=\"INSERT INTO t_account_1(amount, status, account_id) VALUES (?, ?, ?), (1000, 'OK', ?)\" parameters=\"1000, OK, 1, 1\" />-->\r\n    <!--</rewrite-assertion>-->\r\n### Actual behavior\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3303", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-10-17 07:02:14", "closed": "2019-10-17 07:58:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Shardingjdbc execute update exception", "body": "I configured read-write separation to make an error while executing the update statement, which contains case when.\r\n\r\nFor example, SQL statement: UPDATE OTS_ORDER SET UPDATE_DATE = now (),STATE = (CASE WHEN (STATE is null) THEN 1 ELSE STATE+1 END)\r\n\r\nThe error message is as follows:\r\n  Org.antlr.v4.runtime.tree.TerminalNodeImpl cannot be cast to org.antlr.v4.runtime.ParserRuleContext", "url": "https://github.com/apache/shardingsphere/issues/3279", "user": "zhumaoliang", "labels": ["SQL parse", "bug"], "created": "2019-10-15 08:51:48", "closed": "2019-10-16 16:01:25", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Table owner is lost for logic encrypt column", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\n### Bug\r\nWhen logic encrypt column has owner in Query SQL, its assistedQueryColumn, cipherColumn and plainColumn can not be rewrite in actual SQLs correctly.\r\n\r\n### Which version of ShardingSphere did you use?\r\n**4.0.0-RC2**\r\n\r\n### Description\r\nConsidering Encrypt Rule is,\r\n```\r\nencryptRule:\r\n  tables:\r\n    t_account_bak:\r\n      columns:\r\n        password:\r\n          cipherColumn: cipher_password\r\n          assistedQueryColumn: assisted_query_password\r\n          plainColumn: plain_password\r\n          encryptor: assisted_query\r\n        amount:\r\n          cipherColumn: cipher_amount\r\n          plainColumn: plain_amount\r\n          encryptor: normal\r\nprops:\r\n  query.with.cipher.column: true\r\n```\r\nAnd SQL is,\r\n> SELECT a.account_id, a.password, a.amount AS a, a.status AS s FROM t_account_bak AS a WHERE a.account_id = 1 AND a.password = 'aaa' AND a.amount = 1000 AND a.status = 'OK'\r\n\r\nThe correct rewritten SQL is,\r\n> SELECT a.account_id, a.cipher_password, a.cipher_amount AS a, a.status AS s FROM t_account_bak AS a WHERE a.account_id = 1 AND a.assisted_query_password = 'assisted_query_aaa' AND a.cipher_amount = 'encrypt_1000' AND a.status = 'OK'\r\n\r\nBut currently it is rewritten as,\r\n>SELECT a.account_id, a.cipher_password, a.cipher_amount AS a, a.status AS s FROM t_account_bak AS a WHERE a.account_id = 1 AND assisted_query_password = 'assisted_query_aaa' AND cipher_amount = 'encrypt_1000' AND a.status = 'OK'\r\n\r\n**As you can see, the table owner,`a` of `assisted_query_password` and `cipher_amount` is lost.** \ud83d\ude22 \r\n\r\n### How to make it recurred?\r\n1. Modify [select_for_query_with_cipher.xml](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-core/sharding-core-rewrite/src/test/resources/encrypt/select_for_query_with_cipher.xml) in ShardingSphere project, and make `the correct ouput` valid.\r\nHere it is,\r\n```\r\n <!--Here is the correct rewritten SQL. If you want to test and fix me, please note the above output, and make me valid.-->\r\n <!--<output sql=\"SELECT a.account_id, a.cipher_password, a.cipher_amount AS a, a.status AS s FROM t_account_bak AS a WHERE a.account_id = 1 AND a.assisted_query_password = 'assisted_query_aaa' AND a.cipher_amount = 'encrypt_1000' AND a.status = 'OK'\" />-->\r\n```\r\n2.Run [Related tests](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/EncryptSQLRewriteEngineParameterizedTest.java)\r\n3.AssertionError brings up.\r\n\r\n\u2757\ufe0f **Therefore our task is to make this AssertionError disappear.**\r\n\r\n### Why does it happen?\r\n1.After parsing, the objects of cipherColumn, assistedQueryColumn, plainColumn will be stored as \r\n`EncryptPredicateToken`, which does not keep `table owner`. \r\n2.When rewriting SQL, rewriter will call `toString()` of `EncryptPredicateToken`, but there is no `table owner`, so the result of `toString()` is `assisted_query_password` and `cipher_amount`, not `a.assisted_query_password` and `a.cipher_amount`.\r\n\r\n### How to fix it?\r\n1. To make `EncryptPredicateToken` keep `table owner`, instead of putting `columnName` in it, you should make `ColumnSegment` as its member.\r\n2. `Table owner` and `column name` are the members of `ColumnSegment`.\r\n3.Modify toString() of `EncryptPredicateToken` to append `tableName` from `ColumnSegment` to result.\r\n\r\n#### Looking forward to your participation. ", "url": "https://github.com/apache/shardingsphere/issues/3262", "user": "tristaZero", "labels": ["bug", "encrypt"], "created": "2019-10-14 12:22:51", "closed": "2019-10-16 13:17:25", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Clear SQL92 problems for encrypt tests", "body": "### Which version of ShardingSphere did you use?\r\n4.0.0-RC3-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nBoth\r\n### Expected behavior\r\nAll test cases in incubator-shardingsphere/sharding-core/sharding-core-rewrite/src/test/resources/encrypt should pass.\r\n### Actual behavior\r\nSQLs with single quotes can not pass the tests\r\n### Reason analyze (If you can)\r\nLexers with single quotes should be treated as string instead of identifier.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nExecute assertRewrite().\r\n### Example codes for reproduce this issue (such as a github link).\r\nincubator-shardingsphere/sharding-core/sharding-core-rewrite/src/test/resources/encrypt", "url": "https://github.com/apache/shardingsphere/issues/3259", "user": "tuohai666", "labels": ["SQL parse", "bug"], "created": "2019-10-14 10:42:36", "closed": "2019-10-14 12:46:46", "commits": {"f658f3772bc6bb6d9d9053438eb498f7fd6c5722": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f658f3772bc6bb6d9d9053438eb498f7fd6c5722", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["c80ff31cbc5c7ee99259a9647ff40b4f63ceaebf"], "nameRev": "f658f3772bc6bb6d9d9053438eb498f7fd6c5722 tags/4.0.0-RC3~79", "commitMessage": "#3259, clear SQL92 problems for encrypt tests (#3261)\n\n", "commitDateTime": "2019-10-14 20:46:46", "authoredDateTime": "2019-10-14 20:46:46", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-sql92/src/main/antlr4/imports/sql92/Literals.g4", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/delete_for_query_with_cipher.xml", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/delete_for_query_with_plain.xml", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/insert.xml", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/select_for_query_with_cipher.xml", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/select_for_query_with_plain.xml", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/update_for_query_with_cipher.xml", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/update_for_query_with_plain.xml", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "concat() nest left() function-->>can not find the logic table name", "body": "when I use concat() --> OK\r\nwhen I use left() --> OK\r\nwhen I use concat()&left() such as:\r\nconcat(left(column-id,8),\"test\")\r\n--> \u2716 can not find the logic table name,then select a random datasource.\r\n\r\ndb:mysql\r\nversion:  Both 4.0.0-RC1  and  4.0.0-RC2 ", "url": "https://github.com/apache/shardingsphere/issues/3247", "user": "yhsmy", "labels": ["SQL parse", "bug"], "created": "2019-10-14 04:05:35", "closed": "2019-10-16 08:12:35", "commits": {"4710e03999421eec5792345a860b82a83896c912": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "4710e03999421eec5792345a860b82a83896c912", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["c20294ebf5da26677511676424d7c9aeef468ccb"], "nameRev": "4710e03999421eec5792345a860b82a83896c912 tags/4.0.0-RC3~73", "commitMessage": "#3247, support left/right function parse (#3271)\n\n* #3247, support left/right function parse\r\n\r\n* #3247, for checkstyle\r\n\r\n* #3247, add test case\r\n", "commitDateTime": "2019-10-16 16:12:34", "authoredDateTime": "2019-10-16 16:12:34", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/sharding/dml/select.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Insert multiple with mix literals and parameters will cause encrypt error", "body": "For example, the SQL is like:\r\n\r\n```sql\r\nINSERT INTO t_account(account_id, password) VALUES (?, ?), (2, 'bbb'), (?, ?)\r\n```\r\n\r\nThe SQL parameter will be encrypted by literals. For this example, parameter will encrypt `bbb`, not the 3rd parameters of value group.", "url": "https://github.com/apache/shardingsphere/issues/3243", "user": "terrymanu", "labels": ["bug", "encrypt"], "created": "2019-10-13 13:22:40", "closed": "2019-10-13 14:09:29", "commits": {"03bf71116dddb2021ad566608d497f37c88ef37e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "03bf71116dddb2021ad566608d497f37c88ef37e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["257ea52b62ee1ec02137fedc727a72aad36987a5"], "nameRev": "03bf71116dddb2021ad566608d497f37c88ef37e tags/4.0.0-RC3~83", "commitMessage": "fixes #3243 (#3244)\n\n", "commitDateTime": "2019-10-13 22:09:29", "authoredDateTime": "2019-10-13 22:09:29", "commitGitStats": [{"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/parameter/impl/EncryptInsertValueParameterRewriter.java", "insertions": 3, "deletions": 6, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptInsertValueParameterRewriter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.parameter.impl.EncryptInsertValueParameterRewriter.encryptInsertValues(org.apache.shardingsphere.core.rewrite.parameter.builder.impl.GroupedParameterBuilder,org.apache.shardingsphere.core.preprocessor.statement.impl.InsertSQLStatementContext,org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.spi.encrypt.ShardingEncryptor,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SQL92 parse or expression have problem", "body": "When using sql92 to parse sql, the expression is error, but MySQL dialect is ok.\r\n\r\n```sql\r\nDELETE FROM t_cipher_assisted_query_plain WHERE encrypt_1 = ? or encrypt_2 IN (?,?,?)\r\n```\r\n\r\nIt maybe cause by `OR`, we need to investigate it.", "url": "https://github.com/apache/shardingsphere/issues/3240", "user": "terrymanu", "labels": ["SQL parse", "bug"], "created": "2019-10-13 05:33:00", "closed": "2019-10-14 11:49:22", "commits": {"c80ff31cbc5c7ee99259a9647ff40b4f63ceaebf": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "c80ff31cbc5c7ee99259a9647ff40b4f63ceaebf", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["6dd36ef98fb58d0231433afad036232a7bcdeff3"], "nameRev": "c80ff31cbc5c7ee99259a9647ff40b4f63ceaebf tags/4.0.0-RC3~80", "commitMessage": "#3240, the OR keyword should not appear in simpleExpr (#3253)\n\n", "commitDateTime": "2019-10-14 19:49:22", "authoredDateTime": "2019-10-14 19:49:22", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-sql92/src/main/antlr4/imports/sql92/BaseRule.g4", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Parse `ON DUPLICATE KEY UPDATE xxx= VALUES(xxx)` error", "body": "Can not parse SQL `ON DUPLICATE KEY UPDATE` with `VALUES`\r\n", "url": "https://github.com/apache/shardingsphere/issues/3237", "user": "terrymanu", "labels": ["SQL parse", "bug"], "created": "2019-10-12 10:33:29", "closed": "2019-10-12 11:25:13", "commits": {"2852b5c9fd430e6f18aa153e63a3379fab49945b": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2852b5c9fd430e6f18aa153e63a3379fab49945b", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["afccf797b3a74f18eb6b7f01272c700024ffe6a3"], "nameRev": "2852b5c9fd430e6f18aa153e63a3379fab49945b tags/4.0.0-RC3~85", "commitMessage": "fixes #3237 (#3238)\n\n", "commitDateTime": "2019-10-12 19:25:12", "authoredDateTime": "2019-10-12 19:25:12", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/core/extractor/impl/dml/update/AssignmentExtractor.java", "insertions": 11, "deletions": 3, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/feature/encrypt/token/generator/impl/EncryptAssignmentTokenGenerator.java", "insertions": 13, "deletions": 5, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AssignmentExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.core.extractor.impl.dml.update.AssignmentExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "TOT": 10, "UPD": 3, "INS": 2, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.extractor.impl.dml.update.AssignmentExtractor.getAssignmentValue(java.util.Map,org.antlr.v4.runtime.ParserRuleContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptAssignmentTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptAssignmentTokenGenerator.generateSQLToken(java.lang.String,org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment)", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.feature.encrypt.token.generator.impl.EncryptAssignmentTokenGenerator.generateSQLTokens(org.apache.shardingsphere.core.preprocessor.statement.SQLStatementContext)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "When insert by mybatis, the parameters were still found to be out of ordered. ", "body": "### Which version of ShardingSphere did you use?\r\n4.0.0-RC3-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\ninsert correct\r\n### Actual behavior\r\nWhen insert by mybatis, the parameters were still found to be out of ordered. \r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n==> Preparing: insert into cust_contact_sharding (id,cust_id, unique_id, contact_name, contact_relation, contact_mobile, contact_address, time_inst, time_upd) values (?,?, ?, ?, ?, ?, ?, now() , ?)\r\n==> Parameters: 117001(Long), 4(Long), 84719733d69047eba078e914c49488c7(String), \u6b49(String), TEST(String), 15907200513(String), \u6d4b\u8bd5\u5730\u5740(String), null\r\n\r\nsharding value 84719733d69047eba078e914c49488c7,value after sharding cust_contact_6\r\nRule Type: sharding\r\nLogic SQL: insert into cust_contact_sharding (id,cust_id, unique_id, contact_name,\r\ncontact_relation, contact_mobile, contact_address,\r\ntime_inst, time_upd)\r\nvalues (?,?, ?, ?,\r\n?, ?, ?,\r\nnow() , ?)\r\nShardingSphere-SQL: SQLStatement: InsertSQLStatementContext(super=CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.core.parse.sql.statement.dml.InsertStatement@1723c231, tablesContext=TablesContext(tables=[Table(name=cust_contact_sharding, alias=Optional.absent())], schema=Optional.absent())), columnNames=[id, cust_id, unique_id, contact_name, contact_relation, contact_mobile, contact_address, time_inst, time_upd], insertValueContexts=[InsertValueContext(parametersCount=8, valueExpressions=[ParameterMarkerExpressionSegment(startIndex=170, stopIndex=170, parameterMarkerIndex=0), ParameterMarkerExpressionSegment(startIndex=172, stopIndex=172, parameterMarkerIndex=1), ParameterMarkerExpressionSegment(startIndex=175, stopIndex=175, parameterMarkerIndex=2), ParameterMarkerExpressionSegment(startIndex=178, stopIndex=178, parameterMarkerIndex=3), ParameterMarkerExpressionSegment(startIndex=188, stopIndex=188, parameterMarkerIndex=4), ParameterMarkerExpressionSegment(startIndex=191, stopIndex=191, parameterMarkerIndex=5), ParameterMarkerExpressionSegment(startIndex=194, stopIndex=194, parameterMarkerIndex=6), CommonExpressionSegment(startIndex=205, stopIndex=209, text=now()), ParameterMarkerExpressionSegment(startIndex=213, stopIndex=213, parameterMarkerIndex=7), DerivedParameterMarkerExpressionSegment(super=ParameterMarkerExpressionSegment(startIndex=0, stopIndex=0, parameterMarkerIndex=8)), DerivedParameterMarkerExpressionSegment(super=ParameterMarkerExpressionSegment(startIndex=0, stopIndex=0, parameterMarkerIndex=9)), DerivedParameterMarkerExpressionSegment(super=ParameterMarkerExpressionSegment(startIndex=0, stopIndex=0, parameterMarkerIndex=10))], parameters=[117001, 4, 84719733d69047eba078e914c49488c7, \u6b49, TEST, 15907200513, \u6d4b\u8bd5\u5730\u5740, null])])\r\n\r\nActual SQL: ds0\r\n::: insert into cust_contact_6 (id,cust_id, unique_id, contact_name_enc,\r\ncontact_relation, contact_mobile_enc, contact_address_enc,\r\ntime_inst, time_upd, contact_name, **contact_mobile, contact_address**)\r\nvalues (?, ?, ?, ?, ?, ?, ?, now(), ?, ?, ?, ?)\r\n::: [117001, 4, 84719733d69047eba078e914c49488c7, *n08ZSeAE+q5GlnThhlUqhAg==,\r\nTEST, *mJeSoexiPoMJYtc6tM8/Ggw==, *aBNIM+OZDMbR9FRHMUYeej7zfTz0WMhaq0pJfT0voBt2wpN0malEcyYDjuA18AO84GkUjtoaMHXEdfyLQZ5fo/g==,\r\nnull, \u6b49, **\u6d4b\u8bd5\u5730\u5740, 15907200513**]\r\n\r\n_the follow parameter has been inverse:_\r\n**contact_mobile, contact_address\r\n\u6d4b\u8bd5\u5730\u5740, 15907200513**\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3234", "user": "xiyelife", "labels": ["bug", "encrypt"], "created": "2019-10-12 07:40:57", "closed": "2019-10-22 05:33:30", "commits": {"9348c3ab8703c00f0dff1202b9d41fe8fa0205c8": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "9348c3ab8703c00f0dff1202b9d41fe8fa0205c8", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["22f3d49f18b8a91487c095a9676bf40e3129f131"], "nameRev": "9348c3ab8703c00f0dff1202b9d41fe8fa0205c8 tags/4.0.0-RC3~51", "commitMessage": "Fixes #3234, add rewrite test cases for 3 columns for encrypt (#3342)\n\n* add 3 columns for encrypt for insert cases\r\n\r\n* add 3 columns for encrypt for update cases\r\n", "commitDateTime": "2019-10-22 13:33:29", "authoredDateTime": "2019-10-22 13:33:29", "commitGitStats": [{"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/parameterized/engine/EncryptSQLRewriteEngineParameterizedTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/insert.xml", "insertions": 24, "deletions": 24, "lines": 48}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/encrypt/update_for_query_with_cipher.xml", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/resources/yaml/encrypt/query-with-cipher.yaml", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptSQLRewriteEngineParameterizedTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.parameterized.engine.EncryptSQLRewriteEngineParameterizedTest.createTableMetas()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "shardingsphere proxy 4.0.0-RC3-SNAPSHOT   JDBC execute SQL report org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask - Exception occur:  java.lang.IndexOutOfBoundsException: readerIndex(22) + length(2) exceeds writerIndex(23): PooledSlicedByteBuf(ridx: 22, widx: 23, cap: 23/23, unwrapped: ", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\n\r\n10:26:19.032 [pool-5-thread-1] ERROR org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask - Exception occur: \r\njava.lang.IndexOutOfBoundsException: readerIndex(22) + length(2) exceeds writerIndex(23): PooledSlicedByteBuf(ridx: 22, widx: 23, cap: 23/23, unwrapped: PooledUnsafeDirectByteBuf(ridx: 94, widx: 94, cap: 496))\r\n\tat io.netty.buffer.AbstractByteBuf.checkReadableBytes0(AbstractByteBuf.java:1401) ~[netty-all-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.netty.buffer.AbstractByteBuf.readShort(AbstractByteBuf.java:726) ~[netty-all-4.1.16.Final.jar:4.1.16.Final]\r\n\tat org.apache.shardingsphere.shardingproxy.transport.postgresql.payload.PostgreSQLPacketPayload.readInt2(PostgreSQLPacketPayload.java:62) ~[sharding-proxy-transport-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]\r\n\tat org.apache.shardingsphere.shardingproxy.transport.postgresql.packet.command.query.binary.bind.PostgreSQLComBindPacket.<init>(PostgreSQLComBindPacket.java:64) ~[sharding-proxy-transport-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]\r\n\tat org.apache.shardingsphere.shardingproxy.transport.postgresql.packet.command.PostgreSQLCommandPacketFactory.newInstance(PostgreSQLCommandPacketFactory.java:59) ~[sharding-proxy-transport-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.getCommandPacket(PostgreSQLCommandExecuteEngine.java:56) ~[sharding-proxy-frontend-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.getCommandPacket(PostgreSQLCommandExecuteEngine.java:47) ~[sharding-proxy-frontend-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:84) ~[sharding-proxy-frontend-core-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:66) [sharding-proxy-frontend-core-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]\r\n\tat java.lang.Thread.run(Thread.java:834) [?:?]\r\n", "url": "https://github.com/apache/shardingsphere/issues/3233", "user": "bxvs888", "labels": ["bug", "proxy"], "created": "2019-10-12 02:29:17", "closed": "2019-10-23 10:47:46", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Issue with data type \"INT UNSIGNED\"", "body": "## Bug Report\r\n\r\n1. Create the table\r\n>CREATE TABLE IF NOT EXISTS `table_name` (\r\n  `my_id` int(11) unsigned NOT NULL,\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\r\n2.  I'm trying to extract value: \r\n> resultSet.getLong(\"my_id\")\r\n\r\nException occurs: \r\n\r\n> java.sql.SQLDataException: Value '4294967295' is outside of valid range for type java.lang.Integer\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:114)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:92)\r\n\tat com.mysql.cj.jdbc.result.ResultSetImpl.getInt(ResultSetImpl.java:805)\r\n\tat com.zaxxer.hikari.pool.HikariProxyResultSet.getInt(HikariProxyResultSet.java)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil.getValueByColumnType(QueryResultUtil.java:59)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil.getValue(QueryResultUtil.java:45)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.getValue(StreamQueryResult.java:75)\r\n\tat org.apache.shardingsphere.core.merge.dql.common.StreamMergedResult.getValue(StreamMergedResult.java:56)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ShardingResultSet.getLong(ShardingResultSet.java:112)\r\n\r\nVersion: Sharding-JDBC 4.0.0RC2\r\n\r\nIt should extract value as Long.\r\n\r\nMysql jdbc driver in MysqlType.java contains such declaration for it:\r\n> INT_UNSIGNED(\"INT UNSIGNED\", Types.INTEGER, Long.class, MysqlType.FIELD_FLAG_UNSIGNED | MysqlType.FIELD_FLAG_ZEROFILL, MysqlType.IS_DECIMAL, 10L,\r\n            \"[(M)] [UNSIGNED] [ZEROFILL]\"),\r\n", "url": "https://github.com/apache/shardingsphere/issues/3231", "user": "AndreyUS", "labels": ["bug", "jdbc"], "created": "2019-10-11 11:16:58", "closed": "2019-10-17 08:05:30", "commits": {"502240bb3dee9f7e40440fbdfb23ff4ca5bf850a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "502240bb3dee9f7e40440fbdfb23ff4ca5bf850a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["0ae7bd32537ce4bc527307cd17e5492a1fe52b6b"], "nameRev": "502240bb3dee9f7e40440fbdfb23ff4ca5bf850a tags/4.0.0-RC3~61", "commitMessage": "fixes QueryResultUtil#getValueByColumnType unsigned int & bigint return value. (#3288)\n\n* fixes unsigned int & bigint return value (#3231)\r\n\r\n* add unsigned int & bigint return value test case (#3231)\r\n\r\n* fixes test case failure (#3231)\r\n\r\n* fixes code review problem (#3231)\r\n\r\n* fixes code format (#3231)\r\n", "commitDateTime": "2019-10-17 16:05:29", "authoredDateTime": "2019-10-17 16:05:29", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResultTest.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 21, "deletions": 6, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryResultUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil.getValueByColumnType(java.sql.ResultSet,int)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "MemoryQueryResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResultTest.getResultSetMetaDataWithException()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResultTest.getResultSetMetaData()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResultTest.assertGetValueWithColumnIndex()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResultTest.assertGetValueWithColumnLabel()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResultTest.assertGetCalendarValueWithColumnIndex()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResultTest.assertGetCalendarValueWithColumnLabel()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "QueryResultUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByUnSignedInteger()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByUnSignedBigint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByInteger()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBigint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "the plain column and cipher column are out of order when update", "body": "### Which version of ShardingSphere did you use?\r\n4.0.3-RC3-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc\r\n### Expected behavior\r\ncan update plain column and cipher column corrected\r\n### Actual behavior\r\nthe plain column and cipher column are out of order when update\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n==>  Preparing: update user_info SET id = ?, cust_id = ?, unique_id = ?, name = ?, ident = ?, mobile = ?, password = ?, reg_time = ?, modify_time = ?, reg_source = ?, reg_app_channel = ?, reg_device_info = ?, status = ?, is_mobile_authed = ?, time_inst = ?, time_upd = ?, has_checked = ? WHERE ( mobile = ? and name = ? and ident = ? and unique_id = ? ) \r\n\r\n==> Parameters: 2119273269(Long), 1(Long), 94ae78a2509241b2a26ffcc6cb08dce5(String), \u6f4b(String), 712524195602266985(String), 13400456926(String), ~(String), 2019-10-10 15:57:38.0(Timestamp), 2018-04-08 10:49:13(String), MQQXFQ(String), msxf(String), iOSNMS; 10.3.2; Appstore; 242; Apple; iPhone; iPhone8,1; 2.4.2.0; fe61c84f921642cf6c20231510bd34f73ad3e242; 22.541951,114.060576; 2; 172.18.4.135; 0(String), NORMAL(String), 0(String), 2019-10-10 15:57:24.0(Timestamp), 2019-10-10 15:57:24.0(Timestamp), 1(String), 15607784921(String), \u89c2(String), 532525199301078369(String), 94ae78a2509241b2a26ffcc6cb08dce5(String)\r\n\r\nRule Type: sharding\r\nLogic SQL: update user_info\r\n     SET id = ?,      \r\n       cust_id = ?,            \r\n        unique_id = ?,      \r\n        name = ?,           \r\n        ident = ?,        \r\n        mobile = ?,           \r\n        password = ?,          \r\n        reg_time = ?,         \r\n        modify_time = ?,         \r\n        reg_source = ?,          \r\n        reg_app_channel = ?,            \r\n        reg_device_info = ?,            \r\n        status = ?,            \r\n        is_mobile_authed = ?,                 \r\n        time_inst = ?,\r\n        time_upd = ?,           \r\n        has_checked = ?    \r\n     WHERE (  mobile = ?\r\n              and name = ?\r\n              and ident = ?\r\n              and unique_id = ? )\r\nSQLStatement: CommonSQLStatementContext(sqlStatement=org.apache.shardingsphere.core.parse.sql.statement.dml.UpdateStatement@7d68b8a7, tablesContext=TablesContext(tables=[Table(name=user_info, alias=Optional.absent())], schema=Optional.absent()))\r\n\r\nActual SQL: ds0 ::: update user_info\r\n     SET id = ?,     \r\n        cust_id = ?,    \r\n        unique_id = ?,\r\n        name = ?, name_enc = ?,        \r\n        **ident = ?, ident_enc = ?,**        \r\n        **mobile = ?, mobile_enc = ?,**\r\n        password = ?,\r\n        reg_time = ?,   \r\n        modify_time = ?,    \r\n        reg_source = ?,      \r\n        reg_app_channel = ?,           \r\n        reg_device_info = ?,       \r\n        status = ?,\r\n        is_mobile_authed = ?,\r\n        time_inst = ?,\r\n        time_upd = ?,\r\n        has_checked = ? \r\n     WHERE (  mobile = ?and name = ?and ident = ?and unique_id = ? ) \r\n\r\n[2119273269, 1, 94ae78a2509241b2a26ffcc6cb08dce5, \u6f4b, *nHN0OtJa1xaZNY2uCrwhujw==, *iqfgSbhOWnF+zchh6CpKdE6Cw4YstuSPWa/SrPjZk/W4=, *mMNciYwYpfMPsnZiaOMKNRg==, 712524195602266985, 13400456926, ~, 2019-10-10 15:57:38.0, 2018-04-08 10:49:13, MQQXFQ, msxf, iOSNMS; 10.3.2; Appstore; 242; Apple; iPhone; iPhone8,1; 2.4.2.0; fe61c84f921642cf6c20231510bd34f73ad3e242; 22.541951,114.060576; 2; 172.18.4.135; 0, NORMAL, 0, 2019-10-10 15:57:24.0, 2019-10-10 15:57:24.0, 1, 15607784921, \u89c2, 532525199301078369, 94ae78a2509241b2a26ffcc6cb08dce5]\r\n\r\n**ident  ident_enc  mobile  mobile_enc are out of order!!!!**\r\n \r\n### Example codes for reproduce this issue (such as a github link).\r\nUserInfoExample example = new UserInfoExample();\r\nUserInfoExample.Criteria criteria = example.createCriteria();\r\ncriteria.andUniqueIdEqualTo(uniqueId);\r\nUserInfo db = userInfos.get(0);\r\nString newMobile = JunitHelper.getMobile();\r\nString newName = JunitHelper.getChineseName();\r\nString newIdent = JunitHelper.getRandomID();\r\ndb.setName(newName);\r\ndb.setIdent(newIdent);\r\ndb.setMobile(newMobile);\r\nint rs = this.userInfoMapper.updateByExampleSelective(db, example);", "url": "https://github.com/apache/shardingsphere/issues/3207", "user": "xiyelife", "labels": ["bug", "encrypt"], "created": "2019-10-10 08:33:59", "closed": "2019-10-11 10:55:44", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Sharding jdbc parse sql statement which have a table name alias as T whill case error", "body": "## Bug Report\r\nShardingSphere version is 4.0.0-RC2. \r\nmy project maven pom have import sharding-jdbc-core and  sharding-jdbc-spring-boot-starter.\r\nThis is my shard config \r\n\r\n```\r\nspring.shardingsphere.enabled=true\r\nspring.shardingsphere.datasource.names=mscheck-ha,mscheck-sd\r\nspring.shardingsphere.datasource.mscheck-ha.type=com.zaxxer.hikari.HikariDataSource\r\nspring.shardingsphere.datasource.mscheck-ha.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.shardingsphere.datasource.mscheck-ha.jdbc-url=jdbc:mysql://localhost:3306/mysqldb1?useUnicode=true&serverTimezone=GMT%2B8&characterEncoding=utf-8&nullCatalogMeansCurrent=false\r\nspring.shardingsphere.datasource.mscheck-ha.username=root\r\nspring.shardingsphere.datasource.mscheck-ha.password=123456\r\nspring.shardingsphere.datasource.mscheck-ha.schema=mysqldb1\r\n\r\nspring.shardingsphere.datasource.mscheck-sd.type=com.zaxxer.hikari.HikariDataSource\r\nspring.shardingsphere.datasource.mscheck-sd.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.shardingsphere.datasource.mscheck-sd.jdbc-url=jdbc:mysql://localhost:13306/mysqldb2?useUnicode=true&serverTimezone=GMT%2B8&characterEncoding=utf-8&nullCatalogMeansCurrent=false\r\nspring.shardingsphere.datasource.mscheck-sd.username=root\r\nspring.shardingsphere.datasource.mscheck-sd.password=123456\r\nspring.shardingsphere.datasource.mscheck-sd.schema=mysqldb2\r\n\r\nspring.shardingsphere.sharding.default-data-source-name=mscheck-ha`\r\n\r\n\r\n# \u9ed8\u8ba4\u6570\u636e\u7b56\u7565hint\uff0c\u9ed8\u8ba4\u5206\u7247\u7b97\u6cd5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684ProvinceHintShardingAlgorithm\r\nspring.shardingsphere.sharding.default-database-strategy.hint.algorithm-class-name=com.xxxx.yyy.config.shard.ProvinceHintShardingAlgorithm\r\n\r\nspring.shardingsphere.props.sql.show=true\r\n```\r\n\r\nMy Sharding Algorithm Class:\r\n```\r\npublic class ProvinceHintShardingAlgorithm implements HintShardingAlgorithm<String> {\r\n    private static final Logger LOGGER = LoggerFactory.getLogger(ProvinceHintShardingAlgorithm.class);\r\n\r\n    @Override\r\n    public Collection<String> doSharding(Collection<String> availableTargetNames, HintShardingValue<String> shardingValue) {\r\n        List<String> result = new ArrayList<>();\r\n        for (String value : shardingValue.getValues()) {\r\n            if(availableTargetNames.contains(value)){\r\n                result.add(value);\r\n                return result;\r\n            }\r\n        }\r\n        //return null;\r\n\r\n        if(result.isEmpty()){\r\n            result.add(\"mscheck-ha\");\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n}\r\n```\r\n\r\nWhere shardingjdbc execute sql like this `select T.*     from ACT_RU_TASK T     where T.PROC_INST_ID_ = ?`\r\nshardingjdbc will throw a error:\r\n```\r\nline 1:7 mismatched input 'T' expecting {'!', '~', '+', '-', '*', '.', '(', '{', '?', '@', TRUNCATE, POSITION, VIEW, DISTINCT, CASE, CAST, TRIM, SUBSTRING, IF, NOT, NULL, TRUE, FALSE, EXISTS, ALL, ANY, OFFSET, BEGIN, COMMIT, ROLLBACK, SAVEPOINT, BOOLEAN, CHAR, INTERVAL, DATE, TIME, TIMESTAMP, LOCALTIME, LOCALTIMESTAMP, YEAR, QUARTER, MONTH, WEEK, DAY, HOUR, MINUTE, SECOND, MICROSECOND, MAX, MIN, SUM, COUNT, AVG, CURRENT, ENABLE, DISABLE, INSTANCE, DO, DEFINER, CASCADED, LOCAL, CLOSE, OPEN, NEXT, NAME, TABLES, TABLESPACE, COLUMNS, FIELDS, INDEXES, STATUS, REPLACE, MODIFY, DISTINCTROW, VALUE, DUPLICATE, FIRST, LAST, AFTER, OJ, ACCOUNT, USER, ROLE, START, TRANSACTION, ROW, WITHOUT, BINARY, ESCAPE, SUBPARTITION, STORAGE, SUPER, SUBSTR, TEMPORARY, THAN, UNBOUNDED, UPGRADE, VALIDATION, ROLLUP, SOUNDS, UNKNOWN, OFF, ALWAYS, COMMITTED, LEVEL, NO, PASSWORD, PRIVILEGES, ACTION, ALGORITHM, AUTOCOMMIT, BTREE, CHAIN, CHARSET, CHECKSUM, CIPHER, CLIENT, COALESCE, COMMENT, COMPACT, COMPRESSED, COMPRESSION, CONNECTION, CONSISTENT, CONVERT, DATA, DISCARD, DISK, ENCRYPTION, END, ENGINE, EVENT, EXCHANGE, EXECUTE, EXTRACT, FILE, FIXED, FOLLOWING, GLOBAL, HASH, IMPORT_, LESS, MATCH, MEMORY, NONE, NOW, PARSER, PARTIAL, PARTITIONING, PERSIST, PRECEDING, PROCESS, PROXY, QUICK, REBUILD, REDUNDANT, RELOAD, REMOVE, REORGANIZE, REPAIR, REVERSE, SESSION, SHUTDOWN, SIMPLE, SLAVE, VISIBLE, INVISIBLE, ENFORCED, AGAINST, LANGUAGE, MODE, QUERY, EXTENDED, EXPANSION, VARIANCE, MAX_ROWS, MIN_ROWS, HIGH_PRIORITY, SQL_BIG_RESULT, SQL_BUFFER_RESULT, SQL_CACHE, SQL_CALC_FOUND_ROWS, SQL_NO_CACHE, SQL_SMALL_RESULT, STATS_AUTO_RECALC, STATS_PERSISTENT, STATS_SAMPLE_PAGES, ROW_FORMAT, STRAIGHT_JOIN, WEIGHT_STRING, COLUMN_FORMAT, INSERT_METHOD, KEY_BLOCK_SIZE, PACK_KEYS, PERSIST_ONLY, BIT_AND, BIT_OR, BIT_XOR, GROUP_CONCAT, JSON_ARRAYAGG, JSON_OBJECTAGG, STD, STDDEV, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP, AUTO_INCREMENT, AVG_ROW_LENGTH, DELAY_KEY_WRITE, CURRENT_TIMESTAMP, ROTATE, MASTER, BINLOG, ERROR, SCHEDULE, COMPLETION, EVERY, HOST, SOCKET, PORT, SERVER, WRAPPER, OPTIONS, OWNER, RETURNS, CONTAINS, SECURITY, INVOKER, TEMPTABLE, MERGE, UNDEFINED, DATAFILE, FILE_BLOCK_SIZE, EXTENT_SIZE, INITIAL_SIZE, AUTOEXTEND_SIZE, MAX_SIZE, NODEGROUP, WAIT, LOGFILE, UNDOFILE, UNDO_BUFFER_SIZE, REDO_BUFFER_SIZE, HANDLER, PREV, ORGANIZATION, DEFINITION, DESCRIPTION, REFERENCE, FOLLOWS, PRECEDES, IMPORT, CONCURRENT, XML, DUMPFILE, SHARE, IDENTIFIER_, STRING_, NUMBER_, HEX_DIGIT_, BIT_NUM_}\r\n2019-09-28 15:55:52 | ERROR | http-nio-8090-exec-2 | org.flowable.common.engine.impl.interceptor.CommandContext | Error while closing command context\r\norg.apache.ibatis.exceptions.PersistenceException: \r\n### Error querying database.  Cause: java.lang.IllegalStateException\r\n### The error may exist in org/flowable/task/service/db/mapping/entity/Task.xml\r\n### The error may involve org.flowable.task.service.impl.persistence.entity.TaskEntityImpl.selectTasksByProcessInstanceId-Inline\r\n### The error occurred while setting parameters\r\n### SQL: select T.*     from ACT_RU_TASK T     where T.PROC_INST_ID_ = ?\r\n### Cause: java.lang.IllegalStateException\r\n\tat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)\r\n\tat org.flowable.common.engine.impl.db.DbSqlSession.selectListWithRawParameter(DbSqlSession.java:202)\r\n\tat org.flowable.common.engine.impl.db.DbSqlSession.selectListWithRawParameter(DbSqlSession.java:196)\r\n\tat org.flowable.common.engine.impl.db.DbSqlSession.selectList(DbSqlSession.java:157)\r\n\tat org.flowable.common.engine.impl.db.DbSqlSession.selectList(DbSqlSession.java:162)\r\n\tat org.flowable.common.engine.impl.db.DbSqlSession.selectList(DbSqlSession.java:142)\r\n\tat org.flowable.common.engine.impl.db.AbstractDataManager.getList(AbstractDataManager.java:149)\r\n\tat org.flowable.task.service.impl.persistence.entity.data.impl.MybatisTaskDataManager.findTasksByProcessInstanceId(MybatisTaskDataManager.java:79)\r\n\tat org.flowable.task.service.impl.persistence.entity.TaskEntityManagerImpl.findTasksByProcessInstanceId(TaskEntityManagerImpl.java:166)\r\n\tat org.flowable.task.service.impl.TaskServiceImpl.findTasksByProcessInstanceId(TaskServiceImpl.java:48)\r\n\tat org.flowable.engine.impl.util.TaskHelper.deleteTasksByProcessInstanceId(TaskHelper.java:411)\r\n\tat org.flowable.engine.impl.persistence.entity.ExecutionEntityManagerImpl.deleteProcessInstanceCascade(ExecutionEntityManagerImpl.java:482)\r\n\tat org.flowable.engine.impl.persistence.entity.ExecutionEntityManagerImpl.deleteProcessInstance(ExecutionEntityManagerImpl.java:423)\r\n\tat org.flowable.engine.impl.cmd.DeleteProcessInstanceCmd.execute(DeleteProcessInstanceCmd.java:59)\r\n\tat org.flowable.engine.impl.cmd.DeleteProcessInstanceCmd.execute(DeleteProcessInstanceCmd.java:30)\r\n\tat org.flowable.engine.impl.interceptor.CommandInvoker$1.run(CommandInvoker.java:51)\r\n\tat org.flowable.engine.impl.interceptor.CommandInvoker.executeOperation(CommandInvoker.java:93)\r\n\tat org.flowable.engine.impl.interceptor.CommandInvoker.executeOperations(CommandInvoker.java:72)\r\n\tat org.flowable.engine.impl.interceptor.CommandInvoker.execute(CommandInvoker.java:56)\r\n\tat org.flowable.engine.impl.interceptor.BpmnOverrideContextInterceptor.execute(BpmnOverrideContextInterceptor.java:25)\r\n\tat org.flowable.common.engine.impl.interceptor.TransactionContextInterceptor.execute(TransactionContextInterceptor.java:53)\r\n\tat org.flowable.common.engine.impl.interceptor.CommandContextInterceptor.execute(CommandContextInterceptor.java:72)\r\n\tat org.flowable.common.spring.SpringTransactionInterceptor.execute(SpringTransactionInterceptor.java:51)\r\n\tat org.flowable.common.engine.impl.interceptor.LogInterceptor.execute(LogInterceptor.java:30)\r\n\tat org.flowable.common.engine.impl.cfg.CommandExecutorImpl.execute(CommandExecutorImpl.java:56)\r\n\tat org.flowable.common.engine.impl.cfg.CommandExecutorImpl.execute(CommandExecutorImpl.java:51)\r\n\tat org.flowable.engine.impl.RuntimeServiceImpl.deleteProcessInstance(RuntimeServiceImpl.java:184)\r\n\tat com.cmiot.mscheck.workorder.service.impl.FlowServiceImpl.deleteFlowByInstanceId(FlowServiceImpl.java:401)\r\n\tat com.cmiot.mscheck.workorder.service.impl.FlowServiceImpl.deleteFlowByBusinessKey(FlowServiceImpl.java:395)\r\n\tat com.cmiot.mscheck.workorder.service.impl.FlowServiceImpl.deleteFlow(FlowServiceImpl.java:381)\r\n\tat com.cmiot.mscheck.workorder.service.impl.FlowServiceImpl$$FastClassBySpringCGLIB$$743b1de6.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)\r\n\tat com.cmiot.mscheck.workorder.service.impl.FlowServiceImpl$$EnhancerBySpringCGLIB$$3b141cc6.deleteFlow(<generated>)\r\n\tat com.cmiot.mscheck.workorder.rest.controller.ProcessRestImpl.deleteFlow(ProcessRestImpl.java:126)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:660)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.IllegalStateException: null\r\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:492)\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.util.ExtractorUtils.getFirstChildNode(ExtractorUtils.java:48)\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.impl.dml.select.SelectItemsExtractor.extract(SelectItemsExtractor.java:54)\r\n\tat org.apache.shardingsphere.core.parse.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:47)\r\n\tat org.apache.shardingsphere.core.parse.core.SQLParseKernel.parse(SQLParseKernel.java:62)\r\n\tat org.apache.shardingsphere.core.route.router.sharding.DatabaseHintSQLRouter.parse(DatabaseHintSQLRouter.java:50)\r\n\tat org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:64)\r\n\tat org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60)\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.executeRoute(BaseShardingEngine.java:86)\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:70)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:170)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\r\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\r\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)\r\n\t... 94 common frames omitted\r\n```\r\nIf i replace the sql as `select b.*     from ACT_RU_TASK b     where b.PROC_INST_ID_ = ?` to execute everthing is ok.\r\nSo i think sharding jdbc parse sql statement which have a table name alias as T whill case error?", "url": "https://github.com/apache/shardingsphere/issues/3155", "user": "ylyly", "labels": ["SQL parse", "bug"], "created": "2019-09-29 23:43:08", "closed": "2019-10-09 06:45:31", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "It show me \"Can not update sharding key\"\uff0c but my sharding key does not update, the sharding key value does not change, only just appears in the updated clause.", "body": "## Bug Report\r\n\r\nIt show me \"Can not update sharding key\"\uff0c but my sharding key does not update, the sharding key value does not change, only just appears in the updated clause.\r\n\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC \r\n\r\n### Expected behavior\r\n\r\nCause: org.apache.shardingsphere.core.exception.ShardingException: Can not update sharding key, logic table: [cust_contact_sharding], column: [org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment...\r\n\r\n### Actual behavior\r\nno exception and update successfully\r\n\r\n### Reason analyze (If you can)\r\n\r\nIf the value of the sharding key does not really changed, such sql execution should be allowed\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n**sharding key is unique_id**\r\nsql\uff1a\r\nupdate cust_contact_sharding **SET unique_id = ?**, contact_name = ?  where id = ? and **unique_id = ?** \r\nparam:\r\nParameters: **a538e445280443e997f76b5657dd3f27**(String), \u94b3(String),  104501(Long), **a538e445280443e997f76b5657dd3f27**(String)\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\n![image](https://user-images.githubusercontent.com/8772975/65763922-01327880-e157-11e9-944b-dd326ab58cf9.png)\r\n", "url": "https://github.com/apache/shardingsphere/issues/3144", "user": "xiyelife", "labels": ["bug", "sharding"], "created": "2019-09-27 10:24:02", "closed": "2019-10-11 12:13:16", "commits": {"1a4433799781879b314787aed4f008da9edba283": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "1a4433799781879b314787aed4f008da9edba283", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["f43529f9eab895b0be9f282ec8769115f43bead2"], "nameRev": "1a4433799781879b314787aed4f008da9edba283 tags/4.0.0-RC3~89", "commitMessage": "bugfix for #3144 (#3205)\n\n* bugfix for #3144\r\n\r\n* bugfix for #3144\r\n\r\n* fix for junit test checksytle\r\n\r\n* modify by code revirew\r\n\r\n* org.apache.shardingsphere.core.optimize.segment.table.TablesContext\r\n\r\n* bugfix for #3144 #3205\r\n\r\n* apache/incubator-shardingsphere\r\n\r\n* modify by code view\r\n\r\n* fix for unit checksytle\r\n\r\n* fix for PR:\r\nhttps://github.com/apache/incubator-shardingsphere/pull/3205/files/3d5740a75ff265239d4fa02cf107a73799cb7a37#diff-da4509990765c2640ef290335b3c7bba\r\n\r\n* fix for code view:\r\nhttps://github.com/apache/incubator-shardingsphere/pull/3205/files/4d9f1021601bc0a15a3ec0399ad9f3b74d0d5737\r\n", "commitDateTime": "2019-10-11 20:13:16", "authoredDateTime": "2019-10-11 20:13:16", "commitGitStats": [{"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ShardingRouter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/validator/ShardingStatementValidator.java", "insertions": 42, "deletions": 39, "lines": 81}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/validator/impl/ShardingInsertStatementValidator.java", "insertions": 53, "deletions": 51, "lines": 104}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/validator/impl/ShardingUpdateStatementValidator.java", "insertions": 139, "deletions": 43, "lines": 182}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/router/sharding/validator/impl/ShardingInsertStatementValidatorTest.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/router/sharding/validator/impl/ShardingUpdateStatementValidatorTest.java", "insertions": 105, "deletions": 61, "lines": 166}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingRouter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.ShardingRouter.route(java.lang.String,java.util.List,org.apache.shardingsphere.core.parse.sql.statement.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingStatementValidator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.validate(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.sql.statement.SQLStatement,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingInsertStatementValidator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingInsertStatementValidator.validate(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.sql.statement.dml.InsertStatement,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingUpdateStatementValidator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidator.getShardingColumnSetAssignmentValue(org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidator.getShardingValue(org.apache.shardingsphere.core.parse.sql.segment.dml.predicate.WhereSegment,java.util.List,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidator.getShardingValue(org.apache.shardingsphere.core.parse.sql.segment.dml.predicate.AndPredicate,java.util.List,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidator.getPredicateCompareShardingValue(org.apache.shardingsphere.core.parse.sql.segment.dml.expr.ExpressionSegment,java.util.List,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidator.getPredicateInShardingValue(java.util.Collection,java.util.List,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidator.validate(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.sql.statement.dml.UpdateStatement,java.util.List)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidator.validate(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.sql.statement.dml.UpdateStatement)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "ShardingInsertStatementValidatorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingInsertStatementValidatorTest.assertValidateOnDuplicateKeyWithoutShardingKey()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingInsertStatementValidatorTest.assertValidateOnDuplicateKeyWithShardingKey()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingUpdateStatementValidatorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidatorTest.assertValidateUpdateWithoutShardingKeyAndParameters()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidatorTest.assertValidateUpdateWithShardingKeyAndShardingParameterEquals()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidatorTest.assertValidateUpdateWithShardingKeyAndShardingParameterNotEquals()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidatorTest.createUpdateStatementAndParameters(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidatorTest.assertValidateUpdateWithoutShardingKey()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.validator.impl.ShardingUpdateStatementValidatorTest.assertValidateUpdateWithShardingKey()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "EncryptRule has a risk for NullPointerException ", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC for Encrypt\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Reason analyze (If you can)\r\nEncryptRule.getEncryptColumnValues and EncryptRule.getEncryptAssistedColumnValues\r\nwhen the encrypted field set to null,will NullPointerException, because \u201cinput.toString()\u201d\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nselect * from XXXX where mobile_no=null;\r\nmobile_no for desensitization fields\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3143", "user": "wangmobai", "labels": ["bug", "encrypt"], "created": "2019-09-27 09:11:12", "closed": "2019-10-07 03:40:54", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Test can fail if HashMap iterates in a different order", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\ndev branch: 4.0.0-RC3-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-orchestration\r\n### Expected behavior\r\nTests that rely on `AUTHENTICATION_YAML` inside [ConfigurationServiceTest](https://github.com/apache/incubator-shardingsphere/blob/48ad82f690e59c4690fca936096b1149558a3880/sharding-orchestration/sharding-orchestration-core/src/test/java/org/apache/shardingsphere/orchestration/internal/registry/config/service/ConfigurationServiceTest.java) should pass regardless of the HashMap iteration orders.\r\n### Actual behavior\r\n\r\nTests can fail if the order changes\r\n\r\n### Reason analyze (If you can)\r\nCurrently, `YamlAuthenticationConfiguration.java` and `Authentication.java` are using HashMap to map users. However, HashMap does not guarantee any specific order of entries.\r\nTherefore the string version of `Authentication` objects do not always match `AUTHENTICATION_YAML` as expected by the tests. \r\n\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nFor examples, if `AUTHENTICATION_YAML` has `root2` comes before `root1` in the string, the tests would fail as iteration order is not same as the input.\r\n\r\n```\r\n[ERROR]   ConfigurationServiceTest.assertPersistConfigurationForShardingRuleWithAuthenticationAndIsOverwrite:190\r\nArgument(s) are different! Wanted:\r\nregCenter.persist(\r\n    \"/test/config/authentication\",\r\n    \"users:\r\n  root2:\r\n    authorizedSchemas: sharding_db\r\n    password: root1\r\n  root1:\r\n    authorizedSchemas: sharding_db,ms_db\r\n    password: root2\r\n\"\r\n);\r\n-> at org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationServiceTest.assertPersistConfigurationForShardingRuleWithAuthenticationAndIsOverwrite(ConfigurationServiceTest.java:190)\r\nActual invocation has different arguments:\r\nregCenter.persist(\r\n    \"/test/config/authentication\",\r\n    \"users:\r\n  root1:\r\n    authorizedSchemas: sharding_db,ms_db\r\n    password: root2\r\n  root2:\r\n    authorizedSchemas: sharding_db\r\n    password: root1\r\n\"\r\n);\r\n```\r\n\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\nChanging `AUTHENTICATION_YAML` to have `root2` come first.\r\n```\r\nprivate static final String AUTHENTICATION_YAML = \"users:\\n\" + \"  root2:\\n\" + \"    authorizedSchemas: sharding_db\\n\" + \"    password: root1\\n\"\r\n            + \"  root1:\\n\" + \"    authorizedSchemas: sharding_db,ms_db\\n\" + \"    password: root2\\n\";\r\n   ```", "url": "https://github.com/apache/shardingsphere/issues/3108", "user": "contextshuffling", "labels": ["bug"], "created": "2019-09-24 20:24:38", "closed": "2019-09-25 03:12:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "error occurred while doing data masking", "body": "i'm using sharding-jdbc\r\nmy pom.xml configuration:\r\n```\r\norg.apache.shardingsphere.sharding-jdbc-spring-boot-starter(version :  4.0.0-RC2)\r\n&\r\norg.apache.shardingsphere.sharding-jdbc-spring-namespace(version : 4.0.0-RC2)\r\n\r\n```\r\nmy table sql:\r\n```\r\nCREATE TABLE `t_user_info` (\r\n  `id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `user_name` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '' COMMENT '\u7528\u6237\u540d',\r\n  `id_no` varchar(18) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '' COMMENT '\u7528\u6237\u8eab\u4efd\u8bc1\u53f7',\r\n  `cipher_id_no` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '' COMMENT '\u7528\u6237\u8eab\u4efd\u8bc1\u5bc6\u6587',\r\n  `age` int(11) NOT NULL COMMENT '\u5e74\u9f84',\r\n  `mobile` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL DEFAULT '' COMMENT '\u7528\u6237\u624b\u673a\u53f7',\r\n  `cipher_mobile` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '\u7528\u6237\u624b\u673a\u53f7\u5bc6\u6587',\r\n  PRIMARY KEY (`id`),\r\n  UNIQUE KEY `uk_id_no` (`id_no`) USING BTREE COMMENT '\u8eab\u4efd\u8bc1\u53f7\u552f\u4e00\u7d22\u5f15'\r\n) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\r\n```\r\n\r\nmy application.properties:\r\n\r\n```\r\nspring.shardingsphere.datasource.name=ds\r\n\r\n#\u6570\u636e\u5e93\u8fde\u63a5\u57fa\u672c\u4fe1\u606f\r\nspring.shardingsphere.datasource.ds.type=com.alibaba.druid.pool.DruidDataSource\r\nspring.shardingsphere.datasource.ds.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.shardingsphere.datasource.ds.url=jdbc:mysql://localhost:3306/demo?characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false\r\nspring.shardingsphere.datasource.ds.username=root\r\nspring.shardingsphere.datasource.ds.password=1123\r\n\r\n#\u8fde\u63a5\u6c60\u53c2\u6570\u914d\u7f6e\r\nspring.shardingsphere.datasource.ds.max-total=20\r\nspring.shardingsphere.datasource.ds.initialSize=1\r\nspring.shardingsphere.datasource.ds.minIdle=1\r\nspring.shardingsphere.datasource.ds.maxActive=20\r\nspring.shardingsphere.datasource.ds.maxWait=3000\r\nspring.shardingsphere.datasource.ds.validationQuery=SELECT 1 FROM DUAL\r\nspring.shardingsphere.datasource.ds.poolPreparedStatements=true\r\nspring.shardingsphere.datasource.ds.maxPoolPreparedStatementPerConnectionSize=20\r\n\r\n#\u6570\u636e\u8131\u654f\u52a0\u5bc6\u65b9\u5f0f\r\nspring.shardingsphere.encrypt.encryptors.encryptor_aes.type=aes\r\nspring.shardingsphere.encrypt.encryptors.encryptor_aes.props.aes.key.value=123456abc\r\n\r\n#\u6570\u636e\u8131\u654f\u57fa\u672c\u5b57\u6bb5\u4fe1\u606f\r\nspring.shardingsphere.encrypt.tables.t_user_info.columns.id_no.plainColumn=id_no\r\nspring.shardingsphere.encrypt.tables.t_user_info.columns.id_no.cipherColumn=cipher_id_no\r\nspring.shardingsphere.encrypt.tables.t_user_info.columns.id_no.encryptor=encryptor_aes\r\n\r\nspring.shardingsphere.encrypt.tables.t_user_info.columns.mobile.plainColumn=mobile\r\nspring.shardingsphere.encrypt.tables.t_user_info.columns.mobile.cipherColumn=cipher_mobile\r\nspring.shardingsphere.encrypt.tables.t_user_info.columns.mobile.encryptor=encryptor_aes\r\n\r\n#\u662f\u5426\u6253\u5370SQL\r\nspring.shardingsphere.props.sql.show=true\r\n\r\n#\u67e5\u8be2\u662f\u5426\u8d70\u5bc6\u6587\u5b57\u6bb5\r\nspring.shardingsphere.props.query.with.cipher.column=false\r\n```\r\n\r\nmy junit case:\r\n\r\n```\r\n@RunWith(SpringRunner.class)\r\n@SpringBootTest\r\n@FixMethodOrder(MethodSorters.JVM)\r\n@Rollback\r\n//@Transactional\r\npublic class UserInfoTest {\r\n\r\n\tprivate static final String ID_NO = \"xxxx\";\r\n\tprivate static final String UPDATE_ID_NO = \"xxxxx\";\r\n\tprivate static final String MOBILE = \"xxxxx\";\r\n\tprivate static final String UPDATE_MOBILE = \"xxxxx\";\r\n\r\n\t@Resource\r\n\tprivate UserMapper userMapper;\r\n\r\n\t@Test\r\n\tpublic void insertTest(){\r\n\t\tUser user = new User();\r\n\r\n\t\tuser.setUserName(\"test\");\r\n\t\tuser.setIdNo(ID_NO);\r\n\t\tuser.setAge(23);\r\n\t\tuser.setMobile(MOBILE);\r\n\r\n\t\tint result = userMapper.insert(user);\r\n\t\tAssert.assertEquals(result, 1);\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void selectBeforeUpdateTest(){\r\n\t\tUser user = userMapper.selectByIdNo(ID_NO);\r\n\t\tAssert.assertNotNull(user);\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void updateTest(){\r\n\t\tUser user = userMapper.selectByIdNo(ID_NO);\r\n\t\tAssert.assertNotNull(user);\r\n\r\n\t\t//user.setIdNo(UPDATE_ID_NO);\r\n//\t\tuser.setMobile(UPDATE_MOBILE);\r\n//\r\n//\t\tint result = userMapper.updateByPrimaryKey(user);\r\n//\t\tAssert.assertEquals(result, 1);\r\n//\r\n//\t\tUser oldUser = userMapper.selectByIdNo(ID_NO);\r\n//\t\tAssert.assertNotNull(oldUser);\r\n//\r\n//\t\tUser newUser = userMapper.selectByIdNo(UPDATE_ID_NO);\r\n//\t\tAssert.assertNull(newUser);\r\n\t}\r\n\r\n\t@Test\r\n\tpublic void deleteTest(){\r\n\t\t//TODO \u5220\u9664\u5c31\u4e0d\u5199\u4e86\uff0c\u6ca1\u5565\u7528\r\n\t}\r\n}\r\n```\r\n\r\nerror occured while \"userMapper.selectByIdNo(ID_NO);\" is running \r\n\r\naccording to this document \uff1a [https://shardingsphere.apache.org/document/current/cn/features/orchestration/encrypt/](url)\r\n\r\nwhen `query.with.cipher.column=false` \uff0c it means the sharding-jdbc query opreation will only use the plainColumn. however, when my junit case runnning , i found the exception ,because the sharding-jdbc wanted to decrypt the plainColunmn.\r\n\r\ni try to debug and found the reason, and it turns out that  StreamQueryResult class has a operation \r\n\r\n`queryResultMetaData.getShardingEncryptor(column_index)`\r\n\r\nthe result is not null, and then the sharding-jdbc decrypt the plainColumn value.\r\n\r\nIs this a bug or normal logic , what can i do to fix this thing?", "url": "https://github.com/apache/shardingsphere/issues/3101", "user": "HarrySir", "labels": ["bug", "duplicate"], "created": "2019-09-24 09:03:20", "closed": "2019-10-09 02:59:14", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "Unknown system variable 'query_cache_size'", "body": "## Bug Report\r\n\r\n- There are 4 similar issues, but none of them are exactly like me\r\n- I've tried after the document, but still can not solve the problem\r\n\r\n### Which version of ShardingSphere did you use?\r\nFirst, I tried apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin, Then, I build myself from dev branch (2019-09-24)\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\nConnected successfully by SpringBoot Application with Druid Or HikariCP Datasource\r\n\r\n### Actual behavior\r\nConnected successfully by Navicat (sometimes throws NullPointerException: null, but still work)\r\n Both of Druid or HikariCP in my SpringBoot Application start faild by throwing \"Failed to initialize pool: Unknown system variable 'query_cache_size' \"\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n1. Sharding-Proxy (4.0.0-RC2) (config-sharding.yaml)\r\n2. SprintBoot with Druid or HikariCP\r\n3. MySQL 8.0.12\r\n4. Tried mysql-connector-java-5.1.44\u3001mysql-connector-java-8.0.17.jar in SpringBoot application and sharding-proxy/lib\uff0cnone of them works\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n[config-sharding.yaml.txt](https://github.com/apache/incubator-shardingsphere/files/3645028/config-sharding.yaml.txt)\r\n\r\n[server.yaml.txt](https://github.com/apache/incubator-shardingsphere/files/3645029/server.yaml.txt)\r\n", "url": "https://github.com/apache/shardingsphere/issues/3097", "user": "tanhaican", "labels": ["bug", "proxy"], "created": "2019-09-24 03:05:12", "closed": "2020-05-22 13:59:53", "commits": {}, "ttf": 241.00027777777777, "commitsDetails": []}, {"title": "SCTL statement get error when sql contains comments", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\nDev\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\n\r\nSCTL statement can get correct results\r\n\r\n### Actual behavior\r\n\r\nWhen sql contains comments, the stcl statement will report an error.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nFirst i use DataGrip to execute command, and it get an error\r\n\r\n![image](https://user-images.githubusercontent.com/30677017/65427578-2f594500-de45-11e9-9096-f8e094dc9626.png)\r\n\r\nso, i use command line tool to execute it, it works fine. but if sql has comments, will get error.\r\n![image](https://user-images.githubusercontent.com/30677017/65427641-557ee500-de45-11e9-8272-de7bcaf333ec.png)\r\n", "url": "https://github.com/apache/shardingsphere/issues/3092", "user": "yanyzy", "labels": ["bug", "proxy"], "created": "2019-09-23 13:02:44", "closed": "2019-09-24 09:00:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Test can fail if HashMap iterates in a different order", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n`dev` branch: 4.0.0-RC3-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nThe test `org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSourceTest#assertGetDatabaseProductName` always passes regardless of iteration orders of the map iterator.\r\n### Actual behavior\r\nTest can fail if the order changes\r\n### Reason analyze (If you can)\r\n\r\nCurrently, the test uses a HashMap to store data source connections. However HashMap does not guarantee any specific order of entries. In particular, `createCachedDatabaseMetaData` in `MasterSlaveRuntimeContext.java` will eventually receive the map and access the first connection, which may not always be the master connection due to differences in orderings, and close that connection. If the first connection happens to be a slave connection, the test will fail due to being closed too many times.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nTo simulate a different ordering, changing the `\"masterDatasource\"` to `\"zmasterDatasource\"` in https://github.com/apache/incubator-shardingsphere/blob/818a722b15dd66385be644c592016bcba53a7675/sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSourceTest.java#L110 will lead to a different iteration order and the test fails\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n```\r\n        dataSourceMap.put(\"zmasterDataSource\", masterDataSource);\r\n        dataSourceMap.put(\"slaveDataSource1\", slaveDataSource1);\r\n        dataSourceMap.put(\"slaveDataSource2\", slaveDataSource2);\r\n```\r\nin `assertGetDatabaseProductName()`", "url": "https://github.com/apache/shardingsphere/issues/3071", "user": "contextshuffling", "labels": ["bug"], "created": "2019-09-19 20:34:27", "closed": "2019-09-20 07:03:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Sharding-Proxy: Configuring user access to the database is invalid", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\ndev\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\nAccording to the configuration file, users are prohibited from accessing databases that are not authorized for them.\r\n\r\n### Actual behavior\r\nUser does not have access to a database\uff0cbut this user can access it.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nI have two config yaml to configure two logic datasource, user access is configured in the sever.yaml, this user has only one of the database permissions, but he can access both database.\r\n\r\nconfig-sharding.yaml\uff1a\r\n```yaml\r\nschemaName: sharding_db\r\n\r\ndataSources:\r\n  ds0:\r\n   \u00b7\u00b7\u00b7\r\n  ds1:\r\n   \u00b7\u00b7\u00b7\r\n```\r\n\r\nconfig-sharding-remote.yaml\uff1a\r\n```yaml\r\nschemaName: sharding_db_remote\r\n\r\ndataSources:\r\n  ds0:\r\n    \u00b7\u00b7\u00b7\r\n  ds1:\r\n    \u00b7\u00b7\u00b7\r\n```\r\n\r\nserver.yaml\uff1a\r\n```yaml\r\nauthentication:\r\n  users:\r\n    root:\r\n      password: root\r\n    sharding:\r\n      password: sharding\r\n      authorizedSchemas: sharding_db\r\n    zhyee:\r\n      password: zhyee\r\n      authorizedSchemas: sharding_db_remote\r\n```\r\n\r\nmy Springboot demo configuration is:\r\n```yaml\r\nspring:\r\n  datasource:\r\n    url: jdbc:mysql://localhost:3307/sharding_db\r\n    driver-class-name: com.mysql.jdbc.Driver\r\n    username: zhyee\r\n    password: zhyee\r\n```\r\nand it works.\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/3068", "user": "yanyzy", "labels": ["bug", "proxy"], "created": "2019-09-19 14:49:17", "closed": "2019-09-23 12:01:49", "commits": {"c91225b394b7c797078be9df6208527973fea4b9": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "c91225b394b7c797078be9df6208527973fea4b9", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["0591b067400029eb0b6f71d89a2c0a32842e8579"], "nameRev": "c91225b394b7c797078be9df6208527973fea4b9 tags/4.0.0-RC3~144", "commitMessage": "Fixes #3068 Add a judgment for user's database privileges. (#3079)\n\n* \r\n1. modify MySQLAuthenticationHandler's login method to return Optional<ProxyUser>.\r\n2. check response41 database with ProxyUser's database.\r\n3. add UT.\r\n\r\n* resolve conflicts.\r\n\r\n* try CI check again.\r\n\r\n* \r\n1. move schema judgement to MySQLAuthenticationHandler.\r\n2. modify UT.\r\n\r\n* \r\n1. modify the input parameter of MySQLAuthenticationHandler.login().\r\n2. modify UT.\r\n\r\n* try CI check again.\r\n\r\n* \r\n1. add ER_DBACCESS_DENIED_ERROR in MySQLServerErrorCode.\r\n2. modify the result of MySQLAuthenticationHandler.login() to Optional<MySQLServerErrorCode>.\r\n3. modify UT classes.\r\n", "commitDateTime": "2019-09-23 20:01:48", "authoredDateTime": "2019-09-23 20:01:48", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/auth/MySQLAuthenticationEngine.java", "insertions": 23, "deletions": 10, "lines": 33}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/auth/MySQLAuthenticationEngineTest.java", "insertions": 134, "deletions": 0, "lines": 134}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/constant/MySQLServerErrorCode.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/handshake/MySQLAuthenticationHandler.java", "insertions": 21, "deletions": 5, "lines": 26}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/handshake/MySQLAuthenticationHandlerTest.java", "insertions": 36, "deletions": 4, "lines": 40}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLAuthenticationEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.auth.MySQLAuthenticationEngine.auth(io.netty.channel.ChannelHandlerContext,org.apache.shardingsphere.shardingproxy.transport.payload.PacketPayload,org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection)", "TOT": 19, "UPD": 1, "INS": 3, "MOV": 10, "DEL": 5}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.auth.MySQLAuthenticationEngine.getMySQLErrPacket(org.apache.shardingsphere.shardingproxy.transport.mysql.constant.MySQLServerErrorCode,io.netty.channel.ChannelHandlerContext,org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLHandshakeResponse41Packet)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.auth.MySQLAuthenticationEngine.getHostAddress(io.netty.channel.ChannelHandlerContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLAuthenticationEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.auth.MySQLAuthenticationEngineTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLServerErrorCode.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.constant.MySQLServerErrorCode", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLAuthenticationHandler.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLAuthenticationHandler.login(java.lang.String,byte[])", "TOT": 20, "UPD": 5, "INS": 0, "MOV": 12, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLAuthenticationHandler.login(org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLHandshakeResponse41Packet)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLAuthenticationHandler.isPasswordRight(java.lang.String,byte[])", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLAuthenticationHandler.isAuthorizedSchema(java.util.Collection,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLAuthenticationHandlerTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLAuthenticationHandlerTest.assertLoginWithPassword()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLAuthenticationHandlerTest.assertLoginWithoutPassword()", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLAuthenticationHandlerTest.assertLoginWithAbsentUser()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLAuthenticationHandlerTest.assertLoginWithIncorrectPassword()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLAuthenticationHandlerTest.assertLoginWithUnauthorizedSchema()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.handshake.MySQLAuthenticationHandlerTest.getResponse41(java.lang.String,byte[],java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Build error: spring-boot-maven-plugin version not defined", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC3-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-ui\r\n\r\n### Expected behavior\r\nmvn clean install - success\r\n\r\n### Actual behavior\r\nmvn clean install - failed in some case\r\n\r\n### Reason analyze (If you can)\r\nSpring-boot-maven-plugin version not defined, if your local maven repository has an old version(<= 1.4.2.RELEASE) of spring-boot-maven-plugin, it will fail.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3063", "user": "beckhampu", "labels": ["bug", "ui"], "created": "2019-09-19 03:35:06", "closed": "2019-09-22 13:00:49", "commits": {"6a21b11dd64ac25bb161319e187210cc78807135": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "6a21b11dd64ac25bb161319e187210cc78807135", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["99f529f3e1ff0587671f67739ca74770db56416f"], "nameRev": "6a21b11dd64ac25bb161319e187210cc78807135 tags/4.0.0-RC3~149", "commitMessage": "Fixes #3063 Change plugin version of sharding-ui to fix build error. (#3082)\n\n* Fix spring-boot-plugin version missing bug.\r\n\r\n* Support jdk1.7 to change frontend-maven-plugin version\r\n", "commitDateTime": "2019-09-22 21:00:48", "authoredDateTime": "2019-09-22 21:00:48", "commitGitStats": [{"filePath": "pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-distribution/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-ui/sharding-ui-backend/pom.xml", "insertions": 39, "deletions": 58, "lines": 97}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Return Wrong type for tinyint and smallint column", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC2\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\nGet `tinyint` type column value from results is `integer` type for MySQL\r\n\r\n### Actual behavior\r\n\r\nGet `tinyint` type column value from results is `byte` type for MySQL\r\n\r\n### Reason analyze (If you can)\r\n\r\nShardingSphere will getByte in `QueryResultUtil` for tinyint type column,\r\nBut the tinyint type get from native JDBC getObject is `Integet` type.\r\n\r\nSame as `small int` type. I also test `small int` type for DB2, PostgreSQL, all return `Integet` type from native JDBC getObject.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3027", "user": "KomachiSion", "labels": ["bug", "sharding"], "created": "2019-09-12 08:23:15", "closed": "2019-09-12 14:47:26", "commits": {"7761f5dc58afd8e3ac9de519849ed0c9bcff1a04": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7761f5dc58afd8e3ac9de519849ed0c9bcff1a04", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["17410b98cf2f2810f00fcb9bdee07dd2f96ec478"], "nameRev": "7761f5dc58afd8e3ac9de519849ed0c9bcff1a04 tags/4.0.0-RC3~192", "commitMessage": "Fix #3027 get TINYINT and SMALLINT as INTEGER (#3028)\n\n", "commitDateTime": "2019-09-12 07:47:25", "authoredDateTime": "2019-09-12 22:47:25", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryResultUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil.getValueByColumnType(java.sql.ResultSet,int)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "QueryResultUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByTinyint()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueBySmallint()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "By Use EncryptDataSource the query with text column occurs error", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nBy Use EncryptDataSource the query with text column can return correct result\r\n\r\n### Actual behavior\r\nBy Use EncryptDataSource the query with text column occurs error\r\n\r\n### Reason analyze (If you can)\r\nBy Use EncryptDataSource the query with text column is not convert correctly\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n![image](https://user-images.githubusercontent.com/31396902/64663070-2ba8e400-d47d-11e9-8fbb-a0f5867132b4.png)\r\n![image](https://user-images.githubusercontent.com/31396902/64663314-f6e95c80-d47d-11e9-9fa1-6669272ee011.png)\r\n![image](https://user-images.githubusercontent.com/31396902/64663327-036db500-d47e-11e9-8eee-fd30f260859a.png)\r\n![image](https://user-images.githubusercontent.com/31396902/64663362-20a28380-d47e-11e9-83c3-b08233eca033.png)\r\n![image](https://user-images.githubusercontent.com/31396902/64663380-2bf5af00-d47e-11e9-924b-b980aca06d78.png)\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3017", "user": "Keanhua", "labels": ["bug", "jdbc"], "created": "2019-09-11 02:25:02", "closed": "2019-10-10 10:08:59", "commits": {"68b1bf6779123737072969a530dcf0822fcac36e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "68b1bf6779123737072969a530dcf0822fcac36e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a01fce650dcf3829083447321f6e27e0230a15ed"], "nameRev": "68b1bf6779123737072969a530dcf0822fcac36e tags/4.0.0-RC3~96", "commitMessage": "For #3017, get value according to target class in StreamQueryResult (#3208)\n\n", "commitDateTime": "2019-10-10 18:08:58", "authoredDateTime": "2019-10-10 18:08:58", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResult.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 52, "deletions": 4, "lines": 56}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResultTest.java", "insertions": 4, "deletions": 8, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryResultUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil.getValue(java.sql.ResultSet,int,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.getValue(int,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.getValue(java.lang.String,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryResultUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByTinyint()", "TOT": 8, "UPD": 4, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueBySmallint()", "TOT": 8, "UPD": 4, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByFloat()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBytes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBoolean()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByInteger()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBigint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByNumeric()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByDecimal()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByDouble()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByChar()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByVarchar()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByLongVarchar()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBinary()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByVarBinary()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByLongVarBinary()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByDate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByTime()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByTimestamp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByClob()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBlob()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByOther()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByShort()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamQueryResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResultTest.assertGetValueWithException()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResultTest.assertGetValueWithColumnIndex()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResultTest.assertGetValueWithColumnLabel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResultTest.assertGetValueWithShardingRule()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResultTest.getResultSetWithException()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResultTest.getResultSetMetaDataWithException()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResultTest.getResultSetMetaData()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "if distinct column value is null,QueryRow will throw NullPointException", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nwhen the anyone distinct column value is null,can return normal result\r\n### Actual behavior\r\nwill throw NullPointException\r\n### Reason analyze (If you can)\r\norg.apache.shardingsphere.core.execute.sql.execute.row.QueryRow#isEqualPartly line 69 \r\nif the distinct column value is null,will throw NullPointException,\r\nif the rowData.get(i)==null, i think should continue\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n``` sql\r\nSELECT DISTINCT sa.aid, sa.avatar_Url, sa.birthday, sa.create_time, sa.curr_address, sa.degree, sa.email,\r\n        sa.gender, sa.height, sa.identity_no, sa.identity_type, sa.image_id, sa.image_type, sa.image_url, sa.mark_info,\r\n        sa.married, sa.nation, sa.occupation, sa.person_name, sa.phone_no, sa.source_type, sa.sys_code, sa.thumbnail_url,\r\n        sa.update_time, sa.last_appear, sa.last_thumbnail_id, sa.event_count, sa.event_day_count\r\n        FROM\r\n                t_skynet_archive sa\r\n        LEFT JOIN t_skynet_archive_label_relation salr ON sa.aid=salr.aid\r\n```\r\nanyone distinct column value is null will throw NullpointException\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/3014", "user": "Precedeforetime", "labels": ["bug"], "created": "2019-09-10 04:06:24", "closed": "2019-09-25 03:09:26", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "4.0.0-RC2 sharding-proxy use zookeeper can not start", "body": "i can use zookeeper in sharding-proxy, but can not start.\r\nserver.xml:\r\norchestration:\r\n  name: orchestration_ds\r\n  overwrite: false\r\n  registry:\r\n    type: zookeeper\r\n    serverLists: localhost:2181\r\n    namespace: orchestration\r\n\r\nerror:\r\n[INFO ] 09:54:56.858 [main] o.a.c.f.imps.CuratorFrameworkImpl - Starting\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:zookeeper.version=3.4.10-39d3a4f269333c922ed3db283be479f9deacaa0f, built on 03/23/2017 10:13 GMT\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:host.name=server02\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.version=1.8.0_171\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.vendor=Oracle Corporation\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.home=/usr/java/jdk1.8.0_171/jre\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.class.path=.:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/conf:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-bootstrap-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-common-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-entry-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-api-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/guava-18.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/slf4j-api-1.7.7.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/jcl-over-slf4j-1.7.7.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-common-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/groovy-2.4.5-indy.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/snakeyaml-1.16.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/commons-codec-1.10.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-common-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-spi-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/antlr4-runtime-4.7.1.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/commons-collections4-4.2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-mysql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-postgresql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-oracle-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-parse-sqlserver-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-optimize-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-route-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-rewrite-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-execute-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-core-merge-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-orchestration-core-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-orchestration-reg-api-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/HikariCP-java7-2.4.11.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-transport-core-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/netty-all-4.1.16.Final.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-transport-mysql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-transaction-core-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-transport-postgresql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-frontend-core-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-frontend-spi-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-backend-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-transaction-xa-core-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-transaction-xa-spi-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/jta-1.1.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-transaction-xa-atomikos-manager-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/transactions-4.0.6.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/transactions-api-4.0.6.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/atomikos-util-4.0.6.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/transactions-jta-4.0.6.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/transactions-jdbc-4.0.6.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/postgresql-42.2.5.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-frontend-mysql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-frontend-postgresql-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-orchestration-reg-zookeeper-curator-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/curator-framework-2.10.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/curator-client-2.10.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/log4j-1.2.16.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/jline-0.9.94.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/curator-recipes-2.10.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-opentracing-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/opentracing-util-0.30.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/opentracing-api-0.30.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/opentracing-noop-0.30.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/logback-classic-1.2.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/logback-core-1.2.0.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/sharding-proxy-distribution-4.0.0-RC2.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/mysql-connector-java-5.1.47.jar:/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin/lib/zookeeper-3.4.10.jar\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.io.tmpdir=/tmp\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:java.compiler=<NA>\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:os.name=Linux\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:os.arch=amd64\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:os.version=3.10.0-862.el7.x86_64\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:user.name=root\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:user.home=/root\r\n[INFO ] 09:54:56.863 [main] org.apache.zookeeper.ZooKeeper - Client environment:user.dir=/root/apache-shardingsphere-incubating-4.0.0-RC2-sharding-proxy-bin\r\n[INFO ] 09:54:56.864 [main] org.apache.zookeeper.ZooKeeper - Initiating client connection, connectString=localhost:2181 sessionTimeout=60000 watcher=org.apache.curator.ConnectionState@67c33749\r\n[INFO ] 09:54:56.874 [main-SendThread(localhost:2181)] org.apache.zookeeper.ClientCnxn - Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error)\r\n[INFO ] 09:54:56.904 [main-SendThread(localhost:2181)] org.apache.zookeeper.ClientCnxn - Socket connection established to localhost/127.0.0.1:2181, initiating session\r\n[INFO ] 09:54:56.922 [main-SendThread(localhost:2181)] org.apache.zookeeper.ClientCnxn - Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d18c861d00003, negotiated timeout = 40000\r\n[INFO ] 09:54:56.924 [main-EventThread] o.a.c.f.state.ConnectionStateManager - State change: CONNECTED\r\n[INFO ] 09:54:57.457 [Curator-Framework-0] o.a.c.f.imps.CuratorFrameworkImpl - backgroundOperationsLoop exiting\r\n[INFO ] 09:54:57.466 [main] org.apache.zookeeper.ZooKeeper - Session: 0x16d18c861d00003 closed\r\n[INFO ] 09:54:57.466 [main-EventThread] org.apache.zookeeper.ClientCnxn - EventThread shut down for session: 0x16d18c861d00003\r\nException in thread \"main\" java.lang.NullPointerException\r\n\tat java.util.regex.Matcher.getTextLength(Matcher.java:1283)\r\n\tat java.util.regex.Matcher.reset(Matcher.java:309)\r\n\tat java.util.regex.Matcher.<init>(Matcher.java:229)\r\n\tat java.util.regex.Pattern.matcher(Pattern.java:1093)\r\n\tat org.yaml.snakeyaml.reader.StreamReader.checkPrintable(StreamReader.java:64)\r\n\tat org.yaml.snakeyaml.reader.StreamReader.<init>(StreamReader.java:47)\r\n\tat org.yaml.snakeyaml.Yaml.loadAs(Yaml.java:427)\r\n\tat org.apache.shardingsphere.core.yaml.engine.YamlEngine.unmarshal(YamlEngine.java:87)\r\n\tat org.apache.shardingsphere.orchestration.internal.registry.config.service.ConfigurationService.loadAuthentication(ConfigurationService.java:244)\r\n\tat org.apache.shardingsphere.shardingproxy.Bootstrap.startWithRegistryCenter(Bootstrap.java:110)\r\n\tat org.apache.shardingsphere.shardingproxy.Bootstrap.main(Bootstrap.java:80)\r\n\r\nDoes anyone know how to solve this problem?\r\n", "url": "https://github.com/apache/shardingsphere/issues/3013", "user": "ryan8926", "labels": ["bug", "orchestration"], "created": "2019-09-10 03:52:41", "closed": "2019-09-17 11:29:57", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "error \"There is no primary key here. Update will only use exact matching of the old values of the columns here. Thus, it may update more than one record.\"", "body": "project: sharding-proxy\r\nversion: v3.1.0 & v4.0.0-RC2\r\n\r\nquestion:\r\nwhen i use navicate to connect sharding-proxy, and do double-click the table(any table), it can load all the datas but just threw the errors like \"There is no primary key here. Update will only use exact matching of the old values of the columns here. Thus, it may update more than one record.\"\r\n", "url": "https://github.com/apache/shardingsphere/issues/3005", "user": "Myshiner", "labels": ["bug", "proxy"], "created": "2019-09-09 07:18:15", "closed": "2019-10-29 10:20:22", "commits": {"49a200e8d5d5c15128c8acdfd0cfe6ce82cd9345": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 50.000277777777775, "commitsDetails": [{"commitHash": "49a200e8d5d5c15128c8acdfd0cfe6ce82cd9345", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["409ae92feadb24c8386897bb734998cea6ce113b"], "nameRev": "49a200e8d5d5c15128c8acdfd0cfe6ce82cd9345 tags/4.0.0-RC3~31", "commitMessage": "Fix Navicat connect Sharding-Proxy no primary key error. (#3379)\n\n* fixes #3005, QueryHeader add primaryKey, nullable, autoIncrement, signed field.\r\n\r\n* add apache license (#3005)\r\n\r\n* fixes code review.(#3005)\r\n\r\n* fixes column name.(#3005)\r\n\r\n* add test case.(#3005)\r\n\r\n* add QueryHeader test case.(#3005)\r\n\r\n* fixes checkstyle.(#3005)\r\n\r\n* fixes param name, nullable -> notNull.(#3005)\r\n", "commitDateTime": "2019-10-29 18:20:21", "authoredDateTime": "2019-10-29 18:20:21", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ColumnMetaData.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/EncryptColumnMetaData.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/column/ShardingGeneratedKeyColumnMetaData.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetaDataTest.java", "insertions": 19, "deletions": 1, "lines": 20}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/metadata/table/TableMetasTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataLoader.java", "insertions": 13, "deletions": 5, "lines": 18}, {"filePath": "sharding-core/sharding-core-preprocessor/src/test/java/org/apache/shardingsphere/core/preprocessor/segment/select/projection/ProjectionsContextTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/DatabaseTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/AbstractSQLRouteTest.java", "insertions": 10, "deletions": 7, "lines": 17}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/context/EncryptRuntimeContext.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeader.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ShowDatabasesBackendHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/explain/ShardingCTLExplainBackendHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowStatusExecutor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/hint/internal/executor/HintShowTableStatusExecutor.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/sctl/show/ShardingCTLShowBackendHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/response/query/QueryHeaderTest.java", "insertions": 140, "deletions": 0, "lines": 140}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/text/query/MySQLComQueryPacketExecutor.java", "insertions": 19, "deletions": 1, "lines": 20}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/MySQLColumnDefinition41Packet.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/MySQLColumnFieldDetailFlag.java", "insertions": 65, "deletions": 0, "lines": 65}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ColumnMetaData.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.metadata.column.ColumnMetaData", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncryptColumnMetaData.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.metadata.column.EncryptColumnMetaData", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingGeneratedKeyColumnMetaData.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.metadata.column.ShardingGeneratedKeyColumnMetaData", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TableMetaDataTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.metadata.table.TableMetaDataTest.assertContainsIndex()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.metadata.table.TableMetaDataTest.assertColumnPrimaryKey()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.metadata.table.TableMetaDataTest.assertColumnNotNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.metadata.table.TableMetaDataTest.assertColumnAutoIncrement()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TableMetasTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.metadata.table.TableMetasTest.assertContainsColumn()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.metadata.table.TableMetasTest.assertGetAllColumnNamesWhenContainsKey()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.metadata.table.TableMetasTest.assertGetAllColumnNamesWhenNotContainsKey()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TableMetaDataLoader.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.metadata.TableMetaDataLoader.getColumnMetaData(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.apache.shardingsphere.core.rule.EncryptRule,java.util.Collection)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.metadata.TableMetaDataLoader", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.metadata.TableMetaDataLoader.getColumnMetaData(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,org.apache.shardingsphere.core.rule.EncryptRule,java.util.Collection)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.metadata.TableMetaDataLoader.getColumnMetaDataList(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ProjectionsContextTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.preprocessor.segment.select.projection.ProjectionsContextTest.createTableMetas()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DatabaseTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.DatabaseTest.getMetaDataForAllRoutingSQL()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.DatabaseTest.getMetaDataForPagination()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractSQLRouteTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.type.standard.AbstractSQLRouteTest.buildTableMetas()", "TOT": 13, "UPD": 10, "INS": 0, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "EncryptRuntimeContext.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.getColumnMetaData(java.lang.String,java.lang.String,java.lang.String,boolean,org.apache.shardingsphere.core.rule.EncryptRule,java.util.Collection)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.getColumnMetaData(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,org.apache.shardingsphere.core.rule.EncryptRule,java.util.Collection)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.getColumnMetaDataList(java.sql.Connection,java.lang.String,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryHeader.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.response.query.QueryHeader", "TOT": 19, "UPD": 0, "INS": 12, "MOV": 6, "DEL": 1}]}, {"spoonFilePath": "ShowDatabasesBackendHandler.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.admin.ShowDatabasesBackendHandler.execute()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingCTLExplainBackendHandler.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.sctl.explain.ShardingCTLExplainBackendHandler.execute()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HintShowStatusExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.sctl.hint.internal.executor.HintShowStatusExecutor.createQueryHeaders()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HintShowTableStatusExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.sctl.hint.internal.executor.HintShowTableStatusExecutor.createQueryHeaders()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingCTLShowBackendHandler.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.sctl.show.ShardingCTLShowBackendHandler.createResponsePackets(java.lang.String,java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryHeaderTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.response.query.QueryHeaderTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLComQueryPacketExecutor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.getColumnFieldDetailFlag(org.apache.shardingsphere.shardingproxy.backend.response.query.QueryHeader)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.createQueryPackets(org.apache.shardingsphere.shardingproxy.backend.response.query.QueryResponse)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MySQLColumnDefinition41Packet.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.MySQLColumnDefinition41Packet", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MySQLColumnFieldDetailFlag.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.MySQLColumnFieldDetailFlag", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Data does not decrypt", "body": "encryptRule:\r\n  encryptors:\r\n    aes_encryptor:\r\n      props:\r\n        aes.key.value: zqAvW0yEdH\r\n      type: AES\r\n  tables:\r\n    task:\r\n      columns:\r\n        phone:\r\n          cipherColumn: phone_cipher\r\n          encryptor: aes_encryptor\r\n          plainColumn: phone\r\n\r\n![image](https://user-images.githubusercontent.com/4637107/64430682-5eed1b00-d0eb-11e9-89b3-77991af8039f.png)\r\n\r\ninsert  is well, it worked.\r\nbut when I select this record  the phone is null,  I used mybatis.\r\n![image](https://user-images.githubusercontent.com/4637107/64430901-d458eb80-d0eb-11e9-8448-e9e049dec15e.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/4637107/64430949-f5b9d780-d0eb-11e9-9ac7-2e1d29d112a4.png)\r\nwhen I insert  it use encrypt method, but when i select  it dosen't call decrypt method.", "url": "https://github.com/apache/shardingsphere/issues/2992", "user": "shuohao", "labels": ["bug"], "created": "2019-09-06 13:16:43", "closed": "2019-09-09 06:06:09", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "SQLServer OFFSET FETCH pagination return wrong results.", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nSQL with \"OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY\" returns 2 items.\r\n### Actual behavior\r\nSQL with \"OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY\" returns 4 items.\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n1. DataBase\r\nTwo SQLServer databases, each has two tables : t_order_0 and t_order_1.\r\n2. Datas\r\nDatabase : ds0\r\nonly table t_order_0 has data, t_order_1 has no data.\r\n![image](https://user-images.githubusercontent.com/1227977/64414678-60581c80-d0c6-11e9-9eb2-77a3625f2664.png)\r\nDatabase : ds1\r\nonly table t_order_1 has data, t_order_0 has no data.\r\n![image](https://user-images.githubusercontent.com/1227977/64414723-736aec80-d0c6-11e9-950e-3b8893367863.png)\r\n\r\n3. shardingrule configuration\r\n```YAML\r\nshardingRule:\r\n  tables:\r\n    t_order:\r\n      actualDataNodes: ds${0..1}.t_order_${0..1}\r\n      databaseStrategy:\r\n        inline:\r\n          shardingColumn: user_id\r\n          algorithmExpression: ds${user_id % 2}\r\n      tableStrategy:\r\n        inline:\r\n          shardingColumn: order_id\r\n          algorithmExpression: t_order_${order_id % 2}\r\n      keyGenerator:\r\n        type: SNOWFLAKE\r\n        column: order_id\r\n\r\n  defaultDataSourceName: ds0\r\n  defaultTableStrategy:\r\n    none:\r\n  defaultKeyGenerator:\r\n    type: SNOWFLAKE\r\n    column: order_id\r\n\r\nprops:\r\n  sql.show: true\r\n```\r\n4. Ouput\r\n```\r\n2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Rule Type: sharding\r\n2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Logic SQL: select user_id, order_id, order_no from t_order order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY\r\n2019-09-06 16:46:47 INFO [ShardingSphere-SQL] SQLStatement: ShardingSelectOptimizedStatement(tables=Tables(tables=[Table(name=t_order, alias=Optional.absent())], schema=Optional.absent()), groupBy=org.apache.shardingsphere.core.optimize.sharding.segment.select.groupby.GroupBy@63fd4873, orderBy=org.apache.shardingsphere.core.optimize.sharding.segment.select.orderby.OrderBy@1e11bc55, selectItems=SelectItems(startIndex=7, stopIndex=33, distinctRow=false, items=[ColumnSelectItem(owner=null, name=user_id, alias=Optional.absent()), ColumnSelectItem(owner=null, name=order_id, alias=Optional.absent()), ColumnSelectItem(owner=null, name=order_no, alias=Optional.absent())], tables=[TableSegment(startIndex=40, stopIndex=46, name=t_order, quoteCharacter=NONE, owner=Optional.absent(), alias=Optional.absent())]), pagination=org.apache.shardingsphere.core.optimize.sharding.segment.select.pagination.Pagination@7544a1e4, containsSubquery=false)\r\n2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Actual SQL: ds0 ::: select user_id, order_id, order_no from t_order_0 order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY\r\n2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Actual SQL: ds0 ::: select user_id, order_id, order_no from t_order_1 order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY\r\n2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Actual SQL: ds1 ::: select user_id, order_id, order_no from t_order_0 order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY\r\n2019-09-06 16:46:47 INFO [ShardingSphere-SQL] Actual SQL: ds1 ::: select user_id, order_id, order_no from t_order_1 order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY\r\nBegin to print results\r\norder00\r\norder01\r\norder02\r\norder03\r\nFinish to print results\r\n```\r\n From above we can see that returns 4 items, but expected is 2.\r\n\r\nThe query SQL is without sharding field(there is no where condition)\r\n```SQL\r\nselect user_id, order_id, order_no from t_order order by order_id asc OFFSET 0 ROW FETCH NEXT 2 ROWS ONLY\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2987", "user": "pxchen", "labels": ["bug", "volunteer wanted"], "created": "2019-09-06 08:55:27", "closed": "2019-12-19 01:53:34", "commits": {}, "ttf": 103.00027777777778, "commitsDetails": []}, {"title": "It doesn't work when set properties for ShardingPreparedStatement.", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n> 4.0.0.RC3\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n> Sharding-JDBC\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n> When set queryTimeout property for ShardingPreparedStatement, it doesn't work.\r\n### Reason analyze (If you can)\r\n\r\n> Because when ShardingPreparedStatement is created, there is no actual PreparedStatement in ShardingPreparedStatement. Only when you call execute() or executeQuery(),  PreparedStatement is created. So before execute() is called, any assignment for PreparedStatement will not work.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n> One solution is to create PreparedStatement once ShardingPreparedStatement is created. You need to split function of initPreparedStatementExecutor() in ShardingPreparedStatement.\r\nHere are related codes in ShardingPreparedStatement:\r\n```\r\npublic ShardingPreparedStatement(final ShardingConnection connection, final String sql) {\r\n        this(connection, sql, ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY, ResultSet.HOLD_CURSORS_OVER_COMMIT, false);\r\n    }\r\n---\r\n@Override\r\n    public ResultSet executeQuery() throws SQLException {\r\n        ResultSet result;\r\n        try {\r\n            clearPrevious();\r\n            shard();\r\n            initPreparedStatementExecutor();\r\n            MergeEngine mergeEngine = MergeEngineFactory.newInstance(connection.getRuntimeContext().getDatabaseType(), \r\n                    connection.getRuntimeContext().getRule(), sqlRouteResult, connection.getRuntimeContext().getMetaData().getTables(), preparedStatementExecutor.executeQuery());\r\n            result = getResultSet(mergeEngine);\r\n        } finally {\r\n            clearBatch();\r\n        }\r\n        currentResultSet = result;\r\n        return result;\r\n    }\r\n---\r\nprivate void initPreparedStatementExecutor() throws SQLException {\r\n        preparedStatementExecutor.init(sqlRouteResult);\r\n        setParametersForStatements();\r\n    }\r\n---\r\nIn PreparedStatementExecutor.java\r\npublic void init(final SQLRouteResult routeResult) throws SQLException {\r\n        setOptimizedStatement(routeResult.getShardingStatement());\r\n        getExecuteGroups().addAll(obtainExecuteGroups(routeResult.getRouteUnits()));\r\n        cacheStatements();\r\n    }\r\n```\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2981", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-09-05 08:21:41", "closed": "2019-09-08 08:20:35", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "when set two column to encrypt, one of the cipher-column is plain data, the other is correct", "body": "Sharding-encript\r\nversion:4.0.0-RC2-SNAPSHOT\r\nmy logical sql\r\nSQL: update cf_application_info\r\nset phone=?,idNo=?\r\nwhere applyNum = ?\r\nthe question is when i set phone and idN is the cipher column,and alter my table by adding phone_cipher,idNo_cipher column,i update my data,the result is phone_cipher has the plain data,and the phone column has the cipher data,this is strange and i think this is a bug.\r\n", "url": "https://github.com/apache/shardingsphere/issues/2974", "user": "SAMARITAN2046", "labels": ["bug", "encrypt"], "created": "2019-09-04 12:33:22", "closed": "2019-09-05 02:17:30", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "decrypt the plain data when \"query.with.cipher.column\" is false", "body": "Sharding-encript\r\nversion:4.0.0-RC2-SNAPSHOT\r\nmy logical sql\r\nSQL: select\r\n          id, applyNum, status,\r\n          applyName, idNo, phone\r\n        from cf_application_info\r\n        where applyNum = ?\r\nthe bug is:when my setting \"query.with.cipher.column\" is false,i query my origin data(plain data) ,it happens exception.it seems the code still using the aks to decrypt my data.\r\nthis is the exception:\r\nCaused by:\r\n\tat com.jdd.aks.extend.AksShardingExtend.decrypt(AksShardingExtend.java:122)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.decrypt(StreamQueryResult.java:162)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.decrypt(StreamQueryResult.java:157)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.getValue(StreamQueryResult.java:75)\r\n\tat org.apache.shardingsphere.core.merge.dql.common.StreamMergedResult.getValue(StreamMergedResult.java:56)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.EncryptResultSet.getString(EncryptResultSet.java:185)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.ibatis.logging.jdbc.ResultSetLogger.invoke(ResultSetLogger.java:68)\r\n\tat org.apache.ibatis.type.StringTypeHandler.getNullableResult(StringTypeHandler.java:37)\r\n\tat org.apache.ibatis.type.StringTypeHandler.getNullableResult(StringTypeHandler.java:26)\r\n\tat org.apache.ibatis.type.BaseTypeHandler.getResult(BaseTypeHandler.java:66)\r\n\t... 43 more\r\ni hope this can be fixed.thanks", "url": "https://github.com/apache/shardingsphere/issues/2973", "user": "SAMARITAN2046", "labels": ["bug", "encrypt"], "created": "2019-09-04 12:22:23", "closed": "2019-09-05 02:16:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "when using sharding master-slave-rules,the encryptRule is not worked for result,but is wored for param", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nthe query result is decrypt\r\n\r\n### Actual behavior\r\nthe query result is still encrypt\r\n\r\n### Reason analyze (If you can)\r\nthie query result not use the encryptRule to decrypt\r\n\r\n**this question is not dupe! I use the master-slave-rules! I want the master-slave-rules and the encrpt can combine use!**\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\nspring:\r\nshardingsphere:\r\ndatasource:\r\nnames: master,slave0\r\nmaster:\r\ntype: com.alibaba.druid.pool.DruidDataSource\r\ndriver-class-name: org.h2.Driver\r\nurl: jdbc:h2:mem:dbtest:public;DB_CLOSE_DELAY=-1;MODE=MySQL\r\nslave0:\r\ntype: com.alibaba.druid.pool.DruidDataSource\r\ndriver-class-name: org.h2.Driver\r\nurl: jdbc:h2:mem:dbtest:public;DB_CLOSE_DELAY=-1;MODE=MySQL\r\nsharding:\r\ndefaultDataSourceName: dataSource\r\nmaster-slave-rules:\r\ndataSource:\r\nmaster-data-source-name: master\r\nslave-data-source-names[0]: slave0\r\nload-balance-algorithm-type: ROUND_ROBIN\r\nencryptRule:\r\nencryptors:\r\nencryptor_aes:\r\ntype: AES\r\nprops:\r\naes.key.value: 123456\r\ntables:\r\ncompany:\r\ncolumns:\r\naddress:\r\ncipherColumn: address\r\nencryptor: encryptor_aes\r\nfull_name:\r\ncipherColumn: full_name\r\nencryptor: encryptor_aes\r\nprops:\r\nsql.show: true", "url": "https://github.com/apache/shardingsphere/issues/2972", "user": "Keanhua", "labels": ["bug", "encrypt"], "created": "2019-09-04 09:37:25", "closed": "2019-09-09 03:57:05", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Delete with alias error", "body": "Sharding-jdbc\r\nversion:4.0.0-RC1\r\nmy logical sql \r\ndelete Goods from goods AS Goods WHERE Goods.goods_id   <=   ?\r\n\r\nHowever sharding-jdbc replace alias and the table name totally, just like this\r\ndelete goods_1 from goods_1 AS Goods WHERE Goods.goods_id   <=   ?\r\nthis will execute error in mysql 5.6\r\n\r\nOne solution is to change to another alias different table name, but this may difficult for me. What else should I do?\r\n", "url": "https://github.com/apache/shardingsphere/issues/2961", "user": "wowojyc", "labels": ["SQL parse", "bug"], "created": "2019-09-02 12:33:42", "closed": "2019-09-05 13:41:38", "commits": {"8ecab2d00022c212c3e384b8dab788ea22281e33": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "8ecab2d00022c212c3e384b8dab788ea22281e33", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["6606964dce1e8a7bda45e5d41116bb58d0f34694", "632597f22230682a2721c4bdbe0a4f18a87ef251"], "nameRev": "8ecab2d00022c212c3e384b8dab788ea22281e33 tags/4.0.0-RC3~222", "commitMessage": "Merge pull request #2978 from sunbufu/fix#2961\n\nFilter out incorrect table which with only alias.", "commitDateTime": "2019-09-05 21:41:35", "authoredDateTime": "2019-09-05 21:41:35", "commitGitStats": [{"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/api/segment/Tables.java", "insertions": 17, "deletions": 2, "lines": 19}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/api/segment/TablesTest.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/sharding/dml/delete.xml", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dml/dml-integrate-test-cases.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dml/delete.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Tables.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.api.segment.Tables", "TOT": 14, "UPD": 2, "INS": 4, "MOV": 6, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.api.segment.Tables.getAlias(org.apache.shardingsphere.core.parse.sql.segment.generic.TableAvailable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TablesTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.api.segment.TablesTest.assertIsSingleTableWithNameConflictAlias()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "mysql page limit Long parameter type error", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2-SNAPSHOT(clone from dev branch)\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nsql execute success\r\n### Actual behavior\r\nCaused by: java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer\r\n### Reason analyze (If you can)\r\nmy code below:\r\npublic List<User> findUsersByPageIntType(Integer begin, Integer end){\r\n\t\tString sql = \"select id,name,age,email from user limit ?,? \";\r\n\t\tObject[] params = new Object[] {begin, end};\r\n\t\tList<User> userList = jdbcTemplate.query(sql, params, getUserMapper());\r\n\t\treturn userList;\r\n\t}\r\npublic List<User> findUsersByPageLongType(Long begin, Long end){\r\n\t\tString sql = \"select id,name,age,email from user limit ?,? \";\r\n\t\tObject[] params = new Object[] {begin, end};\r\n\t\tList<User> userList = jdbcTemplate.query(sql, params, getUserMapper());\r\n\t\treturn userList;\r\n\t}\r\n\t\r\n\t\r\nfirst, call findUsersByPageIntType method, it's ok\r\nbut call findUsersByPageLongType method there was an error -> Caused by: java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n1.application.properties\r\nspring.shardingsphere.datasource.names=ds0\r\nspring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource\r\nspring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver\r\nspring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://127.0.0.1:3306/ttx_util?useUnicode=true&useSSL=false&characterEncoding=utf8\r\nspring.shardingsphere.datasource.ds0.username=test\r\nspring.shardingsphere.datasource.ds0.password=test\r\n\r\nspring.shardingsphere.sharding.tables.user.actual-data-nodes=ds0.user_$->{0..1}\r\nspring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=erp_id\r\nspring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user_$->{erp_id % 2}\r\nspring.shardingsphere.sharding.tables.user.key-generator.column=id\r\nspring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE\r\n#\u662f\u5426\u5f00\u542fSQL\u663e\u793a\uff0c\u9ed8\u8ba4\u503c: false\r\nspring.shardingsphere.props.sql.show=true\r\n2.table create sql:\r\nCREATE TABLE `user_0` (\r\n  `id` bigint(20) NOT NULL COMMENT '\u4e3b\u952eID',\r\n\t`erp_id` int(11) NOT NULL COMMENT '\u5206\u8868erpId',\r\n  `name` varchar(30) DEFAULT NULL COMMENT '\u59d3\u540d',\r\n  `age` int(11) DEFAULT NULL COMMENT '\u5e74\u9f84',\r\n  `email` varchar(50) DEFAULT NULL COMMENT '\u90ae\u7bb1',\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\r\n\r\nCREATE TABLE `user_1` (\r\n  `id` bigint(20) NOT NULL COMMENT '\u4e3b\u952eID',\r\n\t`erp_id` int(11) NOT NULL COMMENT '\u5206\u8868erpId',\r\n  `name` varchar(30) DEFAULT NULL COMMENT '\u59d3\u540d',\r\n  `age` int(11) DEFAULT NULL COMMENT '\u5e74\u9f84',\r\n  `email` varchar(50) DEFAULT NULL COMMENT '\u90ae\u7bb1',\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2926", "user": "rboleynl", "labels": ["bug", "sharding"], "created": "2019-08-26 10:00:40", "closed": "2019-09-08 20:48:00", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "when using EncryptPreparedStatement to savebatch occours error", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n![image](https://user-images.githubusercontent.com/31396902/63673204-599fee80-c816-11e9-8d89-04e1142dec64.png)\r\npreparedStatement is not null\r\n\r\n### Actual behavior\r\npreparedStatement is null\r\n\r\n### Reason analyze (If you can)\r\nwhen use EncryptPreparedStatement to batch operation, preparedStatement will not Initialization\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2923", "user": "Keanhua", "labels": ["bug", "encrypt"], "created": "2019-08-26 07:32:13", "closed": "2019-09-09 03:18:11", "commits": {"255ea152fd666558bd2177f3526d7c4e94380141": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "255ea152fd666558bd2177f3526d7c4e94380141", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["f1cdf56e8edc22c4ccd0cad4d1dd280f771f85e4", "9dd69a83cad52b494c06d2de1cd972b8954883e6"], "nameRev": "255ea152fd666558bd2177f3526d7c4e94380141 tags/4.0.0-RC3~202", "commitMessage": "Merge pull request #3000 from xiyelife/dev\n\nfix #2923 add replayMethodsInvocation  for EncryptPreparedStatement ", "commitDateTime": "2019-09-08 22:18:11", "authoredDateTime": "2019-09-08 22:18:11", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.getRoutedStatements()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.executeQuery()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.executeUpdate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.executeBatch()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "IllegalArgumentException will occur when execute 'show databases' use sharding-jdbc", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\nthe dev branch\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n Sharding-JDBC\r\n### Expected behavior\r\nno Exception\r\n### Actual behavior\r\noccur an IllegalArgumentException\r\n### Reason analyze (If you can)\r\ninitialization of AbstractResultSetAdapter check resultSets whether empty \uff0cbut resultSets will empty when you show databases\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n<img width=\"981\" alt=\"testBugShow\" src=\"https://user-images.githubusercontent.com/4453100/63668150-d88e2a80-c808-11e9-9e6f-bdb9adba5a44.png\">\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n<img width=\"1072\" alt=\"bugdetail\" src=\"https://user-images.githubusercontent.com/4453100/63668160-e2179280-c808-11e9-9c8f-b6d269138184.png\">\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/2922", "user": "betterjava", "labels": ["bug", "jdbc"], "created": "2019-08-26 05:53:59", "closed": "2019-10-18 09:27:14", "commits": {}, "ttf": 53.000277777777775, "commitsDetails": []}, {"title": "When the application restarts\uff0cLEAF_SEGMENT Distributed Primary Key Generation Not working properly in RC2", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\nsharding-orchestration:4.0.0-RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC \r\n### Expected behavior\r\nWhen the program restarts, the primary key of LEAF_SEGMENT distribution can be generated normally.\r\n### Actual behavior\r\nWhen the program restarts, the program throws a null pointer exception,\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nCaused by: java.lang.NullPointerException\r\n\tat org.apache.shardingsphere.orchestration.reg.zookeeper.curator.CuratorZookeeperRegistryCenter.tryLock(CuratorZookeeperRegistryCenter.java:306)\r\n\tat org.apache.shardingsphere.orchestration.internal.keygen.LeafSegmentKeyGenerator.incrementCacheId(LeafSegmentKeyGenerator.java:136)\r\n\r\n### Reason analyze (If you can)\r\nWhen the program restarts, **CuratorZookeeperRegistryCenter leafLock is not initialized properly\uff0c**\r\nrelated code:\r\n1. [LeafSegmentKeyGenerator.java#L95](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGenerator.java#L95) \r\n2. [CuratorZookeeperRegistryCenter.java:#306](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-zookeeper-curator/src/main/java/org/apache/shardingsphere/orchestration/reg/zookeeper/curator/CuratorZookeeperRegistryCenter.java#L306)\r\n", "url": "https://github.com/apache/shardingsphere/issues/2919", "user": "m1ngyuan", "labels": ["bug", "orchestration"], "created": "2019-08-24 09:18:41", "closed": "2019-08-28 10:16:42", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "NullPointerException will occur when bindingtable have no tablerule but have a default datasource", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\nthe dev branch\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n Sharding-JDBC\r\n### Expected behavior\r\ncan work and not occur NullPointerException\r\n### Actual behavior\r\noccur a NullPointerException\r\n### Reason analyze (If you can)\r\nthe initialization of bindingTableRules of ShardingRule use broadcastTables when broadcastTables have not been initialized\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\n> Map<String, DataSource> dataSourceMap = new HashMap<>();\r\n        dataSourceMap.put(\"master_0\", getMysqlDatasource(\"demo_ds_master_0\"));\r\n        ShardingRuleConfiguration configuration = new ShardingRuleConfiguration();\r\n        configuration.setBindingTableGroups(Arrays.asList(\"user\",\"user_detail\"));\r\n        configuration.setDefaultDataSourceName(\"master_0\");\r\n        ShardingDataSourceFactory.createDataSource(dataSourceMap,configuration,new Properties());\r\n", "url": "https://github.com/apache/shardingsphere/issues/2917", "user": "betterjava", "labels": ["bug", "sharding"], "created": "2019-08-23 11:50:32", "closed": "2019-08-26 09:29:27", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Encrypt replace the table name with the column name.", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC2-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC \r\n\r\n### Expected behavior\r\n\r\nencrypt successfully.\r\n\r\n### Actual behavior\r\n\r\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'status.status' in 'field list'\r\n\r\n### Reason analyze (If you can)\r\n\r\nLogic SQL: `select orderentit0_.order_id as order_id1_1_, orderentit0_.status as status2_1_, orderentit0_.user_id as user_id3_1_ from t_order orderentit0_`\r\n\r\nactual SQL: `select orderentit0_.order_id as order_id1_1_, status.status as status2_1_, orderentit0_.user_id as user_id3_1_ from t_order orderentit0_`\r\n\r\nReplace the table name with column name when rewrite.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nclone example code\r\nuse `local-zookeeper-encrypt` as spring.profiles.active\r\nrun `/Users/yangyi/Documents/java/sharding-sphere-example-sion/sharding-jdbc-example/orchestration-example/orchestration-spring-boot-example/src/main/java/org/apache/shardingsphere/example/orchestration/spring/boot/SpringBootExample`\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\nhttps://github.com/apache/incubator-shardingsphere-example\r\n", "url": "https://github.com/apache/shardingsphere/issues/2883", "user": "KomachiSion", "labels": ["bug", "encrypt"], "created": "2019-08-16 08:43:09", "closed": "2019-08-16 14:06:16", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Use `position` with column without quote will cause parse failure for MySQL", "body": "`position` is not a keyword, but will use on position function, so we should add it to unreserved word", "url": "https://github.com/apache/shardingsphere/issues/2868", "user": "terrymanu", "labels": ["bug", "sharding"], "created": "2019-08-13 15:14:56", "closed": "2019-08-13 15:27:55", "commits": {"aa5ddd7603a0e86a75d2e5f96355b78ae9542c13": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "aa5ddd7603a0e86a75d2e5f96355b78ae9542c13", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["b691301059b3e9707882f0918c8c94748cb21e83"], "nameRev": "aa5ddd7603a0e86a75d2e5f96355b78ae9542c13 tags/4.0.0-RC2~20", "commitMessage": "fix #2868\n", "commitDateTime": "2019-08-13 23:27:38", "authoredDateTime": "2019-08-13 23:27:09", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aa5ddd7603a0e86a75d2e5f96355b78ae9542c13"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4"]}, {"title": "Wring rewritten SQL in mulitiple threads", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2862", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-08-13 08:21:16", "closed": "2019-08-13 08:50:42", "commits": {"0feb2b3c89c7adab482e14b969447573ba81c3f5": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0feb2b3c89c7adab482e14b969447573ba81c3f5", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["87af95674a182329c2a41e9516a88f56e5d21075"], "nameRev": "0feb2b3c89c7adab482e14b969447573ba81c3f5 tags/4.0.0-RC2~22", "commitMessage": "for #2862, fix multiple thread's problem for SQLTokenGenerator\n", "commitDateTime": "2019-08-13 16:51:45", "authoredDateTime": "2019-08-13 16:51:19", "commitGitStats": [{"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/statement/dml/ShardingInsertOptimizedStatement.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertCipherNameTokenGenerator.java", "insertions": 4, "deletions": 17, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertQueryAndPlainNamesTokenGenerator.java", "insertions": 19, "deletions": 29, "lines": 48}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertRegularNamesTokenGenerator.java", "insertions": 23, "deletions": 33, "lines": 56}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertSetCipherColumnTokenGenerator.java", "insertions": 14, "deletions": 22, "lines": 36}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertSetQueryAndPlainColumnsTokenGenerator.java", "insertions": 22, "deletions": 32, "lines": 54}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertValuesTokenGenerator.java", "insertions": 10, "deletions": 22, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingInsertOptimizedStatement.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.sharding.statement.dml.ShardingInsertOptimizedStatement.createUnit(org.apache.shardingsphere.core.parse.sql.segment.dml.expr.ExpressionSegment[],java.lang.Object[],int)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "InsertCipherNameTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertCipherNameTokenGenerator.initParameters(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertCipherNameTokenGenerator", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertCipherNameTokenGenerator.generateSQLTokens(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.EncryptRule,boolean)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertCipherNameTokenGenerator.createInsertColumnTokens()", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertCipherNameTokenGenerator.createInsertColumnTokens(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsertQueryAndPlainNamesTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.EncryptRule,boolean)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.createInsertAssistedColumnsToken()", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 5}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.initParameters(org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getAssistedQueryAndPlainColumns()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getAssistedQueryColumns()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getPlainColumns()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.createInsertAssistedColumnsToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getAssistedQueryAndPlainColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getAssistedQueryColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getPlainColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsertRegularNamesTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.createInsertColumnsToken()", "TOT": 14, "UPD": 3, "INS": 0, "MOV": 8, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.BaseRule,boolean)", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.initParameters(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rule.BaseRule)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.getActualInsertColumns()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.getEncryptRule()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendColumns()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendGeneratedKey(org.apache.shardingsphere.core.rule.ShardingRule)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendAssistedQueryAndPlainColumns(org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.createInsertColumnsToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rule.BaseRule)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.getActualInsertColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.BaseRule)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.getEncryptRule(org.apache.shardingsphere.core.rule.BaseRule)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.BaseRule)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.ShardingRule)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendGeneratedKey(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.ShardingRule)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendAssistedQueryAndPlainColumns(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToGenerateSQLToken(org.apache.shardingsphere.core.rule.BaseRule,org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "InsertSetCipherColumnTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.initParameters(org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.getCipherColumnValue(org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.createInsertSetEncryptValueTokens()", "TOT": 12, "UPD": 1, "INS": 0, "MOV": 8, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.generateSQLTokens(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.EncryptRule,boolean)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.createInsertSetEncryptValueToken(org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.createInsertSetEncryptValueTokens(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.createInsertSetEncryptValueToken(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.getCipherColumnValue(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsertSetQueryAndPlainColumnsTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.initParameters(org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getStartIndex()", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.EncryptRule,boolean)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.createInsertSetAddItemsToken()", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryAndPlainColumnNames()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryColumnNames()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getPlainColumnNames()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryAndPlainColumnValues(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.createInsertSetAddItemsToken(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryAndPlainColumnNames(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryColumnNames(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getPlainColumnNames(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getStartIndex(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryAndPlainColumnValues(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,java.util.Collection)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsertValuesTokenGenerator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.initParameters(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,java.util.Collection)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.EncryptRule,boolean)", "TOT": 10, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.createInsertValuesToken()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.getStartIndex()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.getStopIndex()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.getStartIndex(java.util.Collection)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.getStopIndex(java.util.Collection)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.createInsertValuesToken(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0feb2b3c89c7adab482e14b969447573ba81c3f5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 93, "deletions": 157, "lines": 250, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 298, "UPD": 18, "INS": 120, "MOV": 66, "DEL": 94, "spoonFilesChanged": 7, "spoonMethodsChanged": 67}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite", "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize"], "changesInPackagesSPOON": ["org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.getActualInsertColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.BaseRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.getEncryptRule()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryAndPlainColumnNames()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.EncryptRule,boolean)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getStartIndex()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryColumnNames(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.getStopIndex()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.initParameters(org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertCipherNameTokenGenerator.createInsertColumnTokens()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.initParameters(org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.generateSQLTokens(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.EncryptRule,boolean)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.createInsertValuesToken(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,java.util.Collection)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getAssistedQueryAndPlainColumns()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.getEncryptRule(org.apache.shardingsphere.core.rule.BaseRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.createInsertSetEncryptValueToken(org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.getStartIndex(java.util.Collection)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendGeneratedKey(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.ShardingRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendGeneratedKey(org.apache.shardingsphere.core.rule.ShardingRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getPlainColumnNames(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.createInsertColumnsToken()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getPlainColumns()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertCipherNameTokenGenerator.createInsertColumnTokens(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.createInsertSetAddItemsToken(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertCipherNameTokenGenerator", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.createInsertAssistedColumnsToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertCipherNameTokenGenerator.initParameters(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendAssistedQueryAndPlainColumns(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.createInsertColumnsToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rule.BaseRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.getStartIndex()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getAssistedQueryAndPlainColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendColumns()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.createInsertSetAddItemsToken()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.initParameters(org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.getCipherColumnValue(org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.getActualInsertColumns()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.createInsertAssistedColumnsToken()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getPlainColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.createInsertSetEncryptValueTokens()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getPlainColumnNames()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.getStopIndex(java.util.Collection)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryAndPlainColumnNames(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryAndPlainColumnValues(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,java.util.Collection)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.BaseRule,boolean)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendAssistedQueryAndPlainColumns(org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.BaseRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertCipherNameTokenGenerator.generateSQLTokens(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.EncryptRule,boolean)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.getCipherColumnValue(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryAndPlainColumnValues(java.util.Collection)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getAssistedQueryColumnNames()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.EncryptRule,boolean)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetQueryAndPlainColumnsTokenGenerator.getStartIndex(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.initParameters(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rule.BaseRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getAssistedQueryColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.createInsertSetEncryptValueTokens(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.initParameters(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,java.util.Collection)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.generateSQLToken(org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement,org.apache.shardingsphere.core.rewrite.builder.ParameterBuilder,org.apache.shardingsphere.core.rule.EncryptRule,boolean)", "org.apache.shardingsphere.core.optimize.sharding.statement.dml.ShardingInsertOptimizedStatement.createUnit(org.apache.shardingsphere.core.parse.sql.segment.dml.expr.ExpressionSegment[],java.lang.Object[],int)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertQueryAndPlainNamesTokenGenerator.getAssistedQueryColumns()", "org.apache.shardingsphere.core.rewrite.token.generator.InsertSetCipherColumnTokenGenerator.createInsertSetEncryptValueToken(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.AssignmentSegment)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToAppendColumns(org.apache.shardingsphere.core.optimize.api.statement.InsertOptimizedStatement,org.apache.shardingsphere.core.rule.ShardingRule)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertRegularNamesTokenGenerator.isNeedToGenerateSQLToken(org.apache.shardingsphere.core.rule.BaseRule,org.apache.shardingsphere.core.optimize.api.statement.OptimizedStatement)", "org.apache.shardingsphere.core.rewrite.token.generator.InsertValuesTokenGenerator.createInsertValuesToken()"]}, {"title": "group by with keyword alias miss back quote when rewriting", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC and Sharding-Proxy\r\n### Expected behavior\r\nlogical SQL:\r\nSELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key`\r\nactual SQL:\r\nSELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key` ORDER BY 'key' ASC\r\n### Actual behavior\r\nSELECT SUM(order_id) AS orders_sum, user_id as `key` FROM t_order GROUP BY `key` ORDER BY key ASC\r\n### Reason analyze (If you can)\r\nmiss back quote when rewriting\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2838", "user": "tuohai666", "labels": ["bug"], "created": "2019-08-09 04:22:48", "closed": "2019-08-09 04:23:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Can not rewrite correctly when use plainColumn", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0.RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nWhen use plainColumn, The SQL will be rewritten to Select plainColumn from tb.\r\n### Actual behavior\r\nWhen use plainColumn, The SQL will be rewritten to Select cipherColumn from tb.\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2823", "user": "tristaZero", "labels": ["bug"], "created": "2019-08-07 11:49:11", "closed": "2019-08-08 09:33:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Wrong resultSet when execute `desc table;` using EncryptRule", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0.RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nWhen execute `desc encryptTable`, it will show logic columns of encryptTable\r\n### Actual behavior\r\nwhen execute `desc encryptTable`, it shows actual columns of encryptTable\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\nThe coding entrance:\r\n```\r\nJDBCDatabaseCommunicationEngine.java\r\n private BackendResponse merge(final SQLRouteResult routeResult) throws SQLException {\r\n        if (response instanceof UpdateResponse) {\r\n            if (!isAllBroadcastTables(routeResult.getOptimizedStatement())) {\r\n                ((UpdateResponse) response).mergeUpdateCount();\r\n            }\r\n            return response;\r\n        }\r\n        mergedResult = MergeEngineFactory.newInstance(databaseType, \r\n                logicSchema.getShardingRule(), routeResult, logicSchema.getMetaData().getTable(), ((QueryResponse) response).getQueryResults()).merge();\r\n        if (mergedResult instanceof ShowTablesMergedResult) {\r\n            ((ShowTablesMergedResult) mergedResult).resetColumnLabel(logicSchema.getName());\r\n        }\r\n        handleColumnsForQueryHeader(routeResult);\r\n        return response;\r\n    }\r\n```\r\n> You need to replace actual columns of BackendResponse with logic columns here.\r\n\r\nHere are some ideas:\r\n1.  Create DescribeTableMergedResult extends MemoryMergedResult to handle QueryResults of `DESC encryptTable`, but U need to pass ShardingRuel not EncryptRule to DALMergeEngine\r\n2. Modify BackendResponse in merge() of JDBCDatabaseCommunicationEngine ", "url": "https://github.com/apache/shardingsphere/issues/2784", "user": "tristaZero", "labels": ["bug", "proxy"], "created": "2019-07-30 02:46:36", "closed": "2019-09-03 12:23:45", "commits": {}, "ttf": 35.000277777777775, "commitsDetails": []}, {"title": "Distinct Throw exception java.lang.IndexOutOfBoundsException: Index: 0, Size: 0", "body": "## Bug Report\r\n\r\njava.lang.IndexOutOfBoundsException: Index: 0, Size: 0\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC2\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\n\r\nexecute SQL `select distinct(user_id) from t_order` success\r\n\r\n### Actual behavior\r\n\r\n```\r\n[ERROR] 10:06:09.837 [ShardingSphere-Command-4] o.a.s.s.f.c.CommandExecutorTask - Exception occur: \r\njava.lang.IndexOutOfBoundsException: Index: 0, Size: 0\r\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\r\n\tat java.util.ArrayList.get(ArrayList.java:433)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.getColumnIndex(DistinctQueryResult.java:208)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult$1.apply(DistinctQueryResult.java:95)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult$1.apply(DistinctQueryResult.java:91)\r\n\tat com.google.common.collect.Lists$TransformingRandomAccessList$1.transform(Lists.java:617)\r\n\tat com.google.common.collect.TransformedIterator.next(TransformedIterator.java:48)\r\n\tat com.google.common.collect.TransformedIterator.next(TransformedIterator.java:48)\r\n\tat java.util.AbstractList.hashCode(AbstractList.java:540)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.row.QueryRow.hashCode(QueryRow.java:84)\r\n\tat java.util.HashMap.hash(HashMap.java:339)\r\n\tat java.util.HashMap.put(HashMap.java:612)\r\n\tat java.util.HashSet.add(HashSet.java:220)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.fill(DistinctQueryResult.java:111)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.getResultData(DistinctQueryResult.java:99)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.<init>(DistinctQueryResult.java:67)\r\n\tat org.apache.shardingsphere.core.merge.dql.DQLMergeEngine.getRealQueryResults(DQLMergeEngine.java:85)\r\n\tat org.apache.shardingsphere.core.merge.dql.DQLMergeEngine.<init>(DQLMergeEngine.java:71)\r\n\tat org.apache.shardingsphere.core.merge.MergeEngineFactory.newInstance(MergeEngineFactory.java:58)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.merge(JDBCDatabaseCommunicationEngine.java:110)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:95)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(JDBCDatabaseCommunicationEngine.java:77)\r\n\tat org.apache.shardingsphere.shardingproxy.backend.text.query.QueryBackendHandler.execute(QueryBackendHandler.java:54)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.mysql.command.query.text.query.MySQLComQueryPacketExecutor.execute(MySQLComQueryPacketExecutor.java:72)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:86)\r\n\tat org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:66)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n### Reason analyze (If you can)\r\n\r\nThe input `distinctColumnLabels` in `DistinctQueryResult` is `(user_id)`, but columnLabel in ResultSet and `columnLabelAndIndexMap` is `user_id`, so can find this columnLabel.\r\n\r\n`distinctColumnLabels` is come from `ShardingSelectOptimizedStatement`, so there may be mistakes in Optimize.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nsharding rule configuration:\r\n```\r\nschemaName: sharding_db\r\n\r\ndataSources:\r\n  ds_0:\r\n    url: jdbc:mysql://127.0.0.1:3306/demo_ds_0?serverTimezone=UTC&useSSL=false\r\n    username: root\r\n    password:\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 50\r\n  ds_1:\r\n    url: jdbc:mysql://127.0.0.1:3306/demo_ds_1?serverTimezone=UTC&useSSL=false\r\n    username: root\r\n    password:\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 50\r\n\r\nshardingRule:\r\n  tables:\r\n    t_order:\r\n      actualDataNodes: ds_${0..1}.t_order_${0..1}\r\n      tableStrategy:\r\n        inline:\r\n          shardingColumn: order_id\r\n          algorithmExpression: t_order_${order_id % 2}\r\n      keyGenerator:\r\n        type: SNOWFLAKE\r\n        column: order_id\r\n    t_order_item:\r\n      actualDataNodes: ds_${0..1}.t_order_item_${0..1}\r\n      tableStrategy:\r\n        inline:\r\n          shardingColumn: order_id\r\n          algorithmExpression: t_order_item_${order_id % 2}\r\n      keyGenerator:\r\n        type: SNOWFLAKE\r\n        column: order_item_id\r\n  bindingTables:\r\n    - t_order,t_order_item\r\n  defaultDatabaseStrategy:\r\n    inline:\r\n      shardingColumn: user_id\r\n      algorithmExpression: ds_${user_id % 2}\r\n  defaultTableStrategy:\r\n    none:\r\n```\r\n\r\nSQL:\r\n```\r\nCREATE TABLE IF NOT EXISTS t_order (order_id BIGINT AUTO_INCREMENT, user_id INT NOT NULL, status VARCHAR(50), PRIMARY KEY (order_id));\r\n\r\nCREATE TABLE IF NOT EXISTS t_order_item (order_item_id BIGINT AUTO_INCREMENT, order_id BIGINT, user_id INT NOT NULL, status VARCHAR(50) , PRIMARY KEY (order_item_id), KEY order_id(order_id));\r\n\r\nselect distinct(user_id) from t_order\r\n```\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2777", "user": "KomachiSion", "labels": ["bug", "sharding"], "created": "2019-07-29 02:30:31", "closed": "2019-07-29 09:19:29", "commits": {"cad41c74217cee412452b4f40037f3e8a63f5693": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "d9a3fb0ec85e50940a1591db3c122ce1c1e60eb4": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "51b73ce4ab3eb33b66bc2ffa100dac0f4be36cc8": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "e1d63b0ad656bd05df0f23c23cc9d0f9092fa057": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "a94bfe9b3855b7cf29cb76ab7db99ba2f5d17fe3": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "ffd21701ef55ce67f27024e0395a6361966ee83d": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "297215e3428542c0231705347534837497814f41": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cad41c74217cee412452b4f40037f3e8a63f5693", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a0eb741196673c9c679bce6bae84b45a6c2de678"], "nameRev": "cad41c74217cee412452b4f40037f3e8a63f5693 tags/4.0.0-RC2~63", "commitMessage": "for #2777, replace PARENTHESES on SQLUtil\n", "commitDateTime": "2019-07-29 13:06:46", "authoredDateTime": "2019-07-29 13:06:27", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/core/SQLParseKernel.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/core/constant/Paren.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/util/SQLUtil.java", "insertions": 17, "deletions": 2, "lines": 19}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/java/org/apache/shardingsphere/core/parse/core/constant/ParenTest.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/java/org/apache/shardingsphere/core/parse/util/SQLUtilTest.java", "insertions": 9, "deletions": 5, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLParseKernel.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.core.SQLParseKernel", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Paren.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.Paren", "TOT": 9, "UPD": 8, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.Paren.isLeftParen(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.Paren.match(java.lang.String,java.lang.String)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.Paren.isLeftParen(char)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.Paren.match(char,char)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.util.SQLUtil.getExactlyExpression(java.lang.String)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.util.SQLUtil.removeOutsideParentheses(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ParenTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.ParenTest.assertIsLeftParenForParentheses()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.ParenTest.assertIsLeftParenForBracket()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.ParenTest.assertIsLeftParenForBraces()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.ParenTest.assertIsNotLeftParen()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.ParenTest.assertMatchForParentheses()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.ParenTest.assertMatchForBracket()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.ParenTest.assertMatchForBraces()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.core.constant.ParenTest.assertNotMatch()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.util.SQLUtilTest.testGetExactlyExpressionUsingAndReturningEmptyString()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.util.SQLUtilTest.assertGetExactlyExpression()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.util.SQLUtilTest.assertGetExactlyValueUsingNull()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d9a3fb0ec85e50940a1591db3c122ce1c1e60eb4", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["cad41c74217cee412452b4f40037f3e8a63f5693"], "nameRev": "d9a3fb0ec85e50940a1591db3c122ce1c1e60eb4 tags/4.0.0-RC2~62", "commitMessage": "for #2777, replace PARENTHESES on SQLUtil\n", "commitDateTime": "2019-07-29 13:07:33", "authoredDateTime": "2019-07-29 13:07:33", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/core/extractor/impl/dml/PredicateExtractor.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PredicateExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithParen(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "51b73ce4ab3eb33b66bc2ffa100dac0f4be36cc8", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d9a3fb0ec85e50940a1591db3c122ce1c1e60eb4"], "nameRev": "51b73ce4ab3eb33b66bc2ffa100dac0f4be36cc8 tags/4.0.0-RC2~61", "commitMessage": "for #2777, fix this bug\n", "commitDateTime": "2019-07-29 16:24:47", "authoredDateTime": "2019-07-29 16:24:47", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryMetaDataTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResultTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/MergeEngineFactoryTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 21, "deletions": 21, "lines": 42}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparatorTest.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/iterator/IteratorStreamMergedResultTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResultTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResultTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResultTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/segment/select/item/AggregationDistinctSelectItem.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/segment/select/item/SelectItems.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/segment/select/item/engine/SelectItemEngine.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/segment/select/item/engine/SelectItemsEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/sharding/segment/select/item/AggregationDistinctSelectItemTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/core/SQLParseKernel.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/core/extractor/impl/dml/PredicateExtractor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/item/AggregationDistinctSelectItemSegment.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/item/AggregationSelectItemSegment.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/item/ColumnSelectItemSegment.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/item/ExpressionSelectItemSegment.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/util/SQLUtil.java", "insertions": 18, "deletions": 12, "lines": 30}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/java/org/apache/shardingsphere/core/parse/util/SQLUtilTest.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/AggregationDistinctTokenGenerator.java", "insertions": 12, "deletions": 26, "lines": 38}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/SelectItemPrefixTokenGenerator.java", "insertions": 5, "deletions": 13, "lines": 18}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/SelectItemsTokenGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/rewriter/ShardingSQLRewriteEngineTest.java", "insertions": 29, "deletions": 34, "lines": 63}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/token/SQLTokenGenerateEngineTest.java", "insertions": 4, "deletions": 21, "lines": 25}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/complex/ComplexRoutingEngineTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/masterslave/select_distinct_with_count_sum.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select.xml", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "e1d63b0ad656bd05df0f23c23cc9d0f9092fa057", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["51b73ce4ab3eb33b66bc2ffa100dac0f4be36cc8"], "nameRev": "e1d63b0ad656bd05df0f23c23cc9d0f9092fa057 tags/4.0.0-RC2~60", "commitMessage": "for #2777, refactor constructor of SelectItems\n", "commitDateTime": "2019-07-29 16:54:54", "authoredDateTime": "2019-07-29 16:54:54", "commitGitStats": [{"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/MergeEngineFactoryTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 21, "deletions": 21, "lines": 42}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparatorTest.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/iterator/IteratorStreamMergedResultTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResultTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResultTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResultTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/segment/select/item/SelectItems.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/segment/select/item/engine/SelectItemsEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/rewriter/ShardingSQLRewriteEngineTest.java", "insertions": 25, "deletions": 25, "lines": 50}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/token/SQLTokenGenerateEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/complex/ComplexRoutingEngineTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MergeEngineFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.MergeEngineFactoryTest.assertNewInstanceWithSelectStatement()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "DQLMergeEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResult()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResultWithLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResultWithMySQLLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResultWithOracleLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResultWithSQLServerLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildOrderByStreamMergedResult()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildOrderByStreamMergedResultWithMySQLLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildOrderByStreamMergedResultWithOracleLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildOrderByStreamMergedResultWithSQLServerLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByStreamMergedResult()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByStreamMergedResultWithMySQLLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByStreamMergedResultWithOracleLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByStreamMergedResultWithSQLServerLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResult()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithMySQLLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithOracleLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithSQLServerLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithAggregationOnly()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithAggregationOnlyWithMySQLLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithAggregationOnlyWithOracleLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithAggregationOnlyWithSQLServerLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "GroupByMemoryMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByMemoryMergedResultTest.setUp()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "GroupByRowComparatorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForAscWithOrderByItems()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForDecsWithOrderByItems()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForEqualWithOrderByItems()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForAscWithGroupByItems()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForDecsWithGroupByItems()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForEqualWithGroupByItems()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "GroupByStreamMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByStreamMergedResultTest.setUp()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "IteratorStreamMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.iterator.IteratorStreamMergedResultTest.setUp()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "OrderByStreamMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByStreamMergedResultTest.setUp()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "LimitDecoratorMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.LimitDecoratorMergedResultTest.assertNextForSkipAll()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.LimitDecoratorMergedResultTest.assertNextWithoutRowCount()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.LimitDecoratorMergedResultTest.assertNextWithRowCount()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "RowNumberDecoratorMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.RowNumberDecoratorMergedResultTest.assertNextForSkipAll()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.RowNumberDecoratorMergedResultTest.assertNextWithoutOffsetWithoutRowCount()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.RowNumberDecoratorMergedResultTest.assertNextForRowCountBoundOpenedFalse()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.RowNumberDecoratorMergedResultTest.assertNextForRowCountBoundOpenedTrue()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "TopAndRowNumberDecoratorMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.assertNextForSkipAll()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.assertNextWithoutOffsetWithRowCount()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.assertNextWithOffsetWithoutRowCount()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.assertNextWithOffsetBoundOpenedFalse()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.assertNextWithOffsetBoundOpenedTrue()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SelectItems.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.sharding.segment.select.item.SelectItems", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "SelectItemsEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.sharding.segment.select.item.engine.SelectItemsEngine.createSelectItems(java.lang.String,org.apache.shardingsphere.core.parse.sql.statement.dml.SelectStatement,org.apache.shardingsphere.core.optimize.sharding.segment.select.groupby.GroupBy,org.apache.shardingsphere.core.optimize.sharding.segment.select.orderby.OrderBy)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ShardingSQLRewriteEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createSQLRouteResultWithoutChange()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForTableName()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForOrderByAndGroupByDerivedColumns()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForAggregationDerivedColumns()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForLimit()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForRowNumber()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForTopAndRowNumber()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForLimitForMemoryGroupBy()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForRowNumForMemoryGroupBy()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForTopAndRowNumberForMemoryGroupBy()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForLimitForNotRewritePagination()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForRowNumForNotRewritePagination()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForTopAndRowNumberForNotRewritePagination()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForDerivedOrderBy()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForIndexTokenForIndexNameTableName()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createRouteResultForIndexTokenForIndexNameTableNameWithoutLogicTableName()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createSQLRouteResultForTableTokenWithSchemaForSelect()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createSQLRouteResultForSelectInWithShardingEncryptor()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createSQLRouteResultForSelectInWithQueryAssistedShardingEncryptor()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createSQLRouteResultForSelectInWithAggregationDistinct()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createSQLRouteResultForSelectEqualWithShardingEncryptor()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createSQLRouteResultForSelectInWithShardingEncryptorWithParameter()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.ShardingSQLRewriteEngineTest.createSQLRouteResultForSelectEqualWithQueryAssistedShardingEncryptor()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SQLTokenGenerateEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.token.SQLTokenGenerateEngineTest.setUp()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ComplexRoutingEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.type.complex.ComplexRoutingEngineTest.assertRoutingForBindingTables()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.route.type.complex.ComplexRoutingEngineTest.assertRoutingForShardingTableJoinBroadcastTable()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "StandardRoutingEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngineTest.setEngineContext()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a94bfe9b3855b7cf29cb76ab7db99ba2f5d17fe3", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["e1d63b0ad656bd05df0f23c23cc9d0f9092fa057"], "nameRev": "a94bfe9b3855b7cf29cb76ab7db99ba2f5d17fe3 tags/4.0.0-RC2~59", "commitMessage": "for #2777, create a new file to assert distinct\n", "commitDateTime": "2019-07-29 17:02:48", "authoredDateTime": "2019-07-29 17:02:48", "commitGitStats": [{"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select.xml", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select_distinct.xml", "insertions": 32, "deletions": 0, "lines": 32}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ffd21701ef55ce67f27024e0395a6361966ee83d", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a94bfe9b3855b7cf29cb76ab7db99ba2f5d17fe3"], "nameRev": "ffd21701ef55ce67f27024e0395a6361966ee83d tags/4.0.0-RC2~58", "commitMessage": "for #2777, create a new file to assert select_comment & select_escape\n", "commitDateTime": "2019-07-29 17:18:36", "authoredDateTime": "2019-07-29 17:18:36", "commitGitStats": [{"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select.xml", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select_comment.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select_escape.xml", "insertions": 25, "deletions": 0, "lines": 25}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "297215e3428542c0231705347534837497814f41", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["884466c975cae4504de46f4c5be2abed4f297377", "bb36d4fd5557788132fd8781bcd8e4f30d99175a"], "nameRev": "297215e3428542c0231705347534837497814f41 tags/4.0.0-RC2~50", "commitMessage": "Merge pull request #2797 from tuohai666/dev\n\n#2777, change select_distinct test case from H2 to MySQL", "commitDateTime": "2019-08-01 19:04:02", "authoredDateTime": "2019-08-01 19:04:02", "commitGitStats": [{"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dataset/masterslave/select_distinct_with_count_sum.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dql/select_distinct.xml", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cad41c74217cee412452b4f40037f3e8a63f5693", "51b73ce4ab3eb33b66bc2ffa100dac0f4be36cc8", "e1d63b0ad656bd05df0f23c23cc9d0f9092fa057", "a94bfe9b3855b7cf29cb76ab7db99ba2f5d17fe3", "ffd21701ef55ce67f27024e0395a6361966ee83d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 104, "deletions": 82, "lines": 186, "gitFilesChange": 15}, "spoonStatsSummary": {"TOT": 33.0, "UPD": 11.0, "INS": 9.0, "MOV": 8.0, "DEL": 5.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core", "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize", "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite"], "changesInPackagesSPOON": ["org.apache.shardingsphere.core.parse.core.SQLParseKernel", "org.apache.shardingsphere.core.parse.core.constant.Paren.isLeftParen(java.lang.String)", "org.apache.shardingsphere.core.parse.util.SQLUtil.getExactlyExpression(java.lang.String)", "org.apache.shardingsphere.core.optimize.sharding.segment.select.item.SelectItems", "org.apache.shardingsphere.core.parse.core.constant.Paren.match(char,char)", "org.apache.shardingsphere.core.optimize.sharding.segment.select.item.engine.SelectItemsEngine.createSelectItems(java.lang.String,org.apache.shardingsphere.core.parse.sql.statement.dml.SelectStatement,org.apache.shardingsphere.core.optimize.sharding.segment.select.groupby.GroupBy,org.apache.shardingsphere.core.optimize.sharding.segment.select.orderby.OrderBy)", "org.apache.shardingsphere.core.parse.core.constant.Paren.isLeftParen(char)", "org.apache.shardingsphere.core.parse.util.SQLUtil.removeOutsideParentheses(java.lang.String)", "org.apache.shardingsphere.core.parse.core.constant.Paren", "org.apache.shardingsphere.core.parse.core.constant.Paren.match(java.lang.String,java.lang.String)"]}, {"title": "Get ShardingException when use `NSERT INTO t_plain_encrypt(col3, col4) VALUES (?, ?), (3, 4)`", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0.rc2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\n\r\n### Actual behavior\r\nthrow new ShardingException(\"Index Out Of Bounds For InsertOptimizeResultUnit.\")\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2768", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-07-26 04:54:03", "closed": "2019-07-26 08:28:49", "commits": {"ac7cb81e199ad799ad508be494623a14bcb3e212": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ac7cb81e199ad799ad508be494623a14bcb3e212", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["09e132e7a98d6d41c811e7c9dad41a1e3f8ae6e2", "950008dfcc101d3237724cd83030f3f408b5f546"], "nameRev": "ac7cb81e199ad799ad508be494623a14bcb3e212 tags/4.0.0-RC2~70", "commitMessage": "Merge pull request #2771 from tristaZero/dev\n\n modify bug #2768 ", "commitDateTime": "2019-07-26 16:28:49", "authoredDateTime": "2019-07-26 16:28:49", "commitGitStats": [{"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/encrypt/engine/dml/EncryptInsertOptimizeEngine.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/engnie/dml/ShardingInsertOptimizeEngine.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/rewriter/EncryptSQLRewriteEngineTest.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptInsertOptimizeEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.encrypt.engine.dml.EncryptInsertOptimizeEngine.optimize(org.apache.shardingsphere.core.rule.EncryptRule,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,java.lang.String,java.util.List,org.apache.shardingsphere.core.parse.sql.statement.dml.InsertStatement)", "TOT": 9, "UPD": 2, "INS": 4, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "ShardingInsertOptimizeEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.sharding.engnie.dml.ShardingInsertOptimizeEngine.optimize(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,java.lang.String,java.util.List,org.apache.shardingsphere.core.parse.sql.statement.dml.InsertStatement)", "TOT": 12, "UPD": 3, "INS": 5, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "EncryptSQLRewriteEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.rewriter.EncryptSQLRewriteEngineTest.assertInsertWithValuesWithPlaceholderWithPlainEncrypt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "`SelectItems.getColumnLabels()` should get `columnLabel` instead of `expression` from `SelectItem`", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Reason analyze (If you can)\r\nThrow an exception when call `DistinctQueryResult.getColumnIndex()` with `SelectItems.getColumnLabels()` result. Cause `SelectItems.getColumnLabels()` return `expression` like `table.column`, but there is a map with `column` in `DistinctQueryResult`.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nTry to sql like this.\r\n```sql\r\nSELECT DISTINCT book.name FROM book;\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\nYou can find this situation in https://github.com/apache/incubator-shardingsphere/issues/2715.\r\n\r\n### Steps to solve the issue.\r\n- [x] add `getColumnLabel()` in `SelectItem`\r\n- [x] overwrite `getColumnLabel()` in `SelectItem`'s subclass\r\n- [x] modify constructor in `SelectItem`'s subclass\r\n- [x] replace `getExpression()` with `getColumnLabel()` on some where should get columnLabel\r\n- [x] add UT for this\r\n", "url": "https://github.com/apache/shardingsphere/issues/2761", "user": "sunbufu", "labels": ["bug", "sharding"], "created": "2019-07-25 07:39:51", "closed": "2019-07-29 13:56:25", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Optimization of `DISTINCT` SQL.", "body": "### Optimization of `DISTINCT` SQL.\r\n\r\n- [x] Fix bug: can not execute`select distinct t_order.order_id from t_order;`\r\n- [x] Support to use `select distinct t_order.*, t_order_item.order_id from t_order, t_order_item where t_order.order_id = t_order_item.order_id`\r\n> when there is `*` in sql, we need to get exact columns from shardingMetadata.\r\n- [ ] Add integrated test cases of `distinct` SQL to cover SQLS mentioned above.\r\n- [ ] Instead of `columnLabelAndIndexMap`, use `QueryResultMetaData` for DistinctQueryResult\r\n- [ ] Instead of `TreeMap`, we should consider to use `HashMultimap` for QueryResultMetaData", "url": "https://github.com/apache/shardingsphere/issues/2715", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-07-17 02:16:53", "closed": "2019-08-12 11:42:31", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "\"select code from t group by code\" got duplicate records", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n3.0.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\nI have a logic table 't' with 2 shards, actual table are 't_0' and 't_1'.\r\nWhen I excute \"select code from t group by code\" on Sharding-Proxy-3.0.0,\r\nit should returns code without duplicate.\r\n\r\n### Actual behavior\r\nbut in fact, it returns duplicate records.\r\n\r\n### Reason analyze (If you can)\r\nMy backend db is mysql5.7.  \r\nCOLLATE is 'utf8mb4_unicode_ci'.\r\n\r\nThe group-by merger may add 'order by code' clause for using stream merge,\r\nand the result set is sorted by case insensitive.\r\nBut the merger compares value with case sensitive(because use java compareTo method).\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n\r\n\r\n#### sharding rule:\r\n\r\n```\r\n  tables:\r\n    t:\r\n      actualDataNodes: ds_${0}.t_${0..1}\r\n      tableStrategy:\r\n        inline:\r\n          shardingColumn: id\r\n          algorithmExpression: t_${id % 2}\r\n```\r\n\r\n#### prepare sql script:\r\n\r\n```\r\nCREATE TABLE `t_0` (\r\n\t`id` INT NOT NULL,\r\n\t`code` VARCHAR(40) NOT NULL,\r\n\tPRIMARY KEY (`id`)\r\n)\r\nCOLLATE='utf8mb4_unicode_ci'\r\n;\r\nCREATE TABLE `t_1` (\r\n\t`id` INT NOT NULL,\r\n\t`code` VARCHAR(40) NOT NULL,\r\n\tPRIMARY KEY (`id`)\r\n)\r\nCOLLATE='utf8mb4_unicode_ci'\r\n;\r\ninsert into t values (11, '11035801128253');\r\ninsert into t values (13, '110358011282f5');\r\ninsert into t values (15, '110358011282G1');\r\ninsert into t values (17, '110358011282H5');\r\ninsert into t values (19, '110358011282T4');\r\ninsert into t values (21, '110358011282U5');\r\ninsert into t values (23, '110358011282z1');\r\ninsert into t values (22, '110358011282D4');\r\ninsert into t values (24, '110358011282E9');\r\ninsert into t values (26, '110358011282h8');\r\ninsert into t values (28, '110358011282I0');\r\ninsert into t values (30, '110358011282l1');\r\ninsert into t values (32, '110358011282O7');\r\ninsert into t values (34, '110358011282P0');\r\ninsert into t values (36, '110358011282T4');\r\ninsert into t values (38, '110358011282w6');\r\n\r\n\r\nmysql> select 't_0' as tab, code from t_0;\r\n+------+----------------+\r\n| tab  | code           |\r\n+------+----------------+\r\n| t_0  | 110358011282D4 |\r\n| t_0  | 110358011282E9 |\r\n| t_0  | 110358011282h8 |\r\n| t_0  | 110358011282I0 |\r\n| t_0  | 110358011282l1 |\r\n| t_0  | 110358011282O7 |\r\n| t_0  | 110358011282P0 |\r\n| t_0  | 110358011282T4 |\r\n| t_0  | 110358011282w6 |\r\n+------+----------------+\r\n9 rows in set (0.00 sec)\r\n\r\nmysql> select 't_1' as tab, code from t_1;\r\n+------+----------------+\r\n| tab  | code           |\r\n+------+----------------+\r\n| t_1  | 11035801128253 |\r\n| t_1  | 110358011282f5 |\r\n| t_1  | 110358011282G1 |\r\n| t_1  | 110358011282H5 |\r\n| t_1  | 110358011282T4 |\r\n| t_1  | 110358011282U5 |\r\n| t_1  | 110358011282z1 |\r\n+------+----------------+\r\n7 rows in set (0.00 sec)\r\n```\r\n\r\n#### execute result  ( duplicate code is 110358011282T4 .)\r\n\r\n```\r\nmysql> select code from t group by code;\r\n+----------------+\r\n| code           |\r\n+----------------+\r\n| 11035801128253 |\r\n| 110358011282D4 |\r\n| 110358011282E9 |\r\n| 110358011282f5 |\r\n| 110358011282G1 |\r\n| 110358011282H5 |\r\n| 110358011282T4 |\r\n| 110358011282U5 |\r\n| 110358011282h8 |\r\n| 110358011282I0 |\r\n| 110358011282l1 |\r\n| 110358011282O7 |\r\n| 110358011282P0 |\r\n| 110358011282T4 |\r\n| 110358011282w6 |\r\n| 110358011282z1 |\r\n+----------------+\r\n16 rows in set (0.01 sec)\r\n```\r\n\r\nI tried following SQL then I got right result.\r\n\r\n```\r\nmysql> select max(code) from t group by upper(code);\r\n+----------------+\r\n| max(code)      |\r\n+----------------+\r\n| 11035801128253 |\r\n| 110358011282D4 |\r\n| 110358011282E9 |\r\n| 110358011282f5 |\r\n| 110358011282G1 |\r\n| 110358011282H5 |\r\n| 110358011282h8 |\r\n| 110358011282I0 |\r\n| 110358011282l1 |\r\n| 110358011282O7 |\r\n| 110358011282P0 |\r\n| 110358011282T4 |\r\n| 110358011282U5 |\r\n| 110358011282w6 |\r\n| 110358011282z1 |\r\n+----------------+\r\n15 rows in set (0.01 sec)\r\n\r\n```\r\n\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2687", "user": "Sy9876", "labels": ["bug", "sharding"], "created": "2019-07-10 08:02:02", "closed": "2019-07-15 07:16:36", "commits": {"34a1551f78dff6f0602bd1a8bda54d646c92ace5": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "34a1551f78dff6f0602bd1a8bda54d646c92ace5", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["e93dc9cc810e83990054840f790a3529b703f272", "3ce7f45572e8584cf18869bb9b458789446371bf"], "nameRev": "34a1551f78dff6f0602bd1a8bda54d646c92ace5 tags/4.0.0-RC2~202", "commitMessage": "Merge pull request #2708 from KomachiSion/dev\n\nFixes #2687 .", "commitDateTime": "2019-07-15 15:16:35", "authoredDateTime": "2019-07-15 15:16:35", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/AggregationDistinctQueryResult.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResult.java", "insertions": 19, "deletions": 1, "lines": 20}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResult.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaData.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResult.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResultTest.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaDataTest.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResult.java", "insertions": 14, "deletions": 3, "lines": 17}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparator.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/orderby/CompareUtil.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByValue.java", "insertions": 21, "deletions": 3, "lines": 24}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparatorTest.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/CompareUtilTest.java", "insertions": 23, "deletions": 11, "lines": 34}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 56, "deletions": 4, "lines": 60}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByValueTest.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/fixture/TestQueryResult.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AggregationDistinctQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.AggregationDistinctQueryResult.divide().2.apply(org.apache.shardingsphere.core.execute.sql.execute.row.QueryRow)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.AggregationDistinctQueryResult", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DistinctQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.getColumnCaseSensitive(org.apache.shardingsphere.core.execute.sql.execute.result.QueryResult)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.isCaseSensitive(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResult.divide().2.apply(org.apache.shardingsphere.core.execute.sql.execute.row.QueryRow)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MemoryQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.isCaseSensitive(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.isCaseSensitive(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryResultMetaData.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.isCaseSensitive(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StreamQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.isCaseSensitive(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DistinctQueryResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResultTest.assertIsCaseSensitive()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResultTest.assertGetColumnCaseSensitive()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.DistinctQueryResultTest.getQueryResults()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "QueryResultMetaDataTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaDataTest.assertIsCaseSensitive()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaDataTest.getResultMetaData()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GroupByMemoryMergedResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByMemoryMergedResult.getValueCaseSensitive(org.apache.shardingsphere.core.execute.sql.execute.result.QueryResult)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByMemoryMergedResult.init(java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByMemoryMergedResult.getMemoryResultSetRows(java.util.Map,java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GroupByRowComparator.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparator.compare(org.apache.shardingsphere.core.merge.dql.common.MemoryQueryResultRow,org.apache.shardingsphere.core.merge.dql.common.MemoryQueryResultRow,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CompareUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtil.compareToCaseInsensitiveString(java.lang.String,java.lang.String,org.apache.shardingsphere.core.constant.OrderDirection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtil.compareTo(java.lang.Comparable,java.lang.Comparable,org.apache.shardingsphere.core.constant.OrderDirection,org.apache.shardingsphere.core.constant.OrderDirection,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OrderByValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByValue", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByValue.getOrderValuesCaseSensitive()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByValue.compareTo(org.apache.shardingsphere.core.merge.dql.orderby.OrderByValue)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DQLMergeEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.setUp()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.mockResultSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GroupByRowComparatorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForAscWithOrderByItems()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForDecsWithOrderByItems()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForEqualWithOrderByItems()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForAscWithGroupByItems()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForDecsWithGroupByItems()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByRowComparatorTest.assertCompareToForEqualWithGroupByItems()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CompareUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assetCompareToStringWithCaseSensitive()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assetCompareToStringWithCaseInsensitive()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenBothNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenFirstValueIsNullForOrderByAscAndNullOrderByAsc()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenFirstValueIsNullForOrderByAscAndNullOrderByDesc()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenFirstValueIsNullForOrderByDescAndNullOrderByAsc()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenFirstValueIsNullForOrderByDescAndNullOrderByDesc()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenSecondValueIsNullForOrderByAscAndNullOrderByAsc()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenSecondValueIsNullForOrderByAscAndNullOrderByDesc()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenSecondValueIsNullForOrderByDescAndNullOrderByAsc()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenSecondValueIsNullForOrderByDescAndNullOrderByDesc()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenAsc()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.CompareUtilTest.assertCompareToWhenDesc()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "OrderByStreamMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByStreamMergedResultTest.setUp()", "TOT": 22, "UPD": 5, "INS": 1, "MOV": 15, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByStreamMergedResultTest.mockResultSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByStreamMergedResultTest.assertNextForCaseSensitive()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByStreamMergedResultTest.assertNextForCaseInsensitive()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OrderByValueTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByValueTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByValueTest.setUp()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.fixture.TestQueryResult.isCaseSensitive(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Get NullPointerException when execute SQL on tables without sharding rule", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere-example/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC and Sharding-Proxy\r\n### Expected behavior\r\nGet Sharding Execption when execute SQL on tables without sharding rule\r\n### Actual behavior\r\nGet NullPointerException when execute SQL on tables without sharding rule\r\n### Reason analyze (If you can)\r\nParse engine will parse tableName, Route engine pass the SQLStatement to UnicastRoutingEngine, which return RoutingResult with null datasource name.\r\nRef:\r\n```\r\nRoutingEngineFactory.java\r\nif (shardingRule.isAllBroadcastTables(tableNames)) {\r\n            return sqlStatement instanceof SelectStatement ? new UnicastRoutingEngine(shardingRule, tableNames) : new DatabaseBroadcastRoutingEngine(shardingRule);\r\n        }\r\n\r\nShardingDataSourceNames.java\r\npublic String getDefaultDataSourceName() {\r\n        return 1 == dataSourceNames.size() ? dataSourceNames.iterator().next() : shardingRuleConfig.getDefaultDataSourceName();\r\n    }\r\n```\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2629", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-07-01 02:46:39", "closed": "2019-07-09 03:13:06", "commits": {"22635077af811509c3c443b507eb048a25b9954b": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "22635077af811509c3c443b507eb048a25b9954b", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["b5a1eeb63f5f5714fc2bfbc27a70b3264fc759d7", "3b9f933ca11b84e67e86cb8bc362e78c45501b12"], "nameRev": "22635077af811509c3c443b507eb048a25b9954b tags/4.0.0-RC2~254", "commitMessage": "Merge pull request #2678 from sunbufu/fix#2629_1\n\nFix#2629", "commitDateTime": "2019-07-08 22:13:05", "authoredDateTime": "2019-07-08 22:13:05", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/ShardingDataSourceNames.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/ShardingRule.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/ShardingDataSourceNamesTest.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/rule/ShardingRuleTest.java", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingDataSourceNames.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingDataSourceNames", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingRule.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingRule", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ShardingDataSourceNamesTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingDataSourceNamesTest.assertConstructShardingDataSourceNamesWithNullShardingRuleConfiguration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingRuleTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingRuleTest.assertConstructShardingRuleWithNullShardingRuleConfiguration()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rule.ShardingRuleTest.assertConstructShardingRuleWithNullDataSourceNames()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "recieve ClassCastException while testing ComplexKeysShardingAlgorithm", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere-example/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n- sharding-jdbc-core:4.0.0-RC1\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n- Sharding-JDBC\r\n\r\n### Expected behavior\r\n- return the right type of RouteValue\r\n\r\n### Actual behavior\r\n- java.lang.ClassCastException\r\n\r\n### Reason analyze (If you can)\r\n\r\n- just BetweenRouteValue cast to ListRouteValue error.\r\n\r\n- i think it`s no need to cast to ListRouteValue, just let us to deal with it\r\n\r\n- at org.apache.shardingsphere.core.strategy.route.complex.ComplexShardingStrategy\r\n\r\n```java\r\nline 61: \r\ncolumnShardingValues.put(each.getColumnName(), ((ListRouteValue) each).getValues());\r\n\r\n```\r\n\r\n\r\n\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n- i am trying to test the ComplexKeysShardingAlgorithm, but before it come into my code, it occur a java.lang.ClassCastException, \r\n\r\n- the table configuration\r\n\r\n  ```java\r\n  public static TableRuleConfiguration defaultCreateTimeTableRuleConfiguration(String datasourceName, String tableName) {\r\n          TableRuleConfiguration tableRule = new TableRuleConfiguration(tableName, String.format(\"%s.%s_$->{19..19}0$->{1..6}\", datasourceName, tableName));\r\n          tableRule.setTableShardingStrategyConfig(\r\n                  new ComplexShardingStrategyConfiguration(\"id,create_time\", new BaseComplexKeysShardingAlgorithm()));\r\n          return tableRule;\r\n  }\r\n  ```\r\n\r\n- my algorithm -- yes, it do nothing but log\r\n\r\n  ```java\r\n  @Slf4j(topic = \"sharding\")\r\n  public class BaseComplexKeysShardingAlgorithm implements ComplexKeysShardingAlgorithm {\r\n  \r\n      @Override\r\n      public Collection<String> doSharding(Collection availableTargetNames, ComplexKeysShardingValue shardingValue) {\r\n          log.info(\"availableTargetNames: {}\\nshardingValue: {}\", availableTargetNames, shardingValue);\r\n          return availableTargetNames;\r\n      }\r\n  \r\n  }\r\n  ```\r\n\r\n- sql \r\n\r\n  ```sql\r\n  select * from t_order order0_ where order0_.create_time between ? and ?\r\n  ```\r\n\r\n  ```sql\r\n  create table sharding.t_order\r\n  (\r\n  \tcreate_time timestamp default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP,\r\n  \tid varchar(255) not null\r\n  \t\tprimary key,\r\n  \tupdate_time datetime null,\r\n  \tname varchar(255) null,\r\n  \ttest_id int null\r\n  )\r\n  ```\r\n\r\n- JDK\r\n\r\n  ```\r\n  java 11.0.3 2019-04-16 LTS\r\n  ```\r\n\r\n- framework\r\n\r\n  ```xml\r\n  spring-boot-starter-data-jpa:2.1.4RELEASE\r\n  <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>\r\n  ```\r\n\r\n- the full trace is here\r\n\r\n```java\r\nCaused by: java.lang.ClassCastException: class org.apache.shardingsphere.core.strategy.route.value.BetweenRouteValue cannot be cast to class org.apache.shardingsphere.core.strategy.route.value.ListRouteValue (org.apache.shardingsphere.core.strategy.route.value.BetweenRouteValue and org.apache.shardingsphere.core.strategy.route.value.ListRouteValue are in unnamed module of loader 'app')\r\n\tat org.apache.shardingsphere.core.strategy.route.complex.ComplexShardingStrategy.doSharding(ComplexShardingStrategy.java:61) ~[sharding-core-common-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeTables(StandardRoutingEngine.java:199) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:181) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditionsWithCondition(StandardRoutingEngine.java:108) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditions(StandardRoutingEngine.java:102) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.getDataNodes(StandardRoutingEngine.java:87) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:69) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:106) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66) ~[sharding-core-route-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60) ~[sharding-core-entry-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:64) ~[sharding-core-entry-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224) ~[sharding-jdbc-core-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:109) ~[sharding-jdbc-core-4.0.0-RC1.jar:4.0.0-RC1]\r\n\tat org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.loader.Loader.getResultSet(Loader.java:2167) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1930) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1892) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.loader.Loader.doQuery(Loader.java:937) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2689) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2672) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2506) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.loader.Loader.list(Loader.java:2501) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:504) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.internal.SessionImpl.list(SessionImpl.java:1507) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1537) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1505) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat org.hibernate.query.Query.getResultList(Query.java:132) ~[hibernate-core-5.3.9.Final.jar:5.3.9.Final]\r\n\tat com.querydsl.jpa.impl.AbstractJPAQuery.getResultList(AbstractJPAQuery.java:160) ~[querydsl-jpa-4.2.1.jar:na]\r\n\tat com.querydsl.jpa.impl.AbstractJPAQuery.fetch(AbstractJPAQuery.java:202) ~[querydsl-jpa-4.2.1.jar:na]\r\n\tat com.f5futurestore.cloud.demo.service.OrderServiceImpl.test(OrderServiceImpl.java:103) ~[classes/:na]\r\n\tat com.f5futurestore.cloud.demo.service.OrderServiceImpl$$FastClassBySpringCGLIB$$d3d4b7a6.invoke(<generated>) ~[classes/:na]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749) ~[spring-aop-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) ~[spring-tx-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat com.f5futurestore.cloud.demo.service.OrderServiceImpl$$EnhancerBySpringCGLIB$$4987f585.test(<generated>) ~[classes/:na]\r\n\tat com.f5futurestore.cloud.demo.controller.DemoController.test(DemoController.java:39) ~[classes/:na]\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:na]\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na]\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:363) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:307) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136) ~[spring-beans-5.1.6.RELEASE.jar:5.1.6.RELEASE]\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\ni will post it to github later", "url": "https://github.com/apache/shardingsphere/issues/2613", "user": "fenghuanfun", "labels": ["bug", "sharding"], "created": "2019-06-26 12:50:12", "closed": "2019-07-16 09:29:18", "commits": {"c3435461a0f3a4cbfd3632db63368ad1cfae31a4": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "c3435461a0f3a4cbfd3632db63368ad1cfae31a4", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["b2aecd765c3e8d9b057d78eb7623a5af66bc31bb", "a25b6fbfb1419cd927bb71eacf6866f0abbdb644"], "nameRev": "c3435461a0f3a4cbfd3632db63368ad1cfae31a4 tags/4.0.0-RC2~187", "commitMessage": "Merge pull request #2710 from KomachiSion/issue#2613\n\nFix #2613, Add range value in ComplexShardingStrategy", "commitDateTime": "2019-07-16 17:29:17", "authoredDateTime": "2019-07-16 17:29:17", "commitGitStats": [{"filePath": "sharding-core/sharding-core-api/src/main/java/org/apache/shardingsphere/api/sharding/complex/ComplexKeysShardingValue.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/route/complex/ComplexShardingStrategy.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/route/ShardingStrategyTest.java", "insertions": 8, "deletions": 3, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ComplexKeysShardingValue.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.api.sharding.complex.ComplexKeysShardingValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ComplexShardingStrategy.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.strategy.route.complex.ComplexShardingStrategy.doSharding(java.util.Collection,java.util.Collection)", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ShardingStrategyTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.strategy.route.ShardingStrategyTest.assertDoShardingForMultipleKeys()", "TOT": 10, "UPD": 3, "INS": 2, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "The query entity throws an exception when a boolean property exists in the entity", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere-example/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2-SNAPSHOT\uff0c4.0.0-RC1 version work well\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nWork well\r\n### Actual behavior\r\nthrow java.lang.ClassCastException: [B cannot be cast to java.lang.Boolean\r\n### Reason analyze (If you can)\r\nMySQL column type is BIT, MergeResultSet value is an byte array, can not convert to boolean.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\npom.xml\r\n```xml\r\n        <properties>\r\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n\t\t<maven.compiler.source>1.8</maven.compiler.source>\r\n\t\t<maven.compiler.target>1.8</maven.compiler.target>\r\n\t\t<java.version>1.8</java.version>\r\n\t\t<!-- <sharding-sphere.version>4.0.0-RC1</sharding-sphere.version> -->\r\n\t\t<sharding-sphere.version>4.0.0-RC2-SNAPSHOT</sharding-sphere.version>\r\n\t</properties>\r\n\t\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>2.0.1.RELEASE</version>\r\n\t\t<relativePath />\r\n\t</parent>\r\n\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-java</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.shardingsphere</groupId>\r\n\t\t\t<artifactId>sharding-jdbc-spring-boot-starter</artifactId>\r\n\t\t\t<version>${sharding-sphere.version}</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n```\r\napplication.yml\r\n```yml\r\nspring:\r\n  jpa:\r\n    show-sql: true\r\n    generate-ddl: true\r\n  shardingsphere:\r\n    datasource:\r\n      names: d0,d1\r\n      d0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://dbserver:3306/d0?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false\r\n        username: root\r\n        password:\r\n      d1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://dbserver:3306/d1?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false\r\n        username: root\r\n        password:\r\n    props:\r\n      sql:\r\n        show: true\r\n    sharding:\r\n      default-data-source-name: d0\r\n      tables:\r\n        demo:\r\n          actual-data-nodes: d$->{0..1}.demo\r\n          database-strategy:\r\n            inline:\r\n              sharding-column: id\r\n              algorithm-expression: d$->{id % 2}\r\n          key-generator:\r\n            column: id\r\n            type: SNOWFLAKE\r\n```\r\nDemo.java\r\n```java\r\n@Entity\r\n@Table(name=\"demo\")\r\n@Setter\r\n@Getter\r\n@ToString\r\npublic class Demo {\r\n\r\n\t@Id\r\n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\r\n\tprivate Long id;\r\n\t\r\n\t@Column\r\n\tprivate boolean test;\r\n\t\r\n}\r\n```\r\nDemoRepository.java\r\n```java\r\n@Repository\r\npublic interface DemoRepository extends JpaRepository<Demo, Long> {\r\n\r\n}\r\n```\r\nDemoApplication.java\r\n```java\r\n@SpringBootApplication\r\npublic class DemoApplication {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\ttry (ConfigurableApplicationContext applicationContext = SpringApplication.run(DemoApplication.class, args)) {\r\n\t\t\tDemoRepository demoRepository = applicationContext.getBean(DemoRepository.class);\r\n\t\t\tDemo demo = new Demo();\r\n\t\t\tdemo.setTest(true);\r\n\t\t\tdemoRepository.saveAndFlush(demo);\r\n\t\t\tdemoRepository.findById(demo.getId());\r\n\t\t\tdemoRepository.deleteAll();\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n```\r\nLog\r\n```\r\nException in thread \"main\" org.springframework.dao.InvalidDataAccessApiUsageException: [B cannot be cast to java.lang.Boolean; nested exception is java.lang.IllegalArgumentException: [B cannot be cast to java.lang.Boolean\r\n\tat org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:367)\r\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:227)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:527)\r\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\r\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy83.findById(Unknown Source)\r\n\tat net.saisimon.demo.DemoApplication.main(DemoApplication.java:19)\r\nCaused by: java.lang.IllegalArgumentException: [B cannot be cast to java.lang.Boolean\r\n\tat org.hibernate.internal.SessionImpl.find(SessionImpl.java:3427)\r\n\tat org.hibernate.internal.SessionImpl.find(SessionImpl.java:3375)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:304)\r\n\tat com.sun.proxy.$Proxy81.find(Unknown Source)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:235)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:629)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:593)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\t... 10 more\r\nCaused by: java.lang.ClassCastException: [B cannot be cast to java.lang.Boolean\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ShardingResultSet.getBoolean(ShardingResultSet.java:71)\r\n\tat org.hibernate.type.descriptor.sql.BooleanTypeDescriptor$2.doExtract(BooleanTypeDescriptor.java:59)\r\n\tat org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:261)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:247)\r\n\tat org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:333)\r\n\tat org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:2854)\r\n\tat org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.loadFromResultSet(EntityReferenceInitializerImpl.java:305)\r\n\tat org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl.hydrateEntityState(EntityReferenceInitializerImpl.java:233)\r\n\tat org.hibernate.loader.plan.exec.process.internal.AbstractRowReader.readRow(AbstractRowReader.java:103)\r\n\tat org.hibernate.loader.plan.exec.internal.EntityLoadQueryDetails$EntityLoaderRowReader.readRow(EntityLoadQueryDetails.java:241)\r\n\tat org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl.extractResults(ResultSetProcessorImpl.java:122)\r\n\tat org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:122)\r\n\tat org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeLoad(AbstractLoadPlanBasedLoader.java:86)\r\n\tat org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader.load(AbstractLoadPlanBasedEntityLoader.java:167)\r\n\tat org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:4107)\r\n\tat org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:508)\r\n\tat org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:478)\r\n\tat org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:219)\r\n\tat org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:278)\r\n\tat org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:121)\r\n\tat org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:89)\r\n\tat org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1239)\r\n\tat org.hibernate.internal.SessionImpl.access$1900(SessionImpl.java:203)\r\n\tat org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.doLoad(SessionImpl.java:2803)\r\n\tat org.hibernate.internal.SessionImpl$IdentifierLoadAccessImpl.load(SessionImpl.java:2777)\r\n\tat org.hibernate.internal.SessionImpl.find(SessionImpl.java:3406)\r\n\t... 35 more\r\n```\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2604", "user": "Saisimon", "labels": ["bug", "sharding", "volunteer wanted"], "created": "2019-06-24 09:15:51", "closed": "2019-07-18 08:19:32", "commits": {"2c9e53ea90fc283d8817c81ce9a52870548f086f": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "b8a02ace26f251d1e9bbd6669be19eaca2010b40": {"commitGHEventType": "referenced", "commitUser": "tuohai666"}, "1897b3cbbf138f0b49ff5d5f53f376ce4a64a088": {"commitGHEventType": "referenced", "commitUser": "tuohai666"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "2c9e53ea90fc283d8817c81ce9a52870548f086f", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["29816304e89841dfd45fd3c8f793b68bec549a29", "d75b7cb6f23a728ad30d6b6253fc990ba47d7c0a"], "nameRev": "2c9e53ea90fc283d8817c81ce9a52870548f086f tags/4.0.0-RC2~353", "commitMessage": "Merge pull request #2607 from Saisimon/dev\n\nfix #2604", "commitDateTime": "2019-06-25 21:52:16", "authoredDateTime": "2019-06-25 21:52:16", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ResultSetUtil.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ResultSetUtilTest.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResultSetUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ResultSetUtil.convertByteArrayValue(java.lang.Object,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ResultSetUtil.convertValue(java.lang.Object,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ResultSetUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ResultSetUtilTest.assertConvertByteArrayValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b8a02ace26f251d1e9bbd6669be19eaca2010b40", "commitGHEventType": "referenced", "commitUser": "tuohai666", "commitParents": ["f187083340a77a11b6c2035f807b7c8ce5768730", "ad20aa2f144a6a7e37a543e44ea3eacdeaf4a8ac"], "nameRev": "b8a02ace26f251d1e9bbd6669be19eaca2010b40 tags/4.0.0-RC2~162", "commitMessage": "Merge pull request #2703 from Saisimon/dev\n\nfix #2604 completely", "commitDateTime": "2019-07-18 16:19:32", "authoredDateTime": "2019-07-18 16:19:32", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ResultSetUtil.java", "insertions": 28, "deletions": 4, "lines": 32}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ResultSetUtilTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacket.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryResultUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil.getValueByColumnType(java.sql.ResultSet,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "QueryResultUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBit()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ResultSetUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ResultSetUtil.convertByteArrayValue(java.lang.Object,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ResultSetUtil.convertValue(java.lang.Object,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ResultSetUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ResultSetUtilTest.assertConvertByteArrayValueSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLTextResultSetRowPacket.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.text.MySQLTextResultSetRowPacket.write(org.apache.shardingsphere.shardingproxy.transport.mysql.payload.MySQLPacketPayload)", "TOT": 10, "UPD": 0, "INS": 3, "MOV": 7, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1897b3cbbf138f0b49ff5d5f53f376ce4a64a088", "commitGHEventType": "referenced", "commitUser": "tuohai666", "commitParents": ["ba74226baa7dee46244ceac1efc8e355506b65df", "1eb80e79355f33ee50ab33173001566eea955f4c"], "nameRev": "1897b3cbbf138f0b49ff5d5f53f376ce4a64a088 tags/4.0.0-RC2~152", "commitMessage": "Merge pull request #2723 from tuohai666/dev\n\n#2604, for checkstyle", "commitDateTime": "2019-07-19 12:37:14", "authoredDateTime": "2019-07-19 12:37:14", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ResultSetUtil.java", "insertions": 13, "deletions": 15, "lines": 28}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/ResultSetUtilTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacket.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResultSetUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ResultSetUtil.convertByteArrayValue(java.lang.Object,java.lang.Class)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ResultSetUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ResultSetUtilTest.assertConvertByteArrayValueSuccess()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLTextResultSetRowPacket.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 3, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "use sharding-jdbc-spring-boot-starter throw java.util.NoSuchElementException: No value bound", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere-example/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nDo not throw an exception\r\n### Actual behavior\r\nthrow an exception\r\n### Reason analyze (If you can)\r\nspring.shardingsphere.encrypt.encryptors is not configured\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\npom.xml\r\n```xml\r\n        <properties>\r\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n\t\t<maven.compiler.source>1.8</maven.compiler.source>\r\n\t\t<maven.compiler.target>1.8</maven.compiler.target>\r\n\t\t<java.version>1.8</java.version>\r\n\t\t<!-- <sharding-sphere.version>4.0.0-RC1</sharding-sphere.version> -->\r\n\t\t<sharding-sphere.version>4.0.0-RC2-SNAPSHOT</sharding-sphere.version>\r\n\t</properties>\r\n\t\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>2.0.1.RELEASE</version>\r\n\t\t<relativePath />\r\n\t</parent>\r\n\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-java</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.shardingsphere</groupId>\r\n\t\t\t<artifactId>sharding-jdbc-spring-boot-starter</artifactId>\r\n\t\t\t<version>${sharding-sphere.version}</version>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n```\r\napplication.yml\r\n```yml\r\nspring:\r\n  shardingsphere:\r\n    datasource:\r\n      names: d0,d1\r\n      d0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://dbserver:3306/d0?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false\r\n        username: root\r\n        password:\r\n      d1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://dbserver:3306/d1?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false\r\n        username: root\r\n        password:\r\n    props:\r\n      sql:\r\n        show: true\r\n```\r\nDemoApplication.java\r\n```java\r\n@SpringBootApplication\r\npublic class DemoApplication {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tSpringApplication.run(DemoApplication.class, args);\r\n\t}\r\n\t\r\n}\r\n```\r\nLog\r\n```\r\njava.lang.reflect.InvocationTargetException: null\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_191]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_191]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_191]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_191]\r\n\tat org.apache.shardingsphere.shardingjdbc.spring.boot.util.PropertyUtil.v2(PropertyUtil.java:98) ~[sharding-jdbc-spring-boot-starter-4.0.0-RC2-SNAPSHOT.jar:4.0.0-RC2-SNAPSHOT]\r\n\tat org.apache.shardingsphere.shardingjdbc.spring.boot.util.PropertyUtil.handle(PropertyUtil.java:61) ~[sharding-jdbc-spring-boot-starter-4.0.0-RC2-SNAPSHOT.jar:4.0.0-RC2-SNAPSHOT]\r\n\tat org.apache.shardingsphere.shardingjdbc.spring.boot.encrypt.EncryptRuleCondition.getMatchOutcome(EncryptRuleCondition.java:40) ~[sharding-jdbc-spring-boot-starter-4.0.0-RC2-SNAPSHOT.jar:4.0.0-RC2-SNAPSHOT]\r\n\tat org.springframework.boot.autoconfigure.condition.SpringBootCondition.matches(SpringBootCondition.java:47) ~[spring-boot-autoconfigure-2.0.1.RELEASE.jar:2.0.1.RELEASE]\r\n\tat org.springframework.context.annotation.ConditionEvaluator.shouldSkip(ConditionEvaluator.java:108) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:179) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:141) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:117) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:328) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:233) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE]\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:273) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE]\r\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:93) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE]\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532) ~[spring-context-5.0.5.RELEASE.jar:5.0.5.RELEASE]\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759) [spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395) [spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:327) [spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1255) [spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE]\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1243) [spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE]\r\n\tat net.saisimon.demo.DemoApplication.main(DemoApplication.java:10) [classes/:na]\r\nCaused by: java.util.NoSuchElementException: No value bound\r\n\tat org.springframework.boot.context.properties.bind.BindResult.get(BindResult.java:56) ~[spring-boot-2.0.1.RELEASE.jar:2.0.1.RELEASE]\r\n\t... 25 common frames omitted\r\n```\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2596", "user": "Saisimon", "labels": ["bug", "jdbc"], "created": "2019-06-23 05:09:07", "closed": "2019-06-24 06:10:39", "commits": {"29816304e89841dfd45fd3c8f793b68bec549a29": {"commitGHEventType": "referenced", "commitUser": "KomachiSion"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "29816304e89841dfd45fd3c8f793b68bec549a29", "commitGHEventType": "referenced", "commitUser": "KomachiSion", "commitParents": ["a4ec12b259bc3d0349e3e2369f4ef7927254787c", "f9fa5dbcc7f941206e52446b9d69bb7b21f89f47"], "nameRev": "29816304e89841dfd45fd3c8f793b68bec549a29 tags/4.0.0-RC2~354", "commitMessage": "Merge pull request #2598 from KomachiSion/dev\n\nFix #2596", "commitDateTime": "2019-06-24 14:10:38", "authoredDateTime": "2019-06-24 14:10:38", "commitGitStats": [{"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/util/PropertyUtil.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/encrypt/EncryptRuleCondition.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/util/PropertyUtil.java", "insertions": 22, "deletions": 3, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PropertyUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.spring.boot.util.PropertyUtil.containPropertyPrefix(org.springframework.core.env.Environment,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.spring.boot.util.PropertyUtil.v1(org.springframework.core.env.Environment,java.lang.String,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.spring.boot.util.PropertyUtil.handle(org.springframework.core.env.Environment,java.lang.String,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.spring.boot.util.PropertyUtil.v1(org.springframework.core.env.Environment,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EncryptRuleCondition.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.spring.boot.encrypt.EncryptRuleCondition.getMatchOutcome(org.springframework.context.annotation.ConditionContext,org.springframework.core.type.AnnotatedTypeMetadata)", "TOT": 8, "UPD": 3, "INS": 1, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sharding-Proxing change database error", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere-example/issues).\r\n- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nNo Exception\r\n### Actual behavior\r\nuse cloud; #cloud is a database name\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nHere is my configuration:\r\n```\r\n\r\nschemaName: cloud\r\n\r\ndataSources:\r\n  cloud_0:\r\n    url: jdbc:mysql://192.168.8.252:8806/cloud?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n    username: root\r\n    password: 123\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 500\r\n  cloud_1:\r\n    url: jdbc:mysql://192.168.8.252:8807/cloud?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n    username: root\r\n    password: 123\r\n    connectionTimeoutMilliseconds: 30000\r\n    idleTimeoutMilliseconds: 60000\r\n    maxLifetimeMilliseconds: 1800000\r\n    maxPoolSize: 500\r\n\r\nshardingRule:\r\n  defaultDataSourceName: cloud_0\r\n  defaultDatabaseStrategy:\r\n    inline:\r\n      shardingColumn: id\r\n      algorithmExpression: cloud_${id % 2}\r\n  defaultTableStrategy:\r\n    none:\r\n  defaultKeyGenerator:\r\n    type: SNOWFLAKE\r\n    column: id\r\n```\r\nAnd here is the log:\r\n```\r\n[INFO ] 16:07:04.032 [ShardingSphere-Command-2] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 16:07:04.032 [ShardingSphere-Command-2] ShardingSphere-SQL - Logic SQL: SET PROFILING = 1\r\n[INFO ] 16:07:04.032 [ShardingSphere-Command-2] ShardingSphere-SQL - SQLStatement: DALStatement(super=AbstractSQLStatement(type=DAL, sqlSegments=[], tables=Tables(tables=[]), shardingConditions=Conditions(orConditions=[]), encryptConditions=Conditions(orConditions=[]), parametersIndex=0, logicSQL=SET PROFILING = 1))\r\n[INFO ] 16:07:04.032 [ShardingSphere-Command-2] ShardingSphere-SQL - Actual SQL: cloud_0 ::: SET PROFILING = 1\r\n[INFO ] 16:07:04.034 [ShardingSphere-Command-1] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 16:07:04.034 [ShardingSphere-Command-1] ShardingSphere-SQL - Logic SQL: SHOW STATUS\r\n[INFO ] 16:07:04.034 [ShardingSphere-Command-1] ShardingSphere-SQL - SQLStatement: DALStatement(super=AbstractSQLStatement(type=DAL, sqlSegments=[], tables=Tables(tables=[]), shardingConditions=Conditions(orConditions=[]), encryptConditions=Conditions(orConditions=[]), parametersIndex=0, logicSQL=SHOW STATUS))\r\n[INFO ] 16:07:04.034 [ShardingSphere-Command-1] ShardingSphere-SQL - Actual SQL: cloud_0 ::: SHOW STATUS\r\n[INFO ] 16:07:04.052 [ShardingSphere-Command-4] ShardingSphere-SQL - Rule Type: sharding\r\n[INFO ] 16:07:04.052 [ShardingSphere-Command-4] ShardingSphere-SQL - Logic SQL: SHOW STATUS\r\n[INFO ] 16:07:04.052 [ShardingSphere-Command-4] ShardingSphere-SQL - SQLStatement: DALStatement(super=AbstractSQLStatement(type=DAL, sqlSegments=[], tables=Tables(tables=[]), shardingConditions=Conditions(orConditions=[]), encryptConditions=Conditions(orConditions=[]), parametersIndex=0, logicSQL=SHOW STATUS))\r\n[INFO ] 16:07:04.052 [ShardingSphere-Command-4] ShardingSphere-SQL - Actual SQL: cloud_0 ::: SHOW STATUS\r\n[ERROR] 16:07:04.061 [ShardingSphere-Command-0] o.a.s.s.f.c.CommandExecutorTask - Exception occur: \r\njava.lang.NullPointerException: null\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2592", "user": "mwylaoma", "labels": ["bug", "sharding"], "created": "2019-06-20 08:08:28", "closed": "2019-06-25 14:20:35", "commits": {"b8d6ab3f40762f6a3438218cc7a79c64dbf10c11": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "b8d6ab3f40762f6a3438218cc7a79c64dbf10c11", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["2313cef3bb14671647d9c1dd54a213ccedfce97f", "fb14e89841f2cc187420c06e0071e8eda8d1fbcb"], "nameRev": "b8d6ab3f40762f6a3438218cc7a79c64dbf10c11 tags/4.0.0-RC2~351", "commitMessage": "Merge pull request #2608 from tuohai666/dev\n\n#2592, sharding-proxing change database error", "commitDateTime": "2019-06-25 22:20:34", "authoredDateTime": "2019-06-25 22:20:34", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/resources/META-INF/parsing-rule-definition/encrypt/mysql/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/resources/META-INF/parsing-rule-definition/masterslave/mysql/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Update not data sharding on 4.0.0.RC2", "body": "My table config:\r\n```\r\nshardingRule:  \r\n  tables:\r\n    t_role_info: \r\n      actualDataNodes: r_game_sub${0..1}.t_role_info${0..2}\r\n      databaseStrategy:\r\n        inline:\r\n          shardingColumn: roleId\r\n          algorithmExpression: r_game_sub${roleId % 2}\r\n      tableStrategy: \r\n        inline:\r\n          shardingColumn: roleId\r\n          algorithmExpression: t_role_info${roleId % 3}\r\n      keyGenerator:\r\n        type: SNOWFLAKE\r\n        column: roleId\r\n```\r\n\r\nBut when i exec update sql the sql log is:\r\n```\r\n2019-06-19 20:41:07,720 INFO [ShardingSphere-SQL] Rule Type: sharding\r\n2019-06-19 20:41:07,720 INFO [ShardingSphere-SQL] Logic SQL: update t_role_info set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=?\r\n2019-06-19 20:41:07,720 INFO [ShardingSphere-SQL] SQLStatement: UpdateStatement(super=DMLStatement(super=AbstractSQLStatement(sqlSegments=[TableSegment(startIndex=7, stopIndex=17, name=t_role_info, quoteCharacter=NONE, owner=Optional.absent(), alias=Optional.absent()), ColumnSegment(startIndex=23, stopIndex=32, name=activeTime, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=37, stopIndex=40, name=head, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=45, stopIndex=56, name=headBorderId, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=61, stopIndex=65, name=level, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=70, stopIndex=79, name=lockReason, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=84, stopIndex=91, name=lockTime, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=96, stopIndex=98, name=sex, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=103, stopIndex=108, name=status, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=113, stopIndex=116, name=type, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=121, stopIndex=128, name=vipLevel, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=133, stopIndex=139, name=langStr, quoteCharacter=NONE, owner=Optional.absent()), ColumnSegment(startIndex=149, stopIndex=154, name=roleId, quoteCharacter=NONE, owner=Optional.absent()), org.apache.shardingsphere.core.parse.sql.segment.dml.assignment.SetAssignmentsSegment@55358433, org.apache.shardingsphere.core.parse.sql.segment.dml.WhereSegment@72f74525, org.apache.shardingsphere.core.parse.sql.segment.dml.predicate.OrPredicateSegment@666e5b2a], tables=Tables(tables=[Table(name=t_role_info, alias=Optional.absent())]), logicSQL=update t_role_info set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=?, parametersCount=12), shardingConditions=Conditions(orConditions=[AndCondition(conditions=[Condition(column=Column(name=roleId, tableName=t_role_info), predicateSegment=org.apache.shardingsphere.core.parse.sql.segment.dml.predicate.PredicateSegment@6ac94217, operator=EQUAL, positionValueMap={}, positionIndexMap={0=11})])]), encryptConditions=Conditions(orConditions=[])), assignments={Column(name=activeTime, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@13244761, Column(name=head, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@5bb2e64d, Column(name=headBorderId, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@4f11411a, Column(name=level, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@6fe87b15, Column(name=lockReason, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@5e4636c6, Column(name=lockTime, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@128a33cd, Column(name=sex, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@57d6b917, Column(name=status, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@7b4a502b, Column(name=type, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@14d5b982, Column(name=vipLevel, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@5782e48e, Column(name=langStr, tableName=t_role_info)=org.apache.shardingsphere.core.parse.sql.segment.dml.expr.simple.ParameterMarkerExpressionSegment@357ee168}, whereStartIndex=143, whereStopIndex=156, whereParameterStartIndex=11, whereParameterEndIndex=11)\r\n2019-06-19 20:41:07,721 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: update t_role_info0 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306]\r\n2019-06-19 20:41:07,721 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: update t_role_info1 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306]\r\n2019-06-19 20:41:07,721 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub0 ::: update t_role_info2 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306]\r\n2019-06-19 20:41:07,722 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: update t_role_info0 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306]\r\n2019-06-19 20:41:07,722 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: update t_role_info1 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306]\r\n2019-06-19 20:41:07,722 INFO [ShardingSphere-SQL] Actual SQL: r_game_sub1 ::: update t_role_info2 set activeTime=?, head=?, headBorderId=?, level=?, lockReason=?, lockTime=?, sex=?, status=?, type=?, vipLevel=?, langStr=? where roleId=? ::: [2019-06-19 20:38:01.0, 0, 0, 1, , 0, 0, 1, 1, 0, cn, 464170103659832306]\r\n\r\n``` ", "url": "https://github.com/apache/shardingsphere/issues/2587", "user": "wangjing112", "labels": ["bug"], "created": "2019-06-19 12:47:30", "closed": "2019-06-20 08:38:32", "commits": {"a43eda710d353f7c34b6423e423b83f978dec4be": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a43eda710d353f7c34b6423e423b83f978dec4be", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["7e6144306ef0895370da4adff6a7ae0378518baf"], "nameRev": "a43eda710d353f7c34b6423e423b83f978dec4be tags/4.0.0-RC2~359", "commitMessage": "fix #2587\n", "commitDateTime": "2019-06-20 16:38:20", "authoredDateTime": "2019-06-20 16:38:20", "commitGitStats": [{"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/OptimizeEngineFactory.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/sharding/dml/{ShardingInsertOptimizeEngine.java => ShardingInsertClauseOptimizeEngine.java}", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/sharding/dml/{ShardingSelectOptimizeEngine.java => ShardingWhereClauseOptimizeEngine.java}", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/engine/sharding/ShardingInsertOptimizeEngineTest.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/engine/sharding/ShardingSelectOptimizeEngineTest.java", "insertions": 7, "deletions": 7, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OptimizeEngineFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.OptimizeEngineFactory.newInstance(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.sql.statement.SQLStatement,java.util.List,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingInsertClauseOptimizeEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingInsertOptimizeEngine", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingInsertOptimizeEngine.optimize()", "TOT": 17, "UPD": 17, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingInsertOptimizeEngine.appendAssistedQueryColumns(org.apache.shardingsphere.core.optimize.result.insert.InsertOptimizeResult)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingInsertOptimizeEngine.getDerivedColumnsCount(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingInsertOptimizeEngine.fillAssistedQueryUnit(java.util.Collection,org.apache.shardingsphere.core.optimize.result.insert.InsertOptimizeResultUnit)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingWhereClauseOptimizeEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingSelectOptimizeEngine", "TOT": 10, "UPD": 10, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingSelectOptimizeEngine.setPagination(org.apache.shardingsphere.core.optimize.result.OptimizeResult)", "TOT": 10, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 5}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingSelectOptimizeEngine.optimize()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingSelectOptimizeEngine.optimize(org.apache.shardingsphere.core.parse.sql.context.condition.Column,java.util.List)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingSelectOptimizeEngine.optimize(java.util.Map)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingWhereClauseOptimizeEngine.setPagination(org.apache.shardingsphere.core.optimize.result.OptimizeResult)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingInsertOptimizeEngineTest.java", "spoonMethods": []}, {"spoonFilePath": "ShardingSelectOptimizeEngineTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a43eda710d353f7c34b6423e423b83f978dec4be"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 18, "lines": 40, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 65, "UPD": 53, "INS": 5, "MOV": 2, "DEL": 5, "spoonFilesChanged": 3, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize"], "changesInPackagesSPOON": ["org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingSelectOptimizeEngine.optimize()", "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingInsertOptimizeEngine", "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingInsertOptimizeEngine.appendAssistedQueryColumns(org.apache.shardingsphere.core.optimize.result.insert.InsertOptimizeResult)", "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingInsertOptimizeEngine.fillAssistedQueryUnit(java.util.Collection,org.apache.shardingsphere.core.optimize.result.insert.InsertOptimizeResultUnit)", "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingSelectOptimizeEngine.optimize(java.util.Map)", "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingSelectOptimizeEngine.optimize(org.apache.shardingsphere.core.parse.sql.context.condition.Column,java.util.List)", "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingWhereClauseOptimizeEngine.setPagination(org.apache.shardingsphere.core.optimize.result.OptimizeResult)", "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingInsertOptimizeEngine.getDerivedColumnsCount(boolean)", "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingSelectOptimizeEngine", "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingSelectOptimizeEngine.setPagination(org.apache.shardingsphere.core.optimize.result.OptimizeResult)", "org.apache.shardingsphere.core.optimize.engine.sharding.dml.ShardingInsertOptimizeEngine.optimize()", "org.apache.shardingsphere.core.optimize.OptimizeEngineFactory.newInstance(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.sql.statement.SQLStatement,java.util.List,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)"]}, {"title": "mysql use function  errror o viable alternative at input ", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.00.RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc\r\n### Expected behavior\r\nupdate success\r\n### Actual behavior\r\nline 3:86 no viable alternative at input 'SUBSTRING(UPPER(MD5(CONCAT(balance,account_no,'LOVECHINA'))),'\r\nline 3:70 mismatched input ',' expecting '='\r\nline 3:83 mismatched input ')' expecting '='\r\nline 3:90 mismatched input ')' expecting '='\r\nline 5:88 no viable alternative at input 'SUBSTRING(UPPER(MD5(CONCAT(balance,account_no,'LOVECHINA'))),'\r\n### Reason analyze (If you can)\r\ncan not support UPPER,MD5,CONCAT function\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nUPDATE test\r\n        SET balance   = balance - 1,\r\n            bal_check = SUBSTRING(UPPER(MD5(CONCAT(balance, account_no, 'LOVECHINA'))), 16)\r\n        WHERE account_No = 1234 AND\r\n              bal_check = SUBSTRING(UPPER(MD5(CONCAT(balance, account_no, 'LOVECHINA'))), 16)\r\n              AND  balance - 1 >= 0\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2564", "user": "jueyue", "labels": ["bug", "sharding"], "created": "2019-06-15 08:12:23", "closed": "2019-06-17 12:35:53", "commits": {"15f40ed5a125d110f8f549487f41c1e82848af5a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "15f40ed5a125d110f8f549487f41c1e82848af5a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["048085a49707800e60aa5304ad9bdfd90b248d8f", "27ab79d73bd63d5134bd8a5779aa6d16ed88e3c2"], "nameRev": "15f40ed5a125d110f8f549487f41c1e82848af5a tags/4.0.0-RC2~385", "commitMessage": "Merge pull request #2571 from tuohai666/dev\n\n#2564, support SUBSTRING function", "commitDateTime": "2019-06-17 20:35:52", "authoredDateTime": "2019-06-17 20:35:52", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "parse insert statement error while containing curate() function", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC & Sharding-Proxy\r\n\r\n### Expected behavior\r\nsharding-column: debitacc\r\n`insert into journal (flowdate,amount,state,debitacc,creditacc) values (curdate(),1,'0', ?, ?)\"`\r\nshould be parsed succeed\r\n\r\n### Actual behavior\r\nparsed insert statement contains wrong positionIndexMap, it resolve to sharding-value is wrong\r\n\r\n![image](https://user-images.githubusercontent.com/8317649/59403370-f84eae80-8dd4-11e9-95cc-a882bd188f58.png)\r\n\r\nand this sql `insert into bill (flowno, flowdate, account_no, debitamount, credityield, customer_no) values (?, curdate(), ?, 1, 0, ?)` will be routed to all datanode, sharding-column is customer_no\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).", "url": "https://github.com/apache/shardingsphere/issues/2549", "user": "cherrylzhao", "labels": ["bug", "sharding"], "created": "2019-06-13 04:18:37", "closed": "2019-06-18 14:13:50", "commits": {"a6399942afabba85cc54355a923cad4908a37b86": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "a6399942afabba85cc54355a923cad4908a37b86", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["98737e34a48f129ce129361689af8ba43ecf6011", "aa3bddfcade15a2e3f276f652457e04b51721231"], "nameRev": "a6399942afabba85cc54355a923cad4908a37b86 tags/4.0.0-RC2~376", "commitMessage": "Merge pull request #2579 from tuohai666/dev\n\n#2549, parse insert statement error while containing curate() function", "commitDateTime": "2019-06-18 22:13:49", "authoredDateTime": "2019-06-18 22:13:49", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/sharding/dml/insert/ShardingInsertValuesFiller.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/sharding/dml/insert.xml", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "sharding-sql-test/src/main/resources/sql/sharding/dml/insert.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingInsertValuesFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.filler.sharding.dml.insert.ShardingInsertValuesFiller.fillCondition(org.apache.shardingsphere.core.parse.sql.segment.dml.InsertValuesSegment,org.apache.shardingsphere.core.parse.sql.statement.dml.InsertStatement)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "null and pagination question", "body": "## Question\r\n\r\nI am using the sharding-proxy, the PreparedStatement setString, I set the field to be null object not the 'null' string, the sharding-proxy will treat it as a string to be inserted into table,which is not my expected result is also not the same as in jdbc.\r\nfor the pagination, it is not support the sql like  'limit 20 offset 0' ;only support the 'limit 0,20'. if this limit offset statement can be supported in the future?\r\n", "url": "https://github.com/apache/shardingsphere/issues/2538", "user": "lightning-pro", "labels": ["bug", "proxy"], "created": "2019-06-11 10:22:01", "closed": "2019-06-12 08:21:08", "commits": {"6981f690ae2864fa4927fdb5fc74f795a981191e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "02dd39ae30e657298ffb376c4349f2daef7f5354": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6981f690ae2864fa4927fdb5fc74f795a981191e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["1194e9d2fa0dc5221b2ad0325958ca8a5bde3eb2"], "nameRev": "6981f690ae2864fa4927fdb5fc74f795a981191e tags/4.0.0-RC2~468", "commitMessage": "for #2538, add test case for limit and offset for mysql\n", "commitDateTime": "2019-06-12 00:56:08", "authoredDateTime": "2019-06-12 00:56:08", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/dql/select_pagination.xml", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/dql/dql-integrate-test-cases.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select_pagination.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "02dd39ae30e657298ffb376c4349f2daef7f5354", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a52c6575d18103f1b2dbce21c8939b43fa6c6fbf", "b3842463d6809c303bf81f53893e3d89131830f8"], "nameRev": "02dd39ae30e657298ffb376c4349f2daef7f5354 tags/4.0.0-RC2~466", "commitMessage": "Merge pull request #2540 from tuohai666/dev\n\n #2538, insert null value will fire Exception", "commitDateTime": "2019-06-12 13:12:40", "authoredDateTime": "2019-06-12 13:12:40", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/execute/protocol/MySQLBinaryProtocolValueFactory.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/execute/protocol/MySQLMySQLBinaryProtocolValueFactoryTest.java", "insertions": 8, "deletions": 1, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLBinaryProtocolValueFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.protocol.MySQLBinaryProtocolValueFactory.setNullBinaryProtocolValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.protocol.MySQLBinaryProtocolValueFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLMySQLBinaryProtocolValueFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.protocol.MySQLMySQLBinaryProtocolValueFactoryTest.assertGetBinaryProtocolValueWithMySQLTypeNull()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.protocol.MySQLMySQLBinaryProtocolValueFactoryTest.assertGetBinaryProtocolValueWithUnsupportedType()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6981f690ae2864fa4927fdb5fc74f795a981191e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "`AVG(DISTINCT) ` or `COUNT/SUMM(DISTINCT)`can not be executed well", "body": "When execute `AVG(DISTINCT) ` or `COUNT/SUMM(DISTINCT)`, throw IndexOutOfBoundsException.", "url": "https://github.com/apache/shardingsphere/issues/2534", "user": "tristaZero", "labels": ["bug"], "created": "2019-06-11 06:31:52", "closed": "2019-06-11 07:47:13", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "tinyint column don't return a 8-bit integer value but a boolean value", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nWhen the column type is **tinyint**, return a 8-bit integer in MySQL protocol\r\n### Actual behavior\r\nWhen the column type is **tinyint**, return a boolean value in MySQL protocol\r\n### Reason analyze (If you can)\r\nJDBC's getObject() return a boolean value if the column occupy one byte.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nAny query SQL.\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2528", "user": "tuohai666", "labels": ["bug", "sharding"], "created": "2019-06-10 12:13:18", "closed": "2019-06-10 13:14:13", "commits": {"69e7f174b48569b9032562301105927dd792ff78": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "69e7f174b48569b9032562301105927dd792ff78", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["6c90ae7b355fa8150412863ad28f1bf145efc273", "ba8c9e48052cd04c6dbeaeefb1ffba3579f772c0"], "nameRev": "69e7f174b48569b9032562301105927dd792ff78 tags/4.0.0-RC2~490", "commitMessage": "Merge pull request #2529 from tuohai666/dev\n\ntinyint column don't return a 8-bit integer value but a boolean value #2528", "commitDateTime": "2019-06-10 21:14:12", "authoredDateTime": "2019-06-10 21:14:12", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/StreamQueryResult.java", "insertions": 2, "deletions": 92, "lines": 94}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutorTest.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutorTest.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StreamQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.getValue(int,java.lang.Class)", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.StreamQueryResult.getValue(java.lang.String,java.lang.Class)", "TOT": 11, "UPD": 3, "INS": 1, "MOV": 4, "DEL": 3}]}, {"spoonFilePath": "PreparedStatementExecutorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutorTest.assertExecuteQueryForSinglePreparedStatementSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutorTest.assertExecuteQueryForMultiplePreparedStatementsSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StatementExecutorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.executor.StatementExecutorTest.assertExecuteQueryForSingleStatementSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.executor.StatementExecutorTest.assertExecuteQueryForMultipleStatementsSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "CachedDatabaseMetaData.getTables throw NullPointerException when use MasterSlaveDataSource", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nReturn table names\r\n### Actual behavior\r\nGet npe\r\n### Reason analyze (If you can)\r\nasset shardingRule is null\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nDatabaseMetaData databaseMetaData = connection.getMetaData();\r\ndatabaseMetaData.getTables(null, null, \"ACT_ID_PROPERTY\", new String[]{ \"TABLE\" });\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2527", "user": "caszhou", "labels": ["bug", "jdbc"], "created": "2019-06-10 09:38:59", "closed": "2019-06-12 03:29:31", "commits": {"a52c6575d18103f1b2dbce21c8939b43fa6c6fbf": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "a52c6575d18103f1b2dbce21c8939b43fa6c6fbf", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["6981f690ae2864fa4927fdb5fc74f795a981191e", "d367e25213a530a87c9242225dcf64310f70691d"], "nameRev": "a52c6575d18103f1b2dbce21c8939b43fa6c6fbf tags/4.0.0-RC2~467", "commitMessage": "Merge pull request #2539 from KomachiSion/issue#2527\n\nFixes #2527", "commitDateTime": "2019-06-12 11:29:30", "authoredDateTime": "2019-06-12 11:29:30", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/ResultSetReturnedDatabaseMetaData.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/DatabaseMetaDataResultSet.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/CachedDatabaseMetaDataTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResultSetReturnedDatabaseMetaData.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.ResultSetReturnedDatabaseMetaData.getActualTableNamePattern(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "DatabaseMetaDataResultSet.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.DatabaseMetaDataResultSet.generateDatabaseMetaDataObject(int,int,java.sql.ResultSet)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CachedDatabaseMetaDataTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.CachedDatabaseMetaDataTest.assertGetTables()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "the query results inlude milisecond data ", "body": "hello,\r\n      when i query data by sharding-proxy, I got results which including milisecond follow the datetime, eg. \"2019-04-28 18:37:59.0\", why ? is there any way to configure the proxy to avoid this ?\r\n![image](https://user-images.githubusercontent.com/48242833/58952283-d6966b80-87c5-11e9-8921-606f9e08fb9c.png)\r\n\r\nthx\r\n", "url": "https://github.com/apache/shardingsphere/issues/2512", "user": "Myshiner", "labels": ["bug", "proxy"], "created": "2019-06-05 11:13:36", "closed": "2019-06-11 10:23:21", "commits": {"aa8fa5549b81d27952fc9d8d37cd67b30050764d": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "aa8fa5549b81d27952fc9d8d37cd67b30050764d", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["5f718101677c478d2f459cc0f6df198fe76bc1cc", "73d4327a4c0c807b8c1e35b7a619d54ad6a7d8b7"], "nameRev": "aa8fa5549b81d27952fc9d8d37cd67b30050764d tags/4.0.0-RC2~477", "commitMessage": "Merge pull request #2536 from tuohai666/dev\n\n#2512, remove millisecond of timestamp", "commitDateTime": "2019-06-11 18:23:20", "authoredDateTime": "2019-06-11 18:23:20", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacket.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/MySQLTextResultSetRowPacketTest.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLTextResultSetRowPacket.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.text.MySQLTextResultSetRowPacket.write(org.apache.shardingsphere.shardingproxy.transport.mysql.payload.MySQLPacketPayload)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MySQLTextResultSetRowPacketTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.text.MySQLTextResultSetRowPacketTest.assertWrite()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "The problem that the value of the bit type cannot be returned correctly", "body": "I used shardingproxy to do the sharding, but there is a field of bit type. The value stored in this field is 1 regardless of the number of questions. Please ask how to solve this problem. Thank you.", "url": "https://github.com/apache/shardingsphere/issues/2460", "user": "cel105302", "labels": ["bug", "sharding"], "created": "2019-05-28 08:12:57", "closed": "2019-05-30 03:49:09", "commits": {"3c90dc0117b240ee80ebc6efcca6676f07e564e2": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "3c90dc0117b240ee80ebc6efcca6676f07e564e2", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["6557a3dccf2b78469b2d5fe9caa38bf1a5ca6001", "2e0a7ebe1fd49b596242f62e68c877cb766a5092"], "nameRev": "3c90dc0117b240ee80ebc6efcca6676f07e564e2 tags/4.0.0-RC2~595", "commitMessage": "Merge pull request #2467 from tuohai666/dev\n\n#2460, value of the bit type cannot be returned correctly", "commitDateTime": "2019-05-30 11:49:08", "authoredDateTime": "2019-05-30 11:49:08", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryResultUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil.getValueByColumnType(java.sql.ResultSet,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryResultUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBit()", "TOT": 5, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Get error index info when use hibernate.hbm2ddl.auto=update", "body": "## Version\r\n* Spring Boot 2.1.5.RELEASE\r\n* ShardingSphere 4.0.0-RC1\r\n* MySQL 5.7\r\n## Question\r\nI have set the option \"spring.jpa.properties.hibernate.hbm2ddl.auto=update\" \r\n\r\nconfig application.yml: \r\n```\r\ndatasource:\r\n  names: ds0, ds1, ds2\r\n\r\n# ****\r\n\r\nsharding:\r\n  default-data-source-name: ds0\r\n# ...\r\n  tables:\r\n     cpn_code:\r\n        actual-data-nodes: ds$->{1..2}.cpn_code$->{0..9}\r\n\r\n# ...\r\n```\r\n\r\n* Apllication start always send sql  **CREATE INDEX idx_cpnId ON cpn_code...**\r\n \r\nBecause  Index Name in MySql is 'idx_cpnId_cpn_code0, idx_cpnId_cpn_code2...' , hibernate entity\r\n```\r\n@Entity\r\n@Table(name = \"cpn_code\", indexes = {\r\n        @Index(name = \"idx_cpnId\", columnList = \"cpnId\")\r\n})\r\npublic class CouponCode {\r\n```\r\n\r\n\r\n* Sometimes application start fail because got Exception **Cannot find actual data node for data source name: 'ds0' and logic table name: 'cpn_code'**\r\n\r\n```\r\n//org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl#performTablesMigration\r\n//org.hibernate.tool.schema.internal.AbstractSchemaMigrator#applyIndexes\r\n//org.hibernate.tool.schema.internal.AbstractSchemaMigrator#findMatchingIndex\r\n//org.hibernate.tool.schema.extract.internal.TableInformationImpl#getIndex\r\n//org.hibernate.tool.schema.extract.internal.TableInformationImpl#indexes\r\n//org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl#getIndexes\r\n//org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.ResultSetReturnedDatabaseMetaData#getIndexInfo\r\n\r\n// when currentDataSourceName is 'ds0' , method getDataNode will throw Exception\r\nreturn null == table || null == shardingRule ? table : (shardingRule.findTableRule(table).isPresent() ? shardingRule.getDataNode(currentDataSourceName, table).getTableName() : table);\r\n// so I config actual-data-nodes: ds$->{0..2}  to avoid error\r\n```\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/2417", "user": "kritlen", "labels": ["bug", "jdbc"], "created": "2019-05-21 11:45:32", "closed": "2019-05-22 07:51:13", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "When using generated key and assisted query encrypt column to execute `Insert into t_order(user_id, status) values(1,1),(2,3) `,  wrong column values will be calculated.", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\njdbc\r\n### Actual behavior\r\nWhen using sharding key generator + assisted Query encryptor tto\r\nexecute `Insert into t_order(user_id, status) values(1,1),(2,3) `,  wrong column values will be calculated.\r\n### Reason analyze (If you can)\r\nWhen insert multiple values, generated key will be firstly move and then append, the final order is wrong.\r\n```\r\n    private void fillWithGeneratedKeyName(final InsertOptimizeResult insertOptimizeResult) {\r\n        String generateKeyColumnName = shardingRule.findGenerateKeyColumnName(insertStatement.getTables().getSingleTableName()).get();\r\n        insertOptimizeResult.getColumnNames().remove(generateKeyColumnName);\r\n        insertOptimizeResult.getColumnNames().add(generateKeyColumnName);\r\n    }\r\n```\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2401", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-05-17 09:26:05", "closed": "2019-05-17 14:51:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Wrong result set for `select between and` when using encrypt data source", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\n### Expected behavior\r\nget correct result set for `select between and` when using encrypt data source\r\n### Actual behavior\r\nget wrong result set for `select between and` when using encrypt data source\r\n### Reason analyze (If you can)\r\nActually, when data is encrypted and stored in db, user can not use `select encrypted column between value1 an value2` to get correct result set. The reason is that encrypted data in db is different from the original data.\r\nTherefore when ss finds this scenario, it will throw exception.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2398", "user": "tristaZero", "labels": ["bug"], "created": "2019-05-17 04:02:14", "closed": "2019-05-17 04:05:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MasterSlaveDatasource and shardingDatasource could be used together in shardingproxy?", "body": "There is no such usage in the official example\u3002version shardingProxy-4.0\r\n", "url": "https://github.com/apache/shardingsphere/issues/2397", "user": "duanbin0414", "labels": ["bug"], "created": "2019-05-16 08:34:09", "closed": "2019-05-22 10:04:37", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "delete from user where id=\u201cxx\u201d parse error in shading-jdbc 4.0.0-RC1", "body": "When I upgrade sharding-jdbc version to 4.0.0-RC1, the SQL: `delete from user where id=\u201cxx\u201d `cannot execute correctly, but it is ok in sharding-jdbc 3.0.0.\r\nThe log is:\r\n> line 1:12 no viable alternative at in input 'fromuser'\r\nActual SQL : ds_0 ::: delete from user where id=\u2019xx\u2018 .\r\n\r\nThe SQL should be written to `delete from user_5 where id=\u201cxx\u201d .`\r\n\r\nI debug this problem and found that AntlrSQLParser can't parse table-names accurately when parsing. I try to delete  USER kerword definition  in Keyword.g4 and rebuild , then the SQL can execute  correctly.\r\n\r\n> USER \r\n           : U S E R\r\n           ;\r\n\r\nSo I think there may be some mistakes in the antlr .g4 files when SQL table name is 'user'.", "url": "https://github.com/apache/shardingsphere/issues/2379", "user": "wenweibin", "labels": ["bug", "sharding"], "created": "2019-05-14 03:14:52", "closed": "2019-05-14 03:47:54", "commits": {"c9439ec51a02219a6a29cd28cbb0662ad5d186dd": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c9439ec51a02219a6a29cd28cbb0662ad5d186dd", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["374819f5495ac0193e251ca09ece4a8b212ce22b"], "nameRev": "c9439ec51a02219a6a29cd28cbb0662ad5d186dd tags/4.0.0-RC2~778", "commitMessage": "fix #2379, add user to unreserved word for MySQL parse\n", "commitDateTime": "2019-05-14 11:48:34", "authoredDateTime": "2019-05-14 11:48:34", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c9439ec51a02219a6a29cd28cbb0662ad5d186dd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4"]}, {"title": "proxy transaction cannot work with python client.", "body": "mysql-python connector will send `SET @@SESSION.AUTOCOMMIT = OFF` command for begining a new transaction, we should intercept this sql to do Sharding transaction. ", "url": "https://github.com/apache/shardingsphere/issues/2356", "user": "cherrylzhao", "labels": ["bug", "proxy"], "created": "2019-05-09 00:46:09", "closed": "2019-05-10 00:53:02", "commits": {"ba32bf80cbffc3945d8814f5766ba66fa66e67fc": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "ba32bf80cbffc3945d8814f5766ba66fa66e67fc", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["667747a211766bf1c3eaed30b2f09e6b6c7db289", "ad898b00055b8c556c20cc9257feac9a78281b51"], "nameRev": "ba32bf80cbffc3945d8814f5766ba66fa66e67fc tags/4.0.0-RC2~843", "commitMessage": "Merge pull request #2358 from cherrylzhao/dev-upstream\n\nfor #2356 support transaction for python mysql connector.", "commitDateTime": "2019-05-09 21:37:45", "authoredDateTime": "2019-05-09 21:37:45", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/TextProtocolBackendHandlerFactory.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/TextProtocolBackendHandlerFactoryTest.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "sharding-transaction/sharding-transaction-core/src/main/java/org/apache/shardingsphere/transaction/core/TransactionOperationType.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TextProtocolBackendHandlerFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.TextProtocolBackendHandlerFactory", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.TextProtocolBackendHandlerFactory.newInstance(java.lang.String,org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TextProtocolBackendHandlerFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.TextProtocolBackendHandlerFactoryTest.assertNewInstance()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.TextProtocolBackendHandlerFactoryTest.assertNewTransactionBackendHandlerInstanceOfCommitOperate()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TransactionOperationType.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.transaction.core.TransactionOperationType.getOperationType(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sharding-proxy Query result :extraneous data in \"D\" message ,reason: have chinese", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy \r\n### Expected behavior\r\ntable data have Chinese .select * from table show error message :\r\nextraneous data in \"D\" message\r\n### Actual behavior\r\nproxy backend POSTGRES , frontend postgres \r\n### Reason analyze (If you can)\r\nreason Chinese , Postgres server_encoding ,client_encoding UTF-8\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nany table ,have Chinese is error.\r\n### Example codes for reproduce this issue (such as a github link).", "url": "https://github.com/apache/shardingsphere/issues/2343", "user": "bxvs888", "labels": ["bug"], "created": "2019-05-07 23:53:04", "closed": "2019-05-08 11:04:59", "commits": {"7d4f644b5f84daa1956ca5eba7c885f216f418fc": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7d4f644b5f84daa1956ca5eba7c885f216f418fc", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["b8993356f53569c033dc72f1dd69422bd0fca568", "a4adf6df82926c267a74fb287249106a9582715d"], "nameRev": "7d4f644b5f84daa1956ca5eba7c885f216f418fc tags/4.0.0-RC2~848", "commitMessage": "Merge pull request #2352 from tuohai666/dev\n\n#2343, Chinese character for PostgreSQL", "commitDateTime": "2019-05-08 19:04:58", "authoredDateTime": "2019-05-08 19:04:58", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/postgresql/packet/command/query/text/PostgreSQLDataRowPacket.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PostgreSQLDataRowPacket.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.postgresql.packet.command.query.text.PostgreSQLDataRowPacket.write(org.apache.shardingsphere.shardingproxy.transport.postgresql.payload.PostgreSQLPacketPayload)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "While using database,it will select a random database!!!", "body": "the logs likes that:\r\nFirst use database:\r\n![20](https://user-images.githubusercontent.com/34736778/57217009-082fe180-7024-11e9-90fc-b8ebeff438c3.png)\r\nSecond use database:\r\n![21](https://user-images.githubusercontent.com/34736778/57217050-25fd4680-7024-11e9-9231-f50c7c65d7af.png)\r\n\r\n\r\nthe sharding-proxy version is 4.0.0-RC2-SNAPSHOT.\r\n", "url": "https://github.com/apache/shardingsphere/issues/2331", "user": "tianyijushi", "labels": ["bug", "sharding"], "created": "2019-05-06 09:24:35", "closed": "2019-05-20 02:53:00", "commits": {"ff6d38eadf4be6d6c975536fed72c2ab9ede5e10": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "ff6d38eadf4be6d6c975536fed72c2ab9ede5e10", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["f72c43f767f857ac4140a6bbb2fa0267f95d97d1", "011cd628a2bcd478ecd8509feefbe401c6c0a5fe"], "nameRev": "ff6d38eadf4be6d6c975536fed72c2ab9ede5e10 tags/4.0.0-RC2~780", "commitMessage": "Merge pull request #2376 from cherrylzhao/dev\n\nfor #2331 add DataSourceGroupBroadcastRoutingEngine.", "commitDateTime": "2019-05-13 21:42:58", "authoredDateTime": "2019-05-13 21:42:58", "commitGitStats": [{"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/RoutingEngineFactory.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/broadcast/DataSourceGroupBroadcastRoutingEngine.java", "insertions": 99, "deletions": 0, "lines": 99}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/broadcast/DataSourceGroupBroadcastRoutingEngineTest.java", "insertions": 110, "deletions": 0, "lines": 110}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RoutingEngineFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactory.getDALRoutingEngine(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.sql.statement.SQLStatement,java.util.Collection)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DataSourceGroupBroadcastRoutingEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.type.broadcast.DataSourceGroupBroadcastRoutingEngine", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DataSourceGroupBroadcastRoutingEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.type.broadcast.DataSourceGroupBroadcastRoutingEngineTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "The SQL of `insert set` can not run well when sharding", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\n`insert into t_order set order_id =1, user_id =1; ` can run well.\r\n### Actual behavior\r\nthrow exception:\r\n> ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'org.apache.shardingsphere.core.rewrite.placeholder.InsertSetPlaceholder@2f60192a'\r\n\r\n### Reason analyze (If you can)\r\nSQLBuilder does not handle `InsertSetPlaceholder`.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2329", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-05-06 08:31:51", "closed": "2019-05-06 15:51:42", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SUM(IF(INTERVAL print error log \"no viable alternative at input\"", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Actual behavior\r\nline 3:68 no viable alternative at input 'SUM(if(state=0andINTERVAL(total_amount,0,200.00)=1,'\r\n(It runs fine on version 3.0.0.M4)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nSQL like:\r\nselect SUM(if(state=0 and INTERVAL(total_amount,${rangeParam.range1},${rangeParam.range2})=1,1,0)) as successNum1  from order;\r\n", "url": "https://github.com/apache/shardingsphere/issues/2324", "user": "flycjh", "labels": ["bug", "sharding"], "created": "2019-05-05 16:52:02", "closed": "2019-05-06 15:50:18", "commits": {"b30799f53ccb805a9b412d45e3342fd349444c5c": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b30799f53ccb805a9b412d45e3342fd349444c5c", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["29120e83d4b03580495d5a9965174775c6183455", "d3f5d958eb472a5686bba7dd26d3566af467519f"], "nameRev": "b30799f53ccb805a9b412d45e3342fd349444c5c tags/4.0.0-RC2~873", "commitMessage": "Merge pull request #2327 from codefairy08/dev_bug_fixs_2211\n\n#2324 bug fixes", "commitDateTime": "2019-05-06 23:49:45", "authoredDateTime": "2019-05-06 23:49:45", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/select.xml", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Insert error when field name was a keyword", "body": "## Insert error when field name was a keyword.\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC1\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\ninsert success.\r\n\r\n### Actual behavior\r\n\r\n\r\n```\r\n[main] INFO ShardingSphere-SQL - Logic SQL: INSERT INTO `ts_order` (`id`, `desc`) VALUES ('1', 'abc')\r\n[main] INFO ShardingSphere-SQL - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=ts_order, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=id, tableName=ts_order), operator=EQUAL, compareOperator=null, positionValueMap={0=1}, positionIndexMap={})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=ts_order, quoteCharacter=BACK_QUOTE, schemaNameLength=0), SQLToken(startIndex=23)], parametersIndex=0, logicSQL=INSERT INTO `ts_order` (`id`, `desc`) VALUES ('1', 'abc')), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[id, desc], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLTextExpression@5a62b2a4, org.apache.shardingsphere.core.parse.old.parser.expression.SQLTextExpression@1051817b])])\r\n[main] INFO ShardingSphere-SQL - Actual SQL: ds_0 ::: INSERT INTO `ts_order_0001`  (id, desc) VALUES ('1', 'abc')\r\nException in thread \"main\" com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'desc) VALUES ('1', 'abc')' at line 1\r\n```\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).", "url": "https://github.com/apache/shardingsphere/issues/2319", "user": "lwtdev", "labels": ["bug", "sharding"], "created": "2019-05-05 03:45:12", "closed": "2019-05-15 12:23:52", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "If there is quoteCharacter for index name, sql can not be executed", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nThe following SQL can be executed correctly.\r\n```\r\nCREATE TABLE `t_order` (   `order_id` varchar(100) NOT NULL,   `user_id` varchar(100) DEFAULT NULL,   `status` varchar(45) DEFAULT NULL,   PRIMARY KEY (`order_id`),   KEY `order_index_t_order` (`order_id`) )  DEFAULT CHARSET=utf8;\r\n```\r\n### Actual behavior\r\nAn exception is thrown.\r\n```\r\nERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '_t_order_0 (`order_id`) )  DEFAULT CHARSET=utf8' at line 1\r\n```\r\n### Reason analyze (If you can)\r\nThe rewritten SQL is not correct\uff1a\r\n\r\n> CREATE TABLE `t_order_0` (   `order_id` varchar(100) NOT NULL,   `user_id` varchar(100) DEFAULT NULL,   `status` varchar(45) DEFAULT NULL,   PRIMARY KEY (`order_id`),   KEY \\`order_index_t_order\\`_t_order_0 (\\`order_id\\`) )  DEFAULT CHARSET=utf8\r\n\r\nThe related code is:\r\nIn SQLRewriteEngine class:\r\n```\r\nprivate void appendIndexPlaceholder(final SQLBuilder sqlBuilder, final IndexToken indexToken, final int count) {\r\n        String indexName = originalSQL.substring(indexToken.getStartIndex(), indexToken.getStopIndex() + 1);\r\n        String logicTableName = indexToken.getTableName().toLowerCase();\r\n        if (Strings.isNullOrEmpty(logicTableName)) {\r\n            logicTableName = shardingRule.getLogicTableName(indexName);\r\n        }\r\n        sqlBuilder.appendPlaceholder(new IndexPlaceholder(indexName, logicTableName));\r\n        appendRest(sqlBuilder, count, indexToken.getStopIndex() + 1);\r\n    }\r\n```\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2312", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-05-01 07:22:39", "closed": "2019-05-05 14:22:02", "commits": {"a446856c47046b03d875f372949d51bde8800c3e": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "a446856c47046b03d875f372949d51bde8800c3e", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["db9dc06853445b7d2b4b3d50d2d4d0711dbb4ff9", "11da8fb2496a5bc2e40c6c88454b65e66b9da124"], "nameRev": "a446856c47046b03d875f372949d51bde8800c3e tags/4.0.0-RC2~892", "commitMessage": "Merge pull request #2320 from weiyuc/fix-2312\n\nfix bug #2312", "commitDateTime": "2019-05-05 13:00:19", "authoredDateTime": "2019-05-05 13:00:19", "commitGitStats": [{"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/SQLBuilder.java", "insertions": 9, "deletions": 2, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLBuilder.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLBuilder.appendIndexPlaceholder(org.apache.shardingsphere.core.rewrite.placeholder.IndexPlaceholder,java.lang.String,java.lang.StringBuilder)", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "RoutingCondition for updateStatement after parsing is not correct.", "body": "## Bug Report\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1-Snapshot\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-jdbc & sharding-proxy\r\n\r\n### Expected behavior\r\nSharding key is `order_id`, RoutingConditon of below SQL can be filled correctly.\r\n`update t_order set user_id=user_id-1 where user_id =? and order_id =?`\r\n\r\n### Actual behavior\r\nRoutingCondition is empty.\r\nrouteConditions=Conditions(orCondition=OrCondition(andConditions=[]))\r\n\r\n### Reason analyze (If you can)\r\nAntlr g4 file have a wrong parse rule for `set user_id=user_id-1`, `set user_id=user_id+1` can be parsed succeed.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2299", "user": "cherrylzhao", "labels": ["bug", "sharding"], "created": "2019-04-29 07:48:46", "closed": "2019-04-30 06:15:21", "commits": {"3bca972e77b720b54c060f1b4af7a94cf666c3e3": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3bca972e77b720b54c060f1b4af7a94cf666c3e3", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["64146a520a991bd9241cd677ad70051de1af6f40", "ce755e988ef7aac9ab0c363c5fcf34d61a0bd1bb"], "nameRev": "3bca972e77b720b54c060f1b4af7a94cf666c3e3 tags/4.0.0-RC2~931", "commitMessage": "Merge pull request #2305 from codefairy08/dev_bug_fixs_2211\n\n#2299 bug fixes", "commitDateTime": "2019-04-30 12:01:23", "authoredDateTime": "2019-04-30 12:01:23", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/Comments.g4", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/Literals.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/select.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "subquery with error", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\ni have try search with 'MissingMethodException' 'No signature of method' keywords yet\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\ni'm i have read all of it.\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\ni will be reply if you need more details.\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC2-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nas the document of ShardingSphere, the subquery of the sample can be support.\r\n### Actual behavior\r\ncan't be run correctly, and the error message as below.\r\n\r\n[ERROR] 2019-04-28 21:22:11,442 --http-nio-8080-exec-4-- [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet]] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \r\n### Error querying database.  Cause: groovy.lang.MissingMethodException: No signature of method: java.lang.String.mod() is applicable for argument types: (java.lang.Integer) values: [2]\r\nPossible solutions: drop(int), any(), find(), find(java.lang.CharSequence), any(groovy.lang.Closure), is(java.lang.Object)\r\n### The error may exist in org/apache/shardingsphere/samples/repository/OrderMapper.java (best guess)\r\n### The error may involve org.apache.shardingsphere.samples.repository.OrderMapper.queryOrder-Inline\r\n### The error occurred while setting parameters\r\n### SQL: SELECT * FROM t_order WHERE order_id IN (SELECT order_id FROM t_order WHERE status = 'init')\r\n### Cause: groovy.lang.MissingMethodException: No signature of method: java.lang.String.mod() is applicable for argument types: (java.lang.Integer) values: [2]\r\nPossible solutions: drop(int), any(), find(), find(java.lang.CharSequence), any(groovy.lang.Closure), is(java.lang.Object)] with root cause \r\ngroovy.lang.MissingMethodException: No signature of method: java.lang.String.mod() is applicable for argument types: (java.lang.Integer) values: [2]\r\nPossible solutions: drop(int), any(), find(), find(java.lang.CharSequence), any(groovy.lang.Closure), is(java.lang.Object)\r\n\tat org.codehaus.groovy.runtime.ScriptBytecodeAdapter.unwrap(ScriptBytecodeAdapter.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.PojoMetaClassSite.call(PojoMetaClassSite.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\r\n\tat Script3$_run_closure1.doCall(Script3.groovy:1)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\r\n\tat groovy.lang.Closure.call(Closure.java:426)\r\n\tat groovy.lang.Closure.call(Closure.java:420)\r\n\tat org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.execute(InlineShardingStrategy.java:86)\r\n\tat org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.doSharding(InlineShardingStrategy.java:68)\r\n\tat org.apache.shardingsphere.core.strategy.route.inline.InlineShardingStrategy.doSharding(InlineShardingStrategy.java:59)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeTables(StandardRoutingEngine.java:201)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:183)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditionsWithCondition(StandardRoutingEngine.java:110)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditions(StandardRoutingEngine.java:104)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.getDataNodes(StandardRoutingEngine.java:89)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:71)\r\n\tat org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:106)\r\n\tat org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66)\r\n\tat org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60)\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:64)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:170)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\r\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\r\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\r\n\tat com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:108)\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)\r\n\tat com.sun.proxy.$Proxy73.query(Unknown Source)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)\r\n\tat com.sun.proxy.$Proxy58.selectList(Unknown Source)\r\n\tat org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)\r\n\tat org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)\r\n\tat com.sun.proxy.$Proxy63.queryOrder(Unknown Source)\r\n\tat org.apache.shardingsphere.samples.Application.queryAll(Application.java:47)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:634)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:741)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n```java\r\n @Select(\"SELECT * FROM t_order WHERE order_id IN (SELECT order_id FROM t_order WHERE status = '#{status}')\")\r\n    List<Order> queryOrder(String status);\r\n```\r\nyou can visit [link](https://github.com/EvanDylan/incubator-shardingsphere/blob/dev/sharding-samples/src/main/java/org/apache/shardingsphere/samples/repository/OrderMapper.java) as well.", "url": "https://github.com/apache/shardingsphere/issues/2294", "user": "EvanDylan", "labels": ["bug", "sharding"], "created": "2019-04-28 13:33:34", "closed": "2019-04-29 09:42:22", "commits": {"3adc2d980a21ed9c98e93e99d7f6684d059327ab": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3adc2d980a21ed9c98e93e99d7f6684d059327ab", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d7a67e3f6012487b7c4247cd13f3c8ba325e9e6d", "c4698490787561444a19ec0bc3de785c9f2c4f86"], "nameRev": "3adc2d980a21ed9c98e93e99d7f6684d059327ab tags/4.0.0-RC2~939", "commitMessage": "Merge pull request #2300 from codefairy08/dev_bug_fixs_2211\n\n#2294 bug fixes", "commitDateTime": "2019-04-29 17:40:55", "authoredDateTime": "2019-04-29 17:40:55", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dml/PredicateExtractor.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PredicateExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.PredicateExtractor.extractPredicate(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "INSERT ... ON DUPLICATE KEY UPDATE ,Reporting the following error", "body": "sql:\r\ninsert into t_order (id, avl_inventory, `type`, \r\ncreate_person, create_time, update_person, update_time, is_deleted, version ) \r\nVALUES \r\n  (76667, 100, 1, 'xx(189870)', '2019-4-25 18:25:20', 'xx(189870)','2019-4-25 18:25:20', 0,0 ) , \r\n (78143, 100, 1, 'xx(189870)', '2019-4-25 18:25:20',\r\n 'xx(189870)', '2019-4-25 18:25:20', 0,0 )\r\n ON DUPLICATE KEY UPDATE avl_inventory = VALUES(avl_inventory),\r\n `type` = VALUES(`type`),\r\n create_time = VALUES(create_time), create_person = VALUES(create_person),\r\n update_time = VALUES(update_time), update_person = VALUES(update_person);\r\n\r\nerror:\r\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '78143' for key 'PRIMARY'\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:422)\r\n\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:425)\r\n\tat com.mysql.jdbc.Util.getInstance(Util.java:408)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)\r\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)\r\n\tat com.mysql.jdbc.ServerPreparedStatement.serverExecute(ServerPreparedStatement.java:1283)\r\n\tat com.mysql.jdbc.ServerPreparedStatement.executeInternal(ServerPreparedStatement.java:783)\r\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)\r\n\tat com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.SQLExecuteCallbackFactory$2.executeSQL(SQLExecuteCallbackFactory.java:65)\r\n\tat org.apache.shardingsphere.shardingjdbc.executor.SQLExecuteCallbackFactory$2.executeSQL(SQLExecuteCallbackFactory.java:61)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute0(SQLExecuteCallback.java:69)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.SQLExecuteCallback.execute(SQLExecuteCallback.java:58)", "url": "https://github.com/apache/shardingsphere/issues/2271", "user": "xfyang1989", "labels": ["bug", "sharding"], "created": "2019-04-25 10:30:32", "closed": "2019-05-08 11:04:26", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "shardingsphere4.0.0-RC1,Incorrect datetime value: 'now()' for column 'create_time' at row ", "body": "shardingsphere4.0.0-RC1,report the following error\uff1a\r\n\r\nIncorrect datetime value: 'now()' for column 'create_time' at row \r\n\r\nShardingSphere-SQL - Actual SQL: rw0 ::: insert into t_order(id, first_channel, biz_bill_no, orig_bill_no, warehouse_id, sku_code, change_inv_type, change_num, change_time, remark, create_time, create_person, update_time, update_person, is_deleted, version, sale_company, owner_id, bill_type, warehouse_code, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'now()', ?, 'now()', ?, 0, 0, ?, ?, ?, ?, ?) ::: [xx, xx, hh, hhh, xx, bb, xx, -6, 2019-04-24 09:22:54.825, null, xx, xx, xx, xx, 6, 0303, 0]\r\n\r\nIt seems that sharding treats the mysql now() function as a string.\r\n", "url": "https://github.com/apache/shardingsphere/issues/2253", "user": "xfyang1989", "labels": ["bug", "sharding"], "created": "2019-04-24 01:36:36", "closed": "2019-04-26 07:07:05", "commits": {"c132176956c5e7883a092d692eb6aa62bff3c803": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "c132176956c5e7883a092d692eb6aa62bff3c803", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["41a46fc1921a2b0b760510c20dd36c76edfd0dcc", "4819c03ecd52905f21a16217fed44e8e36f99957"], "nameRev": "c132176956c5e7883a092d692eb6aa62bff3c803 tags/4.0.0-RC2~989", "commitMessage": "Merge pull request #2264 from codefairy08/dev_bug_fixs_2211\n\n#2253 bug fixes", "commitDateTime": "2019-04-25 15:43:42", "authoredDateTime": "2019-04-25 15:43:42", "commitGitStats": [{"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/result/insert/InsertOptimizeResultUnit.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/sql/segment/dml/expr/LiteralExpressionSegment.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/insert.xml", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/select.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/integrate/cases/dml/dml-integrate-test-cases.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-sql-test/src/main/resources/sql/dml/insert.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select.xml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InsertOptimizeResultUnit.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.result.insert.InsertOptimizeResultUnit.getColumnSQLExpressionValue(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LiteralExpressionSegment.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.sql.segment.dml.expr.LiteralExpressionSegment.getSQLExpression(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "insert with generated keys,when the last column value is null\uff0ccause NullPointerException", "body": "sharding-jdbc <version>4.0.0-RC1</version>\r\n\r\n<sharding:key-generator id=\"xxxxxx\" type=\"SNOWFLAKE\" column=\"id\" />\r\nuseGeneratedKeys\uff0cwhen insert sql the last column value is null,cause NullPointerException\r\nwhen update the last column\uff0csuccess!\r\nexception\uff1a\r\n\r\nCaused by: java.lang.NullPointerException\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.isQualifiedInsertOptimizeResult(StandardRoutingEngine.java:221)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.reviseInsertOptimizeResult(StandardRoutingEngine.java:211)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditionsWithCondition(StandardRoutingEngine.java:110)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.routeByShardingConditions(StandardRoutingEngine.java:102)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.getDataNodes(StandardRoutingEngine.java:87)\r\n\tat org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(StandardRoutingEngine.java:69)\r\n\tat org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:106)\r\n\tat org.apache.shardingsphere.core.route.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66)\r\n\tat org.apache.shardingsphere.core.PreparedQueryShardingEngine.route(PreparedQueryShardingEngine.java:60)\r\n\tat org.apache.shardingsphere.core.BaseShardingEngine.shard(BaseShardingEngine.java:64)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.shard(ShardingPreparedStatement.java:224)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:170)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:45)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:73)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:115)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)\r\n\tat cn.uce.core.db.interceptor.BatchUpdateExecutorInterceptor.intercept(BatchUpdateExecutorInterceptor.java:79)\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)\r\n\tat com.sun.proxy.$Proxy40.update(Unknown Source)\r\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:75)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\r\n\tat com.sun.proxy.$Proxy40.update(Unknown Source)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\r\n\tat com.sun.proxy.$Proxy40.update(Unknown Source)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:170)", "url": "https://github.com/apache/shardingsphere/issues/2252", "user": "zhangfenghuang", "labels": ["bug", "sharding"], "created": "2019-04-23 13:17:31", "closed": "2019-05-05 12:02:55", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "Wrong comment format of windows start.bat", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0.0-RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\n[start.bat](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-distribution/sharding-proxy-distribution/src/main/resources/bin/start.bat)\r\nBatch Comment `@rem` or `rem`\r\n### Actual behavior\r\nshell comment `#`\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2247", "user": "xlongshu", "labels": ["bug", "proxy"], "created": "2019-04-22 09:23:40", "closed": "2019-04-22 09:48:43", "commits": {"8092b8597c736f40fb0d2d14afb92747560b541e": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8092b8597c736f40fb0d2d14afb92747560b541e", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["c78492931fd591ce152ee297e5d1df08e47eaf73", "5907a9cee9b565094caf6ff439007608cdf4d2aa"], "nameRev": "8092b8597c736f40fb0d2d14afb92747560b541e tags/4.0.0-RC2~1032", "commitMessage": "Merge pull request #2248 from xlongshu/dev\n\n#2247, fix Batch Comment in Sharding-Proxy start.bat", "commitDateTime": "2019-04-22 17:48:42", "authoredDateTime": "2019-04-22 17:48:42", "commitGitStats": [{"filePath": "sharding-distribution/sharding-proxy-distribution/src/main/resources/bin/start.bat", "insertions": 16, "deletions": 16, "lines": 32}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "select * missing column", "body": "(1)alter table my_orders add dc decimal(10,2);\r\n\r\n(2)\r\nshow create table my_orders\\G\r\ncreate table my_orders (\r\nid int(10) not null auto_increment,\r\nname varchar(40) default null,\r\ncreate_time datetime default null,\r\nage int(11) default null,\r\nttt datetime(3) default null,\r\ndc decimal(10,2) default null,\r\nprimary key (id)\r\n)engine=innodb default charset=utf8;\r\n\r\n(3)\r\ninsert into my_orders (name,create_time,age) values ('ruiaylin1','2019-04-16 18:00:00',15);\r\n\r\n(4)dc column missing\r\nselect * from my_orders;\r\nid     name         create_time         age     ttt     \r\n1   ruiaylin1   2019-04-16 18:00:00      15     NULL\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/2226", "user": "michaeljinxq", "labels": ["bug", "proxy"], "created": "2019-04-18 02:54:14", "closed": "2019-04-30 14:36:21", "commits": {"f88fd29fc345dfb31fdce12e9e96cbfa0fd2402d": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "f88fd29fc345dfb31fdce12e9e96cbfa0fd2402d", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["aec119d196fb18d12ed7d5f6227daa8c21ee2fb8", "667144ba9bbe883eb341adf4c5be5186697e595f"], "nameRev": "f88fd29fc345dfb31fdce12e9e96cbfa0fd2402d tags/4.0.0-RC2~910", "commitMessage": "Merge pull request #2310 from tuohai666/dev\n\n#2226, select * missing column after alter", "commitDateTime": "2019-04-30 22:36:20", "authoredDateTime": "2019-04-30 22:36:20", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/datasource/JDBCRawBackendDataSourceFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/main/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/MySQLXAProperties.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-2pc/sharding-transaction-xa/sharding-transaction-xa-core/src/test/java/org/apache/shardingsphere/transaction/xa/jta/datasource/properties/dialect/MySQLXAPropertiesTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JDBCRawBackendDataSourceFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.datasource.JDBCRawBackendDataSourceFactory.build(java.lang.String,org.apache.shardingsphere.shardingproxy.config.yaml.YamlDataSourceParameter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLXAProperties.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.transaction.xa.jta.datasource.properties.dialect.MySQLXAProperties.build(org.apache.shardingsphere.core.config.DatabaseAccessConfiguration)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLXAPropertiesTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.transaction.xa.jta.datasource.properties.dialect.MySQLXAPropertiesTest.assertBuild()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "wrong result for the null value in  int column ", "body": "age null \r\nmysql> insert into my_orders(name,create_time,age,ttt,dc) values('ruiaylin1', '2019-04-16 18:00:00', null,null, 14.56) ;\r\nQuery OK, 1 row affected (0.10 sec)\r\n\r\n\u3010proxy\u3011\r\nmysql> select * from my_orders ;                  \r\n+------+-----------+-----------------------+------+------+-------+\r\n| id   | name      | create_time           | age  | ttt  | dc    |\r\n+------+-----------+-----------------------+------+------+-------+\r\n|    1 | ruiaylin  | 2019-04-15 18:00:00.0 |    0 | NULL |  NULL |\r\n|    2 | ruiaylin1 | 2019-04-16 18:00:00.0 |   15 | NULL |  NULL |\r\n|    3 | ruiaylin1 | 2019-04-16 18:00:00.0 |   15 | NULL | 14.56 |\r\n|    4 | ruiaylin1 | 2019-04-16 18:00:00.0 |    0 | NULL | 14.56 |   # age 0\r\n+------+-----------+-----------------------+------+------+-------+\r\n4 rows in set (0.03 sec)\r\n\r\n\u3010mysql\u3011\r\nmysql> mysql> select * from  my_orders_201904 ;\r\n+----+-----------+---------------------+------+------+-------+\r\n| id | name      | create_time         | age  | ttt  | dc    |\r\n+----+-----------+---------------------+------+------+-------+\r\n|  1 | ruiaylin  | 2019-04-15 18:00:00 | NULL | NULL |  NULL |\r\n|  2 | ruiaylin1 | 2019-04-16 18:00:00 |   15 | NULL |  NULL |\r\n|  3 | ruiaylin1 | 2019-04-16 18:00:00 |   15 | NULL | 14.56 |\r\n|  4 | ruiaylin1 | 2019-04-16 18:00:00 | NULL | NULL | 14.56 |    # age NULL\r\n+----+-----------+---------------------+------+------+-------+\r\n4 rows in set (0.00 sec)\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/2224", "user": "michaeljinxq", "labels": ["bug", "proxy"], "created": "2019-04-18 01:53:24", "closed": "2019-04-29 08:54:23", "commits": {"d7a67e3f6012487b7c4247cd13f3c8ba325e9e6d": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "d7a67e3f6012487b7c4247cd13f3c8ba325e9e6d", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["03e4d0174272f1cff520ecc5e257352767f45658", "f96642cde22a46d9cee2c1837b245614df25f53c"], "nameRev": "d7a67e3f6012487b7c4247cd13f3c8ba325e9e6d tags/4.0.0-RC2~940", "commitMessage": "Merge pull request #2296 from tuohai666/dev\n\n#2224, wrong result for the null value in int column", "commitDateTime": "2019-04-29 16:54:22", "authoredDateTime": "2019-04-29 16:54:22", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 31, "deletions": 22, "lines": 53}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MemoryQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.getResultData(java.sql.ResultSet)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryResultUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil.getValue(java.sql.ResultSet,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryResultUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBit()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBoolean()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByTinyint()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueBySmallint()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByInteger()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBigint()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByNumeric()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByDecimal()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByFloat()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByDouble()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByChar()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByVarchar()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByLongVarchar()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBinary()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByVarBinary()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByLongVarBinary()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByDate()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByTime()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByTimestamp()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByClob()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByBlob()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertGetValueByOther()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest.assertNullResultValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Incorrect integer value: 'NULL' for column", "body": "\u3010 int \u3011\r\n(1)create table tb1 (id int);\r\n\r\n(2)insert into tb1 values (null);\r\nERROR 1366 (HY000): Incorrect integer value: 'NULL' for column 'id' at row 1\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/2222", "user": "michaeljinxq", "labels": ["bug", "sharding"], "created": "2019-04-17 05:31:47", "closed": "2019-04-17 15:28:02", "commits": {"0fe9f5f7905e578e7bab763dd7b573b7725e704e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0fe9f5f7905e578e7bab763dd7b573b7725e704e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["97822ab04a8e8ca4e1801a9e6e74297ddd45b809", "733c23f5d571c5ca432bb2b46ee826926057d152"], "nameRev": "0fe9f5f7905e578e7bab763dd7b573b7725e704e tags/4.0.0-RC2~1057", "commitMessage": "Merge pull request #2223 from codefairy08/dev_bug_fixs_2211\n\n#2222 bug fixs and add test case", "commitDateTime": "2019-04-17 23:27:44", "authoredDateTime": "2019-04-17 23:27:44", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/common/dql/SubqueryFiller.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/sharding/dml/OrConditionFiller.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/sql/segment/dml/expr/CommonExpressionSegment.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/insert.xml", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-sql-test/src/main/resources/sql/dml/insert.xml", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SubqueryFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.common.dql.SubqueryFiller.fill(org.apache.shardingsphere.core.parse.antlr.sql.segment.dml.expr.SubquerySegment,org.apache.shardingsphere.core.parse.antlr.sql.statement.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "OrConditionFiller.java", "spoonMethods": []}, {"spoonFilePath": "CommonExpressionSegment.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.sql.segment.dml.expr.CommonExpressionSegment.getSQLExpression(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "mysql insert decimal error", "body": "sharding proxy version\r\nhttps://dist.apache.org/repos/dist/dev/incubator/shardingsphere/4.0.0-RC1/apache-shardingsphere-incubating-4.0.0-RC1-sharding-proxy-bin.tar.gz\r\n\r\n(1)\r\ncreate table tbname1 (id int primary key,key_price decimal(16,2) DEFAULT NULL);\r\n\r\n(2)\r\nmysql> INSERT INTO tbname1 VALUES (1,13.00);\r\nERROR 10002 (C1000): 2Unknown exception: [For input string: \"13.00\"]\r\n\r\nthanks", "url": "https://github.com/apache/shardingsphere/issues/2211", "user": "michaeljinxq", "labels": ["bug", "sharding"], "created": "2019-04-15 11:06:59", "closed": "2019-04-16 12:59:36", "commits": {"de98230384c4e66d30f5ed5a906e659e5f6d9d86": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "de98230384c4e66d30f5ed5a906e659e5f6d9d86", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d26e3c3e49b596da0f11ce13f0a8517a14fd4b81", "75e71edb3f4213712111675f1cc6bd7238627130"], "nameRev": "de98230384c4e66d30f5ed5a906e659e5f6d9d86 tags/4.0.0-RC2~1076", "commitMessage": "Merge pull request #2216 from codefairy08/dev_bug_fixs_2211\n\n#2211 bug fixs and add test case", "commitDateTime": "2019-04-16 20:58:40", "authoredDateTime": "2019-04-16 20:58:40", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/util/NumberUtil.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/insert.xml", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-sql-test/src/main/resources/sql/dml/insert.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NumberUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.util.NumberUtil.getExactlyNumber(java.lang.String,int)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Support RLIKE  expression", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nREGEXP = RLIKE in MySQL, so support rlike  expression.\r\n### Actual behavior\r\nNot support\r\n### Reason analyze (If you can)\r\nRef:\r\nhttps://dev.mysql.com/doc/refman/5.7/en/regexp.html#operator_regexp\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2208", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-04-15 07:13:58", "closed": "2019-04-15 08:47:35", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "When use ShardingQueryAssistedEncryptor to find assistedQueryColumns, an outOfIndex exception will occur.", "body": "Here is the point:\r\n```\r\nShardingEncryptorStrategy\r\n\r\n/**\r\n     * Get assisted query column.\r\n     *\r\n     * @param logicTableName logic table name\r\n     * @param columnName column name\r\n     * @return assisted query column\r\n     */\r\n    public Optional<String> getAssistedQueryColumn(final String logicTableName, final String columnName) {\r\n        for (ColumnNode each : columns) {\r\n            ColumnNode target = new ColumnNode(logicTableName, columnName);\r\n            if (each.equals(target)) {\r\n                return Optional.of(assistedQueryColumns.get(columns.indexOf(target)).getColumnName());\r\n            }\r\n        }\r\n        return Optional.absent();\r\n    }\r\n```", "url": "https://github.com/apache/shardingsphere/issues/2205", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-04-15 03:12:16", "closed": "2019-04-15 04:34:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": " select a.id ,c.id  order by a.id, the result  can not sort by designated column", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n   3.0.0.M1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC \r\n### Expected behavior\r\ncorrect sort by designated column,or when cannot surpport throw exception inform  user \uff1f\r\n\r\n### Actual behavior\r\nmulti-result can not correct sort by designated column\r\n\r\n### Reason analyze (If you can)\r\n i see the encapsulate select columns is map  and map's key from columnLabel,so the same column will be overwrite  ,when  setIndexForOrderItem(columnLabelIndexMap, orderByItems);  orderby column   will  find  error index ,so that result sort is wrong .i use alias with different table same column name and order by their alias can get a right result\r\n\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nSELECT\r\n        i.user_id  ,o.user_id \r\n        FROM\r\n        t_order o, t_order_item i\r\n        WHERE\r\n        o.order_id = i.order_id\r\n        order by i.user_id\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2204", "user": "lucy3399", "labels": ["bug", "sharding"], "created": "2019-04-14 17:07:48", "closed": "2019-09-16 10:25:45", "commits": {"2c2ca80b6c02cac850bc0f47242d70f037e7b135": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 154.00027777777777, "commitsDetails": [{"commitHash": "2c2ca80b6c02cac850bc0f47242d70f037e7b135", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["fe1833aa2f2f00df487d5c443527e6d292304cb2"], "nameRev": "2c2ca80b6c02cac850bc0f47242d70f037e7b135 tags/4.0.0-RC3~188", "commitMessage": "Fix #2204 (#3043)\n\n* Fixed #2204, order by item locate index correctly with owner.\r\n\r\n* Add unit test for #2204\r\n", "commitDateTime": "2019-09-16 18:25:44", "authoredDateTime": "2019-09-16 18:25:44", "commitGitStats": [{"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/segment/select/item/SelectItems.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/statement/dml/ShardingSelectOptimizedStatement.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/sharding/segment/select/item/SelectItemsTest.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/sharding/statement/dml/ShardingSelectOptimizedStatementTest.java", "insertions": 148, "deletions": 0, "lines": 148}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SelectItems.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.sharding.segment.select.item.SelectItems.findItemIndex(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingSelectOptimizedStatement.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.sharding.statement.dml.ShardingSelectOptimizedStatement.setIndexForOrderItem(java.util.Map,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SelectItemsTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.sharding.segment.select.item.SelectItemsTest.assertFindItemIndex()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.optimize.sharding.segment.select.item.SelectItemsTest.assertFindItemIndexFailure()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingSelectOptimizedStatementTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimize.sharding.statement.dml.ShardingSelectOptimizedStatementTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "If aes.key.value configured is integer, AesEncryptor can not run normally.", "body": "", "url": "https://github.com/apache/shardingsphere/issues/2199", "user": "tristaZero", "labels": ["bug"], "created": "2019-04-12 07:42:36", "closed": "2019-04-12 18:06:14", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Handle null exception of encrypt()", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nshardinng-jdbc\r\n### Expected behavior\r\n\r\n### Actual behavior\r\nWhen query the data that  is null or \"\" in datasource, sharding-jdbc will throw null excpetion.\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2196", "user": "tristaZero", "labels": ["bug", "sharding"], "created": "2019-04-12 05:09:27", "closed": "2019-04-12 07:41:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Table doesn't exist when sharding value in different datasource with in expression", "body": "## Table doesn't exist when sharding value in different data source with in expression\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\n21:31:45.941 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_0 ::: select * from ts_order_0001 where id = 1 or id = 3\r\n21:31:45.941 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_1 ::: select * from ts_order_0003 where id = 1 or id = 3\r\n### Actual behavior\r\n21:08:30.000 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_0 ::: select * from ts_order_0001 where id in (1, 3)\r\n21:08:30.000 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_0 ::: select * from ts_order_0003 where id in (1, 3)\r\n21:08:30.000 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_1 ::: select * from ts_order_0001 where id in (1, 3)\r\n21:08:30.000 [main] INFO  ShardingSphere-SQL - Actual SQL: ds_1 ::: select * from ts_order_0003 where id in (1, 3)\r\nException in thread \"main\" com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'test_d_0.ts_order_0003' doesn't exist\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\ndependency\r\n\r\n```xml\r\n\t  <dependency>\r\n\t\t  <groupId>com.alibaba</groupId>\r\n\t\t  <artifactId>druid</artifactId>\r\n\t\t  <version>1.0.9</version>\r\n\t  </dependency>\r\n\r\n\t  <dependency>\r\n\t\t  <groupId>org.apache.shardingsphere</groupId>\r\n\t\t  <artifactId>sharding-jdbc-core</artifactId>\r\n\t\t  <version>4.0.0-RC1</version>\r\n\t  </dependency>\r\n```\r\n\r\n\r\n\r\nsql\r\n\r\n```sql\r\ncreate database test_d_0;\r\ncreate database test_d_1;\r\nCREATE TABLE test_d_0.`ts_order_0000` (`id` BIGINT NOT NULL AUTO_INCREMENT,PRIMARY KEY (`id`));\r\nCREATE TABLE test_d_0.`ts_order_0001` (`id` BIGINT NOT NULL AUTO_INCREMENT,PRIMARY KEY (`id`));\r\nCREATE TABLE test_d_1.`ts_order_0002` (`id` BIGINT NOT NULL AUTO_INCREMENT,PRIMARY KEY (`id`));\r\nCREATE TABLE test_d_1.`ts_order_0003` (`id` BIGINT NOT NULL AUTO_INCREMENT,PRIMARY KEY (`id`));\r\n```\r\n\r\nJava Code\r\n\r\n```java\r\n        BufferedReader reader = new BufferedReader(new InputStreamReader(ShardingDataSourceTest.class\r\n                        .getResourceAsStream(\"/sharding-config-example-1.yaml\"), \"utf-8\"));\r\n        StringBuffer sb = new StringBuffer();\r\n        CharBuffer charBuffer = CharBuffer.allocate(32);\r\n        for (int count = reader.read(charBuffer); count > 0; count = reader.read(charBuffer)) {\r\n            sb.append(charBuffer.flip());\r\n        }\r\n    \r\n        DataSource dataSource = YamlShardingDataSourceFactory.createDataSource(sb.toString().getBytes(\"utf-8\"));\r\n        Connection connection = dataSource.getConnection();\r\n        Statement st = connection.createStatement();\r\n        ResultSet rs = st.executeQuery(\"select * from ts_order where id in (1, 3)\");\r\n```\r\n\r\n\r\n\r\nsharding rule\r\nsharding-config-example-1.yaml\r\n\r\n```yaml\r\ndataSources: \r\n  ds_0: !!com.alibaba.druid.pool.DruidDataSource\r\n    driverClassName: com.mysql.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/test_d_0\r\n    username: root\r\n    password: root135\r\n  ds_1: !!com.alibaba.druid.pool.DruidDataSource\r\n    driverClassName: com.mysql.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/test_d_1\r\n    username: root\r\n    password: root135\r\n\r\nshardingRule:\r\n  tables:\r\n    ts_order:\r\n      actualDataNodes: ds_0.ts_order_0000,ds_0.ts_order_0001,ds_1.ts_order_0002,ds_1.ts_order_0003\r\n      databaseStrategy:\r\n        inline:\r\n          shardingColumn: id\r\n          algorithmExpression: ds_${new BigDecimal(id).abs().divideAndRemainder(4)[1].longValue().intdiv(2)}\r\n      tableStrategy:\r\n        inline:\r\n          shardingColumn: id\r\n          algorithmExpression: ts_order_${String.format(\"%04d\",new BigDecimal(id).abs().divideAndRemainder(4)[1].longValue())}\r\n\r\nprops:\r\n  sql.show: true\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2193", "user": "lwtdev", "labels": ["bug", "sharding"], "created": "2019-04-11 13:33:18", "closed": "2019-09-12 14:43:27", "commits": {"1c1d7df2f7b11d4e6f657de558e49efc11e9cd36": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 154.00027777777777, "commitsDetails": [{"commitHash": "1c1d7df2f7b11d4e6f657de558e49efc11e9cd36", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["3f75f9cef809e2077f9a5ba9c9febc92d4b37e78", "518987aeda09840157d996d71c72ee3daceb6726"], "nameRev": "1c1d7df2f7b11d4e6f657de558e49efc11e9cd36 tags/4.0.0-RC2~1086", "commitMessage": "Merge pull request #2210 from KomachiSion/dev\n\nfix #2193", "commitDateTime": "2019-04-16 16:53:51", "authoredDateTime": "2019-04-16 16:53:51", "commitGitStats": [{"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngine.java", "insertions": 14, "deletions": 1, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StandardRoutingEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.removeNonExistNodes(java.util.Collection,org.apache.shardingsphere.core.rule.TableRule)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.type.standard.StandardRoutingEngine.route(org.apache.shardingsphere.core.rule.TableRule,java.util.List,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "ShardingResultSet getTimestamp throw ClassCastException when using oracle database", "body": "## Bug Report\r\n\r\nClassCastException is thrown when querying the timestamp type field of the Oracle database\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC1-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\nquery successfully\r\n\r\n### Actual behavior\r\n\r\n```\r\njava.lang.ClassCastException: oracle.sql.TIMESTAMP cannot be cast to java.sql.Timestamp\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ShardingResultSet.getTimestamp(ShardingResultSet.java:223)\r\n\tat org.hibernate.type.descriptor.sql.TimestampTypeDescriptor$2.doExtract(TimestampTypeDescriptor.java:76)\r\n\tat org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:238)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:234)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:224)\r\n\tat org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:300)\r\n\tat org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:2790)\r\n\tat org.hibernate.loader.Loader.loadFromResultSet(Loader.java:1729)\r\n\tat org.hibernate.loader.Loader.instanceNotYetLoaded(Loader.java:1655)\r\n\tat org.hibernate.loader.Loader.getRow(Loader.java:1544)\r\n\tat org.hibernate.loader.Loader.getRowFromResultSet(Loader.java:727)\r\n\tat org.hibernate.loader.Loader.processResultSet(Loader.java:972)\r\n\tat org.hibernate.loader.Loader.doQuery(Loader.java:930)\r\n\tat org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2617)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2600)\r\n\tat org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2429)\r\n\tat org.hibernate.loader.Loader.list(Loader.java:2424)\r\n\tat org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)\r\n\tat org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)\r\n\tat org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)\r\n\tat org.hibernate.internal.SessionImpl.list(SessionImpl.java:1326)\r\n\tat org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)\r\n\tat org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:606)\r\n\tat org.hibernate.jpa.internal.QueryImpl.getResultList(QueryImpl.java:483)\r\n\tat org.hibernate.jpa.criteria.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:50)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.readPage(SimpleJpaRepository.java:589)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:409)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:377)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n```\r\n\r\n### Reason analyze (If you can)\r\n\r\nShardingResultSet cached result as QueryRow which created by jdbc.getObject method.\r\nBut ojdbc.getObject will return `oracle.sql.TIMESTAMP` instead of `java.sql.Timestamp`\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nojdbc version is 12.1.0.1\r\n", "url": "https://github.com/apache/shardingsphere/issues/2159", "user": "KomachiSion", "labels": ["bug", "jdbc"], "created": "2019-04-04 05:44:23", "closed": "2019-04-09 08:34:52", "commits": {"fdd3bb81ef495e6c3d5ad92b5b74c2aaf9ff5ee4": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "fdd3bb81ef495e6c3d5ad92b5b74c2aaf9ff5ee4", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["04682faf3d31eef68fa066c256ba8574920bb7b5", "3c341ec58753f503fa0cf2c0c5371900a10cd38e"], "nameRev": "fdd3bb81ef495e6c3d5ad92b5b74c2aaf9ff5ee4 tags/4.0.0-RC1~39", "commitMessage": "Merge pull request #2172 from KomachiSion/dev\n\nFix #2159", "commitDateTime": "2019-04-09 16:34:51", "authoredDateTime": "2019-04-09 16:34:51", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtil.java", "insertions": 82, "deletions": 0, "lines": 82}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/AllExecuteTests.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultUtilTest.java", "insertions": 240, "deletions": 0, "lines": 240}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MemoryQueryResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.getResultData(java.sql.ResultSet)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryResultUtil.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtil", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllExecuteTests.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.AllExecuteTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryResultUtilTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultUtilTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SQL `Show tables` are show when config huge mount of actual tables", "body": "If user config huge mount of actual tables, sql `show tables` are very slow.\r\nThe reason is program need loop all actual tables and find logic table.\r\nJust add a set to cache actual tables if program need to fetch them.\r\n", "url": "https://github.com/apache/shardingsphere/issues/2153", "user": "terrymanu", "labels": ["bug"], "created": "2019-04-02 09:00:04", "closed": "2019-04-02 09:00:45", "commits": {"8b99619f43ae941b85518222e651a5869f2e36da": {"commitGHEventType": "closed", "commitUser": "terrymanu"}, "9f59fff5603a9024ce304eae05952f9c7adc277a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "7b6ab31948242b5a9fd9d461dcfe909ce17bf64e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8b99619f43ae941b85518222e651a5869f2e36da", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["6d90ffa8736fd0dfcb2134cd5eda0f645aa76d27"], "nameRev": "8b99619f43ae941b85518222e651a5869f2e36da tags/4.0.0-RC1~113", "commitMessage": "fix #2153\n", "commitDateTime": "2019-04-02 17:00:35", "authoredDateTime": "2019-04-02 17:00:35", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "insertions": 17, "deletions": 6, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableRule.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rule.TableRule.isExisted(java.lang.String)", "TOT": 13, "UPD": 2, "INS": 2, "MOV": 7, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rule.TableRule", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rule.TableRule.getActualTables()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9f59fff5603a9024ce304eae05952f9c7adc277a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["8b99619f43ae941b85518222e651a5869f2e36da"], "nameRev": "9f59fff5603a9024ce304eae05952f9c7adc277a tags/4.0.0-RC1~112", "commitMessage": "fix #2153, skip toString of actualTables\n", "commitDateTime": "2019-04-02 17:03:13", "authoredDateTime": "2019-04-02 17:03:13", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/TableRule.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableRule.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rule.TableRule", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7b6ab31948242b5a9fd9d461dcfe909ce17bf64e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["9f59fff5603a9024ce304eae05952f9c7adc277a"], "nameRev": "7b6ab31948242b5a9fd9d461dcfe909ce17bf64e tags/4.0.0-RC1~111", "commitMessage": "fix #2153, use unicast route for show tables\n", "commitDateTime": "2019-04-02 18:09:40", "authoredDateTime": "2019-04-02 18:09:40", "commitGitStats": [{"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/RoutingEngineFactory.java", "insertions": 2, "deletions": 5, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RoutingEngineFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactory.getDALRoutingEngine(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,java.util.Collection)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8b99619f43ae941b85518222e651a5869f2e36da", "9f59fff5603a9024ce304eae05952f9c7adc277a", "7b6ab31948242b5a9fd9d461dcfe909ce17bf64e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 20, "deletions": 12, "lines": 32, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 27, "UPD": 2, "INS": 10, "MOV": 11, "DEL": 4, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule", "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route"], "changesInPackagesSPOON": ["org.apache.shardingsphere.core.rule.TableRule", "org.apache.shardingsphere.core.rule.TableRule.isExisted(java.lang.String)", "org.apache.shardingsphere.core.route.router.sharding.RoutingEngineFactory.getDALRoutingEngine(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,java.util.Collection)", "org.apache.shardingsphere.core.rule.TableRule.getActualTables()"]}, {"title": "MemoryQueryResult getColumnIndex throw exception when using Oracle database", "body": "## Bug Report\r\n\r\nwhen execute Oracle's DQL, getting the result throws an exception\r\n```\r\njava.lang.IndexOutOfBoundsException: Index: 0, Size: 0\r\n\tat java.util.ArrayList.rangeCheck(ArrayList.java:657)\r\n\tat java.util.ArrayList.get(ArrayList.java:433)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.getColumnIndex(QueryResultMetaData.java:140)\r\n\tat org.apache.shardingsphere.core.execute.sql.execute.result.MemoryQueryResult.getValue(MemoryQueryResult.java:95)\r\n\tat org.apache.shardingsphere.core.merge.dql.common.StreamMergedResult.getValue(StreamMergedResult.java:56)\r\n\tat org.apache.shardingsphere.core.merge.dql.common.DecoratorMergedResult.getValue(DecoratorMergedResult.java:46)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.resultset.ShardingResultSet.getString(ShardingResultSet.java:141)\r\n\tat org.hibernate.type.descriptor.sql.VarcharTypeDescriptor$2.doExtract(VarcharTypeDescriptor.java:62)\r\n\tat org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:261)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)\r\n\tat org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:247)\r\n\tat org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:333)\r\n\tat org.hibernate.loader.Loader.extractKeysFromResultSet(Loader.java:794)\r\n\tat org.hibernate.loader.Loader.getRowFromResultSet(Loader.java:719)\r\n\tat org.hibernate.loader.Loader.processResultSet(Loader.java:991)\r\n\tat org.hibernate.loader.Loader.doQuery(Loader.java:949)\r\n\tat org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2692)\r\n\tat org.hibernate.loader.Loader.doList(Loader.java:2675)\r\n\tat org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507)\r\n\tat org.hibernate.loader.Loader.list(Loader.java:2502)\r\n\tat org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:502)\r\n\tat org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:392)\r\n\tat org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)\r\n\tat org.hibernate.internal.SessionImpl.list(SessionImpl.java:1490)\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1445)\r\n\tat org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414)\r\n\tat org.hibernate.query.Query.getResultList(Query.java:146)\r\n\tat org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:72)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.readPage(SimpleJpaRepository.java:570)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:389)\r\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:357)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)\r\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:641)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:590)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)\r\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)\r\n\tat com.sun.proxy.$Proxy88.findAll(Unknown Source)\r\n\tat com.fudabd.oracletest.controller.TerminalController.listTerminal(TerminalController.java:83)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:891)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:981)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:873)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:635)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:858)\r\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:806)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1498)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n3.1.0 and 4.0.0-RC1-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\nget results correctly\r\n\r\n### Actual behavior\r\n\r\nthrow exception `java.lang.IndexOutOfBoundsException: Index: 0, Size: 0`\r\n\r\n### Reason analyze (If you can)\r\n\r\nMemoryQueryResult will get the table metadata when init, the columnLabel in oracle metadata is upper case. \r\nBut the input of `getColumnIndex` method is lower case so that can't find the index.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n1. clone example codes\r\n2. change sharding-jdbc version to 3.1.0 or 4.0.0-RC1-SNAPSHOT\r\n3. check configuration of jdbc at file `application-sharding-databases-oracle.properties`\r\n4. run `OracleTestApplication`\r\n5. visit http://localhost:8080/insertTest\r\n6. visit http://localhost:8080/listTerminal\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\nhttps://github.com/fdlzp/sharding-jdbc_jpa_oracle\r\n", "url": "https://github.com/apache/shardingsphere/issues/2152", "user": "KomachiSion", "labels": ["bug", "jdbc"], "created": "2019-04-02 08:44:48", "closed": "2019-04-10 15:30:15", "commits": {"ebf015aed6028dc7187a0a9ec0c828277978d021": {"commitGHEventType": "closed", "commitUser": "terrymanu"}, "7284bb7d972b63845a22a8694857b8528c8aa77d": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "ebf015aed6028dc7187a0a9ec0c828277978d021", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["13e6a7658dd7a92033e6ed3b12b2352383e1aff2"], "nameRev": "ebf015aed6028dc7187a0a9ec0c828277978d021 tags/4.0.0-RC1~39^2~4", "commitMessage": "Try fix #2152\n", "commitDateTime": "2019-04-09 10:08:51", "authoredDateTime": "2019-04-03 16:09:33", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaData.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryResultMetaData.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.getColumnLabelAndIndexMap(java.sql.ResultSetMetaData)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.getColumnIndex(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7284bb7d972b63845a22a8694857b8528c8aa77d", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d7a7489d587b84a5a2cb302a6430fcacc94cd70f", "5a5ccfefbc57dcb523a3e74360e69a0874e98d0e"], "nameRev": "7284bb7d972b63845a22a8694857b8528c8aa77d tags/4.0.0-RC1~19", "commitMessage": "Merge pull request #2182 from KomachiSion/dev\n\nFix #2152", "commitDateTime": "2019-04-10 23:30:14", "authoredDateTime": "2019-04-10 23:30:14", "commitGitStats": [{"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaData.java", "insertions": 10, "deletions": 16, "lines": 26}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutorTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutorTest.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryResultMetaData.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.getColumnLabelAndIndexMap(java.sql.ResultSetMetaData)", "TOT": 8, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.getColumnCount()", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.getColumnLabel(int)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.getColumnIndex(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "DQLMergeEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngine.getColumnLabelIndexMap(org.apache.shardingsphere.core.execute.sql.execute.result.QueryResult)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "PreparedStatementExecutorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutorTest.assertExecuteQueryForSinglePreparedStatementSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.executor.PreparedStatementExecutorTest.assertExecuteQueryForMultiplePreparedStatementsSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StatementExecutorTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.executor.StatementExecutorTest.assertExecuteQueryForSingleStatementSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.executor.StatementExecutorTest.assertExecuteQueryForMultipleStatementsSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ebf015aed6028dc7187a0a9ec0c828277978d021"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute"], "changesInPackagesSPOON": ["org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.getColumnIndex(java.lang.String)", "org.apache.shardingsphere.core.execute.sql.execute.result.QueryResultMetaData.getColumnLabelAndIndexMap(java.sql.ResultSetMetaData)"]}, {"title": "OpenTracingSQLExecutionHook.toStringList NullPointerException", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n3.0.1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nsharding-opentracing log trace without effect main execute\r\n### Actual behavior\r\nlog trace throw NullPointerException effect sql execute\r\n### Reason analyze (If you can)\r\nOpenTracingSQLExecutionHook.toStringList method, when params has null, such as insert, call guava Joiner.toString throw NullPointerException \r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nAs above\r\n### Example codes for reproduce this issue (such as a github link).\r\nAs above", "url": "https://github.com/apache/shardingsphere/issues/2142", "user": "zhanghj-java", "labels": ["bug", "jdbc"], "created": "2019-04-01 04:19:06", "closed": "2019-04-22 08:33:25", "commits": {"deb0d554388f0a2aec62dff36f62b9dc8be6c488": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "deb0d554388f0a2aec62dff36f62b9dc8be6c488", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["02dd39ae30e657298ffb376c4349f2daef7f5354", "c2f4425ee749a288078c5c3045fc984e691ae6c8"], "nameRev": "deb0d554388f0a2aec62dff36f62b9dc8be6c488 tags/4.0.0-RC2~465", "commitMessage": "Merge pull request #2541 from tuohai666/npe1\n\n#2142, another case didn't fixed before", "commitDateTime": "2019-06-12 13:13:12", "authoredDateTime": "2019-06-12 13:13:12", "commitGitStats": [{"filePath": "sharding-opentracing/src/main/java/org/apache/shardingsphere/opentracing/hook/OpenTracingSQLExecutionHook.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OpenTracingSQLExecutionHook.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.opentracing.hook.OpenTracingSQLExecutionHook.toString(java.util.List)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "(mybatis + shardingjdbc ) multithreading paging query Incorrect result ", "body": "environment\uff1a spring boot + mybatis +  shatdingjdbc\r\nmultithreading paging query,database exists enough data;\r\nthread1 logic SQL: select * from table_name limit 0,2;\r\nthread2 logic SQL: select * from table_name limit 2,2;\r\n....\r\nsometimes thread1 or thread2 return result's size is 0 or less than 2, sometimes thread1 and thread2 return result exist repeated data.\r\n", "url": "https://github.com/apache/shardingsphere/issues/2136", "user": "matchmen", "labels": ["bug", "sharding"], "created": "2019-03-29 10:49:37", "closed": "2019-04-04 07:00:38", "commits": {"35c1d0f55f4e6a244570de0e1cd5156cac9213f3": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "35c1d0f55f4e6a244570de0e1cd5156cac9213f3", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["3df920f3aea5a609890be15815d401937f6d353d"], "nameRev": "35c1d0f55f4e6a244570de0e1cd5156cac9213f3 tags/4.0.0-RC1~105", "commitMessage": "fix #2136\n", "commitDateTime": "2019-04-04 15:00:30", "authoredDateTime": "2019-04-04 15:00:30", "commitGitStats": [{"filePath": "sharding-core/sharding-core-entry/src/main/java/org/apache/shardingsphere/core/BaseShardingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergeEngineFactory.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngine.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/AllMergerTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/MergeEngineFactoryTest.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 40, "deletions": 36, "lines": 76}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/iterator/IteratorStreamMergedResultTest.java", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResultTest.java", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResultTest.java", "insertions": 12, "deletions": 9, "lines": 21}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResultTest.java", "insertions": 14, "deletions": 10, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngineTest.java", "insertions": 118, "deletions": 45, "lines": 163}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/SQLRouteResult.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ParsingSQLRouter.java", "insertions": 18, "deletions": 3, "lines": 21}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingStatement.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseShardingEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.BaseShardingEngine.rewriteAndConvert(java.lang.String,java.util.List,org.apache.shardingsphere.core.route.SQLRouteResult)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MergeEngineFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.MergeEngineFactory.newInstance(org.apache.shardingsphere.core.constant.DatabaseType,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,java.util.List)", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.MergeEngineFactory.newInstance(org.apache.shardingsphere.core.constant.DatabaseType,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.route.SQLRouteResult,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,java.util.List)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DQLMergeEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngine", "TOT": 7, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngine.decorate(org.apache.shardingsphere.core.merge.MergedResult)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllMergerTests.java", "spoonMethods": []}, {"spoonFilePath": "MergeEngineFactoryTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.MergeEngineFactoryTest.assertNewInstanceWithSelectStatement()", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.MergeEngineFactoryTest.assertNewInstanceWithDALStatement()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.MergeEngineFactoryTest.assertNewInstanceWithOtherStatement()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DQLMergeEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResultWithMySQLLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResultWithOracleLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResultWithSQLServerLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildOrderByStreamMergedResultWithMySQLLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildOrderByStreamMergedResultWithOracleLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildOrderByStreamMergedResultWithSQLServerLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByStreamMergedResultWithMySQLLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByStreamMergedResultWithOracleLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByStreamMergedResultWithSQLServerLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithMySQLLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithOracleLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithSQLServerLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithAggregationOnlyWithMySQLLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithAggregationOnlyWithOracleLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithAggregationOnlyWithSQLServerLimit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResult()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResultWithLimit()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildOrderByStreamMergedResult()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByStreamMergedResult()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResult()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.assertBuildGroupByMemoryMergedResultWithAggregationOnly()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.DQLMergeEngineTest.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GroupByMemoryMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByMemoryMergedResultTest.assertNextForResultSetsAllEmpty()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByMemoryMergedResultTest.assertNextForSomeResultSetsEmpty()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByMemoryMergedResultTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByMemoryMergedResultTest.setUp()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GroupByStreamMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByStreamMergedResultTest.assertNextForResultSetsAllEmpty()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByStreamMergedResultTest.assertNextForSomeResultSetsEmpty()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByStreamMergedResultTest.assertNextForMix()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByStreamMergedResultTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.groupby.GroupByStreamMergedResultTest.setUp()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IteratorStreamMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.iterator.IteratorStreamMergedResultTest.assertNextForResultSetsAllEmpty()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.iterator.IteratorStreamMergedResultTest.assertNextForResultSetsAllNotEmpty()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.iterator.IteratorStreamMergedResultTest.assertNextForFirstResultSetsNotEmptyOnly()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.iterator.IteratorStreamMergedResultTest.assertNextForMiddleResultSetsNotEmpty()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.iterator.IteratorStreamMergedResultTest.assertNextForLastResultSetsNotEmptyOnly()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.iterator.IteratorStreamMergedResultTest.assertNextForMix()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.iterator.IteratorStreamMergedResultTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.iterator.IteratorStreamMergedResultTest.setUp()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OrderByStreamMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByStreamMergedResultTest.assertNextForResultSetsAllEmpty()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByStreamMergedResultTest.assertNextForSomeResultSetsEmpty()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByStreamMergedResultTest.assertNextForMix()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByStreamMergedResultTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.orderby.OrderByStreamMergedResultTest.setUp()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LimitDecoratorMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.LimitDecoratorMergedResultTest.assertNextForSkipAll()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.LimitDecoratorMergedResultTest.assertNextWithoutRowCount()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.LimitDecoratorMergedResultTest.assertNextWithRowCount()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.LimitDecoratorMergedResultTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.LimitDecoratorMergedResultTest.setUp()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RowNumberDecoratorMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.RowNumberDecoratorMergedResultTest.assertNextForSkipAll()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.RowNumberDecoratorMergedResultTest.assertNextWithoutOffsetWithoutRowCount()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.RowNumberDecoratorMergedResultTest.assertNextForRowCountBoundOpenedFalse()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.RowNumberDecoratorMergedResultTest.assertNextForRowCountBoundOpenedTrue()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.RowNumberDecoratorMergedResultTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.RowNumberDecoratorMergedResultTest.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TopAndRowNumberDecoratorMergedResultTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.assertNextForSkipAll()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.assertNextWithoutOffsetWithRowCount()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.assertNextWithOffsetWithoutRowCount()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.assertNextWithOffsetBoundOpenedFalse()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.assertNextWithOffsetBoundOpenedTrue()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.merge.dql.pagination.TopAndRowNumberDecoratorMergedResultTest.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLRewriteEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngine", "TOT": 9, "UPD": 5, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngine.appendLimitRowCount(org.apache.shardingsphere.core.rewrite.SQLBuilder,org.apache.shardingsphere.core.parse.parser.token.RowCountToken,int,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SQLRewriteEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteColumnWithoutColumnsWithParameter()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForRowNum()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForTopAndRowNumber()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForLimitForMemoryGroupBy()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForRowNumForMemoryGroupBy()", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForTopAndRowNumberForMemoryGroupBy()", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForLimitForNotRewriteLimit()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForRowNumForNotRewriteLimit()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForTopAndRowNumberForNotRewriteLimit()", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertIndexTokenForIndexNameTableNameWithoutLogicTableName()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithoutBackQuoteForShow()", "TOT": 8, "UPD": 2, "INS": 1, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertSelectInWithShardingEncryptor()", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertSelectInWithShardingEncryptorWithParameter()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertSelectEqualWithQueryAssistedShardingEncryptor()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertSelectInWithQueryAssistedShardingEncryptor()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertUpdateWithShardingEncryptor()", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertUpdateWithQueryAssistedShardingEncryptor()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteWithoutChange()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForTableName()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForOrderByAndGroupByDerivedColumns()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForAggregationDerivedColumns()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForAutoGeneratedKeyColumn()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForAutoGeneratedKeyColumnWithoutColumnsWithParameter()", "TOT": 9, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForAutoGeneratedKeyColumnWithoutColumnsWithoutParameter()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteColumnWithoutColumnsWithoutParameter()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForLimit()", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForDerivedOrderBy()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertGenerateSQL()", "TOT": 7, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertSchemaTokenRewriteForTableName()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertIndexTokenForIndexNameTableName()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithoutBackQuoteFromSchemaForShow()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithBackQuoteForShow()", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithBackQuoteFromSchemaForShow()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithSchemaForShow()", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithSchemaFromSchemaForShow()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithBackQuoteWithSchemaForShow()", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithBackQuoteWithSchemaFromSchemaForShow()", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithSchemaWithBackQuoteForShow()", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithSchemaWithBackQuoteFromSchemaForShow()", "TOT": 9, "UPD": 0, "INS": 2, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithSchemaForSelect()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithSchemaForInsert()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithSchemaForUpdate()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertTableTokenWithSchemaForDelete()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertSelectEqualWithShardingEncryptor()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertSelectBetweenWithShardingEncryptor()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "SQLRouteResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.SQLRouteResult", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ParsingSQLRouter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.processLimit(java.util.List,org.apache.shardingsphere.core.parse.parser.sql.dql.select.SelectStatement)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(java.lang.String,java.util.List,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.cloneLimit(org.apache.shardingsphere.core.parse.parser.context.limit.Limit)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.getProcessedLimit(java.util.List,org.apache.shardingsphere.core.parse.parser.sql.dql.select.SelectStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.getResultSet()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ShardingStatement.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.executeQuery(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.getResultSet()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "JDBCDatabaseCommunicationEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.merge(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(org.apache.shardingsphere.core.route.SQLRouteResult)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.merge(org.apache.shardingsphere.core.route.SQLRouteResult)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["35c1d0f55f4e6a244570de0e1cd5156cac9213f3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 61, "deletions": 33, "lines": 94, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 62, "UPD": 23, "INS": 17, "MOV": 12, "DEL": 10, "spoonFilesChanged": 9, "spoonMethodsChanged": 19}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc", "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge", "sharding-core/sharding-core-entry/src/main/java/org/apache/shardingsphere/core", "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite", "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend", "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route"], "changesInPackagesSPOON": ["org.apache.shardingsphere.core.merge.dql.DQLMergeEngine.decorate(org.apache.shardingsphere.core.merge.MergedResult)", "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.executeQuery(java.lang.String)", "org.apache.shardingsphere.core.merge.MergeEngineFactory.newInstance(org.apache.shardingsphere.core.constant.DatabaseType,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.route.SQLRouteResult,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,java.util.List)", "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.getResultSet()", "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.processLimit(java.util.List,org.apache.shardingsphere.core.parse.parser.sql.dql.select.SelectStatement)", "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery()", "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.merge(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "org.apache.shardingsphere.core.rewrite.SQLRewriteEngine.appendLimitRowCount(org.apache.shardingsphere.core.rewrite.SQLBuilder,org.apache.shardingsphere.core.parse.parser.token.RowCountToken,int,boolean)", "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.execute(org.apache.shardingsphere.core.route.SQLRouteResult)", "org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingStatement.getResultSet()", "org.apache.shardingsphere.core.merge.MergeEngineFactory.newInstance(org.apache.shardingsphere.core.constant.DatabaseType,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,java.util.List)", "org.apache.shardingsphere.core.BaseShardingEngine.rewriteAndConvert(java.lang.String,java.util.List,org.apache.shardingsphere.core.route.SQLRouteResult)", "org.apache.shardingsphere.core.route.SQLRouteResult", "org.apache.shardingsphere.core.rewrite.SQLRewriteEngine", "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(java.lang.String,java.util.List,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.merge(org.apache.shardingsphere.core.route.SQLRouteResult)", "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.getProcessedLimit(java.util.List,org.apache.shardingsphere.core.parse.parser.sql.dql.select.SelectStatement)", "org.apache.shardingsphere.core.merge.dql.DQLMergeEngine", "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.cloneLimit(org.apache.shardingsphere.core.parse.parser.context.limit.Limit)"]}, {"title": "supported hibernate insert values ( )", "body": "## Feature Request\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot make decision by current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Is your feature request related to a problem?\r\nYes,the hight version sharding-sphere  cannot support hibernate\r\nid generate greater than 1.4.2 like 3.1.0,will throw exception when insertparse sql like (insert table_name values ( )) values contains blank.\r\n### Describe the feature you would like.\r\nI'll change ParsingSQLRouter's construtor or InsertValuesClauseParser's parseValues  for support this problem.", "url": "https://github.com/apache/shardingsphere/issues/2130", "user": "LinXinHun", "labels": ["bug", "sharding"], "created": "2019-03-29 05:24:46", "closed": "2019-04-12 14:45:06", "commits": {"efdec36ef7fe14ffef6bc0ac2c1831be22bc9f89": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "aa8742c73d39c13a9a00cba014c266d831421747": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "efdec36ef7fe14ffef6bc0ac2c1831be22bc9f89", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["77d03c2b2b18f3821ed8cf8df264d0ca8a8877ba", "363207e8aaf1b03cb208e77873771e6ea3dc9935"], "nameRev": "efdec36ef7fe14ffef6bc0ac2c1831be22bc9f89 tags/4.0.0-RC1~57", "commitMessage": "Merge pull request #2168 from codefairy08/dev_bug_fixs_2130\n\n#2130 bug fixs", "commitDateTime": "2019-04-08 17:10:56", "authoredDateTime": "2019-04-08 17:10:56", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/DMLStatement.g4", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/Keyword.g4", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/insert.xml", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-sql-test/src/main/resources/sql/dml/insert.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "aa8742c73d39c13a9a00cba014c266d831421747", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["6b1d66eddd790d9946b4b27761289616a8114b64", "4403458483ae0d275e2ec86b6588d4de8a3da213"], "nameRev": "aa8742c73d39c13a9a00cba014c266d831421747 tags/4.0.0-RC1~5", "commitMessage": "Merge pull request #2198 from codefairy08/dev\n\n#2130 add test case", "commitDateTime": "2019-04-12 22:44:12", "authoredDateTime": "2019-04-12 22:44:12", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/insert.xml", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-sql-test/src/main/resources/sql/dml/insert.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Parse table name in select items", "body": "Can parse table name or alias in select items, example: \r\n\r\n```sql\r\nSELECT tbl.* from tbl;\r\n```\r\n\r\nthe table name `tbl` in select list should be parse and add to table token.\r\n\r\nIf sql is:\r\n```sql\r\nSELECT b.* from tbl b;\r\n```\r\n\r\nthe alias name `b` in select list should be parse but not add to table token.", "url": "https://github.com/apache/shardingsphere/issues/2118", "user": "terrymanu", "labels": ["bug", "sharding"], "created": "2019-03-27 17:24:49", "closed": "2019-03-27 17:29:21", "commits": {"6a56aa083ea67f492093d5cbe1b6d696cb433635": {"commitGHEventType": "closed", "commitUser": "terrymanu"}, "bb55b5d731fec634768428f32b758af6f4a7c9fe": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "b50d7f8c76e3b079f6cf1c4fde4083dcfe9e727f": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "a93ff7c3a351d0869d57523cf3cd2e62f610147f": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6a56aa083ea67f492093d5cbe1b6d696cb433635", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["cdba08fd31690da94096dc9a7f9ce1d1f462272b"], "nameRev": "6a56aa083ea67f492093d5cbe1b6d696cb433635 tags/4.0.0-RC1~180", "commitMessage": "fix #2118\n", "commitDateTime": "2019-03-28 01:29:08", "authoredDateTime": "2019-03-28 01:29:08", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/TableNameOrAliasExtractor.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/TableNamesOrAliasesExtractor.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/util/RuleName.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/sharding/segment/impl/TableNameOrAliasFiller.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/sql/segment/table/TableNameOrAliasSegment.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/parser/context/table/Tables.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/resources/META-INF/parsing-rule-definition/common/extractor-rule-definition.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/resources/META-INF/parsing-rule-definition/sharding/common/filler-rule-definition.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/MySQLDQLStatement.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/java/org/apache/shardingsphere/core/parse/optimizer/MySQLSelectOptimizer.java", "insertions": 30, "deletions": 4, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableNameOrAliasExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.TableNameOrAliasExtractor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TableNamesOrAliasesExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.TableNamesOrAliasesExtractor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RuleName.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.util.RuleName", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TableNameOrAliasFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.segment.impl.TableNameOrAliasFiller", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TableNameOrAliasSegment.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Tables.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.parser.context.table.Tables", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.parser.context.table.Tables.addTableNameOrAlias(org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLSelectOptimizer.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.addTableTokensIfIsNotAlias(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.isAlias(java.util.Collection,org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.optimize(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.postExtractInternal(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "bb55b5d731fec634768428f32b758af6f4a7c9fe", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["6a56aa083ea67f492093d5cbe1b6d696cb433635"], "nameRev": "bb55b5d731fec634768428f32b758af6f4a7c9fe tags/4.0.0-RC1~179", "commitMessage": "for #2118, refactor Tables.tableNameOrAliasSegment\n", "commitDateTime": "2019-03-28 01:32:19", "authoredDateTime": "2019-03-28 01:32:19", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/sharding/segment/impl/TableNameOrAliasFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/parser/context/table/Tables.java", "insertions": 0, "deletions": 9, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableNameOrAliasFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.segment.impl.TableNameOrAliasFiller.fill(org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Tables.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.parser.context.table.Tables.addTableNameOrAlias(org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b50d7f8c76e3b079f6cf1c4fde4083dcfe9e727f", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["bb55b5d731fec634768428f32b758af6f4a7c9fe"], "nameRev": "b50d7f8c76e3b079f6cf1c4fde4083dcfe9e727f tags/4.0.0-RC1~178", "commitMessage": "for #2118, reuse ownerName instead of tableNameOrAlias\n", "commitDateTime": "2019-03-28 01:55:25", "authoredDateTime": "2019-03-28 01:55:25", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/{TableNameOrAliasExtractor.java => OwnerNameExtractor.java}", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/{TableNamesOrAliasesExtractor.java => OwnerNamesExtractor.java}", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/util/RuleName.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/sharding/segment/impl/{TableNameOrAliasFiller.java => OwnerFiller.java}", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/sql/segment/table/{TableNameOrAliasSegment.java => OwnerSegment.java}", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/parser/context/table/Tables.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/resources/META-INF/parsing-rule-definition/common/extractor-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/resources/META-INF/parsing-rule-definition/sharding/common/filler-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/MySQLDQLStatement.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/java/org/apache/shardingsphere/core/parse/optimizer/MySQLSelectOptimizer.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OwnerNameExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.TableNameOrAliasExtractor", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.TableNameOrAliasExtractor.extract(org.antlr.v4.runtime.ParserRuleContext)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OwnerNamesExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.TableNamesOrAliasesExtractor", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.TableNamesOrAliasesExtractor.extract(org.antlr.v4.runtime.ParserRuleContext)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RuleName.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.util.RuleName", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OwnerFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.segment.impl.TableNameOrAliasFiller", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.segment.impl.TableNameOrAliasFiller.fill(org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OwnerSegment.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Tables.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.parser.context.table.Tables", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLSelectOptimizer.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.addTableTokensIfIsNotAlias(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.optimize(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.isAlias(java.util.Collection,org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a93ff7c3a351d0869d57523cf3cd2e62f610147f", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["74d3593f4b7d052f499a90f604351b08b2dbf12f"], "nameRev": "a93ff7c3a351d0869d57523cf3cd2e62f610147f tags/4.0.0-RC1~174", "commitMessage": "for #2118, remove ownerName, use unqualifiedShorthand & qualifiedShorthand\n", "commitDateTime": "2019-03-28 19:14:56", "authoredDateTime": "2019-03-28 19:14:39", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/OwnerNameExtractor.java", "insertions": 0, "deletions": 45, "lines": 45}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/OwnerNamesExtractor.java", "insertions": 0, "deletions": 50, "lines": 50}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dql/SelectClauseExtractor.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/util/RuleName.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/common/segment/impl/dql/SelectClauseFiller.java", "insertions": 6, "deletions": 9, "lines": 15}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/sharding/segment/impl/OwnerFiller.java", "insertions": 0, "deletions": 37, "lines": 37}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/sql/segment/table/OwnerSegment.java", "insertions": 0, "deletions": 39, "lines": 39}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/parser/context/table/Tables.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/resources/META-INF/parsing-rule-definition/common/extractor-rule-definition.xml", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/resources/META-INF/parsing-rule-definition/sharding/common/filler-rule-definition.xml", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/MySQLDQLStatement.g4", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/java/org/apache/shardingsphere/core/parse/optimizer/MySQLSelectOptimizer.java", "insertions": 0, "deletions": 26, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OwnerNameExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.OwnerNameExtractor", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "OwnerNamesExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.OwnerNamesExtractor", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SelectClauseExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dql.SelectClauseExtractor.setStarSelectItemSegment(org.antlr.v4.runtime.ParserRuleContext,org.apache.shardingsphere.core.parse.antlr.sql.segment.SelectClauseSegment)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dql.SelectClauseExtractor.extract(org.antlr.v4.runtime.ParserRuleContext)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RuleName.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.util.RuleName", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SelectClauseFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.common.segment.impl.dql.SelectClauseFiller.fill(org.apache.shardingsphere.core.parse.antlr.sql.segment.SelectClauseSegment,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 3}]}, {"spoonFilePath": "OwnerFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.segment.impl.OwnerFiller", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "OwnerSegment.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.sql.segment.table.OwnerSegment", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Tables.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.parser.context.table.Tables", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MySQLSelectOptimizer.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.optimize(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.addTableTokensIfOwnerIsNotAlias(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.isAlias(java.util.Collection,org.apache.shardingsphere.core.parse.antlr.sql.segment.table.OwnerSegment)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6a56aa083ea67f492093d5cbe1b6d696cb433635", "bb55b5d731fec634768428f32b758af6f4a7c9fe", "b50d7f8c76e3b079f6cf1c4fde4083dcfe9e727f", "a93ff7c3a351d0869d57523cf3cd2e62f610147f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 4, "gitStatsSummary": {"insertions": 288, "deletions": 285, "lines": 573, "gitFilesChange": 19}, "spoonStatsSummary": {"TOT": 77, "UPD": 46, "INS": 12, "MOV": 7, "DEL": 12, "spoonFilesChanged": 13, "spoonMethodsChanged": 23}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core", "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/MySQLDQLStatement.g4", "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/java/org/apache/shardingsphere/core"], "changesInPackagesSPOON": ["org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.optimize(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "org.apache.shardingsphere.core.parse.parser.context.table.Tables", "org.apache.shardingsphere.core.parse.antlr.extractor.util.RuleName", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.TableNamesOrAliasesExtractor", "org.apache.shardingsphere.core.parse.antlr.filler.sharding.segment.impl.TableNameOrAliasFiller", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.TableNameOrAliasExtractor", "org.apache.shardingsphere.core.parse.antlr.filler.sharding.segment.impl.TableNameOrAliasFiller.fill(org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment", "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.addTableTokensIfIsNotAlias(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "org.apache.shardingsphere.core.parse.parser.context.table.Tables.addTableNameOrAlias(org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment)", "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.isAlias(java.util.Collection,org.apache.shardingsphere.core.parse.antlr.sql.segment.table.TableNameOrAliasSegment)", "org.apache.shardingsphere.core.parse.antlr.filler.sharding.segment.impl.OwnerFiller", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dql.SelectClauseExtractor.setStarSelectItemSegment(org.antlr.v4.runtime.ParserRuleContext,org.apache.shardingsphere.core.parse.antlr.sql.segment.SelectClauseSegment)", "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.postExtractInternal(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "org.apache.shardingsphere.core.parse.antlr.sql.segment.table.OwnerSegment", "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.addTableTokensIfOwnerIsNotAlias(org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "org.apache.shardingsphere.core.parse.antlr.filler.common.segment.impl.dql.SelectClauseFiller.fill(org.apache.shardingsphere.core.parse.antlr.sql.segment.SelectClauseSegment,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.OwnerNameExtractor", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.OwnerNamesExtractor", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.TableNameOrAliasExtractor.extract(org.antlr.v4.runtime.ParserRuleContext)", "org.apache.shardingsphere.core.parse.optimizer.MySQLSelectOptimizer.isAlias(java.util.Collection,org.apache.shardingsphere.core.parse.antlr.sql.segment.table.OwnerSegment)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dql.SelectClauseExtractor.extract(org.antlr.v4.runtime.ParserRuleContext)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.TableNamesOrAliasesExtractor.extract(org.antlr.v4.runtime.ParserRuleContext)"]}, {"title": "Using config center dynamic effectiveness has a bug with judging ShardingRule", "body": "![image](https://user-images.githubusercontent.com/5526521/54986633-f8b58580-4fed-11e9-8b4e-f115090b3b5b.png)\r\n\r\nI\u2018m using config center(zk). Then modify configurations on zk. Sharding-Jdbc will be pushed to the production environment and take effect immediately. But error.\r\nBecause only judge contain with \"tables:\\n\". But it's actually \"tables:\\r\\n\"", "url": "https://github.com/apache/shardingsphere/issues/2103", "user": "jasonlong10", "labels": ["bug", "orchestration", "volunteer wanted"], "created": "2019-03-26 09:50:06", "closed": "2019-03-27 15:54:58", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Can't 'SHOW DATABASES' on Navicat 12 by Sharding-Proxy", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\ninput: \r\nSHOW DATABASES;\r\noutput:\r\nDatabase\r\nsharding_db\r\n### Actual behavior\r\ninput: \r\nSHOW DATABASES;\r\noutput:\r\n(nothing output)\r\n### Reason analyze (If you can)\r\nMiss parameter when return sql result packets.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nUsing Navicat12 to connect to Sharding-Proxy and execute SQL: SHOW DATABASES;\r\n### Example codes for reproduce this issue (such as a github link).\r\nNA", "url": "https://github.com/apache/shardingsphere/issues/2100", "user": "tuohai666", "labels": ["bug", "proxy"], "created": "2019-03-26 09:08:31", "closed": "2019-03-26 11:23:17", "commits": {"bea59892c42f20fc946ff2157a7a112093061fc2": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "bea59892c42f20fc946ff2157a7a112093061fc2", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["80d05243585a29259f5cac4e2bd14a9ddd613a43"], "nameRev": "bea59892c42f20fc946ff2157a7a112093061fc2 tags/4.0.0-RC1~195", "commitMessage": "#2100, fix show databases for navicat 12 (#2102)\n\nfix #2100, show databases for navicat 12\r\n", "commitDateTime": "2019-03-26 19:23:16", "authoredDateTime": "2019-03-26 19:23:16", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ShowDatabasesBackendHandler.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShowDatabasesBackendHandler.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.admin.ShowDatabasesBackendHandler.execute()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "EncryptDatasource does not support sql which is not DML", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nexecute sql which is not DML\r\n### Actual behavior\r\nthrow Exception, Message is \"Unsupported SQL of ${SQL}\"\r\n### Reason analyze (If you can)\r\ncurrent just fill DML statement to  DMLStatement, the other sql does not fill\uff0cdesign a new class for the sql which is not DML. do not execute filler logic.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nuse EncryptDatasource execute a DDL statement: \"CREATE TABLE t_test (id int primary key auto_increment, pwd varchar(100), pwd_assist varchar(100));\"\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2081", "user": "codefairy08", "labels": ["bug", "sharding"], "created": "2019-03-25 07:37:12", "closed": "2019-03-29 08:20:15", "commits": {"75916b16952ab2020f97b244aad472161abb3b7d": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "cd401b097ddc945be74f92e1753e3424e2b48ead": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "75916b16952ab2020f97b244aad472161abb3b7d", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d2a56c59d5ebdfe5ab3cad3675842a9a5fe11ce5", "bc4ecffb6725c250f8cebfeecdc9aee0343e6307"], "nameRev": "75916b16952ab2020f97b244aad472161abb3b7d tags/4.0.0-RC1~168^2~1", "commitMessage": "Merge pull request #2097 from codefairy08/dev_bug_fixs_2081\n\n #2081 bug fixs", "commitDateTime": "2019-03-26 19:09:38", "authoredDateTime": "2019-03-26 19:09:38", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/constant/SQLType.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/AntlrParsingEngine.java", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/SQLSegmentsExtractorEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/parser/SQLAST.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/parser/SQLParserEngine.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/parser/sql/GeneralSQLStatement.java", "insertions": 36, "deletions": 0, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLType.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.constant.SQLType", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AntlrParsingEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.AntlrParsingEngine", "TOT": 21, "UPD": 0, "INS": 6, "MOV": 10, "DEL": 5}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.AntlrParsingEngine.parse()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "SQLSegmentsExtractorEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.SQLSegmentsExtractorEngine.extract(org.apache.shardingsphere.core.parse.antlr.parser.SQLAST)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SQLAST.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.parser.SQLAST", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLParserEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.parser.SQLParserEngine.parse()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "GeneralSQLStatement.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.parser.sql.GeneralSQLStatement", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "cd401b097ddc945be74f92e1753e3424e2b48ead", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["7497490d9aaa73ed5f524de888481d216ed96dd6", "82e682f4c0f8d2fae41c852c71b28b0850853bd1"], "nameRev": "cd401b097ddc945be74f92e1753e3424e2b48ead tags/4.0.0-RC1~168", "commitMessage": "Merge pull request #2129 from apache/dev_bug_fixs_2081\n\n #2081 bug fixs", "commitDateTime": "2019-03-29 15:15:57", "authoredDateTime": "2019-03-29 15:15:57", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/constant/SQLType.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/AntlrParsingEngine.java", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/SQLSegmentsExtractorEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/parser/SQLAST.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/parser/SQLParserEngine.java", "insertions": 11, "deletions": 5, "lines": 16}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/parser/sql/GeneralSQLStatement.java", "insertions": 36, "deletions": 0, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLType.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.constant.SQLType", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AntlrParsingEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.AntlrParsingEngine", "TOT": 21, "UPD": 0, "INS": 6, "MOV": 10, "DEL": 5}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.AntlrParsingEngine.parse()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "SQLSegmentsExtractorEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.SQLSegmentsExtractorEngine.extract(org.apache.shardingsphere.core.parse.antlr.parser.SQLAST)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SQLAST.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.parser.SQLAST", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLParserEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.parser.SQLParserEngine.parse()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "GeneralSQLStatement.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.parser.sql.GeneralSQLStatement", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Saga transaction revert SQL error when keyGenerator is a union primary key", "body": "## Bug Report\r\n\r\nWhen the ShardingSphere keyGenerator is part of table union primary key, Saga revert `INSERT` SQL will miss non-generated primary key parameters.\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n4.0.0-RC1-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\nRevert SQL successfully.\r\n\r\n### Actual behavior\r\n\r\n```\r\n[ERROR] 2019-03-25 10:47:11,620 --main-- [org.apache.servicecomb.saga.core.FallbackPolicy] Failed to send compensation to demo_ds_1 \r\norg.apache.servicecomb.saga.core.TransportFailedException: Execute SQL `SagaBranchTransaction(dataSourceName=demo_ds_1, sql=DELETE FROM t_order_1 WHERE order_id = ? AND user_id = ?, parameterSets=[[316889452515426305]])` occur exception.\r\n\tat io.shardingsphere.transaction.saga.servicecomb.transport.ShardingSQLTransport.executeSQL(ShardingSQLTransport.java:90)\r\n\tat io.shardingsphere.transaction.saga.servicecomb.transport.ShardingSQLTransport.with(ShardingSQLTransport.java:58)\r\n\tat org.apache.servicecomb.saga.format.JacksonSQLOperation.send(JacksonSQLOperation.java:47)\r\n\tat org.apache.servicecomb.saga.core.FallbackPolicy.apply(FallbackPolicy.java:36)\r\n\tat org.apache.servicecomb.saga.core.RequestProcessTask.compensate(RequestProcessTask.java:58)\r\n\tat org.apache.servicecomb.saga.core.CompensationTaskConsumer.consume(CompensationTaskConsumer.java:47)\r\n\tat org.apache.servicecomb.saga.core.TaskRunner.run(TaskRunner.java:57)\r\n\tat org.apache.servicecomb.saga.core.GraphBasedSaga.run(GraphBasedSaga.java:89)\r\n\tat org.apache.servicecomb.saga.core.application.SagaExecutionComponent.run(SagaExecutionComponent.java:63)\r\n\tat io.shardingsphere.transaction.saga.SagaShardingTransactionManager.submitToSagaEngine(SagaShardingTransactionManager.java:130)\r\n\tat io.shardingsphere.transaction.saga.SagaShardingTransactionManager.rollback(SagaShardingTransactionManager.java:115)\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractConnectionAdapter.rollback(AbstractConnectionAdapter.java:237)\r\n\tat org.springframework.jdbc.datasource.DataSourceTransactionManager.doRollback(DataSourceTransactionManager.java:328)\r\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:857)\r\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:834)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:536)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:286)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)\r\n\tat org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:168)\r\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:671)\r\n\tat io.shardingsphere.example.transaction.saga.spring.namespace.SagaTransactionalService$$EnhancerBySpringCGLIB$$a3ffce67.processFailure(<generated>)\r\n\tat io.shardingsphere.example.transaction.saga.spring.namespace.SpringNamespaceExample.processSagaTransaction(SpringNamespaceExample.java:39)\r\n\tat io.shardingsphere.example.transaction.saga.spring.namespace.SpringNamespaceExample.main(SpringNamespaceExample.java:30)\r\nCaused by: java.sql.SQLException: No value specified for parameter 2\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)\r\n\tat com.mysql.jdbc.PreparedStatement.checkAllParametersSet(PreparedStatement.java:2211)\r\n\tat com.mysql.jdbc.PreparedStatement.addBatch(PreparedStatement.java:898)\r\n\tat com.zaxxer.hikari.pool.HikariProxyPreparedStatement.addBatch(HikariProxyPreparedStatement.java)\r\n\tat io.shardingsphere.transaction.saga.servicecomb.transport.ShardingSQLTransport.executeBatch(ShardingSQLTransport.java:112)\r\n\tat io.shardingsphere.transaction.saga.servicecomb.transport.ShardingSQLTransport.executeSQL(ShardingSQLTransport.java:87)\r\n\t... 28 common frames omitted\r\n```\r\n\r\n### Reason analyze (If you can)\r\n\r\nRevertInsert operator use primary keys of `TableMetaData` to generate revert SQL, but only add parameter of keyGenerator so that the number of parameter is inconsistent.\r\nAnd the revertEngine has no information about the keyGenerator, including keyGenerator columnName and value, So it can't distinguish which key column is keyGenerator.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nsharding rule configuration:\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xmlns:context=\"http://www.springframework.org/schema/context\" \r\n    xmlns:tx=\"http://www.springframework.org/schema/tx\" \r\n    xmlns:sharding=\"http://shardingsphere.apache.org/schema/shardingsphere/sharding\"\r\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\r\n                        http://www.springframework.org/schema/beans/spring-beans.xsd \r\n                        http://www.springframework.org/schema/tx \r\n                        http://www.springframework.org/schema/tx/spring-tx.xsd\r\n                        http://www.springframework.org/schema/context \r\n                        http://www.springframework.org/schema/context/spring-context.xsd\r\n                        http://shardingsphere.apache.org/schema/shardingsphere/sharding\r\n                        http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd\">\r\n\r\n    <import resource=\"classpath:META-INF/shardingTransaction.xml\"/>\r\n\r\n    <context:component-scan base-package=\"io.shardingsphere.example\" />\r\n    \r\n    <bean id=\"demo_ds_0\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\r\n        <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\r\n        <property name=\"jdbcUrl\" value=\"jdbc:mysql://localhost:3306/demo_ds_0?useSSL=false\"/>\r\n        <property name=\"username\" value=\"root\"/>\r\n        <property name=\"password\" value=\"\"/>\r\n    </bean>\r\n    \r\n    <bean id=\"demo_ds_1\" class=\"com.zaxxer.hikari.HikariDataSource\" destroy-method=\"close\">\r\n        <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\r\n        <property name=\"jdbcUrl\" value=\"jdbc:mysql://localhost:3306/demo_ds_1?useSSL=false\"/>\r\n        <property name=\"username\" value=\"root\"/>\r\n        <property name=\"password\" value=\"\"/>\r\n    </bean>\r\n    \r\n    <sharding:inline-strategy id=\"databaseStrategy\" sharding-column=\"user_id\" algorithm-expression=\"demo_ds_${user_id % 2}\" />\r\n    <sharding:inline-strategy id=\"orderTableStrategy\" sharding-column=\"order_id\" algorithm-expression=\"t_order_${order_id % 2}\" />\r\n    <sharding:inline-strategy id=\"orderItemTableStrategy\" sharding-column=\"order_id\" algorithm-expression=\"t_order_item_${order_id % 2}\" />\r\n    \r\n    <sharding:key-generator id=\"orderKeyGenerator\" type=\"SNOWFLAKE\" column=\"order_id\" />\r\n    <sharding:key-generator id=\"itemKeyGenerator\" type=\"SNOWFLAKE\" column=\"order_item_id\" />\r\n    \r\n    <sharding:data-source id=\"shardingDataSource\">\r\n        <sharding:sharding-rule data-source-names=\"demo_ds_0, demo_ds_1\">\r\n            <sharding:table-rules>\r\n                <sharding:table-rule logic-table=\"t_order\" actual-data-nodes=\"demo_ds_${0..1}.t_order_${0..1}\" database-strategy-ref=\"databaseStrategy\" table-strategy-ref=\"orderTableStrategy\" key-generator-ref=\"orderKeyGenerator\" />\r\n                <sharding:table-rule logic-table=\"t_order_item\" actual-data-nodes=\"demo_ds_${0..1}.t_order_item_${0..1}\" database-strategy-ref=\"databaseStrategy\" table-strategy-ref=\"orderItemTableStrategy\" key-generator-ref=\"itemKeyGenerator\" />\r\n            </sharding:table-rules>\r\n        </sharding:sharding-rule>\r\n        <sharding:props>\r\n            <prop key=\"sql.show\">false</prop>\r\n        </sharding:props>\r\n    </sharding:data-source>\r\n    \r\n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\r\n        <property name=\"dataSource\" ref=\"shardingDataSource\" />\r\n    </bean>\r\n    <tx:annotation-driven />\r\n    \r\n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\r\n        <property name=\"dataSource\" ref=\"shardingDataSource\"/>\r\n        <property name=\"mapperLocations\" value=\"classpath*:META-INF/mappers/*.xml\"/>\r\n    </bean>\r\n    \r\n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\r\n        <property name=\"basePackage\" value=\"io.shardingsphere.example.common.mybatis.repository\"/>\r\n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\r\n    </bean>\r\n</beans>\r\n```\r\n\r\nSQLs:\r\n```\r\n    <update id=\"createTableIfNotExists\">\r\n        CREATE TABLE IF NOT EXISTS t_order (order_id BIGINT AUTO_INCREMENT, user_id INT NOT NULL, status VARCHAR(50), PRIMARY KEY (order_id, user_id));\r\n    </update>\r\n\r\n    <insert id=\"insert\" useGeneratedKeys=\"true\" keyProperty=\"orderId\">\r\n        INSERT INTO t_order (user_id, status) VALUES (#{userId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR});\r\n    </insert>\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\nhttps://github.com/KomachiSion/sharding-sphere-example/tree/revert-insert-error\r\n\r\n```\r\nsharding-sphere-example/sharding-jdbc-example/transaction-example/transaction-base-saga-example/transaction-saga-spring-namespace-example/src/main/java/io/shardingsphere/example/transaction/saga/spring/namespace/SpringNamespaceExample.java\r\n```\r\n", "url": "https://github.com/apache/shardingsphere/issues/2077", "user": "KomachiSion", "labels": ["bug", "transaction"], "created": "2019-03-25 02:57:02", "closed": "2019-06-04 03:17:11", "commits": {}, "ttf": 71.00027777777778, "commitsDetails": []}, {"title": "the link in CONTRIBUTING.md can not access", "body": "The link in CONTRIBUTING.md can not access.\r\n[Core developers list](https://github.com/apache/incubator-shardingsphere/blob/dev/en/organization)     \r\nand \r\n[Development conventions](https://github.com/apache/incubator-shardingsphere/blob/dev/en/contribute/convention)\r\ncan not access,please check!", "url": "https://github.com/apache/shardingsphere/issues/2072", "user": "betterjava", "labels": ["bug"], "created": "2019-03-22 12:26:50", "closed": "2019-03-22 15:46:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Wrong LIMIT rewrite while GROUP BY and ORDER BY on different items", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n3.1.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC \r\n### Expected behavior\r\nlimit 0, 10\r\n### Actual behavior\r\n```\r\n SQL: select max(sid) as sid, max(sendTime) as sendTime, objectId, sum(0) as unreadCount from TEST where memberId = ? and status != -1 group by objectId order by sendTime desc limit ?, ?\r\nSQL-BindValue: 52146792, 0, 2147483647\r\n```\r\n### Reason analyze (If you can)\r\nlogic error\uff1a\r\n\r\nio.shardingsphere.core.routing.router.sharding.ParsingSQLRouter#processLimit\r\n![image](https://user-images.githubusercontent.com/1615053/54658329-dca27780-4b07-11e9-9b5d-922d43c78caf.png)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nRun it with PreparedStatement:\r\n```\r\nselect max(sid) as sid, max(sendTime) as sendTime, objectId, sum(0) as unreadCount from TEST where memberId = ? and status != -1 group by objectId order by sendTime desc limit ?, ?\r\n```\r\n### Example codes for reproduce this issue (such as a github link).", "url": "https://github.com/apache/shardingsphere/issues/2062", "user": "joooohnli", "labels": ["bug"], "created": "2019-03-20 05:43:48", "closed": "2019-03-26 10:13:59", "commits": {"d2a56c59d5ebdfe5ab3cad3675842a9a5fe11ce5": {"commitGHEventType": "referenced", "commitUser": "tuohai666"}, "5ac00c3011e35763724a09d5202eb399e1d78c0a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "d2a56c59d5ebdfe5ab3cad3675842a9a5fe11ce5", "commitGHEventType": "referenced", "commitUser": "tuohai666", "commitParents": ["c011ab5d5ffef32cdb034c02992d9ac54c20bdb3"], "nameRev": "d2a56c59d5ebdfe5ab3cad3675842a9a5fe11ce5 tags/4.0.0-RC1~199", "commitMessage": "fix SQL rewrite issue (#2086)\n\n#2062, fix SQL rewrite issue (#2086)", "commitDateTime": "2019-03-26 15:55:01", "authoredDateTime": "2019-03-26 15:55:01", "commitGitStats": [{"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ParsingSQLRouter.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ParsingSQLRouter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(java.lang.String,java.util.List,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5ac00c3011e35763724a09d5202eb399e1d78c0a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d2a56c59d5ebdfe5ab3cad3675842a9a5fe11ce5", "d7c38a60a10aa4c9b353d82d8b3be2f5cdd8e233"], "nameRev": "5ac00c3011e35763724a09d5202eb399e1d78c0a tags/4.0.0-RC1~198", "commitMessage": "Merge pull request #2098 from tuohai666/dev\n\n#2062, Wrong LIMIT rewrite while GROUP BY and ORDER BY on different items", "commitDateTime": "2019-03-26 18:13:58", "authoredDateTime": "2019-03-26 18:13:58", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/parser/context/limit/Limit.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ParsingSQLRouter.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Limit.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.parser.context.limit.Limit.processParameters(java.util.List,boolean,org.apache.shardingsphere.core.constant.DatabaseType,boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.parser.context.limit.Limit.rewrite(java.util.List,boolean,org.apache.shardingsphere.core.constant.DatabaseType,boolean)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 3}]}, {"spoonFilePath": "ParsingSQLRouter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.route(java.lang.String,java.util.List,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.route.router.sharding.ParsingSQLRouter.processLimit(java.util.List,org.apache.shardingsphere.core.parse.parser.sql.dql.select.SelectStatement,boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "proxy can't support multiple transaction", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n3.1.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\n```\r\n\t\t\tConnection con = getConnection1();\r\n\t\t\tcon.setAutoCommit(false);\r\n\t\t\tStatement statement = con.createStatement();\r\n\t\t\tString orderNo = System.currentTimeMillis() + \"A\";\r\n\t\t\tString sql = \"insert into t_order(order_no,merc_no,merch_order_no,tx_dt,tx_tm,tx_amt) values('\" + orderNo + \"', 'B123456789012345', '\" + orderNo + \"', '20181117', '161411', '123.33')\";\r\n\t\t\tstatement.executeUpdate(sql);\r\n\t\t\tcon.rollback();\r\n\r\n\t\t\torderNo = System.currentTimeMillis() + \"B\";\r\n\t\t\tsql = \"insert into t_order(order_no,merc_no,merch_order_no,tx_dt,tx_tm,tx_amt) values('\" + orderNo + \"', 'B123456789012345', '\" + orderNo + \"', '20181117', '161411', '123.33')\";\r\n\t\t\tstatement.executeUpdate(sql);\r\n\r\n\r\n\t\t\torderNo = System.currentTimeMillis() + \"C\";\r\n\t\t\tsql = \"insert into t_order(order_no,merc_no,merch_order_no,tx_dt,tx_tm,tx_amt) values('\" + orderNo + \"', 'B123456789012345', '\" + orderNo + \"', '20181117', '161411', '123.33')\";\r\n\t\t\tstatement.executeUpdate(sql);\r\n\t\t\tcon.commit();\r\n\r\n\t\t\tResultSet rs = statement.executeQuery(\"select * from t_order where order_no ='\" + orderNo + \"'\");\r\n\t\t\twhile( rs.next() ) {\r\n\t\t\t\tSystem.out.println(\"order_no:\" + rs.getString(\"order_no\"));\r\n\t\t\t}\r\n//\t\t\tcon.commit();\r\n//\t\t\tsql = \"insert into t_order(order_no,merc_no,merch_order_no,tx_dt,tx_tm,tx_amt) values('526431086763446276', 'B123456789012345', '526431083269591046', '20181117', '161411', '123.33')\";\r\n//\t\t\tstatement.executeUpdate(sql);\r\n\t\t\tcon.rollback();\r\n\r\n\t\t\tcon.close();\r\n```\r\n### Actual behavior\r\n```\r\nACTIONS: You can try one of the following: \r\n1. Make sure you started a transaction for the thread.\r\n2. Make sure you didn't terminate it yet.\r\n3. Increase the transaction timeout to avoid automatic rollback of long transactions;\r\n   check http://www.atomikos.com/Documentation/JtaProperties for how to do this.\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1078)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4237)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4169)\r\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2617)\r\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2778)\r\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2819)\r\n\tat com.mysql.jdbc.ConnectionImpl.commit(ConnectionImpl.java:1739)\r\n\tat com.alibaba.druid.pool.DruidPooledConnection.commit(DruidPooledConnection.java:752)\r\n\tat TestMySql.main(TestMySql.java:32)\r\n```\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2061", "user": "koalas1105", "labels": ["bug", "proxy", "transaction"], "created": "2019-03-20 02:32:18", "closed": "2019-03-27 03:41:24", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Do not support sum(if()) expression", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n3.1.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nsupport\r\n### Actual behavior\r\ndo not\r\n### Reason analyze (If you can)\r\nsql parsing error\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n1. ```select sum(if(status=0, 1, 0)) from xx group by xx;```\r\n2. Table 'xx.xx' doesn't exist\r\n### Example codes for reproduce this issue (such as a github link).", "url": "https://github.com/apache/shardingsphere/issues/2055", "user": "joooohnli", "labels": ["bug", "sharding"], "created": "2019-03-19 06:19:07", "closed": "2019-03-28 08:24:28", "commits": {"b8ff1a4fd86801885798114fdaf829c7656e4a42": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "b8ff1a4fd86801885798114fdaf829c7656e4a42", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["1ce820f1b6e78a9aedb9c297f41cfd8c68565d74", "15284f7078fc146bb6e1394d40647c1eece4d394"], "nameRev": "b8ff1a4fd86801885798114fdaf829c7656e4a42 tags/4.0.0-RC2~1053", "commitMessage": "Merge pull request #2229 from codefairy08/dev_bug_fixs_2211\n\n#2055 add test case", "commitDateTime": "2019-04-18 14:46:26", "authoredDateTime": "2019-04-18 14:46:26", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/select.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "sharding-jdbc-spring-namespace 4.0.0-RC1 namespcae configuration", "body": "**## because concurrent problem in on-line environment, so i downloaded 4.0.0-RC1 version and package it .But i'm getting in trouble when startup. This is my namespace configuration, but when startup,the error below occured, like this**\r\n\r\n`<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n       xmlns:sharding=\"http://shardingsphere.apache.org/schema/shardingsphere/sharding\" xsi:schemaLocation=\"\r\n        http://www.springframework.org/schema/beans\r\n        http://www.springframework.org/schema/beans/spring-beans.xsd\r\n        http://shardingsphere.apache.org/schema/shardingsphere/sharding\r\n        http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd\">`\r\n\r\n\r\n`Caused by: org.xml.sax.SAXParseException: TargetNamespace.1: \u5e94\u4e3a\u540d\u79f0\u7a7a\u95f4 'http://shardingsphere.apache.org/schema/shardingsphere/sharding', \u4f46\u65b9\u6848\u6587\u6863\u7684\u76ee\u6807\u540d\u79f0\u7a7a\u95f4\u4e3a 'http://shardingsphere.io/schema/shardingsphere/sharding'\u3002`\r\n\r\nI guess the problem is \r\n`http://shardingsphere.apache.org/schema/shardingsphere/sharding/sharding.xsd`\r\nbut targetNameSpace in this xsd file is\r\n`<xsd:schema xmlns=\"http://shardingsphere.io/schema/shardingsphere/sharding\"\r\n            xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\r\n            xmlns:beans=\"http://www.springframework.org/schema/beans\"\r\n            targetNamespace=\"http://shardingsphere.io/schema/shardingsphere/sharding\"`\r\n\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/2052", "user": "jiejiecool", "labels": ["bug"], "created": "2019-03-18 12:33:35", "closed": "2019-03-27 06:49:19", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "mysql parse can not parse cast function", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nExecute this SQL routing correctly\r\nselect cast(order_id as varchar) from t_order\r\n### Actual behavior\r\nrouting to random datasource\r\n### Reason analyze (If you can)\r\nanltr mysql not support cast function\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nselect cast(order_id as varchar) from t_order\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2047", "user": "avalon566", "labels": ["bug", "sharding"], "created": "2019-03-18 04:03:27", "closed": "2019-03-28 08:26:02", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "'SHOW COLUMNS' in multiple-schema mode leads to a error response", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-RC1-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nExecute this SQL correctly:\r\nSHOW COLUMNS FROM `master_slave_db`.`t_order_0`\r\n### Actual behavior\r\nGot from sharding-proxy:\r\nTable 'demo_ds_0.demo_ds_0' doesn't exist\r\n### Reason analyze (If you can)\r\nrewrite logic\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n1. multiple-schema mode of sharding-proxy\r\n2. master-slave rule\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/2040", "user": "tuohai666", "labels": ["bug", "sharding"], "created": "2019-03-15 08:40:24", "closed": "2019-06-25 02:35:55", "commits": {}, "ttf": 101.00027777777778, "commitsDetails": []}, {"title": "COUNT( 1 ) Spaces ERROR", "body": "The mybatis plus generated statement has Spaces: IService.count()\r\n\r\nExample:\r\nSELECT COUNT( 1 ) FROM table;\r\n\r\nExecution error:\r\n\r\nCaused by: java.lang.IllegalStateException: Can't find index: AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1), please add alias for aggregate selections\r\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:507)\r\n\tat io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement.setIndexForAggregationItem(SelectStatement.java:186)\r\n\tat io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement.setIndexForItems(SelectStatement.java:179)\r\n\tat io.shardingsphere.core.merger.dql.DQLMergeEngine.merge(DQLMergeEngine.java:69)\r\n\tat ### **io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.getResultSet(ShardingPreparedStatement.java:185)**\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:69)\r\n\tat com.sun.proxy.$Proxy108.getResultSet(Unknown Source)\r\n\tat org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getFirstResultSet(DefaultResultSetHandler.java:237)\r\n\tat org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:187)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\r\n\tat com.sun.proxy.$Proxy106.query(Unknown Source)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\r\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\r\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\r\n\t... 45 more\r\n\r\nI think the SQL was executed, but could not be parsed when the result set was fetched for a merge.\r\n\r\nsharding-jdcb version: 3.0.0, 3.0.0.M3, 3.1.0\r\nmybatis-plus version: 3.0.7.1\r\n", "url": "https://github.com/apache/shardingsphere/issues/2036", "user": "wjvonline", "labels": ["bug", "sharding"], "created": "2019-03-15 03:50:45", "closed": "2019-03-28 08:27:55", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "if has space in select field will not use sharding rule. ", "body": "like: \r\n\r\nselect a.  id  from table where payDate = 20190101;  \r\nit will not use rule. and get nothing notice.  \r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/2034", "user": "trojanliu", "labels": ["bug", "sharding"], "created": "2019-03-14 14:38:47", "closed": "2019-03-28 08:28:17", "commits": {"ae9db901e3fe680c1443bfe76440f6ad7744762e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "ae9db901e3fe680c1443bfe76440f6ad7744762e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["bffd4b6c96e793ba52d4c46c98b9799b5eab7bb7", "7899b01714ebf651e254e2de53380f76a5a01ff0"], "nameRev": "ae9db901e3fe680c1443bfe76440f6ad7744762e tags/4.0.0-RC1~186", "commitMessage": "Merge pull request #2038 from codefairy08/dev\n\n #2034 bug fixs && add encrypt test class", "commitDateTime": "2019-03-27 16:11:08", "authoredDateTime": "2019-03-27 16:11:08", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/encrypt/ShardingEncryptorEngine.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dql/item/FunctionSelectItemSegmentExtractor.java", "insertions": 6, "deletions": 15, "lines": 21}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/common/segment/impl/dql/SelectItemFiller.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/sharding/segment/impl/OrConditionFiller.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/filler/sharding/statement/impl/dml/InsertFiller.java", "insertions": 19, "deletions": 6, "lines": 25}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/sql/segment/select/AggregationDistinctSelectItemSegment.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/sql/segment/select/AggregationSelectItemSegment.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/resources/parser/delete.xml", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/BaseRule.g4", "insertions": 26, "deletions": 12, "lines": 38}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/DataType.g4", "insertions": 24, "deletions": 7, "lines": 31}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/MySQLBase.g4", "insertions": 76, "deletions": 7, "lines": 83}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/MySQLDCLStatement.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/MySQLDDLStatement.g4", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/MySQLKeyword.g4", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-oracle/src/main/antlr4/imports/oracle/DataType.g4", "insertions": 24, "deletions": 7, "lines": 31}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-postgresql/src/main/antlr4/imports/postgresql/DataType.g4", "insertions": 24, "deletions": 7, "lines": 31}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-sqlserver/src/main/antlr4/imports/sqlserver/DataType.g4", "insertions": 24, "deletions": 7, "lines": 31}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/SQLStatementAssert.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/token/EncryptColumnTokenAssert.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/jaxb/root/ParserResult.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/jaxb/token/ExpectedColumn.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/jaxb/token/ExpectedEncryptColumnToken.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/jaxb/token/ExpectedTokens.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/select.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/yaml/parse-rule.yaml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-sql-test/src/main/resources/antlr_supported_sql/mysql/ddl/drop.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-sql-test/src/main/resources/antlr_supported_sql/mysql/ddl/truncate.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-sql-test/src/main/resources/antlr_supported_sql/postgre/ddl/drop.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-sql-test/src/main/resources/antlr_supported_sql/postgre/ddl/truncate.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingEncryptorEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.strategy.encrypt.ShardingEncryptorEngine.getAssistedQueryColumnCount(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FunctionSelectItemSegmentExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dql.item.FunctionSelectItemSegmentExtractor.extractAggregationSelectItemSegment(org.apache.shardingsphere.core.constant.AggregationType,org.antlr.v4.runtime.ParserRuleContext)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dql.item.FunctionSelectItemSegmentExtractor.getInnerExpression(org.antlr.v4.runtime.ParserRuleContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SelectItemFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.common.segment.impl.dql.SelectItemFiller.fillAggregationSelectItemSegment(org.apache.shardingsphere.core.parse.antlr.sql.segment.select.AggregationSelectItemSegment,org.apache.shardingsphere.core.parse.parser.sql.dql.select.SelectStatement)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.common.segment.impl.dql.SelectItemFiller.fillAggregationDistinctSelectItemSegment(org.apache.shardingsphere.core.parse.antlr.sql.segment.select.AggregationDistinctSelectItemSegment,org.apache.shardingsphere.core.parse.parser.sql.dql.select.SelectStatement)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.common.segment.impl.dql.SelectItemFiller.fillAggregationSelectItemSegment(org.apache.shardingsphere.core.parse.antlr.sql.segment.select.AggregationSelectItemSegment,org.apache.shardingsphere.core.parse.parser.sql.dql.select.SelectStatement,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.common.segment.impl.dql.SelectItemFiller.fillAggregationDistinctSelectItemSegment(org.apache.shardingsphere.core.parse.antlr.sql.segment.select.AggregationDistinctSelectItemSegment,org.apache.shardingsphere.core.parse.parser.sql.dql.select.SelectStatement,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.common.segment.impl.dql.SelectItemFiller.fill(org.apache.shardingsphere.core.parse.antlr.sql.segment.SQLSegment,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OrConditionFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.segment.impl.OrConditionFiller.filterCondition(org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,org.apache.shardingsphere.core.parse.antlr.sql.segment.condition.OrConditionSegment,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsertFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.statement.impl.dml.InsertFiller.createColumn(org.apache.shardingsphere.core.parse.antlr.sql.segment.InsertSegment,org.apache.shardingsphere.core.parse.parser.sql.dml.insert.InsertStatement,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.statement.impl.dml.InsertFiller.fill(org.apache.shardingsphere.core.parse.antlr.sql.segment.InsertSegment,org.apache.shardingsphere.core.parse.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.statement.impl.dml.InsertFiller.getColumnCountExcludeAssistedQueryColumns(org.apache.shardingsphere.core.parse.parser.sql.dml.insert.InsertStatement,org.apache.shardingsphere.core.rule.ShardingRule,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.statement.impl.dml.InsertFiller.createColumn(org.apache.shardingsphere.core.parse.antlr.sql.segment.InsertSegment,org.apache.shardingsphere.core.parse.parser.sql.dml.insert.InsertStatement,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.statement.impl.dml.InsertFiller.createValue(org.apache.shardingsphere.core.parse.antlr.sql.segment.InsertSegment,org.apache.shardingsphere.core.parse.parser.sql.dml.insert.InsertStatement,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.filler.sharding.statement.impl.dml.InsertFiller.createValue(org.apache.shardingsphere.core.parse.antlr.sql.segment.InsertSegment,org.apache.shardingsphere.core.parse.parser.sql.dml.insert.InsertStatement,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AggregationDistinctSelectItemSegment.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.sql.segment.select.AggregationDistinctSelectItemSegment", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AggregationSelectItemSegment.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.sql.segment.select.AggregationSelectItemSegment", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLStatementAssert.java", "spoonMethods": []}, {"spoonFilePath": "EncryptColumnTokenAssert.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.integrate.asserts.token.EncryptColumnTokenAssert", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ParserResult.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.integrate.jaxb.root.ParserResult", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExpectedColumn.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.integrate.jaxb.token.ExpectedColumn", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExpectedEncryptColumnToken.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.integrate.jaxb.token.ExpectedEncryptColumnToken", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExpectedTokens.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.integrate.jaxb.token.ExpectedTokens", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "The field contains single quotation marks. It is written by proxy and will report an error.", "body": "\r\n## Bug Report\r\n\r\n### Test  Topology\r\n(1) python driver ------> proxy ------> mysql\r\n(2) python driver ------> mysql\r\n\r\n### row info:\r\nrows = \r\n((datetime.datetime(2019, 3, 11, 14, 6, 11), datetime.datetime(2019, 3, 11, 14, 6, 11), 1, u\"abc'\"),)\r\n\r\n\r\n### insert statement\r\nsql = \"\"\"\r\ninsert into tbl_key_test (data_create_time,data_update_time,id,key_name_partial) values \r\n(%s, %s, %s, %s )\r\n\"\"\"\r\n\r\n### Test1 python driver ------> proxy ------> mysql\r\n##### connect to  proxy\r\nconn_d = get_mysql_connection('10.10.5.xxx:3306', 'test')\r\ncur_d = conn_d.cursor()\r\ncur_d.executemany(sql , rows)\r\nerror info:\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/cursors.py\", line 169, in executemany\r\n    self.rowcount = sum(self.execute(query, arg) for arg in args)\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/cursors.py\", line 169, in <genexpr>\r\n    self.rowcount = sum(self.execute(query, arg) for arg in args)\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/cursors.py\", line 146, in execute\r\n    result = self._query(query)\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/cursors.py\", line 296, in _query\r\n    conn.query(q)\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/connections.py\", line 781, in query\r\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/connections.py\", line 942, in _read_query_result\r\n    result.read()\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/connections.py\", line 1138, in read\r\n    first_packet = self.connection._read_packet()\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/connections.py\", line 906, in _read_packet\r\n    packet.check_error()\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/connections.py\", line 367, in check_error\r\n    err.raise_mysql_exception(self._data)\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/err.py\", line 120, in raise_mysql_exception\r\n    _check_mysql_exception(errinfo)\r\n  File \"/usr/local/lib/python2.7/site-packages/pymysql/err.py\", line 115, in _check_mysql_exception\r\n    raise InternalError(errno, errorvalue)\r\npymysql.err.InternalError: (3054, u\"Unknown exception: Illegal input, unterminated '''.\")\r\n\r\n\r\n### Test2 python driver ------> mysql\r\n##### connect to mysql\r\nconn_d = get_mysql_connection('10.10.4.xxx:3307', 'test')\r\ncur_d = conn_d.cursor()\r\ncur_d.executemany(sql , rows)\r\nconn_d.commit()\r\n\r\ninsert sucessfully", "url": "https://github.com/apache/shardingsphere/issues/2007", "user": "bruceyan1220", "labels": ["bug", "proxy"], "created": "2019-03-11 07:00:37", "closed": "2019-03-28 04:37:07", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "sharding-jdbc can't work in multi thread  concurrent ", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0.M1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\n\r\n### Actual behavior\r\nmulti thread  concurrent  can't work\r\n\r\n### Reason analyze (If you can)\r\nInsertStatement(other Statement no validation) is not thread safe, PreparedStatementRoutingEngine#route fetch Statement used cache \r\n![image](https://user-images.githubusercontent.com/42688346/53943341-d8359200-40f7-11e9-90d9-623ee854a68e.png)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n![image](https://user-images.githubusercontent.com/42688346/53943248-aa504d80-40f7-11e9-9d4f-106d44987c0d.png)\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1990", "user": "mfeng-ya", "labels": ["bug", "sharding"], "created": "2019-03-07 08:42:12", "closed": "2019-03-12 06:32:15", "commits": {"646809185996338480601d8bc0343c6db6b36f87": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "646809185996338480601d8bc0343c6db6b36f87", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["5b7d4e57d1fa68a56b8ee40e6f7aa86242e9f90d"], "nameRev": "646809185996338480601d8bc0343c6db6b36f87 tags/4.0.0-RC1~331", "commitMessage": "for #1990, refactor InsertColumnValues\n", "commitDateTime": "2019-03-12 22:57:42", "authoredDateTime": "2019-03-12 22:57:42", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parser/sharding-core-parser-common/src/test/resources/META-INF/services/org.apache.shardingsphere.core.parsing.hook.ParsingHook", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/encrypt/EncryptInsertOptimizeEngine.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/engine/sharding/insert/InsertOptimizeEngine.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer/result/InsertColumnValues.java", "insertions": 13, "deletions": 8, "lines": 21}, {"filePath": "sharding-core/sharding-core-rest/src/test/java/org/apache/shardingsphere/core/optimizer/InsertColumnValuesTest.java", "insertions": 2, "deletions": 9, "lines": 11}, {"filePath": "sharding-core/sharding-core-rest/src/test/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngineTest.java", "insertions": 5, "deletions": 16, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncryptInsertOptimizeEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimizer.engine.encrypt.EncryptInsertOptimizeEngine.createInsertColumnValues()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 3}]}, {"spoonFilePath": "InsertOptimizeEngine.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimizer.engine.sharding.insert.InsertOptimizeEngine.createInsertColumnValues()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 3}]}, {"spoonFilePath": "InsertColumnValues.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimizer.result.InsertColumnValues.addInsertColumnValue(java.util.List,java.util.List)", "TOT": 11, "UPD": 3, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.optimizer.result.InsertColumnValues", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.optimizer.result.InsertColumnValues.InsertColumnValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsertColumnValuesTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.optimizer.InsertColumnValuesTest.setUp()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "SQLRewriteEngineTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForAutoGeneratedKeyColumn()", "TOT": 10, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForAutoGeneratedKeyColumnWithoutColumnsWithParameter()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteForAutoGeneratedKeyColumnWithoutColumnsWithoutParameter()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteColumnWithoutColumnsWithoutParameter()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.core.rewrite.SQLRewriteEngineTest.assertRewriteColumnWithoutColumnsWithParameter()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["646809185996338480601d8bc0343c6db6b36f87"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 14, "lines": 29, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 26, "UPD": 3, "INS": 5, "MOV": 10, "DEL": 8, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/sharding-core-rest/src/main/java/org/apache/shardingsphere/core/optimizer"], "changesInPackagesSPOON": ["org.apache.shardingsphere.core.optimizer.result.InsertColumnValues.addInsertColumnValue(java.util.List,java.util.List)", "org.apache.shardingsphere.core.optimizer.result.InsertColumnValues", "org.apache.shardingsphere.core.optimizer.engine.encrypt.EncryptInsertOptimizeEngine.createInsertColumnValues()", "org.apache.shardingsphere.core.optimizer.result.InsertColumnValues.InsertColumnValue", "org.apache.shardingsphere.core.optimizer.engine.sharding.insert.InsertOptimizeEngine.createInsertColumnValues()"]}, {"title": "Exception fired during concurrently query", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0-M1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nExecute query correctly.\r\n### Actual behavior\r\n\r\nException 1:\r\njava.lang.NullPointerException: null\r\n        at com.mysql.jdbc.ResultSetImpl.checkColumnBounds(ResultSetImpl.java:766)\r\n        at com.mysql.jdbc.ResultSetImpl.getObject(ResultSetImpl.java:4420)\r\n        at com.zaxxer.hikari.pool.HikariProxyResultSet.getObject(HikariProxyResultSet.java)\r\n        at org.apache.shardingsphere.core.executor.sql.execute.result.StreamQueryResult.getValue(StreamQueryResult.java:75)\r\n        at org.apache.shardingsphere.core.merger.dql.common.StreamMergedResult.getValue(StreamMergedResult.java:49)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.getQueryData(JDBCDatabaseCommunicationEngine.java:149)\r\n        at org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.MySQLQueryComStmtExecutePacketExecutor.getQueryData(MySQLQueryComStmtExecutePacketExecutor.java:1\r\n13)\r\n        at org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.MySQLQueryComStmtExecutePacketExecutor.getQueryData(MySQLQueryComStmtExecutePacketExecutor.java:5\r\n3)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.writeMoreResults(MySQLFrontendEngine.java:152)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.writePackets(MySQLFrontendEngine.java:133)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.executeCommand(MySQLFrontendEngine.java:108)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.common.netty.FrontendChannelInboundHandler$1.run(FrontendChannelInboundHandler.java:70)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nException 2:\r\njava.sql.SQLException: Operation not allowed after ResultSet closed\r\n        at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)\r\n        at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)\r\n        at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)\r\n        at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)\r\n        at com.mysql.jdbc.ResultSetImpl.checkClosed(ResultSetImpl.java:743)\r\n        at com.mysql.jdbc.ResultSetImpl.next(ResultSetImpl.java:6289)\r\n        at com.zaxxer.hikari.pool.HikariProxyResultSet.next(HikariProxyResultSet.java)\r\n        at org.apache.shardingsphere.core.executor.sql.execute.result.StreamQueryResult.next(StreamQueryResult.java:68)\r\n        at org.apache.shardingsphere.core.merger.dql.iterator.IteratorStreamMergedResult.next(IteratorStreamMergedResult.java:43)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.JDBCDatabaseCommunicationEngine.next(JDBCDatabaseCommunicationEngine.java:141)\r\n        at org.apache.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.MySQLQueryComStmtExecutePacketExecutor.next(MySQLQueryComStmtExecutePacketExecutor.java:108)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.writeMoreResults(MySQLFrontendEngine.java:147)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.writePackets(MySQLFrontendEngine.java:134)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.mysql.MySQLFrontendEngine.executeCommand(MySQLFrontendEngine.java:108)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.common.netty.FrontendChannelInboundHandler$1.run(FrontendChannelInboundHandler.java:70)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nException 3:\r\n[ERROR] 18:30:44.867 [ShardingSphere-Command-20] o.a.s.s.f.c.n.FrontendChannelInboundHandler - Exception occur:\r\njava.sql.SQLException: null\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.throwSQLExceptionIfNecessary(BackendConnection.java:296)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.close(BackendConnection.java:246)\r\n        at org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.close(BackendConnection.java:228)\r\n        at org.apache.shardingsphere.shardingproxy.frontend.common.netty.FrontendChannelInboundHandler$1.run(FrontendChannelInboundHandler.java:73)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n### Reason analyze (If you can)\r\nMySQL connection closed during query. Defect of BackendConnection status management.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n200 connections concurrently execute SQLs.\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1985", "user": "tuohai666", "labels": ["bug", "proxy"], "created": "2019-03-07 04:21:33", "closed": "2019-03-07 07:15:39", "commits": {"5156db8ceb81eed17c47b7158fba4385484e7721": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5156db8ceb81eed17c47b7158fba4385484e7721", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["01ea9b98923fb453457215f4ac657bc6b8a85b6d", "18f80bbbe4d12cd8a47267647fd68cf9d5f2b15e"], "nameRev": "5156db8ceb81eed17c47b7158fba4385484e7721 tags/4.0.0-RC1~426", "commitMessage": "Merge pull request #1987 from tuohai666/dev\n\n#1985, fix backend connection status management", "commitDateTime": "2019-03-07 15:15:38", "authoredDateTime": "2019-03-07 15:15:38", "commitGitStats": [{"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/connection/BackendConnection.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/connection/ConnectionStateHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/test/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/connection/BackendConnectionTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-core/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/command/CommandExecutorTask.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BackendConnection.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection.getConnections(org.apache.shardingsphere.core.constant.ConnectionMode,java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ConnectionStateHandler.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.ConnectionStateHandler.setRunningStatusIfNecessary()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BackendConnectionTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnectionTest.assertAutoCloseConnectionWithoutTransaction()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CommandExecutorTask.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "DefaultDataSource config not useful ", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n3.1.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC \r\n### Expected behavior\r\nno config rule table use default datasource\r\n### Actual behavior\r\nalways first datasource used\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n![image](https://user-images.githubusercontent.com/42688346/53799664-dcd23d00-3f75-11e9-9652-30b68e887891.png)\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1971", "user": "mfeng-ya", "labels": ["bug", "sharding"], "created": "2019-03-05 10:38:31", "closed": "2019-03-14 04:36:53", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Shard table name error when exec select sql in multi thread concurrent", "body": "### Which version of ShardingSphere did you use?\r\nit happened in version3.1.0,  I tested 3.00 && 3.1.0M1, it's ok\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nfor example my sql is:\r\nselect a from test1 where ymd =?\r\nselect b from test2 where ymd =?\r\n\r\nexpected\r\nselect a from test1_20190305 where ymd =20190305\r\nselect b from test2_20190303 where ymd =20190303\r\n\r\n### Actual behavior\r\nselect a from test2_20190305 where ymd =20190305 --table name error\r\nselect b from test1_20190303 where ymd =20190303 --table name error\r\nselect a from test1_20190305 where ymd =20190305\r\nselect b from test2_20190303 where ymd =20190303\r\n\r\n### Reason analyze (If you can)\r\nI trace it in SQLParserEngine.java,  i think it error in this line:\r\nParseTree parseTree = SQLParserFactory.newInstance(databaseType, sql).execute().getChild(0);\r\n\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\njust test it in junit test case\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n    @Test\r\n    public void test6() {\r\n        int i = 0;\r\n        while (i < 100) {\r\n            new Thread(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    List<Map<String, Object>> maps1 = appApOfflineEventMapper.getApOfflineReasonList(\"20190303\");\r\n                    System.out.println(maps1);\r\n                }\r\n            }).start();\r\n\r\n            new Thread(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    List<Map> maps = appApOfflineEventHourStatsMapper.getApOfflineStats(\"20190228\");\r\n                    System.out.println(maps);\r\n                }\r\n\r\n            }).start();\r\n            ++i;\r\n        }\r\n    }\r\n", "url": "https://github.com/apache/shardingsphere/issues/1967", "user": "linyuliang", "labels": ["bug", "sharding"], "created": "2019-03-05 01:53:28", "closed": "2019-03-15 02:00:34", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Proxy will load all schema from registry when startup", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0.M1-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nOnly load some configurations user want from regsitry when startup.\r\n### Actual behavior\r\nLoad all the configs from registry when startup.\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1959", "user": "tristaZero", "labels": ["bug", "proxy"], "created": "2019-03-02 05:47:17", "closed": "2019-03-02 10:21:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "autogen key sharding-column can't be routed succeed while using default sharding strategy", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0.M1-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\norder_id use SNOWFLAKE algorithm, which is the table sharding-colum.\r\n`INSERT INTO t_order (user_id, status) VALUES (?, ?) ` should be routed to\r\nt_order_0 or t_order_1\r\n\r\n### Actual behavior\r\nroute to t_order_0 and t_order_1\r\n\r\n### Reason analyze (If you can)\r\nOptimizeEngine haven't make autogen sharding-column as `ShardingCondition`\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\nfollowing unit test case of sharding-example project.\r\n`io.shardingsphere.example.jdbc.nodep.JavaConfigurationExampleTest#assertShardingTables`\r\n", "url": "https://github.com/apache/shardingsphere/issues/1957", "user": "cherrylzhao", "labels": ["bug", "sharding"], "created": "2019-03-01 10:23:22", "closed": "2019-03-04 17:03:55", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "CachedDatabaseMetaData throw exception when JDBC Driver is postgreSQL JDBC", "body": "`CachedDatabaseMetaData` will cache all attributes of `DatabaseMetaData`, but postgreSQL JDBC not implement `getRowIdLifetime` method so that program throw exception like this \r\n\r\n```\r\nCaused by: java.sql.SQLFeatureNotSupportedException: \u8fd9\u4e2a org.postgresql.jdbc.PgDatabaseMetaData.getRowIdLifetime() \u65b9\u6cd5\u5c1a\u672a\u88ab\u5b9e\u4f5c\u3002\r\n\tat org.postgresql.Driver.notImplemented(Driver.java:688) ~[postgresql-42.2.5.jar:42.2.5]\r\n\tat org.postgresql.jdbc.PgDatabaseMetaData.getRowIdLifetime(PgDatabaseMetaData.java:2562) ~[postgresql-42.2.5.jar:42.2.5]\r\n\tat org.apache.commons.dbcp2.DelegatingDatabaseMetaData.getRowIdLifetime(DelegatingDatabaseMetaData.java:768) ~[commons-dbcp2-2.5.0.jar:2.5.0]\r\n\tat org.apache.commons.dbcp2.DelegatingDatabaseMetaData.getRowIdLifetime(DelegatingDatabaseMetaData.java:768) ~[commons-dbcp2-2.5.0.jar:2.5.0]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.CachedDatabaseMetaData.<init>(CachedDatabaseMetaData.java:431) ~[sharding-jdbc-core-4.0.0.M1-SNAPSHOT.jar:na]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.ShardingContext.createCachedDatabaseMetaData(ShardingContext.java:75) ~[sharding-jdbc-core-4.0.0.M1-SNAPSHOT.jar:na]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.ShardingContext.<init>(ShardingContext.java:62) ~[sharding-jdbc-core-4.0.0.M1-SNAPSHOT.jar:na]\r\n\tat org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource.<init>(ShardingDataSource.java:54) ~[sharding-jdbc-core-4.0.0.M1-SNAPSHOT.jar:na]\r\n\tat org.apache.shardingsphere.shardingjdbc.api.ShardingDataSourceFactory.createDataSource(ShardingDataSourceFactory.java:50) ~[sharding-jdbc-core-4.0.0.M1-SNAPSHOT.jar:na]\r\n\tat io.shardingsphere.issue.config.IssueConfiguration.dataSource(IssueConfiguration.java:79) ~[classes/:na]\r\n\tat io.shardingsphere.issue.config.IssueConfiguration$$EnhancerBySpringCGLIB$$10ed2c4e.CGLIB$dataSource$0(<generated>) ~[classes/:na]\r\n\tat io.shardingsphere.issue.config.IssueConfiguration$$EnhancerBySpringCGLIB$$10ed2c4e$$FastClassBySpringCGLIB$$b27c52fa.invoke(<generated>) ~[classes/:na]\r\n\tat org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) ~[spring-core-4.3.20.RELEASE.jar:4.3.20.RELEASE]\r\n\tat org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) ~[spring-context-4.3.20.RELEASE.jar:4.3.20.RELEASE]\r\n\tat io.shardingsphere.issue.config.IssueConfiguration$$EnhancerBySpringCGLIB$$10ed2c4e.dataSource(<generated>) ~[classes/:na]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_151]\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_151]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_151]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_151]\r\n\tat org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) ~[spring-beans-4.3.20.RELEASE.jar:4.3.20.RELEASE]\r\n\t... 41 common frames omitted\r\n```", "url": "https://github.com/apache/shardingsphere/issues/1948", "user": "KomachiSion", "labels": ["bug", "jdbc"], "created": "2019-02-28 09:43:55", "closed": "2019-03-01 07:54:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "executeBatch result does not match sql statement", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\nobtainExecuteGroups() method order by routeunit by datasource. it cause routeunit in routeUnits different with routeunit  in getExecuteGroups. it cause the execute result dismatch with sql statement", "url": "https://github.com/apache/shardingsphere/issues/1936", "user": "codefairy08", "labels": ["bug", "jdbc"], "created": "2019-02-27 08:48:22", "closed": "2019-03-12 06:05:31", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "oracle getAllTableNames returns oracle build-in table", "body": "xml config:\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n       xmlns:p=\"http://www.springframework.org/schema/p\"\r\n       xmlns:context=\"http://www.springframework.org/schema/context\"\r\n       xmlns:tx=\"http://www.springframework.org/schema/tx\"\r\n       xmlns:sharding=\"http://shardingsphere.io/schema/shardingsphere/sharding\"\r\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans \r\n                        http://www.springframework.org/schema/beans/spring-beans.xsd\r\n                        http://shardingsphere.io/schema/shardingsphere/sharding \r\n                        http://shardingsphere.io/schema/shardingsphere/sharding/sharding.xsd\r\n                        http://www.springframework.org/schema/context\r\n                        http://www.springframework.org/schema/context/spring-context.xsd\r\n                        http://www.springframework.org/schema/tx\r\n                        http://www.springframework.org/schema/tx/spring-tx.xsd\">\r\n    <bean name=\"dataSource_0\" class=\"com.alibaba.druid.pool.DruidDataSource\" init-method=\"init\" destroy-method=\"close\">\r\n        <property name=\"url\" value=\"${jdbc.url_0}\"/>\r\n        <property name=\"username\" value=\"${jdbc.username_0}\"/>\r\n        <property name=\"password\" value=\"${jdbc.password_0}\"/>\r\n        <property name=\"driverClassName\" value=\"${jdbc.driverClassName}\" />\r\n        <!-- \u914d\u7f6e\u521d\u59cb\u5316\u5927\u5c0f\u3001\u6700\u5c0f\u3001\u6700\u5927 -->\r\n        <property name=\"initialSize\" value=\"${jdbc.initialSize}\"/>\r\n        <property name=\"minIdle\" value=\"${jdbc.minIdle}\"/>\r\n        <property name=\"maxActive\" value=\"${jdbc.maxActive}\"/>\r\n        <!-- \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4 -->\r\n        <property name=\"maxWait\" value=\"${jdbc.maxWait}\"/>\r\n    </bean>\r\n    \r\n    <bean name=\"dataSource_1\" class=\"com.alibaba.druid.pool.DruidDataSource\" init-method=\"init\" destroy-method=\"close\">\r\n        <property name=\"url\" value=\"${jdbc.url_1}\"/>\r\n        <property name=\"username\" value=\"${jdbc.username_1}\"/>\r\n        <property name=\"password\" value=\"${jdbc.password_1}\"/>\r\n        <property name=\"driverClassName\" value=\"${jdbc.driverClassName}\" />\r\n        <!-- \u914d\u7f6e\u521d\u59cb\u5316\u5927\u5c0f\u3001\u6700\u5c0f\u3001\u6700\u5927 -->\r\n        <property name=\"initialSize\" value=\"${jdbc.initialSize}\"/>\r\n        <property name=\"minIdle\" value=\"${jdbc.minIdle}\"/>\r\n        <property name=\"maxActive\" value=\"${jdbc.maxActive}\"/>\r\n        <!-- \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4 -->\r\n        <property name=\"maxWait\" value=\"${jdbc.maxWait}\"/>\r\n    </bean>\r\n    \r\n    <bean name=\"globalDataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\" init-method=\"init\" destroy-method=\"close\">\r\n        <property name=\"url\" value=\"${jdbc.url}\"/>\r\n        <property name=\"username\" value=\"${jdbc.username}\"/>\r\n        <property name=\"password\" value=\"${jdbc.password}\"/>\r\n        <property name=\"driverClassName\" value=\"${jdbc.driverClassName}\" />\r\n        <!-- \u914d\u7f6e\u521d\u59cb\u5316\u5927\u5c0f\u3001\u6700\u5c0f\u3001\u6700\u5927 -->\r\n        <property name=\"initialSize\" value=\"${jdbc.initialSize}\"/>\r\n        <property name=\"minIdle\" value=\"${jdbc.minIdle}\"/>\r\n        <property name=\"maxActive\" value=\"${jdbc.maxActive}\"/>\r\n        <!-- \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4 -->\r\n        <property name=\"maxWait\" value=\"${jdbc.maxWait}\"/>\r\n    </bean>\r\n    \r\n    <bean id=\"preciseModuloDatabaseShardingAlgorithm\" class=\"com.hundsun.ta.aop.DemoTableShardingAlgorithm\" />\r\n    <bean id=\"preciseModuloTableShardingAlgorithm\" class=\"com.hundsun.ta.aop.DemoDatabaseShardingAlgorithm\" />\r\n    \r\n    <!-- \u5206\u5e93\u7b56\u7565 -->\r\n    <sharding:standard-strategy id=\"databaseStrategy\" sharding-column=\"user_id\" precise-algorithm-ref=\"preciseModuloDatabaseShardingAlgorithm\" />\r\n    \r\n    <!-- \u5206\u8868\u7b56\u7565 -->\r\n    <sharding:standard-strategy id=\"tableStrategy\" sharding-column=\"user_id\" precise-algorithm-ref=\"preciseModuloTableShardingAlgorithm\" />\r\n\r\n    <sharding:data-source id=\"shardingDataSource\">\r\n        <!-- configDataSource\u4e3a\u4e0d\u53c2\u6570\u5206\u5e93\u5206\u8868\u7684\u5168\u5c40\u8868\u7684\u9ed8\u8ba4\u6570\u636e\u6e90,\u6bd4\u5982\u7cfb\u7edf\u53c2\u6570 -->\r\n        <sharding:sharding-rule data-source-names=\"dataSource_0,dataSource_1,globalDataSource\" default-data-source-name=\"globalDataSource\"\r\n        default-database-strategy-ref=\"databaseStrategy\" default-table-strategy-ref=\"tableStrategy\">\r\n            <sharding:table-rules>\r\n            \t<sharding:table-rule logic-table=\"t_order\" actual-data-nodes=\"dataSource_$->{0..1}.t_order_$->{0..1}\" />\r\n            \t<sharding:table-rule logic-table=\"t_order_item\" actual-data-nodes=\"dataSource_$->{0..1}.t_order_item_$->{0..1}\" />\r\n            \t<sharding:table-rule logic-table=\"t_user\" actual-data-nodes=\"dataSource_$->{0..1}.t_user\"/>\r\n            </sharding:table-rules>\r\n            <!-- \u7ed1\u5b9a\u8868\u89c4\u5219\u5217\u8868,\u8868\u793a\u5206\u5e93\u5206\u8868\u7684\u89c4\u5219\u76f8\u540c,\u8fd9\u6837\u4e07\u4e00\u6d89\u53ca\u5230\u591a\u4e2a\u5206\u7247\u7684\u67e5\u8be2,sharding-jdbc\u5c31\u53ef\u4ee5\u786e\u5b9a\u5206\u5e93\u4e4b\u95f4\u4e0d\u9700\u8981\u4e0d\u5fc5\u8981\u7684\u4e8c\u6b21\u5173\u8054,\u6240\u6709\u6d89\u53ca\u8868\u90fd\u5e94\u8be5\u5982\u6b64\u7ef4\u62a4 -->\r\n            <sharding:binding-table-rules>\r\n                <sharding:binding-table-rule logic-tables=\"t_order,t_order_item\"/>\r\n            </sharding:binding-table-rules>\r\n            <sharding:broadcast-table-rules>\r\n                <sharding:broadcast-table-rule table=\"t_dict\" />\r\n            </sharding:broadcast-table-rules>\r\n        </sharding:sharding-rule>\r\n    </sharding:data-source>\r\n</beans>\r\nmethod io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer#getAllTableNames returns more table then current schema's table. ex. it returns table like SYS_IOT_OVER_84700\u3002\r\nversion:sharding-sphere 3.1.0.\r\nthe reason is  getAllTableNames() method call getTables() pass null to schemaPattern in line 98. as follows:\r\n             ResultSet resultSet = connection.getMetaData().getTables(catalog, null, null, new String[]{\"TABLE\"}))\r\nthe result is app suspend after datasource init.\r\nthe jstack is as follows:\r\n\"main\" #1 prio=5 os_prio=0 tid=0x00000000055ad800 nid=0x154c runnable [0x000000000559c000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.net.SocketInputStream.socketRead0(Native Method)\r\n        at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\n        at java.net.SocketInputStream.read(SocketInputStream.java:171)\r\n        at java.net.SocketInputStream.read(SocketInputStream.java:141)\r\n        at oracle.net.ns.Packet.receive(Packet.java:300)\r\n        at oracle.net.ns.DataPacket.receive(DataPacket.java:106)\r\n        at oracle.net.ns.NetInputStream.getNextPacket(NetInputStream.java:315)\r\n        at oracle.net.ns.NetInputStream.read(NetInputStream.java:260)\r\n        at oracle.net.ns.NetInputStream.read(NetInputStream.java:185)\r\n        at oracle.net.ns.NetInputStream.read(NetInputStream.java:102)\r\n        at oracle.jdbc.driver.T4CSocketInputStreamWrapper.readNextPacket(T4CSocketInputStreamWrapper.java:124)\r\n        at oracle.jdbc.driver.T4CSocketInputStreamWrapper.read(T4CSocketInputStreamWrapper.java:80)\r\n        at oracle.jdbc.driver.T4CMAREngine.unmarshalUB1(T4CMAREngine.java:1137)\r\n        at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:290)\r\n        at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:192)\r\n        at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)\r\n        at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:207)\r\n        at oracle.jdbc.driver.T4CPreparedStatement.fetch(T4CPreparedStatement.java:1119)\r\n        at oracle.jdbc.driver.OracleResultSetImpl.close_or_fetch_from_next(OracleResultSetImpl.java:373)\r\n        - locked <0x0000000780aac2a0> (a oracle.jdbc.driver.T4CConnection)\r\n        at oracle.jdbc.driver.OracleResultSetImpl.next(OracleResultSetImpl.java:277)\r\n        - locked <0x0000000780aac2a0> (a oracle.jdbc.driver.T4CConnection)\r\n        at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getColumnMetaDataList(TableMetaDataLoader.java:137)\r\n        at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(TableMetaDataLoader.java:96)\r\n        at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.access$100(TableMetaDataLoader.java:52)\r\n        at io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader$1.execute(TableMetaDataLoader.java:86)\r\n        at io.shardingsphere.core.executor.ShardingExecuteEngine.syncGroupExecute(ShardingExecuteEngine.java:175)\r\n        at io.shardingsphere.core.executor.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:152)\r\n        at io.shardingsphere.core.executor.ShardingExecuteEngine.groupExecute(ShardingExecuteEngine.java:130)\r\n\r\n### Expected behavior\r\nreturn only tables in current schema.\r\n\r\n### Actual behavior\r\nreturn tables in other schema. all table with access privilege.\r\n\r\n### how to resolve\r\npass schemaName to getTables method in line 98, as follows:\r\n             ResultSet resultSet = connection.getMetaData().getTables(catalog, dataSourceMetaData.getSchemeName(), null, new String[]{\"TABLE\"})) {\r\n", "url": "https://github.com/apache/shardingsphere/issues/1933", "user": "yidu0331", "labels": ["bug", "sharding"], "created": "2019-02-27 06:54:11", "closed": "2019-02-28 10:36:45", "commits": {"8a522e41fcca895e92549672ec907718c5559ff8": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "8a522e41fcca895e92549672ec907718c5559ff8", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["2bb7071fe4412ba825461c162b33589fc18d0a8d", "1bbe50547876766f5d2181149726a315c58aa73c"], "nameRev": "8a522e41fcca895e92549672ec907718c5559ff8 tags/4.0.0-RC1~522", "commitMessage": "Merge pull request #1944 from KomachiSion/dev\n\nFor #1933, use connection.getSchema to filter unnecessary tables", "commitDateTime": "2019-02-28 18:36:45", "authoredDateTime": "2019-02-28 18:36:45", "commitGitStats": [{"filePath": "sharding-core/src/main/java/org/apache/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableMetaDataInitializer.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer.getAllTableNames(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "prepare statement for sharding-proxy have a wrong rout logic.", "body": "when we use master-slave configuration for sharding-proxy, backendHandler  still use sharding-rule to parsing and route logic-sql, we should user master-slave-router directly.", "url": "https://github.com/apache/shardingsphere/issues/1932", "user": "cherrylzhao", "labels": ["bug", "proxy"], "created": "2019-02-27 01:59:20", "closed": "2019-03-01 04:23:22", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "blob column insert exception: Unknown exception: INSERT INTO column size mismatch value size", "body": "## Bug Report\r\n\r\n\r\n### Which version of ShardingSphere did you use?\r\n4.0.0.M1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nsharding-proxy\r\n### Expected behavior\r\nimages table has no shards.\r\n\r\nThe images table structure is as follows\uff1a\r\n\r\n\tCREATE TABLE `images` (\r\n\t  `id` int(11) DEFAULT NULL,\r\n\t  `image` blob\r\n\t) ENGINE=InnoDB DEFAULT CHARSET=utf8;\r\n\r\njava code is as follows\uff1a\r\n\r\n    @Test\r\n    public void blobInsertTest() throws Exception {\r\n\r\n        Class.forName(\"com.mysql.jdbc.Driver\");\r\n\r\n        String sql = \"INSERT INTO images(id,image) values(?,?)\";\r\n        Connection conn = DriverManager.getConnection(url, username, password);\r\n        PreparedStatement ps = conn.prepareStatement(sql);\r\n\r\n        ps.setInt(1,2);\r\n        InputStream in = new FileInputStream(\"f:\\\\1122.jpg\");\r\n        ps.setBlob(2, in);\r\n        int count = ps.executeUpdate();\r\n        System.out.println(count);\r\n\r\n    }\r\n\r\nRun the code normally by connecting mysql.\r\n\r\nRunning code by connecting sharding-proxy  reports the error as follows:\r\n\r\n\tjava.sql.SQLException: Unknown exception: INSERT INTO column size mismatch value size.\r\n\t\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)\r\n\t\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)\r\n\t\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)\r\n\t\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)\r\n\t\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)\r\n\t\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2535)\r\n\t\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1911)\r\n\t\tat com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2145)\r\n\t\tat com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2081)\r\n\t\tat com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2066)\r\n\t\tat com.zhongan.dmds.sharding_sphere.ShardingProxyTest.blobInsertTest(ShardingProxyTest.java:105)\r\n\t\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\t\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\t\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\t\tat java.lang.reflect.Method.invoke(Method.java:601)\r\n\t\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\t\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\t\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\t\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\t\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\t\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\t\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\t\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\t\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\t\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\t\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\t\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\t\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\t\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\r\n\t\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\t\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\r\n\t\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\r\n\t\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\r\n\t\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\r\n       \r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1910", "user": "guowdxp", "labels": ["bug", "sharding"], "created": "2019-02-22 09:06:14", "closed": "2019-05-13 13:04:06", "commits": {"6ffb45dbedb3d8d7bc8e36409fe2e0aa0f61e1a9": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 80.00027777777778, "commitsDetails": [{"commitHash": "6ffb45dbedb3d8d7bc8e36409fe2e0aa0f61e1a9", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["b76a2bcd239c9500eb9ed9f0fc5d919931627237", "15781c6e2bd2cee4e88973a5c6fe38321da53626"], "nameRev": "6ffb45dbedb3d8d7bc8e36409fe2e0aa0f61e1a9 tags/4.0.0-RC2~784", "commitMessage": "Merge pull request #2375 from tuohai666/dev\n\n #1910, blob column insert exception", "commitDateTime": "2019-05-13 21:04:05", "authoredDateTime": "2019-05-13 21:04:05", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/DMLStatement.g4", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/MySQLKeyword.g4", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/insert.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-sql-test/src/main/resources/sql/dml/insert.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "SQLStatement cache for parser-engine should not be a singleton object", "body": "we have used a singleton `ParsingResultCache` which key is prepared logic-sql to cache the SQLStatement. if the sharding-rule of the logic-sql have changed, or access the same logic-sql from multi-sharding-datasources, we will get an unexpected SQLStatement which sharding-condition is wrong. so we should cache the parsed SQLStatement within lifecycle of `ShardingContext`.\r\n\r\n- [x] Make ParsingResultCache multi-instances available\r\n- [x] Using ParsingResultCache in ShardingContext\r\n- [x] resolve memory leak for hash map", "url": "https://github.com/apache/shardingsphere/issues/1877", "user": "cherrylzhao", "labels": ["bug", "enhancement", "sharding"], "created": "2019-02-19 01:06:26", "closed": "2019-02-25 15:19:13", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "Can support associated query??", "body": "Pom dependence\uff1a\r\n```\r\n        <dependency>\r\n            <groupId>io.shardingsphere</groupId>\r\n            <artifactId>sharding-jdbc-core</artifactId>\r\n            <version>3.1.0</version>\r\n        </dependency>\r\n        <!-- mybatis\u5206\u9875 -->\r\n        <dependency>\r\n            <groupId>com.github.pagehelper</groupId>\r\n            <artifactId>pagehelper</artifactId>\r\n            <version>5.0.0</version>\r\n        </dependency>\r\n        <!-- mysql -->\r\n        <dependency>\r\n            <groupId>mysql</groupId>\r\n            <artifactId>mysql-connector-java</artifactId>\r\n            <version>5.1.40</version>\r\n        </dependency>\r\n        <!-- jdbc -->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-jdbc</artifactId>\r\n            <version>1.5.14.RELEASE</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mybatis</groupId>\r\n            <artifactId>mybatis-spring</artifactId>\r\n            <version>1.3.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mybatis</groupId>\r\n            <artifactId>mybatis</artifactId>\r\n            <version>3.4.1</version>\r\n        </dependency>\r\n        <!-- druid -->\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>druid</artifactId>\r\n            <version>1.0.29</version>\r\n        </dependency>\r\n```\r\n\r\nMybatis SQL:\r\n```\r\nselect * from pay_order\r\n\t\t\twhere  payOrderId = (\r\n\t\t\t\tselect payOrderId from pay_suborder\r\n\t\t\t\twhere paySubOrderId = #{paySubOrderId,jdbcType=VARCHAR}\r\n\t\t\t\tand dbPart BETWEEN #{lastDbPart,jdbcType=INTEGER} and # \r\n                                                                   {dbPart,jdbcType=INTEGER}\r\n\t\t\t)\r\n\t\t\tand dbPart BETWEEN #{lastDbPart,jdbcType=INTEGER} and #{dbPart,jdbcType=INTEGER}\r\n\t\t\tlimit 1;\r\n```\r\nspring boot database config\r\n```\r\npackage com.yy.onepiece.pay.persist.base.config;\r\n\r\nimport com.yy.onepiece.pay.persist.DbConfigConstant;\r\nimport com.yy.onepiece.pay.persist.base.config.sharding.ModuloShardingAlgorithm;\r\n\r\nimport com.alibaba.druid.pool.DruidDataSource;\r\nimport com.google.common.collect.Maps;\r\n\r\nimport org.springframework.beans.factory.annotation.Qualifier;\r\nimport org.springframework.boot.context.properties.ConfigurationProperties;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.context.annotation.DependsOn;\r\nimport org.springframework.context.annotation.Primary;\r\nimport org.springframework.jdbc.datasource.DataSourceTransactionManager;\r\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\r\n\r\nimport java.sql.SQLException;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Properties;\r\n\r\nimport javax.sql.DataSource;\r\n\r\nimport io.shardingsphere.api.config.rule.ShardingRuleConfiguration;\r\nimport io.shardingsphere.api.config.rule.TableRuleConfiguration;\r\nimport io.shardingsphere.api.config.strategy.StandardShardingStrategyConfiguration;\r\nimport io.shardingsphere.shardingjdbc.api.ShardingDataSourceFactory;\r\n\r\n/**\r\n * Created by zhangzhe on 2018/7/17.\r\n */\r\n@Configuration\r\n@EnableTransactionManagement\r\npublic class PrimaryDataSourceConfig {\r\n\r\n\r\n    @Bean(initMethod = \"init\", destroyMethod = \"close\", name = DbConfigConstant.PRIMARY_DATASOURCE)\r\n    @Primary\r\n    @ConfigurationProperties(prefix = DbConfigConstant.PRIMARY_DATASOURCE_CONFIG_PREFIX)\r\n    public DataSource primaryDataSource() {\r\n        DruidDataSource dataSource = new DruidDataSource();\r\n        return dataSource;\r\n    }\r\n\r\n    @Bean(name = \"shardingDataSource\")\r\n    @DependsOn(DbConfigConstant.PRIMARY_DATASOURCE)\r\n    public DataSource getShardingDataSource(@Qualifier(DbConfigConstant.PRIMARY_DATASOURCE) DataSource dataSource) throws SQLException {\r\n        Map<String, DataSource> dsMap = Maps.newHashMap();\r\n        dsMap.put(\"luffy_order\", dataSource);\r\n        Properties properties=new Properties();\r\n        properties.setProperty(\"sql.show\",\"true\");\r\n        return ShardingDataSourceFactory.createDataSource(dsMap, getShardingRuleConfiguration(), new HashMap<String, Object>()\r\n                , properties);\r\n    }\r\n\r\n\r\n    @Bean(name = DbConfigConstant.PRIMARY_TRANSACTIONMANAGER)\r\n    @DependsOn(DbConfigConstant.PRIMARY_DATASOURCE)\r\n    @Primary\r\n    public DataSourceTransactionManager transactionManager(@Qualifier(\"shardingDataSource\") DataSource dataSource) {\r\n        return new DataSourceTransactionManager(dataSource);\r\n    }\r\n\r\n\r\n    private static ShardingRuleConfiguration getShardingRuleConfiguration() {\r\n        ShardingRuleConfiguration shardingRuleConfiguration = new ShardingRuleConfiguration();\r\n        TableRuleConfiguration orderTableRuleConfig = new TableRuleConfiguration();\r\n        orderTableRuleConfig.setLogicTable(\"pay_order\");\r\n        orderTableRuleConfig.setActualDataNodes(\"luffy_order.pay_order_${201901..201912}\");\r\n\r\n\r\n        TableRuleConfiguration subOrderTableRuleConfig = new TableRuleConfiguration();\r\n        subOrderTableRuleConfig.setLogicTable(\"pay_suborder\");\r\n        subOrderTableRuleConfig.setActualDataNodes(\"luffy_order.pay_suborder_${201901..201912}\");\r\n\r\n\r\n        TableRuleConfiguration refundTableRuleConfig = new TableRuleConfiguration();\r\n        refundTableRuleConfig.setLogicTable(\"pay_refund_order\");\r\n        refundTableRuleConfig.setActualDataNodes(\"luffy_order.pay_refund_order_${201901..201912}\");\r\n\r\n\r\n        TableRuleConfiguration transferTableRuleConfig = new TableRuleConfiguration();\r\n        transferTableRuleConfig.setLogicTable(\"pay_transfer_account_order\");\r\n        transferTableRuleConfig.setActualDataNodes(\"luffy_order.pay_transfer_account_order_${201901..201912}\");\r\n\r\n\r\n        TableRuleConfiguration transferSubTableRuleConfig = new TableRuleConfiguration();\r\n        transferSubTableRuleConfig.setLogicTable(\"pay_transfer_account_sub_order\");\r\n        transferSubTableRuleConfig.setActualDataNodes(\"luffy_order.pay_transfer_account_sub_order_${201901..201912}\");\r\n\r\n        shardingRuleConfiguration.getTableRuleConfigs().add(orderTableRuleConfig);\r\n        shardingRuleConfiguration.getTableRuleConfigs().add(subOrderTableRuleConfig);\r\n        //shardingRuleConfiguration.getTableRuleConfigs().add(refundTableRuleConfig);\r\n        shardingRuleConfiguration.getTableRuleConfigs().add(transferTableRuleConfig);\r\n        shardingRuleConfiguration.getTableRuleConfigs().add(transferSubTableRuleConfig);\r\n        shardingRuleConfiguration.getBindingTableGroups()\r\n                .add(\"pay_order,pay_suborder,pay_transfer_account_order,pay_transfer_account_sub_order\");\r\n        shardingRuleConfiguration.setDefaultTableShardingStrategyConfig(new StandardShardingStrategyConfiguration(\"dbPart\"\r\n                , new ModuloShardingAlgorithm()));\r\n        shardingRuleConfiguration.setDefaultDataSourceName(\"luffy_order\");\r\n        return shardingRuleConfiguration;\r\n    }\r\n\r\n\r\n}\r\n```\r\n\r\n```\r\npackage com.yy.onepiece.pay.persist.base.config;\r\n\r\nimport com.yy.onepiece.pay.persist.DbConfigConstant;\r\nimport com.yy.onepiece.pay.persist.MyBatisConfig;\r\n\r\nimport org.apache.ibatis.session.SqlSessionFactory;\r\nimport org.mybatis.spring.SqlSessionFactoryBean;\r\nimport org.mybatis.spring.annotation.MapperScan;\r\nimport org.springframework.beans.factory.annotation.Qualifier;\r\nimport org.springframework.boot.context.properties.ConfigurationProperties;\r\nimport org.springframework.context.ApplicationContext;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.context.annotation.DependsOn;\r\nimport org.springframework.core.io.Resource;\r\nimport org.springframework.core.io.support.PathMatchingResourcePatternResolver;\r\nimport org.springframework.core.io.support.ResourcePatternResolver;\r\n\r\nimport javax.sql.DataSource;\r\n\r\nimport io.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource;\r\n\r\n/**\r\n * Created by zhangzhe on 2018/7/17.\r\n */\r\n@Configuration\r\n@MapperScan(basePackages = \"com.yy.onepiece.pay.persist.base.mapper\", sqlSessionFactoryRef = DbConfigConstant.PRIMARY_SQLSESSIONFACTORY)\r\npublic class PrimaryMyBatisMapperConfig {\r\n\r\n    @Bean(DbConfigConstant.PRIMARY_MYBATISCONFIG)\r\n    @ConfigurationProperties(prefix = DbConfigConstant.PRIMARY_MYBATIS_CONFIG_PREFIX)\r\n    public MyBatisConfig myBatisConfig() {\r\n        return new MyBatisConfig();\r\n    }\r\n\r\n    @Bean(name = DbConfigConstant.PRIMARY_SQLSESSIONFACTORY)\r\n    @DependsOn(\"shardingDataSource\")\r\n    public SqlSessionFactory primarySqlSessionFactory(@Qualifier(\"shardingDataSource\") DataSource dataSource\r\n            , @Qualifier(DbConfigConstant.PRIMARY_MYBATISCONFIG) MyBatisConfig primaryMyBatisConfig, ApplicationContext acx)\r\n            throws Exception {\r\n        System.out.println(dataSource);\r\n        SqlSessionFactoryBean factory = new SqlSessionFactoryBean();\r\n        factory.setDataSource(dataSource);\r\n        factory.setConfigLocation(acx.getResource(primaryMyBatisConfig.getConfigLocation()));\r\n        factory.setTypeAliasesPackage(primaryMyBatisConfig.getTypeAliasesPackage());\r\n        ResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\r\n        Resource[] resources;\r\n        resources = resolver.getResources(primaryMyBatisConfig.getMapperLocation());\r\n        factory.setMapperLocations(resources);\r\n        return factory.getObject();\r\n    }\r\n}\r\n```\r\n\r\nwhen I run my test case, debug log is below:\r\n\r\n```\r\n12:02:04.297 [main] INFO  c.alibaba.druid.pool.DruidDataSource 785 - {dataSource-1} inited\r\nio.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource@421a4ee1\r\nLogging initialized using 'class org.apache.ibatis.logging.stdout.StdOutImpl' adapter.\r\n12:02:20.863 [main] INFO  c.y.o.test.sharding.ShardingTest 57 - Started ShardingTest in 42.613 seconds (JVM running for 45.01)\r\nCreating a new SqlSession\r\nRegistering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fe3142]\r\nJDBC Connection [io.shardingsphere.shardingjdbc.jdbc.core.connection.ShardingConnection@4487c0c2] will be managed by Spring\r\n==>  Preparing: select * from pay_order where payOrderId = ( select payOrderId from pay_suborder where paySubOrderId = ? and dbPart BETWEEN ? and ? ) and dbPart BETWEEN ? and ? limit 1; \r\n==> Parameters: SA915778200512946176(String), 201812(Integer), 201901(Integer), 201812(Integer), 201901(Integer)\r\nReleasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fe3142]\r\nTransaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fe3142]\r\nTransaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@49fe3142]\r\n\r\norg.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \r\n### Error querying database.  Cause: java.lang.NullPointerException\r\n### The error may exist in file [E:\\workspace\\gitproject\\zoro\\zoro-pay\\zoro-pay-persist\\target\\classes\\mappers\\base\\PayOrderExtMapper.xml]\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: select * from pay_order    where  payOrderId = (     select payOrderId from pay_suborder     where paySubOrderId = ?     and dbPart BETWEEN ? and ?    )    and dbPart BETWEEN ? and ?    limit 1;\r\n### Cause: java.lang.NullPointerException\r\n\r\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)\r\n\tat com.sun.proxy.$Proxy41.selectOne(Unknown Source)\r\n\tat org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)\r\n\tat com.sun.proxy.$Proxy42.getPayOrderBySubOrderId(Unknown Source)\r\n\tat com.yy.onepiece.test.sharding.PaymentRepository.getPayOrderBySubOrderId(PaymentRepository.java:114)\r\n\tat com.yy.onepiece.test.sharding.PaymentRepository$$FastClassBySpringCGLIB$$2fb360fd.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)\r\n\tat com.yy.onepiece.test.sharding.PaymentRepository$$EnhancerBySpringCGLIB$$edff288b.getPayOrderBySubOrderId(<generated>)\r\n\tat com.yy.onepiece.test.sharding.ShardingTest.testQuery(ShardingTest.java:55)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:51)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:237)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)\r\nCaused by: org.apache.ibatis.exceptions.PersistenceException: \r\n### Error querying database.  Cause: java.lang.NullPointerException\r\n### The error may exist in file [E:\\workspace\\gitproject\\zoro\\zoro-pay\\zoro-pay-persist\\target\\classes\\mappers\\base\\PayOrderExtMapper.xml]\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: select * from pay_order    where  payOrderId = (     select payOrderId from pay_suborder     where paySubOrderId = ?     and dbPart BETWEEN ? and ?    )    and dbPart BETWEEN ? and ?    limit 1;\r\n### Cause: java.lang.NullPointerException\r\n\tat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\r\n\t... 50 more\r\nCaused by: java.lang.NullPointerException\r\n\tat io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:139)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)\r\n\tat com.sun.proxy.$Proxy53.execute(Unknown Source)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\r\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\r\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\r\n\tat com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:141)\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)\r\n\tat com.sun.proxy.$Proxy51.query(Unknown Source)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\r\n\t... 57 more\r\n\r\n12:02:22.377 [Thread-1] INFO  o.s.c.a.AnnotationConfigApplicationContext 984 - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@748741cb: startup date [Sun Feb 17 12:01:39 CST 2019]; root of context hierarchy\r\n12:02:22.404 [Thread-1] INFO  c.alibaba.druid.pool.DruidDataSource 1534 - {dataSource-1} closed\r\n\r\nProcess finished with exit code -1\r\n````\r\n\r\nwhat's wrong?? sharding jdbc not support  associated query??\r\n\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1873", "user": "AllenTan", "labels": ["bug", "sharding"], "created": "2019-02-17 04:06:19", "closed": "2019-02-18 14:53:41", "commits": {"a6a7d3e0525c4bc2111fd23d9507aa8d462f7d25": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "a6a7d3e0525c4bc2111fd23d9507aa8d462f7d25", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["8579b3db69bf05ad913c6402a783733779f613e2", "cb0a461e79c47b49a70e87e8de9c3e732bf67988"], "nameRev": "a6a7d3e0525c4bc2111fd23d9507aa8d462f7d25 tags/4.0.0-RC1~618", "commitMessage": "Merge pull request #1876 from codefairy08/dev\n\n #1873 bug fixs", "commitDateTime": "2019-02-18 18:38:30", "authoredDateTime": "2019-02-18 18:38:30", "commitGitStats": [{"filePath": "sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/OrConditionFiller.java", "insertions": 39, "deletions": 19, "lines": 58}, {"filePath": "sharding-core/src/main/java/org/apache/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java", "insertions": 21, "deletions": 44, "lines": 65}, {"filePath": "sharding-core/src/test/java/org/apache/shardingsphere/core/routing/type/standard/SubqueryRouteTest.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrConditionFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.getTableName(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parsing.parser.context.table.Tables,org.apache.shardingsphere.core.parsing.antlr.sql.segment.condition.ConditionSegment)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.getTableNameFromMetaData(org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,org.apache.shardingsphere.core.parsing.parser.context.table.Tables,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.fillResult(org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parsing.parser.context.condition.OrCondition,java.util.List,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.getTableName(org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.parsing.antlr.sql.segment.condition.ConditionSegment)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.getTableName(org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parsing.parser.context.table.Tables,org.apache.shardingsphere.core.parsing.antlr.sql.segment.condition.ConditionSegment)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.filterShardingCondition(org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.parsing.antlr.sql.segment.condition.OrConditionSegment,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule,java.util.Map,java.util.Map)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.getTableName(org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.parsing.antlr.sql.segment.condition.ConditionSegment)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ParsingSQLRouter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.checkSubqueryShardingValues(org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.parsing.parser.context.condition.Conditions,org.apache.shardingsphere.core.optimizer.condition.ShardingConditions)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.apache.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.route(java.lang.String,java.util.List,org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement)", "TOT": 8, "UPD": 0, "INS": 5, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.isShardingOperatorAllEqual(org.apache.shardingsphere.core.parsing.parser.context.condition.Conditions)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.isShardingOperatorAllEqual(org.apache.shardingsphere.core.parsing.parser.context.condition.AndCondition)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.isListShardingValue(org.apache.shardingsphere.core.optimizer.condition.ShardingConditions)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.checkSubqueryShardingValues(org.apache.shardingsphere.core.routing.SQLRouteResult,org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.parsing.parser.context.condition.Conditions,org.apache.shardingsphere.core.optimizer.condition.ShardingConditions)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SubqueryRouteTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.routing.type.standard.SubqueryRouteTest.assertBindingTableWithDifferentValue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.routing.type.standard.SubqueryRouteTest.assertTwoTableWithDifferentOperator()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.routing.type.standard.SubqueryRouteTest.assertTwoTableWithIn()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.routing.type.standard.SubqueryRouteTest.assertSubqueryInSubqueryError()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.routing.type.standard.SubqueryRouteTest.assertSubqueryWithoutHint()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "DQL table name is the same with alias rewrite wrong SQL", "body": "## Bug Report\r\ntable name is the same with alias, then use column with alias, rewrite the wrong sql.\r\n logic  SQL : SELECT t_order.order_id FROM t_order t_order WHERE t_order.user_id = ?\r\nwrong actual SQL: SELECT t_order_1 .order_id FROM t_order_1 t_order WHERE t_order_1 .user_id = ?\r\ncorrect actual SQL:  SELECT t_order.order_id FROM t_order_1 t_order WHERE t_order.user_id = ?\r\n", "url": "https://github.com/apache/shardingsphere/issues/1865", "user": "codefairy08", "labels": ["bug", "sharding"], "created": "2019-02-15 04:59:25", "closed": "2019-02-18 14:54:02", "commits": {"301beb8c330b7a64d4256e439fd32bd9d4f194be": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "ea10a390db29a7a1eb893ec4388cc862cebcec93": {"commitGHEventType": "referenced", "commitUser": "codefairy08"}, "2a4c648f808a44885da0f9e31ea44b57d08a9807": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "301beb8c330b7a64d4256e439fd32bd9d4f194be", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["f55c891a8a753af8ceb354bf7b252c4366438769", "872c29efdd1ce82888a3e7af263283062dec4f36"], "nameRev": "301beb8c330b7a64d4256e439fd32bd9d4f194be tags/4.0.0-RC1~648", "commitMessage": "Merge pull request #1867 from codefairy08/dev\n\n#1865 bug fixs", "commitDateTime": "2019-02-15 17:20:42", "authoredDateTime": "2019-02-15 17:20:42", "commitGitStats": [{"filePath": "sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/OrConditionFiller.java", "insertions": 12, "deletions": 10, "lines": 22}, {"filePath": "sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/dql/SelectItemFiller.java", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/context/table/Tables.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "sharding-core/src/test/resources/parser/select.xml", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/integrate/cases/dql/dql-integrate-test-cases.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrConditionFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.filterShardingCondition(org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.parsing.antlr.sql.segment.condition.OrConditionSegment,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule,java.util.Map,java.util.Map)", "TOT": 48, "UPD": 10, "INS": 1, "MOV": 31, "DEL": 6}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.addTableTokenForColumn(org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.parsing.antlr.sql.segment.column.ColumnSegment)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SelectItemFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.dql.SelectItemFiller.fillStarSelectItemSegment(org.apache.shardingsphere.core.parsing.antlr.sql.segment.select.StarSelectItemSegment,org.apache.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.dql.SelectItemFiller.fillColumnSelectItemSegment(org.apache.shardingsphere.core.parsing.antlr.sql.segment.select.ColumnSelectItemSegment,org.apache.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Tables.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parsing.parser.context.table.Tables.isTableAlias(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ea10a390db29a7a1eb893ec4388cc862cebcec93", "commitGHEventType": "referenced", "commitUser": "codefairy08", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2a4c648f808a44885da0f9e31ea44b57d08a9807", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["f39f57bd84b5ed568aefe1b49533875150b14c1a", "346ce94f7404991d14aa3cf110dce46f467fd27a"], "nameRev": "2a4c648f808a44885da0f9e31ea44b57d08a9807 tags/4.0.0-RC1~635", "commitMessage": "Merge pull request #1871 from codefairy08/dev\n\n #1865 bug fixs", "commitDateTime": "2019-02-17 13:32:44", "authoredDateTime": "2019-02-17 13:32:44", "commitGitStats": [{"filePath": "sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/OrConditionFiller.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/antlr/filler/impl/dql/SelectItemFiller.java", "insertions": 17, "deletions": 10, "lines": 27}, {"filePath": "sharding-core/src/main/java/org/apache/shardingsphere/core/parsing/parser/context/table/Tables.java", "insertions": 0, "deletions": 10, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrConditionFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.filterShardingCondition(org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.parsing.antlr.sql.segment.condition.OrConditionSegment,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule,java.util.Map,java.util.Map)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.addTableTokenForColumn(org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.parsing.antlr.sql.segment.column.ColumnSegment)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.buildCondition(org.apache.shardingsphere.core.parsing.antlr.sql.segment.condition.OrConditionSegment,org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.OrConditionFiller.addTableTokenForColumn(org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,org.apache.shardingsphere.core.parsing.antlr.sql.segment.column.ColumnSegment)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SelectItemFiller.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.dql.SelectItemFiller.fillStarSelectItemSegment(org.apache.shardingsphere.core.parsing.antlr.sql.segment.select.StarSelectItemSegment,org.apache.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.dql.SelectItemFiller.fillColumnSelectItemSegment(org.apache.shardingsphere.core.parsing.antlr.sql.segment.select.ColumnSelectItemSegment,org.apache.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.dql.SelectItemFiller.fillStarSelectItemSegment(org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,org.apache.shardingsphere.core.parsing.antlr.sql.segment.select.StarSelectItemSegment,org.apache.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.dql.SelectItemFiller.fillColumnSelectItemSegment(org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData,org.apache.shardingsphere.core.parsing.antlr.sql.segment.select.ColumnSelectItemSegment,org.apache.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parsing.antlr.filler.impl.dql.SelectItemFiller.fill(org.apache.shardingsphere.core.parsing.antlr.sql.segment.SQLSegment,org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.core.rule.ShardingRule,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Tables.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parsing.parser.context.table.Tables.isTableAlias(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "4.0.0.M1-SNAPSHOT report a error :  current logic schema is null", "body": "The version using sharding-sphere is 4.0.0.M1-SNAPSHOT.\r\nI use sharding-Proxy.\r\nI configure a config-sharding file, there is no problem in querying data with java code, but I will get an error when connecting to the service with navicat.\r\n\r\n     Unknown exception: current logic schema is null\r\n\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1830", "user": "guowdxp", "labels": ["bug", "proxy"], "created": "2019-01-28 07:21:59", "closed": "2019-02-20 06:29:49", "commits": {"4b1cc76450542840d42d076faae89458484ecee4": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "d586f8f90515c33220e157cf260c69c22732c620": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "4b1cc76450542840d42d076faae89458484ecee4", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["798b65eb4c0f8499e8da952ba174249e8f4323b2", "cf4c8adef0eae91560cacfd71494b9c040112841"], "nameRev": "4b1cc76450542840d42d076faae89458484ecee4 tags/4.0.0-RC1~603", "commitMessage": "Merge pull request #1875 from tuohai666/dev\n\n#1830, for GUI and CLI compatibility", "commitDateTime": "2019-02-20 14:29:48", "authoredDateTime": "2019-02-20 14:29:48", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/ComQueryBackendHandlerFactory.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/GUICompatibilityBackendHandler.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ShowDatabasesBackendHandler.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/transport/common/packet/command/query/DataHeaderPacket.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "sharding-proxy/src/test/java/org/apache/shardingsphere/shardingproxy/backend/text/admin/ShowDatabasesBackendHandlerTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ComQueryBackendHandlerFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.ComQueryBackendHandlerFactory", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.ComQueryBackendHandlerFactory.createDALBackendHandler(org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GUICompatibilityBackendHandler.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.admin.GUICompatibilityBackendHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShowDatabasesBackendHandler.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.admin.ShowDatabasesBackendHandler.execute()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 4}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.admin.ShowDatabasesBackendHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DataHeaderPacket.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.transport.common.packet.command.query.DataHeaderPacket", "TOT": 10, "UPD": 0, "INS": 4, "MOV": 5, "DEL": 1}]}, {"spoonFilePath": "ShowDatabasesBackendHandlerTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.admin.ShowDatabasesBackendHandlerTest.assertShowDatabaseUsingStream()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d586f8f90515c33220e157cf260c69c22732c620", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["52d94dfee98e08a97396c4f64fca997b36e4d1bc", "d06ae376c2e53001f41cfea603814939047e4e67"], "nameRev": "d586f8f90515c33220e157cf260c69c22732c620 tags/4.0.0-RC1~601", "commitMessage": "Merge pull request #1895 from tuohai666/dev\n\n#1830, more compatibility ", "commitDateTime": "2019-02-20 18:09:40", "authoredDateTime": "2019-02-20 18:09:40", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/ComQueryBackendHandlerFactory.java", "insertions": 11, "deletions": 7, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ComQueryBackendHandlerFactory.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.ComQueryBackendHandlerFactory", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.apache.shardingsphere.shardingproxy.backend.text.ComQueryBackendHandlerFactory.createDALBackendHandler(org.apache.shardingsphere.core.parsing.parser.sql.SQLStatement,java.lang.String,org.apache.shardingsphere.shardingproxy.backend.communication.jdbc.connection.BackendConnection)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "sharding-sphere is 4.0.0.M1-SNAPSHOT cann't configure  multiple config-sharding files.", "body": "The version using sharding-sphere is 4.0.0.M1-SNAPSHOT\u3002\r\nI configure a config-sharding file and the query is ok\uff0cbut I configure multiple config-sharding files, execute sql query with java code will report an error\uff1a\r\n\r\nException in thread \"main\" java.sql.SQLException: Unknown exception: null\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)\r\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)\r\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)\r\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2531)\r\n\tat com.mysql.jdbc.ConnectionImpl.configureClientCharacterSet(ConnectionImpl.java:1765)\r\n\tat com.mysql.jdbc.ConnectionImpl.initializePropsFromServer(ConnectionImpl.java:3364)\r\n\tat com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2283)\r\n\tat com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2069)\r\n\tat com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:794)\r\n\tat com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:44)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:525)\r\n\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:389)\r\n\tat com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:399)\r\n\tat com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:325)\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:579)\r\n\tat java.sql.DriverManager.getConnection(DriverManager.java:221)\r\n\tat com.zhongan.dmds.sharding_sphere.QueryTest.main(QueryTest.java:32)", "url": "https://github.com/apache/shardingsphere/issues/1829", "user": "guowdxp", "labels": ["bug", "proxy"], "created": "2019-01-28 06:56:49", "closed": "2019-02-20 08:58:31", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "the replaySetParameter cost much time on mysql batch insert.", "body": "## Feature Request\r\n\r\nTest follow:\r\nINSERT INTO tb_credit_info_1 (col1, col2, co3, ... col27),(col1, col2, co3, ... col27),(col1, col2, co3, ... col27) .....\r\n\r\n1. There are 27 column in tb_credit_info_1;\r\n2. batch 2000 insert .\r\n\r\nthe replaySetParameter() in AbstractShardingPreparedStatementAdapter cost 1.5 seconds\uff0cthis is Unacceptable\u3002\r\n\r\ni think the reason is that it requires 52000 ( 27*2000 ) reflection invoke.\r\n", "url": "https://github.com/apache/shardingsphere/issues/1820", "user": "feelwing1314", "labels": ["bug", "jdbc"], "created": "2019-01-25 07:40:56", "closed": "2019-01-28 15:15:41", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "without check for subquery  with hint", "body": "Subquery in select may route more than one shards, it cause a wrong result for select,so shardingsphere just support '=' for shard column, in some case, user sure query result in one shard, user hope use hint for support any other logic operator('in' ,'between and'...) .\r\n", "url": "https://github.com/apache/shardingsphere/issues/1816", "user": "codefairy08", "labels": ["bug", "sharding"], "created": "2019-01-25 02:29:05", "closed": "2019-03-28 08:36:12", "commits": {}, "ttf": 62.000277777777775, "commitsDetails": []}, {"title": "typo in cn doc", "body": "English doc : Architects can adjust the system architecture to the most applicable one to current business more freely\r\nGoogle translate : \u4f7f\u5f97\u67b6\u6784\u5e08\u53ef\u4ee5\u66f4\u81ea\u7531\u5730\u5c06\u7cfb\u7edf\u67b6\u6784\u8c03\u6574\u4e3a\u6700\u9002\u7528\u4e8e\u5f53\u524d\u4e1a\u52a1\u7684\u67b6\u6784\r\ncn doc :\r\nhttp://shardingsphere.io/document/current/cn/overview/\r\n _\u4f7f\u5f97\u67b6\u6784\u5e08_ \u66f4\u52a0\u81ea\u7531\u7684\u8c03\u6574 _\u9002\u5408\u4e0e_ \u5f53\u524d\u4e1a\u52a1\u7684\u6700\u4f73\u7cfb\u7edf\u67b6\u6784\r\n\r\n1\u3001change \"\u9002\u7528\u4e0e\" to \"\u9002\u7528\u4e8e\" and \"\u4f7f\u5f97\u67b6\u6784\u5e08\" to \"\u4f7f\u5f97\u67b6\u6784\u5e08\u53ef\u4ee5\" or \"\u67b6\u6784\u5e08\u53ef\u4ee5\"\r\n2\u3001Just use the google translate which is more unified ", "url": "https://github.com/apache/shardingsphere/issues/1811", "user": "hqq2023623", "labels": ["bug"], "created": "2019-01-24 06:29:10", "closed": "2019-01-25 05:12:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "sharding-proxy  got different shard result when we use : algorithmExpression: consumer_${id_card.substring(12)} ", "body": "**vsersion : 3.1.0**\r\nwhen we use the sharding-proxy,we specified algorithmExpression like this:\r\n`algorithmExpression: consumer_${id_card.substring(12)}`  , the test of `id_card -> 1547717441768` .\r\nthen we had the following tests:\r\n\r\n```\r\nLogic SQL: insert into consumer(id_card) values('1547717441768')\r\n#Expected\r\nShardingSphere-SQL - Actual SQL: ds_0 ::: insert into consumer_8(id_card) values('1547717441768')\r\n```\r\n\r\n```\r\nLogic SQL: select * from consumer WHERE id_card ='1547717441768'\r\n#Not what we expected\r\nActual SQL: ds_0 ::: select * from consumer_68' WHERE id_card ='1547717441768'\r\n```\r\nDid you forget to handle  the quotes at the head and tail?\r\n", "url": "https://github.com/apache/shardingsphere/issues/1784", "user": "pleasecheckhere2016", "labels": ["bug"], "created": "2019-01-21 02:14:44", "closed": "2019-01-25 05:06:29", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "CachedDatabaseMetaData.getTables failed with hibernate when hibernate.hbm2ddl.auto is update", "body": "My project uses spring boot, mysql and jpa(hibernate). \r\nRight now I want to include sharding table feature to the existing project for some big table.\r\nI just adjust the code for intializing the datasource, add sharding rule after the old code. And I'm using the version **3.1.0**.\r\n    @Bean(name = \"dataSource\")\r\n    @Primary\r\n    public DataSource dataSource() throws SQLException {\r\n        BasicDataSource dataSource = new BasicDataSource();\r\n        if (ExtraConfig.isDev()) {\r\n            dataSource.setMaxTotal(20);\r\n            dataSource.setInitialSize(8);\r\n            dataSource.setMinIdle(8);\r\n            dataSource.setMaxIdle(12);\r\n        } else {\r\n            dataSource.setMaxTotal(150);\r\n            dataSource.setInitialSize(40);\r\n            dataSource.setMinIdle(40);\r\n            dataSource.setMaxIdle(80);\r\n        }\r\n        dataSource.setMaxWaitMillis(10000);\r\n        dataSource.setRemoveAbandonedTimeout(10);\r\n        dataSource.setDriverClassName(connectionSetting.getDriver());\r\n        dataSource.setUrl(connectionSetting.getUrl() + \"?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=TRUE\");\r\n        dataSource.setUsername(connectionSetting.getUsername());\r\n        dataSource.setPassword(connectionSetting.getPassword());\r\n        ArrayList<String> initSQLs = new ArrayList<String>();\r\n        initSQLs.add(\"SET NAMES 'utf8mb4'\");\r\n        dataSource.setConnectionInitSqls(initSQLs);\r\n        dataSource.setCacheState(false);\r\n        \r\n        Map<String, DataSource> dataSourceMap = new HashMap<>();\r\n        dataSourceMap.put(\"ds0\", dataSource);       \r\n        \r\n        // Configure table rule \r\n        TableRuleConfiguration logTableRuleConfig = new TableRuleConfiguration();\r\n        logTableRuleConfig.setLogicTable(\"center_op_log\");\r\n        logTableRuleConfig.setActualDataNodes(\"ds0.center_op_log${0..4}\");\r\n        \r\n        // Configure strategies for database + table sharding \r\n        logTableRuleConfig.setTableShardingStrategyConfig(new InlineShardingStrategyConfiguration(\"mainCenterId\", \"center_op_log${mainCenterId % 4}\"));\r\n        \r\n        // Configure sharding rule\r\n        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\r\n        shardingRuleConfig.getTableRuleConfigs().add(logTableRuleConfig);\r\n        shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new NoneShardingStrategyConfiguration());\r\n        \r\n        Properties properties = new Properties();\r\n        \r\n        return ShardingDataSourceFactory.createDataSource(dataSourceMap, shardingRuleConfig, new ConcurrentHashMap<>(), properties);\r\n    }\r\n\r\nAnd db schema will be updated while the project is running, but the SQLFeatureNotSupportedException(\"getCatalog\") was thrown, and below is the fragment of the stack trace.\r\nCould please help me figout it out? Thanks in advance!\r\n\r\n[2019-01-18 10:53:34.545] boot - 17512  INFO [main] --- Version: HHH000412: Hibernate Core {4.3.10.Final}\r\n[2019-01-18 10:53:34.547] boot - 17512  INFO [main] --- Environment: HHH000206: hibernate.properties not found\r\n[2019-01-18 10:53:34.549] boot - 17512  INFO [main] --- Environment: HHH000021: Bytecode provider name : javassist\r\n[2019-01-18 10:53:34.946] boot - 17512  INFO [main] --- Version: HCANN000001: Hibernate Commons Annotations {4.0.5.Final}\r\n[2019-01-18 10:53:37.295] boot - 17512  WARN [main] --- TypeInfo: HHH000362: Unable to retrieve type info result set : java.sql.SQLException: Connection is null.\r\n[2019-01-18 10:53:37.304] boot - 17512  INFO [main] --- Dialect: HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect\r\n[2019-01-18 10:53:37.310] boot - 17512  WARN [main] --- JdbcServicesImpl: HHH000341: Could not obtain connection metadata : getCatalog\r\n[2019-01-18 10:53:37.314] boot - 17512  INFO [main] --- LobCreatorBuilder: HHH000422: Disabling contextual LOB creation as connection was null\r\n[2019-01-18 10:53:37.707] boot - 17512  INFO [main] --- ASTQueryTranslatorFactory: HHH000397: Using ASTQueryTranslatorFactory\r\n[2019-01-18 10:53:38.934] boot - 17512  INFO [main] --- SchemaUpdate: HHH000228: Running hbm2ddl schema update\r\n[2019-01-18 10:53:38.934] boot - 17512  INFO [main] --- SchemaUpdate: HHH000102: Fetching database metadata\r\n[2019-01-18 10:53:38.943] boot - 17512  INFO [main] --- SchemaUpdate: HHH000396: Updating schema\r\n[2019-01-18 10:53:41.640] boot - 17512  WARN [main] --- SqlExceptionHelper: SQL Error: 0, SQLState: null\r\n[2019-01-18 10:53:41.640] boot - 17512 ERROR [main] --- SqlExceptionHelper: Connection is null.\r\n[2019-01-18 10:53:41.641] boot - 17512 ERROR [main] --- SchemaUpdate: HHH000299: Could not complete schema update\r\njava.lang.NullPointerException\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:126)\r\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:112)\r\n\tat org.hibernate.tool.hbm2ddl.DatabaseMetadata.getTableMetadata(DatabaseMetadata.java:158)\r\n\tat org.hibernate.cfg.Configuration.generateSchemaUpdateScriptList(Configuration.java:1204)\r\n\tat org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:237)\r\n\tat org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203)\r\n\tat org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:522)\r\n\tat org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1859)\r\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:857)\r\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl$4.perform(EntityManagerFactoryBuilderImpl.java:850)\r\n\tat org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.withTccl(ClassLoaderServiceImpl.java:425)\r\n\tat org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:849)\r\n\tat org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:60)\r\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:343)\r\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1633)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1570)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)\r\n\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:351)\r\n\tat org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:108)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:634)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:444)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1119)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1014)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1120)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1044)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1120)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1044)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1120)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1044)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:533)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:523)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:512)\r\n\tat org.springframework.security.config.annotation.web.configuration.AutowiredWebSecurityConfigurersIgnoreParents.getWebSecurityConfigurers(AutowiredWebSecurityConfigurersIgnoreParents.java:52)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:112)\r\n\tat org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:129)\r\n\tat org.springframework.expression.spel.ast.MethodReference.access$000(MethodReference.java:49)\r\n\tat org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:342)\r\n\tat org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)\r\n\tat org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:120)\r\n\tat org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:242)\r\n\tat org.springframework.context.expression.StandardBeanExpressionResolver.evaluate(StandardBeanExpressionResolver.java:161)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.evaluateBeanDefinitionString(AbstractBeanFactory.java:1365)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:957)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:942)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:606)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:331)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1210)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:537)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:368)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1119)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1014)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:476)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:303)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:299)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\r\n\tat org.springframework.boot.context.embedded.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:209)\r\n\tat org.springframework.boot.context.embedded.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:165)\r\n\tat org.springframework.boot.context.embedded.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:160)\r\n\tat org.springframework.boot.context.embedded.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:143)\r\n\tat org.springframework.boot.context.embedded.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:74)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.getServletContextInitializerBeans(EmbeddedWebApplicationContext.java:234)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.selfInitialize(EmbeddedWebApplicationContext.java:221)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.access$000(EmbeddedWebApplicationContext.java:84)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext$1.onStartup(EmbeddedWebApplicationContext.java:206)\r\n\tat org.springframework.boot.context.embedded.jetty.ServletContextInitializerConfiguration$Initializer.callInitializers(ServletContextInitializerConfiguration.java:96)\r\n\tat org.springframework.boot.context.embedded.jetty.ServletContextInitializerConfiguration$Initializer.doStart(ServletContextInitializerConfiguration.java:85)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\r\n\tat org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)\r\n\tat org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:106)\r\n\tat org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.doStart(ScopedHandler.java:120)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:784)\r\n\tat org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:294)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startWebapp(WebAppContext.java:1349)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1342)\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:741)\r\n\tat org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:505)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\r\n\tat org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:132)\r\n\tat org.eclipse.jetty.server.Server.start(Server.java:387)\r\n\tat org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:114)\r\n\tat org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:61)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:354)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\r\n\tat org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainer.initialize(JettyEmbeddedServletContainer.java:83)\r\n\tat org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainer.<init>(JettyEmbeddedServletContainer.java:72)\r\n\tat org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainerFactory.getJettyEmbeddedServletContainer(JettyEmbeddedServletContainerFactory.java:389)\r\n\tat org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainerFactory.getEmbeddedServletContainer(JettyEmbeddedServletContainerFactory.java:135)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:157)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:130)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:474)\r\n\tat org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:118)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:686)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:320)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:957)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:946)\r\n\tat com.bodytrack.restapi.Application.main(Application.java:27)", "url": "https://github.com/apache/shardingsphere/issues/1774", "user": "jmbkeyes", "labels": ["bug", "jdbc"], "created": "2019-01-18 02:57:53", "closed": "2019-02-26 12:28:18", "commits": {"d9d3bd5b2fabba6a28bd69166361443fec98c326": {"commitGHEventType": "closed", "commitUser": "terrymanu"}, "d44e1697748b57c8ec2052960cb878272a7c3389": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "d9d3bd5b2fabba6a28bd69166361443fec98c326", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d44e1697748b57c8ec2052960cb878272a7c3389", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["13b0c2a60bd3c03fe423889dc3d33c8f7de3b18b", "5341fcf910a86998e1741be4be068641d2247e44"], "nameRev": "d44e1697748b57c8ec2052960cb878272a7c3389 tags/4.0.0-RC1~550", "commitMessage": "Merge pull request #1925 from KomachiSion/metadata\n\nFixes #1774, Add DatabaseMetaDataResultSet", "commitDateTime": "2019-02-26 20:28:17", "authoredDateTime": "2019-02-26 20:28:17", "commitGitStats": [{"filePath": "sharding-core/src/main/java/org/apache/shardingsphere/core/rule/ShardingDataSourceNames.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/ShardingContext.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/{CachedDatabaseMetaDataAdapter.java => AdaptedDatabaseMetaData.java}", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/CachedDatabaseMetaData.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/{UnsupportedOperationCachedMetaData.java => ConnectionRequiredDatabaseMetaData.java}", "insertions": 46, "deletions": 38, "lines": 84}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/ResultSetReturnedDatabaseMetaData.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/DatabaseMetaDataResultSet.java", "insertions": 348, "deletions": 0, "lines": 348}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/unsupported/AbstractUnsupportedDatabaseMetaDataResultSet.java", "insertions": 207, "deletions": 0, "lines": 207}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/AllCoreTests.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/CachedDatabaseMetaDataTest.java", "insertions": 105, "deletions": 56, "lines": 161}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/resultset/DatabaseMetaDataResultSetTest.java", "insertions": 332, "deletions": 0, "lines": 332}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/unsupported/AllUnsupportedTests.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/unsupported/UnSupportedDatabaseMetaDataResultSetTest.java", "insertions": 210, "deletions": 0, "lines": 210}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Get exceptions while config refreshed  through Orchestration", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n3.1.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nno exception\r\n### Actual behavior\r\n2 kinds of exceptions occur:\r\n```\r\n[2019-01-17 16:18:39.173 - INFO] com.alibaba.druid.pool.DruidDataSource   :  - {dataSource-7} closed\r\n[2019-01-17 16:18:39.173 - INFO] com.alibaba.druid.pool.DruidDataSource   :  - {dataSource-8} closed\r\n[2019-01-17 16:18:39.194 - INFO] com.alibaba.druid.pool.DruidDataSource   :  - {dataSource-9,DataSource-1508432502} inited\r\n[2019-01-17 16:18:39.199 - INFO] com.alibaba.druid.pool.DruidDataSource   :  - {dataSource-10,DataSource-888722104} inited\r\n[2019-01-17 16:18:39.253 -ERROR] c.a.dubbo.rpc.filter.ExceptionFilter     :  -  [DUBBO] Got unchecked and undeclared exception which called by 10.1.0.1. service: com.za.blacklist.modules.blackmember.facade.BlacklistFacade, method: inBlacklist, exception: org.springframework.jdbc.UncategorizedSQLException:\r\n### Error querying database.  Cause: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Jan 17 16:18:39 CST 2019\r\n### The error may exist in class path resource [mapper/BlackMemberMapper.xml]\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: SELECT DISTINCT passiveId FROM BlackMember WHERE memberId = ? AND activeId = ? AND shieldStatus=1 AND project = ?\r\n### Cause: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Jan 17 16:18:39 CST 2019\r\n; uncategorized SQLException for SQL []; SQL state [null]; error code [0]; dataSource already closed at Thu Jan 17 16:18:39 CST 2019; nested exception is com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Jan 17 16:18:39 CST 2019\r\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:84)\r\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\r\n\tat org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)\r\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)\r\n\tat com.sun.proxy.$Proxy141.selectList(Unknown Source)\r\n\tat org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)\r\n\tat org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\r\n\tat com.sun.proxy.$Proxy144.listActiveBlackMember(Unknown Source)\r\n\tat com.za.blacklist.provider.service.blackmember.impl.BlacklistServiceImpl.listActiveBlackMember(BlacklistServiceImpl.java:118)\r\n\tat com.cz.blacklist.provider.facade.blackmember.BlacklistFacadeImpl.listActiveBlackNotEmpty(BlacklistFacadeImpl.java:148)\r\n\tat com.cz.blacklist.provider.facade.blackmember.BlacklistFacadeImpl.inBlacklist(BlacklistFacadeImpl.java:144)\r\n\tat com.alibaba.dubbo.common.bytecode.Wrapper1.invokeMethod(Wrapper1.java)\r\n\tat com.alibaba.dubbo.rpc.proxy.javassist.JavassistProxyFactory$1.doInvoke(JavassistProxyFactory.java:45)\r\n\tat com.alibaba.dubbo.rpc.proxy.AbstractProxyInvoker.invoke(AbstractProxyInvoker.java:71)\r\n\tat com.alibaba.dubbo.config.invoker.DelegateProviderMetaDataInvoker.invoke(DelegateProviderMetaDataInvoker.java:48)\r\n\tat com.alibaba.dubbo.rpc.protocol.InvokerWrapper.invoke(InvokerWrapper.java:52)\r\n\tat com.za.framework.base.dubbo.filter.ProviderContextFilter.invoke(ProviderContextFilter.java:47)\r\n\tat com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)\r\n\tat com.alibaba.dubbo.rpc.filter.ExceptionFilter.invoke(ExceptionFilter.java:61)\r\n\tat com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)\r\n\tat com.alibaba.dubbo.monitor.support.MonitorFilter.invoke(MonitorFilter.java:74)\r\n\tat com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)\r\n\tat com.alibaba.dubbo.rpc.filter.TimeoutFilter.invoke(TimeoutFilter.java:41)\r\n\tat com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.filter.TraceFilter.invoke(TraceFilter.java:77)\r\n\tat com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)\r\n\tat com.alibaba.dubbo.rpc.filter.ExecuteLimitFilter.invoke(ExecuteLimitFilter.java:59)\r\n\tat com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)\r\n\tat com.alibaba.dubbo.rpc.filter.ContextFilter.invoke(ContextFilter.java:71)\r\n\tat com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)\r\n\tat com.alibaba.dubbo.rpc.filter.GenericFilter.invoke(GenericFilter.java:131)\r\n\tat com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)\r\n\tat com.alibaba.dubbo.rpc.filter.ClassLoaderFilter.invoke(ClassLoaderFilter.java:37)\r\n\tat com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)\r\n\tat com.alibaba.dubbo.rpc.filter.EchoFilter.invoke(EchoFilter.java:37)\r\n\tat com.alibaba.dubbo.rpc.protocol.ProtocolFilterWrapper$1.invoke(ProtocolFilterWrapper.java:68)\r\n\tat com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol$1.reply(DubboProtocol.java:102)\r\n\tat com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.handleRequest(HeaderExchangeHandler.java:96)\r\n\tat com.alibaba.dubbo.remoting.exchange.support.header.HeaderExchangeHandler.received(HeaderExchangeHandler.java:168)\r\n\tat com.alibaba.dubbo.remoting.transport.DecodeHandler.received(DecodeHandler.java:50)\r\n\tat com.alibaba.dubbo.remoting.transport.dispatcher.ChannelEventRunnable.run(ChannelEventRunnable.java:79)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: com.alibaba.druid.pool.DataSourceClosedException: dataSource already closed at Thu Jan 17 16:18:39 CST 2019\r\n\tat com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1340)\r\n\tat com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1241)\r\n\tat com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1221)\r\n\tat com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1211)\r\n\tat com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:105)\r\n\tat io.shardingsphere.shardingjdbc.jdbc.adapter.AbstractConnectionAdapter.createConnection(AbstractConnectionAdapter.java:169)\r\n\tat io.shardingsphere.shardingjdbc.jdbc.adapter.AbstractConnectionAdapter.createConnections(AbstractConnectionAdapter.java:143)\r\n\tat io.shardingsphere.shardingjdbc.jdbc.adapter.AbstractConnectionAdapter.getConnections(AbstractConnectionAdapter.java:132)\r\n\tat io.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor$1.getConnections(PreparedStatementExecutor.java:77)\r\n\tat io.shardingsphere.core.executor.sql.prepare.SQLExecutePrepareTemplate.getSQLExecuteGroups(SQLExecutePrepareTemplate.java:89)\r\n\tat io.shardingsphere.core.executor.sql.prepare.SQLExecutePrepareTemplate.getSynchronizedExecuteUnitGroups(SQLExecutePrepareTemplate.java:67)\r\n\tat io.shardingsphere.core.executor.sql.prepare.SQLExecutePrepareTemplate.getExecuteUnitGroups(SQLExecutePrepareTemplate.java:59)\r\n\tat io.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.obtainExecuteGroups(PreparedStatementExecutor.java:73)\r\n\tat io.shardingsphere.shardingjdbc.executor.PreparedStatementExecutor.init(PreparedStatementExecutor.java:68)\r\n\tat io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.initPreparedStatementExecutor(ShardingPreparedStatement.java:188)\r\n\tat io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:136)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)\r\n```\r\n```\r\n[2019-01-17 16:18:39.460 -ERROR] c.g.common.eventbus.EventBus.default     :  - Exception thrown by subscriber method renew(io.shardingsphere.orchestration.internal.registry.state.event.DisabledStateChangedEvent) on subscriber io.shardingsphere.shardingjdbc.orchestration.internal.datasource.OrchestrationShardingDataSource@75507e68 when dispatching event: io.shardingsphere.orchestration.internal.registry.state.event.DisabledStateChangedEvent@7b7420ec\r\njava.lang.ClassCastException: io.shardingsphere.core.rule.MasterSlaveRule cannot be cast to io.shardingsphere.orchestration.internal.rule.OrchestrationMasterSlaveRule\r\n\tat io.shardingsphere.shardingjdbc.orchestration.internal.datasource.OrchestrationShardingDataSource.renew(OrchestrationShardingDataSource.java:153)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.google.common.eventbus.Subscriber.invokeSubscriberMethod(Subscriber.java:95)\r\n\tat com.google.common.eventbus.Subscriber$SynchronizedSubscriber.invokeSubscriberMethod(Subscriber.java:154)\r\n\tat com.google.common.eventbus.Subscriber$1.run(Subscriber.java:80)\r\n\tat com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:456)\r\n\tat com.google.common.eventbus.Subscriber.dispatchEvent(Subscriber.java:76)\r\n\tat com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher.dispatch(Dispatcher.java:119)\r\n\tat com.google.common.eventbus.EventBus.post(EventBus.java:215)\r\n\tat io.shardingsphere.orchestration.internal.registry.listener.PostShardingOrchestrationEventListener$1.onChange(PostShardingOrchestrationEventListener.java:54)\r\n\tat io.shardingsphere.orchestration.reg.zookeeper.curator.CuratorZookeeperRegistryCenter$3.childEvent(CuratorZookeeperRegistryCenter.java:231)\r\n\tat org.apache.curator.framework.recipes.cache.TreeCache$2.apply(TreeCache.java:730)\r\n\tat org.apache.curator.framework.recipes.cache.TreeCache$2.apply(TreeCache.java:724)\r\n\tat org.apache.curator.framework.listen.ListenerContainer$1.run(ListenerContainer.java:93)\r\n\tat com.google.common.util.concurrent.MoreExecutors$DirectExecutorService.execute(MoreExecutors.java:310)\r\n\tat org.apache.curator.framework.listen.ListenerContainer.forEach(ListenerContainer.java:85)\r\n\tat org.apache.curator.framework.recipes.cache.TreeCache.callListeners(TreeCache.java:723)\r\n\tat org.apache.curator.framework.recipes.cache.TreeCache.access$1400(TreeCache.java:70)\r\n\tat org.apache.curator.framework.recipes.cache.TreeCache$4.run(TreeCache.java:841)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n1. modify and upload config of one instance (overwrite: true).\r\n2. the first SQL call of another instances(overwrite: false) will fail and get these exceptions after config being refreshed.\r\n\r\nHere is the config uploaded\uff1a\r\n```\r\norchestration:\r\n  name: za_blacklist\r\n  overwrite: true\r\n  registry:\r\n    serverLists: xx\r\n    namespace: sharding-jdbc-business\r\n\r\ndataSources:\r\n  za_blacklist_m: !!com.alibaba.druid.pool.DruidDataSource\r\n    driverClassName: com.mysql.jdbc.Driver\r\n    url: jdbc:mysql://xx:3306/za_blacklist?serverTimezone=UTC&useSSL=false\r\n    username: xx\r\n    password: xx\r\n    initialSize: 1\r\n    minIdle: 1\r\n    maxActive: 50\r\n    maxWait: 1000\r\n    timeBetweenEvictionRunsMillis: 10000\r\n    minEvictableIdleTimeMillis: 300000\r\n    queryTimeout: 3\r\n    validationQuery: SELECT 1\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    connectionInitSqls: [\"set names utf8mb4;\"]\r\n  za_blacklist_s: !!com.alibaba.druid.pool.DruidDataSource\r\n    driverClassName: com.mysql.jdbc.Driver\r\n    url: jdbc:mysql://xx:3306/za_blacklist?serverTimezone=UTC&useSSL=false\r\n    username: xx\r\n    password: xx\r\n    initialSize: 1\r\n    minIdle: 1\r\n    maxActive: 50\r\n    maxWait: 1000\r\n    timeBetweenEvictionRunsMillis: 10000\r\n    minEvictableIdleTimeMillis: 300000\r\n    queryTimeout: 3\r\n    validationQuery: SELECT 1\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    connectionInitSqls: [\"set names utf8mb4;\"]\r\n\r\nshardingRule:\r\n  masterSlaveRules:\r\n    za_blacklist:\r\n      masterDataSourceName: za_blacklist_m\r\n      slaveDataSourceNames: [za_blacklist_s]\r\n\r\n  defaultDataSourceName: za_blacklist\r\n\r\n  tables:\r\n    BlackMember:\r\n      actualDataNodes: za_blacklist.BlackMember_${(0..99).collect(){it.toString().padLeft(2,'0')}}\r\n      tableStrategy:\r\n        inline:\r\n          shardingColumn: memberId\r\n          algorithmExpression: BlackMember_${(memberId % 100).toString().padLeft(2,'0')}\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).", "url": "https://github.com/apache/shardingsphere/issues/1773", "user": "joooohnli", "labels": ["bug", "orchestration"], "created": "2019-01-17 09:16:08", "closed": "2019-01-23 06:41:52", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "GROUP_CONCAT print error log \"no viable alternative at input\"", "body": "## Question\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore asking a question, make sure you have:\r\n\r\n- Googled your question.\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\n**### Which version of ShardingSphere did you use?**\r\n3.1.0\r\n\r\n**### Which project did you use? Sharding-JDBC or Sharding-Proxy?**\r\nSharding-JDBC\r\n\r\nSQL\r\n\r\n> SELECT GROUP_CONCAT(column) FROM table\r\n\r\nthere will a error log, but the result is right. Not happen when use spring-jdbc\r\n\r\nerror log:\r\n\r\n> line 1:34 no viable alternative at input 'GROUP_CONCAT(authority.name)'\r\n\r\nWould you tell me the reason, please?", "url": "https://github.com/apache/shardingsphere/issues/1764", "user": "lin199231", "labels": ["bug"], "created": "2019-01-16 09:14:42", "closed": "2019-01-17 07:01:18", "commits": {"e9f97d6305d417f46dfe35b92a01b35750c159df": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e9f97d6305d417f46dfe35b92a01b35750c159df", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["3564ca7af172865fbbbd1f9593a442fc1dd99ec6", "415f3a1f9be200a37edcc022d95bf4dcdf527610"], "nameRev": "e9f97d6305d417f46dfe35b92a01b35750c159df tags/4.0.0-RC1~1493", "commitMessage": "Merge pull request #1765 from codefairy08/dev\n\n#1764 for parser error", "commitDateTime": "2019-01-17 11:44:47", "authoredDateTime": "2019-01-17 11:44:47", "commitGitStats": [{"filePath": "sharding-core/src/main/antlr4/imports/MySQLBase.g4", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "can't get partition key value ", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n3.1.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\n    ps = connection.prepareStatement(\"select * from t_order where merc_no='1234567891' and tx_dt in ('20190102', '20190103') limit 0,10 \");\r\n\r\n\r\n\r\n08:38:35.467 [main] INFO MyComplexKeysShardingAlgorithm - collection:[\"ds_0\",\"ds_1\",\"ds_2\",\"ds_3\"],shardingValues:[{\"columnName\":\"merc_no\",\"logicTableName\":\"t_order\",\"values\"**:[-1]**},{\"columnName\":\"tx_dt\",\"logicTableName\":\"t_order\",**\"values\":[-1,-1]}**]\r\nt_order:\r\n  databaseStrategy:\r\n    complex:\r\n      shardingColumns: merc_no, tx_dt\r\n      algorithmClassName: MyComplexKeysShardingAlgorithm\r\n  tableStrategy:\r\n    inline:\r\n      shardingColumn: tx_dt\r\n      algorithmExpression: t_order_${tx_dt}\r\n\r\n### Actual behavior\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1754", "user": "koalas1105", "labels": ["bug"], "created": "2019-01-15 04:59:36", "closed": "2019-01-16 10:19:26", "commits": {"58912b1c79b060e9306d98d734573299e9cd5023": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "58912b1c79b060e9306d98d734573299e9cd5023", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["aa2f481707310e18ef2723f389f243cf1bc82eaf", "316991ec0c1bd9369c9e7b23a62077d8f3e02453"], "nameRev": "58912b1c79b060e9306d98d734573299e9cd5023 tags/4.0.0-RC1~1505", "commitMessage": "Merge pull request #1760 from codefairy08/dev3.1\n\n#1754 failed to get string sharding value", "commitDateTime": "2019-01-16 11:06:02", "authoredDateTime": "2019-01-16 11:06:02", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "hope to support with count sub query sql", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\nSQL: \r\n```\r\nSELECT COUNT(1) FROM ( \r\n     SELECT\r\n        r.`channel` as `channel_code`,\r\n        r.`channel_name` as `channel_name`,\r\n        COUNT(r.id) `total_cnt`,\r\n        COUNT(r.connect_flag = \"Y\") `connected_cnt`\r\n        FROM record_callin r\r\n        LEFT JOIN sys_org_tree_rel tree ON tree.teamid = r.teamid\r\n        LEFT JOIN sys_user u ON u.brokerid = r.brokerid\r\n        where\r\n        r.create_time between '2018-01-01 00:00:00' and   '2019-01-01 00:00:00'\r\n        GROUP BY \r\n        r.`channel` \r\n) TOTAL\r\n```\r\nhope to support it\r\n", "url": "https://github.com/apache/shardingsphere/issues/1753", "user": "lazeyliu", "labels": ["bug", "sharding"], "created": "2019-01-15 03:38:36", "closed": "2019-05-11 13:58:10", "commits": {"a662f1d9851441f430e892c58feb78151ae165d5": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "fbc9a235295e435efd1d4ee9a3940b28e0de6c4a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "babb62052451155dbb23dbb9ce6653a695c8b6d6": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "cf4244000c290ff76d9d53ae7709f05d5761f06a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "093f48807be9169aa7ed7945eb6df474c442ac73": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 116.00027777777778, "commitsDetails": [{"commitHash": "a662f1d9851441f430e892c58feb78151ae165d5", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["76a2ae350bea13cd888ce6f9728437e217141de9"], "nameRev": "a662f1d9851441f430e892c58feb78151ae165d5 tags/4.0.0-RC2~833", "commitMessage": "for #1753, parse subquery for order by & group by\n", "commitDateTime": "2019-05-11 17:12:24", "authoredDateTime": "2019-05-11 17:12:24", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dml/select/SelectItemsExtractor.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dml/select/groupby/GroupByExtractor.java", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dml/select/orderby/OrderByExtractor.java", "insertions": 16, "deletions": 1, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SelectItemsExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.SelectItemsExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext,boolean)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GroupByExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.groupby.GroupByExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.groupby.GroupByExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "OrderByExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.orderby.OrderByExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.orderby.OrderByExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "fbc9a235295e435efd1d4ee9a3940b28e0de6c4a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a662f1d9851441f430e892c58feb78151ae165d5"], "nameRev": "fbc9a235295e435efd1d4ee9a3940b28e0de6c4a tags/4.0.0-RC2~832", "commitMessage": "for #1753, parse subquery for select from table\n", "commitDateTime": "2019-05-11 18:16:27", "authoredDateTime": "2019-05-11 18:16:27", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dml/select/SelectItemsExtractor.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dml/select/SubqueryPredicateExtractor.java", "insertions": 1, "deletions": 5, "lines": 6}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dml/select/groupby/GroupByExtractor.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dml/select/orderby/OrderByExtractor.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/DMLStatement.g4", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-oracle/src/main/antlr4/imports/oracle/DMLStatement.g4", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-postgresql/src/main/antlr4/imports/postgresql/DMLStatement.g4", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-postgresql/src/main/antlr4/org/apache/shardingsphere/core/parse/antlr/autogen/PostgreSQLStatement.g4", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/select_sub_query.xml", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select_sub_query.xml", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SelectItemsExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.SelectItemsExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.SelectItemsExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext,boolean)", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 6}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.SelectItemsExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SubqueryPredicateExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.SubqueryPredicateExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "GroupByExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.groupby.GroupByExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.groupby.GroupByExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext,boolean)", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 6}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.groupby.GroupByExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OrderByExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.orderby.OrderByExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.orderby.OrderByExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext,boolean)", "TOT": 8, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 6}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.orderby.OrderByExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "babb62052451155dbb23dbb9ce6653a695c8b6d6", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["fbc9a235295e435efd1d4ee9a3940b28e0de6c4a"], "nameRev": "babb62052451155dbb23dbb9ce6653a695c8b6d6 tags/4.0.0-RC2~831", "commitMessage": "for #1753, parse subquery for select from table\n", "commitDateTime": "2019-05-11 18:57:33", "authoredDateTime": "2019-05-11 18:57:33", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/extractor/impl/dml/select/SubqueryPredicateExtractor.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/antlr/optimizer/select/SelectOptimizer.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/old/parser/context/condition/AndCondition.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SubqueryPredicateExtractor.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.SubqueryPredicateExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SelectOptimizer.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.optimizer.select.SelectOptimizer.postExtractInternal(org.apache.shardingsphere.core.parse.antlr.sql.statement.SQLStatement)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.optimizer.select.SelectOptimizer.optimize(org.apache.shardingsphere.core.parse.antlr.sql.statement.SQLStatement,org.apache.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.apache.shardingsphere.core.parse.antlr.optimizer.select.SelectOptimizer.addSubqueryCondition(org.apache.shardingsphere.core.parse.antlr.sql.statement.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AndCondition.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.core.parse.old.parser.context.condition.AndCondition", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "cf4244000c290ff76d9d53ae7709f05d5761f06a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["babb62052451155dbb23dbb9ce6653a695c8b6d6"], "nameRev": "cf4244000c290ff76d9d53ae7709f05d5761f06a tags/4.0.0-RC2~830", "commitMessage": "for #1753, recover more test case subquery\n", "commitDateTime": "2019-05-11 19:28:31", "authoredDateTime": "2019-05-11 19:28:31", "commitGitStats": [{"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/select_sub_query.xml", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select_sub_query.xml", "insertions": 3, "deletions": 4, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "093f48807be9169aa7ed7945eb6df474c442ac73", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["66e55075fd709744b4f7bcffee351417e6dcfd44"], "nameRev": "093f48807be9169aa7ed7945eb6df474c442ac73 tags/4.0.0-RC2~828", "commitMessage": "fix #1753, recover all test case for subquery\n", "commitDateTime": "2019-05-11 21:58:51", "authoredDateTime": "2019-05-11 21:58:51", "commitGitStats": [{"filePath": "sharding-sql-test/src/main/resources/sql/dql/select_sub_query.xml", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a662f1d9851441f430e892c58feb78151ae165d5", "fbc9a235295e435efd1d4ee9a3940b28e0de6c4a", "cf4244000c290ff76d9d53ae7709f05d5761f06a", "093f48807be9169aa7ed7945eb6df474c442ac73"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 55, "deletions": 36, "lines": 91, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 46.0, "UPD": 0.0, "INS": 13.0, "MOV": 9.0, "DEL": 24.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core", "sharding-core/sharding-core-parse/sharding-core-parse-oracle/src/main/antlr4/imports/oracle/DMLStatement.g4", "sharding-core/sharding-core-parse/sharding-core-parse-postgresql/src/main/antlr4/imports/postgresql/DMLStatement.g4", "sharding-core/sharding-core-parse/sharding-core-parse-postgresql/src/main/antlr4/org/apache/shardingsphere/core", "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/antlr4/imports/mysql/DMLStatement.g4"], "changesInPackagesSPOON": ["org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.groupby.GroupByExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.groupby.GroupByExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext,boolean)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.orderby.OrderByExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.orderby.OrderByExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext,boolean)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.SelectItemsExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext,boolean)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.orderby.OrderByExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.groupby.GroupByExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.SelectItemsExtractor.findMainQueryNode(org.antlr.v4.runtime.ParserRuleContext)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.SubqueryPredicateExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)", "org.apache.shardingsphere.core.parse.antlr.extractor.impl.dml.select.SelectItemsExtractor.extract(org.antlr.v4.runtime.ParserRuleContext,java.util.Map)"]}, {"title": "default datasource page limit problem", "body": "version\uff1a4.0.0.M1-SNAPSHOT\r\nbranch\uff1adev \r\norm: spring jpa\r\n\r\nnot sharding table use default datasource\uff0cbut  page data is the same\uff0cfor the following limit:\r\n```\r\nlimit 1,10\r\nlimit 2,10\r\nlimt 3,10\r\n```\r\n\r\njava code\r\n```\r\n//junit test java code \r\n        Pageable pageable1 = new PageRequest(1,10);\r\n        List<UserPo> pos1 = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_android\", new Date(),pageable1);\r\n        log.info(\"pos1:{}\",pos1.toString());\r\n\r\n        Pageable pageable2 = new PageRequest(2,10);\r\n        List<UserPo> pos2 = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_android\", new Date(),pageable2);\r\n        log.info(\"pos2:{}\",pos2.toString());\r\n\r\n        Pageable pageable3 = new PageRequest(3,10);\r\n        List<UserPo> pos3 = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_android\", new Date(),pageable3);\r\n        log.info(\"pos3:{}\",pos3.toString());\r\n\r\n//orm code\r\n  @Query(\"SELECT u FROM UserPo u WHERE u.userId is NULL and u.appName = ?1 and u.modifyTime < ?2\")\r\n  List<UserPo> getWithoutUserIdListBy(String appName, Date date, Pageable pageable);\r\n\r\n```\r\n\r\noutput log\r\n```\r\n\r\n2019-01-10 17:04:51.158  INFO 95981 --- [           main] ShardingSphere-SQL                       : Rule Type: sharding\r\n2019-01-10 17:04:51.158  INFO 95981 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ?\r\n2019-01-10 17:04:51.158  INFO 95981 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@7da70124), containStar=false, firstSelectItemStartPosition=7, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_))], groupByItems=[], orderByItems=[], limit=Limit(offset=LimitValue(value=10, index=2, boundOpened=false), rowCount=LimitValue(value=10, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[], subQueryConditions=[])\r\n2019-01-10 17:04:51.159  INFO 95981 --- [           main] ShardingSphere-SQL                       : Actual SQL: main ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ? ::: [[appcode_idxyer_android, 2019-01-10 17:04:49.417, 0, 20]]\r\n2019-01-10 17:04:51.324  INFO 95981 --- [           main] c.d.p.push.service.UserServiceTest       : pos1:[UserPo{userId='13870325', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4', osVersion='8.0.0', deviceType='Android', deviceMc='87c894be5f7b4c42a3927985a72018bf', deviceTokenType='ANDROID', deviceToken='Gj3Gfge3dCygO1uUq0V8qVMuqIdu+N758R+dd4M46Jg=', modifyTime=2018-02-06 16:29:42.0, version=0}, UserPo{userId='13873758', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='379326c5a69a42cd80989c2472a28ac5', deviceTokenType='GETUI', deviceToken='9c53678a8234a30e2fc625f9f13e3b3f', modifyTime=2018-11-27 13:17:14.0, version=2}, UserPo{userId='13874733', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='d5f32b5998cd4b208c69f117f6955470', deviceTokenType='GETUI', deviceToken='e277f89da8d2e622f6260cf328072625', modifyTime=2019-01-08 20:07:36.0, version=8}, UserPo{userId='13874828', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='37ba63ce0ba94b5ea7daa76a64a0affb', deviceTokenType='GETUI', deviceToken='20bb8e121d44843f74dc47046076b804', modifyTime=2019-01-09 13:35:34.0, version=3}, UserPo{userId='13874848', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='40e16380c87f44518bf3a53493969d41', deviceTokenType='GETUI', deviceToken='480e564536a70b5842d9d041d45909ab', modifyTime=2019-01-09 19:15:17.0, version=2}, UserPo{userId='13871480', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.3', osVersion='6.0.1', deviceType='HUAWEI ATH-AL00', deviceMc='0000000040bb4e89dc87704f1e8dc50b', deviceTokenType='ANDROID', deviceToken='7mrI8oEJONd1rrTszdw50VdZYFfDNEN3L/gIWul+GtcMqaCFSl5+aGDZDTwf/B1S', modifyTime=2018-06-28 15:08:55.0, version=0}, UserPo{userId='13871210', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.0', osVersion='8.0.0', deviceType='HUAWEI DUK-AL20', deviceMc='84f05e03749b4b54872fda60d3ff8c29', deviceTokenType='ANDROID', deviceToken='7RP7dly55jRaVZqKcJpsv4hUZtZUF9J3bIBQn3VkGUk=', modifyTime=2018-06-01 17:54:19.0, version=0}, UserPo{userId='13869945', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4.2', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='y5Etn5TKVUksjFg8urjiBHb11gy+kiVWbDCCgB3fSuA=~', modifyTime=2018-01-19 18:34:57.0, version=0}, UserPo{userId='13870431', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.3', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='kfCT4MbWnJWZL4XUNLcV6OD/u9TbNoTIRaStPXEzTjQ=', modifyTime=2018-03-13 18:20:28.0, version=0}, UserPo{userId='13871082', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.6', osVersion='6.0', deviceType='HUAWEI GRA-CL00', deviceMc='00000000337246391a93c1ae0033c587', deviceTokenType='ANDROID', deviceToken='H1/h8RhkYATVtPuqwduPzMfCAJwRP47h4YFxPhFmyRw=', modifyTime=2018-05-25 14:18:03.0, version=0}]\r\nHibernate: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ?\r\n2019-01-10 17:04:51.327  INFO 95981 --- [           main] ShardingSphere-SQL                       : Rule Type: sharding\r\n2019-01-10 17:04:51.327  INFO 95981 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ?\r\n2019-01-10 17:04:51.327  INFO 95981 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@7da70124), containStar=false, firstSelectItemStartPosition=7, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_))], groupByItems=[], orderByItems=[], limit=Limit(offset=LimitValue(value=20, index=2, boundOpened=false), rowCount=LimitValue(value=10, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[], subQueryConditions=[])\r\n2019-01-10 17:04:51.327  INFO 95981 --- [           main] ShardingSphere-SQL                       : Actual SQL: main ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ? ::: [[appcode_idxyer_android, 2019-01-10 17:04:51.325, 0, 30]]\r\n2019-01-10 17:04:51.343  INFO 95981 --- [           main] c.d.p.push.service.UserServiceTest       : pos2:[UserPo{userId='13870325', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4', osVersion='8.0.0', deviceType='Android', deviceMc='87c894be5f7b4c42a3927985a72018bf', deviceTokenType='ANDROID', deviceToken='Gj3Gfge3dCygO1uUq0V8qVMuqIdu+N758R+dd4M46Jg=', modifyTime=2018-02-06 16:29:42.0, version=0}, UserPo{userId='13873758', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='379326c5a69a42cd80989c2472a28ac5', deviceTokenType='GETUI', deviceToken='9c53678a8234a30e2fc625f9f13e3b3f', modifyTime=2018-11-27 13:17:14.0, version=2}, UserPo{userId='13874733', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='d5f32b5998cd4b208c69f117f6955470', deviceTokenType='GETUI', deviceToken='e277f89da8d2e622f6260cf328072625', modifyTime=2019-01-08 20:07:36.0, version=8}, UserPo{userId='13874828', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='37ba63ce0ba94b5ea7daa76a64a0affb', deviceTokenType='GETUI', deviceToken='20bb8e121d44843f74dc47046076b804', modifyTime=2019-01-09 13:35:34.0, version=3}, UserPo{userId='13874848', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='40e16380c87f44518bf3a53493969d41', deviceTokenType='GETUI', deviceToken='480e564536a70b5842d9d041d45909ab', modifyTime=2019-01-09 19:15:17.0, version=2}, UserPo{userId='13871480', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.3', osVersion='6.0.1', deviceType='HUAWEI ATH-AL00', deviceMc='0000000040bb4e89dc87704f1e8dc50b', deviceTokenType='ANDROID', deviceToken='7mrI8oEJONd1rrTszdw50VdZYFfDNEN3L/gIWul+GtcMqaCFSl5+aGDZDTwf/B1S', modifyTime=2018-06-28 15:08:55.0, version=0}, UserPo{userId='13871210', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.0', osVersion='8.0.0', deviceType='HUAWEI DUK-AL20', deviceMc='84f05e03749b4b54872fda60d3ff8c29', deviceTokenType='ANDROID', deviceToken='7RP7dly55jRaVZqKcJpsv4hUZtZUF9J3bIBQn3VkGUk=', modifyTime=2018-06-01 17:54:19.0, version=0}, UserPo{userId='13869945', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4.2', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='y5Etn5TKVUksjFg8urjiBHb11gy+kiVWbDCCgB3fSuA=~', modifyTime=2018-01-19 18:34:57.0, version=0}, UserPo{userId='13870431', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.3', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='kfCT4MbWnJWZL4XUNLcV6OD/u9TbNoTIRaStPXEzTjQ=', modifyTime=2018-03-13 18:20:28.0, version=0}, UserPo{userId='13871082', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.6', osVersion='6.0', deviceType='HUAWEI GRA-CL00', deviceMc='00000000337246391a93c1ae0033c587', deviceTokenType='ANDROID', deviceToken='H1/h8RhkYATVtPuqwduPzMfCAJwRP47h4YFxPhFmyRw=', modifyTime=2018-05-25 14:18:03.0, version=0}]\r\nHibernate: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ?\r\n2019-01-10 17:04:51.346  INFO 95981 --- [           main] ShardingSphere-SQL                       : Rule Type: sharding\r\n2019-01-10 17:04:51.346  INFO 95981 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ?\r\n2019-01-10 17:04:51.346  INFO 95981 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@7da70124), containStar=false, firstSelectItemStartPosition=7, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_))], groupByItems=[], orderByItems=[], limit=Limit(offset=LimitValue(value=30, index=2, boundOpened=false), rowCount=LimitValue(value=10, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[], subQueryConditions=[])\r\n2019-01-10 17:04:51.346  INFO 95981 --- [           main] ShardingSphere-SQL                       : Actual SQL: main ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ? ::: [[appcode_idxyer_android, 2019-01-10 17:04:51.344, 0, 40]]\r\n2019-01-10 17:04:51.358  INFO 95981 --- [           main] c.d.p.push.service.UserServiceTest       : pos3:[UserPo{userId='13870325', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4', osVersion='8.0.0', deviceType='Android', deviceMc='87c894be5f7b4c42a3927985a72018bf', deviceTokenType='ANDROID', deviceToken='Gj3Gfge3dCygO1uUq0V8qVMuqIdu+N758R+dd4M46Jg=', modifyTime=2018-02-06 16:29:42.0, version=0}, UserPo{userId='13873758', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='379326c5a69a42cd80989c2472a28ac5', deviceTokenType='GETUI', deviceToken='9c53678a8234a30e2fc625f9f13e3b3f', modifyTime=2018-11-27 13:17:14.0, version=2}, UserPo{userId='13874733', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='d5f32b5998cd4b208c69f117f6955470', deviceTokenType='GETUI', deviceToken='e277f89da8d2e622f6260cf328072625', modifyTime=2019-01-08 20:07:36.0, version=8}, UserPo{userId='13874828', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='37ba63ce0ba94b5ea7daa76a64a0affb', deviceTokenType='GETUI', deviceToken='20bb8e121d44843f74dc47046076b804', modifyTime=2019-01-09 13:35:34.0, version=3}, UserPo{userId='13874848', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0', osVersion='9', deviceType='Google Pixel 2', deviceMc='40e16380c87f44518bf3a53493969d41', deviceTokenType='GETUI', deviceToken='480e564536a70b5842d9d041d45909ab', modifyTime=2019-01-09 19:15:17.0, version=2}, UserPo{userId='13871480', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.3', osVersion='6.0.1', deviceType='HUAWEI ATH-AL00', deviceMc='0000000040bb4e89dc87704f1e8dc50b', deviceTokenType='ANDROID', deviceToken='7mrI8oEJONd1rrTszdw50VdZYFfDNEN3L/gIWul+GtcMqaCFSl5+aGDZDTwf/B1S', modifyTime=2018-06-28 15:08:55.0, version=0}, UserPo{userId='13871210', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='8.0.0', osVersion='8.0.0', deviceType='HUAWEI DUK-AL20', deviceMc='84f05e03749b4b54872fda60d3ff8c29', deviceTokenType='ANDROID', deviceToken='7RP7dly55jRaVZqKcJpsv4hUZtZUF9J3bIBQn3VkGUk=', modifyTime=2018-06-01 17:54:19.0, version=0}, UserPo{userId='13869945', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.4.2', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='y5Etn5TKVUksjFg8urjiBHb11gy+kiVWbDCCgB3fSuA=~', modifyTime=2018-01-19 18:34:57.0, version=0}, UserPo{userId='13870431', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.3', osVersion='4.4.2', deviceType='HUAWEI G750-T01', deviceMc='ffffffffb971f1cccf7a5bf70033c587', deviceTokenType='ANDROID', deviceToken='kfCT4MbWnJWZL4XUNLcV6OD/u9TbNoTIRaStPXEzTjQ=', modifyTime=2018-03-13 18:20:28.0, version=0}, UserPo{userId='13871082', appName='appcode_idxyer_android', appCode='4124c5f1-2029-4fda-b06f-a87ac5ad8d11', appVersion='7.7.6', osVersion='6.0', deviceType='HUAWEI GRA-CL00', deviceMc='00000000337246391a93c1ae0033c587', deviceTokenType='ANDROID', deviceToken='H1/h8RhkYATVtPuqwduPzMfCAJwRP47h4YFxPhFmyRw=', modifyTime=2018-05-25 14:18:03.0, version=0}]\r\n```\r\n\r\nnow look this log,limit is not same ,but data is same.\r\nexpect\uff1aoutput of other page data.\r\n", "url": "https://github.com/apache/shardingsphere/issues/1722", "user": "ppj19891020", "labels": ["bug"], "created": "2019-01-07 09:56:25", "closed": "2019-01-11 09:16:37", "commits": {"88f793d07bb9592e51054a8bc8ad7e1881ab5ece": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "7acd855e1e849c8638a616ad23f33fcafd22861d": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "88f793d07bb9592e51054a8bc8ad7e1881ab5ece", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["2b444bb90c41b492b9c13d7dc23287c21de9ed77", "c220928fc82dd6c203e21c019d32929a3f12a1f5"], "nameRev": "88f793d07bb9592e51054a8bc8ad7e1881ab5ece tags/4.0.0-RC1~1548", "commitMessage": "Merge pull request #1736 from tuohai666/dev\n\n#1722, fix parameters rewriting when single routing", "commitDateTime": "2019-01-11 17:16:36", "authoredDateTime": "2019-01-11 17:16:36", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/limit/Limit.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java", "insertions": 5, "deletions": 4, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Limit.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.context.limit.Limit.processParameters(java.util.List,boolean,io.shardingsphere.core.constant.DatabaseType,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.context.limit.Limit.rewrite(java.util.List,boolean,io.shardingsphere.core.constant.DatabaseType,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.context.limit.Limit.rewrite(java.util.List,boolean,io.shardingsphere.core.constant.DatabaseType)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ParsingSQLRouter.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.route(java.lang.String,java.util.List,io.shardingsphere.core.parsing.parser.sql.SQLStatement)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.processLimit(java.util.List,io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7acd855e1e849c8638a616ad23f33fcafd22861d", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "sharding-proxy no record \u201cError Code: 3054. Unknown exception: Index: 0, Size: 0\u201d", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy 3.1.0\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n09:47:14\tselect distinct merc_no from t_order where tx_dt in ('20180103', '20190106') LIMIT 0, 100\tError Code: 3054. Unknown exception: Index: 0, Size: 0\t0.066 sec\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1718", "user": "koalas1105", "labels": ["bug"], "created": "2019-01-06 01:51:52", "closed": "2019-01-10 13:34:07", "commits": {"5624234c97de9da0eb786796896ef782102d09a0": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "5624234c97de9da0eb786796896ef782102d09a0", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["b388432a59ce72ffc66f7faa3923f3f54b78ec0b", "1d42a740dc1239ab0a8eb9a52fb7f1bab9f21107"], "nameRev": "5624234c97de9da0eb786796896ef782102d09a0 tags/4.0.0-RC1~1561", "commitMessage": "Merge pull request #1730 from tuohai666/dev\n\n#1718, missed queryResults when there's no row data", "commitDateTime": "2019-01-10 21:34:06", "authoredDateTime": "2019-01-10 21:34:06", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dql/DQLMergeEngine.java", "insertions": 6, "deletions": 5, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DQLMergeEngine.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.merger.dql.DQLMergeEngine.getRealQueryResults(java.util.List)", "TOT": 11, "UPD": 2, "INS": 4, "MOV": 2, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "hint strategy sometimes cannot hit expected table", "body": "\r\n[hint code.zip](https://github.com/sharding-sphere/sharding-sphere/files/2729287/hint.code.zip)\r\n## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n 3.1.0.M1  and 3.1.0 \r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nhint strategy will work ok  for every table in my project.\r\ntable:order_item  selcect\u3001update operate  can hit expect table \r\n\r\n### Actual behavior\r\ntable:order_item_goods_out  insert\\update can hit expect table but .select operate cannot hit expect table. \r\n### Reason analyze (If you can)\r\nI don't understand this, the hint strategy is used in the same way in different tables but in fact the execution is different in different tables\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n\r\n\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1716", "user": "stoneSpoon", "labels": ["bug"], "created": "2019-01-05 07:25:46", "closed": "2019-01-07 09:21:34", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "error when Logic table have the same name as Actual table .", "body": "### update\r\nit looks like a driver compatibility problem with `mysql-connector-java` of 6.0.6 or above\r\nthe issue title should updated in some days\r\n---\r\ni just use database sharding not table sharding, but when Logic table have the same name as Actual table, some error occurs\r\n``` \r\nCaused by: java.sql.SQLException: Column name pattern can not be NULL or empty.\r\n```\r\nhere is my config of yaml\r\n```yaml\r\nshardingRule:\r\n  tables:\r\n   # same name as Actual table\uff0c but when i use ms_ds${1..2}.t_user1, it will be ok\r\n   # but when i change table name in mysql to t_user1\uff0cthen ms_ds${1..2}.t_user1 does not work either\r\n    t_user:\r\n      actualDataNodes: ms_ds${1..2}.t_user\r\n      databaseStrategy:\r\n        inline:\r\n          shardingColumn: id\r\n          algorithmExpression: ms_ds${id % 2 + 1}\r\n\r\n      keyGeneratorColumnName: id\r\n```\r\n\r\ni think it may be a bug\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1715", "user": "quaider", "labels": ["bug"], "created": "2019-01-04 16:48:19", "closed": "2019-01-09 15:12:28", "commits": {"1c9a5b4e206c007ec2e55cfa1de504f3a41ddf1c": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "1c9a5b4e206c007ec2e55cfa1de504f3a41ddf1c", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["08f6c848e26eec85398125083d5ff7a2517c1d83", "ba3b92287556ae99825f67e04ff75223d429beba"], "nameRev": "1c9a5b4e206c007ec2e55cfa1de504f3a41ddf1c tags/4.0.0-RC1~1571", "commitMessage": "Merge pull request #1727 from tuohai666/dev\n\n#1715, Connector/j 6.x checked columnNamePattern in getColumns", "commitDateTime": "2019-01-09 23:12:27", "authoredDateTime": "2019-01-09 23:12:27", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataLoader.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableMetaDataLoader.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getColumnMetaDataList(java.sql.Connection,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "How to fix \"Initialized data sources can not be master-slave data sources\"", "body": "## Question\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore asking a question, make sure you have:\r\n\r\n- Googled your question.\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nVERSION: 3.0.0\r\n\r\nI learn to use \"Sharding + Read-write splitting\"(http://shardingsphere.io/document/current/en/manual/sharding-jdbc/configuration/config-spring-namespace/)  recently\r\n\r\nwhen using official demo config, get an error on init,\r\n\r\n`\r\n<pre>\r\nCaused by: java.lang.IllegalArgumentException: Initialized data sources can not be master-slave data sources.\r\n    at com.google.common.base.Preconditions.checkArgument(Preconditions.java:122)\r\n    at io.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource.checkDataSourceType(ShardingDataSource.java:77)\r\n    at io.shardingsphere.shardingjdbc.jdbc.core.datasource.ShardingDataSource.<init>(ShardingDataSource.java:59)\r\n    at io.shardingsphere.shardingjdbc.spring.datasource.SpringShardingDataSource.<init>(SpringShardingDataSource.java:39)\r\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n    at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:142)\r\n    ... 66 more\r\n</pre>\r\n`\r\n\r\n**### my config xml like this**\r\n`\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n       xmlns:context=\"http://www.springframework.org/schema/context\"\r\n       xmlns:tx=\"http://www.springframework.org/schema/tx\"\r\n       xmlns:sharding=\"http://shardingsphere.io/schema/shardingsphere/sharding\"\r\n       xmlns:master-slave=\"http://shardingsphere.io/schema/shardingsphere/masterslave\"\r\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\r\n                        http://www.springframework.org/schema/beans/spring-beans.xsd \r\n                        http://www.springframework.org/schema/tx \r\n                        http://www.springframework.org/schema/tx/spring-tx.xsd\r\n                        http://www.springframework.org/schema/context \r\n                        http://www.springframework.org/schema/context/spring-context.xsd\r\n                        http://shardingsphere.io/schema/shardingsphere/sharding \r\n                        http://shardingsphere.io/schema/shardingsphere/sharding/sharding.xsd\r\n                        http://shardingsphere.io/schema/shardingsphere/masterslave\r\n                        http://shardingsphere.io/schema/shardingsphere/masterslave/master-slave.xsd\">\r\n\r\n    <context:component-scan base-package=\"io.shardingsphere.example\" />\r\n\r\n    <!-- datasource -->\r\n    <!--demo_master_ds-->\r\n    <bean id=\"demo_master_ds\" class=\"com.alibaba.druid.pool.DruidDataSource\" destroy-method=\"close\">\r\n        <property name=\"url\" value=\"jdbc:mysql://127.0.0.1:3306/demo_master?useUnicode=true&amp;characterEncoding=utf-8\"/>\r\n        <property name=\"username\" value=\"root\"/>\r\n        <property name=\"password\" value=\"123456\"/>\r\n        <property name=\"initialSize\" value=\"10\" />\r\n        <property name=\"maxActive\" value=\"20\" />\r\n        <property name=\"minIdle\" value=\"0\" />\r\n        <property name=\"maxWait\" value=\"60000\"/>\r\n\r\n        <property name=\"testOnBorrow\" value=\"false\"/>\r\n        <property name=\"testOnReturn\" value=\"false\"/>\r\n        <property name=\"testWhileIdle\" value=\"true\"/>\r\n\r\n        <property name=\"timeBetweenEvictionRunsMillis\" value=\"60000\"/>\r\n        <property name=\"minEvictableIdleTimeMillis\" value=\"30000\"/>\r\n        <property name=\"validationQuery\" value=\"select 1\"/>\r\n    </bean>\r\n\r\n\r\n    <bean id=\"demo_ds_0\" class=\"com.alibaba.druid.pool.DruidDataSource\" destroy-method=\"close\">\r\n        <property name=\"url\" value=\"jdbc:mysql://127.0.0.1:3306/demo_slave0?useUnicode=true&amp;characterEncoding=utf-8\"/>\r\n        <property name=\"username\" value=\"root\"/>\r\n        <property name=\"password\" value=\"123456\"/>\r\n        <property name=\"initialSize\" value=\"10\" />\r\n        <property name=\"maxActive\" value=\"20\" />\r\n        <property name=\"minIdle\" value=\"0\" />\r\n        <property name=\"maxWait\" value=\"60000\"/>\r\n\r\n        <property name=\"testOnBorrow\" value=\"false\"/>\r\n        <property name=\"testOnReturn\" value=\"false\"/>\r\n        <property name=\"testWhileIdle\" value=\"true\"/>\r\n\r\n        <property name=\"timeBetweenEvictionRunsMillis\" value=\"60000\"/>\r\n        <property name=\"minEvictableIdleTimeMillis\" value=\"30000\"/>\r\n        <property name=\"validationQuery\" value=\"select 1\"/>\r\n    </bean>\r\n\r\n\r\n    <bean id=\"demo_ds_1\" class=\"com.alibaba.druid.pool.DruidDataSource\" destroy-method=\"close\">\r\n        <property name=\"url\" value=\"jdbc:mysql://127.0.0.1:3306/demo_slave1?useUnicode=true&amp;characterEncoding=utf-8\"/>\r\n        <property name=\"username\" value=\"root\"/>\r\n        <property name=\"password\" value=\"123456\"/>\r\n        <property name=\"initialSize\" value=\"10\" />\r\n        <property name=\"maxActive\" value=\"20\" />\r\n        <property name=\"minIdle\" value=\"0\" />\r\n        <property name=\"maxWait\" value=\"60000\"/>\r\n\r\n        <property name=\"testOnBorrow\" value=\"false\"/>\r\n        <property name=\"testOnReturn\" value=\"false\"/>\r\n        <property name=\"testWhileIdle\" value=\"true\"/>\r\n\r\n        <property name=\"timeBetweenEvictionRunsMillis\" value=\"60000\"/>\r\n        <property name=\"minEvictableIdleTimeMillis\" value=\"30000\"/>\r\n        <property name=\"validationQuery\" value=\"select 1\"/>\r\n    </bean>\r\n\r\n\r\n    <sharding:none-strategy id=\"noSharding\" />\r\n\r\n    <bean id=\"randomStrategy\" class=\"io.shardingsphere.api.algorithm.masterslave.RandomMasterSlaveLoadBalanceAlgorithm\" />\r\n\r\n    <master-slave:data-source id=\"ds_master\" master-data-source-name=\"demo_master_ds\"\r\n                              slave-data-source-names=\"demo_ds_0,demo_ds_1\" strategy-ref=\"randomStrategy\"/>\r\n\r\n\r\n    <sharding:data-source id=\"shardingDataSource\">\r\n        <sharding:sharding-rule data-source-names=\"ds_master\">\r\n            <sharding:table-rules>\r\n                <sharding:table-rule logic-table=\"order\"\r\n                                     actual-data-nodes=\"ds_master.order\"\r\n                                     table-strategy-ref=\"noSharding\"\r\n                                     database-strategy-ref=\"noSharding\"/>\r\n            </sharding:table-rules>\r\n        </sharding:sharding-rule>\r\n        <sharding:props>\r\n            <prop key=\"sql.show\">false</prop>\r\n        </sharding:props>\r\n    </sharding:data-source>\r\n    \r\n\r\n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\r\n        <property name=\"dataSource\" ref=\"shardingDataSource\" />\r\n    </bean>\r\n    <tx:annotation-driven />\r\n    \r\n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\r\n        <property name=\"dataSource\" ref=\"shardingDataSource\"/>\r\n        <property name=\"mapperLocations\" value=\"classpath*:META-INF/sqlmap.xml\"/>\r\n    </bean>\r\n    \r\n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\r\n        <property name=\"basePackage\" value=\"io.shardingsphere.example\"/>\r\n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\r\n    </bean>\r\n</beans>\r\n\r\n`\r\n\r\n\r\nI hope can get someone reply, thanks\r\n", "url": "https://github.com/apache/shardingsphere/issues/1714", "user": "ghost", "labels": ["bug", "question"], "created": "2019-01-04 11:26:09", "closed": "2019-01-08 05:59:27", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Fix bug: get an exception of No operations allowed after connection closed", "body": "When use iBATIS+HikariCP, you will get an exception:No operations allowed after connection closed.", "url": "https://github.com/apache/shardingsphere/issues/1712", "user": "tristaZero", "labels": ["bug"], "created": "2019-01-04 10:06:15", "closed": "2019-01-04 11:29:35", "commits": {"ac350dc433ec420295b342d546bf36112b180899": {"commitGHEventType": "closed", "commitUser": "terrymanu"}, "5fa3d0d3bba86cc304f773ad493c5f463074a6b0": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "260453eb518ba751d431ab76eb7b3a7acd787cf2": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ac350dc433ec420295b342d546bf36112b180899", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["c3009b8e2f712e2cdb12a35b6838a258b6ba2b6f"], "nameRev": "ac350dc433ec420295b342d546bf36112b180899 tags/4.0.0-RC1~1588", "commitMessage": "fix #1712\n", "commitDateTime": "2019-01-04 19:29:20", "authoredDateTime": "2019-01-04 19:29:20", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/ShardingContext.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/connection/MasterSlaveConnection.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/connection/ShardingConnection.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/CachedDatabaseMetaData.java", "insertions": 1310, "deletions": 0, "lines": 1310}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "5fa3d0d3bba86cc304f773ad493c5f463074a6b0", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["ac350dc433ec420295b342d546bf36112b180899"], "nameRev": "5fa3d0d3bba86cc304f773ad493c5f463074a6b0 tags/4.0.0-RC1~1587", "commitMessage": "for #1712, split CachedDatabaseMetaData\n", "commitDateTime": "2019-01-04 23:50:59", "authoredDateTime": "2019-01-04 23:50:59", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/ShardingContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/{ => metadata}/CachedDatabaseMetaData.java", "insertions": 13, "deletions": 216, "lines": 229}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/CachedDatabaseMetaDataAdapter.java", "insertions": 91, "deletions": 0, "lines": 91}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/UnsupportedOperationCachedMetaData.java", "insertions": 170, "deletions": 0, "lines": 170}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingContext.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.ShardingContext.createCachedDatabaseMetaData(java.util.Map)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveDataSource.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.createCachedDatabaseMetaData(java.util.Map)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CachedDatabaseMetaData.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData", "TOT": 269, "UPD": 0, "INS": 0, "MOV": 268, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.CachedDatabaseMetaData", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.CachedDatabaseMetaData.isGeneratedKeyAlwaysReturned(java.sql.DatabaseMetaData)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getUserName()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDatabaseProductName()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDatabaseProductVersion()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDriverName()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDriverVersion()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDriverMajorVersion()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDriverMinorVersion()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDatabaseMajorVersion()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDatabaseMinorVersion()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getJDBCMajorVersion()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getJDBCMinorVersion()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.isReadOnly()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.allProceduresAreCallable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.allTablesAreSelectable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.nullsAreSortedHigh()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.nullsAreSortedLow()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.nullsAreSortedAtStart()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.nullsAreSortedAtEnd()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.usesLocalFiles()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.usesLocalFilePerTable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMixedCaseIdentifiers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesUpperCaseIdentifiers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesLowerCaseIdentifiers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesMixedCaseIdentifiers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMixedCaseQuotedIdentifiers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesUpperCaseQuotedIdentifiers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesLowerCaseQuotedIdentifiers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesMixedCaseQuotedIdentifiers()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getIdentifierQuoteString()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getSQLKeywords()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getNumericFunctions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getStringFunctions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getSystemFunctions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getTimeDateFunctions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getSearchStringEscape()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getExtraNameCharacters()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsAlterTableWithAddColumn()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsAlterTableWithDropColumn()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsColumnAliasing()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.nullPlusNonNullIsNull()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsConvert()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsTableCorrelationNames()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsConvert(int,int)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsDifferentTableCorrelationNames()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsExpressionsInOrderBy()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOrderByUnrelated()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsGroupBy()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsGroupByUnrelated()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsGroupByBeyondSelect()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsLikeEscapeClause()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMultipleResultSets()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMultipleTransactions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsNonNullableColumns()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMinimumSQLGrammar()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCoreSQLGrammar()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsExtendedSQLGrammar()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsANSI92EntryLevelSQL()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsANSI92IntermediateSQL()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsANSI92FullSQL()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsIntegrityEnhancementFacility()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOuterJoins()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsFullOuterJoins()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsLimitedOuterJoins()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getSchemaTerm()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getProcedureTerm()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getCatalogTerm()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.isCatalogAtStart()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getCatalogSeparator()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSchemasInDataManipulation()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSchemasInProcedureCalls()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSchemasInTableDefinitions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSchemasInIndexDefinitions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSchemasInPrivilegeDefinitions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCatalogsInDataManipulation()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCatalogsInProcedureCalls()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCatalogsInTableDefinitions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCatalogsInIndexDefinitions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCatalogsInPrivilegeDefinitions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsPositionedDelete()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsPositionedUpdate()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSelectForUpdate()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsStoredProcedures()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSubqueriesInComparisons()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSubqueriesInExists()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSubqueriesInIns()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSubqueriesInQuantifieds()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCorrelatedSubqueries()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsUnion()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsUnionAll()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOpenCursorsAcrossCommit()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOpenCursorsAcrossRollback()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOpenStatementsAcrossCommit()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOpenStatementsAcrossRollback()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxBinaryLiteralLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxCharLiteralLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnNameLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnsInGroupBy()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnsInIndex()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnsInOrderBy()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnsInSelect()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnsInTable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxConnections()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxCursorNameLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxIndexLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxSchemaNameLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxProcedureNameLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxCatalogNameLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxRowSize()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.doesMaxRowSizeIncludeBlobs()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxStatementLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxStatements()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxTableNameLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxTablesInSelect()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxUserNameLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDefaultTransactionIsolation()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsTransactions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsDataDefinitionAndDataManipulationTransactions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsDataManipulationTransactionsOnly()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.dataDefinitionCausesTransactionCommit()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.dataDefinitionIgnoredInTransactions()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsBatchUpdates()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSavepoints()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsNamedParameters()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMultipleOpenResults()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsGetGeneratedKeys()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getResultSetHoldability()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getSQLStateType()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.locatorsUpdateCopy()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsStatementPooling()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsStoredFunctionsUsingCallSyntax()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.autoCommitFailureClosesAllResultSets()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.generatedKeyAlwaysReturned()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getRowIdLifetime()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsTransactionIsolationLevel(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CachedDatabaseMetaDataAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.CachedDatabaseMetaDataAdapter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "UnsupportedOperationCachedMetaData.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.UnsupportedOperationCachedMetaData", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "260453eb518ba751d431ab76eb7b3a7acd787cf2", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["5fa3d0d3bba86cc304f773ad493c5f463074a6b0"], "nameRev": "260453eb518ba751d431ab76eb7b3a7acd787cf2 tags/4.0.0-RC1~1586", "commitMessage": "for #1712, add test case for CachedDatabaseMetaData\n", "commitDateTime": "2019-01-05 01:04:24", "authoredDateTime": "2019-01-05 01:04:24", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/jdbc/core/AllCoreTests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/metadata/CachedDatabaseMetaDataTest.java", "insertions": 915, "deletions": 0, "lines": 915}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["ac350dc433ec420295b342d546bf36112b180899", "5fa3d0d3bba86cc304f773ad493c5f463074a6b0", "260453eb518ba751d431ab76eb7b3a7acd787cf2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 1602, "deletions": 230, "lines": 1832, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 411.0, "UPD": 2.0, "INS": 4.0, "MOV": 404.0, "DEL": 1.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 141}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core"], "changesInPackagesSPOON": ["io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.nullsAreSortedHigh()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsAlterTableWithAddColumn()", "io.shardingsphere.shardingjdbc.jdbc.core.ShardingContext.createCachedDatabaseMetaData(java.util.Map)", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDefaultTransactionIsolation()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSubqueriesInIns()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDatabaseProductName()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getProcedureTerm()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsANSI92EntryLevelSQL()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.CachedDatabaseMetaData.isGeneratedKeyAlwaysReturned(java.sql.DatabaseMetaData)", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOrderByUnrelated()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getCatalogTerm()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxStatements()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSchemasInPrivilegeDefinitions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCatalogsInIndexDefinitions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.allProceduresAreCallable()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesUpperCaseQuotedIdentifiers()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getExtraNameCharacters()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsLimitedOuterJoins()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOpenStatementsAcrossRollback()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnsInIndex()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.generatedKeyAlwaysReturned()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsStoredFunctionsUsingCallSyntax()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.nullsAreSortedLow()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getIdentifierQuoteString()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsTransactions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getUserName()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSchemasInProcedureCalls()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSchemasInDataManipulation()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMultipleTransactions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesMixedCaseIdentifiers()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsDataManipulationTransactionsOnly()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCatalogsInDataManipulation()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getSQLStateType()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesMixedCaseQuotedIdentifiers()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxCatalogNameLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getJDBCMinorVersion()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getSystemFunctions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.nullsAreSortedAtStart()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsStatementPooling()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxUserNameLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsGroupByUnrelated()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.usesLocalFiles()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsTableCorrelationNames()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesUpperCaseIdentifiers()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDriverMajorVersion()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsGroupBy()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMixedCaseQuotedIdentifiers()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getSearchStringEscape()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsUnion()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMixedCaseIdentifiers()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCatalogsInPrivilegeDefinitions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsStoredProcedures()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOpenCursorsAcrossRollback()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.CachedDatabaseMetaData", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnsInSelect()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsDataDefinitionAndDataManipulationTransactions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDriverName()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxSchemaNameLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getTimeDateFunctions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsANSI92FullSQL()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxStatementLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.isCatalogAtStart()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getNumericFunctions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.dataDefinitionIgnoredInTransactions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.MasterSlaveDataSource.createCachedDatabaseMetaData(java.util.Map)", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsConvert()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSubqueriesInComparisons()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMultipleOpenResults()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsColumnAliasing()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMinimumSQLGrammar()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSchemasInIndexDefinitions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxRowSize()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getStringFunctions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsMultipleResultSets()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsFullOuterJoins()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCatalogsInProcedureCalls()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.locatorsUpdateCopy()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.isReadOnly()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsGetGeneratedKeys()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.nullsAreSortedAtEnd()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOpenStatementsAcrossCommit()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCatalogsInTableDefinitions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsTransactionIsolationLevel(int)", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getJDBCMajorVersion()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsBatchUpdates()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsNamedParameters()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsIntegrityEnhancementFacility()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsPositionedUpdate()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsGroupByBeyondSelect()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDatabaseMajorVersion()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getRowIdLifetime()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSelectForUpdate()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsConvert(int,int)", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.nullPlusNonNullIsNull()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxConnections()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxIndexLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsLikeEscapeClause()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxCharLiteralLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOuterJoins()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxCursorNameLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDriverVersion()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getSchemaTerm()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxProcedureNameLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getCatalogSeparator()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.UnsupportedOperationCachedMetaData", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.dataDefinitionCausesTransactionCommit()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getResultSetHoldability()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnsInOrderBy()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsExtendedSQLGrammar()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSubqueriesInQuantifieds()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSchemasInTableDefinitions()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.CachedDatabaseMetaDataAdapter", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxTableNameLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsDifferentTableCorrelationNames()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesLowerCaseQuotedIdentifiers()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCorrelatedSubqueries()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDatabaseMinorVersion()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsOpenCursorsAcrossCommit()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.usesLocalFilePerTable()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSavepoints()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.storesLowerCaseIdentifiers()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.autoCommitFailureClosesAllResultSets()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDriverMinorVersion()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsSubqueriesInExists()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getSQLKeywords()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.allTablesAreSelectable()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnsInGroupBy()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getDatabaseProductVersion()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsANSI92IntermediateSQL()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsAlterTableWithDropColumn()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxBinaryLiteralLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsNonNullableColumns()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.doesMaxRowSizeIncludeBlobs()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnsInTable()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsPositionedDelete()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxTablesInSelect()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsExpressionsInOrderBy()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsCoreSQLGrammar()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.getMaxColumnNameLength()", "io.shardingsphere.shardingjdbc.jdbc.core.datasource.CachedDatabaseMetaData.supportsUnionAll()"]}, {"title": "CommandExecutor.writeMoreResults deadlock", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of ShardingSphere did you use?\r\n3.1.0-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\nWhen flag isWritable turn to false, it can turn back to ture in future.\r\n\r\n### Actual behavior\r\nWhen flag isWritable turn to false, it can't turn back to ture in future.\r\n\r\n### Reason analyze (If you can)\r\nWhen flag isWritable turn to false, the data that has been written didn't flush. So the client can't read any data, this cause the water level high.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nset proxy.frontend.flush.threshold: 1000000\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\nN.A.", "url": "https://github.com/apache/shardingsphere/issues/1704", "user": "tuohai666", "labels": ["bug"], "created": "2019-01-02 08:48:17", "closed": "2019-01-02 09:50:45", "commits": {"aca9d335f80563cf3ee962dc0328a44e87c488f2": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "aca9d335f80563cf3ee962dc0328a44e87c488f2", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["37177982e5db638419e8ae42d6c53cba06057952", "1d80445e0dabebf74536ed246a9b43fc51a1ffc3"], "nameRev": "aca9d335f80563cf3ee962dc0328a44e87c488f2 tags/3.1.0~17", "commitMessage": "Merge pull request #1705 from tuohai666/dev\n\n#1704, CommandExecutor.writeMoreResults deadlock", "commitDateTime": "2019-01-02 17:50:44", "authoredDateTime": "2019-01-02 17:50:44", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/CommandExecutor.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommandExecutor.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingproxy.frontend.mysql.CommandExecutor.writeMoreResults(io.shardingsphere.shardingproxy.transport.mysql.packet.command.query.QueryCommandPacket,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "DML of broadcast tables return wrong row count", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n3.1.0.M1\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\nConfigure three sharding datasources and one broadcast table.\r\nThen insert one row data into the broadcast table, the row count should return 1.\r\n\r\n### Actual behavior\r\n\r\nThe row count return 3 actually.\r\n\r\n### Reason analyze (If you can)\r\n\r\nDML of broadcast table have multiple execute results, and will be accumulated in `StatementExeuctor`\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1696", "user": "KomachiSion", "labels": ["bug"], "created": "2018-12-28 07:23:13", "closed": "2019-01-18 08:53:17", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "java.sql.SQLSyntaxErrorException: Table 'ds1.t_order_order_items' doesn't exist ", "body": "## Bug Report\r\n# this \u2018s my sharding config\r\n```\r\nsharding.jdbc.datasource.names=ds0,ds1,ds2\r\nsharding.jdbc.datasource.ds0.type=org.apache.commons.dbcp.BasicDataSource\r\nsharding.jdbc.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver\r\nsharding.jdbc.datasource.ds0.url=jdbc:mysql://localhost:3306/ds0?serverTimezone=GMT%2B8`\r\nsharding.jdbc.datasource.ds0.username=root\r\nsharding.jdbc.datasource.ds0.password=root\r\n\r\nsharding.jdbc.datasource.ds1.type=org.apache.commons.dbcp.BasicDataSource\r\nsharding.jdbc.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver\r\nsharding.jdbc.datasource.ds1.url=jdbc:mysql://localhost:3306/ds1?serverTimezone=GMT%2B8\r\nsharding.jdbc.datasource.ds1.username=root\r\nsharding.jdbc.datasource.ds1.password=root\r\n\r\nsharding.jdbc.datasource.ds2.type=org.apache.commons.dbcp.BasicDataSource\r\nsharding.jdbc.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver\r\nsharding.jdbc.datasource.ds2.url=jdbc:mysql://localhost:3306/ds2?serverTimezone=GMT%2B8\r\nsharding.jdbc.datasource.ds2.username=root\r\nsharding.jdbc.datasource.ds2.password=root\r\n\r\nsharding.jdbc.config.sharding.default-data-source-name=ds2\r\nsharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id\r\nsharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 3}\r\nsharding.jdbc.config.sharding.default-key-generator-class-name=liuxun.jpa.shard.config.SnowFlakeGenerator\r\n\r\nsharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds$->{0..2}.t_order$->{0..1}\r\nsharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id\r\nsharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{order_id % 2}\r\nsharding.jdbc.config.sharding.tables.t_order.key-generator-column-name=order_id\r\nsharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..2}.t_order_item$->{0..1}\r\nsharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id\r\nsharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}\r\nsharding.jdbc.config.sharding.tables.t_order_item.key-generator-column-name=order_item_id\r\nsharding.jdbc.config.sharding.binding-tables=t_order,t_order_item\r\n\r\nsharding.jdbc.config.sharding.tables.t_user.actual-data-nodes=ds$->{0..2}.t_user$->{0..1}\r\nsharding.jdbc.config.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id\r\nsharding.jdbc.config.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user$->{user_id % 2}\r\nsharding.jdbc.config.sharding.tables.t_user.key-generator-column-name=user_id\r\n\r\nsharding.jdbc.config.sharding.tables.t_product.actual-data-nodes=ds$->{0..2}.t_product$->{0..1}\r\nsharding.jdbc.config.sharding.tables.t_product.database-strategy.inline.sharding-column=product_id\r\nsharding.jdbc.config.sharding.tables.t_product.database-strategy.inline.algorithm-expression=ds$->{product_id % 2}\r\nsharding.jdbc.config.sharding.tables.t_product.table-strategy.inline.sharding-column=product_id\r\nsharding.jdbc.config.sharding.tables.t_product.table-strategy.inline.algorithm-expression=t_product$->{product_id % 2}\r\nsharding.jdbc.config.sharding.tables.t_product.key-generator-column-name=product_id\r\n\r\nsharding.jdbc.config.sharding.props.sql.show=true\r\n\r\n```\r\nI have configured three database, each with two tables in each database including t_order , t_order_item, t_user and t_product. The default data source is ds0 but I have an error when querying orders based on the amount range.\r\n\r\n```\r\njava.sql.SQLSyntaxErrorException: Table 'ds1.t_order_order_items' doesn't exist at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120) ~[mysql-connector-java-8.0.13.jar:8.0.13] at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.13.jar:8.0.13] at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.13.jar:8.0.13] \r\n```\r\n\r\nHow to solve it? This table is automatically generated by shading, and in the default data source ds2, .t_order_order_items\r\n\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1689", "user": "LX1993728", "labels": ["bug", "duplicate"], "created": "2018-12-27 06:47:06", "closed": "2019-01-18 08:53:07", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "not sharding table do not route the default datasource.", "body": "version: 3.1.0.M1\r\ndatabase type: mysql\r\norm: spring data jpa\r\n\r\nnot sharding table do not route the default datasource. default datasource name is \"main\",but the table push_user route  \"ds0\".\r\n\r\nsharding config code:\r\n```\r\n   // \u914d\u7f6e\u771f\u5b9e\u6570\u636e\u6e90\r\n    Map<String, DataSource> dataSourceMap = new HashMap<>();\r\n    dataSourceMap.put(\"ds0\",sharding01DataSource());\r\n    dataSourceMap.put(\"ds1\",sharding02DataSource());\r\n    dataSourceMap.put(\"ds2\",sharding03DataSource());\r\n    dataSourceMap.put(\"ds3\",sharding04DataSource());\r\n    dataSourceMap.put(\"main\",moduleDataSource());\r\n\r\n    // \u914d\u7f6eOrder\u8868\u89c4\u5219\r\n    TableRuleConfiguration orderTableRuleConfig = new TableRuleConfiguration();\r\n    orderTableRuleConfig.setLogicTable(\"push_message\");\r\n    orderTableRuleConfig.setActualDataNodes(\"ds${0..3}.push_message\");\r\n\r\n    //\u5206\u5e03\u5f0f\u4e3b\u952e\r\n    orderTableRuleConfig.setKeyGeneratorColumnName(\"id\");\r\n    ShardingDefaultKeyGenerator shardingDefaultKeyGenerator = new ShardingDefaultKeyGenerator();\r\n    orderTableRuleConfig.setKeyGenerator(shardingDefaultKeyGenerator);\r\n\r\n    // \u914d\u7f6e\u5206\u5e93\u7b56\u7565\r\n    orderTableRuleConfig.setDatabaseShardingStrategyConfig(\r\n            new InlineShardingStrategyConfiguration(\"traceid\", \"ds${traceid%4}\"));\r\n\r\n    // \u914d\u7f6e\u5206\u7247\u89c4\u5219\r\n    ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\r\n    shardingRuleConfig.getTableRuleConfigs().add(orderTableRuleConfig);\r\n    shardingRuleConfig.setDefaultDataSourceName(\"main\");//\u9ed8\u8ba4\u4e3b\u6570\u636e\u6e90\u914d\u7f6e\r\n```\r\ntest case\r\n```\r\n@Test\r\n    public void testSelece(){\r\n        PageRequest pageRequest = new PageRequest(1, 1000);\r\n        List<UserPo> userPos = userRepository.getWithoutUserIdListBy(\"appcode_idxyer_iphone\",new Date(),pageRequest);\r\n        log.info(\"size:\"+userPos.size());\r\n    }\r\n\r\n// userRepository\r\n  @Query(\"SELECT u FROM UserPo u WHERE u.userId is NULL and u.appName = ?1 and u.modifyTime < ?2\")\r\n  List<UserPo> getWithoutUserIdListBy(String appName, Date date, Pageable pageable);\r\n```\r\n\r\nlog:\r\n```\r\n2018-12-26 12:32:00.060  INFO 46235 --- [           main] ShardingSphere-SQL                       : Rule Type: sharding\r\n2018-12-26 12:32:00.061  INFO 46235 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ?\r\n2018-12-26 12:32:00.061  INFO 46235 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@13a590f3), containStar=false, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_))], groupByItems=[], orderByItems=[], limit=Limit(databaseType=MySQL, offset=LimitValue(value=1000, index=2, boundOpened=false), rowCount=LimitValue(value=1000, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[])\r\n2018-12-26 12:32:00.061  INFO 46235 --- [           main] ShardingSphere-SQL                       : Actual SQL: ds0 ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ? ::: [[appcode_idxyer_iphone, 2018-12-26 12:24:22.936, 0, 2000]]\r\n2\r\n```", "url": "https://github.com/apache/shardingsphere/issues/1676", "user": "ppj19891020", "labels": ["bug"], "created": "2018-12-26 04:40:40", "closed": "2019-01-21 10:41:42", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "INSERT & UPDATE do not support escape character \\", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere did you use?\r\n3.1.0.M1\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nINSERT & UPDATE support escape character \\\r\n### Actual behavior\r\nINSERT & UPDATE do not support escape character \\\r\nwhile SELECT works well.\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n```\r\nmysql> insert into test(name) values ('\\'');\r\nERROR 3054 (HY000): Unknown exception: Illegal input, unterminated '''.\r\nmysql> update test set name='\\'' where id=1;\r\nERROR 3054 (HY000): Unknown exception: Illegal input, unterminated '''.\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1674", "user": "joooohnli", "labels": ["bug", "sharding"], "created": "2018-12-25 11:13:41", "closed": "2019-03-28 08:28:31", "commits": {}, "ttf": 92.00027777777778, "commitsDetails": []}, {"title": "spring data jpa auto limit page some grammar  not support", "body": "junit test:\r\n> page is 1 and  pagesize is 1000\r\n```\r\n@Test\r\n    public void testSelece(){\r\n        PageRequest pageRequest = new PageRequest(1, 1000);\r\n        userRepository.getWithoutUserIdListBy(\"appcode_idxyer_iphone\",new Date(),pageRequest);\r\n    }\r\n```\r\nUserRepository interface:\r\n```\r\n  @Query(\"SELECT u FROM UserPo u WHERE u.userId is NULL and u.appName = ?1 and u.modifyTime < ?2\")\r\n  List<UserPo> getWithoutUserIdListBy(String appName, Date date, Pageable pageable);\r\n```\r\n\r\n\r\nsee sql log limit 0, 2000\r\n```\r\n2018-12-25 16:14:20.480  INFO 34103 --- [           main] ShardingSphere-SQL                       : Rule Type: sharding\r\n2018-12-25 16:14:20.480  INFO 34103 --- [           main] ShardingSphere-SQL                       : Logic SQL: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ?\r\n2018-12-25 16:14:20.480  INFO 34103 --- [           main] ShardingSphere-SQL                       : SQLStatement: SelectStatement(super=DQLStatement(super=io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement@410c1f44), containStar=false, selectListLastPosition=460, groupByLastPosition=0, items=[CommonSelectItem(expression=userpo0_.deviceType, alias=Optional.of(deviceTy9_5_)), CommonSelectItem(expression=userpo0_.id, alias=Optional.of(id1_5_)), CommonSelectItem(expression=userpo0_.version, alias=Optional.of(version13_5_)), CommonSelectItem(expression=userpo0_.deviceToken, alias=Optional.of(deviceTo7_5_)), CommonSelectItem(expression=userpo0_.osVersion, alias=Optional.of(osVersi11_5_)), CommonSelectItem(expression=userpo0_.modifyTime, alias=Optional.of(modifyT10_5_)), CommonSelectItem(expression=userpo0_.appName, alias=Optional.of(appName4_5_)), CommonSelectItem(expression=userpo0_.appCode, alias=Optional.of(appCode3_5_)), CommonSelectItem(expression=userpo0_.deviceMc, alias=Optional.of(deviceMc6_5_)), CommonSelectItem(expression=userpo0_.createTime, alias=Optional.of(createTi2_5_)), CommonSelectItem(expression=userpo0_.appVersion, alias=Optional.of(appVersi5_5_)), CommonSelectItem(expression=userpo0_.deviceTokenType, alias=Optional.of(deviceTo8_5_)), CommonSelectItem(expression=userpo0_.userId, alias=Optional.of(userId12_5_))], groupByItems=[], orderByItems=[], limit=Limit(databaseType=MySQL, offset=LimitValue(value=1000, index=2, boundOpened=false), rowCount=LimitValue(value=1000, index=3, boundOpened=false)), subQueryStatement=null, subQueryStatements=[])\r\n2018-12-25 16:14:20.481  INFO 34103 --- [           main] ShardingSphere-SQL                       : Actual SQL: main ::: select userpo0_.id as id1_5_, userpo0_.createTime as createTi2_5_, userpo0_.appCode as appCode3_5_, userpo0_.appName as appName4_5_, userpo0_.appVersion as appVersi5_5_, userpo0_.deviceMc as deviceMc6_5_, userpo0_.deviceToken as deviceTo7_5_, userpo0_.deviceTokenType as deviceTo8_5_, userpo0_.deviceType as deviceTy9_5_, userpo0_.modifyTime as modifyT10_5_, userpo0_.osVersion as osVersi11_5_, userpo0_.userId as userId12_5_, userpo0_.version as version13_5_ from push_user userpo0_ where (userpo0_.userId is null) and userpo0_.appName=? and userpo0_.modifyTime<? limit ?, ? ::: [[appcode_idxyer_iphone, 2018-12-25 16:14:18.693, 0, 2000]]\r\n```", "url": "https://github.com/apache/shardingsphere/issues/1672", "user": "ppj19891020", "labels": ["bug"], "created": "2018-12-25 08:19:50", "closed": "2019-01-07 09:21:59", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Upgrade from 3.0.0 to 3.1.0.M1 error reporting\uff0cjava.lang.NullPointerException: Cannot invoke method mod() on null object", "body": "sharding code:\r\n> sharding database column name : traceId\r\n  sharding strategy :ds${traceId%4}\r\n```\r\n      // \u914d\u7f6e\u771f\u5b9e\u6570\u636e\u6e90\r\n        Map<String, DataSource> dataSourceMap = new HashMap<>();\r\n        dataSourceMap.put(\"ds0\",ds0DataSource());\r\n        dataSourceMap.put(\"ds1\",ds1DataSource());\r\n        dataSourceMap.put(\"ds2\",ds2DataSource());\r\n        dataSourceMap.put(\"ds3\",ds3DataSource());\r\n        dataSourceMap.put(\"mainDataSource\",mainDataSource());\r\n\r\n        // \u914d\u7f6eOrder\u8868\u89c4\u5219\r\n        TableRuleConfiguration orderTableRuleConfig = new TableRuleConfiguration();\r\n        orderTableRuleConfig.setLogicTable(\"push_message\");\r\n        orderTableRuleConfig.setActualDataNodes(\"ds${0..3}.push_message\");\r\n\r\n        //\u5206\u5e03\u5f0f\u4e3b\u952e\r\n        orderTableRuleConfig.setKeyGeneratorColumnName(\"id\");\r\n        ShardingDefaultKeyGenerator shardingDefaultKeyGenerator = new ShardingDefaultKeyGenerator();\r\n        orderTableRuleConfig.setKeyGenerator(shardingDefaultKeyGenerator);\r\n\r\n        // \u914d\u7f6e\u5206\u5e93\u7b56\u7565\r\n        orderTableRuleConfig.setDatabaseShardingStrategyConfig(\r\n                new InlineShardingStrategyConfiguration(\"traceId\", \"ds${traceId%4}\"));\r\n\r\n        // \u914d\u7f6e\u5206\u7247\u89c4\u5219\r\n        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\r\n        shardingRuleConfig.getTableRuleConfigs().add(orderTableRuleConfig);\r\n        shardingRuleConfig.setDefaultDataSourceName(\"mainDataSource\");\r\n\r\n        Properties properties = new Properties();\r\n        properties.setProperty(\"sql.show\",\"true\");\r\n        properties.setProperty(\"max.connections.size.per.query\",\"200\");\r\n        properties.setProperty(\"executor.size\",String.valueOf(Runtime.getRuntime().availableProcessors() * 2));\r\n\r\n        DataSource dataSource = ShardingDataSourceFactory.createDataSource(\r\n                dataSourceMap, shardingRuleConfig, new ConcurrentHashMap(), properties);\r\n        return dataSource\r\n```\r\n\r\nerror info:\r\n```\r\njava.lang.NullPointerException: Cannot invoke method mod() on null object\r\n\r\n\tat org.codehaus.groovy.runtime.NullObject.invokeMethod(NullObject.java:91)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.NullCallSite.call(NullCallSite.java:35)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)\r\n\tat Script2$_run_closure1.doCall(Script2.groovy:1)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\r\n\tat groovy.lang.Closure.call(Closure.java:426)\r\n\tat groovy.lang.Closure.call(Closure.java:420)\r\n\tat com.fly.ApplicationTests.testInline(ApplicationTests.java:98)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n```\r\n\r\nsharding key is hump naming\uff0ccalculating rote Error,\r\n```java\r\n    //InlineShardingStrategy.java \r\n    private String execute(final PreciseShardingValue shardingValue) {\r\n        Closure<?> result = closure.rehydrate(new Expando(), null, null);\r\n        result.setResolveStrategy(Closure.DELEGATE_ONLY);\r\n        //method toLowerCase()\r\n        result.setProperty(shardingValue.getColumnName().toLowerCase(), shardingValue.getValue());\r\n        return result.call().toString();\r\n    }\r\n```\r\nunit test :  \r\n1. test fail\r\n```\r\n@Test\r\n    public void testInline(){\r\n        Closure<?> closure = new InlineExpressionParser(\"ds${traceId%4}\").evaluateClosure();\r\n        Closure<?> result = closure.rehydrate(new Expando(), null, null);\r\n        result.setResolveStrategy(Closure.DELEGATE_ONLY);\r\n        PreciseShardingValue shardingValue = new PreciseShardingValue(\"push_message\",\"traceId\",342342);\r\n        result.setProperty(shardingValue.getColumnName().toLowerCase(), shardingValue.getValue());\r\n        System.out.println(\"--------:\"+result.call().toString());\r\n    }\r\n```\r\n2. test pass\r\n```\r\n@Test\r\n    public void testInline(){\r\n        Closure<?> closure = new InlineExpressionParser(\"ds${traceid%4}\").evaluateClosure();\r\n        Closure<?> result = closure.rehydrate(new Expando(), null, null);\r\n        result.setResolveStrategy(Closure.DELEGATE_ONLY);\r\n        PreciseShardingValue shardingValue = new PreciseShardingValue(\"push_message\",\"traceId\",342342);\r\n        result.setProperty(shardingValue.getColumnName().toLowerCase(), shardingValue.getValue());\r\n        System.out.println(\"--------:\"+result.call().toString());\r\n    }\r\n```", "url": "https://github.com/apache/shardingsphere/issues/1671", "user": "ppj19891020", "labels": ["bug"], "created": "2018-12-25 08:09:46", "closed": "2019-01-02 13:11:14", "commits": {"a43770063fcfe4cbba8821cc6e86a5cc93465c7e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "a43770063fcfe4cbba8821cc6e86a5cc93465c7e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["3dbe77790c3ff3fafa685823165890e20f439d04", "2a61efcba24cc95a23e50ecff6586742bd3ae95d"], "nameRev": "a43770063fcfe4cbba8821cc6e86a5cc93465c7e tags/3.1.0~14", "commitMessage": "Merge pull request #1706 from tuohai666/dev\n\n#1671, make InlineShardingStrategy case sensitive", "commitDateTime": "2019-01-02 21:11:13", "authoredDateTime": "2019-01-02 21:11:13", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/routing/strategy/inline/InlineShardingStrategy.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InlineShardingStrategy.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.strategy.inline.InlineShardingStrategy.execute(io.shardingsphere.api.algorithm.sharding.PreciseShardingValue)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Support to add new schemas and delete existed schema for orchestration", "body": "Considering the suggestions from ShardingSphere community, I plan to add a new feather for Sharding-orchestration, which basically includes\r\n1. User can add or delete scheme configurations in registry, e.g. zookeeper or etcd.\r\n2. Registry pushes those changed events to all of applications online.\r\n3. Applications online refresh their schema configurations to make those changes effective", "url": "https://github.com/apache/shardingsphere/issues/1664", "user": "tristaZero", "labels": ["bug"], "created": "2018-12-23 05:56:25", "closed": "2018-12-24 09:36:18", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "SS 3.1.0.M1 count sql throw an error,3.1.0 works well", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\nWith the Configration #1653 \r\n\r\nThe sql throw an exception with 3.1.0.M1\r\nand works well with 3.0.0\r\n```sql\r\nSELECT COUNT(1) FROM ( \r\n     SELECT\r\n        r.`channel` as `channel_code`,\r\n        r.`channel_name` as `channel_name`,\r\n        COUNT(r.id) `total_cnt`,\r\n        COUNT(r.connect_flag = \"Y\") `connected_cnt`\r\n        FROM record_callin r\r\n        LEFT JOIN sys_org_tree_rel tree ON tree.teamid = r.teamid\r\n        LEFT JOIN sys_user u ON u.brokerid = r.brokerid\r\n        where\r\n        r.create_time >= '2018-01-01 00:00:00' and r.create_time <=  '2019-01-01 00:00:00'\r\n        GROUP BY \r\n        r.`channel` \r\n) TOTAL\r\n```\r\n\r\nthis throws an error:\r\n```\r\nCaused by: java.lang.IllegalStateException: DQL must have sharding column with subquery.\r\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:444) ~[guava-20.0.jar:na]\r\n\tat io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.checkAndMergeShardingValue(ParsingSQLRouter.java:157) ~[sharding-core-3.1.0.M1.jar:na]\r\n\tat io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.route(ParsingSQLRouter.java:127) ~[sharding-core-3.1.0.M1.jar:na]\r\n\tat io.shardingsphere.core.routing.PreparedStatementRoutingEngine.route(PreparedStatementRoutingEngine.java:66) ~[sharding-core-3.1.0.M1.jar:na]\r\n\tat io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.sqlRoute(ShardingPreparedStatement.java:241) ~[sharding-jdbc-core-3.1.0.M1.jar:na]\r\n\tat io.shardingsphere.shardingjdbc.jdbc.core.statement.ShardingPreparedStatement.executeQuery(ShardingPreparedStatement.java:111) ~[sharding-jdbc-core-3.1.0.M1.jar:na]\r\n\tat com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor.queryTotal(PaginationInterceptor.java:207) ~[mybatis-plus-extension-3.0.6.jar:3.0.6]\r\n\t... 116 common frames omitted\r\n\r\n```\r\n\r\n#1653 reason is I used single quote mark with column alias\r\nbut this issue reason is different\r\n", "url": "https://github.com/apache/shardingsphere/issues/1658", "user": "a598070240", "labels": ["bug"], "created": "2018-12-21 08:45:25", "closed": "2018-12-29 03:42:41", "commits": {"b12d21216a85e56b3e4ecceeea2c8db694038cb4": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "b12d21216a85e56b3e4ecceeea2c8db694038cb4", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["1680d9e035e9732cb57ccaf5a0f249d6f8eff4e3", "b8df689e73bf6c187bd8c90515184ff158fc815a"], "nameRev": "b12d21216a85e56b3e4ecceeea2c8db694038cb4 tags/3.1.0~120", "commitMessage": "Merge pull request #1666 from codefairy08/dev\n\n#1658 bug fixs", "commitDateTime": "2018-12-24 17:36:54", "authoredDateTime": "2018-12-24 17:36:54", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/routing/type/standard/StandardRoutingEngineForSubQueryTest.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ParsingSQLRouter.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.checkAndMergeShardingValue(io.shardingsphere.core.parsing.parser.sql.SQLStatement,io.shardingsphere.core.optimizer.condition.ShardingConditions)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StandardRoutingEngineForSubQueryTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.type.standard.StandardRoutingEngineForSubQueryTest.assertUnshardingTalbe()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "3.1.0.M1  DISTINCT. COUNT and SUM report an error", "body": "![default](https://user-images.githubusercontent.com/45658355/50272428-bae71500-0472-11e9-99f8-be155d8a0d5d.png)\r\n\r\n**I did a simple test on the documentation AND found that COUNT AND SUM were wrong.**\r\n\r\n![default](https://user-images.githubusercontent.com/45658355/50272540-13b6ad80-0473-11e9-8066-da45ef3b7778.png)\r\n\r\nI didn't test it all, and other statements might have problems.You rearrange it DISTINCT's list", "url": "https://github.com/apache/shardingsphere/issues/1654", "user": "799983050", "labels": ["bug"], "created": "2018-12-20 08:28:14", "closed": "2018-12-25 14:43:17", "commits": {"3901c3a4de3ca46980d53f33774a65872cf4b384": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "3901c3a4de3ca46980d53f33774a65872cf4b384", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["f2080ffcf1ebf84105653e40bd0482bc4c5042b7", "f58138ee245c5d4fa8fb477c935869b2502b2442"], "nameRev": "3901c3a4de3ca46980d53f33774a65872cf4b384 tags/3.1.0~110", "commitMessage": "Merge pull request #1670 from codefairy08/dev\n\n#1654 bug fixs", "commitDateTime": "2018-12-25 17:11:25", "authoredDateTime": "2018-12-25 17:11:25", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/impl/ExpressionExtractor.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/ExpressionFiller.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/filler/impl/SelectClauseFiller.java", "insertions": 50, "deletions": 10, "lines": 60}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/sql/segment/expr/FunctionExpressionSegment.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java", "insertions": 21, "deletions": 11, "lines": 32}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/constant/DerivedAlias.java", "insertions": 59, "deletions": 0, "lines": 59}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dql/select/SelectStatement.java", "insertions": 9, "deletions": 8, "lines": 17}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/token/AggregationDistinctToken.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLRewriteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rewrite/placeholder/AggregationDistinctPlaceholder.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-core/src/test/resources/parser/select.xml", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExpressionExtractor.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.antlr.extractor.impl.ExpressionExtractor.fillForPropertyOrFunction(org.antlr.v4.runtime.ParserRuleContext)", "TOT": 10, "UPD": 0, "INS": 3, "MOV": 6, "DEL": 1}]}, {"spoonFilePath": "ExpressionFiller.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.antlr.filler.impl.ExpressionFiller.fillFunctionExpression(io.shardingsphere.core.parsing.antlr.sql.segment.expr.FunctionExpressionSegment,io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SelectClauseFiller.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.antlr.filler.impl.SelectClauseFiller.fill(io.shardingsphere.core.parsing.antlr.sql.segment.SelectClauseSegment,io.shardingsphere.core.parsing.parser.sql.SQLStatement,java.lang.String,io.shardingsphere.core.rule.ShardingRule,io.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 9, "UPD": 6, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.antlr.filler.impl.SelectClauseFiller.setDistinctFunctionAlias(io.shardingsphere.core.parsing.antlr.sql.segment.expr.ExpressionSegment,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.antlr.filler.impl.SelectClauseFiller.createDistinctCommonItem(io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement,java.lang.String,java.util.Set,io.shardingsphere.core.parsing.antlr.sql.segment.expr.CommonExpressionSegment)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.antlr.filler.impl.SelectClauseFiller.fillDistinct(io.shardingsphere.core.parsing.antlr.sql.segment.SelectClauseSegment,io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement,java.lang.String,io.shardingsphere.core.rule.ShardingRule,io.shardingsphere.core.metadata.table.ShardingTableMetaData)", "TOT": 9, "UPD": 0, "INS": 6, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "FunctionExpressionSegment.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.antlr.sql.segment.expr.FunctionExpressionSegment", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SelectListClauseParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.clause.SelectListClauseParser.getAggregationDistinctSelectItem(io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement,io.shardingsphere.core.constant.AggregationType,int,java.lang.String)", "TOT": 6, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DerivedAlias.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.constant.DerivedAlias", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SelectStatement.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AggregationDistinctToken.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.token.AggregationDistinctToken", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLRewriteEngine.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.rewrite.SQLRewriteEngine.appendDistinctPlaceholder(io.shardingsphere.core.rewrite.SQLBuilder,io.shardingsphere.core.parsing.parser.token.AggregationDistinctToken,int,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AggregationDistinctPlaceholder.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.rewrite.placeholder.AggregationDistinctPlaceholder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.rewrite.placeholder.AggregationDistinctPlaceholder.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SS 3.1.0.M1 can not route sql", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\n**DataBase:**\r\nMySql 5.7.24-log \r\n\r\n```\r\nCREATE TABLE `sys_org_tree_rel` (\r\n\t`comp_id` INT(11) NULL DEFAULT NULL COMMENT 'id',\r\n\t`areaid` INT(11) NULL DEFAULT NULL COMMENT 'id',\r\n\t`groupid` INT(11) NULL DEFAULT NULL COMMENT 'id',\r\n\t`teamid` INT(11) NULL DEFAULT NULL COMMENT 'id',\r\n\t`last_modify` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\r\n\tUNIQUE INDEX `teamid` (`teamid`),\r\n\tINDEX `comp_id` (`comp_id`),\r\n\tINDEX `areaid` (`areaid`),\r\n\tINDEX `groupid` (`groupid`)\r\n)\r\nCOMMENT='\u5173\u7cfb\u8868'\r\nCOLLATE='utf8mb4_bin'\r\nENGINE=InnoDB\r\n;\r\n\r\n```\r\n\r\n\r\n**Sharding Table Configration:**\r\n```yaml\r\nsharding:\r\n  jdbc:\r\n    datasource:\r\n      names: druid0\r\n      druid0:\r\n        type: com.alibaba.druid.pool.DruidDataSource\r\n        url: jdbc:mysql://*******************?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=GMT%2B8\r\n        driver-class-name: com.mysql.cj.jdbc.Driver\r\n        username: ************\r\n        password: **********\r\n        initial-size: 10\r\n        min-idle: 1\r\n        max-active: 100\r\n        max-wait: 6000\r\n        min-evictable-idle-time-millis: 60000\r\n        time-between-eviction-runs-millis: 6000\r\n        validation-query: \"SELECT 'x' from dual\"\r\n        validation-query-timeout: 6000\r\n        pool-prepared-statements: true\r\n        max-pool-prepared-statement-per-connection-size: 20\r\n        test-while-idle: true\r\n        test-on-borrow: true\r\n        test-on-return: true\r\n        filter:\r\n          stat:\r\n            log-slow-sql: true\r\n    config:\r\n      sharding:\r\n        tables:\r\n          record_callin:\r\n            actual-data-nodes:  druid0.record_callin_${2018..Calendar.getInstance().get(Calendar.YEAR)}${(1..12).collect{if(it<10) \"0\"+it else it}}\r\n            table-strategy:\r\n              inline:\r\n                sharding-column: create_time\r\n                algorithm-expression: record_callin_${create_time.format('yyyyMM')}\r\n            key-generator-column-name: id\r\n        default-key-generator-class-name: io.shardingsphere.core.keygen.DefaultKeyGenerator\r\n        props:\r\n          show.sql: true\r\n          sql.show: true\r\n          max.connections.size.per.query: 15\r\n          executor.size: 15\r\n\r\n```\r\n**SQL:**\r\n```sql\r\n\r\nSELECT COUNT(1) AS 'cnt'\r\nFROM record_callin r, sys_org_tree_rel tree\r\nWHERE tree.teamid = r.teamid AND r.create_time >=? AND r.create_time <=?\r\n\r\n\r\nor \r\n\r\n\r\nSELECT COUNT(1) AS 'cnt'\r\nFROM record_callin r\r\nINNER  JOIN  sys_org_tree_rel tree ON tree.teamid = r.teamid  \r\nWHERE  r.create_time >=? AND r.create_time <=?\r\n\r\n```\r\n**issue:**\r\n**it works well with sharding jdbc 3.0.0\r\nbut can not work with sharding jdbc 3.1.0.M1**\r\n", "url": "https://github.com/apache/shardingsphere/issues/1653", "user": "a598070240", "labels": ["bug"], "created": "2018-12-20 06:43:40", "closed": "2018-12-21 14:56:00", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Result data incomplete when there's Limit sub clause", "body": "## Bug Report\r\n\r\n### Which version of ShardingSphere did you use?\r\n\r\n3.0.1-SNAPSHOT\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC and Sharding-Proxy\r\n\r\n### Expected behavior\r\n\r\nTake ShardingType.SHARDING_DATABASES for example:\r\n\r\nThe SQL is single routed to demo_ds_0.t_order.\r\n\r\nSELECT * FROM t_order WHERE user_id = 0 LIMIT 5, 10;\r\n10 rows are expected:\r\norder_id: 0, user_id: 0, status: 6\r\norder_id: 0, user_id: 0, status: 7\r\norder_id: 0, user_id: 0, status: 8\r\norder_id: 0, user_id: 0, status: 9\r\norder_id: 0, user_id: 0, status: 10\r\norder_id: 0, user_id: 0, status: 11\r\norder_id: 0, user_id: 0, status: 12\r\norder_id: 0, user_id: 0, status: 13\r\norder_id: 0, user_id: 0, status: 14\r\norder_id: 0, user_id: 0, status: 15\r\n\r\n### Actual behavior\r\n\r\nGet 5 rows result:\r\norder_id: 0, user_id: 0, status: 11\r\norder_id: 0, user_id: 0, status: 12\r\norder_id: 0, user_id: 0, status: 13\r\norder_id: 0, user_id: 0, status: 14\r\norder_id: 0, user_id: 0, status: 15\r\n\r\n### Reason analyze (If you can)\r\n\r\nThis will be happen only on single routing which do not rewrite the logical SQL's Limit sub clause.\r\n5 rows is skipped. 5 is the offset of Limit sub clause. This is duo to offset skipping procedure in merge step.\r\nWhen single routing, offset should not be skipped.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\nTake ShardingType.SHARDING_DATABASES for example:\r\n\r\nThe SQL is single routed to demo_ds_0.t_order.\r\n\r\nSELECT * FROM t_order WHERE user_id = 0 LIMIT 5, 10;\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\nOffical example.", "url": "https://github.com/apache/shardingsphere/issues/1643", "user": "tuohai666", "labels": ["bug"], "created": "2018-12-19 01:38:36", "closed": "2018-12-19 04:43:00", "commits": {"4b583112bace15378136578af7757670ff958a96": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4b583112bace15378136578af7757670ff958a96", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["421ebb4b9840da8a9c9e441ca23379c7d6c03be5", "34ac2c256e11a3d770a67e235110e6cab0012c9e"], "nameRev": "4b583112bace15378136578af7757670ff958a96 tags/3.1.0.M1~5", "commitMessage": "Merge pull request #1644 from tuohai666/dev\n\n#1643, single routing do not decorate LIMIT sub clause", "commitDateTime": "2018-12-19 12:42:59", "authoredDateTime": "2018-12-19 12:42:59", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dql/DQLMergeEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/merger/dql/DQLMergeEngineTest.java", "insertions": 17, "deletions": 1, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DQLMergeEngine.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.merger.dql.DQLMergeEngine.decorate(io.shardingsphere.core.merger.MergedResult)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DQLMergeEngineTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.merger.dql.DQLMergeEngineTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.merger.dql.DQLMergeEngineTest.assertBuildIteratorStreamMergedResultWithLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.merger.dql.DQLMergeEngineTest.setUp()", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "After the integration of mybatis, mybatis Mapper is loop dead", "body": "## Bug Report\r\n**As a result, after integration with mybatis, some special operations lead to an endless cycle of mybatis**\r\n\r\n### Which version of Sharding-Sphere did you use?\r\n```xml\r\n<dependency>\r\n    <groupId>io.shardingsphere</groupId>\r\n    <artifactId>sharding-jdbc-spring-boot-starter</artifactId>\r\n    <version>3.0.0</version>\r\n</dependency>\r\n```\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n**It doesn't create an infinite loop**\r\n```\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - ==>  Preparing: INSERT INTO `user_role`(`username`, `role_name`) VALUES (?, ?) \r\n INFO  Sharding-Sphere-SQL - Rule Type: master-slave\r\n INFO  Sharding-Sphere-SQL - SQL: INSERT INTO `user_role`(`username`, `role_name`) VALUES (?, ?) ::: DataSources: write\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - ==> Parameters: write(String), write(String)\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n ...... The database operation completes printing other business logs\r\n```\r\n\r\n### Actual behavior\r\n```\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - ==>  Preparing: INSERT INTO `user_role`(`username`, `role_name`) VALUES (?, ?) \r\n INFO  Sharding-Sphere-SQL - Rule Type: master-slave\r\n INFO  Sharding-Sphere-SQL - SQL: INSERT INTO `user_role`(`username`, `role_name`) VALUES (?, ?) ::: DataSources: write\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - ==> Parameters: write(String), write(String)\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n DEBUG org.mapper.UserRoleMapper.insertBySelect2 - <==    Updates: 1\r\n ......Loop printing\r\n```\r\n\r\n### Reason analyze (If you can)\r\n\r\n`java.sql.Statement#getMoreResults()`The interface returns false as specified below\uff1a\r\n```java\r\n    // io.shardingsphere.shardingjdbc.jdbc.adapter.AbstractStatementAdapter\r\n\r\n    @Override\r\n    public final boolean getMoreResults() {\r\n        return false;\r\n    }\r\n    \r\n    @Override\r\n    public final boolean getMoreResults(final int current) {\r\n        return false;\r\n    }\r\n```\r\n**As a result, after integration with mybatis, some special operations cause mybatis to generate a dead loop. The position of the dead loop of mybatis code is as follows through debugging:**\r\n```java\r\n  // org.apache.ibatis.executor.resultset.DefaultResultSetHandler.java\r\n\r\n  private ResultSetWrapper getFirstResultSet(Statement stmt) throws SQLException {\r\n    ResultSet rs = stmt.getResultSet();\r\n    while (rs == null) {\r\n      // move forward to get the first resultset in case the driver\r\n      // doesn't return the resultset as the first result (HSQLDB 2.1)\r\n      if (stmt.getMoreResults()) {\r\n        rs = stmt.getResultSet();\r\n      } else {\r\n        // Note: using sharding- JDBC, stmt.getupdatecount () is always greater than 1 (resulting in an infinite loop),\r\n        // But using mysql's native driver returns -1\r\n        if (stmt.getUpdateCount() == -1) {\r\n          // no more results. Must be no resultset\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return rs != null ? new ResultSetWrapper(rs, configuration) : null;\r\n  }\r\n```\r\nUse mybatis to reproduce the code\uff1a\r\n```java\r\n@Repository\r\n@Mapper\r\npublic interface UserRoleMapper extends BaseMapper<UserRole> {\r\n    // Define update database statements in @select\r\n    @Select(\"INSERT INTO `user_role`(`username`, `role_name`) VALUES (#{userRole.username}, #{userRole.roleName})\")\r\n    Integer insertBySelect(@Param(\"userRole\") UserRole userRole);\r\n}\r\n```\r\n\r\n**My current solution**\r\n``` java\r\n    // Modify the io.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement \r\n\r\n    @Override\r\n    public final boolean getMoreResults() {\r\n        return routedStatements.iterator().next().getMoreResults();\r\n    }\r\n```\r\n\r\n**After the test is modified in this way, online problems can be solved, but I do not know whether it will bring about other problems. I hope the official support (online is in use urgently).**\r\n", "url": "https://github.com/apache/shardingsphere/issues/1603", "user": "Lzw2016", "labels": ["bug"], "created": "2018-12-12 09:01:11", "closed": "2018-12-13 14:52:35", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "sql has been routed to the target db, but also pagination revision", "body": "## Bug Report\r\n\r\nfor example db1  db2\uff0ctable order\r\n\r\nsql has been routed to the target db2,  limit 15,15.but also pagination revision,sql rewrite as limit 0,30\r\n\r\n### Which version of Sharding-Sphere did you use?\r\n3.0.0 / 3.0.0.M4\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nuse sharding-jdbc\r\n\r\n### Expected behavior\r\nselect * from order where storeId=5 and (barcode is not null or barcode !='') limit 15,15\r\n### Actual behavior\r\nselect * from order where storeId=5 and (barcode is not null or barcode !='') limit 0,30\r\n### Reason analyze (If you can)\r\nParsingSQLRouter->method route->isSingleRouting=false->this.processLimit->limit->rewrite\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nsql:\r\nselect * from order where storeId=5 and (barcode is not null or barcode !='') limit 15,15\r\nselect * from order where storeId=5 and (firstcode in (1,2,3) or secondcode in (1,2,3) or thirdcode in(1,2,3)) limit 15,15\r\n\r\nconfig:\r\nsharding.jdbc.config.sharding.tables.order.database-strategy.standard.sharding-column: storeId\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1581", "user": "posuixukong76", "labels": ["bug", "jdbc"], "created": "2018-12-07 06:21:10", "closed": "2018-12-19 03:09:17", "commits": {"baf8928956381490d34c740d170033ebc661eaa8": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "baf8928956381490d34c740d170033ebc661eaa8", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["5b6f87a5855f09414502e3541de376f94d29ea12", "3022dc1b6f4cdfbdd67a4788edb2e29796e51849"], "nameRev": "baf8928956381490d34c740d170033ebc661eaa8 tags/3.1.0~139", "commitMessage": "Merge pull request #1652 from tuohai666/dev\n\n#1581, avoid duplicate routing result", "commitDateTime": "2018-12-20 17:25:40", "authoredDateTime": "2018-12-20 17:25:40", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/routing/type/TableUnits.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/routing/type/broadcast/DatabaseBroadcastRoutingEngineTest.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/routing/type/complex/ComplexRoutingEngineTest.java", "insertions": 11, "deletions": 8, "lines": 19}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/routing/type/defaultdb/DefaultDatabaseRoutingEngineTest.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/routing/type/hint/DatabaseHintRoutingEngineTest.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/routing/type/standard/StandardRoutingEngineTest.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/routing/type/unicast/UnicastRoutingEngineTest.java", "insertions": 9, "deletions": 3, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableUnits.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.type.TableUnits", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DatabaseBroadcastRoutingEngineTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.type.broadcast.DatabaseBroadcastRoutingEngineTest.assertRoute()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "ComplexRoutingEngineTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.type.complex.ComplexRoutingEngineTest.assertRoutingForBindingTables()", "TOT": 12, "UPD": 3, "INS": 2, "MOV": 4, "DEL": 3}, {"spoonMethodName": "io.shardingsphere.core.routing.type.complex.ComplexRoutingEngineTest.assertRoutingForShardingTableJoinBroadcastTable()", "TOT": 12, "UPD": 3, "INS": 2, "MOV": 4, "DEL": 3}]}, {"spoonFilePath": "DefaultDatabaseRoutingEngineTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.type.defaultdb.DefaultDatabaseRoutingEngineTest.assertRoute()", "TOT": 18, "UPD": 5, "INS": 2, "MOV": 6, "DEL": 5}]}, {"spoonFilePath": "DatabaseHintRoutingEngineTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.type.hint.DatabaseHintRoutingEngineTest.assertRoute()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "StandardRoutingEngineTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.type.standard.StandardRoutingEngineTest.assertRoute()", "TOT": 12, "UPD": 3, "INS": 2, "MOV": 4, "DEL": 3}]}, {"spoonFilePath": "UnicastRoutingEngineTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.type.unicast.UnicastRoutingEngineTest.assertRoutingForShardingTable()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.routing.type.unicast.UnicastRoutingEngineTest.assertRoutingForBroadcastTable()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.routing.type.unicast.UnicastRoutingEngineTest.assertRoutingForNoTable()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "got  java.io.NotSerializableException when insert record to table which has `text` column", "body": "Actual SQL: ds_0 ::: insert into limit_request_0\r\n     ( cust_id,  channel_cd, product_cd, biz_request_no, biz_type, change_amt,  request_date,request_json , id) \r\n     values ( ?,?, ?, ?, ?, ?,  ?, ? , ?) ::: [[274202745208848384, QD, CP, FREEZE_20181208170641790778307, TRYFREEZE, 600.00, 2018-12-05 17:06:41.836, **java.io.StringReader@686364de**, 277122706310971392]]\r\n\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1567", "user": "fifadxj", "labels": ["bug", "sharding"], "created": "2018-12-05 09:17:48", "closed": "2019-05-15 12:24:41", "commits": {"3cbf76ba9b28c213d40d74dedcf5f6cae27aa808": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 161.00027777777777, "commitsDetails": [{"commitHash": "3cbf76ba9b28c213d40d74dedcf5f6cae27aa808", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a767df89f1d7834d338725e0e23ac5da3655bfa6", "594322f7736c89bcdb7603e2814e4beba63c4dee"], "nameRev": "3cbf76ba9b28c213d40d74dedcf5f6cae27aa808 tags/4.0.0-RC2~737", "commitMessage": "Merge pull request #2388 from tuohai666/dev\n\n#1567, insert record to table which has TEXT column", "commitDateTime": "2019-05-15 20:24:40", "authoredDateTime": "2019-05-15 20:24:40", "commitGitStats": [{"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/AbstractShardingPreparedStatementAdapter.java", "insertions": 18, "deletions": 3, "lines": 21}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/org/apache/shardingsphere/shardingjdbc/jdbc/adapter/PreparedStatementAdapterTest.java", "insertions": 6, "deletions": 7, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractShardingPreparedStatementAdapter.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractShardingPreparedStatementAdapter.setCharacterStream(int,java.io.Reader)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractShardingPreparedStatementAdapter.setCharacterStream(int,java.io.Reader,int)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.adapter.AbstractShardingPreparedStatementAdapter.setCharacterStream(int,java.io.Reader,long)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "PreparedStatementAdapterTest.java", "spoonMethods": [{"spoonMethodName": "org.apache.shardingsphere.shardingjdbc.jdbc.adapter.PreparedStatementAdapterTest.assertSetCharacterStream()", "TOT": 13, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 7}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Unknown exception: Illegal input, unterminated ''' (value string do not support escape character \\ )", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere did you use?\r\n3.0.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nvalue string supports escape character \\\r\n### Actual behavior\r\nvalue string do not support escape character \\\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n```\r\nmysql> select * from test where name='\\'';\r\nERROR 3054 (HY000): Unknown exception: Illegal input, unterminated '''.\r\n```\r\n```\r\nmysql> insert into test(name) values ('\\'');\r\nERROR 3054 (HY000): Unknown exception: Illegal input, unterminated '''.\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1536", "user": "joooohnli", "labels": ["bug"], "created": "2018-11-30 07:09:21", "closed": "2018-12-13 02:56:08", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "The result of `getBytes` is wrong.", "body": "## Bug Report\r\n\r\n### Which version of Sharding-Sphere did you use?\r\n\r\n3.0.0\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\n\r\nThe result of bytes should be:\r\n[88, -99, -9, 80, 65, -64, 65, -70, -83, -98, 49, 15, -115, -103, 13, 116]\r\n\r\n### Actual behavior\r\n\r\nThe result change every time:\r\n[91, 66, 64, 49, 50, 57, 52, 99, 50, 51, 52]\r\n[91, 66, 64, 55, 50, 101, 49, 56, 57, 100, 54]\r\n[91, 66, 64, 52, 54, 55, 54, 98, 48, 53, 56]\r\n[91, 66, 64, 51, 48, 52, 51, 98, 49, 99, 99]\r\n[91, 66, 64, 49, 97, 99, 102, 97, 99, 53, 56]\r\n\r\n### Reason analyze (If you can)\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n```sql\r\nCREATE TABLE `binary_test` (\r\n  `id` binary(16) NOT NULL\r\n) ENGINE=InnoDB;\r\n\r\ninsert into binary_test (id) value (0x589df75041c041baad9e310f8d990d74);\r\n```\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n\r\n```java\r\n        Connection connection = ds.getConnection();\r\n        PreparedStatement ps = connection.prepareStatement(\"SELECT * FROM binary_test\");\r\n        ps.execute();\r\n        ResultSet rs = ps.getResultSet();\r\n        rs.next();\r\n        byte[] result = rs.getBytes(\"id\");\r\n        System.out.println(Arrays.toString(result));\r\n```", "url": "https://github.com/apache/shardingsphere/issues/1533", "user": "dozer47528", "labels": ["bug"], "created": "2018-11-30 02:55:14", "closed": "2018-12-10 12:42:21", "commits": {"ad37a7c4017e2a113ae964488650f390bfab4e5b": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "ad37a7c4017e2a113ae964488650f390bfab4e5b", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["2da4913fc627d38da54ed3cc46d15a87179dab28", "938442f3eb38e00b93f67d091b0e9e7dd132e952"], "nameRev": "ad37a7c4017e2a113ae964488650f390bfab4e5b tags/3.1.0.M1~68", "commitMessage": "Merge pull request #1588 from tuohai666/dev\n\n#1533, The result of `getBytes` is wrong.", "commitDateTime": "2018-12-10 20:42:20", "authoredDateTime": "2018-12-10 20:42:20", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/constant/ColumnType.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/MySQLPacketPayload.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/execute/protocol/StringLenencBinaryProtocolValue.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/TextResultSetRowPacket.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/constant/ColumnTypeTest.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ColumnType.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingproxy.transport.mysql.constant.ColumnType", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLPacketPayload.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingproxy.transport.mysql.packet.MySQLPacketPayload.writeBytesLenenc(byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StringLenencBinaryProtocolValue.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingproxy.transport.mysql.packet.command.query.binary.execute.protocol.StringLenencBinaryProtocolValue.write(io.shardingsphere.shardingproxy.transport.mysql.packet.MySQLPacketPayload,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TextResultSetRowPacket.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingproxy.transport.mysql.packet.command.query.text.TextResultSetRowPacket.write(io.shardingsphere.shardingproxy.transport.mysql.packet.MySQLPacketPayload)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "ColumnTypeTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingproxy.transport.mysql.constant.ColumnTypeTest.assertValueOfJDBC()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SHOW [FULL] TABLES FROM `x` LIKE 'y'; failed to return the sharding table", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere did you use?\r\nsharding-proxy-3.0.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nreturn ```y```\r\n### Actual behavior\r\nreturn ```Empty set```\r\n### Reason analyze (If you can)\r\nIf parser finds queries like 'show tables from x like y', proxy should firstly match tables in sharding configs before sending these queries to real db.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\nexecute:\r\n```SHOW [FULL] TABLES FROM `x` LIKE 'y'; ```\r\nwhile y is a sharing table consisting of y0,y1,y2..\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1475", "user": "joooohnli", "labels": ["bug"], "created": "2018-11-14 09:33:36", "closed": "2018-11-21 14:03:09", "commits": {"a179148e63ded7b67917d39b9c405747bbda91df": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "a179148e63ded7b67917d39b9c405747bbda91df", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["9e0fc70a775002c7993c9d96ad4bdec0d7f07d6f", "ce8b9779f9849f1a5db0cf4eef5e492c86c586a4"], "nameRev": "a179148e63ded7b67917d39b9c405747bbda91df tags/3.1.0.M1~200", "commitMessage": "Merge pull request #1503 from beckhampu/dev\n\nfor #1475, SHOW [FUll] TABLES FROM db_name LIKE 'tb_name' failed to return the logic table", "commitDateTime": "2018-11-21 22:03:08", "authoredDateTime": "2018-11-21 22:03:08", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLShowParser.java", "insertions": 18, "deletions": 5, "lines": 23}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/routing/router/sharding/ParsingSQLRouter.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableMetaDataInitializer.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer.getAllTableNames(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLShowParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.dialect.mysql.sql.MySQLShowParser.parseShowTableStatus()", "TOT": 15, "UPD": 2, "INS": 1, "MOV": 11, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.dialect.mysql.sql.MySQLShowParser", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.dialect.mysql.sql.MySQLShowParser.parseLike(io.shardingsphere.core.parsing.parser.sql.dal.DALStatement)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.dialect.mysql.sql.MySQLShowParser.parseShowTables()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ParsingSQLRouter.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.route(io.shardingsphere.core.parsing.parser.sql.SQLStatement,io.shardingsphere.core.optimizer.condition.ShardingConditions)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "read-write splitting  many thread", "body": "Read and write separation, no proper routing when multithreading\r\n\r\nversion:3.0.0\r\n\r\nOur requirement is to force the main library to be routed at the beginning of the \"add\", \"create\", \"save\", \"insert\", \"update\", \"del\" methods. In the process of using high-concurrency, the route is not correct\u3002\r\n\r\nFound in the middleware, found that the judgment route is a static variable\uff0c `private static boolean isMasterRouteOnly` \u3002\r\n\r\nThis static variable is shared by all threads. The a thread is not executed. The b thread modifies this value. Then, when routing, it uses this variable to judge the route, resulting in no correct route.\r\n\r\nsharding code\r\n``` java\r\n@NoArgsConstructor(access = AccessLevel.PRIVATE)\r\npublic final class HintManagerHolder {\r\n    \r\n    public static final String DB_TABLE_NAME = \"DB_TABLE_NAME\";\r\n    \r\n    public static final String DB_COLUMN_NAME = \"DB_COLUMN_NAME\";\r\n    \r\n    private static final ThreadLocal<HintManager> HINT_MANAGER_HOLDER = new ThreadLocal<>();\r\n    \r\n    private static final Multimap<String, Comparable<?>> DATABASE_SHARDING_VALUES = HashMultimap.create();\r\n    \r\n    private static final Multimap<String, Comparable<?>> TABLE_SHARDING_VALUES = HashMultimap.create();\r\n    \r\n    @Setter\r\n    private static boolean databaseShardingOnly;\r\n    \r\n    @Setter\r\n    private static boolean isMasterRouteOnly;\r\n```\r\n\r\nour code\r\n``` java\r\nprivate static final ThreadLocal<Boolean> CUS_HINT_MANAGER_HOLDER = new ThreadLocal<>();\r\n\r\n    @Order(Ordered.HIGHEST_PRECEDENCE)\r\n    @Around(\"execution(public * com.xhg..dao..*.*(..)) || execution(public * com.xhg..service.impl..*.*(..))\")\r\n    public Object hintMasterCalls(ProceedingJoinPoint jp) throws Throwable {\r\n        String methodName = jp.getSignature().getName();\r\n\r\n        if (HintManagerHolder.isMasterRouteOnly() || HintManagerHolder.get() != null) {\r\n            if (CUS_HINT_MANAGER_HOLDER.get() == null || !CUS_HINT_MANAGER_HOLDER.get()) {\r\n                CUS_HINT_MANAGER_HOLDER.set(true);\r\n            }\r\n            return jp.proceed();\r\n        }\r\n\r\n        if (CUS_HINT_MANAGER_HOLDER.get() == null || !CUS_HINT_MANAGER_HOLDER.get()) {\r\n            String[] methodPreArr = {\"add\", \"create\", \"save\", \"insert\", \"update\", \"del\"};\r\n            for (String methodPre : methodPreArr) {\r\n                if (methodName.startsWith(methodPre)) {\r\n                    CUS_HINT_MANAGER_HOLDER.set(true);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (CUS_HINT_MANAGER_HOLDER.get() != null && CUS_HINT_MANAGER_HOLDER.get()) {\r\n            HintManager hintManager = HintManager.getInstance();\r\n            hintManager.setMasterRouteOnly();\r\n\r\n        }\r\n        return jp.proceed();\r\n    }\r\n```\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1467", "user": "llg-software", "labels": ["bug"], "created": "2018-11-12 10:47:56", "closed": "2018-11-19 04:11:11", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": " I get an exception when using defaultDataSourceName and defaultDatabaseStrategy at the same time", "body": "config:\r\n```\r\ndefaultDataSourceName: ds_0\r\ndefaultDatabaseStrategy:\r\n  inline:\r\n    shardingColumn: id\r\n    algorithmExpression: ds_${id % 8}\r\n```\r\n\r\nreproduce step:\r\nTable test can not config sharding rule\r\nI use sql to query table test(select * from test where id = 10)\r\nI expected route to ds_0, but actual route to ds_2 and throw an exception(no table route info)\r\n\r\nanalyze:\r\nIn parsing phase, WhereClauseParser join id = 10 to sharding conditions\r\nIn routing phase, StandardRoutingEngine use sharding conditions route to ds_2 and throw an exception(no table route info)\r\n\r\nimprove:\r\nIn parsing phase, Only join sharding rule table's condition to sharding conditions\r\nCreate a new DefaultDatabaseRoutingEngin to route table that can not config sharding rule\r\n", "url": "https://github.com/apache/shardingsphere/issues/1422", "user": "maxiaoguang64", "labels": ["bug"], "created": "2018-11-04 12:11:28", "closed": "2018-11-05 14:41:12", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "mysql workbench cannot connect in 3.0.0", "body": "I config username and password and can connect in mysql wordbench in **3.0.0.M2**.\r\n\r\nBut i cannot connect in **3.0.0**, return is\r\n_\"Failed to Connect to MySQL at 127.0.0.1:3307 with user root\r\nUnknown database '`sharding_db`'\"_\r\n", "url": "https://github.com/apache/shardingsphere/issues/1415", "user": "pfroad", "labels": ["bug"], "created": "2018-11-02 10:53:12", "closed": "2018-11-14 09:16:17", "commits": {"3535d7a4353d1772585aabd0c0243101e7334e71": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "3535d7a4353d1772585aabd0c0243101e7334e71", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["878ed163b080365ad7ff04f90a3ebdb6be92d0e0", "6dd758a8ae218e49a6baffe2e2f4f198b113d6cc"], "nameRev": "3535d7a4353d1772585aabd0c0243101e7334e71 tags/3.1.0.M1~230", "commitMessage": "Merge pull request #1471 from tuohai666/dev\n\n#1415, get exactly value of schema", "commitDateTime": "2018-11-14 17:16:16", "authoredDateTime": "2018-11-14 17:16:16", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaIgnoreBackendHandler.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SchemaIgnoreBackendHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingproxy.backend.SchemaIgnoreBackendHandler.handleUseStatement(io.shardingsphere.core.parsing.parser.dialect.mysql.statement.UseStatement,io.shardingsphere.shardingproxy.frontend.common.FrontendHandler)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sharding-Proxy execute `SHOW CREATE TABLE` occur ERROR", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere did you use?\r\n3.0.0\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\nSharding-Proxy execute \"SHOW CREATE TABLE ...,\" return correct result\r\n### Actual behavior\r\nreturn \u201ctable doesn't exist\u201d\r\n### Reason analyze (If you can)\r\nThe SQL of \"SHOW CREATE TABLE \" judge result is \"ShowOtherStatement\", so  it execute with error schema by schema unicast  handler.\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1414", "user": "beckhampu", "labels": ["bug"], "created": "2018-11-02 10:40:31", "closed": "2018-11-06 09:42:49", "commits": {"c9e712dd87b8908c8a3f54b2dd7834c1e6a020a5": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "c9e712dd87b8908c8a3f54b2dd7834c1e6a020a5", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["efa7f6254d603264ab8bd9dc81d5725245f773db", "be38526ccef90d291d44303b7a30e555c2f685e2"], "nameRev": "c9e712dd87b8908c8a3f54b2dd7834c1e6a020a5 tags/3.1.0.M1~284^2", "commitMessage": "Merge pull request #1435 from beckhampu/dev\n\nfor #1414, fix bug for proxy execute SQL like `SHOW CREATE TABLE tb_name` ", "commitDateTime": "2018-11-06 17:42:48", "authoredDateTime": "2018-11-06 17:42:48", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/SQLJudgeEngine.java", "insertions": 24, "deletions": 14, "lines": 38}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/SQLJudgeEngineTest.java", "insertions": 21, "deletions": 1, "lines": 22}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/BackendHandlerFactory.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLJudgeEngine.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.SQLJudgeEngine.parseShowCreateTable(io.shardingsphere.core.parsing.lexer.LexerEngine)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.SQLJudgeEngine.getShowStatement(io.shardingsphere.core.parsing.lexer.LexerEngine)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.SQLJudgeEngine.parseSingleTableWithSchema(io.shardingsphere.core.parsing.lexer.LexerEngine,io.shardingsphere.core.parsing.parser.sql.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.SQLJudgeEngine.parseShowTableStatus(io.shardingsphere.core.parsing.lexer.LexerEngine)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SQLJudgeEngineTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.SQLJudgeEngineTest.assertJudgeForShowColumns()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.SQLJudgeEngineTest.assertJudgeForShowTableStatus()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.SQLJudgeEngineTest.assertJudgeForShowIndex()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.SQLJudgeEngineTest.assertJudgeForShowCreateTable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BackendHandlerFactory.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingproxy.backend.BackendHandlerFactory.getSchema(io.shardingsphere.core.parsing.parser.sql.SQLStatement)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Sharding-Proxy master-slave mode  Exception\uff08Springboot+mybatis\uff09", "body": "## Bug Report\r\n### I\u2018m  using Sharding-Sphere which version is 3.0.0. My project is using Sharding-Proxy.  \r\n### The git link of example codes is \"https://github.com/amanxu/elegant-essay.git\" \r\n###   Example codes architecture\uff1aspringboot + mybatis + mysql\r\n### PS: The example codes is normal when use sharding-jdbc or no use Sharding-Sphere, But it throw exception when I use Sharding-Proxy. My Sharding-Proxy service is normal and can be connected by navicat.\r\n SQL: select u.id,u.user_name,u.real_name,u.phone,u.email,u.user_type,u.deleted from elegant_user u WHERE   u.user_name =  #{userName,jdbcType=VARCHAR}\r\n### The Exception  is described below:\r\n#Error querying database. Cause: java.sql.SQLException: Statement parameter 1 not set.\r\n#The error may exist in file [D:\\githubwork\\elegant-essay\\target\\classes\\mapper\\UserSelfMapper.xml]\r\n#The error may involve com.elegant.essay.mapper.UserSelfMapper.findUserByAccount-Inline\r\n#The error occurred while setting parameters\r\n#SQL: select u.id, u.user_name, u.password, u.real_name, u.phone, u.email, u.user_type, u.deleted from elegant_user u WHERE u.user_name = ?\r\n#Cause: java.sql.SQLException: Statement parameter 1 not set.\r\n; SQL []; Statement parameter 1 not set.; nested exception is java.sql.SQLException: Statement parameter 1 not set.] with root cause\r\njava.sql.SQLException: Statement parameter 1 not set.\r\nat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:964)\r\nat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)\r\nat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)\r\nat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)\r\nat com.mysql.jdbc.ServerPreparedStatement.serverExecute(ServerPreparedStatement.java:1283)\r\nat com.mysql.jdbc.ServerPreparedStatement.executeInternal(ServerPreparedStatement.java:783)\r\nat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)\r\nat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)\r\nat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)\r\nat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)\r\nat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)\r\nat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)\r\nat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)\r\nat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\r\nat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\r\nat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)\r\nat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\r\nat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\r\nat com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:142)\r\nat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)\r\nat com.sun.proxy.$Proxy116.query(Unknown Source)\r\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\r\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)\r\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)\r\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\nat java.lang.reflect.Method.invoke(Method.java:498)\r\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)\r\nat com.sun.proxy.$Proxy74.selectOne(Unknown Source)\r\nat org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)\r\nat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)\r\nat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\r\nat com.sun.proxy.$Proxy78.findUserByAccount(Unknown Source)\r\nat com.elegant.essay.service.impl.UserServiceImpl.findUserByAccount(UserServiceImpl.java:136)\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1403", "user": "amanxu", "labels": ["bug"], "created": "2018-10-31 05:14:31", "closed": "2018-11-01 10:43:33", "commits": {"5caaac6668d0fc4a6e5f44b63c47c41c62eb968a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "5caaac6668d0fc4a6e5f44b63c47c41c62eb968a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["4564dfb3481568a6a7a698cd85e3e65489d0b78a", "6e1482461467caa522e6ffd5b238c9ec52757859"], "nameRev": "5caaac6668d0fc4a6e5f44b63c47c41c62eb968a tags/3.1.0.M1~342", "commitMessage": "Merge pull request #1406 from beckhampu/dev\n\nfor #1403, fix bug for prepared statement set parameters by master-slave mode ", "commitDateTime": "2018-11-01 18:43:32", "authoredDateTime": "2018-11-01 18:43:32", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PreparedStatementExecutorWrapper.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.shardingproxy.backend.jdbc.wrapper.PreparedStatementExecutorWrapper.doMasterSlaveRoute(java.lang.String)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Mysql aurora version not supported", "body": "## Bug Report\r\njdbcUrl = jdbc:mysql:aurora://host:3306/..\r\nThen throws exception: \"The URL of JDBC is not supported. Please refer to this pattern: jdbc:mysql://([\\w\\-\\.]+):?([0-9]*)/([\\w\\-]+);?\\S* \"\r\n\r\nSee: https://github.com/sharding-sphere/sharding-sphere/blob/dev/sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java#L44\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1373", "user": "caixinning", "labels": ["bug"], "created": "2018-10-24 09:14:41", "closed": "2018-10-25 03:42:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Parsing error from sql \"SHOW FULL TABLES FROM `sharding_db` WHERE Table_type != 'VIEW'\"", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere did you use?\r\n3.0.0.M5-SNAPSHOT\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n### Expected behavior\r\n\"SHOW FULL TABLES FROM `sharding_db` WHERE Table_type != 'VIEW'\" execute success\r\n### Actual behavior\r\nexecute  failure\uff1a\r\nYou have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Table_type != 'VIEW'' at line 1\r\n### Reason analyze (If you can)\r\nparsing error:\r\nLogic SQL: SHOW FULL TABLES FROM `sharding_db` WHERE Table_type != 'VIEW'\r\nActual SQL: ds_0 ::: SHOW FULL TABLES  Table_type != 'VIEW'\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.\r\n\r\n### Example codes for reproduce this issue (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1351", "user": "beckhampu", "labels": ["bug"], "created": "2018-10-17 11:27:32", "closed": "2018-10-18 09:37:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Registry can not watch changes from sharding proxy clients.", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere did you use?\r\n\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-Proxy\r\n\r\n### Reason analyze (If you can)\r\n\r\nThe registry can not watch changes from clients, if sharding proxy loads configurations from local. So it is necessary to modify some APIs of orchestration.\r\n", "url": "https://github.com/apache/shardingsphere/issues/1349", "user": "tristaZero", "labels": ["bug"], "created": "2018-10-17 07:49:26", "closed": "2018-10-23 08:42:31", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "ParsingSQLRouter has a problem when select like this select * from table where xxx in () limit 0,20", "body": "version:\r\nshardingsphere 3.0.0.M2\r\nselect * from table where xxx in () limit 0,20\r\nxxx is shardingColumn,\r\nwhen one select is isSingleRouting select,the next select which is not SingleRouting select will have a NullPointerException.bacause you set the selectStatement's feild limit to null in ParsingSQLRouter.", "url": "https://github.com/apache/shardingsphere/issues/1348", "user": "scuwuyu", "labels": ["bug"], "created": "2018-10-17 05:57:55", "closed": "2018-11-20 15:25:47", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "Proxy gets NULL Pointer exception when disable datasource from registry.", "body": "## Bug Report\r\n\r\n**For English only**, other languages will not accept.\r\n\r\nBefore report a bug, make sure you have:\r\n\r\n- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).\r\n- Read documentation: [Sharding-Sphere Doc](http://shardingsphere.io/document/current/en/overview/).\r\n\r\nPlease pay attention on issues you submitted, because we maybe need more details. \r\nIf no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere did you use?\r\n3.0.0.M5\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### The problem is:\r\nIf  we have no disabled datasource in registry, the proxy will renew the datasource map, but will get null exception.", "url": "https://github.com/apache/shardingsphere/issues/1340", "user": "tristaZero", "labels": ["bug"], "created": "2018-10-14 10:30:16", "closed": "2018-10-15 15:09:38", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Use PreciseShardingAlgorithm and spring-data-jpa update error", "body": "## Modifying an existing data but added a new one\r\nspring-boot 1.5.6.RELEASE\r\nsharding-3.0.0.M4\r\nsqlServer 2012\r\nsqljdbc4 4.0\r\n\r\nI customized the algorithm implementation from PreciseShardingAlgorithm.\r\nthen, when I am ready to modify an existing data, I found that it added a new piece of data.\r\neverything is fine before I customized the algorithm.\r\n\r\n## About a bug that was previously closed\r\nNow I use mysql test, because [#1307](https://github.com/sharding-sphere/sharding-sphere/issues/1307) does not solve the sqlServer connection problem\r\nbecause the url that method SQLServerDataSourceMetaData gets like this\r\njdbc:sqlserver://dev.database.chinacloudapi.cn:1433;authenticationScheme=nativeAuthentication;xopenStates=false;sendTimeAsDatetime=true;trustServerCertificate=false;sendStringParametersAsUnicode=false;selectMethod=direct;responseBuffering=adaptive;packetSize=8000;multiSubnetFailover=false;loginTimeout=30;lockTimeout=-1;lastUpdateCount=true;encrypt=false;disableStatementPooling=true;databaseName=sharding;applicationName=Microsoft JDBC Driver for SQL Server;applicationIntent=readwrite;\r\nit doesn't match\r\n\r\nThis is my github address [question](https://github.com/mzmzo/sharding-example)\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1315", "user": "mzmzo", "labels": ["bug"], "created": "2018-09-29 09:12:08", "closed": "2018-10-25 10:30:50", "commits": {}, "ttf": 26.00027777777778, "commitsDetails": []}, {"title": "Can not load sharding rule from registry.", "body": "## Bug Report\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere did you use?\r\n3.0.0.M3\r\n### Which project did you use? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nWhen use orchestration to load sharding configuration from registry, there will be an exception:  Error creating bean with name 'dataSource'.", "url": "https://github.com/apache/shardingsphere/issues/1310", "user": "tristaZero", "labels": ["bug"], "created": "2018-09-28 02:50:16", "closed": "2018-09-28 09:45:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Sql-Server exception : The URL of JDBC is not supported. ", "body": "spring-boot 1.5.6.RELEASE\r\nsharding-3.0.0.M3\r\nsqlServer 2012\r\nsqljdbc4 4.0\r\n\r\nwhen I use sharding-3.0.0.M1\uff0ceverything works fine\r\nmy configuration is like this sharding.jdbc.datasource.ds_0.url=jdbc:sqlserver://dev.database.chinacloudapi.cn;database=sharding;loginTimeout=30;sendStringParametersAsUnicode=false\r\n\r\nbut when I upgrade to M3, the connection fails.\r\nreport this error : The URL of JDBC is not supported. ", "url": "https://github.com/apache/shardingsphere/issues/1307", "user": "mzmzo", "labels": ["bug"], "created": "2018-09-27 09:54:48", "closed": "2018-09-27 12:33:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "RoundRobinMasterSlaveLoadBalanceAlgorithm throw an ArrayIndexOutOfBoundsException", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\nBefore submit a new issue, please check existed issue first, to make sure your issue is not a duplicated one.\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M3\r\n\r\n### Which project do you using? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\nRoundRobinMasterSlaveLoadBalance always be OK\r\n\r\n### Actual behavior\r\nafter roundrobin Integer.MAX_VALUE times,  will  throw an ArrayIndexOutOfBoundsException.\r\n\r\n### Reason analyze\r\nthe AtomicInteger's getAndIncrement() may produce an negative numbers.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc\r\n\r\n### For bug report, please *MUST* provide the reproduce example codes (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1265", "user": "feelwing1314", "labels": ["bug"], "created": "2018-09-17 02:48:13", "closed": "2018-09-19 09:00:18", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "regular expression of MySQLDataSourceMetaData   not match hyphen \uff08-\uff09", "body": "io.shardingsphere.core.metadata.datasource.dialect.MySQLDataSourceMetaData  \r\nline: 51\r\n\r\n### Which version of Sharding-Sphere do you using?\r\nversion: m3\r\n### Which project do you using? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nurl:jdbc:mysql://xxxxxxx:3307/a-b?useUnicode=true\r\nExpected  match \uff1aa-b\r\n### Actual behavior\r\nonly match : a\r\n\r\nm2 is ok", "url": "https://github.com/apache/shardingsphere/issues/1241", "user": "tr276913271", "labels": ["bug"], "created": "2018-09-06 08:47:58", "closed": "2018-09-06 09:45:36", "commits": {"f0c72338527f503dceab383beda6a01d8ebd2b56": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f0c72338527f503dceab383beda6a01d8ebd2b56", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["4c201022d7da645099a506dfcceeb8394d5ed0f2"], "nameRev": "f0c72338527f503dceab383beda6a01d8ebd2b56 tags/3.0.0.M4~196", "commitMessage": "fixed #1241\n", "commitDateTime": "2018-09-06 17:45:24", "authoredDateTime": "2018-09-06 17:45:24", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaDataTest.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaDataTest.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaDataTest.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaDataTest.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaDataTest.java", "insertions": 10, "deletions": 2, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "H2DataSourceMetaData.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.H2DataSourceMetaData", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLDataSourceMetaData.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.MySQLDataSourceMetaData", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OracleDataSourceMetaData.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.OracleDataSourceMetaData", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLDataSourceMetaData.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.PostgreSQLDataSourceMetaData", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLServerDataSourceMetaData.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.SQLServerDataSourceMetaData", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "H2DataSourceMetaDataTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.H2DataSourceMetaDataTest.assertGetPropertiesWithMinus()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLDataSourceMetaDataTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.MySQLDataSourceMetaDataTest.assertGetALLProperties()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.MySQLDataSourceMetaDataTest.assertGetPropertiesWithMinus()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OracleDataSourceMetaDataTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.OracleDataSourceMetaDataTest.assertGetALLProperties()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.OracleDataSourceMetaDataTest.assertGetPropertiesWithMinus()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLDataSourceMetaDataTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.PostgreSQLDataSourceMetaDataTest.assertGetALLProperties()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.PostgreSQLDataSourceMetaDataTest.assertGetPropertiesWithMinus()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLServerDataSourceMetaDataTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.SQLServerDataSourceMetaDataTest.assertGetALLProperties()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.datasource.dialect.SQLServerDataSourceMetaDataTest.assertGetPropertiesWithMinus()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f0c72338527f503dceab383beda6a01d8ebd2b56"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 5, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect"], "changesInPackagesSPOON": ["io.shardingsphere.core.metadata.datasource.dialect.OracleDataSourceMetaData", "io.shardingsphere.core.metadata.datasource.dialect.H2DataSourceMetaData", "io.shardingsphere.core.metadata.datasource.dialect.MySQLDataSourceMetaData", "io.shardingsphere.core.metadata.datasource.dialect.PostgreSQLDataSourceMetaData", "io.shardingsphere.core.metadata.datasource.dialect.SQLServerDataSourceMetaData"]}, {"title": "Skip system tables when loading sharding metadata by default data source", "body": "### Which version of Sharding-Sphere do you using?\r\n\r\n3.0.0.M2\r\n\r\n### Which project do you using? Sharding-JDBC or Sharding-Proxy?\r\n\r\nBoth\r\n\r\n### Expected behavior\r\n\r\nCan start up when using oracle\r\n\r\n### Actual behavior\r\n\r\nGot exception:\r\n\r\n```\r\nCaused by: groovy.lang.MissingPropertyException: No such property: INTERNET_USERS for class: Script776\r\n```\r\n\r\n### Reason analyze\r\n\r\nOracle has lots of system tables, and some tables contains \"$\" as table name. When Sharding-Sphere to evaluate inline expression, cannot parse table name with \"$\". ", "url": "https://github.com/apache/shardingsphere/issues/1227", "user": "terrymanu", "labels": ["bug"], "created": "2018-09-04 07:53:35", "closed": "2018-09-04 07:54:47", "commits": {"d7a904317259cd637f494fc90362cbfeb2c1c3c3": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d7a904317259cd637f494fc90362cbfeb2c1c3c3", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["87508debaed1413f6f7ad72018a8daa3dd9cdb64"], "nameRev": "d7a904317259cd637f494fc90362cbfeb2c1c3c3 tags/3.0.0.M3~9", "commitMessage": "fix #1227\n", "commitDateTime": "2018-09-04 15:54:37", "authoredDateTime": "2018-09-04 15:54:21", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rule/ShardingRule.java", "insertions": 1, "deletions": 9, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rule/TableRule.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableMetaDataInitializer.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer.getAllTableNames(java.lang.String)", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "ShardingRule.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.rule.ShardingRule.getTableRuleByLogicTableName(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.rule.ShardingRule.createTableRuleWithDefaultDataSource(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "TableRule.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.rule.TableRule", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d7a904317259cd637f494fc90362cbfeb2c1c3c3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 13, "lines": 33, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 13, "UPD": 1, "INS": 5, "MOV": 3, "DEL": 4, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/src/main/java/io/shardingsphere/core/rule", "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor"], "changesInPackagesSPOON": ["io.shardingsphere.core.rule.ShardingRule.getTableRuleByLogicTableName(java.lang.String)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer.getAllTableNames(java.lang.String)", "io.shardingsphere.core.rule.ShardingRule.createTableRuleWithDefaultDataSource(java.lang.String)", "io.shardingsphere.core.rule.TableRule"]}, {"title": "Lost the BinaryResultSetRowPacket when there's null value", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M3\r\n\r\n### Which project do you using? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\nReturn the BinaryResultSetRowPacket when there's null value.\r\n\r\n### Actual behavior\r\nLost the BinaryResultSetRowPacket when there's null value.\r\n\r\n### Reason analyze\r\nSharding-Proxy burst Exception when write binary protocol null value, althouth have already filled the nullBitmap correctly.\r\n\r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc\r\nUse preparedStatement select a row which contains null value column.\r\n\r\n### For bug report, please *MUST* provide the reproduce example codes (such as a github link).\r\nOfficial example.", "url": "https://github.com/apache/shardingsphere/issues/1199", "user": "tuohai666", "labels": ["bug"], "created": "2018-08-29 06:26:53", "closed": "2018-08-29 08:14:23", "commits": {"685933dad831901f6e4864db6fe8d85b802d4c04": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "685933dad831901f6e4864db6fe8d85b802d4c04", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["1f7dafcde56e409457f5c38fb1f21ca067a778aa", "80b476acb749c64a9f0279f3fcf5f308277eee27"], "nameRev": "685933dad831901f6e4864db6fe8d85b802d4c04 tags/3.0.0.M3~63", "commitMessage": "Merge pull request #1200 from tuohai666/dev\n\n#1199, Lost the BinaryResultSetRowPacket when there's null value", "commitDateTime": "2018-08-29 16:14:22", "authoredDateTime": "2018-08-29 16:14:22", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/binary/execute/BinaryProtocolValue.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/binary/execute/BinaryResultSetRowPacketTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BinaryProtocolValue.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.command.query.binary.execute.BinaryProtocolValue.writeInt8(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.command.query.binary.execute.BinaryProtocolValue.write(java.lang.Object)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BinaryResultSetRowPacketTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.command.query.binary.execute.BinaryResultSetRowPacketTest.assertWrite()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Proxy blocked when client connect and close repeatly", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M3\r\n\r\n### Which project do you using? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\nHigh Availability.\r\n\r\n### Actual behavior\r\nProxy blocked when client connect and close repeatly.\r\n\r\n### Reason analyze\r\nOnly when a client close the connection meanwhile a query is not finish in this connection will triger this bug.\r\nWhen a frontend connection is closed the connection will become not writable, this cause MySQLFrontendHandler wait and never jump out the loop.\r\n \r\n### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc\r\nExecute a slow SQL then close the connection until the connections is used up.\r\n\r\n### For bug report, please *MUST* provide the reproduce example codes (such as a github link).\r\nOfficial example.\r\n", "url": "https://github.com/apache/shardingsphere/issues/1191", "user": "tuohai666", "labels": ["bug"], "created": "2018-08-27 08:12:43", "closed": "2018-08-28 06:19:09", "commits": {"bddd0064727e6adb20033cb2d0e3f48a280f7bc3": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "819d7ed3ea8c3e8ed587fd697048ae9fd236e16f": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "bddd0064727e6adb20033cb2d0e3f48a280f7bc3", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["9934607d8661b6f5ba43c4e4cad1771f76f6d852", "97948b5d29b3e3dbc158244899b49a7025edb940"], "nameRev": "bddd0064727e6adb20033cb2d0e3f48a280f7bc3 tags/3.0.0.M3~83", "commitMessage": "Merge pull request #1192 from tuohai666/dev\n\n#1191, Proxy blocked when client connect and close repeatly", "commitDateTime": "2018-08-28 14:19:08", "authoredDateTime": "2018-08-28 14:19:08", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/connection/BackendConnection.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/common/FrontendHandler.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/mysql/MySQLFrontendHandler.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BackendConnection.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.backend.jdbc.connection.BackendConnection.cancel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FrontendHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.frontend.common.FrontendHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.proxy.frontend.common.FrontendHandler.channelInactive(io.netty.channel.ChannelHandlerContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLFrontendHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.frontend.mysql.MySQLFrontendHandler.CommandExecutor.writeMoreResults(io.shardingsphere.proxy.transport.mysql.packet.command.query.QueryCommandPacket,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.proxy.frontend.mysql.MySQLFrontendHandler.CommandExecutor.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "819d7ed3ea8c3e8ed587fd697048ae9fd236e16f", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["11a19fd83df58644044781033df15c1363c12e08", "aa6833d268eb76055dbc368d05033264fd09a5a7"], "nameRev": "819d7ed3ea8c3e8ed587fd697048ae9fd236e16f tags/3.0.0.M3~80", "commitMessage": "Merge pull request #1196 from tuohai666/dev\n\n #1191, workerGroup use default thread pool size (core * 2)", "commitDateTime": "2018-08-28 23:49:37", "authoredDateTime": "2018-08-28 23:49:37", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/ShardingProxy.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/common/FrontendHandler.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingProxy.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.frontend.ShardingProxy.groupsEpoll(io.netty.bootstrap.ServerBootstrap)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.proxy.frontend.ShardingProxy.groupsNio(io.netty.bootstrap.ServerBootstrap)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FrontendHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.frontend.common.FrontendHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Modify the usage for CircuitBreakerDataSource in registry.", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M2\r\n### Which project do you using? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nWhen new instances of Sharding-JDBC or Sharding-Proxy are online, the datasources in state node of registry should not be updated. \r\nThe list of CircuitBreakerDataSources should be cached in registry, and not be created and put into datasource map.\r\n### Actual behavior\r\nWhen new instances of Sharding-JDBC or Sharding-Proxy are online, the datasources in state node of registry will be updated to make datasources are created.\r\n### Solution\r\nTo modify the usage for CircuitBreakerDataSource in registry.\r\n", "url": "https://github.com/apache/shardingsphere/issues/1151", "user": "tristaZero", "labels": ["bug"], "created": "2018-08-15 08:14:45", "closed": "2018-08-24 00:58:51", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "Close old dataSources for registry when refresh.", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M2\r\n### Which project do you using? Sharding-JDBC or Sharding-Proxy?\r\nSharding-JDBC\r\n### Expected behavior\r\nWhen the configuration in registry is updated, it is necessary to close the old datasources and create new datasource.\r\n### Actual behavior\r\nThe old datasources are not closed.\r\n\r\n### Solution\r\nWhen the configuration in registry is updated, close the old datasources and its connections.\r\n", "url": "https://github.com/apache/shardingsphere/issues/1150", "user": "tristaZero", "labels": ["bug"], "created": "2018-08-15 08:06:44", "closed": "2018-08-20 12:45:59", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "No result from SQL \"SELECT COUNT(*) FROM t_order\" in prepared statement", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M3-SNAPSHOT\r\n\r\n### Which project do you using? Sharding-JDBC or Sharding-Proxy?\r\nSharding-Proxy\r\n\r\n### Expected behavior\r\nReturn the row count of table `t_order`.\r\n\r\n### Actual behavior\r\nNo return result.\r\n\r\n### Reason analyze\r\nLost \"Packet Number: 4\".\r\n\r\nPackets in wireshark:\r\n\r\nFrame 2568: 94 bytes on wire (752 bits), 49 bytes captured (392 bits) on interface 0\r\nNull/Loopback\r\nInternet Protocol Version 4, Src: 127.0.0.1, Dst: 127.0.0.1\r\nTransmission Control Protocol, Src Port: 3307, Dst Port: 54133, Seq: 1053, Ack: 1220, Len: 5\r\nMySQL Protocol\r\n    Packet Length: 1\r\n    Packet Number: 1\r\n    Number of fields: 1\r\n\r\nFrame 2570: 168 bytes on wire (1344 bits), 86 bytes captured (688 bits) on interface 0\r\nNull/Loopback\r\nInternet Protocol Version 4, Src: 127.0.0.1, Dst: 127.0.0.1\r\nTransmission Control Protocol, Src Port: 3307, Dst Port: 54133, Seq: 1058, Ack: 1220, Len: 42\r\nMySQL Protocol\r\n    Packet Length: 38\r\n    Packet Number: 2\r\n    Catalog: def\r\n    Database: \r\n    Table: \r\n    Original table: \r\n    Name: COUNT(*)\r\n    Original name: COUNT(*)\r\n    Charset number: utf8 COLLATE utf8_general_ci (33)\r\n    Length: 21\r\n    Type: FIELD_TYPE_LONGLONG (8)\r\n    Flags: 0x0000\r\n    Decimals: 0\r\n\r\nFrame 2572: 102 bytes on wire (816 bits), 53 bytes captured (424 bits) on interface 0\r\nNull/Loopback\r\nInternet Protocol Version 4, Src: 127.0.0.1, Dst: 127.0.0.1\r\nTransmission Control Protocol, Src Port: 3307, Dst Port: 54133, Seq: 1100, Ack: 1220, Len: 9\r\nMySQL Protocol\r\n    Packet Length: 5\r\n    Packet Number: 3\r\n    EOF marker: 254\r\n    Warnings: 0\r\n    Server Status: 0x0002\r\n\r\nFrame 2574: 102 bytes on wire (816 bits), 53 bytes captured (424 bits) on interface 0\r\nNull/Loopback\r\nInternet Protocol Version 4, Src: 127.0.0.1, Dst: 127.0.0.1\r\nTransmission Control Protocol, Src Port: 3307, Dst Port: 54133, Seq: 1109, Ack: 1220, Len: 9\r\nMySQL Protocol\r\n    Packet Length: 5\r\n    Packet Number: 5\r\n    EOF marker: 254\r\n    Warnings: 0\r\n    Server Status: 0x0002\r\n\r\n\r\n### Steps to reproduce the behavior\r\nExecute SQL \"SELECT COUNT(*) FROM t_order\"  in prepared statement.\r\n\r\n### For bug report, please *MUST* provide the reproduce example codes (such as a github link).\r\nSince it's straightforward to reproduce, you can add this SQL in the raw example.", "url": "https://github.com/apache/shardingsphere/issues/1143", "user": "tuohai666", "labels": ["bug"], "created": "2018-08-14 10:41:05", "closed": "2018-08-15 09:24:16", "commits": {"2e83cc7ae878370f2bf0c10e2fdc548a39055a1b": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "8a32428a79928c140fc233572e969d78cc4936fa": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2e83cc7ae878370f2bf0c10e2fdc548a39055a1b", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a295f5e7a93f28e01154909f43bf79f643cf7abe", "17fc6da9a1c46af96e8e5b1270a8541b14cfbd0f"], "nameRev": "2e83cc7ae878370f2bf0c10e2fdc548a39055a1b tags/3.0.0.M3~223", "commitMessage": "Merge pull request #1148 from tuohai666/count_star\n\n#1143, No result from SQL \"SELECT COUNT(*) FROM t_order\" in prepared \u2026", "commitDateTime": "2018-08-15 17:24:16", "authoredDateTime": "2018-08-15 17:24:16", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/binary/execute/BinaryProtocolValue.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BinaryProtocolValue.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.command.query.binary.execute.BinaryProtocolValue.write(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8a32428a79928c140fc233572e969d78cc4936fa", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["3c35015feb7a6965e404a6a0f91203fb690473be", "1c42231b63c01fe32d8d0ccb3102918e411481c3"], "nameRev": "8a32428a79928c140fc233572e969d78cc4936fa tags/3.0.0.M3~202", "commitMessage": "Merge pull request #1161 from tuohai666/dev\n\n#1143, add BigDecimal and Long cast for MYSQL_TYPE_LONGLONG", "commitDateTime": "2018-08-17 21:29:47", "authoredDateTime": "2018-08-17 21:29:47", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/binary/execute/BinaryProtocolValue.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BinaryProtocolValue.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.command.query.binary.execute.BinaryProtocolValue.write(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "The getPrimaryKeys method of the TableMetaDataLoader class is incorrect.", "body": "### Which version of Sharding-Sphere do you using?\r\n\r\n3.0.0.M2\r\n\r\n### Which project do you using? Sharding-JDBC or Sharding-Proxy?\r\n\r\nSharding-JDBC\r\n\r\n### Expected behavior\r\n\r\nThe program should only look for the \"test_0\" table in the \"test\" database.\r\n\r\n### Actual behavior\r\n\r\nThe table \"test_0\" is present in the \"test\" database, but the program finds this table in the \"test\" database, but also goes to other databases (such as: \"information_schema\" database).\r\n\r\n### Reason analyze\r\n\r\n```\r\njava.sql.SQLSyntaxErrorException: Unknown table 'test_0' in information_schema\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)\r\n\tat com.mysql.cj.jdbc.StatementImpl.executeQuery(StatementImpl.java:1218)\r\n\tat com.mysql.cj.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:2965)\r\n\tat com.mysql.cj.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:2953)\r\n\tat com.mysql.cj.jdbc.IterateBlock.doForAll(IterateBlock.java:56)\r\n\tat com.mysql.cj.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3006)\r\n\tat io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getPrimaryKeys(TableMetaDataLoader.java:106)\r\n\tat io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getColumnMetaDataList(TableMetaDataLoader.java:93)\r\n\tat io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(TableMetaDataLoader.java:82)\r\n\tat io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(TableMetaDataLoader.java:75)\r\n\tat io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.access$000(TableMetaDataLoader.java:49)\r\n\tat io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader$1.call(TableMetaDataLoader.java:121)\r\n\tat io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader$1.call(TableMetaDataLoader.java:117)\r\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:117)\r\n\tat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:38)\r\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:77)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n### Steps to reproduce the behavior\r\n\r\n1, my MySQL version is 5.7\r\n2, MySQL driver is mysql-connector-java (8.0.12)\r\n\r\nI am reporting an error during the startup of the program. I started the operation at 3.0.0.M1 and there is no problem. I compared the code of M1 and M2 and found that M2 will extract all the databases when starting, and extract the primary keys in the table.\r\n\r\n### For bug report, please *MUST* provide the reproduce example codes (such as a github link).\r\n\r\nMy spring-boot (1.5.14.RELEASE)  yml configuration\uff1a\r\n\r\n```\r\nsharding:\r\n  jdbc:\r\n    datasource:\r\n      names: ds\r\n      ds:\r\n        type: com.alibaba.druid.pool.DruidDataSource\r\n        driver-class-name: com.mysql.cj.jdbc.Driver\r\n        url: jdbc:mysql://localhost:3306/test?serverTimezone=Asia/Shanghai\r\n        username: test\r\n        password: test123\r\n        initialSize: 60\r\n        minIdle: 60\r\n        maxActive: 60\r\n        maxWait: 60000\r\n        asyncInit: true\r\n    config:\r\n      sharding:\r\n        props:\r\n          sql:\r\n            show: true\r\n        tables:\r\n          test:\r\n            actual-data-nodes: ds.test_$->{0..1}\r\n            key-generator-column-name: id\r\n            table-strategy:\r\n              inline:\r\n                sharding-column: id\r\n                algorithm-expression: test_$->{id % 2}\r\n```", "url": "https://github.com/apache/shardingsphere/issues/1123", "user": "jukai5501", "labels": ["bug"], "created": "2018-08-09 08:57:39", "closed": "2018-08-11 18:08:57", "commits": {"e9f760995c07acdf58abe5dc8f0e636dbb0b9154": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "e7cd3b2ac75fe30ef8445cecb986d245eac0b347": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "fbdeecb24dad5a16c92ee9d17b37259c50f28a88": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "e9f760995c07acdf58abe5dc8f0e636dbb0b9154", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["4ba2a7946f14d878bc5ab61a80d203b596686109"], "nameRev": "e9f760995c07acdf58abe5dc8f0e636dbb0b9154 tags/3.0.0.M3~288^2~12", "commitMessage": "for #1123, use db catalog to load meta data\n", "commitDateTime": "2018-08-12 01:51:44", "authoredDateTime": "2018-08-12 01:51:44", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/ShardingMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataLoader.java", "insertions": 19, "deletions": 11, "lines": 30}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/OrchestrationShardingMasterSlaveNamespaceTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/ShardingContext.java", "insertions": 3, "deletions": 26, "lines": 29}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSource.java", "insertions": 29, "deletions": 5, "lines": 34}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement/ShardingStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/connection/ShardingConnectionTest.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/MergeEventListenerTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/SqlRoutingEventListenerTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/JDBCBackendHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/NettyBackendHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/RuleRegistry.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingMetaData.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.ShardingMetaData", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TableMetaDataInitializer.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer.getAllTableNames(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TableMetaDataLoader.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.isTableExist(java.sql.Connection,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getColumnMetaDataList(java.sql.Connection,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getPrimaryKeys(java.sql.Connection,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(java.lang.String,java.lang.String,java.util.Collection)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.isTableExist(java.sql.Connection,java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getColumnMetaDataList(java.sql.Connection,java.lang.String,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getPrimaryKeys(java.sql.Connection,java.lang.String,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(java.util.Map,io.shardingsphere.core.rule.ShardingDataSourceNames)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(java.util.Map,io.shardingsphere.core.rule.ShardingDataSourceNames).1.call()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "OrchestrationShardingMasterSlaveNamespaceTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.jdbc.orchestration.spring.OrchestrationShardingMasterSlaveNamespaceTest.getDataSourceMap()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.jdbc.orchestration.spring.OrchestrationShardingMasterSlaveNamespaceTest.getShardingRule()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ShardingContext.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.ShardingContext", "TOT": 6, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "io.shardingsphere.core.jdbc.core.ShardingContext.getDataSourceURLs(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.jdbc.core.ShardingContext.getDataSourceURL(javax.sql.DataSource)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ShardingDataSource.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource.renew(java.util.Map,io.shardingsphere.core.rule.ShardingRule,java.util.Properties)", "TOT": 8, "UPD": 2, "INS": 4, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource.getDataSourceURLs(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource.getDataSourceURL(javax.sql.DataSource)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.refreshTableMetaData()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingStatement.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.statement.ShardingStatement.refreshTableMetaData()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingConnectionTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.connection.ShardingConnectionTest.setUp()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MergeEventListenerTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.opentracing.MergeEventListenerTest.setUp()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SqlRoutingEventListenerTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.opentracing.SqlRoutingEventListenerTest.setUp()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JDBCBackendHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.backend.jdbc.JDBCBackendHandler.execute(io.shardingsphere.core.routing.SQLRouteResult)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NettyBackendHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.backend.netty.NettyBackendHandler.refreshTableMetaData(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RuleRegistry.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.config.RuleRegistry.initShardingMetaData(java.util.concurrent.ExecutorService)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e7cd3b2ac75fe30ef8445cecb986d245eac0b347", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["e9f760995c07acdf58abe5dc8f0e636dbb0b9154"], "nameRev": "e7cd3b2ac75fe30ef8445cecb986d245eac0b347 tags/3.0.0.M3~288^2~11", "commitMessage": "for #1123, refactor ShardingContext\n", "commitDateTime": "2018-08-12 01:54:32", "authoredDateTime": "2018-08-12 01:54:32", "commitGitStats": [{"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/ShardingContext.java", "insertions": 2, "deletions": 13, "lines": 15}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSource.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/connection/ShardingConnectionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/MergeEventListenerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/SqlRoutingEventListenerTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingContext.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.ShardingContext", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "ShardingDataSource.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource.renew(java.util.Map,io.shardingsphere.core.rule.ShardingRule,java.util.Properties)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ShardingConnectionTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.connection.ShardingConnectionTest.setUp()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MergeEventListenerTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.opentracing.MergeEventListenerTest.setUp()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SqlRoutingEventListenerTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.opentracing.SqlRoutingEventListenerTest.setUp()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "fbdeecb24dad5a16c92ee9d17b37259c50f28a88", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["e7cd3b2ac75fe30ef8445cecb986d245eac0b347"], "nameRev": "fbdeecb24dad5a16c92ee9d17b37259c50f28a88 tags/3.0.0.M3~288^2~10", "commitMessage": "fix #1123, refactor ShardingMetaData\n", "commitDateTime": "2018-08-12 02:08:46", "authoredDateTime": "2018-08-12 02:08:46", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/ShardingMetaData.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSource.java", "insertions": 7, "deletions": 14, "lines": 21}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/RuleRegistry.java", "insertions": 2, "deletions": 7, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingMetaData.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.metadata.ShardingMetaData", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ShardingDataSource.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource", "TOT": 12, "UPD": 3, "INS": 1, "MOV": 5, "DEL": 3}, {"spoonMethodName": "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource.renew(java.util.Map,io.shardingsphere.core.rule.ShardingRule,java.util.Properties)", "TOT": 14, "UPD": 3, "INS": 1, "MOV": 7, "DEL": 3}]}, {"spoonFilePath": "RuleRegistry.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.config.RuleRegistry.initShardingMetaData(java.util.concurrent.ExecutorService)", "TOT": 9, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e9f760995c07acdf58abe5dc8f0e636dbb0b9154", "e7cd3b2ac75fe30ef8445cecb986d245eac0b347", "fbdeecb24dad5a16c92ee9d17b37259c50f28a88"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 90, "deletions": 90, "lines": 180, "gitFilesChange": 10}, "spoonStatsSummary": {"TOT": 107, "UPD": 13, "INS": 41, "MOV": 31, "DEL": 22, "spoonFilesChanged": 10, "spoonMethodsChanged": 25}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource", "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core", "sharding-proxy/src/main/java/io/shardingsphere/proxy/config", "sharding-core/src/main/java/io/shardingsphere/core/metadata", "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement", "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc", "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty", "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor"], "changesInPackagesSPOON": ["io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource", "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource.renew(java.util.Map,io.shardingsphere.core.rule.ShardingRule,java.util.Properties)", "io.shardingsphere.core.metadata.ShardingMetaData", "io.shardingsphere.core.jdbc.core.ShardingContext", "io.shardingsphere.proxy.config.RuleRegistry.initShardingMetaData(java.util.concurrent.ExecutorService)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getColumnMetaDataList(java.sql.Connection,java.lang.String,java.lang.String)", "io.shardingsphere.proxy.backend.netty.NettyBackendHandler.refreshTableMetaData(java.lang.String)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.isTableExist(java.sql.Connection,java.lang.String,java.lang.String)", "io.shardingsphere.core.jdbc.core.ShardingContext.getDataSourceURL(javax.sql.DataSource)", "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource.getDataSourceURLs(java.util.Map)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(java.lang.String,java.lang.String,java.util.Collection)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader", "io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.refreshTableMetaData()", "io.shardingsphere.proxy.backend.jdbc.JDBCBackendHandler.execute(io.shardingsphere.core.routing.SQLRouteResult)", "io.shardingsphere.core.jdbc.core.statement.ShardingStatement.refreshTableMetaData()", "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getPrimaryKeys(java.sql.Connection,java.lang.String)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getPrimaryKeys(java.sql.Connection,java.lang.String,java.lang.String)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(java.util.Map,io.shardingsphere.core.rule.ShardingDataSourceNames)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.getColumnMetaDataList(java.sql.Connection,java.lang.String)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.load(java.util.Map,io.shardingsphere.core.rule.ShardingDataSourceNames).1.call()", "io.shardingsphere.core.jdbc.core.ShardingContext.getDataSourceURLs(java.util.Map)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer", "io.shardingsphere.core.metadata.table.executor.TableMetaDataInitializer.getAllTableNames(java.lang.String)", "io.shardingsphere.core.metadata.table.executor.TableMetaDataLoader.isTableExist(java.sql.Connection,java.lang.String)", "io.shardingsphere.core.jdbc.core.datasource.ShardingDataSource.getDataSourceURL(javax.sql.DataSource)"]}, {"title": "Derived columns of GROUP BY / ORDER BY appear in query result", "body": "### Which version of Sharding-Sphere do you using?\r\n3.0.0.M2\r\n\r\nWhen we execute \r\n> SELECT order_id FROM t_order ORDER BY user_id;\r\nthe appendColumns for `order by` will also appear in result set.\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1120", "user": "tristaZero", "labels": ["bug"], "created": "2018-08-09 03:12:54", "closed": "2018-08-09 06:29:02", "commits": {"0af2cbd8bab2b99833d5759983b65c0c4fbd1c04": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "18a81160780a86c8a66a0f074029e5d09c515ef5": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "3dd50bd3debf1f0273e40db1347c9bd4440a62e0": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "74706d4fce9d1b20f8d80ec35e42961f42ef2857": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0af2cbd8bab2b99833d5759983b65c0c4fbd1c04", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["5321e46a42ed52966f3c155a9b62a4507c8f42e7"], "nameRev": "0af2cbd8bab2b99833d5759983b65c0c4fbd1c04 tags/3.0.0.M3~294^2~6", "commitMessage": "for #1120, filter derived column for sharding-proxy\n", "commitDateTime": "2018-08-09 12:28:45", "authoredDateTime": "2018-08-09 12:28:45", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/JDBCBackendHandler.java", "insertions": 20, "deletions": 2, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JDBCBackendHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.backend.jdbc.JDBCBackendHandler.getQueryResponsePacketsWithoutDerivedColumns(io.shardingsphere.proxy.transport.mysql.packet.command.query.QueryResponsePackets)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.proxy.backend.jdbc.JDBCBackendHandler.merge(io.shardingsphere.core.parsing.parser.sql.SQLStatement)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "18a81160780a86c8a66a0f074029e5d09c515ef5", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["5869d6acfdf517cbd271e1e5de9cf8042524946c"], "nameRev": "18a81160780a86c8a66a0f074029e5d09c515ef5 tags/3.0.0.M3~294^2~4", "commitMessage": "for #1120, fix test cases\n", "commitDateTime": "2018-08-09 12:55:05", "authoredDateTime": "2018-08-09 12:55:05", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/constant/DerivedColumn.java", "insertions": 10, "deletions": 21, "lines": 31}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/JDBCBackendHandler.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DerivedColumn.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.constant.DerivedColumn", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.constant.DerivedColumn.getDerivedAvgCountAlias(int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.constant.DerivedColumn.getDerivedAvgSumAlias(int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.constant.DerivedColumn.getDerivedOrderByAlias(int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.constant.DerivedColumn.getDerivedGroupByAlias(int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.constant.DerivedColumn.isDerivedColumn(java.lang.String)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "JDBCBackendHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.backend.jdbc.JDBCBackendHandler.getQueryResponsePacketsWithoutDerivedColumns(io.shardingsphere.proxy.transport.mysql.packet.command.query.QueryResponsePackets)", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3dd50bd3debf1f0273e40db1347c9bd4440a62e0", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["18a81160780a86c8a66a0f074029e5d09c515ef5"], "nameRev": "3dd50bd3debf1f0273e40db1347c9bd4440a62e0 tags/3.0.0.M3~294^2~3", "commitMessage": "for #1120, filter derived column for sharding-jdbc\n", "commitDateTime": "2018-08-09 14:26:12", "authoredDateTime": "2018-08-09 14:26:12", "commitGitStats": [{"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractResultSetAdapter.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/resultset/GeneratedKeysResultSetMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/resultset/ShardingResultSetMetaData.java", "insertions": 147, "deletions": 0, "lines": 147}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_avg.xml", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_group_by_with_avg.xml", "insertions": 20, "deletions": 22, "lines": 42}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_group_by_without_grouped_column.xml", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_order_by_desc_and_index_asc.xml", "insertions": 80, "deletions": 81, "lines": 161}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_order_by_with_date.xml", "insertions": 80, "deletions": 81, "lines": 161}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_pagination_with_row_number_and_limit.xml", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_with_expression.xml", "insertions": 40, "deletions": 41, "lines": 81}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_avg.xml", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_avg.xml", "insertions": 10, "deletions": 12, "lines": 22}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_without_grouped_column.xml", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_desc_and_index_asc.xml", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_with_date.xml", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_pagination_with_row_number_and_limit.xml", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_with_expression.xml", "insertions": 100, "deletions": 101, "lines": 201}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_avg.xml", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_group_by_with_avg.xml", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_group_by_without_grouped_column.xml", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_order_by_desc_and_index_asc.xml", "insertions": 40, "deletions": 41, "lines": 81}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_order_by_with_date.xml", "insertions": 40, "deletions": 41, "lines": 81}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_pagination_with_row_number_and_limit.xml", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_with_expression.xml", "insertions": 20, "deletions": 21, "lines": 41}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractResultSetAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.adapter.AbstractResultSetAdapter.getMetaData()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GeneratedKeysResultSetMetaData.java", "spoonMethods": []}, {"spoonFilePath": "ShardingResultSetMetaData.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.resultset.ShardingResultSetMetaData", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "74706d4fce9d1b20f8d80ec35e42961f42ef2857", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["3dd50bd3debf1f0273e40db1347c9bd4440a62e0"], "nameRev": "74706d4fce9d1b20f8d80ec35e42961f42ef2857 tags/3.0.0.M3~294^2~2", "commitMessage": "fix #1120\n", "commitDateTime": "2018-08-09 14:28:53", "authoredDateTime": "2018-08-09 14:28:53", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0af2cbd8bab2b99833d5759983b65c0c4fbd1c04", "18a81160780a86c8a66a0f074029e5d09c515ef5", "3dd50bd3debf1f0273e40db1347c9bd4440a62e0", "74706d4fce9d1b20f8d80ec35e42961f42ef2857"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 181, "deletions": 27, "lines": 208, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 35.0, "UPD": 10.0, "INS": 6.0, "MOV": 14.0, "DEL": 5.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc", "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/resultset", "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter", "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/constant"], "changesInPackagesSPOON": ["io.shardingsphere.proxy.backend.jdbc.JDBCBackendHandler.getQueryResponsePacketsWithoutDerivedColumns(io.shardingsphere.proxy.transport.mysql.packet.command.query.QueryResponsePackets)", "io.shardingsphere.core.parsing.parser.constant.DerivedColumn", "io.shardingsphere.core.parsing.parser.constant.DerivedColumn.getDerivedAvgCountAlias(int)", "io.shardingsphere.core.parsing.parser.constant.DerivedColumn.getDerivedGroupByAlias(int)", "io.shardingsphere.proxy.backend.jdbc.JDBCBackendHandler.merge(io.shardingsphere.core.parsing.parser.sql.SQLStatement)", "io.shardingsphere.core.jdbc.core.resultset.ShardingResultSetMetaData", "io.shardingsphere.core.parsing.parser.constant.DerivedColumn.isDerivedColumn(java.lang.String)", "io.shardingsphere.core.jdbc.adapter.AbstractResultSetAdapter.getMetaData()", "io.shardingsphere.core.parsing.parser.constant.DerivedColumn.getDerivedAvgSumAlias(int)", "io.shardingsphere.core.parsing.parser.constant.DerivedColumn.getDerivedOrderByAlias(int)"]}, {"title": "3.0.0.M2 TransactionListener throw NullPointerException", "body": "- environment\r\njava 1.8.144\r\n3.0.0.M2\r\n- question\r\nAn exception occurs when inserting data in batches\r\n```\r\nException thrown by subscriber method listen(io.shardingsphere.core.transaction.event.TransactionEvent) on subscriber io.shardingsphere.core.transaction.listener.TransactionListener@50265207 when dispatching event: io.shardingsphere.core.transaction.event.WeakXaTransactionEvent@54be0a09\r\njava.lang.NullPointerException: null\r\n\tat io.shardingsphere.core.transaction.listener.TransactionListener.listen(TransactionListener.java:61) ~[sharding-core-3.0.0.M2.jar:?]\r\n\tat sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source) ~[?:?]\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_144]\r\n\tat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_144]\r\n\tat com.google.common.eventbus.Subscriber.invokeSubscriberMethod(Subscriber.java:87) ~[guava-24.0-jre.jar:?]\r\n\tat com.google.common.eventbus.Subscriber$1.run(Subscriber.java:72) ~[guava-24.0-jre.jar:?]\r\n\tat com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:398) ~[guava-24.0-jre.jar:?]\r\n\tat com.google.common.eventbus.Subscriber.dispatchEvent(Subscriber.java:67) ~[guava-24.0-jre.jar:?]\r\n\tat com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher.dispatch(Dispatcher.java:108) ~[guava-24.0-jre.jar:?]\r\n\tat com.google.common.eventbus.EventBus.post(EventBus.java:212) ~[guava-24.0-jre.jar:?]\r\n\tat io.shardingsphere.core.jdbc.adapter.AbstractConnectionAdapter.setAutoCommit(AbstractConnectionAdapter.java:91) ~[sharding-jdbc-3.0.0.M2.jar:?]\r\n\tat org.springframework.jdbc.datasource.DataSourceTransactionManager.doCleanupAfterCompletion(DataSourceTransactionManager.java:374) ~[spring-jdbc-5.0.7.RELEASE.jar:5.0.7.RELEASE]\r\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:1007) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE]\r\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:793) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE]\r\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:714) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE]\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:532) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE]\r\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:304) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE]\r\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.0.7.RELEASE.jar:5.0.7.RELEASE]\r\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.7.RELEASE.jar:5.0.7.RELEASE]\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.7.RELEASE.jar:5.0.7.RELEASE]\r\n\tat \r\n```\r\nBut there is no problem with using 3.0.0.M2-SNAPSHOT ", "url": "https://github.com/apache/shardingsphere/issues/1116", "user": "Pramy", "labels": ["bug"], "created": "2018-08-08 10:34:25", "closed": "2018-08-10 03:19:34", "commits": {"57c35955f29191d66eae30c52f7ce5cb0ca9bdc5": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "57c35955f29191d66eae30c52f7ce5cb0ca9bdc5", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["edc388f3984fbcaa1a093b822a3c2e20f33f7de4", "02db08bd2a66ba237e58ad88084f510c9d49bc11"], "nameRev": "57c35955f29191d66eae30c52f7ce5cb0ca9bdc5 tags/3.0.0.M3~288^2~26", "commitMessage": "Merge pull request #1125 from cherrylzhao/dev-new\n\nfor #1116, resolve transactionManager is null when receiving new request from client application. ", "commitDateTime": "2018-08-10 11:19:02", "authoredDateTime": "2018-08-10 11:19:02", "commitGitStats": [{"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractConnectionAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.adapter.AbstractConnectionAdapter.getConnection(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.jdbc.adapter.AbstractConnectionAdapter.setAutoCommit(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Table name of no sharding is set low-case defaultly", "body": "### Which version of Sharding-Sphere do you using?\r\n2.0.3\r\n\r\n### Expected behavior\r\ninsert data correctly\r\n\r\n### Actual behavior\r\ncan't insert data, throw exception \"Table 'test' doesn't exist\"\r\n\r\n### Reason analyze\r\nDatabase is case-sensitive and table name is in upper-case. a part of tables is sharing, and other part of tables is not sharding, when insert data into no sharding table, it throw exception \"Table 'test' doesn't exist\".\r\nThe reason is that sharding-jdbc set table name low-case defaultly.", "url": "https://github.com/apache/shardingsphere/issues/1057", "user": "zkzong", "labels": ["bug"], "created": "2018-07-27 05:27:21", "closed": "2018-08-14 08:28:09", "commits": {"d1a6153a53c66d7542cbb9b01b204cb27302b599": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "d1a6153a53c66d7542cbb9b01b204cb27302b599", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["961422353ad7ce443821e6778a5f23f93be994bd", "e3d5cc886106bcca70e9763e8846e765635832e9"], "nameRev": "d1a6153a53c66d7542cbb9b01b204cb27302b599 tags/3.0.0.M3~241", "commitMessage": "Merge pull request #1139 from tuohai666/dev\n\n#1057, fix table name of default datasource", "commitDateTime": "2018-08-14 16:28:09", "authoredDateTime": "2018-08-14 16:28:09", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rule/ShardingRule.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingRule.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.rule.ShardingRule.getTableRuleByLogicTableName(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Throw NullPointerException in InsertColumnsClauseParser.", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M2\r\n### Expected behavior\r\nIf there is no table to be queried, ss should give information that this logic table does not exist.\r\n### Actual behavior\r\nIf there is no table to be queried, ss throw NullPointerException.\r\n### Reason analyze\r\nIf there is no table to be queried, ss will get null by shardingMetaData.getTableMetaDataMap().get(tableName).\r\n### Steps to reproduce the behavior\r\ninsert into ttttt values(1,2); (ttttt does not exist in database.)\r\n### For bug report, please *MUST* provide the reproduce example codes (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1055", "user": "tristaZero", "labels": ["bug"], "created": "2018-07-27 04:34:01", "closed": "2018-07-27 08:36:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[BUG] batch insert have a bug", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M1\r\n### Expected behavior\r\nbatch insert into can success \r\n### Actual behavior\r\nNPE\r\n### Reason analyze\r\nbug:\r\ncode :\u3000io.shardingsphere.core.optimizer.insert.InsertOptimizeEngine.optimize()\r\nrow number \uff1a 68\r\n```\r\nparameters.subList(count * insertValue.getParametersCount(), (count + 1) * insertValue.getParametersCount())\r\n```\r\nA bug is generated when I insert it in bulk. My sql is as follows:\r\nInsert into test_table(id, name, age) values (?,'',?),(?,?,?),(?,?,?)\r\nBut when the parameter is intercepted in the code, an error occurs because the parameter.sublist, the array subscript is out of bounds.\r\n0\u00d72,1\u00d72 [0,2)\r\n1\u00d73, 2\u00d73 [3,6)\r\n2\u00d73,3\u00d73 [6,9)\r\nAt this point, the data subscript will be out of bounds because my parameter size is 8, and the second grouping parameter is incorrect.\r\n### Steps to reproduce the behavior\r\n\r\n### Please provide the reproduce example codes (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1029", "user": "scemsjyd", "labels": ["bug"], "created": "2018-07-18 13:54:23", "closed": "2018-07-19 09:42:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[io.shardingsphere.jdbc.orchestration.spring.datasource.OrchestrationShardingDataSourceFactoryBean]: Constructor threw exception; nested exception is java.lang.NullPointerException", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M1\r\n### Expected behavior\r\nInit dataSource success\r\n### Actual behavior\r\n java.lang.NullPointerException\r\n### Reason analyze\r\n![](https://ws4.sinaimg.cn/large/006tNc79gy1ftdx9dksfaj31kw0uttk9.jpg)\r\n![](https://ws1.sinaimg.cn/large/006tNc79gy1ftdxbg6npbj31ii0p8qaw.jpg)\r\n### Steps to reproduce the behavior\r\n https://github.com/sharding-sphere/sharding-sphere-example.git\r\nspring-namespace-mybatis-example/io.shardingsphere.example.spring.namespace.mybatis.main.orche.zookeeper.ShardingOnlyWithDatabases\r\n1. execute ShardingOnlyWithDatabases\r\n\r\n2. modify LOAD_CONFIG_FROM_REG_CENTER=true;\r\n    execute ShardingOnlyWithDatabases\r\n\r\n### Please provide the reproduce example codes (such as a github link).\r\nhttps://github.com/sharding-sphere/sharding-sphere-example.git\r\nversion:3.0.0.M1", "url": "https://github.com/apache/shardingsphere/issues/1027", "user": "dongweizhao", "labels": ["bug"], "created": "2018-07-18 05:04:09", "closed": "2018-07-24 02:45:41", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Fix bug: use formula expressions for select.", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M2-SNAPSHOT\r\n### Expected behavior\r\nselect * from t_order where id >1-1 limit 1; Only give me one row.\r\n### Actual behavior\r\nselect * from t_order where id >1-1 limit 1; Only give me one row, but all rows are returned.\r\n### Reason analyze\r\nCan not analyse the expression of 1-1;\r\n### Steps to reproduce the behavior\r\n\r\n### Please provide the reproduce example codes (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/1023", "user": "tristaZero", "labels": ["bug"], "created": "2018-07-17 13:36:35", "closed": "2018-07-17 15:48:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Can't resolve placeholder in Spring Boot YAML configuration", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n2.0.3\r\n\r\n### Expected behavior\r\nresolve placeholder\r\n\r\n### Actual behavior\r\ntreat placeholder as raw string\r\n\r\n### Steps to reproduce the behavior\r\n+ use placeholder in configuration yaml\r\n\r\n```\r\nsharding:\r\n  jdbc:\r\n    datasource:\r\n      names: ds\r\n      ds: \r\n        url: ${KEY_IN_OS_ENV}\r\n```\r\n+ start application\r\n+ get \"malfrom url\" exception because jdbc get \"${KEY_IN_OS_ENV}\" for url connection\r\n\r\n### Reason analyze\r\nSharding JDBC get configuration from spring boot yaml files by `io.shardingjdbc.spring.boot.SpringBootConfiguration`. The code to get datasource configuration is blow\r\n\r\n```\r\nprivate void setDataSourceMap(final Environment environment) {\r\n        RelaxedPropertyResolver propertyResolver = new RelaxedPropertyResolver(environment, \"sharding.jdbc.datasource.\");\r\n        String dataSources = propertyResolver.getProperty(\"names\");\r\n        for (String each : dataSources.split(\",\")) {\r\n            try {\r\n                Map<String, Object> dataSourceProps = propertyResolver.getSubProperties(each + \".\");\r\n                Preconditions.checkState(!dataSourceProps.isEmpty(), \"Wrong datasource properties!\");\r\n                DataSource dataSource = DataSourceUtil.getDataSource(dataSourceProps.get(\"type\").toString(), dataSourceProps);\r\n                dataSourceMap.put(each, dataSource);\r\n            } catch (final ReflectiveOperationException ex) {\r\n                throw new ShardingJdbcException(\"Can't find datasource type!\", ex);\r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n`getProperty(String)` can recognize placeholder and parse it. But `RelaxedPropertyResolver.getSubProperties(String)` can't. So all the placeholder has been resolved as raw string and pass to Sharding JDBC framework.\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1011", "user": "errordaiwa", "labels": ["bug"], "created": "2018-07-15 07:55:59", "closed": "2018-07-17 15:43:15", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Cannot catch exception when using Sharding-JDBC route to multiple data nodes", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n\r\n3.0.0.M1\r\n\r\n### Expected behavior\r\n\r\nCan catch SQLException when exception occur\r\n\r\n### Actual behavior\r\n\r\nCannot catch SQLException when exception occur\r\n\r\n### Reason analyze\r\n\r\nBecause Sharding-JDBC use multiple thread to execute SQL, if exception occur, cannot catch it on main thread.\r\n", "url": "https://github.com/apache/shardingsphere/issues/1010", "user": "terrymanu", "labels": ["bug"], "created": "2018-07-14 11:49:34", "closed": "2018-07-24 03:50:42", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "Master-slave only for Sharding-Proxy execute `SHOW TABLES` occur exception", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n\r\n3.0.0.M2.SNAPSHOT\r\n\r\n### Expected behavior\r\n\r\nMaster-slave only for Sharding-Proxy execute `SHOW TABLES`, return correct result.\r\n\r\n### Actual behavior\r\n\r\nError message on mysql command line: \r\n\r\n```\r\nERROR: \r\n table\r\n```\r\n\r\nException on Sharding-Proxy:\r\n\r\n```\r\n[ERROR] 17:02:39.600 [nioEventLoopGroup-5-2] i.s.p.b.common.ExecuteBackendHandler - ExecuteBackendHandler\r\njava.lang.NullPointerException: null\r\n\tat io.shardingsphere.core.merger.dal.show.ShowTablesMergedResult.init(ShowTablesMergedResult.java:75) ~[classes/:na]\r\n\tat io.shardingsphere.core.merger.dal.show.ShowTablesMergedResult.<init>(ShowTablesMergedResult.java:64) ~[classes/:na]\r\n\tat io.shardingsphere.core.merger.dal.DALMergeEngine.merge(DALMergeEngine.java:61) ~[classes/:na]\r\n\tat io.shardingsphere.proxy.backend.common.ExecuteBackendHandler.mergeDQLorDAL(ExecuteBackendHandler.java:204) ~[classes/:na]\r\n\tat io.shardingsphere.proxy.backend.common.ExecuteBackendHandler.merge(ExecuteBackendHandler.java:180) ~[classes/:na]\r\n\tat io.shardingsphere.proxy.backend.common.ExecuteBackendHandler.doExecuteInternal(ExecuteBackendHandler.java:127) ~[classes/:na]\r\n\tat io.shardingsphere.proxy.backend.common.ExecuteBackendHandler.execute(ExecuteBackendHandler.java:106) ~[classes/:na]\r\n\tat io.shardingsphere.proxy.transport.mysql.packet.command.text.query.ComQueryPacket.execute(ComQueryPacket.java:104) [classes/:na]\r\n\tat io.shardingsphere.proxy.frontend.mysql.MySQLFrontendHandler$1.run(MySQLFrontendHandler.java:96) [classes/:na]\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) [netty-common-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) [netty-common-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) [netty-transport-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) [netty-common-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) [netty-common-4.1.16.Final.jar:4.1.16.Final]\r\n\tat java.lang.Thread.run(Thread.java:748) [na:1.8.0_151]\r\n\r\n```\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/1006", "user": "terrymanu", "labels": ["bug"], "created": "2018-07-13 09:05:20", "closed": "2018-07-17 13:33:16", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "Fail to parsing PostgreSQL due to the quotation ", "body": "For English only, other languages we will close it directly.\r\n\r\nPlease answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Sphere do you using?\r\n3.0.0.M1\r\n### Expected behavior\r\ncorrectly parsing sql (select * from \"t_user\")\r\n### Actual behavior\r\nsql after parsing was \"select * from \"tt_user\"\r\n### Steps to reproduce the behavior\r\n\r\n### Please provide the reproduce example codes (such as a github link).\r\n", "url": "https://github.com/apache/shardingsphere/issues/993", "user": "finger92", "labels": ["bug"], "created": "2018-07-10 07:07:23", "closed": "2018-07-25 08:23:57", "commits": {"ae8966569b2c484d28fb55109a156124b6e5afb2": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "ae8966569b2c484d28fb55109a156124b6e5afb2", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["94d8dc67987448e56e9d6399dee6f3755ec07fe5", "16dd45b4b9b442e2159f917bace3f90a1364ab1e"], "nameRev": "ae8966569b2c484d28fb55109a156124b6e5afb2 tags/3.0.0.M2~228", "commitMessage": "Merge pull request #1049 from tuohai666/dev\n\nfor #993, distinguish PostgreSQL from other databases when parsing Identifier and Chars", "commitDateTime": "2018-07-25 17:35:25", "authoredDateTime": "2018-07-25 17:35:25", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/lexer/Lexer.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/lexer/analyzer/Tokenizer.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/lexer/dialect/postgresql/PostgreSQLLexer.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-core/src/test/resources/parser/select.xml", "insertions": 16, "deletions": 3, "lines": 19}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dql-integrate-test-cases.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Lexer.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.lexer.Lexer.isIdentifierBegin(char)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.lexer.Lexer.isCharsBegin()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Tokenizer.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.lexer.analyzer.Tokenizer.scanIdentifier()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PostgreSQLLexer.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.lexer.dialect.postgresql.PostgreSQLLexer.isIdentifierBegin(char)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.parsing.lexer.dialect.postgresql.PostgreSQLLexer.isCharsBegin()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Column types disordered when use prepared statement in Proxy", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\n\r\n### Which version of Sharding-Sphere do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Sphere\u7248\u672c\u4e3a\uff1f\uff09\r\ndev\r\n\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\ncorrect prepared statement result\r\n\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\na chance to triger wrong result\r\n\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\nuse prepared statement in Proxy\r\n\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\nexample\r\n\r\nCode should based on https://github.com/sharding-sphere/sharding-sphere-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/sharding-sphere/sharding-sphere-example\uff09\r\n", "url": "https://github.com/apache/shardingsphere/issues/962", "user": "tuohai666", "labels": ["bug"], "created": "2018-06-25 10:16:27", "closed": "2018-06-26 02:39:06", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\u903b\u8f91\u8868\u540d\u548c\u8868\u522b\u540d\u76f8\u540c\u65f6\u4f1arewrite\u9519\u8bef", "body": "\u8fd9\u4e2a\u4e8b\u60c5\u6211\u8fd8\u662f\u8bf4\u4e2d\u6587\u5427\uff0c\u6211\u89c9\u5f97\u5f53\u8868\u522b\u540d\u548c\u903b\u8f91\u8868\u540d\u76f8\u540c\u7684\u65f6\u5019\uff0crewrite\u5e94\u8be5\u5c06\u522b\u540d\u4f5c\u4e3atabletoken\u5904\u7406\u3002\u5426\u5219rewrite\u7684\u7ed3\u679c\u5c31\u51fa\u9519\u4e86\uff0c\u56e0\u4e3aselect column\u4e2d\u7684\u8868\u540d\u5982\u679c\u7b49\u4e8e\u903b\u8f91\u8868\u660e\u90fd\u4f1a\u88ab\u5f53\u4f5ctabletoken\u5904\u7406\u3002\r\n\u6bd4\u5982select order.name,order.time from order order where order.num>100,\u8fd9\u662f\u4e2a\u5408\u7406\u7684sql\uff0c\u4f46\u662f\u73b0\u5728order.name\u4e2d\u7684order\u90fd\u4f1a\u88ab\u5f53\u4f5ctabletoken\u5904\u7406,\u4f1a\u88abrewrite,\u4f46\u662f\u522b\u540d order\u5c31\u4e0d\u88abrewrite \u3002\u53d8\u6210\u4e86select order_1.name,order_1.time from order_1 order where order_1.num>100\u3002\u6211\u89c9\u5f97\u8fd9\u5e94\u8be5\u7b97\u4e2abug\u3002\u8bf7\u5904\u7406\u4e00\u4e0b\u3002", "url": "https://github.com/apache/shardingsphere/issues/956", "user": "lijiajun1979", "labels": ["bug"], "created": "2018-06-21 11:11:34", "closed": "2018-08-25 16:48:29", "commits": {}, "ttf": 65.00027777777778, "commitsDetails": []}, {"title": "The tables with no configuration appear in the proxy.", "body": "The tables which are not configed in yaml can be used with show tables, select etc.\r\nIt is not correct, i will fix it in next week.", "url": "https://github.com/apache/shardingsphere/issues/954", "user": "tristaZero", "labels": ["bug"], "created": "2018-06-21 06:46:41", "closed": "2018-06-25 07:55:36", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "\u6279\u91cf\u63d2\u5165\u65f6\u5019\uff0c\u4f7f\u7528\u81ea\u589e\u4e3b\u952e\u5bfc\u81f4sql\u8bed\u53e5\u9519\u8bef", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\n\r\n### Which version of Sharding-Sphere do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Sphere\u7248\u672c\u4e3a\uff1f\uff09\r\n3.0.0.M1\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\n\u89e3\u6790\u540e\u7684sql\u8bed\u53e5\u9884\u671f\u5e94\u8be5\u662f\uff08id\u81ea\u589e\u4e3b\u952e\uff09\uff1ainsert into test_0 (name, create_dt, id) values (?, ?, ?), (?, ?, ?)\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\n\u5b9e\u9645\u8fd0\u884c\uff1ainsert into test_0 (name, create_dt, id) values (?, ?), ?), (?, ?, ?)\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\n\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\n ` <insert id=\"insertTestList\" parameterType=\"java.util.List\" useGeneratedKeys=\"true\"\r\n            keyProperty=\"id\">\r\n      insert into test (name, create_dt) values \r\n     <foreach collection=\"list\" item=\"item\" separator=\",\">\r\n            (#{item.name, jdbcType=VARCHAR}, #{item. createDt, jdbcType=TIMESTAMP})\r\n        </foreach>\r\n  </insert>`\r\nCode should based on https://github.com/sharding-sphere/sharding-sphere-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/sharding-sphere/sharding-sphere-example\uff09", "url": "https://github.com/apache/shardingsphere/issues/947", "user": "jukai5501", "labels": ["bug"], "created": "2018-06-20 16:36:55", "closed": "2018-06-21 06:27:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "use master-slave and r/w split mode\uff0cwhen distributed deploy mult-apps, the database connections massive increase.", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\n\r\n### Which version of Sharding-Sphere do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Sphere\u7248\u672c\u4e3a\uff1f\uff09\r\n3.0.0.M1\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\n\u8fde\u63a5\u6570\u7b49\u6bd4\u4f8b\u589e\u52a0\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\n\u6570\u636e\u83ab\u540d\u5176\u5999\u589e\u52a0\u4e86\u5f88\u591a\u8fde\u63a5\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\n\r\nhttps://github.com/olderzhou/netty-test.git\r\n\r\n\u5728windows\u91cc\u9762\u590d\u73b0\r\n\r\n\u4e0b\u8f7d\u597d\u4ee3\u7801\uff0c\u8fdb\u5165  run-local.sh\u6240\u5728\u76ee\u5f55\uff0c\u5206\u522b\u6267\u884c\r\n\r\n./run-lcoal local\r\n./run-lcoal local2\r\n./run-lcoal local3\r\n\r\n\u67e5\u770b\u6570\u636e\u5e93\u8fde\u63a5\u6570  show processlist\r\n\r\n\r\n\r\n\r\n![Uploading \u4f01\u4e1a\u5fae\u4fe1\u622a\u56fe_20180614212716.png\u2026]()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\n\r\nCode should based on https://github.com/sharding-sphere/sharding-sphere-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/sharding-sphere/sharding-sphere-example\uff09\r\n", "url": "https://github.com/apache/shardingsphere/issues/934", "user": "olderzhou", "labels": ["bug"], "created": "2018-06-14 13:29:03", "closed": "2018-08-21 11:38:38", "commits": {}, "ttf": 67.00027777777778, "commitsDetails": []}, {"title": "1109 - 42S02Unknown table 'table_names' in information_schema", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\n\r\n### Which version of Sharding-Sphere do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Sphere\u7248\u672c\u4e3a\uff1f\uff09\r\n\r\nSharding-Proxy in dev branch\r\n\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\n\r\nshow tables;\r\n\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\n\r\nmysql> show tables;\r\nERROR 1109 (HY000): 42S02Unknown table 'table_names' in information_schema\r\n\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\n\r\nproxy.mode: CONNECTION_STRICTLY\r\n\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\n\r\neither CLI or GUI\r\n\r\nCode should based on https://github.com/sharding-sphere/sharding-sphere-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/sharding-sphere/sharding-sphere-example\uff09\r\n", "url": "https://github.com/apache/shardingsphere/issues/930", "user": "tuohai666", "labels": ["bug"], "created": "2018-06-14 02:55:46", "closed": "2018-06-15 04:23:48", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Inline expression with groovy may cause memory leak", "body": "## \u7248\u672c\u53f7\u4e3a 3.0.0.M1\r\n\u73af\u5883\u662fjdk1.8\uff0cspring boot 1.5.9\uff0c\u53ea\u4f7f\u7528\u7684\u5206\u5e93\u5206\u8868\r\n## \u95ee\u9898\r\n\u7ebf\u4e0a\u8dd1\u4e86\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u53d1\u73b0class\u5bf9\u8c61\u539f\u6765\u8fdc\u591a\uff0c\u665a\u4e0a\u770b\u4e86\u4e00\u4e0b\u53ea\u670920w\u4e2aclass\uff0c\u4f46\u662f\u5230\u4e86\u65e9\u4e0a\u5c31\u5230\u4e8640w\u4e2a\uff0c\u5e76\u4e14\u8001\u5e74\u4ee3\u6301\u7eed\u5347\u9ad8\u5e76\u4e14gc\u56de\u6536\u7684\u7a7a\u95f4\u5f88\u5c11\uff0c\u6700\u540e\u76f4\u63a5oom\u4e86\uff0c\u901a\u8fc7dump\u5206\u6790\uff0c\u53d1\u73b0groovy\u52a0\u8f7d\u4e86\u5927\u91cf\u7684classInfo\uff0c\u5e76\u4e14\u6211\u7684\u9879\u76ee\u91cc\u53ea\u6709SS\u4f9d\u8d56\u4e86groovy\r\n\r\n## \u590d\u73b0\u4ee3\u7801\r\n```java\r\n    //-Xmx200m -Xms200m\r\n    public static void main(String[] args) {\r\n        for (int i = 0; i < 100000; i++) {\r\n            new InlineExpressionParser(\"\\\"${0..9}-${0..9}\\\"\").evaluate();\r\n        }\r\n    }\r\n```", "url": "https://github.com/apache/shardingsphere/issues/919", "user": "Pramy", "labels": ["bug"], "created": "2018-06-08 10:13:48", "closed": "2018-06-08 15:11:00", "commits": {"eea108fcfd9d6dd9ce4a4141e91ba886505467fb": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "eea108fcfd9d6dd9ce4a4141e91ba886505467fb", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["c75a67f75bf4f2a1745743ef57afbba5ce1a131b"], "nameRev": "eea108fcfd9d6dd9ce4a4141e91ba886505467fb tags/3.0.0.M2~794", "commitMessage": "for #919, update release notes\n", "commitDateTime": "2018-06-09 00:29:42", "authoredDateTime": "2018-06-09 00:29:42", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["eea108fcfd9d6dd9ce4a4141e91ba886505467fb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "SQL not supports \"Calculate Expression, eg: SUM(pv) / COUNT(uv)\" meaning?", "body": "### Which version of Sharding-Sphere do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Sphere\u7248\u672c\u4e3a\uff1f\uff09\r\n3.0.0.M1\r\n### Q\r\nIn https://github.com/sharding-sphere/sharding-sphere/blob/3.0.0.M1/ROADMAP.md \r\n> ## Kernel\r\n> ### SQL\r\n> - [ ] Calculate Expression, eg: SUM(pv) / COUNT(uv)\r\n\r\nBecause some features, like \"INSERT INTO VALUES (xxx), (xxx)\" are already supported, but not selected, so I'm not sure if \"SUM(pv) / COUNT(uv)\" is supported.\r\nCan I get some examples of SUM(pv) / COUNT(uv) \uff1f", "url": "https://github.com/apache/shardingsphere/issues/914", "user": "wujun8", "labels": ["bug"], "created": "2018-06-08 03:31:54", "closed": "2018-06-08 03:53:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\u4f7f\u7528sharding:inline-strategy\u62a5\u9519:\u901a\u914d\u7b26\u7684\u5339\u914d\u5f88\u5168\u9762, \u4f46\u65e0\u6cd5\u627e\u5230\u5143\u7d20 'sharding:inline-strategy' \u7684\u58f0\u660e\u3002", "body": "Sharding-Sphere \u7248\u672c\uff1a3.0.0.M1\r\n\r\n IDEA\u4f1a\u63d0\u793a\uff1aThis custom Spring bean has not yet been parsed\r\n\r\n\u770b\u8d77\u6765\u662fsharding.xsd\u5e76\u6ca1\u6709\u751f\u6548\r\n\r\n\u5b98\u7f51\u7ed9\u7684demo\u662f\uff1ahttp://shardingjdbc.io/schema/shardingjdbc/sharding\r\n\u4f46\u662fsharding.xsd\u91cc\u9762\u5374\u4e0d\u662f\u8fd9\u4e2a\u5730\u5740\uff0c\u6309\u7167\u6587\u4ef6\u91cc\u9762\u7684\u914d\u7f6e\u4fee\u6539\u6210\u4e86http://shardingsphere.io/schema/shardingsphere/sharding\r\n\u7136\u540e\u5c31\u62a5\u8fd9\u4e2a\u9519\u8bef\u4e86", "url": "https://github.com/apache/shardingsphere/issues/901", "user": "MartinDai", "labels": ["bug"], "created": "2018-06-02 11:54:41", "closed": "2018-06-06 02:15:56", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "\u5347\u7ea7\u52303.0\u540e\u542f\u52a8\u65f6\u95f4\u53d8\u957f\u4e86", "body": "# \u573a\u666f\r\n11\u4e2a\u6570\u636e\u5e93\uff0c\u9700\u8981\u521d\u59cb\u531611\u4e2adatasource\r\n## \u4f7f\u75282.0.3\r\n\u521d\u59cb\u5316\u6240\u6709\u6570\u636e\u6e90\u9700\u89812s\r\n\r\n## \u4f7f\u75283.0.0.M1\r\n\u521d\u59cb\u5316\u6240\u6709\u7684\u6570\u636e\u6e90\u9700\u8981\u9700\u898138s\r\n\r\n\u4ee5\u4e0a\u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u7528log\u65e5\u5fd7\u4e2d\u622a\u53d6\u7684\u65f6\u95f4\u5dee\r\n", "url": "https://github.com/apache/shardingsphere/issues/879", "user": "Pramy", "labels": ["bug"], "created": "2018-05-27 15:15:13", "closed": "2018-06-01 09:20:03", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "\u5347\u7ea73.0\u540eselect jion on \u8bed\u53e5\u629b\u7a7a\u6307\u9488\u5f02\u5e38\uff082.0\u6ca1\u95ee\u9898\uff09", "body": "## \u7248\u672c\uff1a2.0.3\r\n```sql\r\nSELECT d.*\r\nFROM event e\r\n    , detector_device d\r\nwhere e.status = #{handleStatus}\r\n      and d.is_online not in (2, 3)\r\n      and e.device_code = d.code\r\ngroup by e.device_code\r\norder by e.date desc\r\n```\r\n\u6b63\u786e\u6267\u884c\r\n## \u5347\u7ea7\u52303.0.0.M1\u7248\u672c\u540e\r\n\u540c\u6837\u7684sql\u8bed\u53e5\uff0c\u7136\u540e\u8dd1\u4e86\u5f02\u5e38\r\n\r\n\u5177\u4f53\u629b\u5f02\u5e38\u7684\u4f4d\u7f6e\u662f\u5728\r\nJDBCShardingRefreshHandler#execute()\r\n\u4e2d\u7684 getRouteResult()\u5f97\u5230\u7684\u7ed3\u679c\u4e3anull\r\n```java\r\norg.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \r\n### Error querying database.  Cause: java.lang.NullPointerException\r\n### The error may exist in file [D:\\java\\WorkSpace\\safecuit\\safecuit-manage\\target\\classes\\mapper\\DetectorDeviceMapper.xml]\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: SELECT d.*         FROM event e             , detector_device d         where e.status = ?               and d.is_online not in (2, 3)               and e.device_code = d.code         group by e.device_code         order by e.date desc\r\n### Cause: java.lang.NullPointerException\r\n\r\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)\r\n\tat com.sun.proxy.$Proxy77.selectList(Unknown Source)\r\n\tat org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)\r\n\tat org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\r\n\tat com.sun.proxy.$Proxy96.selectAllByEventType(Unknown Source)\r\n\tat com.gdut.safecuitmanage.service.impl.device.UserCircuitServiceImplTest.insertList(UserCircuitServiceImplTest.java:23)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: org.apache.ibatis.exceptions.PersistenceException: \r\n### Error querying database.  Cause: java.lang.NullPointerException\r\n### The error may exist in file [D:\\java\\WorkSpace\\safecuit\\safecuit-manage\\target\\classes\\mapper\\DetectorDeviceMapper.xml]\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: SELECT d.*         FROM event e             , detector_device d         where e.status = ?               and d.is_online not in (2, 3)               and e.device_code = d.code         group by e.device_code         order by e.date desc\r\n### Cause: java.lang.NullPointerException\r\n\tat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)\r\n\t... 35 more\r\nCaused by: java.lang.NullPointerException\r\n\tat io.shardingsphere.core.jdbc.metadata.dialect.JDBCShardingRefreshHandler.execute(JDBCShardingRefreshHandler.java:49)\r\n\tat io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:159)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)\r\n\tat com.sun.proxy.$Proxy138.query(Unknown Source)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\r\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)\r\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\r\n\t... 41 more\r\n```", "url": "https://github.com/apache/shardingsphere/issues/878", "user": "Pramy", "labels": ["bug"], "created": "2018-05-27 15:07:45", "closed": "2018-05-31 08:35:33", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "\u4f7f\u7528left join\u65f6\uff0c\u4e3b\u8868\u548c\u4ece\u8868\u672a\u8fdb\u884c\u8def\u7531\u3002", "body": "SQL\u8bed\u53e5\uff1a\r\n\r\n```sql\r\nselect * from reb_sale t left join %s reb_busi_ledger on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null\r\n```\r\n\r\nspring\u914d\u7f6e:\r\n\r\n```xml\r\n<bean id=\"twentyPreciseAlgorithm\" class=\"com.dmall.rebate.dao.algorithm.TwentyPreciseAlgorithm\" />\r\n    <bean id=\"tenPreciseAlgorithm\" class=\"com.dmall.rebate.dao.algorithm.TenPreciseAlgorithm\" />\r\n    <bean id=\"sixteenPreciseAlgorithm\" class=\"com.dmall.rebate.dao.algorithm.SixteenPreciseAlgorithm\" />\r\n\r\n    <sharding:data-source id=\"dataSource\">\r\n        <sharding:sharding-rule data-source-names=\"rebate_datasource\" default-data-source-name=\"rebate_datasource\">\r\n            <sharding:table-rules>\r\n                <sharding:table-rule logic-table=\"reb_receipt\" table-strategy-ref=\"rebReceiptStrategy\" actual-data-nodes=\"rebate_datasource.reb_receipt_$->{0..0}$->{0..0}$->{0..9}\"/>\r\n                <sharding:table-rule logic-table=\"reb_sale\" table-strategy-ref=\"rebSaleStrategy\" actual-data-nodes=\"rebate_datasource.reb_sale_$->{0..0}$->{0..1}$->{0..9}\"/>\r\n                <sharding:table-rule logic-table=\"reb_ledger\" table-strategy-ref=\"rebLedgerStrategy\" actual-data-nodes=\"rebate_datasource.reb_ledger_00$->{0..9}, rebate_datasource.reb_ledger_01$->{0..5}\"/>\r\n                <sharding:table-rule logic-table=\"reb_busi_ledger\" table-strategy-ref=\"rebSaleStrategy\" actual-data-nodes=\"rebate_datasource.reb_busi_ledger_$->{0..0}$->{0..1}$->{0..9}\"/>\r\n            </sharding:table-rules>\r\n            <sharding:binding-table-rules>\r\n                <sharding:binding-table-rule logic-tables=\"reb_sale,reb_busi_ledger\"/>\r\n            </sharding:binding-table-rules>\r\n        </sharding:sharding-rule>\r\n        <sharding:props>\r\n            <prop key=\"sql.show\">true</prop>\r\n        </sharding:props>\r\n    </sharding:data-source>\r\n\r\n\r\n    <sharding:standard-strategy id=\"rebSaleStrategy\" sharding-column=\"supplier_code\" precise-algorithm-ref=\"twentyPreciseAlgorithm\"/>\r\n    <sharding:standard-strategy id=\"rebReceiptStrategy\" sharding-column=\"supplier_code\" precise-algorithm-ref=\"tenPreciseAlgorithm\"/>\r\n    <sharding:standard-strategy id=\"rebBusiLedgerStrategy\" sharding-column=\"supplier_code\" precise-algorithm-ref=\"twentyPreciseAlgorithm\"/>\r\n    <sharding:standard-strategy id=\"rebLedgerStrategy\" sharding-column=\"supplier_code\" precise-algorithm-ref=\"sixteenPreciseAlgorithm\"/>\r\n```\r\n\r\n\u8ddf\u8e2a\u6e90\u7801\u53d1\u73b0\u8d70\u7684\u662f\r\n\r\n```java\r\nroutingEngine = new StandardRoutingEngine(shardingRule, tableNames.iterator().next(), shardingConditions);\r\n```\r\n\r\n\u4f46\u662f\u8fd9\u91cc\u7684tableNames.iterator().next()\u4f20\u5165\u7684\u662freb_busi_ledger \uff0c\u5bfc\u81f4\u672a\u5206\u8868\uff0c20\u5f20\u8868\u5168\u90e8\u67e5\u4e86\u51fa\u6765\u3002\r\n\u4e0b\u9762\u662f\u6253\u5370\u51fa\u6765\u7684sql\uff1a\r\n\r\n```\r\n2018-05-24 11:09:28.960 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_000 t left join reb_busi_ledger_000 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.961 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_001 t left join reb_busi_ledger_001 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.961 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_002 t left join reb_busi_ledger_002 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.961 [INFO ] [main-EventThread] [org.apache.curator.framework.state.ConnectionStateManager] - State change: SUSPENDED\r\n2018-05-24 11:09:28.961 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_003 t left join reb_busi_ledger_003 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.962 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_004 t left join reb_busi_ledger_004 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.962 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_005 t left join reb_busi_ledger_005 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.963 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_006 t left join reb_busi_ledger_006 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.963 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_007 t left join reb_busi_ledger_007 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.964 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_008 t left join reb_busi_ledger_008 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.964 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_009 t left join reb_busi_ledger_009 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.964 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_010 t left join reb_busi_ledger_010 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.965 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_011 t left join reb_busi_ledger_011 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.965 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_012 t left join reb_busi_ledger_012 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.965 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_013 t left join reb_busi_ledger_013 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.966 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_014 t left join reb_busi_ledger_014 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.966 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_015 t left join reb_busi_ledger_015 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.966 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_016 t left join reb_busi_ledger_016 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.966 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_017 t left join reb_busi_ledger_017 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.967 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_018 t left join reb_busi_ledger_018 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n2018-05-24 11:09:28.967 [INFO ] [main] [io.shardingsphere.core.util.SQLLogger] - Actual SQL: rebate_datasource ::: select * from reb_sale_019 t left join reb_busi_ledger_019 t1 on t.supplier_code = t1.supplier_code where t.supplier_code = ? and t.yn=1 and t.mandt=?  and ledger_no_j is null ::: [[0000331984, 300]]\r\n```\r\n\u8bf7\u770b\u4e00\u4e0b\u662f\u5426\u662f\u914d\u7f6e\u65b9\u9762\u7684\u95ee\u9898\uff0c\u8fd8\u662fsql\u6216\u8005\u4ee3\u7801\u6709\u95ee\u9898\u3002\u591a\u8c22", "url": "https://github.com/apache/shardingsphere/issues/866", "user": "zhangyue000", "labels": ["bug"], "created": "2018-05-24 03:13:23", "closed": "2018-05-24 14:24:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Confustion about MySQLPacketPayload", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\n\r\n### Which version of Sharding-Sphere do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Sphere\u7248\u672c\u4e3a\uff1f\uff09\r\nversion : 3.0.0.M1 , branch : master\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\nGet the right numeric value of length encoded integer\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\n## 1\u3001Bad comparision\r\n\r\nAccording to the doc https://dev.mysql.com/doc/internals/en/integer.html#packet-Protocol::LengthEncodedInteger\r\nthe first byte maybe an unsigned value , so we should use byteBuf.readByte() & 0xFF instead\r\n\r\n<img width=\"564\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6971152/40461066-2aae96a6-5f3c-11e8-91fd-fde497c91a08.png\">\r\n\r\n## 2\u3001Unnecessary comparison\r\nMySQLPacketPayload#writeIntLenenc , line 199\r\nThe \"value >= 251\" is checked by \"value < 251\"\r\n<img width=\"624\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6971152/40461237-e589e304-5f3c-11e8-909b-019bd535917d.png\">\r\n\r\n## by the way\r\nRuleRegistry , line 77\r\nUsing  map.entrySet() could be more efficiency and readable\r\nand the dataSourceMap's size could be adjust to dataSourceParameters.size()\r\n<img width=\"871\" alt=\"image\" src=\"https://user-images.githubusercontent.com/6971152/40461269-19c9f0be-5f3d-11e8-8d9d-312da9151df3.png\">\r\n\r\n\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\n\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\n\r\npackage io.shardingsphere.proxy;\r\n\r\nimport static org.junit.Assert.*;\r\n\r\nimport io.netty.buffer.ByteBuf;\r\nimport io.netty.buffer.PooledByteBufAllocator;\r\nimport io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload;\r\nimport org.junit.Test;\r\n\r\n/**\r\n * @author lzj\r\n * @date 2018/5/23\r\n */\r\npublic class MySqlPacketPayloadTest {\r\n\r\n    @Test\r\n    public void test0xfb() throws Exception {\r\n        ByteBuf byteBuf = PooledByteBufAllocator.DEFAULT.buffer();\r\n        //0xFB, 251\r\n        byteBuf.writeByte(0xFB);\r\n        MySQLPacketPayload packetPayload = new MySQLPacketPayload(byteBuf);\r\n        long result = packetPayload.readIntLenenc();\r\n        assertEquals(0xFB, result);\r\n\r\n    }\r\n\r\n    @Test\r\n    public void test0xfc() throws Exception {\r\n        ByteBuf byteBuf = PooledByteBufAllocator.DEFAULT.buffer();\r\n        //0xFC,252\r\n        byteBuf.writeByte(0xFC);\r\n        byteBuf.writeShortLE(0xFC);\r\n        MySQLPacketPayload packetPayload = new MySQLPacketPayload(byteBuf);\r\n        long result = packetPayload.readIntLenenc();\r\n        assertEquals(0xFC, result);\r\n\r\n    }\r\n\r\n    @Test\r\n    public void test0xfd() throws Exception {\r\n        ByteBuf byteBuf = PooledByteBufAllocator.DEFAULT.buffer();\r\n        //0xfd,253\r\n        byteBuf.writeByte(0xFD);\r\n        byteBuf.writeMediumLE(0xFD);\r\n        MySQLPacketPayload packetPayload = new MySQLPacketPayload(byteBuf);\r\n        long result = packetPayload.readIntLenenc();\r\n        assertEquals(0xFD, result);\r\n\r\n    }\r\n\r\n    @Test\r\n    public void test0xff() throws Exception {\r\n        ByteBuf byteBuf = PooledByteBufAllocator.DEFAULT.buffer();\r\n        //0xFF,255\r\n        byteBuf.writeByte(0xFF);\r\n        byteBuf.writeLongLE(0xFF);\r\n        MySQLPacketPayload packetPayload = new MySQLPacketPayload(byteBuf);\r\n        long result = packetPayload.readIntLenenc();\r\n        assertEquals(0xFF, result);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nCode should based on https://github.com/sharding-sphere/sharding-sphere-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/sharding-sphere/sharding-sphere-example\uff09\r\n", "url": "https://github.com/apache/shardingsphere/issues/865", "user": "hqq2023623", "labels": ["bug"], "created": "2018-05-24 02:42:38", "closed": "2018-05-24 08:01:05", "commits": {"c281cb461a58b961a86230cd4f56ea41dfb30587": {"commitGHEventType": "closed", "commitUser": "tuohai666"}, "4bee573dbeb1b3b8314833f17da05e7fdcc45b18": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c281cb461a58b961a86230cd4f56ea41dfb30587", "commitGHEventType": "closed", "commitUser": "tuohai666", "commitParents": ["ff221e623bdf769a10ac3de9b1f39e2a5c37991c"], "nameRev": "c281cb461a58b961a86230cd4f56ea41dfb30587 tags/3.0.0.M2~1023^2~1", "commitMessage": "fix #865\n", "commitDateTime": "2018-05-24 14:31:08", "authoredDateTime": "2018-05-24 14:31:08", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/RuleRegistry.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/MySQLPacketPayload.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RuleRegistry.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.config.RuleRegistry", "TOT": 8, "UPD": 6, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MySQLPacketPayload.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload.writeIntLenenc(long)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload.readIntLenenc()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4bee573dbeb1b3b8314833f17da05e7fdcc45b18", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["0bb5799d5f41c2450f41c5a8f6e3b7182a172b96", "05bd4c14cdd73c97722101c174cb39f9849eeaf3"], "nameRev": "4bee573dbeb1b3b8314833f17da05e7fdcc45b18 tags/3.0.0.M2~1020", "commitMessage": "Merge pull request #873 from tuohai666/dev\n\nmore for #865", "commitDateTime": "2018-05-25 12:28:08", "authoredDateTime": "2018-05-25 12:28:08", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/common/StatementExecuteBackendHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/metadata/ProxyShardingRefreshHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/MySQLPacketPayload.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StatementExecuteBackendHandler.java", "spoonMethods": []}, {"spoonFilePath": "ProxyShardingRefreshHandler.java", "spoonMethods": []}, {"spoonFilePath": "MySQLPacketPayload.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload.readInt1()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload.writeIntLenenc(long)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload.readInt2()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload.readInt3()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload.readIntLenenc()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c281cb461a58b961a86230cd4f56ea41dfb30587"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 12, "UPD": 6, "INS": 2, "MOV": 3, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-proxy/src/main/java/io/shardingsphere/proxy/config", "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet"], "changesInPackagesSPOON": ["io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload.writeIntLenenc(long)", "io.shardingsphere.proxy.config.RuleRegistry", "io.shardingsphere.proxy.transport.mysql.packet.MySQLPacketPayload.readIntLenenc()"]}, {"title": "sharding-proxy\u6d4b\u8bd5\u95ee\u9898\uff08\u4e2d\u6587\u4e71\u7801\uff0c\u5e94\u7528\u6b7b\u9501\u7b49\uff09", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\n\r\n### Which version of Sharding-Sphere do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Sphere\u7248\u672c\u4e3a\uff1f\uff09\r\nwindows 10\r\nmysql5.5\r\nsharding-proxy-3.0.0.M1\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\n1\u3001\u4e2d\u6587\u6b63\u5e38\r\n2\u3001\u80fd\u9a6c\u4e0a\u8fd4\u56de\u9519\u8bef\r\n3\u3001shardingColumn\u5927\u5c0f\u5199\u5ffd\u7565\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\n1\u3001\u4e2d\u6587\u4e71\u7801\r\n2\u3001\u5e94\u7528\u6b7b\u9501\r\n3\u3001shardingColumn\u9700\u5927\u5c0f\u5199\u4e00\u81f4\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\n1\u3001springboot\u914d\u7f6e\u4e86sharding-proxy\u7684\u6570\u636e\u6e90\uff0c\u5982\u4e0b\uff1a\r\nspring.datasource.slave2.driver-class-name=com.mysql.jdbc.Driver\r\nspring.datasource.slave2.url=jdbc:mysql://127.0.0.1:3307/sharding_db?characterEncoding=utf8\r\nspring.datasource.slave2.username=root\r\nspring.datasource.slave2.password=sa\r\n\u5728insert\u65f6\uff0c\u4e2d\u6587\u4e3a\u4e71\u7801\u3002\uff08\u4e0d\u7528sharding-proxy\u6b63\u5e38\uff09 \u4e0d\u77e5\u9053\u8fd8\u9700\u8981\u5728\u54ea\u91cc\u914d\u7f6e\uff1f\r\n\r\n2\u3001insert\u63d2\u5165\u65f6shardingColumn\u5728config.yaml\u4e2d\u65e0\u6cd5\u83b7\u53d6\u5230dataSources\uff0c\u5e94\u7528\u6b7b\u9501\u3002\r\n\r\n3\u3001shardingColumn\u9700\u8981\u4e25\u683c\u5927\u5c0f\u5199\u4e00\u81f4\uff0c\u5b9e\u9645\u4e0a\u6709\u4e9b\u6570\u636e\u5e93\u662f\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002\r\n\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\n\r\nCode should based on https://github.com/sharding-sphere/sharding-sphere-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/sharding-sphere/sharding-sphere-example\uff09\r\n", "url": "https://github.com/apache/shardingsphere/issues/858", "user": "jensolzhu", "labels": ["bug"], "created": "2018-05-22 08:16:22", "closed": "2018-05-23 13:54:05", "commits": {"ab6ff7bce7db98e81a6640d39c941dea96cc8c27": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "fab74a0ffce9cf45bdc510b7567baba91b2c05dd": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "ab6ff7bce7db98e81a6640d39c941dea96cc8c27", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["f8bc43f9c30d70a6bf74e998d6ebf544da279beb", "0db190cd92efa79527fa254a24da8fe6c3f70180"], "nameRev": "ab6ff7bce7db98e81a6640d39c941dea96cc8c27 tags/3.0.0.M2~1030", "commitMessage": "Merge pull request #861 from tuohai666/dev\n\nfor #858 the encoding issue", "commitDateTime": "2018-05-23 18:38:14", "authoredDateTime": "2018-05-23 18:38:14", "commitGitStats": [{"filePath": "sharding-proxy/src/main/resources/bin/start.bat", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fab74a0ffce9cf45bdc510b7567baba91b2c05dd", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["fced903fce40658b21237dad6e0ae82ed73e7430", "d7464a4458805d782e1b80b917bf46008b91fb22"], "nameRev": "fab74a0ffce9cf45bdc510b7567baba91b2c05dd tags/3.0.0.M2~1025", "commitMessage": "Merge pull request #863 from tuohai666/dev\n\nfor #858 return a ErrPacket when a NullPointerException is fired", "commitDateTime": "2018-05-23 21:54:04", "authoredDateTime": "2018-05-23 21:54:04", "commitGitStats": [{"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/common/SQLExecuteBackendHandler.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLExecuteBackendHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.backend.common.SQLExecuteBackendHandler.execute()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "sharding-opentracing mvn test fail", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\n\r\n### Which version of Sharding-Sphere do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Sphere\u7248\u672c\u4e3a\uff1f\uff09\r\n3.0.0.M1 , branch : master , mac , jdk1.8.0_151\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\nIs there any different between (run mvn test on module) and (run on single Class) ?\r\nmvn test pass\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\nRun ExecuteEventListenerTest's single method test , pass\r\nRun ExecuteEventListenerTest's single class test , pass\r\nRun AllTests.java in module sharding-opentracing , pass\r\n\r\n**Run mvn test on module sharding-opentracing , fail**\r\n\r\nthe report is :\r\n-------------------------------------------------------\r\n T E S T S\r\n-------------------------------------------------------\r\nRunning io.shardingsphere.opentracing.ShardingJDBCTracerTest\r\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.472 sec\r\nRunning io.shardingsphere.opentracing.config.ConfigurationLoaderTest\r\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 sec\r\nRunning io.shardingsphere.opentracing.ExecuteEventListenerTest\r\nTests run: 2, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 0.511 sec <<< FAILURE!\r\nassertMultiStatement(io.shardingsphere.opentracing.ExecuteEventListenerTest)  Time elapsed: 0.437 sec  <<< FAILURE!\r\njava.lang.AssertionError: \r\nExpected: is <3>\r\n     but: was <7>\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\r\n\tat org.junit.Assert.assertThat(Assert.java:956)\r\n\tat org.junit.Assert.assertThat(Assert.java:923)\r\n\tat io.shardingsphere.opentracing.ExecuteEventListenerTest.assertMultiStatement(ExecuteEventListenerTest.java:92)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\r\n\tat org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\r\n\tat org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\r\n\tat org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:80)\r\n\tat org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:724)\r\n\tat org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAllProviders(AbstractSurefireMojo.java:682)\r\n\tat org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:648)\r\n\tat org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:586)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)\r\n\tat org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:309)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:194)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:107)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:955)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:290)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:194)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n\tat org.codehaus.classworlds.Launcher.main(Launcher.java:47)\r\n\r\nassertSingleStatement(io.shardingsphere.opentracing.ExecuteEventListenerTest)  Time elapsed: 0.001 sec  <<< FAILURE!\r\njava.lang.AssertionError: \r\nExpected: is <2>\r\n     but: was <4>\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\r\n\tat org.junit.Assert.assertThat(Assert.java:956)\r\n\tat org.junit.Assert.assertThat(Assert.java:923)\r\n\tat io.shardingsphere.opentracing.ExecuteEventListenerTest.assertSingleStatement(ExecuteEventListenerTest.java:74)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\r\n\tat org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\r\n\tat org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\r\n\tat org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:80)\r\n\tat org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:724)\r\n\tat org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAllProviders(AbstractSurefireMojo.java:682)\r\n\tat org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:648)\r\n\tat org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:586)\r\n\tat org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154)\r\n\tat org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)\r\n\tat org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)\r\n\tat org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:309)\r\n\tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:194)\r\n\tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:107)\r\n\tat org.apache.maven.cli.MavenCli.execute(MavenCli.java:955)\r\n\tat org.apache.maven.cli.MavenCli.doMain(MavenCli.java:290)\r\n\tat org.apache.maven.cli.MavenCli.main(MavenCli.java:194)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n\tat org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n\tat org.codehaus.classworlds.Launcher.main(Launcher.java:47)\r\n\r\n\r\nResults :\r\n\r\nFailed tests:   assertMultiStatement(io.shardingsphere.opentracing.ExecuteEventListenerTest): (..)\r\n  assertSingleStatement(io.shardingsphere.opentracing.ExecuteEventListenerTest): (..)\r\n\r\nTests run: 6, Failures: 2, Errors: 0, Skipped: 0\r\n\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\nRun mvn test on module sharding-opentracing\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\n\r\nCode should based on https://github.com/sharding-sphere/sharding-sphere-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/sharding-sphere/sharding-sphere-example\uff09\r\n", "url": "https://github.com/apache/shardingsphere/issues/854", "user": "hqq2023623", "labels": ["bug"], "created": "2018-05-21 02:26:55", "closed": "2018-05-21 10:53:08", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "typo in doc", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\n\r\n### Which version of Sharding-Sphere do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Sphere\u7248\u672c\u4e3a\uff1f\uff09\r\nhttp://shardingsphere.io/document/cn/features/sharding/concept/process/\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\n3.1.1 \u6838\u5fc3\u6982\u5ff5 -> \u6d41\u7a0b\r\n\u542f\u793a \u5e94\u6539\u4e3a \u8d77\u59cb\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\n![image](https://user-images.githubusercontent.com/6971152/40212670-b2370f6c-5a83-11e8-9559-c82972d47b05.png)\r\n\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\n\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\n\r\nCode should based on https://github.com/sharding-sphere/sharding-sphere-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/sharding-sphere/sharding-sphere-example\uff09\r\n", "url": "https://github.com/apache/shardingsphere/issues/846", "user": "hqq2023623", "labels": ["bug"], "created": "2018-05-18 02:11:40", "closed": "2018-05-18 08:31:22", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Spring cloud \u5065\u5eb7\u68c0\u67e5\u663e\u793aMysql\u72b6\u6001\u4e3adown", "body": "## \u73af\u5883\uff1a\r\nspring boot \uff1a1.5.9.RELEASE\r\nspring cloud\uff1aEdgware.SR3\r\nsharding-jdbc\uff1a2.0.3\r\n## \u95ee\u9898\uff1a\r\n\u5f53\u5f00\u542fspring cloud \u7684\u5065\u5eb7\u68c0\u67e5\u7684\u662f\u65f6\u5019\uff0c\u5fc3\u8df3\u7ebf\u7a0b\u4f1a\u5411mysql \u53d1\u9001\u4e00\u6761sql\u8bed\u53e5\r\n```sql\r\nselect 1\r\n```\r\n\u4ee5\u6b64\u6765\u786e\u8ba4\u6570\u636e\u5e93\u7684\u5065\u5eb7\u60c5\u51b5\r\n\u5728\u7ebf\u4e0a\u73af\u5883\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e0b\u60c5\u51b5\uff08\u8bbf\u95ee/health\u63a5\u53e3\uff09\r\n```json\r\n{\r\n    \"status\": \"DOWN\",\r\n    \"database\": \"MySQL\",\r\n    \"error\": \"org.springframework.dao.IncorrectResultSizeDataAccessException: Incorrect result size: expected 1, actual 11\"\r\n}\r\n```\r\n\r\n\u4f46\u662f\u7531\u4e8e\u6211\u5206\u4e8611\u4e2a\u5e93\uff0c\u7136\u540e\u8fd9\u6761\u8bed\u53e5\u8fd4\u56de\u4e8611\u4e2a\u7ed3\u679c\uff0c\u5bfc\u81f4\u5065\u5eb7\u68c0\u67e5\u4e0d\u901a\u8fc7", "url": "https://github.com/apache/shardingsphere/issues/837", "user": "Pramy", "labels": ["bug"], "created": "2018-05-16 10:35:46", "closed": "2018-05-17 17:48:36", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Endless loop for bad SQL like: SELECT * FROM table WHERE id IN ()", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\nsj\u6b7b\u5faa\u73af\uff0c\u5bfc\u81f4\u5185\u5b58\u6ea2\u51fa\r\n### Which version of Sharding-Sphere do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Sphere\u7248\u672c\u4e3a\uff1f\uff09\r\n2.1\u7248\u672c\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\n\u867d\u7136sql\u4e0d\u5bf9\uff0c\u4f46\u662fsj\u4e0d\u80fd\u6b7b\u5faa\u73af\uff0c\u5bfc\u81f4\u5185\u5b58\u6ea2\u51fa\uff0c\u5f71\u54cd\u5176\u4ed6\u4e1a\u52a1\uff0csql\u62a5\u9519\u5c31\u884c\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\n\u6b7b\u5faa\u73af\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\nselect * from table where id in ();\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\n\r\n![image](https://user-images.githubusercontent.com/30542968/39973315-f4e50642-5750-11e8-8523-73d4feedbd22.png)\r\nCode should based on https://github.com/sharding-sphere/sharding-sphere-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/sharding-sphere/sharding-sphere-example\uff09\r\n", "url": "https://github.com/apache/shardingsphere/issues/827", "user": "liuqianzhong", "labels": ["bug"], "created": "2018-05-14 00:29:59", "closed": "2018-05-14 00:57:01", "commits": {"9ff61f8c53a53bf5bdf5197376bc67c73b76b144": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9ff61f8c53a53bf5bdf5197376bc67c73b76b144", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["0adfec8cf1ea00208a3aa9c5d7c270a98f761bff"], "nameRev": "9ff61f8c53a53bf5bdf5197376bc67c73b76b144 tags/3.0.0.M1~24", "commitMessage": "for #827: add release notes\n", "commitDateTime": "2018-05-14 09:00:17", "authoredDateTime": "2018-05-14 09:00:17", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9ff61f8c53a53bf5bdf5197376bc67c73b76b144"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "NOT IN parse exception", "body": "### Which version of Sharding-Jdbc do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Jdbc\u7248\u672c\u4e3a\uff1f\uff09\r\n2.0.3\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\nSQL\r\n\r\nselect\r\n        create_time createTime ,\r\n        enterprise_id enterpriseId,\r\n        interval_log_id intervalLogId ,\r\n        interval_type intervalType ,\r\n        p_member_integral_name pmemberIntegralName ,\r\n        member_integral_name memberIntegralName ,\r\n        remark remark ,\r\n        interval_remark   intervalRemark ,\r\n        interval_inout   intervalInout ,\r\n        interval_history  intervalHistory,\r\n        interval_status  intervalStatus,\r\n        frozen_status  frozenStatus,\r\n        unfreeze_time  unfreezeTime,\r\n        interval_effect intervalEffect,\r\n        open_store_id openStoreId ,\r\n        main_part_store_id mainPartStoreId  ,\r\n        main_store_id mainStoreId  \r\n    from\r\n        tab_gic_member_interval_log   \r\n    where\r\n        member_id in ('ff80808158016b390158041bfc7001eb','ff80808157dcf78e0157e67dbd611b28') and interval_history !=0  and p_member_integral_code not in('1000','1001') \r\n    order by create_time desc\r\n\r\n\u5206\u7247\u7684\u67e5\u8be2\u7ed3\u679c\u6b63\u786e\u7684\u6309\u7167create_time\u8fdb\u884c\u6392\u5e8f\r\n\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\n\u5e76\u6ca1\u6709\u6309\u7167\u65f6\u95f4\u6392\u5e8f\r\n\r\nsql\u89e3\u6790\u65e5\u5fd7\u5982\u4e0b\uff1a\r\n2018-05-07 11:48:21,021 INFO  main Sharding-JDBC-SQL: SQLStatement: \r\nSelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tab_gic_member_interval_log, alias=Optional.of(log))]), conditions=Conditions(conditions={Column(name=member_id, tableName=tab_gic_member_interval_log)=Condition(column=Column(name=member_id, tableName=tab_gic_member_interval_log), operator=IN, positionValueMap={0=ff80808158016b390158041bfc7001eb, 1=ff80808157dcf78e0157e67dbd611b28}, positionIndexMap={})}), \r\nsqlTokens=[TableToken(beginPosition=765, originalLiterals=tab_gic_member_interval_log)], parametersIndex=0)), \r\ncontainStar=false, selectListLastPosition=752, groupByLastPosition=0, \r\nitems=[CommonSelectItem(expression=log.interval_effect, alias=Optional.of(intervalEffect)), CommonSelectItem(expression=log.interval_type, alias=Optional.of(intervalType)), CommonSelectItem(expression=log.interval_history, alias=Optional.of(intervalHistory)), CommonSelectItem(expression=log.create_time, alias=Optional.of(createTime)), CommonSelectItem(expression=log.unfreeze_time, alias=Optional.of(unfreezeTime)), CommonSelectItem(expression=log.member_integral_name, alias=Optional.of(memberIntegralName)), CommonSelectItem(expression=log.remark, alias=Optional.of(remark)), CommonSelectItem(expression=log.interval_log_id, alias=Optional.of(intervalLogId)), CommonSelectItem(expression=log.p_member_integral_name, alias=Optional.of(pmemberIntegralName)), CommonSelectItem(expression=log.interval_remark, alias=Optional.of(intervalRemark)), CommonSelectItem(expression=log.enterprise_id, alias=Optional.of(enterpriseId)), CommonSelectItem(expression=log.interval_inout, alias=Optional.of(intervalInout)), CommonSelectItem(expression=log.main_part_store_id, alias=Optional.of(mainPartStoreId)), CommonSelectItem(expression=log.open_store_id, alias=Optional.of(openStoreId)), CommonSelectItem(expression=log.main_store_id, alias=Optional.of(mainStoreId)), CommonSelectItem(expression=log.interval_status, alias=Optional.of(intervalStatus)), CommonSelectItem(expression=log.frozen_status, alias=Optional.of(frozenStatus))], groupByItems=[], orderByItems=[], limit=null, subQueryStatement=null)\r\n\r\n\u5982\u679csql\u8bed\u53e5\u6539\u4e3a\u4ee5\u4e0b\u683c\u5f0f\uff1a\r\n\r\nselect\r\n        create_time createTime ,\r\n        enterprise_id enterpriseId,\r\n        interval_log_id intervalLogId ,\r\n        interval_type intervalType ,\r\n        p_member_integral_name pmemberIntegralName ,\r\n        member_integral_name memberIntegralName ,\r\n        remark remark ,\r\n        interval_remark   intervalRemark ,\r\n        interval_inout   intervalInout ,\r\n        interval_history  intervalHistory,\r\n        interval_status  intervalStatus,\r\n        frozen_status  frozenStatus,\r\n        unfreeze_time  unfreezeTime,\r\n        interval_effect intervalEffect,\r\n        open_store_id openStoreId ,\r\n        main_part_store_id mainPartStoreId  ,\r\n        main_store_id mainStoreId  \r\n    from\r\n        tab_gic_member_interval_log   \r\n    where\r\n        member_id in ('ff80808158016b390158041bfc7001eb','ff80808157dcf78e0157e67dbd611b28') and interval_history !=0  and p_member_integral_code !='1000' and p_member_integral_code!='1001'\r\n\u5219\u80fd\u83b7\u5f97\u6b63\u5e38\u7ed3\u679c\uff0c\u5176\u89e3\u6790\u65e5\u5fd7\u5982\u4e0b\uff1a\r\n\r\n\r\n2018-05-07 11:53:58,058 INFO  main Sharding-JDBC-SQL: SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tab_gic_member_interval_log, alias=Optional.absent())]), conditions=Conditions(conditions={Column(name=member_id, tableName=tab_gic_member_interval_log)=Condition(column=Column(name=member_id, tableName=tab_gic_member_interval_log), operator=IN, positionValueMap={0=ff80808158016b390158041bfc7001eb, 1=ff80808157dcf78e0157e67dbd611b28}, positionIndexMap={})}), sqlTokens=[TableToken(beginPosition=697, originalLiterals=tab_gic_member_interval_log)], parametersIndex=0)), containStar=false, selectListLastPosition=684, groupByLastPosition=884, items=[CommonSelectItem(expression=unfreeze_time, alias=Optional.of(unfreezeTime)), CommonSelectItem(expression=interval_log_id, alias=Optional.of(intervalLogId)), CommonSelectItem(expression=interval_inout, alias=Optional.of(intervalInout)), CommonSelectItem(expression=p_member_integral_name, alias=Optional.of(pmemberIntegralName)), CommonSelectItem(expression=frozen_status, alias=Optional.of(frozenStatus)), CommonSelectItem(expression=member_integral_name, alias=Optional.of(memberIntegralName)), CommonSelectItem(expression=enterprise_id, alias=Optional.of(enterpriseId)), CommonSelectItem(expression=interval_type, alias=Optional.of(intervalType)), CommonSelectItem(expression=remark, alias=Optional.of(remark)), CommonSelectItem(expression=create_time, alias=Optional.of(createTime)), CommonSelectItem(expression=interval_remark, alias=Optional.of(intervalRemark)), CommonSelectItem(expression=open_store_id, alias=Optional.of(openStoreId)), CommonSelectItem(expression=interval_effect, alias=Optional.of(intervalEffect)), CommonSelectItem(expression=main_store_id, alias=Optional.of(mainStoreId)), CommonSelectItem(expression=main_part_store_id, alias=Optional.of(mainPartStoreId)), CommonSelectItem(expression=interval_history, alias=Optional.of(intervalHistory)), CommonSelectItem(expression=interval_status, alias=Optional.of(intervalStatus))], groupByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(create_time), type=ASC, nullOrderType=ASC, index=-1, alias=Optional.of(createTime))], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(create_time), type=DESC, nullOrderType=ASC, index=-1, alias=Optional.of(createTime))], limit=null, subQueryStatement=null)\r\n\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/806", "user": "tiuuff", "labels": ["bug"], "created": "2018-05-07 06:23:28", "closed": "2018-05-10 11:24:35", "commits": {"45c3c199eb8229118ca44499569c8499b7cd5278": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "45c3c199eb8229118ca44499569c8499b7cd5278", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["db0382189d5d776a521345e7742abd001ab70376"], "nameRev": "45c3c199eb8229118ca44499569c8499b7cd5278 tags/3.0.0.M1~49", "commitMessage": "for #806 update release notes\n", "commitDateTime": "2018-05-10 19:32:14", "authoredDateTime": "2018-05-10 19:32:14", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["45c3c199eb8229118ca44499569c8499b7cd5278"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Proxy raised an out of bound exception", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\n\r\n### Which version of Sharding-Jdbc do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Jdbc\u7248\u672c\u4e3a\uff1f\uff09\r\ndev\r\n\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\nRead data correctly from the ByteBuf of sharding-proxy.\r\n\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\n[WARN ] 17:20:14.713 [nioEventLoopGroup-5-3] i.n.u.c.AbstractEventExecutor - A task raised an exception. Task: io.shardingjdbc.proxy.frontend.mysql.MySQLFrontendHandler$1@10d19d69\r\njava.lang.IndexOutOfBoundsException: readerIndex(1040) + length(1) exceeds writerIndex(17): PooledUnsafeDirectByteBuf(ridx: 0, widx: 17, cap: 2048)\r\n\tat io.netty.buffer.AbstractByteBuf.checkReadableBytes0(AbstractByteBuf.java:1401) ~[netty-buffer-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.netty.buffer.AbstractByteBuf.readByte(AbstractByteBuf.java:707) ~[netty-buffer-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.shardingjdbc.proxy.transport.mysql.packet.MySQLPacketPayload.readInt1(MySQLPacketPayload.java:51) ~[classes/:na]\r\n\tat io.shardingjdbc.proxy.frontend.mysql.MySQLFrontendHandler$1.run(MySQLFrontendHandler.java:69) ~[classes/:na]\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) [netty-common-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) [netty-transport-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) [netty-common-4.1.16.Final.jar:4.1.16.Final]\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) [netty-common-4.1.16.Final.jar:4.1.16.Final]\r\n\tat java.lang.Thread.run(Thread.java:748) [na:1.8.0_162]\r\n\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\nThis Exception bust randomly, but not difficult to be reproduced by continuously send message to sharding-proxy for not a very long time.\r\n\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\nhttps://github.com/shardingjdbc/sharding-proxy-example\r\n\r\nCode should based on https://github.com/shardingjdbc/sharding-jdbc-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/shardingjdbc/sharding-jdbc-example\uff09\r\n", "url": "https://github.com/apache/shardingsphere/issues/750", "user": "tuohai666", "labels": ["bug"], "created": "2018-04-21 09:52:42", "closed": "2018-04-24 02:56:41", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Unexpected slave datasource routing result when using Round-robin load-balance algorithm in Mybatis", "body": "\r\n**org.apache.ibatis.executor.statement.PreparedStatementHandler**.query\r\n![image](https://user-images.githubusercontent.com/11692089/38844890-e7d54fa4-4227-11e8-9bcf-80c79dacc87e.png)\r\n\r\nps.execute(); \u4f1a\u8c03\u7528\u4e00\u6b21 MasterSlaveLoadBalanceAlgorithm.getDataSource\r\n\r\n\u8fd9\u662f\u51fd\u6570\u8c03\u7528\u6808\r\n![image](https://user-images.githubusercontent.com/11692089/38844947-293b8d28-4228-11e8-93ba-6ab3e8819197.png)\r\n----------\r\nreturn resultSetHandler.<E> handleResultSets(ps);  \u4e5f\u4f1a\u8c03\u7528 MasterSlaveLoadBalanceAlgorithm.getDataSource\r\n\u8fd9\u662f\u51fd\u6570\u8c03\u7528\u6808\r\n\r\n![image](https://user-images.githubusercontent.com/11692089/38845240-4e1d8726-4229-11e8-97b0-9b9bfa273177.png)\r\n-----\r\n\u5c31\u662f \u4e00\u6b21 \u6570\u636e\u64cd\u4f5c \u4f1a\u8ba9 RoundBin \u7684  \u8ba1\u6570 \u589e\u52a02 \r\n\u4e00\u822c\u90fd\u662f \u7528   id  & ((1<< x) - 1)    \u5c31\u4f1a \uff5e\uff5e\r\n\r\n\u8fd9\u95ee\u9898 \u6015\u662f\u4fee\u590d\u4e0d\u4e86\u5427\uff5e  \r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/735", "user": "shulyLi", "labels": ["bug"], "created": "2018-04-17 02:20:00", "closed": "2018-05-11 05:28:39", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "SelectItem should be annotated by EqualsAndHashCode", "body": "I found that there are several subclasses implement  `SelectItem`. They are used as container elements in  `Set` collection(io.shardingjdbc.core.parsing.parser.sql.dql.select.SelectStatement#items), but I only see the `AggregationSelectItem` has `EqualsAndHashCode` annotation. the others are forgotten?", "url": "https://github.com/apache/shardingsphere/issues/648", "user": "hongfuli", "labels": ["bug", "volunteer wanted"], "created": "2018-03-16 08:32:35", "closed": "2018-03-18 01:59:32", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "When aliases in SELECT ITEMS correspond to the real column names of GROUP BY or ORDER BY, there is no need to generate derived columns", "body": "for example: \r\nThe SQL like \r\n\r\n```sql\r\nSELECT o.user_id uid FROM t_order o GROUP BY o.user_id ORDER BY o.user_id\r\n```\r\n\r\nshould not add derived column, sharding-jdbc should match alias and item.", "url": "https://github.com/apache/shardingsphere/issues/646", "user": "terrymanu", "labels": ["bug"], "created": "2018-03-16 03:52:21", "closed": "2018-03-16 03:59:41", "commits": {"cb17dc3e406c2d2a7b8d83f2b825a625031e5eb0": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cb17dc3e406c2d2a7b8d83f2b825a625031e5eb0", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["50e9459f10e1b180d1149e66e2e4da988296086f"], "nameRev": "cb17dc3e406c2d2a7b8d83f2b825a625031e5eb0 tags/3.0.0.M1~435", "commitMessage": "fix at #646\n", "commitDateTime": "2018-03-16 11:59:05", "authoredDateTime": "2018-03-16 11:59:05", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/GroupByClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select_group_by.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/masterslave/expect/select_group_by/{SelectItemWithAliasAndMismatchOrderByAndGroupByItems.xml => SelectItemWithAliasAndMatchOrderByAndGroupByItems.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/db/expect/select_group_by/SelectItemWithAliasAndMatchOrderByAndGroupByItems.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/db/expect/select_group_by/SelectItemWithAliasAndMismatchOrderByAndGroupByItems.xml", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/dbtbl/expect/select_group_by/SelectItemWithAliasAndMatchOrderByAndGroupByItems.xml", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/dbtbl/expect/select_group_by/SelectItemWithAliasAndMismatchOrderByAndGroupByItems.xml", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/masterslave/expect/select_group_by/SelectItemWithAliasAndMatchOrderByAndGroupByItems.xml", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/masterslave/expect/select_group_by/SelectItemWithAliasAndMismatchOrderByAndGroupByItems.xml", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/tbl/expect/select_group_by/SelectItemWithAliasAndMatchOrderByAndGroupByItems.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/tbl/expect/select_group_by/SelectItemWithAliasAndMismatchOrderByAndGroupByItems.xml", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_group_by.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GroupByClauseParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.parser.clause.GroupByClauseParser.addGroupByItem(io.shardingjdbc.core.parsing.parser.expression.SQLExpression,io.shardingjdbc.core.parsing.parser.sql.dql.select.SelectStatement)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cb17dc3e406c2d2a7b8d83f2b825a625031e5eb0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause"], "changesInPackagesSPOON": ["io.shardingjdbc.core.parsing.parser.clause.GroupByClauseParser.addGroupByItem(io.shardingjdbc.core.parsing.parser.expression.SQLExpression,io.shardingjdbc.core.parsing.parser.sql.dql.select.SelectStatement)"]}, {"title": "GroupByClauseParser\u89e3\u6790\u95ee\u9898", "body": "io.shardingjdbc.core.parsing.parser.clause.GroupByClauseParser#addGroupByItem\r\n\u7b2c84\u884c\u662f\u4e0d\u662f\u7b14\u8bef\u5199\u9519\u4e86\r\n`SQLUtil.getExactlyValue(sqlPropertyExpression.getOwner() + \".\" + SQLUtil.getExactlyValue(sqlPropertyExpression.getName()`\r\n\u6539\u6210 `SQLUtil.getExactlyValue(sqlPropertyExpression.getOwner().getName() + \".\" + SQLUtil.getExactlyValue(sqlPropertyExpression.getName()`\r\n\u4f46\u662f\u6211\u6539\u8fc7\u6765\u540e\uff0cparsing\u6a21\u5757\u6d4b\u8bd5\u7528\u4f8b\u6ca1\u95ee\u9898\uff0c\u5176\u5b83\u96c6\u6210\u5355\u5143\u6d4b\u8bd5\u8dd1\u4e0d\u8fc7", "url": "https://github.com/apache/shardingsphere/issues/645", "user": "hongfuli", "labels": ["bug", "duplicate"], "created": "2018-03-16 02:50:05", "closed": "2018-03-16 03:59:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Support transaction isolation on JDBC", "body": "version: 2.0.3\r\n\u53d1\u73b0\u5728sharding-jdbc\u62ff\u5230\u7684\u8fde\u63a5 \u53d6\u5230\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u90fd\u662f 1\r\n\u4f46\u6211\u4eec\u7684mysql\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u662f4\uff08REPEATABLE_READ\uff09\r\n\u90a3\u8fd9\u79cd\u60c5\u51b5\u5728\u4e0espring\u96c6\u6210\u65f6\u662f\u5426\u5f97\u660e\u786e\u6307\u5b9a\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u5426\u5219\u662f\u6ca1\u529e\u6cd5\u53d6\u5230mysql\u8bbe\u7f6e\u7684\u9694\u79bb\u7ea7\u522b\u7684\uff1f", "url": "https://github.com/apache/shardingsphere/issues/629", "user": "ztgoto", "labels": ["bug"], "created": "2018-03-05 10:58:46", "closed": "2018-05-13 16:49:05", "commits": {"96da988c0b369ae634d107beae751d637f795617": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "7351bb5622909b065e1f61e230f1d7265366930b": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 69.00027777777778, "commitsDetails": [{"commitHash": "96da988c0b369ae634d107beae751d637f795617", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d368e6a612680e1a11c01cf8858f378c92866914", "c9e84ed617c2cb5d8d482147ee8b742b84f2ee0f"], "nameRev": "96da988c0b369ae634d107beae751d637f795617 tags/3.0.0.M1~27", "commitMessage": "Merge pull request #826 from haocao/dev\n\nFixed #629.", "commitDateTime": "2018-05-14 00:49:04", "authoredDateTime": "2018-05-14 00:49:04", "commitGitStats": [{"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/adapter/ConnectionAdapterTest.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractConnectionAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.adapter.AbstractConnectionAdapter.getTransactionIsolation()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConnectionAdapterTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.adapter.ConnectionAdapterTest.assertGetTransactionIsolation()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7351bb5622909b065e1f61e230f1d7265366930b", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["96da988c0b369ae634d107beae751d637f795617"], "nameRev": "7351bb5622909b065e1f61e230f1d7265366930b tags/3.0.0.M1~26", "commitMessage": "for #629: add release notes\n", "commitDateTime": "2018-05-14 00:53:55", "authoredDateTime": "2018-05-14 00:53:55", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7351bb5622909b065e1f61e230f1d7265366930b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Support data type jsonb for PostgreSQL", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\u5f00\u6e90\u4e0d\u6613\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u7cbe\u529b\u653e\u5728\u5b8c\u6210\u65b0\u529f\u80fd\u548c\u89e3\u51b3\u6709\u4ef7\u503c\u7684\u95ee\u9898\u4e0a\uff0c\u4e3a\u4e86\u8ba9\u5927\u5bb6\u7684\u914d\u5408\u66f4\u5177\u6709\u6548\u7387\uff0c\u8bf7\u586b\u5199\u4ee5\u4e0b\u5217\u51fa\u7684\u5168\u90e8\u95ee\u9898\r\n\r\n\u8bf7\u95eesharding-jdbc\u7684sql parser\u662f\u5426\u652f\u6301postgresql\u7684\u6570\u636e\u7c7b\u578bgeography(Point,4326)\u4ee5\u53cajsonb ?\r\n\u5b98\u65b9\u6587\u6863http://shardingjdbc.io/docs_cn/01-start/sql-supported/\u5e76\u6ca1\u6709\u660e\u786e\u8bf4\u660e\r\n\r\n\u4f46\u662f\u5b9e\u9645\u6267\u884c\u4e0b\u6765\u5bf9\u4e8e\u8fd9\u4e2asql\u7684DMLStatement\u5982\u4e0b\uff0cuser_new_id\u7684positonIndex\u5e76\u4e0d\u5bf9\r\nupdate t_order\r\n        set start_time=?,\r\n        status=0,\r\n        start_point=ST_GeographyFromText('SRID=4326;POINT('||?||' '||?||')'),\r\n        rule=?::jsonb,\r\n        discount_type=?,\r\n        order_type=?\r\n        where\r\n        user_new_id = ?\r\n        AND create_time=?\r\n        AND guid=?\r\n\r\n\r\nDMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=t_order, alias=Optional.absent())]), conditions=Conditions(conditions={Column(name=user_new_id, tableName=t_order)=Condition(column=Column(name=user_new_id, tableName=t_order), operator=EQUAL, positionValueMap={}, positionIndexMap={0=4}), Column(name=create_time, tableName=t_order)=Condition(column=Column(name=create_time, tableName=t_order), operator=EQUAL, positionValueMap={}, positionIndexMap={0=5}), Column(name=guid, tableName=t_order)=Condition(column=Column(name=guid, tableName=t_order), operator=EQUAL, positionValueMap={}, positionIndexMap={0=6})}), sqlTokens=[TableToken(beginPosition=7, originalLiterals=t_order)], parametersIndex=7))\r\n\r\n\r\n### Which version of Sharding-Jdbc do you using?\uff08\u60a8\u4f7f\u7528\u7684Sharding-Jdbc\u7248\u672c\u4e3a\uff1f\uff09\r\n2.0.2\r\n### Expected behavior \uff08\u60a8\u9884\u671f\u7684\u7ed3\u679c\u662f\uff09\r\n\r\n### Actual behavior \uff08\u5b9e\u9645\u8fd0\u884c\u7684\u7ed3\u679c\u662f\uff09\r\n\r\n### Steps to reproduce the behavior \uff08\u53ef\u91cd\u73b0\u95ee\u9898\u7684\u64cd\u4f5c\u6b65\u9aa4\uff09\r\n\r\n### Please provide the reproduce example codes (such as github link)\uff0cotherwise we will label the issue as Invalid and close it.\uff08\u4e3a\u4e86\u8282\u7701\u590d\u73b0\u95ee\u9898\u7684\u65f6\u95f4\uff0c\u8bf7\u52a1\u5fc5\u63d0\u4f9b\u53ef\u91cd\u73b0\u7684\u4ee3\u7801\uff0c\u5426\u5219\u6211\u4eec\u4f1a\u5c06issue\u76f4\u63a5\u6807\u8bb0\u4e3ainvalid\u5e76\u5173\u95ed\uff09\r\n\r\nCode should based on https://github.com/shardingjdbc/sharding-jdbc-example\r\n\uff08\u4ee3\u7801\u8bf7\u57fa\u4e8e https://github.com/shardingjdbc/sharding-jdbc-example\uff09\r\n", "url": "https://github.com/apache/shardingsphere/issues/628", "user": "sagkanon", "labels": ["bug"], "created": "2018-03-05 07:37:26", "closed": "2018-04-11 01:47:54", "commits": {"7d877374095a0449732d32de9a9cc3c2447e7582": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "c66e08cf6b9b23f33c5e64ad111cbb9681b65f3f": {"commitGHEventType": "referenced", "commitUser": "haocao"}}, "ttf": 36.000277777777775, "commitsDetails": [{"commitHash": "7d877374095a0449732d32de9a9cc3c2447e7582", "commitGHEventType": "referenced", "commitUser": "haocao", "commitParents": ["699b06bd965d00ec5746962c1037f7865d078c42"], "nameRev": "7d877374095a0449732d32de9a9cc3c2447e7582 tags/3.0.0.M1~294", "commitMessage": "For #628: prepared update sql support :: grammars test cases.\n", "commitDateTime": "2018-04-02 07:19:34", "authoredDateTime": "2018-04-02 07:19:34", "commitGitStats": [{"filePath": "sharding-core/src/test/resources/parser/update.xml", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "sharding-core/src/test/resources/yaml/parser-rule.yaml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-sql-test/src/main/resources/sql/dml/update.xml", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c66e08cf6b9b23f33c5e64ad111cbb9681b65f3f", "commitGHEventType": "referenced", "commitUser": "haocao", "commitParents": ["7d877374095a0449732d32de9a9cc3c2447e7582"], "nameRev": "c66e08cf6b9b23f33c5e64ad111cbb9681b65f3f tags/3.0.0.M1~293", "commitMessage": "For #628: add update sql support for :: grammars.\n", "commitDateTime": "2018-04-02 07:27:47", "authoredDateTime": "2018-04-02 07:27:47", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/UpdateSetItemsClauseParser.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-core/src/test/resources/parser/update.xml", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "UpdateSetItemsClauseParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.parser.clause.UpdateSetItemsClauseParser.skipsDoubleColon()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.parsing.parser.clause.UpdateSetItemsClauseParser.parseSetItem(io.shardingjdbc.core.parsing.parser.sql.dml.DMLStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7d877374095a0449732d32de9a9cc3c2447e7582", "c66e08cf6b9b23f33c5e64ad111cbb9681b65f3f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 0, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause"], "changesInPackagesSPOON": ["io.shardingjdbc.core.parsing.parser.clause.UpdateSetItemsClauseParser.parseSetItem(io.shardingjdbc.core.parsing.parser.sql.dml.DMLStatement)", "io.shardingjdbc.core.parsing.parser.clause.UpdateSetItemsClauseParser.skipsDoubleColon()"]}, {"title": "Support new line for YAML configuration", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n\u83b7\u53d6\u6570\u636e\u6e90\u6362\u884c\r\nString dataSources = propertyResolver.getProperty(\"names\");\r\n\r\n\r\n\u5efa\u8bae   OrchestrationSpringBootConfiguration\u6587\u4ef6\r\n\r\nline77\r\n\r\nString dataSources = propertyResolver.getProperty(\"names\");\r\n\r\n\u52a0\u4e00\u4e2a\u53bb\u7a7a\u683c\u5904\u7406\r\n\r\n\u6539\u4e3a  String dataSources = propertyResolver.getProperty(\"names\").trim();\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce the behavior\r\n\r\n### Please provide the reproduce example codes (such as github link)\r\n\r\nCode should based on https://github.com/shardingjdbc/sharding-jdbc-example\r\n", "url": "https://github.com/apache/shardingsphere/issues/577", "user": "olderzhou", "labels": ["bug"], "created": "2018-01-24 09:07:07", "closed": "2018-01-29 02:15:34", "commits": {"b0bd4ae1489b37be3c1a5ec06fb770b8ea31b0e1": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "b0bd4ae1489b37be3c1a5ec06fb770b8ea31b0e1", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["35521a2da3cb5242891ef0d0d5ecbec154845330", "4c0b501c46680be8727a007f0df960cced52bb2a"], "nameRev": "b0bd4ae1489b37be3c1a5ec06fb770b8ea31b0e1 tags/2.0.3~16", "commitMessage": "Merge pull request #583 from klaus20141002/dev\n\n\u4fee\u590dyaml\u6362\u884c\u5bfc\u81f4\u7684\u914d\u7f6e\u591a\u4e86\u7a7a\u683c\u95ee\u9898  @issue #577", "commitDateTime": "2018-01-29 11:09:38", "authoredDateTime": "2018-01-29 11:09:38", "commitGitStats": [{"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java", "insertions": 11, "deletions": 8, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrchestrationSpringBootConfiguration.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.orchestration.spring.boot.OrchestrationSpringBootConfiguration.setDataSourceMap(org.springframework.core.env.Environment)", "TOT": 5, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Oracle\u5206\u9875rowno\u7684\u95ee\u9898", "body": "\u4e0d\u77e5\u9053\u6709\u6ca1\u6709\u4eba\u63d0\u8fc7\u8fd9\u4e2a\u95ee\u9898\uff0c\u6ca1\u7ec6\u770bissue\r\nOracle\u7684\u5206\u9875  \u8def\u7531\u5230\u5404\u4e2a\u6570\u636e\u5e93\u6267\u884c\u7684SQL\u8bed\u53e5\u5728rownum\u7684\u503c\u9519\u8bef\uff0c\r\n\u6d4b\u8bd5\u73af\u5883\uff1aOracle\u5206\u5e93\uff08ds_0\u3001ds_1\u3001ds_2\uff09\r\n\u6211\u5728ParsingSQLRouter#router(String, List, SQLStatement)\u91cc\u9762\u6253\u5370\u4e86rewriteEngine.generateSQL()\u751f\u6210\u7684SQL\u8bed\u53e5\r\n\r\n1.\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6ca1\u6709\u95ee\u9898\r\n\r\n> \u8f93\u5165SQL : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE age=23 AND ROWNUM <= 20) table_alias WHERE table_alias.rowno >= 1\r\n\r\n\u8f93\u51fads_2 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE age=23 AND ROWNUM <= 20) table_alias WHERE table_alias.rowno >= 0\r\n\u8f93\u51fads_1 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE age=23 AND ROWNUM <= 20) table_alias WHERE table_alias.rowno >= 0\r\n\u8f93\u51fads_0 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE age=23 AND ROWNUM <= 20) table_alias WHERE table_alias.rowno >= 0\r\n\r\n2.\u8c03\u8f6c\u4e00\u4e0bwhere\u540e\u9762\u8ddf\u7740\u7684\u6761\u4ef6\u987a\u5e8f\uff0c\u4f1a\u51fa\u73b0rownum\u753120\u53d8\u6210220\r\n\r\n> \u8f93\u5165SQL : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE ROWNUM <= 20 AND age=23) table_alias WHERE table_alias.rowno >= 1\r\n\r\n\u8f93\u51fads_2 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE ROWNUM <= 220AND age=23) table_alias WHERE table_alias.rowno >= 0\r\n\u8f93\u51fads_1 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE ROWNUM <= 220AND age=23) table_alias WHERE table_alias.rowno >= 0\r\n\u8f93\u51fads_0 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE ROWNUM <= 220AND age=23) table_alias WHERE table_alias.rowno >= 0\r\n\r\n\r\n3.\u57281\u7684\u60c5\u51b5\u4e0b\u589e\u52a0order by\uff0c\u4f1a\u51fa\u73b02\u4e00\u6837\u7684\u60c5\u51b5\uff0crownum\u753120\u53d8\u6210220\r\n\r\n> \u8f93\u5165SQL: SELECT * FROM ( SELECT ROWNUM AS rowno, T.* FROM t_person T WHERE age=23 AND ROWNUM <= 20 ORDER BY account) table_alias WHERE table_alias.rowno >= 1\r\n\r\n\u8f93\u51fads_2 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* , account AS ORDER_BY_DERIVED_0 FROM t_person T WHERE age=23 AND ROWNUM <= 220ORDER BY account) table_alias WHERE table_alias.rowno >= 0\r\n\u8f93\u51fads_1 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* , account AS ORDER_BY_DERIVED_0 FROM t_person T WHERE age=23 AND ROWNUM <= 220ORDER BY account) table_alias WHERE table_alias.rowno >= 0\r\n\u8f93\u51fads_0 : SELECT * FROM ( SELECT ROWNUM AS rowno, T.* , account AS ORDER_BY_DERIVED_0 FROM t_person T WHERE age=23 AND ROWNUM <= 220ORDER BY account) table_alias WHERE table_alias.rowno >= 0\r\n\r\n\u770b\u4e0a\u53bb\u5e94\u8be5\u662frownum\u5982\u679c\u6709\u8ddf\u7740\u5176\u5b83\u7684\u4ec0\u4e48\u6761\u4ef6\u5c31\u4f1a\u51fa\u73b0rownum\u53d8\u5927\u7684\u60c5\u51b5", "url": "https://github.com/apache/shardingsphere/issues/569", "user": "onlymyme", "labels": ["bug"], "created": "2018-01-22 02:07:53", "closed": "2018-08-23 06:15:58", "commits": {"c9e73831ab6a371eead6e63c003636034f46aa1c": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 213.00027777777777, "commitsDetails": [{"commitHash": "c9e73831ab6a371eead6e63c003636034f46aa1c", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["cc6837dda34aaf617bbab68202ad4628a1a01f58", "3e4e4e1cc83d5fb57c6ea67c7648d1c3a35f93af"], "nameRev": "c9e73831ab6a371eead6e63c003636034f46aa1c tags/3.0.0.M3~156", "commitMessage": "Merge pull request #1171 from tuohai666/dev\n\n #569, fix RowCountToken beginPosition", "commitDateTime": "2018-08-23 14:15:57", "authoredDateTime": "2018-08-23 14:15:57", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/WhereClauseParser.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/test/resources/parser/select_pagination.xml", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/db/select_pagination_with_row_number_not_at_end.xml", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_pagination_with_row_number_not_at_end.xml", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/masterslave/select_pagination_with_row_number_not_at_end.xml", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/tbl/select_pagination_with_row_number_not_at_end.xml", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dql-integrate-test-cases.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select_pagination.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WhereClauseParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.clause.WhereClauseParser.parseRowCountCondition(io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement,boolean)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Add escape char for derived columns or alias when using MySQL", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n2.0.1\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/567", "user": "terrymanu", "labels": ["bug"], "created": "2018-01-17 10:50:40", "closed": "2018-01-17 10:59:44", "commits": {"06c1979b97235ab5cbe1de5f4cb5a407046ffff9": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "35f73ba6339cac157928da3f7512e9cf6a0d0456": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "cc0cb54e0e23e1973edd697c0675e7335c0a3672": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "06c1979b97235ab5cbe1de5f4cb5a407046ffff9", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["f5882ef696c8202bee03761ddccfd8b87cc0a41d"], "nameRev": "06c1979b97235ab5cbe1de5f4cb5a407046ffff9 tags/2.0.2~18", "commitMessage": "for #567\n", "commitDateTime": "2018-01-17 18:52:46", "authoredDateTime": "2018-01-17 18:52:46", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util/SQLUtil.java", "insertions": 17, "deletions": 9, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLUtil.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.util.SQLUtil.getOriginalValue(java.lang.String,io.shardingjdbc.core.constant.DatabaseType)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.util.SQLUtil.getOriginalValueForMySQLKeyword(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "35f73ba6339cac157928da3f7512e9cf6a0d0456", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["06c1979b97235ab5cbe1de5f4cb5a407046ffff9"], "nameRev": "35f73ba6339cac157928da3f7512e9cf6a0d0456 tags/2.0.2~17", "commitMessage": "add test case for #567\n", "commitDateTime": "2018-01-17 18:56:52", "authoredDateTime": "2018-01-17 18:56:52", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/util/SQLUtilTest.java", "insertions": 25, "deletions": 1, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLUtilTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.util.SQLUtilTest.assertGetExactlyValue()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.util.SQLUtilTest.assertGetOriginalValueForOtherDatabase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.util.SQLUtilTest.assertGetOriginalValueForMySQLWithoutKeyword()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.util.SQLUtilTest.assertGetOriginalValueForMySQLWithDefaultKeyword()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.util.SQLUtilTest.assertGetOriginalValueForMySQLWithMySQLKeyword()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "cc0cb54e0e23e1973edd697c0675e7335c0a3672", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["35f73ba6339cac157928da3f7512e9cf6a0d0456"], "nameRev": "cc0cb54e0e23e1973edd697c0675e7335c0a3672 tags/2.0.2~16", "commitMessage": "fixed #567\n", "commitDateTime": "2018-01-17 18:59:34", "authoredDateTime": "2018-01-17 18:59:34", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["06c1979b97235ab5cbe1de5f4cb5a407046ffff9", "35f73ba6339cac157928da3f7512e9cf6a0d0456", "cc0cb54e0e23e1973edd697c0675e7335c0a3672"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 9, "lines": 26, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6.0, "UPD": 1.0, "INS": 2.0, "MOV": 3.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util"], "changesInPackagesSPOON": ["io.shardingjdbc.core.util.SQLUtil.getOriginalValue(java.lang.String,io.shardingjdbc.core.constant.DatabaseType)", "io.shardingjdbc.core.util.SQLUtil.getOriginalValueForMySQLKeyword(java.lang.String)"]}, {"title": "Support parsing numbers beginning with minus and decimal (e.g. `-.12`)", "body": "**BUG**\r\n\r\n\u5f53\u524d\u6700\u65b0\u5206\u652f\u4e0a\uff0cio.shardingjdbc.core.parsing.lexer.Lexer\u4e2d\u4ee3\u7801\uff1a\r\n```java\r\nprivate boolean isNumberBegin() {\r\n        return CharType.isDigital(getCurrentChar(0)) || ('.' == getCurrentChar(0) && CharType.isDigital(getCurrentChar(1)) && !isIdentifierBegin(getCurrentChar(-1))\r\n                || ('-' == getCurrentChar(0) && ('.' == getCurrentChar(0) || CharType.isDigital(getCurrentChar(1)))));\r\n    }\r\n```\r\n\u6700\u540e\u4e00\u4e2a\u5224\u65ad\u8d1f\u6570\u7684\u903b\u8f91\uff0c\u5e94\u8be5\u662f `('-' == getCurrentChar(0) && ('.' == getCurrentChar(1) || CharType.isDigital(getCurrentChar(1))))`\uff0c\u624d\u80fd\u89e3\u6790\u51fa `-.12` \u8fd9\u79cd\u60c5\u51b5\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/559", "user": "hongfuli", "labels": ["bug"], "created": "2018-01-16 00:11:04", "closed": "2018-01-17 05:53:31", "commits": {"6edc7662147095a7ce44f6b93fe94631b3e87c5a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "6edc7662147095a7ce44f6b93fe94631b3e87c5a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["409c024c88704e88fc20ddcb31ec6f425a812558", "d2a84d5786f51d83c8a721daa493f75b577c90c3"], "nameRev": "6edc7662147095a7ce44f6b93fe94631b3e87c5a tags/2.0.2~25", "commitMessage": "Merge pull request #564 from hongfuli/bugfix_559\n\nFor issue #559", "commitDateTime": "2018-01-17 13:53:31", "authoredDateTime": "2018-01-17 13:53:31", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/Lexer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/lexer/LexerTest.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Lexer.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.lexer.Lexer.isNumberBegin()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LexerTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.lexer.LexerTest.assertNextTokenForNumber()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "When GROUP BY and ORDER BY aliases are inconsistent, stream merging should be used", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\nsharingJdbc1.5.0\r\n### Expected behavior\r\n\r\n### Actual behavior\r\nselect\u8bed\u53e5\u4e2d\uff0c\u5f53groupBy\u548corderBy\u7684\u5b57\u6bb5\u4e00\u6837\u65f6\uff0c\u4e5f\u4f1a\u51fa\u73b0\u5185\u5b58\u5f52\u5e76\u7684\u60c5\u51b5\uff0c\u62c9\u53d6\u5168\u90e8\u6570\u636e\u8fdb\u884cmerge\u3002\u7c7b\u4f3c\u4e0b\u9762\u7684SQL\uff1a\r\nSELECT\r\n\tco.id orderId,\r\n\tco.order_no orderNo,\r\n\tco.payer_type payerType,\r\n\tco.id AS GROUP_BY_DERIVED_0 \uff08\u8fd9\u4e2a\u662fSQL\u6539\u5199\u4e4b\u540e\uff0c\u8ffd\u52a0\u7684\u522b\u540d\uff0c\u548cselect\u5b9a\u4e49\u7684\u51b2\u7a81\uff0c\u5bfc\u81f4alias\u4e0d\u4e00\u81f4\uff09\r\nFROM\r\n\tt1 co\r\nLEFT JOIN t2 odt ON co.id = odt.order_id\r\nWHERE\r\n\tco.create_time BETWEEN '2018-01-01'\r\nAND '2018-01-15'\r\nGROUP BY\r\n\tco.id DESC\r\nORDER BY\r\n\tco.id DESC\r\n\r\n\u5b8c\u6574\u5b9e\u4f8bSQL\uff1a\r\nSELECT\r\n        co.id orderId,\r\n        co.order_no orderNo,\r\n        co.combo_name comboName,\r\n        co.combo_code comboCode,\r\n        co.buyer_id buyerId,\r\n        co.buyer_domain_id buyerDomainId,\r\n        co.buyer_name buyerName,\r\n        co.buyer_mobile buyerMobile,\r\n        co.buyer_real_name buyerRealName,\r\n        co.creator_id creatorId,\r\n        co.creator_name creatorName,\r\n        co.creator_work_no creatorWorkNo,\r\n        co.creator_real_name creatorRealName,\r\n        co.amount amount,\r\n        co.actual_amount actualAmount,\r\n        co.`status` `status`,\r\n        co.create_time createTime,\r\n        co.last_update_time updateTime,\r\n        co.creator_org_id orgId,\r\n        co.creator_org_name orgName,\r\n        co.pay_type payType,\r\n        co.payer_type payerType\r\n        FROM\r\n        combo_order co LEFT JOIN order_detail odt ON co.id = odt.order_id\r\n        WHERE\r\n        AND co.create_time between #{conditions.createTimeBegin} and #{conditions.createTimeEnd}\r\n        GROUP BY\r\n        co.id DESC\r\n        ORDER BY\r\n        co.id DESC LIMIT #{start},#{ps}\r\n### Steps to reproduce the behavior\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n", "url": "https://github.com/apache/shardingsphere/issues/557", "user": "wanghuanwei", "labels": ["bug"], "created": "2018-01-15 09:05:22", "closed": "2018-01-17 10:18:23", "commits": {"a35f887a6eebf17a1a32a43c0beb89a9f710b90d": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "87a54b066f8a17cdf8cb746613694bceae1adafa": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "e9935bafff0087cf48fd64888c76258dc201be0c": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "f5882ef696c8202bee03761ddccfd8b87cc0a41d": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "a35f887a6eebf17a1a32a43c0beb89a9f710b90d", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["c3e6e390cb4e564d1056ec6c67a136afe7ae51dd"], "nameRev": "a35f887a6eebf17a1a32a43c0beb89a9f710b90d tags/2.0.2~22", "commitMessage": "add test case for #557\n", "commitDateTime": "2018-01-17 16:36:03", "authoredDateTime": "2018-01-17 16:35:46", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select_group_by.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/masterslave/expect/select_group_by/SelectItemWithAliasAndMismatchOrderByAndGroupByItems.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/db/expect/select_group_by/SelectItemWithAliasAndMismatchOrderByAndGroupByItems.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/dbtbl/expect/select_group_by/SelectItemWithAliasAndMismatchOrderByAndGroupByItems.xml", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/masterslave/expect/select_group_by/SelectItemWithAliasAndMismatchOrderByAndGroupByItems.xml", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/tbl/expect/select_group_by/SelectItemWithAliasAndMismatchOrderByAndGroupByItems.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_group_by.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "87a54b066f8a17cdf8cb746613694bceae1adafa", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a35f887a6eebf17a1a32a43c0beb89a9f710b90d"], "nameRev": "87a54b066f8a17cdf8cb746613694bceae1adafa tags/2.0.2~21", "commitMessage": "fix OrderItem equals logic for #557\n", "commitDateTime": "2018-01-17 17:36:02", "authoredDateTime": "2018-01-17 17:36:02", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/orderby/OrderByStreamResultSetMerger.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/OrderItem.java", "insertions": 31, "deletions": 3, "lines": 34}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrderByStreamResultSetMerger.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.merger.orderby.OrderByStreamResultSetMerger", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "OrderItem.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.OrderItem", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.OrderItem.equals(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.OrderItem.qualifiedNameEquals(io.shardingjdbc.core.parsing.parser.context.OrderItem)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.OrderItem.columnLabelEquals(io.shardingjdbc.core.parsing.parser.context.OrderItem)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.OrderItem.indexEquals(io.shardingjdbc.core.parsing.parser.context.OrderItem)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.OrderItem.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e9935bafff0087cf48fd64888c76258dc201be0c", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["87a54b066f8a17cdf8cb746613694bceae1adafa"], "nameRev": "e9935bafff0087cf48fd64888c76258dc201be0c tags/2.0.2~20", "commitMessage": "add OrderItem test case for #557\n", "commitDateTime": "2018-01-17 18:16:08", "authoredDateTime": "2018-01-17 18:16:08", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/OrderItem.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/AllParsingTests.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/context/OrderItemTest.java", "insertions": 106, "deletions": 0, "lines": 106}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrderItem.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.OrderItem.qualifiedNameEquals(io.shardingjdbc.core.parsing.parser.context.OrderItem)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AllParsingTests.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.AllParsingTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OrderItemTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.OrderItemTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f5882ef696c8202bee03761ddccfd8b87cc0a41d", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["e9935bafff0087cf48fd64888c76258dc201be0c"], "nameRev": "f5882ef696c8202bee03761ddccfd8b87cc0a41d tags/2.0.2~19", "commitMessage": "fixed #557\n", "commitDateTime": "2018-01-17 18:18:12", "authoredDateTime": "2018-01-17 18:18:12", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a35f887a6eebf17a1a32a43c0beb89a9f710b90d", "87a54b066f8a17cdf8cb746613694bceae1adafa", "e9935bafff0087cf48fd64888c76258dc201be0c", "f5882ef696c8202bee03761ddccfd8b87cc0a41d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 38, "deletions": 10, "lines": 48, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 14.0, "UPD": 5.0, "INS": 5.0, "MOV": 3.0, "DEL": 1.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/orderby"], "changesInPackagesSPOON": ["io.shardingjdbc.core.parsing.parser.context.OrderItem.qualifiedNameEquals(io.shardingjdbc.core.parsing.parser.context.OrderItem)", "io.shardingjdbc.core.parsing.parser.context.OrderItem.columnLabelEquals(io.shardingjdbc.core.parsing.parser.context.OrderItem)", "io.shardingjdbc.core.parsing.parser.context.OrderItem.indexEquals(io.shardingjdbc.core.parsing.parser.context.OrderItem)", "io.shardingjdbc.core.merger.orderby.OrderByStreamResultSetMerger", "io.shardingjdbc.core.parsing.parser.context.OrderItem.hashCode()", "io.shardingjdbc.core.parsing.parser.context.OrderItem.equals(java.lang.Object)", "io.shardingjdbc.core.parsing.parser.context.OrderItem"]}, {"title": "\u5e76\u53d1\u6267\u884cupdate\u64cd\u4f5c\u591a\u8282\u70b9\u65f6\u51fa\u73b0\u6b7b\u9501", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### 2.0.0.M1\r\n\r\n### \u5404\u8282\u70b9\u90fd\u66f4\u65b0\u6210\u529f\r\n### \u6267\u884c\u64cd\u4f5c\u540e,\u65e0\u54cd\u5e94\r\n\r\n### \u8868t_order\r\n```create table T_ORDER\r\n(\r\n  ORDER_ID INTEGER not null,\r\n  USER_ID  INTEGER not null,\r\n  STATUS   VARCHAR2(50)\r\n)\r\n```\r\n\u5206\u7247\u952e\u4f7f\u7528USER_ID\uff0c\u5207\u5206\u81f32\u4e2a\u6570\u636e\u5e93\u5b9e\u4f8b\u4e2d\uff0c\u5e76\u57282\u4e2a\u6570\u636e\u5e93\u5b9e\u4f8b\u4e2d\u5206\u522b\u63d2\u5165order_id=1234\u6570\u636e\u8bb0\u5f55\u3002\r\n\u5e76\u5f00\u542f\u591a\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u66f4\u65b0\u64cd\u4f5c,\u8bed\u53e5\u5982\u4e0b\r\n```\r\nupdate t_order set status='11111' where order_id='1234'\r\n```\r\n\r\n\r\n\r\n### \u5b9e\u4f8b\u4ee3\u7801\r\n#### SpringMybatisShardingDatabaseOnlyMain2\r\n``` \r\n/*\r\n * Copyright 1999-2015 dangdang.com.\r\n * <p>\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * </p>\r\n */\r\n\r\npackage io.shardingjdbc.example.spring.namespace.mybatis;\r\n\r\nimport org.springframework.context.ApplicationContext;\r\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\r\n\r\nimport javax.sql.DataSource;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\n/**\r\n *\u8bf7\u6c421\r\n 1\u3001node1 update test set a=1 where user_id='1'\r\n\r\n 4\u3001node2 update test set a=1 where user_id='1'\r\n \u8bf7\u6c422\r\n 2\u3001node1  update test set a=1 where user_id='1'\r\n 3\u3001node2  update test set a=1 where user_id='1'\r\n *\r\n * \u5982\u679c\u6309\u7167\u4ee5\u4e0a\u987a\u5e8f\u6267\u884c\u65f6,\u4f1a\u4e0d\u4f1a\u53d1\u751f\u6b7b\u9501\u73b0\u8c61\r\n */\r\npublic final class SpringMybatisShardingDatabaseOnlyMain2 {\r\n\r\n    public static void main(final String[] args) throws SQLException, InterruptedException {\r\n        final ApplicationContext applicationContext = new ClassPathXmlApplicationContext(\"META-INF/mybatisShardingDatabaseOnlyContext.xml\");\r\n        ExecutorService executors = Executors.newFixedThreadPool(10);\r\n        for (int i = 0; i < 2; i++) {\r\n            executors.execute(new UpdateRunable(applicationContext));\r\n        }\r\n        TimeUnit.SECONDS.sleep(10);\r\n        executors.shutdown();\r\n        while (!executors.isTerminated()){\r\n        }\r\n        System.out.println(\"\u7a0b\u5e8f\u7ed3\u675f\");\r\n\r\n\r\n    }\r\n\r\n\r\n    public static class UpdateRunable implements Runnable {\r\n        ApplicationContext applicationContext;\r\n\r\n        public UpdateRunable(ApplicationContext applicationContext) {\r\n            this.applicationContext = applicationContext;\r\n        }\r\n\r\n        @Override\r\n        public void run() {\r\n                DataSource dataSource = (DataSource) applicationContext.getBean(\"shardingDataSource\");\r\n                Connection connection = null;\r\n                PreparedStatement pre = null;\r\n                try {\r\n                    connection = dataSource.getConnection();\r\n                    connection.setAutoCommit(false);\r\n                    pre = connection.prepareStatement(\"update t_order set status='11111' where order_id='1234'\");\r\n                    int c = pre.executeUpdate();\r\n                    System.out.println(\"t-name:\" + Thread.currentThread().getName() + \"  c1:\" + c);\r\n                    connection.commit();\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                } finally {\r\n                    try {\r\n                        connection.close();\r\n                    } catch (SQLException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n        }\r\n    }\r\n\r\n}\r\n\r\n```\r\n#### mybatisShardingDatabaseOnlyContext.xml\r\n``` \r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xmlns:context=\"http://www.springframework.org/schema/context\" \r\n    xmlns:tx=\"http://www.springframework.org/schema/tx\" \r\n    xmlns:sharding=\"http://shardingjdbc.io/schema/shardingjdbc/sharding\"\r\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans\r\n                        http://www.springframework.org/schema/beans/spring-beans.xsd \r\n                        http://www.springframework.org/schema/tx \r\n                        http://www.springframework.org/schema/tx/spring-tx.xsd\r\n                        http://www.springframework.org/schema/context \r\n                        http://www.springframework.org/schema/context/spring-context.xsd\r\n                        http://shardingjdbc.io/schema/shardingjdbc/sharding \r\n                        http://shardingjdbc.io/schema/shardingjdbc/sharding/sharding.xsd\">\r\n    <context:component-scan base-package=\"io.shardingjdbc.example.spring.namespace.mybatis\" />\r\n\r\n    <bean id=\"demo_ds_0\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\r\n        <property name=\"driverClassName\" value=\"oracle.jdbc.driver.OracleDriver\"/>\r\n        <property name=\"url\" value=\"jdbc:oracle:thin:@127.0.0.1:1521:orcl\"/>\r\n        <property name=\"username\" value=\"t2\"/>\r\n        <property name=\"password\" value=\"t2\"/>\r\n        <property name=\"maxActive\" value=\"50\"/>\r\n    </bean>\r\n\r\n    <bean id=\"demo_ds_1\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\r\n        <property name=\"driverClassName\" value=\"oracle.jdbc.driver.OracleDriver\"/>\r\n        <property name=\"url\" value=\"jdbc:oracle:thin:@127.0.0.1:1521:orcl\"/>\r\n        <property name=\"username\" value=\"t1\"/>\r\n        <property name=\"password\" value=\"t1\"/>\r\n        <property name=\"maxActive\" value=\"50\"/>\r\n    </bean>\r\n    <sharding:standard-strategy id=\"databaseShardingStrategy\" sharding-column=\"user_id\" precise-algorithm-class=\"io.shardingjdbc.example.spring.namespace.mybatis.algorithm.PreciseModuloDatabaseShardingAlgorithm\"/>\r\n    \r\n    <sharding:data-source id=\"shardingDataSource\">\r\n        <sharding:sharding-rule data-source-names=\"demo_ds_0, demo_ds_1\">\r\n            <sharding:table-rules>\r\n                <sharding:table-rule logic-table=\"t_order\" database-strategy-ref=\"databaseShardingStrategy\" generate-key-column=\"order_id\" />\r\n            </sharding:table-rules>\r\n        </sharding:sharding-rule>\r\n    </sharding:data-source>\r\n    \r\n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\r\n        <property name=\"dataSource\" ref=\"shardingDataSource\" />\r\n    </bean>\r\n    <tx:annotation-driven transaction-manager=\"transactionManager\" />\r\n    \r\n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\r\n        <property name=\"dataSource\" ref=\"shardingDataSource\"/>\r\n        <property name=\"mapperLocations\" value=\"classpath*:META-INF/mappers/*.xml\"/>\r\n    </bean>\r\n    \r\n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\r\n        <property name=\"basePackage\" value=\"io.shardingjdbc.example.spring.namespace.mybatis\"/>\r\n        <property name=\"sqlSessionFactoryBeanName\" value=\"sqlSessionFactory\"/>\r\n    </bean>\r\n\r\n</beans>\r\n\r\n```\r\n#### OrderMapper.xml\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\r\n<mapper namespace=\"io.shardingjdbc.example.spring.namespace.mybatis.repository.OrderRepository\">\r\n    <update id=\"createIfNotExistsTable\">\r\n        CREATE TABLE  t_order (order_id INT , user_id INT NOT NULL, status VARCHAR2(50), PRIMARY KEY (order_id))\r\n    </update>\r\n\r\n    <update id=\"truncateTable\">\r\n        TRUNCATE TABLE t_order\r\n    </update>\r\n    \r\n    <update id=\"dropTable\">\r\n        DROP TABLE  t_order\r\n    </update>\r\n    \r\n    <insert id=\"insert\" useGeneratedKeys=\"true\" keyProperty=\"orderId\">\r\n        INSERT INTO t_order (\r\n          user_id, status\r\n        )\r\n        VALUES (\r\n        #{userId,jdbcType=INTEGER},\r\n        #{status,jdbcType=VARCHAR}\r\n        )\r\n    </insert>\r\n    \r\n    <delete id=\"delete\">\r\n        DELETE FROM t_order WHERE order_id = #{orderId,jdbcType=INTEGER}\r\n    </delete>\r\n</mapper>\r\n\r\n\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/553", "user": "dongweizhao", "labels": ["bug", "duplicate"], "created": "2018-01-14 04:35:19", "closed": "2018-08-26 13:36:01", "commits": {}, "ttf": 224.00027777777777, "commitsDetails": []}, {"title": "IS NOT NULL parse error", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### 2.0.0\r\n\r\n### \u67e5\u8be2\u6761\u4ef6\u4e2d\u51fa\u73b0 is not null \u7684\u65f6\u5019 \u7528limit 0\uff0c1\uff0c\u5e94\u8be5\u6700\u591a\u53ea\u80fd\u67e5\u8be2\u4e00\u6761\u8bb0\u5f55\r\n\r\n### \u67e5\u8be2\u51fa\u6765\u7684\u4e0d\u6b62\u4e00\u6761\u8bb0\u5f55\r\n\r\n### \u67e5\u8be2\u8bed\u53e5\u91cc\u9762\u542b\u6709 is not null \u5224\u65ad limit 0\uff0c 1\r\n\r\n###  String sql = \"select smUuid, customerId \" +\r\n                    \"from tbl_app_identify_batch_record t1 \" +\r\n                    \"where t1.deliverResult IS Not NULL and validateFlag in(1,2,4,5)  \" +\r\n                    \"and batchId != 0 limit 0, 1\";\r\n\r\n  ", "url": "https://github.com/apache/shardingsphere/issues/541", "user": "luyf1030", "labels": ["bug"], "created": "2018-01-08 10:08:15", "closed": "2018-01-17 15:38:19", "commits": {"afa4c44a5fd06efa567cf39a88d5ff5167f6c175": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "afa4c44a5fd06efa567cf39a88d5ff5167f6c175", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["cc0cb54e0e23e1973edd697c0675e7335c0a3672"], "nameRev": "afa4c44a5fd06efa567cf39a88d5ff5167f6c175 tags/2.0.2~15", "commitMessage": "fixed #541\n", "commitDateTime": "2018-01-17 23:38:08", "authoredDateTime": "2018-01-17 23:38:08", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/WhereClauseParser.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WhereClauseParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.parser.clause.WhereClauseParser.parseComparisonCondition(io.shardingjdbc.core.rule.ShardingRule,io.shardingjdbc.core.parsing.parser.sql.SQLStatement,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["afa4c44a5fd06efa567cf39a88d5ff5167f6c175"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause"], "changesInPackagesSPOON": ["io.shardingjdbc.core.parsing.parser.clause.WhereClauseParser.parseComparisonCondition(io.shardingjdbc.core.rule.ShardingRule,io.shardingjdbc.core.parsing.parser.sql.SQLStatement,java.util.List)"]}, {"title": "Support SQL that alias is the keyword", "body": "```sql\r\nselect a.user_id userId, a.user_name userName, a.password password from t_user a where a.user_id = ?\r\n```\r\n\r\n\u5176\u4e2dpassword\u88ab\u91cd\u547d\u540d\u4e3apassword\uff0c\u4e3a\u5173\u952e\u5b57\uff0c\u5bfc\u81f4\u8def\u7531\u6709\u95ee\u9898\uff0c\u4f46\u662f\u8fd9\u6837\u786e\u662f\u53ef\u4ee5\u7684\uff1a\r\n\r\n```sql\r\nselect a.user_id userId, a.user_name userName, a.password \"password\" from t_user a where a.user_id = ?\r\n```", "url": "https://github.com/apache/shardingsphere/issues/540", "user": "penggle", "labels": ["bug"], "created": "2018-01-07 12:15:13", "closed": "2018-02-15 13:28:33", "commits": {"325d2d749a77a689c9b91383025baad70c1fd242": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "2b3e5b22ea7cdbdfe18d2d40e2e26ca72f05817b": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "0beb39f61ce612bbf05f08561115d124736c3718": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "83052948719b4513a28fb8862a882a62c0a00cbd": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "04ed43fa6547d824d6fd7b03c49de1a77705dc5e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "d113495faa6d389875ea7e49098c3a249e183250": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "c3e6e390cb4e564d1056ec6c67a136afe7ae51dd": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "5e1fce39f5010e3c623616b683d347eb8b6dbf29": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "6d0b926ed8b1f793da64703ec5354901b9044fdb": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "978cbf29e7f2f85e3b6b28506781bbcafd118b45": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "6107130bb474bdcf7ddc7ecc05486416aa467413": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 39.000277777777775, "commitsDetails": [], "statsSkippedReason": "", "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}}, {"title": "Table name capitalization cannot be queried", "body": "\r\n\u591a\u5f20\u8868\u5206\u5e93\uff0c\u8868\u540d\u5927\u5199\u627e\u4e0d\u5230\u8868\uff0c\u53ea\u6709\u5176\u4e2d\u4e00\u5f20\u8868\u80fd\u67e5\u8be2\uff0c\u5176\u4ed6\u4e0d\u80fd\u67e5\u8be2\u3002\r\nspring boot 1.5.9 mybatis3.4.5  shardingjdbc 2.0.1\r\n\u5176\u4e2d\u4e00\u5f20\u8868\u80fd\u67e5\u5230\u6570\u636e\uff0c\u5176\u4ed6\u7684\u8868\u90fd\u62a5\u627e\u4e0d\u5230\u8868\u3002\u8868\u540d\u90fd\u662f\u5927\u5199 t1\u8868\u65e0\u6cd5\u67e5\u8be2\uff0c\u62a5\u9519\r\norg.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \r\n### Error querying database.  Cause: io.shardingjdbc.core.exception.ShardingJdbcException: io.shardingjdbc.core.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'xx.T1' doesn't exist\r\n### The error may exist in file [T1Mapper.xml]\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: SELECT * from T1\r\n### Cause: io.shardingjdbc.core.exception.ShardingJdbcException: io.shardingjdbc.core.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'xx.T1' doesn't exist\r\n\r\nT2\u8868\u67e5\u8be2\u6ca1\u6709\u95ee\u9898\r\n\r\nprivate Map<String, DataSource> createDataSourceMap() {\r\n        HashMap<String, DataSource> dataSourceMap = new HashMap<>();\r\n        for (Map<String, String> database : myProps.getDatabase()) {\r\n            HikariDataSource ds = (HikariDataSource) DataSourceBuilder.create()\r\n                    .url(database.get(\"url\"))\r\n                    .username(database.get(\"username\"))\r\n                    .password(database.get(\"password\"))\r\n                    .driverClassName(database.get(\"driveClassName\"))\r\n                    .type(HikariDataSource.class).build();\r\n            ds.setConnectionTestQuery(\"SELECT 1\");\r\n            dataSourceMap.put(database.get(\"name\"), ds);\r\n        }\r\n        return dataSourceMap;\r\n    }\r\n\r\n    @Bean\r\n    @Primary\r\n    public DataSource shardingDataSource() throws SQLException {\r\n        ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration();\r\n        shardingRuleConfig.getTableRuleConfigs().add(getT1TableRuleConfiguration());\r\n        shardingRuleConfig.getTableRuleConfigs().add(getT2TableRuleConfiguration());\r\n        shardingRuleConfig.getBindingTableGroups().add(\"T1, T2\");\r\n        shardingRuleConfig.setDefaultDatabaseShardingStrategyConfig(new StandardShardingStrategyConfiguration(\"T1\", PreciseModuloDatabaseShardingAlgorithm.class.getName()));\r\n        return ShardingDataSourceFactory.createDataSource(createDataSourceMap(), shardingRuleConfig, new HashMap<String, Object>(), new Properties());\r\n    }\r\n\r\n    private TableRuleConfiguration getT1TableRuleConfiguration() {\r\n        TableRuleConfiguration retailOrderTableRuleConfig = new TableRuleConfiguration();\r\n        retailOrderTableRuleConfig.setLogicTable(\"T1\");\r\n        return retailOrderTableRuleConfig;\r\n    }\r\n\r\n   private TableRuleConfiguration getT2TableRuleConfiguration() {\r\n        TableRuleConfiguration retailOrderTableRuleConfig = new TableRuleConfiguration();\r\n        retailOrderTableRuleConfig.setLogicTable(\"T2\");\r\n        return retailOrderTableRuleConfig;\r\n    }\r\n", "url": "https://github.com/apache/shardingsphere/issues/529", "user": "hwck", "labels": ["bug"], "created": "2018-01-02 07:33:03", "closed": "2018-01-11 09:46:04", "commits": {"4bb57027cec3a7bf9159ea4a6de3294ea15ff0c0": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "d5d7391cd6210fee85e38723ebdd48b30afc2e6c": {"commitGHEventType": "referenced", "commitUser": "haocao"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "4bb57027cec3a7bf9159ea4a6de3294ea15ff0c0", "commitGHEventType": "referenced", "commitUser": "haocao", "commitParents": ["c6f02f941c7fe7e67b09e3f9935ad40fe3a131ae"], "nameRev": "4bb57027cec3a7bf9159ea4a6de3294ea15ff0c0 tags/2.0.2~35", "commitMessage": "For #529.\n", "commitDateTime": "2018-01-09 18:38:50", "authoredDateTime": "2018-01-09 18:38:39", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/table/Tables.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/IndexToken.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/TableToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rewrite/SQLRewriteEngine.java", "insertions": 12, "deletions": 9, "lines": 21}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/TableUnits.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rule/BindingTableRule.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rule/ShardingRule.java", "insertions": 17, "deletions": 28, "lines": 45}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rule/TableRule.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rule/BindingTableRuleTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rule/ShardingRuleTest.java", "insertions": 9, "deletions": 20, "lines": 29}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select.xml", "insertions": 25, "deletions": 1, "lines": 26}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/masterslave/expect/select/SelectWithUpperCaseBindingTableAndConfigTable.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/dbtbl/expect/select/SelectWithUpperCaseBindingTableAndConfigTable.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/masterslave/expect/select/SelectWithUpperCaseBindingTableAndConfigTable.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/tbl/expect/select/SelectWithUpperCaseBindingTableAndConfigTable.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/parser/select.xml", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select.xml", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Tables.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.table.Tables.getTableNames()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.table.Tables.findTableFromName(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.parsing.parser.context.table.Tables.findTableFromAlias(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IndexToken.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.parser.token.IndexToken.getIndexName()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.parsing.parser.token.IndexToken.getTableName()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "TableToken.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.parser.token.TableToken.getTableName()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SQLRewriteEngine.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngine.appendTableToken(io.shardingjdbc.core.rewrite.SQLBuilder,io.shardingjdbc.core.parsing.parser.token.TableToken,int,java.util.List)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngine.getTableTokens(io.shardingjdbc.core.routing.type.TableUnit)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngine.getTableTokens(io.shardingjdbc.core.routing.type.complex.CartesianTableReference)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngine.getBindingTableTokens(io.shardingjdbc.core.routing.type.TableUnit,io.shardingjdbc.core.rule.BindingTableRule)", "TOT": 7, "UPD": 4, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngine.appendIndexToken(io.shardingjdbc.core.rewrite.SQLBuilder,io.shardingjdbc.core.parsing.parser.token.IndexToken,int,java.util.List)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "TableUnits.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.routing.type.TableUnits.getDataSourceNames()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.routing.type.TableUnits.getActualTableNames(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.routing.type.TableUnits.getLogicTableNames(java.lang.String)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BindingTableRule.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.rule.BindingTableRule.hasLogicTable(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rule.BindingTableRule.getBindingActualTable(java.lang.String,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rule.BindingTableRule.getAllLogicTables().1.apply(io.shardingjdbc.core.rule.TableRule)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ShardingRule.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.rule.ShardingRule.filterAllBindingTables(java.util.Collection)", "TOT": 8, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "io.shardingjdbc.core.rule.ShardingRule.tryFindTableRule(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rule.ShardingRule.isAllBindingTables(java.util.Collection)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.rule.ShardingRule.getTableRule(java.lang.String)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rule.ShardingRule.isAllInDefaultDataSource(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TableRule.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.rule.TableRule", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "BindingTableRuleTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.rule.BindingTableRuleTest.assertGetAllLogicTables()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingRuleTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.rule.ShardingRuleTest.assertFilterAllBindingTables()", "TOT": 24, "UPD": 16, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rule.ShardingRuleTest.assertFilterAllBindingTablesWhenBindingTableRuleIsNotFound()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.rule.ShardingRuleTest.assertFilterAllBindingTablesWhenLogicTablesIsEmpty()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.rule.ShardingRuleTest.assertIsAllBindingTable()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d5d7391cd6210fee85e38723ebdd48b30afc2e6c", "commitGHEventType": "referenced", "commitUser": "haocao", "commitParents": ["4bb57027cec3a7bf9159ea4a6de3294ea15ff0c0"], "nameRev": "d5d7391cd6210fee85e38723ebdd48b30afc2e6c tags/2.0.2~34", "commitMessage": "For #529.\n", "commitDateTime": "2018-01-09 19:39:53", "authoredDateTime": "2018-01-09 19:39:53", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/sharding/YamlShardingIntegrateTest.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "YamlShardingIntegrateTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.yaml.sharding.YamlShardingIntegrateTest.assertWithDataSource()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4bb57027cec3a7bf9159ea4a6de3294ea15ff0c0"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 45, "deletions": 54, "lines": 99, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 75, "UPD": 23, "INS": 18, "MOV": 23, "DEL": 11, "spoonFilesChanged": 8, "spoonMethodsChanged": 23}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rewrite", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rule", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token"], "changesInPackagesSPOON": ["io.shardingjdbc.core.parsing.parser.context.table.Tables.findTableFromAlias(java.lang.String)", "io.shardingjdbc.core.rule.ShardingRule.isAllBindingTables(java.util.Collection)", "io.shardingjdbc.core.parsing.parser.context.table.Tables.findTableFromName(java.lang.String)", "io.shardingjdbc.core.rewrite.SQLRewriteEngine.appendIndexToken(io.shardingjdbc.core.rewrite.SQLBuilder,io.shardingjdbc.core.parsing.parser.token.IndexToken,int,java.util.List)", "io.shardingjdbc.core.parsing.parser.token.TableToken.getTableName()", "io.shardingjdbc.core.rewrite.SQLRewriteEngine.appendTableToken(io.shardingjdbc.core.rewrite.SQLBuilder,io.shardingjdbc.core.parsing.parser.token.TableToken,int,java.util.List)", "io.shardingjdbc.core.rewrite.SQLRewriteEngine.getTableTokens(io.shardingjdbc.core.routing.type.complex.CartesianTableReference)", "io.shardingjdbc.core.parsing.parser.context.table.Tables.getTableNames()", "io.shardingjdbc.core.rule.ShardingRule.isAllInDefaultDataSource(java.util.Collection)", "io.shardingjdbc.core.rule.TableRule", "io.shardingjdbc.core.rule.ShardingRule.getTableRule(java.lang.String)", "io.shardingjdbc.core.routing.type.TableUnits.getActualTableNames(java.lang.String,java.lang.String)", "io.shardingjdbc.core.rule.ShardingRule.tryFindTableRule(java.lang.String)", "io.shardingjdbc.core.rewrite.SQLRewriteEngine.getTableTokens(io.shardingjdbc.core.routing.type.TableUnit)", "io.shardingjdbc.core.parsing.parser.token.IndexToken.getIndexName()", "io.shardingjdbc.core.parsing.parser.token.IndexToken.getTableName()", "io.shardingjdbc.core.rewrite.SQLRewriteEngine.getBindingTableTokens(io.shardingjdbc.core.routing.type.TableUnit,io.shardingjdbc.core.rule.BindingTableRule)", "io.shardingjdbc.core.rule.BindingTableRule.getAllLogicTables().1.apply(io.shardingjdbc.core.rule.TableRule)", "io.shardingjdbc.core.routing.type.TableUnits.getLogicTableNames(java.lang.String)", "io.shardingjdbc.core.rule.BindingTableRule.hasLogicTable(java.lang.String)", "io.shardingjdbc.core.rule.BindingTableRule.getBindingActualTable(java.lang.String,java.lang.String,java.lang.String)", "io.shardingjdbc.core.rule.ShardingRule.filterAllBindingTables(java.util.Collection)", "io.shardingjdbc.core.routing.type.TableUnits.getDataSourceNames()"]}, {"title": "Slave database does not need to execute the DDL for read-write splitting", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n2.0.0M1\r\n\r\n### Expected behavior\r\n\u505a\u8bfb\u5199\u5206\u79bb\u540e\uff0c\u4e4b\u524d\u6bcf\u5929\u6267\u884c\u4e00\u6b21\u7684DDL\u8bed\u53e5\u5c45\u7136\u6267\u884c\u4e0d\u6210\u529f\u4e86\uff01\r\n\r\n### Actual behavior\r\n```\r\n2017-12-26 23:55:00  [DubboServerHandler-10.86.199.108:30103-thread-92] ERROR druid.sql.Statement - Slf4jLogFilter.java:149 - {conn-10610, pstmt-35015} execute error. CREATE TABLE IF NOT EXISTS order_stat_20171227 LIKE order_stat\r\n java.sql.SQLException: The MySQL server is running with the --read-only option so it cannot execute this statement\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996) ~[mysql-connector-java-5.1.33.jar:5.1.33]\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887) ~[mysql-connector-java-5.1.33.jar:5.1.33]\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823) ~[mysql-connector-java-5.1.33.jar:5.1.33]\r\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435) ~[mysql-connector-java-5.1.33.jar:5.1.33]\r\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582) ~[mysql-connector-java-5.1.33.jar:5.1.33]\r\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530) ~[mysql-connector-java-5.1.33.jar:5.1.33]\r\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907) ~[mysql-connector-java-5.1.33.jar:5.1.33]\r\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1199) ~[mysql-connector-java-5.1.33.jar:5.1.33]\r\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931) [druid-1.0.15.jar:1.0.15]\r\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440) [druid-1.0.15.jar:1.0.15]\r\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929) [druid-1.0.15.jar:1.0.15]\r\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440) [druid-1.0.15.jar:1.0.15]\r\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929) [druid-1.0.15.jar:1.0.15]\r\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131) [druid-1.0.15.jar:1.0.15]\r\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493) [druid-1.0.15.jar:1.0.15]\r\n\tat io.shardingjdbc.core.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:97) [sharding-jdbc-core-2.0.0.M1.jar:na]\r\n\tat io.shardingjdbc.core.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:93) [sharding-jdbc-core-2.0.0.M1.jar:na]\r\n\tat io.shardingjdbc.core.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:175) [sharding-jdbc-core-2.0.0.M1.jar:na]\r\n\tat io.shardingjdbc.core.executor.ExecutorEngine.syncExecute(ExecutorEngine.java:155) [sharding-jdbc-core-2.0.0.M1.jar:na]\r\n\tat io.shardingjdbc.core.executor.ExecutorEngine.execute(ExecutorEngine.java:124) [sharding-jdbc-core-2.0.0.M1.jar:na]\r\n\tat io.shardingjdbc.core.executor.ExecutorEngine.executePreparedStatement(ExecutorEngine.java:96) [sharding-jdbc-core-2.0.0.M1.jar:na]\r\n```\r\n\r\n### Steps to reproduce the behavior\r\n\u53ea\u914d\u7f6e\u4e86\u8bfb\u5199\u5206\u79bb\uff0c\u7136\u540e\u5728mybatis\u91cc\u968f\u610f\u914d\u7f6e\u4e00\u4e2aDDL\u7684\u8bed\u53e5\uff0c\u5c31\u4ea7\u751f\u4e86\u8fd9\u4e2abug. \u4f46\u662f\u5b98\u7f51\u8bf4\u7684\u662f\u65e0\u6761\u4ef6\u652f\u6301DDL\uff0c\u5e0c\u671b\u80fd\u4fee\u590d\u8be5BUG. \u521d\u6b65\u731c\u6d4b\u5177\u4f53\u539f\u56e0\u5e94\u8be5\u662fgetConnection\u65f6\u83b7\u53d6\u5230\u4e86\u4ece\u5e93\u7684connection.\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n\u8ddf\u8fdb\u5230sharding-jdbc\u6e90\u7801\u4e2d\uff0c\u53d1\u73b0\u5728[MasterSlaveConnection](https://github.com/shardingjdbc/sharding-jdbc/blob/2.0.0.M1/sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection/MasterSlaveConnection.java)\u8fd9\u4e2a\u7c7b\u4e2d\u7684getConnections\u65b9\u6cd5\u7684\u95ee\u9898.\u8be5\u65b9\u6cd5\u7684\u6ce8\u91ca\u4e5f\u8fdb\u4e00\u6b65\u8bf4\u660e\u4e86\u8fd9\u4e00\u70b9\r\n```\r\n/**\r\n     * Get database connections via SQL type.\r\n     *\r\n     * <p>DDL will return all connections; DQL will return slave connection; DML or updated before in same thread will return master connection.</p>\r\n     * \r\n     * @param sqlType SQL type\r\n     * @return database connections via SQL type\r\n     * @throws SQLException SQL exception\r\n     */\r\n    public Collection<Connection> getConnections(final SQLType sqlType) throws SQLException {\r\n        cachedSQLType = sqlType;\r\n        Map<String, DataSource> dataSources = SQLType.DDL == sqlType ? masterSlaveDataSource.getAllDataSources() : masterSlaveDataSource.getDataSource(sqlType).toMap();\r\n...\r\n...\r\n```\r\nWhat! SQLType.DDL == sqlType \u5c45\u7136\u8fd4\u56demasterSlaveDataSource.getAllDataSources()\uff01\uff01\uff01\r\n\u5f88\u7eb3\u95f7 **DDL** \u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u8dd1\u8bfb\u5e93\u53bb\u6267\u884c\u4e86\uff0c\u5e0c\u671b\u80fd\u5c3d\u5feb\u4fee\u590d\u8be5BUG\u3002\r\n", "url": "https://github.com/apache/shardingsphere/issues/522", "user": "hasone", "labels": ["bug"], "created": "2017-12-27 08:29:06", "closed": "2018-01-31 03:12:27", "commits": {"487fe70e6bc1de0e1e115cbef6bda8c3c659d0be": {"commitGHEventType": "closed", "commitUser": "haocao"}, "97b8b3d230efef267250b570261cc0896169d461": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 34.000277777777775, "commitsDetails": [{"commitHash": "487fe70e6bc1de0e1e115cbef6bda8c3c659d0be", "commitGHEventType": "closed", "commitUser": "haocao", "commitParents": ["fb668590f9f2d7fe4234508f94e18ad306a5f5fc"], "nameRev": "487fe70e6bc1de0e1e115cbef6bda8c3c659d0be tags/2.0.2~46", "commitMessage": "Fixed #522.\n", "commitDateTime": "2017-12-28 18:21:25", "authoredDateTime": "2017-12-28 18:21:25", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection/MasterSlaveConnection.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnection.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.connection.MasterSlaveConnection.getConnections(io.shardingjdbc.core.constant.SQLType)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveDataSource.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.datasource.MasterSlaveDataSource.getMasterDataSource()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "97b8b3d230efef267250b570261cc0896169d461", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["2330f26d9bdcf8b2af3292f2c80e30bca74256c7"], "nameRev": "97b8b3d230efef267250b570261cc0896169d461 tags/2.0.3~12", "commitMessage": "fix #522\n", "commitDateTime": "2018-01-31 11:12:14", "authoredDateTime": "2018-01-31 11:12:14", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection/ShardingConnection.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/statement/ShardingStatement.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingConnection.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.connection.ShardingConnection.getAllConnections(java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.statement.ShardingPreparedStatement.generatePreparedStatementForDDL(io.shardingjdbc.core.routing.SQLExecutionUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingStatement.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.statement.ShardingStatement.generateExecutor(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["487fe70e6bc1de0e1e115cbef6bda8c3c659d0be", "97b8b3d230efef267250b570261cc0896169d461"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 22, "deletions": 9, "lines": 31, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 6, "UPD": 5, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 5, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/datasource", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/statement", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection"], "changesInPackagesSPOON": ["io.shardingjdbc.core.jdbc.core.datasource.MasterSlaveDataSource.getMasterDataSource()", "io.shardingjdbc.core.jdbc.core.statement.ShardingStatement.generateExecutor(java.lang.String)", "io.shardingjdbc.core.jdbc.core.connection.MasterSlaveConnection.getConnections(io.shardingjdbc.core.constant.SQLType)", "io.shardingjdbc.core.jdbc.core.statement.ShardingPreparedStatement.generatePreparedStatementForDDL(io.shardingjdbc.core.routing.SQLExecutionUnit)", "io.shardingjdbc.core.jdbc.core.connection.ShardingConnection.getAllConnections(java.lang.String)"]}, {"title": "YAML\u6587\u4ef6\u4e2dShardingProperties\u8bbe\u7f6e\u65e0\u6548", "body": "", "url": "https://github.com/apache/shardingsphere/issues/521", "user": "haocao", "labels": ["bug"], "created": "2017-12-27 06:48:49", "closed": "2017-12-27 07:26:35", "commits": {"4f67c3001e8239ee14e899a1b2681b5ad2b76f59": {"commitGHEventType": "closed", "commitUser": "haocao"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4f67c3001e8239ee14e899a1b2681b5ad2b76f59", "commitGHEventType": "closed", "commitUser": "haocao", "commitParents": ["4bccaef6eb0430070da6d2619e8078c6b23f35bc"], "nameRev": "4f67c3001e8239ee14e899a1b2681b5ad2b76f59 tags/2.0.2~50", "commitMessage": "Fixed #521.\n", "commitDateTime": "2017-12-27 15:26:24", "authoredDateTime": "2017-12-27 15:26:24", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/constant/ShardingProperties.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/sharding/YamlShardingIntegrateTest.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingProperties.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.constant.ShardingProperties.getValue(io.shardingjdbc.core.constant.ShardingPropertiesConstant)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "YamlShardingIntegrateTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.yaml.sharding.YamlShardingIntegrateTest.assertWithDataSource()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4f67c3001e8239ee14e899a1b2681b5ad2b76f59"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 1, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/constant"], "changesInPackagesSPOON": ["io.shardingjdbc.core.constant.ShardingProperties.getValue(io.shardingjdbc.core.constant.ShardingPropertiesConstant)"]}, {"title": "Exception is no longer `DuplicateKeyException` when the unique key conflict", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n2.0.1\r\n\r\n### Expected behavior\r\n\u5f15\u5165\u5206\u8868\u540e\uff0c\u4e1a\u52a1\u4ee3\u7801\u5e94\u8be5\u65e0\u4fb5\u5bb3\u6216\u8005\u65e0\u4fee\u6539\u3002\u800c\u4e14\u552f\u4e00\u952e\u51b2\u7a81catch\u5230DuplicateKeyException\u662f\u6bd4\u8f83\u5408\u7406\u7684\u3002\r\n\r\n### Actual behavior\r\n\u5f15\u5165\u5206\u8868\u540e\uff0c\u552f\u4e00\u952e\u5f02\u5e38\u4eceDuplicateKeyException\u53d8\u4e3aMyBatisSystemException\r\n\r\n### Steps to reproduce the behavior\r\n\u53ea\u914d\u7f6e\u4e86\u8bfb\u5199\u5206\u79bb\uff0c\u8fde\u7eed\u63d2\u5165\u4e24\u6761\u76f8\u540c\u6570\u636e\uff0c\u5f15\u53d1\u552f\u4e00\u952e\u51b2\u7a81\uff0c\u6b64\u65f6\u6b63\u5e38catch\u5230DuplicateKeyException\uff1b\r\n\u914d\u7f6e\u6587\u4ef6\u6539\u4e3a\u8bfb\u5199\u5206\u79bb+\u5206\u8868\uff0c\u540c\u6837\u8fde\u7eed\u63d2\u5165\u4e24\u6761\u76f8\u540c\u6570\u636e\uff0c\u5f02\u5e38\u53d8\u4e3aMyBatisSystemException\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\nhttps://github.com/moccanism/shardingjdbc-issue-demo\r\n\r\n\u6839\u636e\u81ea\u5df1\u7684DB\u73af\u5883\u66f4\u6539url -> \u4f7f\u7528database.sql\u5efa\u8868 -> \u5207\u6362profile\u8fd0\u884c", "url": "https://github.com/apache/shardingsphere/issues/520", "user": "moccanism", "labels": ["bug"], "created": "2017-12-27 03:14:14", "closed": "2017-12-28 03:41:01", "commits": {"fb668590f9f2d7fe4234508f94e18ad306a5f5fc": {"commitGHEventType": "closed", "commitUser": "haocao"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "fb668590f9f2d7fe4234508f94e18ad306a5f5fc", "commitGHEventType": "closed", "commitUser": "haocao", "commitParents": ["af0596cf0c077d30a9e7a26dea6588eacad29ca2"], "nameRev": "fb668590f9f2d7fe4234508f94e18ad306a5f5fc tags/2.0.2~47", "commitMessage": "Fixed #520.\n", "commitDateTime": "2017-12-28 11:40:48", "authoredDateTime": "2017-12-28 11:40:48", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/ExecutorEngine.java", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/threadlocal/ExecutorExceptionHandler.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/batch/BatchPreparedStatementExecutor.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/prepared/PreparedStatementExecutor.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/statement/StatementExecutor.java", "insertions": 20, "deletions": 11, "lines": 31}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/threadlocal/ExecutorExceptionHandlerTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/type/StatementExecutorTest.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExecutorEngine.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.executor.ExecutorEngine.executeStatement(io.shardingjdbc.core.constant.SQLType,java.util.Collection,io.shardingjdbc.core.executor.ExecuteCallback)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.ExecutorEngine.executePreparedStatement(io.shardingjdbc.core.constant.SQLType,java.util.Collection,java.util.List,io.shardingjdbc.core.executor.ExecuteCallback)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.ExecutorEngine.executeBatch(io.shardingjdbc.core.constant.SQLType,java.util.Collection,java.util.List,io.shardingjdbc.core.executor.ExecuteCallback)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.ExecutorEngine.execute(io.shardingjdbc.core.constant.SQLType,java.util.Collection,java.util.List,io.shardingjdbc.core.executor.ExecuteCallback)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExecutorExceptionHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.executor.threadlocal.ExecutorExceptionHandler.handleException(java.lang.Exception)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "BatchPreparedStatementExecutor.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.executor.type.batch.BatchPreparedStatementExecutor.executeBatch()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PreparedStatementExecutor.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.executor.type.prepared.PreparedStatementExecutor.executeQuery()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.prepared.PreparedStatementExecutor.executeUpdate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.prepared.PreparedStatementExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StatementExecutor.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeQuery()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeUpdate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeUpdate(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeUpdate(int[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeUpdate(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeUpdate(io.shardingjdbc.core.executor.type.statement.StatementExecutor$Updater)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.execute(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.execute(int[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.execute(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.type.statement.StatementExecutor.execute(io.shardingjdbc.core.executor.type.statement.StatementExecutor$Executor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExecutorExceptionHandlerTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.executor.threadlocal.ExecutorExceptionHandlerTest.assertHandleExceptionWithoutSet()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.threadlocal.ExecutorExceptionHandlerTest.assertHandleExceptionWhenExceptionThrownIsTrue()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.executor.threadlocal.ExecutorExceptionHandlerTest.assertHandleExceptionWhenExceptionThrownIsFalse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StatementExecutorTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.executor.type.StatementExecutorTest.assertOverallExceptionFailure()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fb668590f9f2d7fe4234508f94e18ad306a5f5fc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 46, "deletions": 20, "lines": 66, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 24, "UPD": 0, "INS": 22, "MOV": 2, "DEL": 0, "spoonFilesChanged": 5, "spoonMethodsChanged": 20}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/threadlocal", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/prepared", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/statement", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/batch"], "changesInPackagesSPOON": ["io.shardingjdbc.core.executor.threadlocal.ExecutorExceptionHandler.handleException(java.lang.Exception)", "io.shardingjdbc.core.executor.type.prepared.PreparedStatementExecutor.execute()", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.execute(int)", "io.shardingjdbc.core.executor.ExecutorEngine.executePreparedStatement(io.shardingjdbc.core.constant.SQLType,java.util.Collection,java.util.List,io.shardingjdbc.core.executor.ExecuteCallback)", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.execute(io.shardingjdbc.core.executor.type.statement.StatementExecutor$Executor)", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeUpdate(io.shardingjdbc.core.executor.type.statement.StatementExecutor$Updater)", "io.shardingjdbc.core.executor.ExecutorEngine.execute(io.shardingjdbc.core.constant.SQLType,java.util.Collection,java.util.List,io.shardingjdbc.core.executor.ExecuteCallback)", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.execute(int[])", "io.shardingjdbc.core.executor.type.batch.BatchPreparedStatementExecutor.executeBatch()", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeUpdate(int)", "io.shardingjdbc.core.executor.type.prepared.PreparedStatementExecutor.executeQuery()", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.execute(java.lang.String[])", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeUpdate()", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeQuery()", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeUpdate(java.lang.String[])", "io.shardingjdbc.core.executor.type.prepared.PreparedStatementExecutor.executeUpdate()", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.execute()", "io.shardingjdbc.core.executor.ExecutorEngine.executeBatch(io.shardingjdbc.core.constant.SQLType,java.util.Collection,java.util.List,io.shardingjdbc.core.executor.ExecuteCallback)", "io.shardingjdbc.core.executor.ExecutorEngine.executeStatement(io.shardingjdbc.core.constant.SQLType,java.util.Collection,io.shardingjdbc.core.executor.ExecuteCallback)", "io.shardingjdbc.core.executor.type.statement.StatementExecutor.executeUpdate(int[])"]}, {"title": "Can't close connection by ResultSet.getStatement().getConnection().close()", "body": "2.0.0\u7248\u672c\u4e2d\uff0cResultSet\u53cd\u5411\u6301\u6709\u7684Statement\u548cStatement\u53cd\u5411\u6301\u6709\u7684Connection\u65e0\u6cd5\u6b63\u5e38close\u5173\u6389\u3002\r\n\u6e90\u7801\u5982\u4e0b\uff1a\r\nAbstractResultSetAdapter\u4e2d\r\npublic final Statement getStatement() throws SQLException {\r\n        return getResultSets().get(0).getStatement();\r\n}\r\nShardingStatement\u4e2dconnection\u7684getter\u65b9\u6cd5", "url": "https://github.com/apache/shardingsphere/issues/491", "user": "chidaodezhongsheng", "labels": ["bug"], "created": "2017-12-11 15:59:20", "closed": "2017-12-12 05:21:03", "commits": {"94cf835b6eceba9092683b46238abf5778bbcb14": {"commitGHEventType": "closed", "commitUser": "terrymanu"}, "d6a85602e380fa9f8f73105b60caead1d2c21b2e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "94cf835b6eceba9092683b46238abf5778bbcb14", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["099b4dbcc742c3ee063d1ef68b6dd5ff2be811cc"], "nameRev": "94cf835b6eceba9092683b46238abf5778bbcb14 tags/2.0.1~20", "commitMessage": "fix #491\n", "commitDateTime": "2017-12-12 13:20:50", "authoredDateTime": "2017-12-12 13:20:50", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractResultSetAdapter.java", "insertions": 15, "deletions": 17, "lines": 32}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/resultset/ShardingResultSet.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/statement/ShardingStatement.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/core/resultset/ShardingResultSetTest.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/logback-test.xml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractResultSetAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getStatement()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getMetaData()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.findColumn(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getFetchDirection()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getFetchSize()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getType()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getConcurrency()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getWarnings()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.clearWarnings()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingResultSet.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.resultset.ShardingResultSet", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.statement.ShardingPreparedStatement.getResultSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.core.statement.ShardingPreparedStatement.executeQuery()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingStatement.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.statement.ShardingStatement.getResultSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.core.statement.ShardingStatement.executeQuery(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingResultSetTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.resultset.ShardingResultSetTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.core.resultset.ShardingResultSetTest.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d6a85602e380fa9f8f73105b60caead1d2c21b2e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["94cf835b6eceba9092683b46238abf5778bbcb14"], "nameRev": "d6a85602e380fa9f8f73105b60caead1d2c21b2e tags/2.0.1~19", "commitMessage": "fix #491\n", "commitDateTime": "2017-12-12 13:22:06", "authoredDateTime": "2017-12-12 13:22:06", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["94cf835b6eceba9092683b46238abf5778bbcb14"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 23, "lines": 45, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 26.0, "UPD": 0.0, "INS": 17.0, "MOV": 0.0, "DEL": 9.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/statement", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/resultset"], "changesInPackagesSPOON": ["io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getType()", "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter", "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.findColumn(java.lang.String)", "io.shardingjdbc.core.jdbc.core.statement.ShardingPreparedStatement.executeQuery()", "io.shardingjdbc.core.jdbc.core.statement.ShardingStatement.getResultSet()", "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.clearWarnings()", "io.shardingjdbc.core.jdbc.core.statement.ShardingPreparedStatement.getResultSet()", "io.shardingjdbc.core.jdbc.core.resultset.ShardingResultSet", "io.shardingjdbc.core.jdbc.core.statement.ShardingStatement.executeQuery(java.lang.String)", "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getWarnings()", "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getMetaData()", "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getFetchDirection()", "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getStatement()", "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getConcurrency()", "io.shardingjdbc.core.jdbc.adapter.AbstractResultSetAdapter.getFetchSize()"]}, {"title": "Using rownum greater than or equal to or less than or equal to the result of paging is incorrect in Oracle", "body": "\u5728Oracle\u4e0b\u4f7f\u7528Shardingjdbc\u7684\u5206\u9875\u65f6\u9047\u5230\u4e00\u4e2a\u95ee\u9898\uff0c\u6bd4\u5982\u6211\u7684SQL\u662f\uff1aSELECT * FROM (SELECT A1.*, ROWNUM RN1 FROM (SELECT * FROM t_order ORDER BY user_id DESC) A1 WHERE ROWNUM <= 10) B WHERE B.RN1 >= 1\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u5e94\u8be5\u8fd4\u56de10\u6761\u6570\u636e\uff0c\u4f46\u662fShardingjdbc\u8fd4\u56de\u4e869\u6761\u6570\u636e\uff0c\u6f0f\u6389\u4e86\u672c\u6765\u7684\u7b2c\u4e00\u6761\u6570\u636e\u3002\u6211\u770b\u4e86\u4e00\u4e0b\u5728\u6bcf\u4e2a\u5206\u7247\u7684\u6267\u884c\u8bed\u53e5\uff1aSELECT * FROM (SELECT A1.*, ROWNUM RN1 FROM (SELECT * FROM t_order_0 ORDER BY user_id DESC) A1 WHERE ROWNUM <= 10) B WHERE B.RN1 >= 0\uff0c\u8fd9\u91ccRowNum\u53d8\u6210\u4ece0\u5f00\u59cb\u7684\uff0c\u662fShardingjdbc\u9ed8\u8ba4RowNum\u4ece0\u5f00\u59cb\u5417\uff0c\u8fd9\u91ccShardingjdbc\u7684\u5904\u7406\u903b\u8f91\u662f\u600e\u6837\u7684\u5462\uff0c\u8fd8\u662f\u8bf4\u8fd9\u91cc\u5b58\u5728Bug\uff1f\r\n", "url": "https://github.com/apache/shardingsphere/issues/490", "user": "dreapur", "labels": ["bug"], "created": "2017-12-11 10:20:21", "closed": "2017-12-14 09:59:49", "commits": {"97d12149faeea76c4d0de16d780ab7d775850cf6": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "1cbb074d99ba00c506ef2b1b61619a50edfd65b0": {"commitGHEventType": "closed", "commitUser": "terrymanu"}, "1fd2bf9c1e4b49e617bc69a8ff2d8ebf7f05a60a": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "5dda0d1143b7e09d832bdca5388d81b3a165a557": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "5f37ad6f0b259406a24b7dbba336dd96b6f5924f": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "f198cd99ad357aca4517824dd121108a83f507b5": {"commitGHEventType": "referenced", "commitUser": "haocao"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "97d12149faeea76c4d0de16d780ab7d775850cf6", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["a438b1be5a07726324ed8075c61795e4cb340a53"], "nameRev": "97d12149faeea76c4d0de16d780ab7d775850cf6 tags/2.0.1~13", "commitMessage": "for #490\n", "commitDateTime": "2017-12-14 15:25:50", "authoredDateTime": "2017-12-14 15:25:38", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/tbl/expect/select/oracle/SelectSingleTablePagingWithOffsetAndRowCountSql.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/tbl/expect/select/sqlserver/SelectSingleTablePagingWithOffsetAndRowCountSql.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/resources/parser/select_pagination.xml", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_pagination.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1cbb074d99ba00c506ef2b1b61619a50edfd65b0", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["97d12149faeea76c4d0de16d780ab7d775850cf6"], "nameRev": "1cbb074d99ba00c506ef2b1b61619a50edfd65b0 tags/2.0.1~12", "commitMessage": "fix #490\n", "commitDateTime": "2017-12-14 17:59:40", "authoredDateTime": "2017-12-14 17:59:40", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/MergeEngine.java", "insertions": 17, "deletions": 4, "lines": 21}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/limit/LimitDecoratorResultSetMerger.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/limit/RowNumberDecoratorResultSetMerger.java", "insertions": 69, "deletions": 0, "lines": 69}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/limit/TopAndRowNumberDecoratorResultSetMerger.java", "insertions": 66, "deletions": 0, "lines": 66}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/WhereClauseParser.java", "insertions": 23, "deletions": 9, "lines": 32}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/limit/Limit.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLLimitClauseParser.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLWhereClauseParser.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/facade/MySQLSelectClauseParserFacade.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleWhereClauseParser.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/facade/OracleSelectClauseParserFacade.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/PostgreSQLLimitClauseParser.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLDeleteClauseParserFacade.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLSelectClauseParserFacade.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLUpdateClauseParserFacade.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerOffsetClauseParser.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerTopClauseParser.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerWhereClauseParser.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/facade/SQLServerSelectClauseParserFacade.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dql/select/SelectStatement.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/MergeEngineTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/limit/LimitDecoratorResultSetMergerTest.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/helper/ParserAssertHelper.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rewrite/SQLRewriteEngineTest.java", "insertions": 15, "deletions": 15, "lines": 30}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "1fd2bf9c1e4b49e617bc69a8ff2d8ebf7f05a60a", "commitGHEventType": "referenced", "commitUser": "haocao", "commitParents": ["739db57a4bc42166872dc0c679642ce024eeeb93"], "nameRev": "1fd2bf9c1e4b49e617bc69a8ff2d8ebf7f05a60a tags/2.0.1~7", "commitMessage": "Add test cases for #490.\n", "commitDateTime": "2017-12-15 10:22:36", "authoredDateTime": "2017-12-15 10:22:36", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select_pagination.xml", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "sharding-jdbc-core/src/test/resources/parser/select_pagination.xml", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_pagination.xml", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5dda0d1143b7e09d832bdca5388d81b3a165a557", "commitGHEventType": "referenced", "commitUser": "haocao", "commitParents": ["1fd2bf9c1e4b49e617bc69a8ff2d8ebf7f05a60a"], "nameRev": "5dda0d1143b7e09d832bdca5388d81b3a165a557 tags/2.0.1~6", "commitMessage": "Add test cases for #490.\n", "commitDateTime": "2017-12-15 11:46:20", "authoredDateTime": "2017-12-15 11:46:20", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select_pagination.xml", "insertions": 16, "deletions": 17, "lines": 33}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/tbl/expect/select/oracle/SelectSingleTablePagingWithOffsetAndRowCountSql.xml", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/tbl/expect/select/sqlserver/SelectSingleTablePagingWithOffsetAndRowCountSql.xml", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5f37ad6f0b259406a24b7dbba336dd96b6f5924f", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["5dda0d1143b7e09d832bdca5388d81b3a165a557"], "nameRev": "5f37ad6f0b259406a24b7dbba336dd96b6f5924f tags/2.0.1~5", "commitMessage": "for #490\n", "commitDateTime": "2017-12-15 11:58:59", "authoredDateTime": "2017-12-15 11:58:59", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/pagination/RowNumberDecoratorResultSetMerger.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/pagination/TopAndRowNumberDecoratorResultSetMerger.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select_pagination.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_pagination.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RowNumberDecoratorResultSetMerger.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.merger.pagination.RowNumberDecoratorResultSetMerger.skipOffset()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "TopAndRowNumberDecoratorResultSetMerger.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.merger.pagination.TopAndRowNumberDecoratorResultSetMerger.skipOffset()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f198cd99ad357aca4517824dd121108a83f507b5", "commitGHEventType": "referenced", "commitUser": "haocao", "commitParents": ["d3e2dde3afc4f149fd6bc92186c9b4b4dfa085e8"], "nameRev": "f198cd99ad357aca4517824dd121108a83f507b5 tags/2.0.1~1", "commitMessage": "Add test cases for #490.\n", "commitDateTime": "2017-12-15 16:19:24", "authoredDateTime": "2017-12-15 16:19:24", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select_pagination.xml", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["97d12149faeea76c4d0de16d780ab7d775850cf6", "1cbb074d99ba00c506ef2b1b61619a50edfd65b0", "1fd2bf9c1e4b49e617bc69a8ff2d8ebf7f05a60a"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 223, "deletions": 33, "lines": 256, "gitFilesChange": 20}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/limit", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context"], "changesInPackagesSPOON": []}, {"title": "Uses `RuntimeBeanReference` to prevent the creation of `InnerBean` on spring namespace", "body": "\r\n\r\n### \u7248\u672c\u4fe1\u606f\r\nsharding-jdbc\uff1a1.5.1\r\nspring-boot: 1.5.9\r\ndruid\uff1a1.1.6\r\ndruid-spring-boot-starter\uff1a1.1.6\r\n### \u73b0\u8c61\r\n\u4f7f\u7528sharding-jdbc\u7684namespace\u7684\u914d\u7f6e\u65b9\u5f0f\u65f6\uff0crdb:sharding-rule\u91cc\u6307\u5b9a\u7684data-sources\u4f7f\u7528\u7684\u5e76\u4e0d\u662fcontext\u91cc\u5df2\u6709\u7684datasource bean\uff0c\u800c\u662f\u81ea\u884c\u521b\u5efa\u7684\u4e00\u4e2ainner datasource bean\u3002\r\n\u540c\u65f6\u7ffb\u9605\u4e86\u4e00\u4e0bsharding-jdbc 2.0.0\u91cc\u7684starter\uff0c\u53d1\u73b0\u4e5f\u662f\u4f1a\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\u76f4\u63a5\u81ea\u884c\u6784\u5efadatasource\u3002\r\n\r\n### \u95ee\u9898\r\n1. \u4e3a\u4f55\u603b\u662f\u72ec\u7acb\u521b\u5efadatasource\uff0c\u662f\u6709\u4ec0\u4e48\u7279\u6b8a\u8003\u8651\u4e48\uff0c\u800c\u4e0d\u662f\u7528context\u4e2d\u73b0\u6709\u7684datasource bean\u4e48\uff1f\r\n1. \u53e6\u4e00\u4e2a\u95ee\u9898\u662f\u517c\u5bb9\u6027\u95ee\u9898\uff0c\u5f53\u4f7f\u7528\u4e86druid-spring-boot-starter\uff0c\u8fd9\u4e2astarter\u91cc\u7684\u591a\u6570\u636e\u6e90\u914d\u7f6e\u662f\u57fa\u4e8espring \u7684FactoryBeanPostProcessor + configurationProperties\u6765\u5b9e\u73b0\u7684\uff0c\u800cspring\u91cc\u6709\u4e2a\u673a\u5236\u662finner bean\u4e0d\u6267\u884cFactoryBeanPostProcessor,\u4ece\u800c\u5bfc\u81f4sharding-jdbc\u91cc\u7684inner datasource bean\u65e0\u6cd5\u6b63\u5e38\u521d\u59cb\u5316\u3002", "url": "https://github.com/apache/shardingsphere/issues/489", "user": "zhouyougit", "labels": ["bug"], "created": "2017-12-11 07:56:37", "closed": "2017-12-12 05:29:11", "commits": {"829bb009a3ae01debd4bb908dbf543668e378923": {"commitGHEventType": "closed", "commitUser": "haocao"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "829bb009a3ae01debd4bb908dbf543668e378923", "commitGHEventType": "closed", "commitUser": "haocao", "commitParents": ["d6a85602e380fa9f8f73105b60caead1d2c21b2e"], "nameRev": "829bb009a3ae01debd4bb908dbf543668e378923 tags/2.0.1~18", "commitMessage": "Fixed #489.\n", "commitDateTime": "2017-12-12 13:22:48", "authoredDateTime": "2017-12-12 13:22:15", "commitGitStats": [{"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/parser/MasterSlaveDataSourceBeanDefinitionParser.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/parser/ShardingDataSourceBeanDefinitionParser.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/parser/OrchestrationMasterSlaveDataSourceBeanDefinitionParser.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/parser/OrchestrationShardingDataSourceBeanDefinitionParser.java", "insertions": 5, "deletions": 4, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveDataSourceBeanDefinitionParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.spring.namespace.parser.MasterSlaveDataSourceBeanDefinitionParser.parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.spring.namespace.parser.MasterSlaveDataSourceBeanDefinitionParser.parseSlaveDataSources(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "io.shardingjdbc.spring.namespace.parser.MasterSlaveDataSourceBeanDefinitionParser.parseSlaveDataSources(org.w3c.dom.Element)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingDataSourceBeanDefinitionParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.spring.namespace.parser.ShardingDataSourceBeanDefinitionParser.parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.spring.namespace.parser.ShardingDataSourceBeanDefinitionParser.parseDataSources(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "io.shardingjdbc.spring.namespace.parser.ShardingDataSourceBeanDefinitionParser.parseDataSources(org.w3c.dom.Element)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OrchestrationMasterSlaveDataSourceBeanDefinitionParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.orchestration.spring.namespace.parser.OrchestrationMasterSlaveDataSourceBeanDefinitionParser.parseDataSources(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "OrchestrationShardingDataSourceBeanDefinitionParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.orchestration.spring.namespace.parser.OrchestrationShardingDataSourceBeanDefinitionParser.parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.orchestration.spring.namespace.parser.OrchestrationShardingDataSourceBeanDefinitionParser.parseDataSources(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "io.shardingjdbc.orchestration.spring.namespace.parser.OrchestrationShardingDataSourceBeanDefinitionParser.parseDataSources(org.w3c.dom.Element)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["829bb009a3ae01debd4bb908dbf543668e378923"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 16, "lines": 36, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 16, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 11, "spoonFilesChanged": 4, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/parser", "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace"], "changesInPackagesSPOON": ["io.shardingjdbc.spring.namespace.parser.MasterSlaveDataSourceBeanDefinitionParser.parseSlaveDataSources(org.w3c.dom.Element)", "io.shardingjdbc.spring.namespace.parser.ShardingDataSourceBeanDefinitionParser.parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "io.shardingjdbc.orchestration.spring.namespace.parser.OrchestrationShardingDataSourceBeanDefinitionParser.parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "io.shardingjdbc.spring.namespace.parser.MasterSlaveDataSourceBeanDefinitionParser.parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "io.shardingjdbc.orchestration.spring.namespace.parser.OrchestrationShardingDataSourceBeanDefinitionParser.parseDataSources(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "io.shardingjdbc.spring.namespace.parser.ShardingDataSourceBeanDefinitionParser.parseDataSources(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "io.shardingjdbc.orchestration.spring.namespace.parser.OrchestrationShardingDataSourceBeanDefinitionParser.parseDataSources(org.w3c.dom.Element)", "io.shardingjdbc.spring.namespace.parser.MasterSlaveDataSourceBeanDefinitionParser.parseSlaveDataSources(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)", "io.shardingjdbc.spring.namespace.parser.ShardingDataSourceBeanDefinitionParser.parseDataSources(org.w3c.dom.Element)", "io.shardingjdbc.orchestration.spring.namespace.parser.OrchestrationMasterSlaveDataSourceBeanDefinitionParser.parseDataSources(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)"]}, {"title": "Orchestration sharding props overwrite not working", "body": "", "url": "https://github.com/apache/shardingsphere/issues/485", "user": "haocao", "labels": ["bug"], "created": "2017-12-07 10:02:51", "closed": "2017-12-07 10:06:54", "commits": {"09a59e901a3bb6afaf78bb73e52fca7a880275f9": {"commitGHEventType": "closed", "commitUser": "haocao"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "09a59e901a3bb6afaf78bb73e52fca7a880275f9", "commitGHEventType": "closed", "commitUser": "haocao", "commitParents": ["0bb27709dc7a1a673501cdd5358acd063f6bf542"], "nameRev": "09a59e901a3bb6afaf78bb73e52fca7a880275f9 tags/2.0.1~25", "commitMessage": "Fixed #485.\n", "commitDateTime": "2017-12-07 18:06:45", "authoredDateTime": "2017-12-07 18:06:45", "commitGitStats": [{"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/config/ConfigurationService.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConfigurationService.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.orchestration.internal.config.ConfigurationService.hasShardingProperties()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["09a59e901a3bb6afaf78bb73e52fca7a880275f9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/config"], "changesInPackagesSPOON": ["io.shardingjdbc.orchestration.internal.config.ConfigurationService.hasShardingProperties()"]}, {"title": "README\u7684yaml\u914d\u7f6e\u4e0d\u652f\u63012.0", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n2.0\r\n### Expected behavior\r\n\u6b63\u5e38\u542f\u52a8\r\n### Actual behavior\r\n\u62a5tables\u5c5e\u6027\u4e0d\u5b58\u5728\r\n### Steps to reproduce the behavior\r\n\u628aREADME\u63d0\u4f9b\u7684yaml\u6587\u4ef6\u5b58\u4e3ademo.yaml,\u7136\u540e\u542f\u52a8\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n\r\n```yaml\r\nshardingRule: // <--- 2.0\u591a\u4e86\u8fd9\u4e00\u5c42, 1.x\u6ca1\u6709\u8fd9\u4e00\u5c42\r\n  tables:\r\n    t_order: \r\n      actualDataNodes: ds_${0..1}.t_order_${0..1}\r\n      databaseStrategy: \r\n        inline:\r\n          shardingColumn: user_id\r\n          algorithmExpression: ds_${user_id % 2}\r\n      tableStrategy: \r\n        inline:\r\n          shardingColumn: order_id\r\n          algorithmExpression: t_order_${order_id % 2}\r\n```", "url": "https://github.com/apache/shardingsphere/issues/481", "user": "wendal", "labels": ["bug"], "created": "2017-12-06 09:23:24", "closed": "2017-12-07 02:07:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "sharding-jdbc-raw-jdbc-java-example getMetaData() \u518d setAutoCommit(false) \u65e0\u6cd5\u5bf9\u4e4b\u540e\u521b\u5efa\u7684 realconnection \u751f\u6548", "body": "Sharding-jdbc 2.0.0.M3\r\nexample master \u5206\u652f\r\n\u4e3a\u590d\u73b0\u6b64\u60c5\u51b5\uff0c\u4fee\u6539 sharding-jdbc-raw-jdbc-java-example \u4e2d\u7684 RawJdbcRepository \u7684 execute() \u65b9\u6cd5\uff1a\r\n```java\r\nConnection conn = dataSource.getConnection();\r\n\r\nconn.getMetaData();\r\n\r\nconn.setAutoCommit(false);\r\n\r\nStatement statement = conn.createStatement();\r\nstatement.execute(sql);\r\nconn.commit();\r\n\r\nstatement.close();\r\nconn.close();\r\n```\r\ngetMetaData() \u65f6\u83b7\u53d6\u4e86\u4e00\u4e2a realconnection \u5b58\u5165\u4e86 AbstractConnectionAdapter \u7684 cachedConnections \u4e2d\uff0c\u5bfc\u81f4\u4e4b\u540e\u7684\r\ncachedConnections \u4e2d\u4e00\u4e2a\u8fde\u63a5\u662f autocommit = true \u53e6\u4e00\u4e2a autocommit = false \u5728 commit \u65f6\uff0c\u62a5\u9519\u4e86\uff1a\r\n```\r\nException in thread \"main\" java.sql.SQLException\r\n\tat io.shardingjdbc.core.jdbc.adapter.WrapperAdapter.throwSQLExceptionIfNecessary(WrapperAdapter.java:82)\r\n\tat io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.commit(AbstractConnectionAdapter.java:77)\r\n\tat io.shardingjdbc.example.jdbc.java.repository.RawJdbcRepository.execute(RawJdbcRepository.java:109)\r\n\tat io.shardingjdbc.example.jdbc.java.repository.RawJdbcRepository.createTable(RawJdbcRepository.java:33)\r\n\tat io.shardingjdbc.example.jdbc.java.repository.RawJdbcRepository.demo(RawJdbcRepository.java:21)\r\n\tat io.shardingjdbc.example.jdbc.java.RawJdbcJavaShardingDatabaseAndTableMain.main(RawJdbcJavaShardingDatabaseAndTableMain.java:40)\r\n```\r\n", "url": "https://github.com/apache/shardingsphere/issues/472", "user": "liuxiaozhu", "labels": ["bug"], "created": "2017-11-24 10:05:24", "closed": "2017-11-27 11:59:11", "commits": {"28dad51c8d2bd0e9ba184ba2a6168c159cb91385": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "28dad51c8d2bd0e9ba184ba2a6168c159cb91385", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["2f206426f7ed6d1c6071c42499e5916eb8b6f2f4"], "nameRev": "28dad51c8d2bd0e9ba184ba2a6168c159cb91385 tags/2.0.0~27", "commitMessage": "fix #472\n", "commitDateTime": "2017-11-27 19:58:52", "authoredDateTime": "2017-11-27 19:58:52", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 3, "deletions": 12, "lines": 15}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractStatementAdapter.java", "insertions": 6, "deletions": 24, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractConnectionAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.setAutoCommit(boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.setReadOnly(boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.setTransactionIsolation(int)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "AbstractStatementAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setPoolable(boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setFetchSize(int)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setEscapeProcessing(boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setMaxFieldSize(int)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setMaxRows(int)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setQueryTimeout(int)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["28dad51c8d2bd0e9ba184ba2a6168c159cb91385"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 36, "lines": 45, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 18, "UPD": 0, "INS": 0, "MOV": 9, "DEL": 9, "spoonFilesChanged": 2, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter"], "changesInPackagesSPOON": ["io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setMaxRows(int)", "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setQueryTimeout(int)", "io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.setReadOnly(boolean)", "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setMaxFieldSize(int)", "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setEscapeProcessing(boolean)", "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setFetchSize(int)", "io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.setAutoCommit(boolean)", "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.setPoolable(boolean)", "io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.setTransactionIsolation(int)"]}, {"title": "com.dangdang.ddframe.rdb.sharding.parsing.lexer.token.Token \u5728\u865a\u62df\u673a\u5185\u5b58\u4e2d\u6709\u5f88\u591a\u7684\u5b9e\u4f8b", "body": "> \u8bf7\u770b\u4e0b\uff0c\u8fd8\u662fcpu\u4f7f\u7528\u8fc7\u9ad8\u7684\u95ee\u9898\uff0c\u8fd9\u4e24\u5929\u53d1\u73b0com.dangdang.ddframe.rdb.sharding.parsing.lexer.token.Token\u865a\u62df\u673a\u4e0d\u505c\u7684\u518d\u5904\u7406\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u662fsql\u89e3\u6790\u7528\u5230\u7684\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u7684\u521b\u5efa\u9500\u6bc1\u8c8c\u4f3c\u5f88\u9891\u7e41\u554a\uff01\r\n![token](https://user-images.githubusercontent.com/31297055/33160185-181bf112-d055-11e7-83ea-be936378c10c.PNG)\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/464", "user": "yuexianbing", "labels": ["bug"], "created": "2017-11-23 05:50:28", "closed": "2017-11-30 07:28:32", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Sharding DDL statement for multiple table's connection leak problem", "body": "As cached connection map is stored as multiple connection, but single table's DDL statements doesn't reuse the connection and caused the leak connection problem.", "url": "https://github.com/apache/shardingsphere/issues/452", "user": "haocao", "labels": ["bug"], "created": "2017-11-20 05:54:30", "closed": "2017-11-20 06:00:09", "commits": {"3c27db22212d7d7bbd53d2c0d0f98cc9be93f33b": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3c27db22212d7d7bbd53d2c0d0f98cc9be93f33b", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["bce237f15e8b4069b9d66bcbb9a1c43b0650c647"], "nameRev": "3c27db22212d7d7bbd53d2c0d0f98cc9be93f33b tags/2.0.0.M3~2", "commitMessage": "fix #452\n", "commitDateTime": "2017-11-20 13:58:59", "authoredDateTime": "2017-11-20 13:58:59", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection/ShardingConnection.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingConnection.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.connection.ShardingConnection.getAllConnections(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3c27db22212d7d7bbd53d2c0d0f98cc9be93f33b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection"], "changesInPackagesSPOON": ["io.shardingjdbc.core.jdbc.core.connection.ShardingConnection.getAllConnections(java.lang.String)"]}, {"title": "https://github.com/shardingjdbc/sharding-jdbc,\u6b64\u9875\u6700\u4e0b\u65b9\u6709\u7b14\u8bef\uff0c\u89c1\uff1adataSource2.setDriverClassName(\"com.mysql.jdbc.Driver\");", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n### Expected behavior\r\n\r\n### Actual behavior\r\n\r\n### Steps to reproduce the behavior\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n", "url": "https://github.com/apache/shardingsphere/issues/437", "user": "85179229", "labels": ["bug"], "created": "2017-11-13 09:58:39", "closed": "2017-11-13 10:02:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\u8bfb\u5199\u5206\u79bb\u591a\u4ece\u5e93\u914d\u7f6eRoundRobin\u7b97\u6cd5\u5e76\u4f7f\u7528MyBatis\u65f6\uff0c\u53ea\u80fd\u8def\u7531\u5230\u540c\u4e00\u4ece\u5e93", "body": "", "url": "https://github.com/apache/shardingsphere/issues/436", "user": "haocao", "labels": ["bug"], "created": "2017-11-09 08:17:35", "closed": "2017-11-16 06:22:22", "commits": {"91d7961b0b4619c5dcb19779f9b3735f982775c4": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "91d7961b0b4619c5dcb19779f9b3735f982775c4", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["2a89cc1a6a3e56adfd4f0f683302d2ee43025500"], "nameRev": "91d7961b0b4619c5dcb19779f9b3735f982775c4 tags/2.0.0.M3~6", "commitMessage": "fix #436\n", "commitDateTime": "2017-11-16 14:20:58", "authoredDateTime": "2017-11-16 14:20:58", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection/MasterSlaveConnection.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnection.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.core.connection.MasterSlaveConnection.getMetaData()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["91d7961b0b4619c5dcb19779f9b3735f982775c4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection"], "changesInPackagesSPOON": ["io.shardingjdbc.core.jdbc.core.connection.MasterSlaveConnection.getMetaData()"]}, {"title": "\u5e95\u5c42\u6539\u5199\u903b\u8f91SQL\u540e\u6dfb\u52a0\u4e86`ORDER BY key ASC`, \u672a\u5224\u65ad\u522b\u540d\u662f\u5426\u4e3a\u5173\u952e\u5b57\u672a\u52a0\u8f6c\u4e49\u7b26\u5bfc\u81f4\u4e86SQL\u5f02\u5e38", "body": "\u5728\u805a\u5408\u51fd\u6570\u4e2d\u522b\u540d\u4e3a\u5173\u952e\u5b57`key`\u65f6\uff0c\u5e95\u5c42\u6539\u5199\u903b\u8f91SQL\u540e\u6dfb\u52a0\u4e86`ORDER BY key ASC`, \u672a\u5224\u65ad\u522b\u540d\u662f\u5426\u4e3a\u5173\u952e\u5b57\u672a\u52a0\u8f6c\u4e49\u7b26\u5bfc\u81f4\u4e86SQL\u5f02\u5e38\uff01\r\n\u5e94\u8be5\u662f\u4e00\u4e2a\u901a\u75c5\uff0c\u5e95\u5c42\u5728\u6539\u5199\u540e\u62fc\u63a5SQL\u5e94\u8be5\u4e3b\u52a8\u8f6c\u4e49\u3002\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.4.1\r\n\r\n### Expected behavior\r\n\u6b63\u5e38\u8fd4\u56de\u7ed3\u679c\r\n\r\n### Actual behavior\r\n\r\n````\r\n17:23:54.166 INFO  [main] - Started ParkingRecordRepostoryTest in 21.433 seconds (JVM running for 23.256)\r\n17:23:54.352 INFO  [main] - Logic SQL: SELECT\r\n\t\t\tDATE_FORMAT(pp.`result_time`, '%Y-%m') AS `key`,\r\n\t\t\tSUM(pp.`pay_value`) AS `value`\r\n\t\tFROM `_parking_payment` pp\r\n\t\tLEFT JOIN `_parking_order` po ON pp.`serial` = po.`self_order`\r\n\t\t WHERE po.`status` = 1 AND\r\n\t\t\tpp.`result` = 1 AND\r\n\t\t\tDATE_FORMAT(pp.`result_time`, '%Y-%m') IN\r\n\t\t\t\t(\r\n\t\t\t\t\tDATE_FORMAT(?, '%Y-%m')\r\n\t\t\t\t,\r\n\t\t\t\t\tDATE_FORMAT(?, '%Y-%m')\r\n\t\t\t\t) \r\n\t\tGROUP BY DATE_FORMAT(pp.`result_time`, '%Y-%m')\r\n17:23:54.354 INFO  [main] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=_parking_payment, alias=Optional.of(pp)), Table(name=_parking_order, alias=Optional.of(po))]), conditions=Conditions(conditions={}), sqlTokens=[TableToken(beginPosition=100, originalLiterals=`_parking_payment`), TableToken(beginPosition=134, originalLiterals=`_parking_order`), com.dangdang.ddframe.rdb.sharding.parsing.parser.token.OrderByToken@2098d37d], parametersIndex=2)), containStar=false, selectListLastPosition=95, groupByLastPosition=410, items=[AggregationSelectItem(type=SUM, innerExpression=(pp.`pay_value`), alias=Optional.of(value), derivedAggregationSelectItems=[], index=-1), CommonSelectItem(expression=DATE_FORMAT(pp.result_time, %Y-%m), alias=Optional.of(key))], groupByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(DATE_FORMAT(pp.`result_time`, '%Y-%m')), type=ASC, nullOrderType=ASC, index=-1, alias=Optional.of(key))], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(DATE_FORMAT(pp.`result_time`, '%Y-%m')), type=ASC, nullOrderType=ASC, index=-1, alias=Optional.of(key))], limit=null, subQueryStatement=null)\r\n17:23:54.354 INFO  [main] - Actual SQL: park_pay ::: SELECT\r\n\t\t\tDATE_FORMAT(pp.`result_time`, '%Y-%m') AS `key`,\r\n\t\t\tSUM(pp.`pay_value`) AS `value`\r\n\t\tFROM _parking_payment pp\r\n\t\tLEFT JOIN _parking_order po ON pp.`serial` = po.`self_order`\r\n\t\t WHERE po.`status` = 1 AND\r\n\t\t\tpp.`result` = 1 AND\r\n\t\t\tDATE_FORMAT(pp.`result_time`, '%Y-%m') IN\r\n\t\t\t\t(\r\n\t\t\t\t\tDATE_FORMAT(?, '%Y-%m')\r\n\t\t\t\t,\r\n\t\t\t\t\tDATE_FORMAT(?, '%Y-%m')\r\n\t\t\t\t) \r\n\t\tGROUP BY DATE_FORMAT(pp.`result_time`, '%Y-%m') ORDER BY key ASC  ::: [2017-01-01 00:00:00.0, 2016-12-01 00:00:00.0]\r\n\r\norg.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \r\n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14\r\n### The error may exist in com/chinaroad/parking/persistence/mapper/ParkingPaymentMapper.xml\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: SELECT    DATE_FORMAT(pp.`result_time`, '%Y-%m') AS `key`,    SUM(pp.`pay_value`) AS `value`   FROM `_parking_payment` pp   LEFT JOIN `_parking_order` po ON pp.`serial` = po.`self_order`    WHERE po.`status` = 1 AND    pp.`result` = 1 AND    DATE_FORMAT(pp.`result_time`, '%Y-%m') IN     (      DATE_FORMAT(?, '%Y-%m')     ,      DATE_FORMAT(?, '%Y-%m')     )    GROUP BY DATE_FORMAT(pp.`result_time`, '%Y-%m')\r\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14\r\n\r\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)\r\n\tat com.sun.proxy.$Proxy65.selectList(Unknown Source)\r\n\tat org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)\r\n\tat org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)\r\n\tat com.sun.proxy.$Proxy72.statsByMonths(Unknown Source)\r\n\tat com.chinaroad.parking.persistence.mapper.ParkingRecordRepostoryTest.testStatsByMonth(ParkingRecordRepostoryTest.java:42)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:252)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:94)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:191)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: org.apache.ibatis.exceptions.PersistenceException: \r\n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14\r\n### The error may exist in com/chinaroad/parking/persistence/mapper/ParkingPaymentMapper.xml\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: SELECT    DATE_FORMAT(pp.`result_time`, '%Y-%m') AS `key`,    SUM(pp.`pay_value`) AS `value`   FROM `_parking_payment` pp   LEFT JOIN `_parking_order` po ON pp.`serial` = po.`self_order`    WHERE po.`status` = 1 AND    pp.`result` = 1 AND    DATE_FORMAT(pp.`result_time`, '%Y-%m') IN     (      DATE_FORMAT(?, '%Y-%m')     ,      DATE_FORMAT(?, '%Y-%m')     )    GROUP BY DATE_FORMAT(pp.`result_time`, '%Y-%m')\r\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14\r\n\tat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)\r\n\t... 35 more\r\nCaused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.threadlocal.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.execute(ExecutorEngine.java:129)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executePreparedStatement(ExecutorEngine.java:96)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:93)\r\n\tat com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:140)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\r\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\r\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\r\n\t... 41 more\r\nCaused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.threadlocal.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:181)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.syncExecute(ExecutorEngine.java:155)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.execute(ExecutorEngine.java:124)\r\n\t... 52 more\r\nCaused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'key ASC' at line 14\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat com.mysql.jdbc.Util.handleNewInstance(Util.java:425)\r\n\tat com.mysql.jdbc.Util.getInstance(Util.java:408)\r\n\tat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)\r\n\tat com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)\r\n\tat com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)\r\n\tat com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)\r\n\tat com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)\r\n\tat com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)\r\n\tat com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)\r\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:494)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:97)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:93)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:175)\r\n\t... 54 more\r\n````\r\n\r\n### Steps to reproduce the behavior\r\n\u903b\u8f91SQL:\r\n\r\n````\r\nSELECT\r\n\t\t\tDATE_FORMAT(pp.`result_time`, '%Y-%m') AS `key`,\r\n\t\t\tSUM(pp.`pay_value`) AS `value`\r\n\t\tFROM `_parking_payment` pp\r\n\t\tLEFT JOIN `_parking_order` po ON pp.`serial` = po.`self_order`\r\n\t\t WHERE po.`status` = 1 AND\r\n\t\t\tpp.`result` = 1 AND\r\n\t\t\tDATE_FORMAT(pp.`result_time`, '%Y-%m') IN\r\n\t\t\t\t(\r\n\t\t\t\t\tDATE_FORMAT(?, '%Y-%m')\r\n\t\t\t\t,\r\n\t\t\t\t\tDATE_FORMAT(?, '%Y-%m')\r\n\t\t\t\t) \r\n\t\tGROUP BY DATE_FORMAT(pp.`result_time`, '%Y-%m')\r\n\r\n````\r\n\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n", "url": "https://github.com/apache/shardingsphere/issues/419", "user": "Anricx", "labels": ["bug"], "created": "2017-10-19 09:29:03", "closed": "2017-10-20 05:20:50", "commits": {"8c112eda3b386d485b5d9a71d136a81ea332925e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8c112eda3b386d485b5d9a71d136a81ea332925e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["49f55999f81f6b478c99844338d13a2d6c01726c"], "nameRev": "8c112eda3b386d485b5d9a71d136a81ea332925e tags/2.0.0.M2~81", "commitMessage": "fix #419\n", "commitDateTime": "2017-10-20 13:20:15", "authoredDateTime": "2017-10-20 13:20:15", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/dialect/mysql/MySQLKeyword.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rewrite/SQLRewriteEngine.java", "insertions": 13, "deletions": 5, "lines": 18}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/router/ParsingSQLRouter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util/SQLUtil.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rewrite/SQLRewriteEngineTest.java", "insertions": 19, "deletions": 17, "lines": 36}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select_group_by.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/masterslave/expect/select_group_by/SelectGroupByWithAliasIsKeyword.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/db/expect/select_group_by/SelectGroupByWithAliasIsKeyword.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/dbtbl/expect/select_group_by/SelectGroupByWithAliasIsKeyword.xml", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/masterslave/expect/select_group_by/SelectGroupByWithAliasIsKeyword.xml", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/sharding/tbl/expect/select_group_by/SelectGroupByWithAliasIsKeyword.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/parser/select_group_by.xml", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_group_by.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLKeyword.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.parsing.lexer.dialect.mysql.MySQLKeyword", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLRewriteEngine.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngine.appendOrderByToken(io.shardingjdbc.core.rewrite.SQLBuilder,int,java.util.List)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngine", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngine.appendTableToken(io.shardingjdbc.core.rewrite.SQLBuilder,io.shardingjdbc.core.parsing.parser.token.TableToken,int,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngine.appendItemsToken(io.shardingjdbc.core.rewrite.SQLBuilder,io.shardingjdbc.core.parsing.parser.token.ItemsToken,int,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ParsingSQLRouter.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.routing.router.ParsingSQLRouter.route(java.lang.String,java.util.List,io.shardingjdbc.core.parsing.parser.sql.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLUtil.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.util.SQLUtil.getOriginalValue(java.lang.String,io.shardingjdbc.core.constant.DatabaseType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLRewriteEngineTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertGenerateSQLForCartesian()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteWithoutChange()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForTableName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForOrderByAndGroupByDerivedColumns()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForAggregationDerivedColumns()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForAutoGeneratedKeyColumn()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForRowNum()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForTopAndRowNumber()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForLimitForMemoryGroupBy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForRowNumForMemoryGroupBy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForTopAndRowNumberForMemoryGroupBy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForLimitForNotRewriteLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForRowNumForNotRewriteLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForTopAndRowNumberForNotRewriteLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertRewriteForDerivedOrderBy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.rewrite.SQLRewriteEngineTest.assertGenerateSQL()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8c112eda3b386d485b5d9a71d136a81ea332925e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 39, "deletions": 7, "lines": 46, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 16, "UPD": 1, "INS": 10, "MOV": 4, "DEL": 1, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rewrite", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/dialect", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/router"], "changesInPackagesSPOON": ["io.shardingjdbc.core.rewrite.SQLRewriteEngine.appendItemsToken(io.shardingjdbc.core.rewrite.SQLBuilder,io.shardingjdbc.core.parsing.parser.token.ItemsToken,int,java.util.List)", "io.shardingjdbc.core.parsing.lexer.dialect.mysql.MySQLKeyword", "io.shardingjdbc.core.util.SQLUtil.getOriginalValue(java.lang.String,io.shardingjdbc.core.constant.DatabaseType)", "io.shardingjdbc.core.rewrite.SQLRewriteEngine.appendTableToken(io.shardingjdbc.core.rewrite.SQLBuilder,io.shardingjdbc.core.parsing.parser.token.TableToken,int,java.util.List)", "io.shardingjdbc.core.routing.router.ParsingSQLRouter.route(java.lang.String,java.util.List,io.shardingjdbc.core.parsing.parser.sql.SQLStatement)", "io.shardingjdbc.core.rewrite.SQLRewriteEngine.appendOrderByToken(io.shardingjdbc.core.rewrite.SQLBuilder,int,java.util.List)", "io.shardingjdbc.core.rewrite.SQLRewriteEngine"]}, {"title": "Fail to commit a Connection", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n1.5.4.1\r\n2.0.0.M1\r\n\r\n### Expected behavior\r\n\r\nFollow the step below:\r\n\r\nThe transaction will be executed correctly. \r\n\r\n### Actual behavior\r\n\r\nA ```java.sql.SQLException``` will be raised.\r\n\r\ndetails:\r\n```\r\nCould not commit JDBC transaction; nested exception is java.sql.SQLException: Can't call commit when autocommit=true\r\n```\r\n\r\n### Steps to reproduce the behavior\r\n\r\n 1. Configure a ```ShardingDataSource``` that contains two sub-datasources.\r\n 1. Get a ```ShardingConnection``` from this ```ShardingDataSource```.\r\n 1. **Invoke ```ShardingConnection#getMetaData()```.**\r\n 1. Invoke ```ShardingConnection#setAutoCommit(false)```.\r\n 1. Use that ```ShardingConnection``` to execute  a dml sql.\r\n 1.  Invoke ```ShardingConnection#commit()```.\r\n", "url": "https://github.com/apache/shardingsphere/issues/412", "user": "hanahmily", "labels": ["bug"], "created": "2017-10-16 07:30:16", "closed": "2017-10-18 10:19:26", "commits": {"d5c1ff12ca51b50df1f2e6d33395bffeaf8f3c71": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "d5c1ff12ca51b50df1f2e6d33395bffeaf8f3c71", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["f08802776975af250b20023b2d855ff7aad36914", "80770ca8590ebd71fe74452172637859443ad76b"], "nameRev": "d5c1ff12ca51b50df1f2e6d33395bffeaf8f3c71 tags/2.0.0.M2~66^2^2~1", "commitMessage": "Merge pull request #414 from hanahmily/master\n\nFix #412 ShardingConnection gets the DatabaseMetaData before starting...", "commitDateTime": "2017-10-18 05:19:26", "authoredDateTime": "2017-10-18 05:19:26", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 3, "deletions": 12, "lines": 15}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/adapter/ConnectionAdapterTest.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractConnectionAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.setAutoCommit(boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.setReadOnly(boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractConnectionAdapter.setTransactionIsolation(int)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ConnectionAdapterTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.ConnectionAdapterTest.assertSetAutoCommit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.ConnectionAdapterTest.assertSetReadOnly()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.ConnectionAdapterTest.assertSetTransactionIsolation()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "sharding-jdbc-spring-boot-starter cannot support HikariDataSource", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n2.0.0.M1", "url": "https://github.com/apache/shardingsphere/issues/404", "user": "terrymanu", "labels": ["bug"], "created": "2017-10-11 07:33:17", "closed": "2017-10-11 08:25:38", "commits": {"d390fd0ed2616ac8950ee9ac2b2f1db86dfa5c0c": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d390fd0ed2616ac8950ee9ac2b2f1db86dfa5c0c", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["444f9504ad0a1393bcc2244552146bb1afbdfd1a"], "nameRev": "d390fd0ed2616ac8950ee9ac2b2f1db86dfa5c0c tags/2.0.0.M2~86^2~1", "commitMessage": "fix #404\n", "commitDateTime": "2017-10-11 15:55:56", "authoredDateTime": "2017-10-11 15:55:56", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "pom.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-jdbc-core/pom.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util/DataSourceUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/util/AllUtilTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/util/DataSourceUtilTest.java", "insertions": 55, "deletions": 0, "lines": 55}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/io/shardingjdbc/spring/datasource/DataSourceBeanUtil.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DataSourceUtil.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.util.DataSourceUtil.callSetterMethod(javax.sql.DataSource,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllUtilTests.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.util.AllUtilTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DataSourceUtilTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.util.DataSourceUtilTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DataSourceBeanUtil.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.spring.datasource.DataSourceBeanUtil.createDataSourceBean(org.springframework.context.ApplicationContext,java.lang.String,javax.sql.DataSource)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d390fd0ed2616ac8950ee9ac2b2f1db86dfa5c0c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/io/shardingjdbc/spring/datasource", "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util"], "changesInPackagesSPOON": ["io.shardingjdbc.core.util.DataSourceUtil.callSetterMethod(javax.sql.DataSource,java.lang.String,java.lang.String)", "io.shardingjdbc.spring.datasource.DataSourceBeanUtil.createDataSourceBean(org.springframework.context.ApplicationContext,java.lang.String,javax.sql.DataSource)"]}, {"title": "Hint route cannot ignore case sensative", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.4.1", "url": "https://github.com/apache/shardingsphere/issues/398", "user": "terrymanu", "labels": ["bug"], "created": "2017-10-06 04:44:26", "closed": "2017-10-10 03:52:21", "commits": {"79d3d55dc8c8bb7cf8ced51a9d58ab08d31c6a60": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "79d3d55dc8c8bb7cf8ced51a9d58ab08d31c6a60", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["79fb21111a37dbb9da6b9d200c7df11aeaa9774a"], "nameRev": "79d3d55dc8c8bb7cf8ced51a9d58ab08d31c6a60 tags/2.0.0.M1~6", "commitMessage": "for #398\n", "commitDateTime": "2017-10-10 11:52:24", "authoredDateTime": "2017-10-10 11:52:04", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/hint/ShardingKey.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingKey.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.hint.ShardingKey", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["79d3d55dc8c8bb7cf8ced51a9d58ab08d31c6a60"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/hint"], "changesInPackagesSPOON": ["io.shardingjdbc.core.hint.ShardingKey"]}, {"title": "\u7c7bAbstractStatementAdapter\u4e2dclose\u65b9\u6cd5\u5b9e\u73b0\u4e2dclear\u987a\u5e8f\u5012\u4e86", "body": "sharding-jdbc-core version-1.5.4.1\r\nAbstractStatementAdapter\u65b9\u6cd5\u5b9e\u73b0\u4e2d\u9010\u4e2aclose RoutedStatements\u96c6\u5408\u524d\uff0c\u5148\u5bf9\u96c6\u5408\u505a\u4e86clear\u64cd\u4f5c\uff0c\u4f1a\u5bfc\u81f4RoutedStatements\u96c6\u5408\u4e2d\u7684\u5404\u4e2aStatement\u7684close\u65b9\u6cd5\u6267\u884c\u4e0d\u5230\u3002\r\n\r\n### \u76ee\u524d\u7684\u4ee3\u7801\r\n    @Override\r\n    public final void close() throws SQLException {\r\n        closed = true;\r\n        getRoutedStatements().clear();\r\n        Collection<SQLException> exceptions = new LinkedList<>();\r\n        for (Statement each : getRoutedStatements()) {\r\n            try {\r\n                each.close();\r\n            } catch (final SQLException ex) {\r\n                exceptions.add(ex);\r\n            }\r\n        }\r\n        throwSQLExceptionIfNecessary(exceptions);\r\n    }\r\n\r\n### \u53ef\u4ee5\u4fee\u6539\u4e3a\uff1a\r\n\r\n    public final void close() throws SQLException {\r\n        closed = true;\r\n        Collection<SQLException> exceptions = new LinkedList<>();\r\n        for (Statement each : getRoutedStatements()) {\r\n            try {\r\n                each.close();\r\n            } catch (final SQLException ex) {\r\n                exceptions.add(ex);\r\n            }\r\n        }\r\n        getRoutedStatements().clear();\r\n        throwSQLExceptionIfNecessary(exceptions);\r\n    }\r\n", "url": "https://github.com/apache/shardingsphere/issues/394", "user": "IAmACoder", "labels": ["bug"], "created": "2017-09-30 07:13:49", "closed": "2017-10-09 12:19:02", "commits": {"5fe58cab9a5562c7531fb350ef9cf6afe2facc90": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "5fe58cab9a5562c7531fb350ef9cf6afe2facc90", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["bb22fa351bb2ebbf94ed0d11d455ef8b286f7eb7"], "nameRev": "5fe58cab9a5562c7531fb350ef9cf6afe2facc90 tags/2.0.0.M1~10^2", "commitMessage": "fix #394\n", "commitDateTime": "2017-10-09 20:18:47", "authoredDateTime": "2017-10-09 20:18:47", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractStatementAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractStatementAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.close()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5fe58cab9a5562c7531fb350ef9cf6afe2facc90"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter"], "changesInPackagesSPOON": ["io.shardingjdbc.core.jdbc.adapter.AbstractStatementAdapter.close()"]}, {"title": "\u5f53\u51fd\u6570+\u5217\u540d\u4e2d\u5b58\u5728'`'\u9632\u6b62\u5173\u952e\u5b57\u65f6\u5904\u7406\u51fa\u9519\u3002", "body": "\u5efa\u8bae\u8c03\u6574\u4e0b\u5904\u7406\u7ed3\u679c\u5217\u540d\u7b56\u7565\uff0c\u4fdd\u8bc1\u517c\u5bb9\u6027\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.4.1\r\n\r\n### Expected behavior\r\nNO ERROR!\r\n\r\n### Actual behavior\r\n\r\n````\r\nCaused by: org.apache.ibatis.executor.result.ResultMapException: Error attempting to get column 'COUNT(`status`)' from result set.  Cause: java.lang.NullPointerException\r\n\tat org.apache.ibatis.type.BaseTypeHandler.getResult(BaseTypeHandler.java:68)\r\n\tat org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createPrimitiveResultObject(DefaultResultSetHandler.java:720)\r\n\tat org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createResultObject(DefaultResultSetHandler.java:607)\r\n\tat org.apache.ibatis.executor.resultset.DefaultResultSetHandler.createResultObject(DefaultResultSetHandler.java:586)\r\n\tat org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:388)\r\n\tat org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:347)\r\n\tat org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:322)\r\n\tat org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:295)\r\n\tat org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:192)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\r\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\r\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)\r\n\t... 17 more\r\nCaused by: java.lang.NullPointerException\r\n\tat com.dangdang.ddframe.rdb.sharding.merger.common.AbstractMemoryResultSetMerger.getValue(AbstractMemoryResultSetMerger.java:64)\r\n\tat com.dangdang.ddframe.rdb.sharding.jdbc.core.resultset.ShardingResultSet.getInt(ShardingResultSet.java:100)\r\n\tat org.apache.ibatis.type.IntegerTypeHandler.getNullableResult(IntegerTypeHandler.java:37)\r\n\tat org.apache.ibatis.type.IntegerTypeHandler.getNullableResult(IntegerTypeHandler.java:26)\r\n\tat org.apache.ibatis.type.BaseTypeHandler.getResult(BaseTypeHandler.java:66)\r\n\t... 40 more\r\n````\r\n\r\n### Steps to reproduce the behavior\r\n\u6570\u636e\u5e93\u5c42\u6dfb\u52a0\u7edf\u8ba1\u65b9\u6cd5\u4e0d\u4e3a\u7ed3\u679c\u6dfb\u52a0\u522b\u540d\r\n````\r\n    <select id=\"count\" resultType=\"java.lang.Integer\">\r\n        SELECT\r\n         COUNT(`status`)\r\n        FROM t_order\r\n    </select>\r\n````\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n````\r\nprivate Map<String, Integer> getColumnLabelIndexMap(ResultSet resultSet) throws SQLException {\r\n        ResultSetMetaData resultSetMetaData = resultSet.getMetaData();\r\n        Map<String, Integer> result = new TreeMap(String.CASE_INSENSITIVE_ORDER);\r\n\r\n        for(int i = 1; i <= resultSetMetaData.getColumnCount(); ++i) {\r\n            result.put(SQLUtil.getExactlyValue(resultSetMetaData.getColumnLabel(i)), i);\r\n        }\r\n\r\n        return result;\r\n    }\r\n````", "url": "https://github.com/apache/shardingsphere/issues/387", "user": "Anricx", "labels": ["bug"], "created": "2017-09-24 06:56:53", "closed": "2017-10-09 12:16:16", "commits": {"a55ca64d4b61673e1604c2aa935b8ab6b997fb6a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "a55ca64d4b61673e1604c2aa935b8ab6b997fb6a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["de59c4ec6aa9ec8f1b3ddc8a7b4741f0a8880d3d"], "nameRev": "a55ca64d4b61673e1604c2aa935b8ab6b997fb6a tags/2.0.0.M1~8^2", "commitMessage": "for #387\n", "commitDateTime": "2017-10-10 11:25:22", "authoredDateTime": "2017-10-10 11:25:22", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/resources/parser/select_aggregate.xml", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_aggregate.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a55ca64d4b61673e1604c2aa935b8ab6b997fb6a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "\u67e5\u8be2\u672a\u5206\u8868\u7684\u8868\u5931\u8d25", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.3\r\n### Expected behavior\r\n\u4f7f\u7528mybaits\u4f5c\u4e3aorm\u6846\u67b6\r\n\u5355\u4e2a\u6570\u636e\u6e90\u5305\u542b\u5206\u8868\u548c\u6ca1\u6709\u5206\u8868\u7684\u8868\r\n\u67e5\u8be2\u6ca1\u6709\u5206\u8868\u7684\u8868\u6b63\u5e38\r\n### Actual behavior\r\n\u5355\u4e2a\u6570\u636e\u6e90\u67e5\u8be2\u672a\u5206\u8868\u7684\u8868\u5931\u8d25 \r\n### Steps to reproduce the behavior\r\n1.\u542f\u52a8\u9879\u76ee\r\n2Controller\u5305\u4e0b\u7684\u7684mapping\r\n3\u70b9\u51fb\u63a7\u5236\u53f0\u7684\u8f93\u51fa http://localhost:8081/nosdSelect\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\nhttps://git.oschina.net/lxhs/com.study.demo.git", "url": "https://github.com/apache/shardingsphere/issues/382", "user": "Alanlxh", "labels": ["bug"], "created": "2017-09-18 15:11:33", "closed": "2017-09-19 05:59:00", "commits": {"440b331591c8e29af7b2be1bf902b1ca21b7d351": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "d86edb819ef4d88fa13ae41afdd231731f515a68": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "440b331591c8e29af7b2be1bf902b1ca21b7d351", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["187d46d27c362476b24cd528c876c29a4de0db81"], "nameRev": "440b331591c8e29af7b2be1bf902b1ca21b7d351 tags/1.5.4~1", "commitMessage": "fix #382\n", "commitDateTime": "2017-09-19 15:21:08", "authoredDateTime": "2017-09-19 15:21:08", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/api/rule/ShardingRule.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/routing/router/ParsingSQLRouter.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingRule.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule.isAllInDefaultDataSource(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ParsingSQLRouter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.routing.router.ParsingSQLRouter.route(java.util.List,com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.SQLStatement)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d86edb819ef4d88fa13ae41afdd231731f515a68", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["440b331591c8e29af7b2be1bf902b1ca21b7d351"], "nameRev": "d86edb819ef4d88fa13ae41afdd231731f515a68 tags/1.5.4", "commitMessage": "fix #382\n", "commitDateTime": "2017-09-19 15:28:19", "authoredDateTime": "2017-09-19 15:28:19", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/api/rule/ShardingRule.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingRule.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule.isAllInDefaultDataSource(java.util.Collection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["440b331591c8e29af7b2be1bf902b1ca21b7d351"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 1, "lines": 17, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/api", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/routing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule.isAllInDefaultDataSource(java.util.Collection)", "com.dangdang.ddframe.rdb.sharding.routing.router.ParsingSQLRouter.route(java.util.List,com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.SQLStatement)"]}, {"title": "\u94fe\u63a5\u83b7\u53d6\u540e\u4e0d\u4f1a\u81ea\u52a8\u91ca\u653e\u94fe\u63a5\uff0c\u7136\u540e\u62a5\u9519\u8fde\u63a5\u6c60\u6ca1\u6709\u7a7a\u95f2\u94fe\u63a5\uff0c\u7a0b\u5e8f\u5361\u6b7b", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.3\u548c1.5.4\u5feb\u7167\u7248\r\n\r\n### Expected behavior\r\n\u6b63\u5e38\u5e94\u8be5\u4f1a\u81ea\u52a8\u83b7\u53d6\u94fe\u63a5\uff0c\u91ca\u653e\u94fe\u63a5\uff0c\u4f46\u662f\u5b9e\u9645\u6ca1\u6709\uff0c\u94fe\u63a5\u5168\u90e8\u662fbusy....\r\n### Actual behavior\r\n\u4e0d\u4f1a\u91ca\u653e\u94fe\u63a5\uff0c\u7a0b\u5e8f\u5361\u6b7b\r\n### Steps to reproduce the behavior\r\n\u9879\u76ee\u542f\u52a8\u540e\u968f\u4fbf\u67e5\u8be2\u6570\u636e\u5e93\uff0c\u5927\u6982\u5230\u83b7\u53d6\u5230\u7b2c100\u4e2a\u5c31\u83b7\u53d6\u4e0d\u5230\u4e86\uff0c\u4e00\u5171\u662f\u4e00\u767e\u4e2a\u94fe\u63a5\uff0c\u4e0b\u4e00\u4e2a\u67e5\u8be2\u5c31\u4f1a\u5361\u6b7b\uff0c\u7a0b\u5e8f\u62a5\u9519\u6ca1\u6709\u7a7a\u95f2\u94fe\u63a5\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n\u6211\u662f\u4f7f\u7528\u8fd9\u4e2ademo\u53d1\u73b0\u8fd8\u662f\u5b58\u5728\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u4f60\u53ef\u4ee5\u8bd5\u8bd5\r\nhttps://github.com/Max010230/ShardingTest", "url": "https://github.com/apache/shardingsphere/issues/379", "user": "vsalw", "labels": ["bug"], "created": "2017-09-15 10:40:34", "closed": "2017-09-18 14:00:32", "commits": {"6db844d08347df4d320975e70f02d8de040c7bf6": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "6db844d08347df4d320975e70f02d8de040c7bf6", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["88f95e8b106a578759d622eb87c87687ff6e8b5b"], "nameRev": "6db844d08347df4d320975e70f02d8de040c7bf6 tags/1.5.4~5", "commitMessage": "fix #379\n", "commitDateTime": "2017-09-18 21:48:45", "authoredDateTime": "2017-09-18 21:48:45", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/core/connection/MasterSlaveConnection.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveConnection.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.connection.MasterSlaveConnection.getMetaData()", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.connection.MasterSlaveConnection", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.connection.MasterSlaveConnection.getConnections(com.dangdang.ddframe.rdb.sharding.constant.SQLType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6db844d08347df4d320975e70f02d8de040c7bf6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 3, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.core.connection.MasterSlaveConnection.getConnections(com.dangdang.ddframe.rdb.sharding.constant.SQLType)", "com.dangdang.ddframe.rdb.sharding.jdbc.core.connection.MasterSlaveConnection", "com.dangdang.ddframe.rdb.sharding.jdbc.core.connection.MasterSlaveConnection.getMetaData()"]}, {"title": "sharding-jdbc\u5355\u5e93\u5206\u8868\u67e5\u8be2\u4e0d\u62c6\u5206\u6570\u636e\u8868\u5206\u9875\u53ea\u80fd\u67e5\u8be2\u5230\u7b2c\u4e00\u9875\u6570\u636e", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.3\r\n### Expected behavior\r\nmysql\u5206\u9875\u4e0d\u9700\u8981\u6539\u52a8\u5373\u53ef\u6b63\u5e38\u663e\u793a\r\n### Actual behavior\r\n\u6570\u636e\u5206\u9875\u7b2c\u4e00\u9875\u6267\u884c\u201cselect * from table limit 5\u201d\u53ef\u4ee5\u6b63\u5e38\u67e5\u8be2\u5230\u7ed3\u679c\u96c6\uff0c\u4f46\u662f\u5f53\u67e5\u8be2\u7b2c\u4e8c\u9875\u6267\u884c\u201cselect * from table limit 5,5\u201d\u67e5\u8be2\u4e0d\u5230\u6570\u636e\r\n### Steps to reproduce the behavior\r\n1.\u521d\u59cb\u5316\u811a\u672c\u5728sjdbc-demo\\src\\main\\resources\\META-INF\\schema\\mysql.sql\r\n2.\u8fd0\u884ccom.mabo.example.jpa.Main#main\u65b9\u6cd5\r\n3.\u67e5\u770b\u8f93\u51fa\u7ed3\u679c\u63a7\u5236\u53f0\u6253\u53705\u548c0\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\nhttp://git.oschina.net/mabo1993/sjdbc-demo", "url": "https://github.com/apache/shardingsphere/issues/375", "user": "595431930", "labels": ["bug"], "created": "2017-09-12 08:12:35", "closed": "2017-09-12 09:26:44", "commits": {"88f95e8b106a578759d622eb87c87687ff6e8b5b": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "88f95e8b106a578759d622eb87c87687ff6e8b5b", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["fdeac9bc19cf9e5c44ff62e9ac1a75796993470c"], "nameRev": "88f95e8b106a578759d622eb87c87687ff6e8b5b tags/1.5.4~6", "commitMessage": "fix #375\n", "commitDateTime": "2017-09-12 17:26:31", "authoredDateTime": "2017-09-12 17:26:31", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/context/limit/Limit.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/routing/router/ParsingSQLRouter.java", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Limit.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.context.limit.Limit.processParameters(java.util.List,boolean,boolean)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "ParsingSQLRouter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.routing.router.ParsingSQLRouter.processLimit(java.util.List,com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.dql.select.SelectStatement,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["88f95e8b106a578759d622eb87c87687ff6e8b5b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 6, "lines": 13, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/routing", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.context.limit.Limit.processParameters(java.util.List,boolean,boolean)", "com.dangdang.ddframe.rdb.sharding.routing.router.ParsingSQLRouter.processLimit(java.util.List,com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.dql.select.SelectStatement,boolean)"]}, {"title": "Reuse PreparedStatement cause cache of route result do not clean", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.3\r\n### Expected behavior\r\n\u4f7f\u7528mybaits\u4f5c\u4e3aorm\u6846\u67b6\r\n\u5f00\u542fspring\u4e8b\u7269\u652f\u6301\u65f6\uff0c\u5728mybaits\u7684settings\u4e2d\u5c06defaultExecutorType\u8bbe\u7f6e\u4e3aREUSE,\r\n\u5728\u540c\u4e00\u4e2a\u4e8b\u7269\u4e2d\u67e5\u8be2\u65f6\uff0c\u5373\u4f7f\u8def\u7531\u4e0d\u540c\u7684\u8868\u67e5\u8be2\u6b63\u5e38\r\n### Actual behavior\r\n\u5f00\u542f\u4e8b\u7269\r\n\u8def\u7531\u5230\u540c\u4e00\u5f20\u8868\u662f\u5219\u67e5\u8be2\u6b63\u5e38\uff0c\u8def\u7531\u4e0d\u540c\u7684\u8868\u5219\u5f02\u5e38\r\n### Steps to reproduce the behavior\r\n1.\u542f\u52a8\u9879\u76ee\r\n2Controller\u5305\u4e0b\u7684\u7684\u65b9\u6cd5\r\n3.\u70b9\u51fb\u63a7\u5236\u53f0\u6253\u5370\u7684\u8def\u5f84 http://localhot:8081/select\r\n\u82e5\u60f3\u4e0d\u4ea7\u751f\u8fd9\u4e2abug\u53ef\u4ee5\u91c7\u53d6\u5982\u4e0b\u4e24\u79cd\u65b9\u6cd5\u4e4b\u4e00\r\n1.\u5173\u95ed\u4e8b\u7269\r\n2.\u5f00\u542f\u4e8b\u7269\u5219\u9700\u5c06mybatisConfig.xml\u7684defaultExecutorType\u8bbe\u7f6e\u4e3aSIMPLE\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\nhttps://git.oschina.net/lxhs/com.study.demo.git", "url": "https://github.com/apache/shardingsphere/issues/372", "user": "Alanlxh", "labels": ["bug"], "created": "2017-09-12 07:13:44", "closed": "2018-07-25 15:11:24", "commits": {"7807eef493ebeaee023eb83892502e00237d1e0f": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 316.0002777777778, "commitsDetails": [{"commitHash": "7807eef493ebeaee023eb83892502e00237d1e0f", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["ae8966569b2c484d28fb55109a156124b6e5afb2", "c811b6ffca57a0914a2f2d84acebaa2b4130d497"], "nameRev": "7807eef493ebeaee023eb83892502e00237d1e0f tags/3.0.0.M2~227", "commitMessage": "Merge pull request #1050 from KomachiSion/dev\n\nfor #372, clear routedStatements in ShardingPreparedStatement before \u2026", "commitDateTime": "2018-07-25 23:11:23", "authoredDateTime": "2018-07-25 23:11:23", "commitGitStats": [{"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.executeQuery()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.executeUpdate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.jdbc.core.statement.ShardingPreparedStatement.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "\u65e0\u6cd5\u63d2\u5165\u5176\u4ed6\u81ea\u589e\u4e3b\u952e\u7684\u8868\uff0c\u4ece1.4.2\u5347\u7ea7\u52301.5.3\u51fa\u73b0\u7684bug", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.3\r\n### Expected behavior\r\n\u81ea\u589e\u4e3b\u952e\u7684\u8868\u5e94\u8be5\u80fd\u6b63\u5e38\u63d2\u5165\uff0c\u73b0\u5728\u4e0d\u80fd\u6b63\u5e38\u63d2\u5165\u3002\r\n### Actual behavior\r\n\u629b\u51fa\u5f02\u5e38\uff1a\u8be6\u60c5\u770bdemo\r\njava.sql.SQLException: Generated keys not requested. You need to specify Statement.RETURN_GENERATED_KEYS to Statement.executeUpdate(), Statement.executeLargeUpdate() or Connection.prepareStatement().\r\n### Steps to reproduce the behavior\r\n\u91cd\u73b0\u6b65\u9aa4 \r\n1.\u6267\u884cdemo\u4e2d\u7684sql\u6587\u4ef6\u5efa\u8868\r\n2.\u914d\u7f6eapplication.properties\u4e2d\u7684\u6570\u636e\u5e93\u8fde\u63a5\u4fe1\u606f \r\n3.\u8fd0\u884cDemoSjApplication\u7c7b\u91cc\u7684\u4e3b\u51fd\u6570\r\n3.\u6253\u5f00 [http://localhost:8080/](http://localhost:8080/) \u8fd4\u56dejson\u4e32\u5219\u6b63\u5e38\u6dfb\u52a0\uff0c\u5426\u5219\u51fa\u73b0\u4e0a\u8ff0\u6240\u8bf4\u7684\u5f02\u5e38\u3002\u3002\r\n/*\r\npom\u6587\u4ef6\u91cc\u6ce8\u91ca1.5.3 \u7684\u5f15\u5165\uff0c\u5207\u6362\u4e3a 1.4.2\u5219\u53ef\u6b63\u5e38\u8fd4\u56de\r\n\u6839\u636etangmin721 \u6240\u8bf4\u7684\uff0c\u6211\u6d4b\u8bd5\u4e86\u4e0b\uff0c1.5.2\u662f\u6b63\u5e38\u7684\uff0c1.5.3\u5c31\u4e0d\u884c\u4e86\u3002\r\n*/\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\ndemo\u5730\u5740\uff1a[https://github.com/pptom/demo-sj](https://github.com/pptom/demo-sj)", "url": "https://github.com/apache/shardingsphere/issues/370", "user": "pptom", "labels": ["bug"], "created": "2017-09-11 06:39:23", "closed": "2017-09-12 07:14:38", "commits": {"fdeac9bc19cf9e5c44ff62e9ac1a75796993470c": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "fdeac9bc19cf9e5c44ff62e9ac1a75796993470c", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["830e710fd06050207fdd1f37fa75ed6ef5f5c5a3"], "nameRev": "fdeac9bc19cf9e5c44ff62e9ac1a75796993470c tags/1.5.4~7", "commitMessage": "fix #370\n", "commitDateTime": "2017-09-12 15:12:13", "authoredDateTime": "2017-09-12 15:12:13", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 31, "deletions": 34, "lines": 65}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.generatePreparedStatement(com.dangdang.ddframe.rdb.sharding.routing.SQLExecutionUnit)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.getGeneratedKey()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.executeBatch()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.getGeneratedKeys()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fdeac9bc19cf9e5c44ff62e9ac1a75796993470c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 31, "deletions": 34, "lines": 65, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.executeBatch()", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.getGeneratedKeys()", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.getGeneratedKey()", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.generatePreparedStatement(com.dangdang.ddframe.rdb.sharding.routing.SQLExecutionUnit)"]}, {"title": "mybatis\u4f7f\u7528sjdbc\u505a\u8bfb\u5199\u5206\u79bb\u65f6\u62a5\u9519\uff08\u4ec5\u4ec5\u505a\u8bfb\u5199\u5206\u79bb\uff0c\u4e0d\u505a\u5206\u7247\uff09", "body": "\u4f7f\u7528 1.5.3\u7248\u672c \r\n\r\n\u9884\u671f\u884c\u4e3a\uff1a\u63d2\u5165\u65e0\u62a5\u9519\r\n\r\n\u5b9e\u9645\u884c\u4e3a\uff1a\u63d2\u5165\u62a5\u9519\r\n\r\n\u6b65\u9aa4\uff1a\r\n  # 1.\u62a5\u9519\u65f6\u7684\u914d\u7f6e\uff1a\r\n      <bean id=\"ds_0\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\r\n        <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\r\n        <property name=\"url\" value=\"jdbc:mysql://localhost:3306/ds_0\"/>\r\n        <property name=\"username\" value=\"root\"/>\r\n        <property name=\"password\" value=\"wqch\"/>\r\n    </bean>\r\n    \r\n    <bean id=\"ds_1\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\r\n        <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\r\n        <property name=\"url\" value=\"jdbc:mysql://localhost:3306/ds_1\"/>\r\n        <property name=\"username\" value=\"root\"/>\r\n        <property name=\"password\" value=\"wqch\"/>\r\n    </bean>\r\n    \r\n    <rdb:master-slave-data-source id=\"shardingDataSource\" master-data-source-ref=\"ds_0\" slave-data-sources-ref=\"ds_1\" />\r\n    \r\n    <bean id=\"transactionManager\" class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\r\n        <property name=\"dataSource\" ref=\"shardingDataSource\" />\r\n    </bean>\r\n    <tx:annotation-driven transaction-manager=\"transactionManager\" />\r\n\r\n2.\u5177\u4f53\u7684\u9519\u8bef\uff1a\r\nException in thread \"main\" org.springframework.jdbc.BadSqlGrammarException: \r\n### Error updating database.  Cause: java.sql.SQLException: No value specified for parameter 1\r\n### The error may involve defaultParameterMap\r\n### The error occurred while setting parameters\r\n### SQL: INSERT INTO t_order(order_id,user_id, status)         VALUES (         ?,         ?,         ?         )\r\n### Cause: java.sql.SQLException: No value specified for parameter 1\r\n; bad SQL grammar []; nested exception is java.sql.SQLException: No value specified for parameter 1\r\n\r\n\u6ce8\uff1a\u4f46\u662f\u5728\u6267\u884c\u4f8b\u5982\u67e5\u8be2\u6240\u6709\uff0c\u5220\u9664\u6240\u6709\u7b49\u6ca1\u6709\u4f20\u9012\u53c2\u6570\u7684\u64cd\u4f5c\uff0c\u7a0b\u5e8f\u5c06\u987a\u5229\u6267\u884c\r\n\r\n3\u6ce8\u5047\u5982\u4e0d\u4f7f\u7528\u8bfb\u5199\u5206\u79bb\uff0c\u4ec5\u4ec5\u6ce8\u91ca\u4e00\u4e0b\u914d\u7f6e\uff0c\u4e0d\u7528\u6539\u4ee3\u7801\uff0c\u7a0b\u5e8f\u5c06\u987a\u5229\u6267\u884c\u63d2\u5165\u64cd\u4f5c\r\n\r\n\r\n4.github\u5730\u5740  https://github.com/wangqingchengsg/sharding-jdbc-example-mybatis\r\n", "url": "https://github.com/apache/shardingsphere/issues/362", "user": "wangqingchengsg", "labels": ["bug"], "created": "2017-09-06 07:57:50", "closed": "2017-09-06 11:41:35", "commits": {"378ac47e25ee9ebbfa4d0ed66ffda4d7a3a6698d": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "59450b99b1ebc76843df3c125f8445d7d7562f39": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "378ac47e25ee9ebbfa4d0ed66ffda4d7a3a6698d", "commitGHEventType": "referenced", "commitUser": "haocao", "commitParents": ["5d3d29b91aa07e0fb1921d0b3af15949e07fed46"], "nameRev": "378ac47e25ee9ebbfa4d0ed66ffda4d7a3a6698d tags/1.5.4~23", "commitMessage": "For #362.\n", "commitDateTime": "2017-09-06 18:04:48", "authoredDateTime": "2017-09-06 18:04:48", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/core/statement/MasterSlavePreparedStatement.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlavePreparedStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.replaySetParameter()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.executeQuery()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.executeUpdate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.execute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "59450b99b1ebc76843df3c125f8445d7d7562f39", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d709b6313d1a9bf8227969ef19b377e2bddafaa5"], "nameRev": "59450b99b1ebc76843df3c125f8445d7d7562f39 tags/1.5.4~20", "commitMessage": "fix #362\n", "commitDateTime": "2017-09-06 19:40:21", "authoredDateTime": "2017-09-06 19:40:21", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractMasterSlavePreparedStatementAdapter.java", "insertions": 245, "deletions": 0, "lines": 245}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/{AbstractPreparedStatementAdapter.java => AbstractShardingPreparedStatementAdapter.java}", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/core/statement/MasterSlavePreparedStatement.java", "insertions": 15, "deletions": 19, "lines": 34}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractMasterSlavePreparedStatementAdapter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractMasterSlavePreparedStatementAdapter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractShardingPreparedStatementAdapter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setNull(int,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setNull(int,int,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBoolean(int,boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setByte(int,byte)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setShort(int,short)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setInt(int,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setLong(int,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setFloat(int,float)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setDouble(int,double)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setString(int,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBigDecimal(int,java.math.BigDecimal)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setDate(int,java.sql.Date)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setDate(int,java.sql.Date,java.util.Calendar)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setTime(int,java.sql.Time)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setTime(int,java.sql.Time,java.util.Calendar)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setTimestamp(int,java.sql.Timestamp)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setTimestamp(int,java.sql.Timestamp,java.util.Calendar)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBytes(int,byte[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBlob(int,java.sql.Blob)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBlob(int,java.io.InputStream)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBlob(int,java.io.InputStream,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setClob(int,java.sql.Clob)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setClob(int,java.io.Reader)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setClob(int,java.io.Reader,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setAsciiStream(int,java.io.InputStream)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setAsciiStream(int,java.io.InputStream,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setAsciiStream(int,java.io.InputStream,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setUnicodeStream(int,java.io.InputStream,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBinaryStream(int,java.io.InputStream)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBinaryStream(int,java.io.InputStream,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBinaryStream(int,java.io.InputStream,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setCharacterStream(int,java.io.Reader)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setCharacterStream(int,java.io.Reader,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setCharacterStream(int,java.io.Reader,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setURL(int,java.net.URL)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setSQLXML(int,java.sql.SQLXML)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setObject(int,java.lang.Object)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setObject(int,java.lang.Object,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setObject(int,java.lang.Object,int,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.replaySetParameter(java.sql.PreparedStatement)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setParameter(int,java.lang.Object)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.addParameters()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.clearParameters()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.recordSetParameter(java.lang.String,java.lang.Class[],java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.recordSetParameterForNull(java.lang.Class[],java.lang.Object[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlavePreparedStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.executeQuery()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.executeUpdate()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.executeBatch()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getResultSet()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getGeneratedKeys()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getResultSetConcurrency()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getResultSetType()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.replaySetParameter()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.execute()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getResultSetHoldability()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getTargetStatement()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["378ac47e25ee9ebbfa4d0ed66ffda4d7a3a6698d", "59450b99b1ebc76843df3c125f8445d7d7562f39"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 273, "deletions": 23, "lines": 296, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 127, "UPD": 105, "INS": 7, "MOV": 10, "DEL": 5, "spoonFilesChanged": 4, "spoonMethodsChanged": 60}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.execute()", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.executeUpdate()", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.replaySetParameter()", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.executeQuery()", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getResultSetConcurrency()", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.clearParameters()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBinaryStream(int,java.io.InputStream)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setTime(int,java.sql.Time,java.util.Calendar)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setTimestamp(int,java.sql.Timestamp,java.util.Calendar)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setObject(int,java.lang.Object)", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setByte(int,byte)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setAsciiStream(int,java.io.InputStream)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setNull(int,int,java.lang.String)", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.executeBatch()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setObject(int,java.lang.Object,int)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setUnicodeStream(int,java.io.InputStream,int)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setInt(int,int)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setAsciiStream(int,java.io.InputStream,long)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setCharacterStream(int,java.io.Reader)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBinaryStream(int,java.io.InputStream,int)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setLong(int,long)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setClob(int,java.sql.Clob)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBlob(int,java.io.InputStream)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBytes(int,byte[])", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setCharacterStream(int,java.io.Reader,int)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setDate(int,java.sql.Date,java.util.Calendar)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setParameter(int,java.lang.Object)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setDate(int,java.sql.Date)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setClob(int,java.io.Reader,long)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setSQLXML(int,java.sql.SQLXML)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setString(int,java.lang.String)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.recordSetParameter(java.lang.String,java.lang.Class[],java.lang.Object[])", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.addParameters()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setObject(int,java.lang.Object,int,int)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setTimestamp(int,java.sql.Timestamp)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setDouble(int,double)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.recordSetParameterForNull(java.lang.Class[],java.lang.Object[])", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBinaryStream(int,java.io.InputStream,long)", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getGeneratedKeys()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBigDecimal(int,java.math.BigDecimal)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setCharacterStream(int,java.io.Reader,long)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBlob(int,java.io.InputStream,long)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBlob(int,java.sql.Blob)", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getResultSetType()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setFloat(int,float)", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getResultSet()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setNull(int,int)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setShort(int,short)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractMasterSlavePreparedStatementAdapter", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getResultSetHoldability()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setBoolean(int,boolean)", "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.MasterSlavePreparedStatement.getTargetStatement()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.replaySetParameter(java.sql.PreparedStatement)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setAsciiStream(int,java.io.InputStream,int)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setURL(int,java.net.URL)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setClob(int,java.io.Reader)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractPreparedStatementAdapter.setTime(int,java.sql.Time)"]}, {"title": "regexp support ", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n  1.5.3\r\n### Expected behavior\r\n  \r\n### Actual behavior\r\n\r\n### Steps to reproduce the behavior\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\nmy sql as below: \r\n     select * from resourcetable where TITLE REGEXP 'abc' order by UPDTIME desc limit 0,1\r\nsharding-columns : UPDTIME\r\nthe question is that when i use this sql to query resourcetable ,i got two records from two different Physical tables,  so limit 0,1 doesn't work ", "url": "https://github.com/apache/shardingsphere/issues/356", "user": "denghc0607", "labels": ["bug"], "created": "2017-09-05 05:53:05", "closed": "2017-09-06 16:59:46", "commits": {"c5d3aaf50abcd4afdcc17292d210bb1134b3ed30": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "c5d3aaf50abcd4afdcc17292d210bb1134b3ed30", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["71d8b67dc87519dc07e19083c0513acbc7907da6"], "nameRev": "c5d3aaf50abcd4afdcc17292d210bb1134b3ed30 tags/1.5.4~17", "commitMessage": "fix #356\n", "commitDateTime": "2017-09-07 00:59:31", "authoredDateTime": "2017-09-07 00:59:31", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/lexer/dialect/mysql/MySQLKeyword.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/lexer/token/Symbol.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/clause/WhereClauseParser.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/dialect/mysql/clause/MySQLWhereClauseParser.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/dialect/mysql/clause/facade/MySQLDeleteClauseParserFacade.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/dialect/mysql/clause/facade/MySQLSelectClauseParserFacade.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/dialect/mysql/clause/facade/MySQLUpdateClauseParserFacade.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_expression.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MySQLKeyword.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.lexer.dialect.mysql.MySQLKeyword", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Symbol.java", "spoonMethods": []}, {"spoonFilePath": "WhereClauseParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.clause.WhereClauseParser.parseComparisonCondition(com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule,com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.SQLStatement,java.util.List)", "TOT": 15, "UPD": 0, "INS": 3, "MOV": 11, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.clause.WhereClauseParser.getCustomizedOtherConditionOperators()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLWhereClauseParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.dialect.mysql.clause.MySQLWhereClauseParser", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLDeleteClauseParserFacade.java", "spoonMethods": []}, {"spoonFilePath": "MySQLSelectClauseParserFacade.java", "spoonMethods": []}, {"spoonFilePath": "MySQLUpdateClauseParserFacade.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c5d3aaf50abcd4afdcc17292d210bb1134b3ed30"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 42, "deletions": 10, "lines": 52, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 18, "UPD": 0, "INS": 6, "MOV": 11, "DEL": 1, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.clause.WhereClauseParser.getCustomizedOtherConditionOperators()", "com.dangdang.ddframe.rdb.sharding.parsing.parser.dialect.mysql.clause.MySQLWhereClauseParser", "com.dangdang.ddframe.rdb.sharding.parsing.parser.clause.WhereClauseParser.parseComparisonCondition(com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule,com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.SQLStatement,java.util.List)", "com.dangdang.ddframe.rdb.sharding.parsing.lexer.dialect.mysql.MySQLKeyword"]}, {"title": "Compatible with NOT operator which is not sharding-column in SQL for where condition", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.2", "url": "https://github.com/apache/shardingsphere/issues/354", "user": "terrymanu", "labels": ["bug"], "created": "2017-09-01 07:11:41", "closed": "2017-09-01 07:14:08", "commits": {"baf78e6e7d642664ca350ff0959564b9727a5413": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "baf78e6e7d642664ca350ff0959564b9727a5413", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["28c26f5340a7b4b55024b1fdc6b0f9699492b504"], "nameRev": "baf78e6e7d642664ca350ff0959564b9727a5413 tags/1.5.3~19", "commitMessage": "fix #354\n", "commitDateTime": "2017-09-01 15:13:05", "authoredDateTime": "2017-09-01 15:13:05", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/clause/WhereClauseParser.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc-core/src/test/resources/parser/select_expression.xml", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_expression.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WhereClauseParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.clause.WhereClauseParser.parseComparisonCondition(com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule,com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.SQLStatement,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["baf78e6e7d642664ca350ff0959564b9727a5413"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.clause.WhereClauseParser.parseComparisonCondition(com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule,com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.SQLStatement,java.util.List)"]}, {"title": "Compatible with !=, !> and !< operator which is not sharding-column in SQL for where condition", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.2", "url": "https://github.com/apache/shardingsphere/issues/353", "user": "terrymanu", "labels": ["bug"], "created": "2017-08-31 12:23:38", "closed": "2017-08-31 12:27:31", "commits": {"809817b6b16d9dc359dcde521017e4eccb04dc30": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "809817b6b16d9dc359dcde521017e4eccb04dc30", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["f36aa6d5851817c8a242a235b50574f6f1957ebf"], "nameRev": "809817b6b16d9dc359dcde521017e4eccb04dc30 tags/1.5.3~22", "commitMessage": "fix #353\n", "commitDateTime": "2017-08-31 20:25:48", "authoredDateTime": "2017-08-31 20:25:48", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/clause/WhereClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select.xml", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/parser/select_expression.xml", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_expression.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WhereClauseParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.clause.WhereClauseParser.parseComparisonCondition(com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule,com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.SQLStatement,java.util.List)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["809817b6b16d9dc359dcde521017e4eccb04dc30"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.clause.WhereClauseParser.parseComparisonCondition(com.dangdang.ddframe.rdb.sharding.api.rule.ShardingRule,com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.SQLStatement,java.util.List)"]}, {"title": "Cannot work if table in default-data-source but not in table-rule", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n1.5.2", "url": "https://github.com/apache/shardingsphere/issues/351", "user": "terrymanu", "labels": ["bug"], "created": "2017-08-31 02:45:08", "closed": "2017-08-31 10:15:53", "commits": {"2d9d4e77598f9f9802832fd6e8b81e124dc5d004": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2d9d4e77598f9f9802832fd6e8b81e124dc5d004", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["92595885c2100f2d443e9d795935d3091268a318"], "nameRev": "2d9d4e77598f9f9802832fd6e8b81e124dc5d004 tags/1.5.3~30", "commitMessage": "fix #351\n", "commitDateTime": "2017-08-31 10:46:40", "authoredDateTime": "2017-08-31 10:46:40", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/clause/TableReferencesClauseParser.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableReferencesClauseParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.clause.TableReferencesClauseParser.parseTableFactor(com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.SQLStatement,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2d9d4e77598f9f9802832fd6e8b81e124dc5d004"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.clause.TableReferencesClauseParser.parseTableFactor(com.dangdang.ddframe.rdb.sharding.parsing.parser.sql.SQLStatement,boolean)"]}, {"title": "ResultSet.wasNull is not correctly", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n1.5.2\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/349", "user": "terrymanu", "labels": ["bug"], "created": "2017-08-29 09:13:09", "closed": "2017-08-29 10:22:10", "commits": {"e2f81500059c3c94ce9f75746638ac8801cb8d52": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e2f81500059c3c94ce9f75746638ac8801cb8d52", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d3fcdeb5f6831a0507075b054ba7486e05f35558"], "nameRev": "e2f81500059c3c94ce9f75746638ac8801cb8d52 tags/1.5.3~46^2", "commitMessage": "fixed #349\n", "commitDateTime": "2017-08-29 17:14:42", "authoredDateTime": "2017-08-29 17:14:42", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/core/resultset/ShardingResultSet.java", "insertions": 53, "deletions": 159, "lines": 212}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/ResultSetMerger.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/common/AbstractDecoratorResultSetMerger.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/common/AbstractMemoryResultSetMerger.java", "insertions": 19, "deletions": 4, "lines": 23}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/common/AbstractStreamResultSetMerger.java", "insertions": 201, "deletions": 150, "lines": 351}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["e2f81500059c3c94ce9f75746638ac8801cb8d52"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 286, "deletions": 313, "lines": 599, "gitFilesChange": 5}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger"]}, {"title": "DDL\u8bed\u53e5 DROP TABLE IF EXISTS `USER` \u89e3\u6790\u8868\u660e\u9519\u8bef", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.1\r\n### Expected behavior\r\n\u8868\u540d\u89e3\u6790\u4e3a USER\r\n### Actual behavior\r\n\u8868\u540d\u89e3\u6790\u4e3a IF\r\n### Steps to reproduce the behavior\r\n\r\nlog\uff1a\r\n2017-08-24 17:29:03,764 datasourceService INFO  [main] Sharding-JDBC-SQL: Logic SQL: DROP TABLE IF EXISTS `USER`;\r\n2017-08-24 17:29:03,764 datasourceService INFO  [main] Sharding-JDBC-SQL: SQLStatement: DDLStatement(super=AbstractSQLStatement(type=DDL, tables=Tables(tables=[Table(name=IF, alias=Optional.absent())]), conditions=Conditions(conditions={}), sqlTokens=[TableToken(beginPosition=11, originalLiterals=IF)]))\r\n2017-08-24 17:29:03,764 datasourceService INFO  [main] Sharding-JDBC-SQL: Actual SQL: user_00 ::: DROP TABLE IF EXISTS `USER`;\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n", "url": "https://github.com/apache/shardingsphere/issues/346", "user": "jingshouyan", "labels": ["bug"], "created": "2017-08-24 09:36:44", "closed": "2017-08-24 10:42:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\u4f7f\u7528\u8868\u5168\u540d\u5173\u8054\u7684JOIN\u89e3\u6790\u4e0d\u6b63\u786e", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.1\r\n### Expected behavior\r\n92sql\u8bed\u6cd5\u89c4\u8303\r\n\r\n@Select(\"SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play left join video_image on play.cover_id = video_image.id WHERE play.id = #{id}\")\r\n\u5f97\u5230\u5217\u8868\u7ed3\u679c\r\n  \r\n### Actual behavior\r\n\r\n```  \r\n\u62a5sql\u8bed\u6cd5\u5f02\u5e38\r\n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLSyntaxErrorException: Unknown column 'playplayer_id' in 'on clause'\r\n### The error may exist in PlayMapper.java (best guess)\r\n### The error may involve PlayMapper.getVideoPlay-Inline\r\n### The error occurred while setting parameters\r\n### SQL: SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play left join video_image on play.cover_id = video_image.id WHERE play.id = ?\r\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLSyntaxErrorException: Unknown column 'playplayer_id' in 'on clause'\r\n\tat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)\r\n\t... 39 more\r\nCaused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLSyntaxErrorException: Unknown column 'playplayer_id' in 'on clause'\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.threadlocal.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.execute(ExecutorEngine.java:129)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executePreparedStatement(ExecutorEngine.java:96)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:109)\r\n\tat com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:113)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)\r\n\tat org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)\r\n\tat org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)\r\n\tat org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)\r\n\t... 46 more\r\nCaused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLSyntaxErrorException: Unknown column 'playplayer_id' in 'on clause'\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.threadlocal.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:181)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.syncExecute(ExecutorEngine.java:155)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.execute(ExecutorEngine.java:124)\r\n\t... 57 more\r\nCaused by: java.sql.SQLSyntaxErrorException: Unknown column 'playplayer_id' in 'on clause'\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:686)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:663)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:653)\r\n\tat com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:115)\r\n\tat com.mysql.cj.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2041)\r\n\tat com.mysql.cj.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1827)\r\n\tat com.mysql.cj.jdbc.PreparedStatement.execute(PreparedStatement.java:1156)\r\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:494)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:113)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.type.prepared.PreparedStatementExecutor$3.execute(PreparedStatementExecutor.java:109)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:175)\r\n\t... 59 more\r\n```\r\n### Steps to reproduce the behavior\r\n\r\n\u6267\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u8f93\u5165id\uff0c\u89e3\u6790\u51fa\u8fd9\u4e2a\u9519\u8bef\u5f02\u5e38\u5e76\u6ca1\u6709\u8fd9\u4e2a\u5b57\u6bb5\u3002Unknown column 'playplayer_id' in 'on clause'\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n\r\n@Select(\"SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play left join video_image on play.cover_id = video_image.id WHERE play.id = #{id}\")\r\n    VideoPlayDto getVideoPlay(@Param(\"id\") Long id);\r\n\r\n\r\n\u4f7f\u7528\u53e6\u5916\u4e00\u79cd89sql\u8bed\u6cd5\u89c4\u8303\u5c31\u53ef\u4ee5\u4e86\u3002\r\n\r\n    @Select(\"SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play, video_image WHERE play.cover_id = video_image.id and play.id = #{id}\")\r\n\r\n\r\n8-19\u66f4\u65b0\uff1a\r\n\u5df2\u7ecf\u6253\u5f00show.sql\r\n```\r\n\u6253\u5370\u7684sql\u5982\u4e0b\uff1a\r\nActual SQL: dbtbl_0 ::: SELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play left join video_image on playplayer_id = video_image.id WHERE play.id = ? ::: [19]\r\n\r\nmybatis\u914d\u7f6e\u7684sql\r\nSELECT play.id as id, play.name as name, video_image.url as coverUrl , video_image.width as width, video_image.height as height FROM play left join video_image on play.cover_id = video_image.id WHERE play.id = #{id}\r\n```", "url": "https://github.com/apache/shardingsphere/issues/339", "user": "xuminwlt", "labels": ["bug"], "created": "2017-08-16 11:56:25", "closed": "2017-08-19 11:12:43", "commits": {"16d07c3733bb8bbbfaf53d5ef3523a46d25582d1": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "16d07c3733bb8bbbfaf53d5ef3523a46d25582d1", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["244c730c59cea18d4d9574760547b3c8d3563a15"], "nameRev": "16d07c3733bb8bbbfaf53d5ef3523a46d25582d1 tags/1.5.2~115", "commitMessage": "fixed #339\n", "commitDateTime": "2017-08-19 19:12:13", "authoredDateTime": "2017-08-19 19:12:13", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/statement/dql/select/AbstractSelectParser.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select_relation.xml", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/resources/parser/select_relation.xml", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/dql/select_relation.xml", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractSelectParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseJoinTable(com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.SelectStatement)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseTableCondition(int,com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.SelectStatement)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseTableCondition(com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.SelectStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["16d07c3733bb8bbbfaf53d5ef3523a46d25582d1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 3, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseTableCondition(int,com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.SelectStatement)", "com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseTableCondition(com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.SelectStatement)", "com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseJoinTable(com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.SelectStatement)"]}, {"title": "order by  \u8bed\u53e5\u89e3\u6790\uff0c\u5982\u679c\u6709\u51fd\u6570\uff0c\u4f1a\u628a\u540e\u9762\u7684 asc,desc\u89e3\u6790\u5230OrderItem name\u5c5e\u6027\u4e2d\u3002", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.1\r\n\r\n\r\n\u5982\u56fe\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n<img width=\"898\" alt=\"orderby\" src=\"https://user-images.githubusercontent.com/1187815/29257367-ffa1ee9a-80e3-11e7-9747-970f8a30bb55.png\">\r\n", "url": "https://github.com/apache/shardingsphere/issues/334", "user": "javaside", "labels": ["bug"], "created": "2017-08-14 03:32:36", "closed": "2017-08-14 11:13:37", "commits": {"e6dd2b97bcfaa4272d406da11c84ff62e23e937b": {"commitGHEventType": "referenced", "commitUser": "haocao"}, "5292f1cc4ba6108daf9643572c8fd95bf6a3e121": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e6dd2b97bcfaa4272d406da11c84ff62e23e937b", "commitGHEventType": "referenced", "commitUser": "haocao", "commitParents": ["1cf2e1c2a947192c6b882b6886771f66a9c4fb9c"], "nameRev": "e6dd2b97bcfaa4272d406da11c84ff62e23e937b tags/1.5.2~193", "commitMessage": "Add parser test case for #334.\n", "commitDateTime": "2017-08-14 17:01:26", "authoredDateTime": "2017-08-14 17:01:26", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/resources/parser/{select.xml => select_expression.xml}", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/select_expression.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5292f1cc4ba6108daf9643572c8fd95bf6a3e121", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["1d36cd018f850f4721ff69e25a5b4702d3edc081"], "nameRev": "5292f1cc4ba6108daf9643572c8fd95bf6a3e121 tags/1.5.2~191", "commitMessage": "fixed #334\n", "commitDateTime": "2017-08-14 19:10:50", "authoredDateTime": "2017-08-14 19:10:50", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/AbstractSQLParser.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/resources/parser/select_expression.xml", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/select_expression.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractSQLParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.AbstractSQLParser.parseExpression()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e6dd2b97bcfaa4272d406da11c84ff62e23e937b", "5292f1cc4ba6108daf9643572c8fd95bf6a3e121"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5.0, "UPD": 0.0, "INS": 1.0, "MOV": 3.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.AbstractSQLParser.parseExpression()"]}, {"title": "ShardingConnection commit \u65f6\uff0c\u6301\u6709\u7684 Connection commit \u5f02\u5e38\u65f6\uff0c\u540e\u9762\u7684 Connection \u65e0\u6cd5\u63d0\u4ea4", "body": "ShardingConnection \u7ee7\u627f\u81ea AbstractConnectionAdapter\uff0c commit \u4ee3\u7801\u5982\u4e0b\uff1a\r\n\r\n```Java\r\n// AbstractConnectionAdapter.java\r\n\r\n    @Override\r\n    public final void commit() throws SQLException {\r\n        for (Connection each : getConnections()) {\r\n            each.commit();\r\n        }\r\n    }\r\n    \r\n    @Override\r\n    public final void rollback() throws SQLException {\r\n        Collection<SQLException> exceptions = new LinkedList<>();\r\n        for (Connection each : getConnections()) {\r\n            try {\r\n                each.rollback();\r\n            } catch (final SQLException ex) {\r\n                exceptions.add(ex);\r\n            }\r\n        }\r\n        throwSQLExceptionIfNecessary(exceptions);\r\n    }\r\n```\r\n\r\n* \u672a\u5bf9 `Connection#commit()` \u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u5bfc\u81f4\u5f02\u5e38\u65f6\uff0c\u540e\u9762\u7684 Connection \u65e0\u6cd5\u63d0\u4ea4\r\n\r\n\u53c2\u8003 `#rollback()` \u65b9\u6cd5\u4fee\u6539\u5982\u4e0b\uff1a\r\n\r\n``` Java\r\n    @Override\r\n    public final void commit() throws SQLException {\r\n        Collection<SQLException> exceptions = new LinkedList<>();\r\n        for (Connection each : getConnections()) {\r\n            try {\r\n                each.commit();\r\n            } catch (final SQLException ex) {\r\n                exceptions.add(ex);\r\n            }\r\n        }\r\n        throwSQLExceptionIfNecessary(exceptions);\r\n    }\r\n```\r\n\r\n\u5df2\u7ecf\u63d0\u4ea4 pr\u3002", "url": "https://github.com/apache/shardingsphere/issues/328", "user": "YunaiV", "labels": ["bug"], "created": "2017-08-12 08:35:41", "closed": "2017-08-12 13:29:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Can parse ORDER BY with aggregation expression", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n1.5.0\r\n\r\n### Expected behavior\r\n\r\nparse SQL\r\n\r\n```sql\r\nSELECT user_id, SUM(order_id) FROM t_order GROUP BY user_id ORDER BY SUM(order_id)\r\n```\r\n\r\nOrder By SQL Context should be: SUM(order_id)\r\n\r\n### Actual behavior\r\n\r\nOrder By SQL Context is ignore", "url": "https://github.com/apache/shardingsphere/issues/323", "user": "terrymanu", "labels": ["bug"], "created": "2017-08-10 13:58:38", "closed": "2017-08-10 14:01:31", "commits": {"fb076861893ddb50a27cfcfe4f87acb956fc1935": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fb076861893ddb50a27cfcfe4f87acb956fc1935", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["289a585f8373a0260bb6986976754b5b0b2b44ee"], "nameRev": "fb076861893ddb50a27cfcfe4f87acb956fc1935 tags/1.5.1~37", "commitMessage": "fixed #323\n", "commitDateTime": "2017-08-10 22:00:10", "authoredDateTime": "2017-08-10 22:00:10", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/SQLParser.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/dialect/mysql/MySQLInsertParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/dialect/oracle/OracleSelectParser.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/expression/SQLIgnoreExpression.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/statement/dql/select/AbstractSelectParser.java", "insertions": 13, "deletions": 11, "lines": 24}, {"filePath": "sharding-jdbc-core/src/test/resources/parser/select_group_by.xml", "insertions": 15, "deletions": 15, "lines": 30}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.SQLParser.getExpression(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.SQLParser.parseExpression()", "TOT": 7, "UPD": 4, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "MySQLInsertParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.dialect.mysql.MySQLInsertParser.parseInsertSet()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OracleSelectParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.dialect.oracle.OracleSelectParser.parseSelectOrderByItem()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLIgnoreExpression.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.expression.SQLIgnoreExpression", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractSelectParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseSelectOrderByItem()", "TOT": 17, "UPD": 2, "INS": 5, "MOV": 4, "DEL": 6}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseOrderBy()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fb076861893ddb50a27cfcfe4f87acb956fc1935"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 31, "deletions": 20, "lines": 51, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 37, "UPD": 11, "INS": 10, "MOV": 8, "DEL": 8, "spoonFilesChanged": 5, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseOrderBy()", "com.dangdang.ddframe.rdb.sharding.parsing.parser.SQLParser.getExpression(java.lang.String)", "com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseSelectOrderByItem()", "com.dangdang.ddframe.rdb.sharding.parsing.parser.dialect.oracle.OracleSelectParser.parseSelectOrderByItem()", "com.dangdang.ddframe.rdb.sharding.parsing.parser.expression.SQLIgnoreExpression", "com.dangdang.ddframe.rdb.sharding.parsing.parser.dialect.mysql.MySQLInsertParser.parseInsertSet()", "com.dangdang.ddframe.rdb.sharding.parsing.parser.SQLParser.parseExpression()"]}, {"title": "\u53ef\u6267\u884cjar\u53d1\u5e03\uff0c\u7528YamlShardingDataSource\u65f6\u62a5\u9519", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.0.M3\r\n\r\n### Expected behavior\r\n\u6211\u7528\u53ef\u6267\u884cjar\u7684\u65b9\u5f0f\u53d1\u5e03\uff0c\u7528YamlShardingDataSource\u751f\u6210datasource\r\n\r\n### Actual behavior\r\n\u62a5\u9519\uff1a class path resource [xx.yml] cannot be resolved to absolute file path because it does not reside in the file system: jar:file:/xx.jar!/BOOT-INF/classes!/xx.yml\r\n\r\n### Steps to reproduce the behavior\r\nYamlShardingDataSource\u7684\u5165\u53c2\u662fjava.io.File\u3002\u6211\u7528\u53ef\u6267\u884cjar\u7684\u65b9\u5f0f\u53d1\u5e03\uff0c\u83b7\u53d6\u4e0d\u5230File\uff0c\u4f46\u662f\u53ef\u4ee5\u83b7\u53d6\u5230InputStream\uff0c\u539f\u56e0\u89c1\uff1a\r\nhttps://stackoverflow.com/questions/25869428/classpath-resource-not-found-when-running-as-jar\r\n\u5e0c\u671b\u80fd\u63d0\u4f9bjava.io.Inputsream\u7684\u5165\u53c2\u800c\u4e0d\u4ec5\u4ec5\u662fjava.io.File\u5165\u53c2\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n", "url": "https://github.com/apache/shardingsphere/issues/322", "user": "adamswanglin", "labels": ["bug"], "created": "2017-08-10 13:03:56", "closed": "2017-08-11 05:09:43", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\u4e2d\u6587\u6587\u6863\u6709\u9519", "body": "[\u4e2d\u6587\u6587\u6863](http://dangdangdotcom.github.io/sharding-jdbc/02-guide/sharding/)\u7684\"2. \u4f7f\u7528\u6307\u5357-\u5206\u5e93\u5206\u8868\"\u90e8\u5206\uff0c\u201c\u6784\u9020ShardingDataSource\u201d\u4e00\u5c0f\u8282\u7684\u4ee3\u7801\u6709\u8bef\uff1a\r\n```java\r\nDataSource dataSource = new ShardingDataSourceFactory.createDataSource(shardingRule);\r\n```\r\n\u8c03\u7528\u7c7bShardingDataSourceFactory\u7684\u9759\u6001\u65b9\u6cd5\u65f6\uff0c\u591a\u5199\u4e86\u4e00\u4e2anew.\r\n\r\n\u82f1\u6587\u6587\u6863\u6ca1\u9519\u3002", "url": "https://github.com/apache/shardingsphere/issues/321", "user": "xawei", "labels": ["bug"], "created": "2017-08-10 01:36:19", "closed": "2017-08-10 03:37:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "GROUP BY + LIMIT rewrite incorrect", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n1.5.0\r\n\r\n### Expected behavior\r\n\r\n```sql\r\nSELECT user_id FROM t_order GROUP BY user_id LIMIT ?\r\n```\r\n\r\n => \r\n\r\n```sql\r\nSELECT user_id FROM t_order GROUP BY user_id ORDER BY user_id ASC LIMIT ?\r\n```\r\n\r\n### Actual behavior\r\n\r\n```sql\r\nSELECT user_id FROM t_order GROUP BY user_id LIMIT ?\r\n```\r\n\r\n => \r\n\r\n```sql\r\nSELECT user_id FROM t_order GROUP BY user_id LIMIT ORDER BY user_id ASC\r\n```\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/320", "user": "terrymanu", "labels": ["bug"], "created": "2017-08-09 10:02:07", "closed": "2017-08-09 10:11:40", "commits": {"60d396a137d32d377a635cdc8ca5d97305142136": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "60d396a137d32d377a635cdc8ca5d97305142136", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["be8822664c507f3ca4beac6cacd78697dc44a9e2"], "nameRev": "60d396a137d32d377a635cdc8ca5d97305142136 tags/1.5.1~61", "commitMessage": "fixed #320\n", "commitDateTime": "2017-08-09 18:11:00", "authoredDateTime": "2017-08-09 18:08:41", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/dialect/oracle/OracleSelectParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/statement/dql/select/AbstractSelectParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/rewrite/SQLRewriteEngine.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select_group_by.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/db/expect/select_group_by/SelectLimit.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/dbtbl/expect/select_group_by/SelectLimit.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/masterslave/expect/select_group_by/SelectLimit.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/tbl/expect/select_group_by/SelectLimit.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/resources/sql/select_group_by.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OracleSelectParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.dialect.oracle.OracleSelectParser.parseGroupBy()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractSelectParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseGroupBy()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SQLRewriteEngine.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.rewrite.SQLRewriteEngine.appendOrderByToken(com.dangdang.ddframe.rdb.sharding.rewrite.SQLBuilder,int,java.util.List)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.rewrite.SQLRewriteEngine.rewrite(boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["60d396a137d32d377a635cdc8ca5d97305142136"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 4, "lines": 11, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 11, "UPD": 0, "INS": 9, "MOV": 2, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/rewrite"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.dialect.oracle.OracleSelectParser.parseGroupBy()", "com.dangdang.ddframe.rdb.sharding.rewrite.SQLRewriteEngine.rewrite(boolean)", "com.dangdang.ddframe.rdb.sharding.rewrite.SQLRewriteEngine.appendOrderByToken(com.dangdang.ddframe.rdb.sharding.rewrite.SQLBuilder,int,java.util.List)", "com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.dql.select.AbstractSelectParser.parseGroupBy()"]}, {"title": "LIMIT\u53c2\u6570\u4e0d\u80fd\u662fLong\u7c7b\u578b", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n<sharding-jdbc.version>1.5.0</sharding-jdbc.version>\r\n\r\n### Expected behavior\r\n\u67e5\u8be2\u6761\u4ef6\uff1aLIMIT #{startIndex},#{pageSize}\r\n\u5f53 startIndex \u662f\u4e00\u4e2aLong\u7c7b\u578b \u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u6709\u8fd4\u56de\u7ed3\u679c\u3002\r\n### Actual behavior\r\n![7z r 2 2j to p kgzvcqvt](https://user-images.githubusercontent.com/12838303/29063498-aa717fc4-7c58-11e7-94e6-444c15cb2d47.png)\r\n\u5bfc\u81f4\u95ee\u9898\uff1a Caused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: Invalid value to transfer: 0\r\n\tat com.dangdang.ddframe.rdb.sharding.util.NumberUtil.roundHalfUp(NumberUtil.java:55) ~[sharding-jdbc-core-1.5.0.jar:na]\r\n\tat com.dangdang.ddframe.rdb.sharding.parsing.parser.context.limit.Limit.fill(Limit.java:82) ~[sharding-jdbc-core-1.5.0.jar:na]\r\n\tat com.dangdang.ddframe.rdb.sharding.parsing.parser.context.limit.Limit.processParameters(Limit.java:73) ~[sharding-jdbc-core-1.5.0.jar:na]\r\n\tat com.dangdang.ddframe.rdb.sharding.routing.router.ParsingSQLRouter.processLimit(ParsingSQLRouter.java:147) ~[sharding-jdbc-core-1.5.0.jar:na]\r\n\tat com.dangdang.ddframe.rdb.sharding.routing.router.ParsingSQLRouter.route(ParsingSQLRouter.java:93) ~[sharding-jdbc-core-1.5.0.jar:na]\r\n\r\n### Steps to reproduce the behavior\r\n\u67e5\u8be2\u6761\u4ef6\uff1aLIMIT #{startIndex},#{pageSize}\r\nstartIndex \u4f20\u5165\u4e00\u4e2aLong\u7c7b\u578b  \r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n", "url": "https://github.com/apache/shardingsphere/issues/317", "user": "zuoqinbo", "labels": ["bug"], "created": "2017-08-08 08:46:55", "closed": "2017-08-10 01:42:49", "commits": {"7168d2afa789171f47ee8733dc6d0ee872ed594d": {"commitGHEventType": "referenced", "commitUser": "haocao"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "7168d2afa789171f47ee8733dc6d0ee872ed594d", "commitGHEventType": "referenced", "commitUser": "haocao", "commitParents": ["ef98bdbf6ea4fcad6f41c6de3f3564d5c335a507"], "nameRev": "7168d2afa789171f47ee8733dc6d0ee872ed594d tags/1.5.1~47", "commitMessage": "Fixed #317.\n", "commitDateTime": "2017-08-09 21:31:24", "authoredDateTime": "2017-08-09 21:29:36", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/util/NumberUtil.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/util/NumberUtilTest.java", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NumberUtil.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.util.NumberUtil.roundHalfUp(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NumberUtilTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.util.NumberUtilTest.assertRoundHalfUpWithShort()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.util.NumberUtilTest.assertRoundHalfUpWithLong()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7168d2afa789171f47ee8733dc6d0ee872ed594d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/util"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.util.NumberUtil.roundHalfUp(java.lang.Object)"]}, {"title": "It seems not support sql statement contains  \" <> \" ", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using? \r\n1.5.0\r\n### Expected behavior\r\nSupport complex sql\r\n### Actual behavior\r\nnot contains  \" <> \"\r\n### Steps to reproduce the behavior\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n", "url": "https://github.com/apache/shardingsphere/issues/313", "user": "denghc0607", "labels": ["bug"], "created": "2017-08-04 06:35:24", "closed": "2017-08-08 02:20:42", "commits": {"67544f1371ef25938bb77b3eb92511b86af20200": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "67544f1371ef25938bb77b3eb92511b86af20200", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["e918d6096345632ac0732dc20bbfd6b13e666885"], "nameRev": "67544f1371ef25938bb77b3eb92511b86af20200 tags/1.5.1~77", "commitMessage": "fixed #313\n", "commitDateTime": "2017-08-08 10:18:47", "authoredDateTime": "2017-08-08 10:18:47", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/SQLParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/assert/select.xml", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.SQLParser.parseComparisonCondition(com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.SQLStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["67544f1371ef25938bb77b3eb92511b86af20200"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.SQLParser.parseComparisonCondition(com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.SQLStatement)"]}, {"title": "\u6570\u636e\u5e93\u81ea\u589eGeneratedKey\u7684\u8fd4\u56de\u65e0\u6548\uff0c\u5df2\u7ecf\u786e\u8ba4\u4e0d\u652f\u6301\u3002", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n1.5.0\r\n### Expected behavior\r\nmysql\u81ea\u589eid\u5728Mybatis\u4e2d\u80fd\u62ff\u5230\r\n\r\n@Options(useGeneratedKeys = true, keyProperty = \"id\" )\r\n    boolean add(User user);\r\n\r\n### Actual behavior\r\n\r\n\u914d\u7f6esjdbc\u7684<rdb:generate-key-column column-name=\"id\"/>\u610f\u5473\u7740\u53ea\u80fd\u4f7f\u7528\u5206\u5e03\u5f0fid\u7b56\u7565\uff0c\u65e0\u6cd5\u6ee1\u8db3\u73b0\u6709\u9700\u6c42\uff0c1.4.2\u4e00\u76f4\u53ef\u4ee5\u7684\u3002\r\n\r\n### Steps to reproduce the behavior\r\n\r\n <insert id=\"insert\" useGeneratedKeys=\"true\" keyProperty=\"orderId\">\r\n        INSERT INTO t_order (\r\n          user_id, status\r\n        )\r\n        VALUES (\r\n        #{userId,jdbcType=INTEGER},\r\n        #{status,jdbcType=VARCHAR}\r\n        )\r\n    </insert>\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\n\r\n\u80fd\u591f\u50cf1.4.2\u4e00\u6837\u652f\u6301\u6570\u636e\u5e93\u81ea\u589eid\u8fd4\u56deGeneratedKey\u7b56\u7565\uff0c\u7ecf\u8fc7\u8c03\u8bd5\u53d1\u73b0\uff0cGeneratedKey\u4ec5\u5728\u914d\u7f6e\u5206\u5e03\u5f0f\u81ea\u589eid\u624d\u4f1a\u751f\u6548\u3002", "url": "https://github.com/apache/shardingsphere/issues/308", "user": "xuminwlt", "labels": ["bug"], "created": "2017-08-02 11:36:58", "closed": "2017-08-02 15:28:54", "commits": {"1407adfee30dab98ce19360e9e6f6bb46862f09d": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "449e6d18b1f2206b8a1e8cdccf07ece662457ed3": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1407adfee30dab98ce19360e9e6f6bb46862f09d", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["18ab7696ec00ce9a54284f041d9d02c83186203b"], "nameRev": "1407adfee30dab98ce19360e9e6f6bb46862f09d tags/1.5.1~122", "commitMessage": "fix #308\n", "commitDateTime": "2017-08-02 22:34:37", "authoredDateTime": "2017-08-02 22:34:37", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/core/statement/ShardingStatement.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingStatement.getGeneratedKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "449e6d18b1f2206b8a1e8cdccf07ece662457ed3", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["1407adfee30dab98ce19360e9e6f6bb46862f09d"], "nameRev": "449e6d18b1f2206b8a1e8cdccf07ece662457ed3 tags/1.5.1~121", "commitMessage": "fix #308\n", "commitDateTime": "2017-08-02 23:24:37", "authoredDateTime": "2017-08-02 23:24:37", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingPreparedStatement.generatePreparedStatement(com.dangdang.ddframe.rdb.sharding.routing.SQLExecutionUnit)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1407adfee30dab98ce19360e9e6f6bb46862f09d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.core.statement.ShardingStatement.getGeneratedKeys()"]}, {"title": "inline\u8868\u8fbe\u5f0f\u914d\u7f6e\u7684\u95ee\u9898", "body": "\u4f7f\u7528\u7684\u662frelease v1.5.0\u7248\u672c\u7684sharding-jdbc\uff0c\u5728\u914d\u7f6einline\u8868\u8fbe\u5f0f\u65f6\uff0c\u5982\u679c\u914d\u7f6e\u6210\u5982\u4e0b\uff1a\r\nactual-tables=\"order_${[1,2,3,4,5,6,7,8,9,a,b,c,d,e,f]}\"\r\n\u5728\u5de5\u7a0b\u542f\u52a8\u65f6\u4f1a\u62a5\u9519\uff1a\r\nCaused by: groovy.lang.MissingPropertyException: No such property: a for class: Script1\r\n\r\n\u5982\u679c\u914d\u7f6e\u6539\u6210\uff1a\r\nactual-tables=\"order_${['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f']}\"\u5219\u4e0d\u4f1a\u62a5\u9519\r\n\r\n\u8bf7\u786e\u8ba4\u4e00\u4e0b\u8fd9\u91cc\u662f\u5426\u8981\u52a0\u5355\u5f15\u53f7\u624d\u884c\uff0c\u56e0\u4e3a\u6211\u770b\u5b98\u65b9\u6587\u6863\u4e0ainline\u8868\u8fbe\u5f0f\u8fd9\u5757\u7684\u4f8b\u5b50\uff0c\u5b57\u7b26\u4e32\u662f\u4e0d\u7528\u52a0\u5f15\u53f7\u7684\uff1a\r\n![1](https://user-images.githubusercontent.com/25171658/28866660-32786138-77a6-11e7-87ac-8fc644a7b373.png)\r\n", "url": "https://github.com/apache/shardingsphere/issues/307", "user": "dgqypl", "labels": ["bug"], "created": "2017-08-02 09:16:01", "closed": "2017-08-02 09:25:52", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Not filter limit ResultSet if limit row count is 0", "body": "", "url": "https://github.com/apache/shardingsphere/issues/295", "user": "terrymanu", "labels": ["bug"], "created": "2017-07-19 07:03:52", "closed": "2017-07-19 07:04:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\u5185\u5b58\u65b9\u5f0f\u5904\u7406GROUP BY\u8bed\u53e5\u5982\u6709\u5206\u9875\u4fe1\u606f\u5219\u9700\u6539\u5199", "body": "\u5185\u5b58\u65b9\u5f0f\u5904\u7406\u7684GROUP BY\u8bed\u53e5\u9700\u8981\u4fee\u6539\u5206\u9875\u4fe1\u606f\uff0c\u9700\u5c06\u5168\u90e8\u6570\u636e\u52a0\u8f7d\u81f3\u5185\u5b58\u5e76\u5206\u7ec4\u4ee5\u53ca\u805a\u5408\u3002\u7136\u540e\u518d\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6LIMIT\uff08\u6216rownum\uff09\u7684\u6570\u636e\uff0c\u624d\u80fd\u4fdd\u8bc1\u7ed3\u679c\u7684\u6b63\u786e\u6027\r\n\r\n\u6240\u8c13\u5185\u5b58\u65b9\u5f0f\u5904\u7406GROUP BY\u5373\u4f7fGROUP BY \u4e0eORDER BY\u7684\u987a\u5e8f\u4e0d\u4e00\u81f4\u7684SQL\u3002", "url": "https://github.com/apache/shardingsphere/issues/292", "user": "terrymanu", "labels": ["bug"], "created": "2017-07-13 11:10:28", "closed": "2017-07-14 17:09:20", "commits": {"f52301b30f32366814e7d5fd2185de526a156e7c": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "f52301b30f32366814e7d5fd2185de526a156e7c", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d725cfcbf72c399b9753e2f1083e2cebfc7c4f31"], "nameRev": "f52301b30f32366814e7d5fd2185de526a156e7c tags/1.5.0.M3~5", "commitMessage": "fixed #292\n", "commitDateTime": "2017-07-15 13:23:52", "authoredDateTime": "2017-07-15 13:23:52", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing/parser/dialect/sqlserver/SQLServerParser.java", "insertions": 5, "deletions": 3, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SQLServerParser.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parsing.parser.dialect.sqlserver.SQLServerParser.parseTop(com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.select.SelectStatement)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f52301b30f32366814e7d5fd2185de526a156e7c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 3, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parsing"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parsing.parser.dialect.sqlserver.SQLServerParser.parseTop(com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.select.SelectStatement)"]}, {"title": "\u52a8\u6001\u8868\u914d\u7f6e\uff0c\u8054\u8868\u67e5\u8be2\u65f6\u5206\u9875\u67e5\u8be2\u7b2c\u4e09\u9875\u65f6\u4f1a\u5c06\u7b2c\u4e00\u9875\uff0c\u7b2c\u4e8c\u9875\u6570\u636e\u4e5f\u8fd4\u56de\u3002", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\r\n### Expected behavior\r\n\r\n\u67e5\u8be2\u7b2c\u4e09\u9875\u65f6\uff0c\u53ea\u8fd4\u56de\u7b2c\u4e09\u9875\u6570\u636e\r\n\r\n### Actual behavior\r\n\r\n\u67e5\u8be2\u7b2c\u4e09\u9875\u65f6\u4f1a\u5c06\u7b2c\u4e00\u9875\uff0c\u7b2c\u4e8c\u9875\u6570\u636e\u4e5f\u8fd4\u56de\u3002\r\n\r\n### Steps to reproduce the behavior\r\n\r\n\u4e24\u4e2a\u52a8\u6001\u8868\u8054\u8868\u67e5\u8be2\uff0c\u4f7f\u7528\u5206\u9875\u63d2\u4ef6pageHelper\r\n\r\n### Please provide the reproduce example codes (such as github link) if possible.\r\nsharding-jdbc \u914d\u7f6e\uff1a\r\n\r\nprivate Map<String, TableRuleConfig> createTableRuleConfigMap() {\r\n        Map<String, TableRuleConfig> result = new HashMap<>(3);\r\n        result.put(\"ord_order_info\", createDynamicTableRuleConfig(\"ord_order_info\"));\r\n        result.put(\"ord_order_detail\", createDynamicTableRuleConfig(\"ord_order_detail\"));\r\n        result.put(\"pay_flow\", createDynamicTableRuleConfig(\"pay_flow\"));\r\n        return result;\r\n    }\r\n\r\n    private StrategyConfig getTableStrategyConfigForExpression(String tableName) {\r\n        StrategyConfig result = new StrategyConfig();\r\n        result.setShardingColumns(\"store_id\");\r\n        result.setAlgorithmExpression(tableName + \"_${store_id}\");\r\n        return result;\r\n    }\r\n\r\n    private TableRuleConfig createDynamicTableRuleConfig(String tableName) {\r\n        TableRuleConfig result = new TableRuleConfig();\r\n        result.setDynamic(true);\r\n        result.setDataSourceNames(\"db_order_sharding\");\r\n        result.setTableStrategy(getTableStrategyConfigForExpression(tableName));\r\n        return result;\r\n    }\r\n\r\n\r\nSQL\uff1a\r\nselect ooi.id as orderCode, ooi.store_Id as storeID,\r\n         ooi.payment_type_id as paymentTypeId, ooi.order_total as orderAmount,\r\n         ooi.create_time as saleDate, ooi.payment_time as paymentDate,\r\n         ooi.member_cardNo as customerCode, ooi.user_tel as customerPhone,\r\n         ooi.order_node as remark,\r\n         ood.product_sku, ood.product_barcode, ood.product_name,\r\n         ood.product_format, ood.product_unit, ood.number\r\n        from ord_order_info ooi, ord_order_detail ood\r\n        where ooi.id = ood.order_id\r\n        <if test=\"orderId!=null and orderId!=''\">\r\n            and ooi.id = #{orderId}\r\n        </if>\r\n        and ooi.store_id = #{storeId}\r\n        and ood.store_id = #{storeId}\r\n", "url": "https://github.com/apache/shardingsphere/issues/285", "user": "michaelzhou2016", "labels": ["bug"], "created": "2017-07-11 07:11:31", "closed": "2017-07-14 12:34:26", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "generate-key-column \u4e0d\u914d\u7f6e \u63d2\u5165\u6570\u636e\u4e0d\u6210\u529f", "body": "Please answer these questions before submitting your issue. Thanks!\r\n\r\n### Which version of Sharding-Jdbc do you using?\r\n\u4f7f\u7528 sharding-jdbc 1.5.0.m2\r\n\u5728\u76ee\u524d\u7684\u4f7f\u7528\u4e2d\uff0c \u6709\u90e8\u5206\u8868\u8981\u505a\u5206\u8868\u64cd\u4f5c\uff0c \u6709\u4e00\u90e8\u5206\u4fdd\u5b58\u4e0d\u53d8\u3002\r\n\r\n\u8868\u7ed3\u6784\u4e3a\uff1a\r\nCREATE TABLE `chat_content` (\r\n  `id` bigint(19) NOT NULL AUTO_INCREMENT,\r\n  `content` text,\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB AUTO_INCREMENT=14775 DEFAULT CHARSET=utf8mb4;\r\n\r\n\u63d2\u5165\u8bed\u53e5\uff1a \r\n<insert id=\"insert\" parameterType=\"com.yiguo.qiakr.example.jdbc.entity.ChatContent\"\r\n\t\tuseGeneratedKeys=\"true\" keyProperty=\"id\">\r\n\t\tinsert into chat_content (\r\n\t\tcontent\r\n\t\t)\r\n\t\tvalues (\r\n\t\t#{content}\r\n\t\t)\r\n\t</insert>\r\n\u73b0\u5728\u4fdd\u6301\u4e0d\u53d8\u7684\u8868 \u5982\u679c\u6ca1\u6709 \u914d\u7f6e\uff1a\r\n <rdb:table-rule logic-table=\"chat_content\" actual-tables=\"chat_content\">\r\n                  <rdb:generate-key-column column-name=\"id\"/>\r\n            </rdb:table-rule> \r\n\u5728\u5411\u8868\u91cc\u63d2\u5165\u6570\u636e\u7684\u65f6\u5019\uff0c\u62a5\u4e0b\u9762\u9519\u8bef\uff0c \u4e2a\u4eba\u89c9\u5f97\u5373\u4f7f\u4e0d\u914d\u7f6e \u4e5f\u53ef\u4ee5\u6b63\u5e38\uff1a\r\nException in thread \"main\" org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.executor.ExecutorException: Error getting generated key or setting result to parameter object. Cause: java.lang.IllegalStateException: ResultSet has closed.\r\n\tat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:371)\r\n\tat com.sun.proxy.$Proxy16.insert(Unknown Source)\r\n\tat org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:240)\r\n\tat org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:51)\r\n\tat org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:52)\r\n\tat com.sun.proxy.$Proxy18.insert(Unknown Source)\r\n\tat com.yiguo.qiakr.example.jdbc.service.ChatlogService.insertContent(ChatlogService.java:109)\r\n\tat com.yiguo.qiakr.example.jdbc.service.ChatlogService$$FastClassBySpringCGLIB$$70c88c09.invoke(<generated>)\r\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\r\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:649)\r\n\tat com.yiguo.qiakr.example.jdbc.service.ChatlogService$$EnhancerBySpringCGLIB$$eeea63a3.insertContent(<generated>)\r\n\tat com.yiguo.qiakr.example.jdbc.service.ChatService.insert(ChatService.java:182)\r\n\tat com.yiguo.qiakr.example.jdbc.service.ChatService.insertBatch(ChatService.java:129)\r\n\tat com.yiguo.qiakr.example.jdbc.Main.main(Main.java:41)\r\nCaused by: org.apache.ibatis.executor.ExecutorException: Error getting generated key or setting result to parameter object. Cause: java.lang.IllegalStateException: ResultSet has closed.\r\n\tat org.apache.ibatis.executor.keygen.Jdbc3KeyGenerator.processBatch(Jdbc3KeyGenerator.java:66)\r\n\tat org.apache.ibatis.executor.keygen.Jdbc3KeyGenerator.processAfter(Jdbc3KeyGenerator.java:45)\r\n\tat org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)\r\n\tat org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:69)\r\n\tat org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)\r\n\tat org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:105)\r\n\tat org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:71)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:152)\r\n\tat org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:141)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:358)\r\n\t... 13 more\r\nCaused by: java.lang.IllegalStateException: ResultSet has closed.\r\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:173)\r\n\tat com.dangdang.ddframe.rdb.sharding.jdbc.core.resultset.GeneratedKeysResultSet.checkState(GeneratedKeysResultSet.java:234)\r\n\tat com.dangdang.ddframe.rdb.sharding.jdbc.core.resultset.GeneratedKeysResultSet.getMetaData(GeneratedKeysResultSet.java:78)\r\n\tat org.apache.ibatis.executor.keygen.Jdbc3KeyGenerator.processBatch(Jdbc3KeyGenerator.java:55)\r\n\t... 26 more\r\n\r\n\r\n", "url": "https://github.com/apache/shardingsphere/issues/276", "user": "jiangyilong", "labels": ["bug"], "created": "2017-07-04 09:03:53", "closed": "2017-07-14 12:32:48", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "\u5206\u9875\u7684bug", "body": "\u6570\u636e\u5206\u5e03\u4e0d\u5747\u5300\u7684\uff0c\u7b2c\u4e00\u4e2a\u6570\u636e\u5e93\u8868\u4e2d\u6709\u8be5\u7528\u6237\u6570\u636e\uff0c\u7b2c\u4e8c\u4e2a\u6570\u636e\u5e93\u4e2d\uff0c\u8868\u4e2d\u6ca1\u6709\u7528\u6237\u6570\u636e\uff0c\u6839\u636e\u7528\u6237\u7f16\u53f7\u67e5\u8be2\uff0c\u6309\u7167\u521b\u5efa\u65f6\u95f4\u6392\u5e8f\u8fdb\u884c\u5206\u9875\u67e5\u8be2\u8bf7\u6c42\uff0c\u524d\u51e0\u9875\u8fd4\u56de\u7684\u6570\u636e\u6b63\u786e\uff0c\u8d85\u8fc7\u4e86\u6700\u5927\u9875\u6570\u7684\u5206\u9875\uff0c\u8fd4\u56de\u7684\u6570\u636e\u4e0d\u662f\u7a7a\u3002\u5e76\u4e14\u4e00\u76f4\u6709\u6570\u636e\u3002\r\n\u4e3e\u4f8bA\u8868\u4e2d\u6709\u8be5\u7528\u6237\u7684\u6570\u636e100\u6761\uff0cB\u8868\u4e2d\u6ca1\u6709\u8be5\u7528\u6237\u6570\u636e\r\n\u5206\u9875\u5927\u5c0f\u6bcf\u6b2110\u6761\uff0c\u5219\uff0c\u8bf7\u6c4213\u9875\u7684\u65f6\u5019\uff0c\u4ecd\u7136\u4f1a\u5f97\u5230\u6570\u636e\u3002\r\n### Which version of Sharding-Jdbc do you using?\r\n1.4.2\r\n### Actual behavior\r\n\u6709\u6570\u636e\u8fd4\u56de\uff0c\u770b\u6837\u5b50\u50cf\u662f\u7b2c\u4e00\u9875\u7684\u6570\u636e\r\n", "url": "https://github.com/apache/shardingsphere/issues/272", "user": "dale19900108", "labels": ["bug", "duplicate"], "created": "2017-06-26 03:26:12", "closed": "2017-06-26 07:49:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ShardingPreparedStatement.addBatch()\u65b9\u6cd5\u9519\u8bef\uff0c\u5bfc\u81f4\u67d4\u6027\u4e8b\u52a1\u91cd\u590d\u4e3b\u952e", "body": "### Which version of Sharding-Jdbc do you using?\r\n1.5.0.M1\r\n### Expected behavior\r\n\u56e0\u67d4\u6027\u4e8b\u52a1\u4fdd\u5b58\u3001\u5220\u9664\u6b63\u5e38\r\n### Actual behavior\r\n\r\n`\r\n[2017-06-22 16:26:48.706] [ERROR] [ShardingJDBC-3] [druid.sql.Statement] >>> {conn-10009, pstmt-21613} execute error. INSERT INTO `transaction_log` (`id`, `transaction_type`, `data_source`, `sql`, `parameters`, `creation_time`) VALUES (?, ?, ?, ?, ?, ?);\r\norg.h2.jdbc.JdbcSQLException: Unique index or primary key violation: \"PRIMARY_KEY_8 ON PUBLIC.TRANSACTION_LOG(ID) VALUES ('d7c3c64c-9903-4c6a-898b-023638c89dd1', 819)\"; SQL statement:\r\nINSERT INTO `transaction_log` (`id`, `transaction_type`, `data_source`, `sql`, `parameters`, `creation_time`) VALUES (?, ?, ?, ?, ?, ?); [23505-192]\r\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\r\n\tat org.h2.message.DbException.get(DbException.java:179)\r\n\tat org.h2.message.DbException.get(DbException.java:155)\r\n\tat org.h2.index.BaseIndex.getDuplicateKeyException(BaseIndex.java:103)\r\n\tat org.h2.mvstore.db.MVSecondaryIndex.checkUnique(MVSecondaryIndex.java:231)\r\n\tat org.h2.mvstore.db.MVSecondaryIndex.add(MVSecondaryIndex.java:190)\r\n\tat org.h2.mvstore.db.MVTable.addRow(MVTable.java:704)\r\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:156)\r\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\r\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:98)\r\n\tat org.h2.command.Command.executeUpdate(Command.java:258)\r\n\tat org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:160)\r\n\tat org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:146)\r\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeUpdate(FilterChainImpl.java:2723)\r\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_executeUpdate(FilterAdapter.java:1069)\r\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_executeUpdate(FilterEventAdapter.java:491)\r\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeUpdate(FilterChainImpl.java:2721)\r\n\tat com.alibaba.druid.filter.FilterAdapter.preparedStatement_executeUpdate(FilterAdapter.java:1069)\r\n\tat com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_executeUpdate(FilterEventAdapter.java:491)\r\n\tat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_executeUpdate(FilterChainImpl.java:2721)\r\n\tat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.executeUpdate(PreparedStatementProxyImpl.java:145)\r\n\tat com.alibaba.druid.pool.DruidPooledPreparedStatement.executeUpdate(DruidPooledPreparedStatement.java:253)\r\n\tat com.dangdang.ddframe.rdb.transaction.soft.storage.impl.RdbTransactionLogStorage.add(RdbTransactionLogStorage.java:59)\r\n\tat com.dangdang.ddframe.rdb.transaction.soft.bed.sync.BestEffortsDeliveryListener.listen(BestEffortsDeliveryListener.java:59)\r\n\tat sun.reflect.GeneratedMethodAccessor53.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat com.google.common.eventbus.Subscriber.invokeSubscriberMethod(Subscriber.java:91)\r\n\tat com.google.common.eventbus.Subscriber$1.run(Subscriber.java:76)\r\n\tat com.google.common.util.concurrent.MoreExecutors$DirectExecutor.execute(MoreExecutors.java:435)\r\n\tat com.google.common.eventbus.Subscriber.dispatchEvent(Subscriber.java:71)\r\n\tat com.google.common.eventbus.Dispatcher$PerThreadQueuedDispatcher.dispatch(Dispatcher.java:116)\r\n\tat com.google.common.eventbus.EventBus.post(EventBus.java:217)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.executeInternal(ExecutorEngine.java:172)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.access$0(ExecutorEngine.java:158)\r\n\tat com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine$1.call(ExecutorEngine.java:147)\r\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:111)\r\n\tat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:58)\r\n\tat com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:75)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n`\r\n\r\n\u770b\u4ee3\u7801\u56e0\u4e3a\u8fd9\u6bb5\u6709\u4e2aclearParameters()\uff0c\u5bfc\u81f4\u4f20\u5165\u67d4\u6027\u4e8b\u52a1\u7684\u53c2\u6570\u90fd\u662f\u7a7a\uff0c\u6700\u7ec8\u5bfc\u81f4\u591a\u6b21\u4e8b\u52a1\u7684insert\u5c31\u51fa\u73b0\u91cd\u590did\r\n`@Override\r\n    public void addBatch() throws SQLException {\r\n        try {\r\n            for (BatchPreparedStatementUnit each : routeBatch()) {\r\n                each.getStatement().addBatch();\r\n                each.mapAddBatchCount(parameterSets.size());\r\n            }\r\n            parameterSets.add(getParameters());\r\n        } finally {\r\n            setCurrentResultSet(null);\r\n            clearParameters();\r\n        }\r\n    }\r\n`\r\n", "url": "https://github.com/apache/shardingsphere/issues/266", "user": "Beyondeclipse", "labels": ["bug"], "created": "2017-06-22 08:32:50", "closed": "2018-06-28 09:21:16", "commits": {}, "ttf": 371.0002777777778, "commitsDetails": []}, {"title": "\u5206\u7247\u5217\u548c\u903b\u8f91\u8868\u914d\u7f6e\u53ef\u5ffd\u7565\u5927\u5c0f\u5199", "body": "", "url": "https://github.com/apache/shardingsphere/issues/263", "user": "terrymanu", "labels": ["bug"], "created": "2017-06-16 10:31:23", "closed": "2017-06-16 10:32:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\u67e5\u8be2\u7269\u7406\u5206\u9875\u65f6\u6709BUG,\u67e5\u8be2\u7ed3\u679c\u4e0d\u5206\u9875", "body": "\u4e3e\u4f8b: \u8ba2\u5355\u8868 order_info , \u8ba2\u5355\u5206\u8868  order_info_01 (\u6709\u6570\u636e), order_info_02(\u6ca1\u6570\u636e) ,\r\n\u67e5\u8be2SQL :  select * from order_info order by id desc limit 10,10 ;\r\nsharding-jdbc \u53d1\u51fa\u7684 sql \u4e3a\u67e5\u8be2\u4e24\u5f20\u5206\u8868, \u5728\u67e5\u8be2\u7ed3\u679c\u5f52\u5e76\u7684\u65f6\u5019,\u88ab\u8bc6\u522b\u4e3a\u5355\u8868\u547d\u4e2d. \u6253\u5370\u7684\u65e5\u5fd7\u5185\u5bb9\u4e3a:  Sharding-JDBC: Sharding result sets type is 'SINGLE' , \u5728\u8be5\u7c7b\u578b\u4e0b,\u7ed3\u679c\u8fd4\u56de\u65f6\u6ca1\u6709\u505a\u7269\u7406\u5206\u9875\u7684\u5904\u7406,\u76f4\u63a5\u628a\u6240\u6709\u7ed3\u679c\u8fd4\u56de. \u7ed3\u679c\u5bfc\u81f4\u5206\u9875\u65e0\u6548,\u8fd4\u56de\u5168\u90e8\u6570\u636e.\r\n", "url": "https://github.com/apache/shardingsphere/issues/248", "user": "jianbinJava", "labels": ["bug", "duplicate"], "created": "2017-05-03 03:01:49", "closed": "2017-06-26 07:49:47", "commits": {}, "ttf": 54.000277777777775, "commitsDetails": []}, {"title": "limit\u5728\u591a\u4e2a\u67e5\u8be2\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u7ed3\u679c\u96c6\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u8fd4\u56de\u7684\u5206\u9875\u7ed3\u679c\u4e0d\u5bf9", "body": "limit\u67e5\u8be2\u5982\uff1alimit 20,10\uff0c\u67e5\u8be2\u5230\u591a\u4e2a\u7ed3\u679c\u96c6\uff0c\u5176\u4e2d\u53ea\u6709\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5728ShardingResultSets\u4e2dfilterResultSets\u65b9\u6cd5\u8fd4\u56de\u7684list\u53ea\u6709\u4e00\u4e2a\u7ed3\u679c\u96c6\uff1a\r\n```\r\nprivate List<ResultSet> filterResultSets(final List<ResultSet> resultSets) throws SQLException {\r\n        List<ResultSet> result = new ArrayList<>(resultSets.size());\r\n        for (ResultSet each : resultSets) {\r\n            if (each.next()) {\r\n                result.add(new WrapperResultSet(each));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n```\r\n\u6b64\u65f6\uff0ctype\u503c\u4e3aSINGLE\u3002\r\n```\r\nprivate Type generateType() {\r\n        if (this.resultSets.isEmpty()) {\r\n            return Type.EMPTY;\r\n        } else if (1 == this.resultSets.size()) {\r\n            return Type.SINGLE;\r\n        } else {\r\n            return Type.MULTIPLE;\r\n        }\r\n    }\r\n```\r\n\u6b64\u65f6\u76f4\u63a5\u8fd4\u56de\u4e86\u552f\u4e00\u7684\u7ed3\u679c\u96c6\uff08limit 0,30\uff09", "url": "https://github.com/apache/shardingsphere/issues/239", "user": "yanlizhang", "labels": ["bug"], "created": "2017-04-05 09:05:54", "closed": "2017-06-26 07:49:19", "commits": {"e469637a68471109492789e5f09a95dce8874f64": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 81.00027777777778, "commitsDetails": [{"commitHash": "e469637a68471109492789e5f09a95dce8874f64", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["325683c7c5468f6d7b1e693720d6c486fa5e1044"], "nameRev": "e469637a68471109492789e5f09a95dce8874f64 tags/1.5.0.M2~38", "commitMessage": "fix #239\n", "commitDateTime": "2017-06-26 14:25:04", "authoredDateTime": "2017-06-26 14:25:04", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/ResultSetFactory.java", "insertions": 4, "deletions": 19, "lines": 23}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/ShardingResultSets.java", "insertions": 0, "deletions": 17, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/ShardingResultSetsTest.java", "insertions": 1, "deletions": 5, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResultSetFactory.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory.buildMultiple(com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSets,com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.SQLStatement)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory.buildSingle(com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSets)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory.getResultSet(java.util.List,com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.SQLStatement)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory.buildEmpty(java.util.List)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "ShardingResultSets.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSets", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSets.generateType()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSets.Type", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ShardingResultSetsTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSetsTest.assertEmptyShardingResultSets()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSetsTest.assertSingleShardingResultSets()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSetsTest.assertMultipleShardingResultSets()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e469637a68471109492789e5f09a95dce8874f64"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 36, "lines": 40, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 16, "UPD": 3, "INS": 2, "MOV": 3, "DEL": 8, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory.getResultSet(java.util.List,com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.SQLStatement)", "com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSets", "com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory.buildEmpty(java.util.List)", "com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory.buildSingle(com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSets)", "com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory.buildMultiple(com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSets,com.dangdang.ddframe.rdb.sharding.parsing.parser.statement.SQLStatement)", "com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSets.Type", "com.dangdang.ddframe.rdb.sharding.merger.ShardingResultSets.generateType()"]}, {"title": "sharding-jdbc\u4f1a\u9ed8\u8ba4\u628a\u7c7b\u4f3c\u4e8eT.ID\u6216T.id\u4fee\u6539\u4e3at.id", "body": "sharding-jdbc\u4f1a\u9ed8\u8ba4\u628a\u7c7b\u4f3c\u4e8eT.ID\u6216T.id\u4fee\u6539\u4e3at.id\uff0c\u5982\u679c\u8bbe\u7f6emysql\u5927\u5c0f\u5199\u654f\u611f\u5e76\u4e14sql\u8bed\u53e5\u4e2d\u522b\u540d\u90fd\u5199\u4e3a\u5927\u5199\u65f6\uff0c\u5219\u4f1a\u5f15\u8d77\u62a5\u9519\uff1acom.mysql.jdbc.exceptions.MySQLSyntaxErrorException: Unknown column 't.id' in 'field list'", "url": "https://github.com/apache/shardingsphere/issues/238", "user": "shanleiyang", "labels": ["bug"], "created": "2017-04-01 05:29:06", "closed": "2017-06-24 08:21:17", "commits": {}, "ttf": 84.00027777777778, "commitsDetails": []}, {"title": "\u6570\u636e\u6e90\u52a0\u8f7d\u51fa\u73b0double\u60c5\u51b5", "body": "data-source\u6307\u5b9a\u6570\u636e\u6e90\u4f1a\u88ab\u521d\u59cb\u5316\u6210\u5185\u90e8bean\uff0c sharding-jdbc \u662f\u4f7f\u7528\u8fd9\u4e2a\u5185\u90e8bean\u4f5c\u4e3a\u6570\u636e\u6e90\uff0c\u5916\u5c42\u8bbe\u5b9a\u6570\u636e\u6e90bean\u6ca1\u6709\u88ab\u7528\uff0c\u8fd9\u5c31\u9020\u6210 \u6570\u636e\u6e90\u4f1a\u88ab\u521d\u59cb\u5316\u4e24\u6b21 \u4e5f\u5c31\u662f\u542f\u52a8\u65f6 \u4f1a\u6709\u4e24\u5957\u540c\u6837\u7684\u6570\u636e\u6e90 \u90fd\u52a0\u8f7d\u4e86\r\n\r\n\u6392\u67e5\u539f\u56e0\uff1a\r\n Map<String, BeanDefinition> result = new ManagedMap<>(dataSources.size());\r\n\r\nvalue \u4f7f\u7528\u4e86 BeanDefinition \u7c7b\u578b\r\nspring \u89e3\u6790 ManagedMap \u7c7b\u578b\u4ee3\u7801\r\n\r\nelse if (value instanceof ManagedMap) {\r\n\t\t\t// May need to resolve contained runtime references.\r\n\t\t\treturn resolveManagedMap(argName, (Map<?, ?>) value);\r\n\t\t}\r\n\r\nprivate Map<?, ?> resolveManagedMap(Object argName, Map<?, ?> mm) {\r\n\t\tMap<Object, Object> resolved = new LinkedHashMap<Object, Object>(mm.size());\r\n\t\tfor (Map.Entry<?, ?> entry : mm.entrySet()) {\r\n\t\t\tObject resolvedKey = resolveValueIfNecessary(argName, entry.getKey());\r\n\t\t\tObject resolvedValue = resolveValueIfNecessary(\r\n\t\t\t\t\tnew KeyedArgName(argName, entry.getKey()), entry.getValue());\r\n\t\t\tresolved.put(resolvedKey, resolvedValue);\r\n\t\t}\r\n\t\treturn resolved;\r\n\t}\r\n\r\nvalue \u6700\u540e\u91cd\u65b0\u8c03\u7528 resolveValueIfNecessary\u65b9\u6cd5\r\n\r\n\u89e3\u6790\r\nelse if (value instanceof BeanDefinition) {\r\n\t\t\t// Resolve plain BeanDefinition, without contained name: use dummy name.\r\n\t\t\tBeanDefinition bd = (BeanDefinition) value;\r\n\t\t\tString innerBeanName = \"(inner bean)\" + BeanFactoryUtils.GENERATED_BEAN_NAME_SEPARATOR +\r\n\t\t\t\t\tObjectUtils.getIdentityHexString(bd);\r\n\t\t\treturn resolveInnerBean(argName, innerBeanName, bd);\r\n\t\t}\r\n\r\nBeanDefinition\u7c7b\u578b\u4f1a\u76f4\u63a5\u751f\u6210\u5185\u90e8bean \uff0c\u6ca1\u6709\u4f7f\u7528\u5916\u90e8bean\u4f5c\u4e3a\u6570\u636e\u6e90\uff1b\r\n\r\n\u8fd9\u79cd\u60c5\u51b5\u914d\u7f6ebean\u6570\u636e\u6e90\u5c31\u4f1a\u88ab\u52a0\u8f7d\u4e24\u5957 \u5185\u90e8bean\u4e00\u5957\uff0c\u5916\u90e8bean \u4e00\u5957  sharding-jdbc\u4f7f\u7528\u7684\u662f\u5185\u90e8bean\u4f5c\u4e3a\u6570\u636e\u6e90\uff0c\u5916\u90e8bean\u6570\u636e\u6e90\u6ca1\u6709\u7528", "url": "https://github.com/apache/shardingsphere/issues/237", "user": "lijiahuioooo", "labels": ["bug"], "created": "2017-03-29 10:49:14", "closed": "2017-09-04 05:01:46", "commits": {"df9ba3520c2125c891a53440736841dce2dd0e9e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "414e6bc722919b99b06f64aac017314764dcb487": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "bf6591cd0d2e0fb4497c09eefba38d464a52117e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 158.00027777777777, "commitsDetails": [{"commitHash": "df9ba3520c2125c891a53440736841dce2dd0e9e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "414e6bc722919b99b06f64aac017314764dcb487", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bf6591cd0d2e0fb4497c09eefba38d464a52117e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "\u81ea\u52a8\u751f\u6210Id\u6700\u540e\u4e00\u4f4d\u4e0d\u5f52\u96f6", "body": "\u5728\u9ad8\u5e76\u53d1\u8c03\u7528\u65f6\uff0c\u5982\u679c\u540c\u4e00\u4e2a\u6beb\u79d2\u5185sequence\u6ea2\u51fa\u540e\u4e0d\u5f52\u96f6\r\n\r\n\r\n\r\n**Sharding-JDBC\u7248\u672c:** 1.4.1\r\n**\u64cd\u4f5c\u7cfb\u7edf\u53ca\u7248\u672c:** MacOS", "url": "https://github.com/apache/shardingsphere/issues/225", "user": "hanahmily", "labels": ["bug"], "created": "2017-02-15 08:36:45", "closed": "2017-02-15 08:39:49", "commits": {"b17c85e3aa1ce80bda36997cdca2dca62d82fcd6": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b17c85e3aa1ce80bda36997cdca2dca62d82fcd6", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["036df5613d3cd376796179fdb8c49e23c4c98325"], "nameRev": "b17c85e3aa1ce80bda36997cdca2dca62d82fcd6 tags/1.4.2~27", "commitMessage": "fix #225 ID's sequence can not reset to zero\n", "commitDateTime": "2017-02-15 16:40:05", "authoredDateTime": "2017-02-15 16:40:05", "commitGitStats": [{"filePath": "sharding-jdbc-doc/content/03-community/release-notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-id-generator-parent/sharding-jdbc-self-id-generator/src/main/java/com/dangdang/ddframe/rdb/sharding/id/generator/self/CommonSelfIdGenerator.java", "insertions": 1, "deletions": 10, "lines": 11}, {"filePath": "sharding-jdbc-id-generator-parent/sharding-jdbc-self-id-generator/src/test/java/com/dangdang/ddframe/rdb/sharding/id/generator/self/CommonSelfIdGeneratorTest.java", "insertions": 4, "deletions": 8, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommonSelfIdGenerator.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.id.generator.self.CommonSelfIdGenerator.getWorkerIdLength()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.id.generator.self.CommonSelfIdGenerator.generateId()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CommonSelfIdGeneratorTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.id.generator.self.CommonSelfIdGeneratorTest.maxId(int)", "TOT": 11, "UPD": 3, "INS": 1, "MOV": 4, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.id.generator.self.CommonSelfIdGeneratorTest.testMaxSequence()", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 3}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b17c85e3aa1ce80bda36997cdca2dca62d82fcd6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 10, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-id-generator-parent/sharding-jdbc-self-id-generator/src/main/java/com/dangdang/ddframe/rdb/sharding"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.id.generator.self.CommonSelfIdGenerator.generateId()", "com.dangdang.ddframe.rdb.sharding.id.generator.self.CommonSelfIdGenerator.getWorkerIdLength()"]}, {"title": "where\u4e2d table_name.column_name in (?,?)\u65e0\u6cd5\u89e3\u6790\u8868\u8fbe\u5f0f", "body": "`select * from tbl where tbl.id in (?, ?)` \u91cc\u9762\u7684 `tbl.id in (?, )` tbl \u6ca1\u6709\u88ab\u89e3\u6790\u51fa\u6765\u3002\r\n\r\n\u65e5\u5fd7\u5982\u4e0b\r\n\r\n```\r\nLogic SQL: SELECT board.id, board.author_id, board.title, board.description, board.accessibility, board.create_time, board.update_time FROM board WHERE board.id IN (?, ?), [23524622263648256, 23524622263648256]\r\n2017-01-04 22:25:28.646 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.sharding.parser.SQLParseEngine   : Parsed SQL result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=board, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), generatedKeyContext=GeneratedKeyContext(columns=[], columnNameToIndexMap={}, valueTable={}, rowIndex=0, columnIndex=0, autoGeneratedKeys=0, columnIndexes=null, columnNames=null), conditionContexts=[ConditionContext(conditions={Condition.Column(columnName=id, tableName=board)=Condition(column=Condition.Column(columnName=id, tableName=board), operator=IN, values=[23524622263648256, 23524622263648256], valueIndices=[0, 1])})], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null))\r\n2017-01-04 22:25:28.648 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.sharding.parser.SQLParseEngine   : Parsed SQL: SELECT [Token(board)].id, [Token(board)].author_id, [Token(board)].title, [Token(board)].description, [Token(board)].accessibility , [Token(board)].create_time, [Token(board)].update_time FROM [Token(board)] WHERE board.id IN (?, ?)\r\n2017-01-04 22:25:28.651 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.s.r.single.SingleTableRouter     : Before database sharding board routes db names: [ds_0, ds_1] sharding columns: [id] sharding values: [ShardingValue(logicTableName=board, columnName=id, value=null, values=[23524622263648256, 23524622263648256], valueRange=null)]\r\n2017-01-04 22:25:28.654 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.s.r.single.SingleTableRouter     : After database sharding board result: [ds_0]\r\n2017-01-04 22:25:28.654 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.s.r.single.SingleTableRouter     : Before table sharding board routes db names: [DataNode(dataSourceName=ds_0, tableName=board_0002), DataNode(dataSourceName=ds_1, tableName=board_0002), DataNode(dataSourceName=ds_0, tableName=board_0000), DataNode(dataSourceName=ds_1, tableName=board_0000), DataNode(dataSourceName=ds_0, tableName=board_0001), DataNode(dataSourceName=ds_1, tableName=board_0001)] sharding columns: [id] sharding values: [ShardingValue(logicTableName=board, columnName=id, value=null, values=[23524622263648256, 23524622263648256], valueRange=null)]\r\n2017-01-04 22:25:28.654 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.s.r.single.SingleTableRouter     : After table sharding board result: [board_0001]\r\n2017-01-04 22:25:28.659 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.sharding.router.SQLRouteEngine   : final route result is 1 target\r\n2017-01-04 22:25:28.659 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.sharding.router.SQLRouteEngine   : ds_0:SELECT board_0001.id, board_0001.author_id, board_0001.title, board_0001.description, board_0001.accessibility , board_0001.create_time, board_0001.update_time FROM board_0001 WHERE board.id IN (?, ?) [23524622263648256, 23524622263648256]\r\n2017-01-04 22:25:28.659 DEBUG 4234 --- [nio-8080-exec-1] c.d.d.r.sharding.router.SQLRouteEngine   : merge context:MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[], limit=null)\r\n```", "url": "https://github.com/apache/shardingsphere/issues/214", "user": "gfreezy", "labels": ["bug"], "created": "2017-01-04 14:32:04", "closed": "2017-01-20 10:22:24", "commits": {"3842365409d2f5453433e7b79304cfa473639488": {"commitGHEventType": "referenced", "commitUser": "hanahmily"}, "fe69b29610d8bca087e4df2f1938fc0f1bc80494": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "3842365409d2f5453433e7b79304cfa473639488", "commitGHEventType": "referenced", "commitUser": "hanahmily", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fe69b29610d8bca087e4df2f1938fc0f1bc80494", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["6a2b5fc427ffd1e1c112f0bd829b64b0275e2903"], "nameRev": "fe69b29610d8bca087e4df2f1938fc0f1bc80494 tags/1.4.2~31", "commitMessage": "Fix #214 recognize table name in binary expression\n", "commitDateTime": "2017-01-20 18:21:36", "authoredDateTime": "2017-01-10 19:23:54", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/basic/mysql/AbstractMySQLVisitor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/simple_select.xml", "insertions": 29, "deletions": 0, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractMySQLVisitor.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.AbstractMySQLVisitor.visit(com.alibaba.druid.sql.ast.expr.SQLPropertyExpr)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fe69b29610d8bca087e4df2f1938fc0f1bc80494"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 2.0, "MOV": 2.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.AbstractMySQLVisitor.visit(com.alibaba.druid.sql.ast.expr.SQLPropertyExpr)"]}, {"title": "1.3.1\u7248\u672c \u8868\u540d\u524d\u52a0\u5e93\u540d\u67e5\u8be2\u62a5\u7a7a\u6307\u9488", "body": "select * from dbname.tablename;\r\n\u8868\u540d\u524d\u52a0\u5e93\u540d\u4f1a\u62a5\u7a7a\u6307\u9488\u3002\u539f\u751fjdbcTemplate\u6b63\u5e38\u8fd0\u884c\u3002\r\n\u7248\u672c\u662f1.3.1\uff0c\u5728\u540e\u7eed\u7248\u672c\u5df2\u4fee\u590d\u8bf7\u5ffd\u7565\u3002\r\n\u82e5\u6ca1\u4fee\u590d\u5efa\u8bae\u8fdb\u884c\u4fee\u590d\uff0c\u4fdd\u6301\u4e0e\u539f\u751fjdbcTemplate\u7684\u65e0\u7f1d\u5207\u6362\u3002", "url": "https://github.com/apache/shardingsphere/issues/212", "user": "lulonglong", "labels": ["bug"], "created": "2016-12-24 08:41:45", "closed": "2017-01-20 10:22:24", "commits": {"5d599c41dd50c51c2d66b3960863441abf642de9": {"commitGHEventType": "referenced", "commitUser": "hanahmily"}, "f301fdc9ff1e22ecb8507ee81eda4be91c17bc82": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "5d599c41dd50c51c2d66b3960863441abf642de9", "commitGHEventType": "referenced", "commitUser": "hanahmily", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f301fdc9ff1e22ecb8507ee81eda4be91c17bc82", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["fe69b29610d8bca087e4df2f1938fc0f1bc80494"], "nameRev": "f301fdc9ff1e22ecb8507ee81eda4be91c17bc82 tags/1.4.2~30", "commitMessage": "Fix #212 prompts for missing data source rule\n", "commitDateTime": "2017-01-20 18:21:36", "authoredDateTime": "2017-01-10 19:45:34", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingConnection.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/statically/statement/StaticShardingBothForStatementWithSelectTest.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/simple_select.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-jdbc-doc/content/03-community/release-notes.md", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingConnection.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getConnectionInternal(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StaticShardingBothForStatementWithSelectTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.dbtbl.statically.statement.StaticShardingBothForStatementWithSelectTest.assertSelectGlobalTableWithDatabaseName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.dbtbl.statically.statement.StaticShardingBothForStatementWithSelectTest.assertSelectGlobalTableLacking()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f301fdc9ff1e22ecb8507ee81eda4be91c17bc82"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 0.0, "lines": 1.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getConnectionInternal(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)"]}, {"title": "limit\u5e76\u884c\u5f02\u5e38", "body": "\u5e76\u884c\u6267\u884climit\u67e5\u8be2\uff0c\u4f1a\u51fa\u73b0\u6570\u636e\u5f02\u5e38\r\n\r\n**\u95ee\u9898\u590d\u73b0\u6b65\u9aa4:**\r\n\r\n1. \u5e76\u884c\u6267\u884c\u591a\u4e2alimit\u67e5\u8be2\r\n\r\n**\u671f\u671b\u7684\u8868\u73b0:**\r\n\r\n\u6bcf\u4e2a\u67e5\u8be2\u53ef\u4ee5\u6b63\u5e38\u8fd4\u56de\r\n\r\n**\u89c2\u5bdf\u5230\u7684\u8868\u73b0:**\r\n\r\n\u51fa\u73b0IndexOutOfBoundsException\r\n\r\n**Sharding-JDBC\u7248\u672c:** 1.4.0\r\n**\u64cd\u4f5c\u7cfb\u7edf\u53ca\u7248\u672c:** OS X\r\n", "url": "https://github.com/apache/shardingsphere/issues/209", "user": "hanahmily", "labels": ["bug"], "created": "2016-12-15 05:53:10", "closed": "2016-12-15 05:59:07", "commits": {"8c77d99d97a976ede9160002dc9f1ae664c79799": {"commitGHEventType": "closed", "commitUser": "hanahmily"}, "3eed43bfae503e8d23c0d5619fd88945174dbe8b": {"commitGHEventType": "referenced", "commitUser": "hanahmily"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8c77d99d97a976ede9160002dc9f1ae664c79799", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3eed43bfae503e8d23c0d5619fd88945174dbe8b", "commitGHEventType": "referenced", "commitUser": "hanahmily", "commitParents": ["14f31838a418043f0b97971d0af30964975440cb"], "nameRev": "3eed43bfae503e8d23c0d5619fd88945174dbe8b tags/1.4.1~4", "commitMessage": "fixed #209 Limit concurrent error\n", "commitDateTime": "2016-12-15 16:52:53", "authoredDateTime": "2016-12-15 13:59:06", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/PreparedSQLRouter.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/SQLRouteEngine.java", "insertions": 2, "deletions": 7, "lines": 9}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PreparedSQLRouter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.PreparedSQLRouter.route(java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SQLRouteEngine.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.parseSQL(java.lang.String,java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.routeSQL(com.dangdang.ddframe.rdb.sharding.parser.result.SQLParsedResult)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.routeSQL(com.dangdang.ddframe.rdb.sharding.parser.result.SQLParsedResult,java.util.List)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.route(java.lang.String,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3eed43bfae503e8d23c0d5619fd88945174dbe8b"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3.0, "deletions": 9.0, "lines": 12.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 10.0, "UPD": 0.0, "INS": 5.0, "MOV": 0.0, "DEL": 5.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.router.PreparedSQLRouter.route(java.util.List)", "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.route(java.lang.String,java.util.List)", "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.routeSQL(com.dangdang.ddframe.rdb.sharding.parser.result.SQLParsedResult)", "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine", "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.parseSQL(java.lang.String,java.util.List)", "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.routeSQL(com.dangdang.ddframe.rdb.sharding.parser.result.SQLParsedResult,java.util.List)"]}, {"title": "\u6279\u91cf\u64cd\u4f5c\u6267\u884c\u524d\u4e8b\u4ef6\u53d1\u9001\u7f3a\u5931", "body": "\u76d1\u542c\u5668\u6267\u884c\u524d\u83b7\u5f97\u7684\u6d88\u606f\u6570\u91cf\u6bd4\u5347\u7ea7\u751f\u6210\u7684\u4e8b\u4ef6\u5c11\r\n\r\n**\u95ee\u9898\u590d\u73b0\u6b65\u9aa4:**\r\n\r\n1. \u589e\u52a0\u76d1\u542c\u5668\r\n\r\n```java\r\nDMLExecutionEventBus.register(new DMLExecutionEventListener() {\r\n            @Override\r\n            public String getName() {\r\n                return \"test\";\r\n            }\r\n            \r\n            @Subscribe\r\n            @AllowConcurrentEvents\r\n            public void subscribe(final DMLExecutionEvent event) {\r\n               ......\r\n            }\r\n        });\r\n```\r\n\r\n2. \u6267\u884csql\r\n\r\n```java\r\nString sql = \"INSERT INTO `t_order`(`order_id`, `user_id`, `status`) VALUES (?,?,?)\";\r\n        try (\r\n                Connection connection = shardingDataSource.getConnection();\r\n                PreparedStatement preparedStatement = connection.prepareStatement(sql)) {\r\n            preparedStatement.setInt(1, 3101);\r\n            preparedStatement.setInt(2, 11);\r\n            preparedStatement.setString(3, \"BATCH\");\r\n            preparedStatement.addBatch();\r\n            preparedStatement.setInt(1, 3102);\r\n            preparedStatement.setInt(2, 12);\r\n            preparedStatement.setString(3, \"BATCH\");\r\n            preparedStatement.addBatch();\r\n            preparedStatement.setInt(1, 3111);\r\n            preparedStatement.setInt(2, 21);\r\n            preparedStatement.setString(3, \"BATCH\");\r\n            preparedStatement.addBatch();\r\n            preparedStatement.setInt(1, 3112);\r\n            preparedStatement.setInt(2, 22);\r\n            preparedStatement.setString(3, \"BATCH\");\r\n            preparedStatement.addBatch();\r\n            int[] result = preparedStatement.executeBatch();\r\n        }\r\n```\r\n\r\n**\u671f\u671b\u7684\u8868\u73b0:**\r\n\r\nsubscribe\u6536\u5230\u7684\u4e8b\u4ef6\u7684\u6570\u91cf\u5e94\u8be5\u4e3a8\uff0c**4\u6761** BEFORE\u7c7b\u578b\uff0c4\u6761SUCCESS\u7c7b\u578b\r\n\r\n**\u89c2\u5bdf\u5230\u7684\u8868\u73b0:**\r\n\r\nsubscribe\u6536\u5230\u7684\u4e8b\u4ef6\u7684\u6570\u91cf\u5e94\u8be5\u4e3a8\uff0c**2\u6761** BEFORE\u7c7b\u578b\uff0c4\u6761SUCCESS\u7c7b\u578b\r\n\r\n**Sharding-JDBC\u7248\u672c:** [1.4.0]\r\n**\u64cd\u4f5c\u7cfb\u7edf\u53ca\u7248\u672c:** [OSX]", "url": "https://github.com/apache/shardingsphere/issues/201", "user": "hanahmily", "labels": ["bug"], "created": "2016-11-30 08:18:53", "closed": "2016-11-30 08:49:18", "commits": {"78b31ef764c44e6b524c3329e0c7acf0654d38f7": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "78b31ef764c44e6b524c3329e0c7acf0654d38f7", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["5efb5617fc8792547130117dc219a2eaab5e4dac"], "nameRev": "78b31ef764c44e6b524c3329e0c7acf0654d38f7 tags/1.4.1~13", "commitMessage": "fixed #201 Batch execution event sending misses pre-execution event send\n", "commitDateTime": "2016-11-30 16:48:47", "authoredDateTime": "2016-11-30 13:58:44", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/EventPostman.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatementTest.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EventPostman.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.EventPostman.postBatchExecutionEvent(com.dangdang.ddframe.rdb.sharding.executor.wrapper.BatchPreparedStatementExecutorWrapper)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.EventPostman.postExecutionEvents()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatementTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatementTest.assertAddBatch()", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["78b31ef764c44e6b524c3329e0c7acf0654d38f7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 1, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.executor.EventPostman.postBatchExecutionEvent(com.dangdang.ddframe.rdb.sharding.executor.wrapper.BatchPreparedStatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.EventPostman.postExecutionEvents()"]}, {"title": "\u5206\u8868\u4e14\u590d\u7528PreparedStatement\u5bf9\u8c61\u9020\u6210\u6570\u636e\u8def\u7531\u9519\u8bef", "body": "\u5206\u8868\u573a\u666f\u4e0b\uff0c\u590d\u7528PreparedStatement\u5bf9\u8c61 \u6216\u8005 \u4f7f\u7528batch\u65b9\u6cd5\r\n\r\n**\u95ee\u9898\u590d\u73b0\u6b65\u9aa4:**\r\n\r\n1.  \u53ea\u5206\u8868\r\n1.  \u590d\u7528PreparedStatement\r\n```java\r\nPreparedStatement ps = shardingConnection.prepareStatement(.....)\r\n...\r\n...\r\nps.execute();\r\n...\r\n...\r\nps.execute()\r\n```\r\n\r\n1.  \u6216\u4f7f\u7528batch\u63a5\u53e3\r\n```java\r\n...\r\nps.addBatch();\r\n...\r\n...\r\nps.addBatch();\r\nps.executeBatch();\r\n```\r\n\r\n**\u671f\u671b\u7684\u8868\u73b0:**\r\n\r\n\u6570\u636e\u50cf\u65e5\u5fd7\u9884\u671f\u7684\u90a3\u6837\u63d2\u5165\u5230\u6307\u5b9a\u7684\u8868\r\n\r\n**\u89c2\u5bdf\u5230\u7684\u8868\u73b0:**\r\n\r\n\u6570\u636e\u5168\u63d2\u5165\u4e86\u7b2c\u4e00\u6b21\u8def\u7531\u5230\u7684\u8868\uff0c\u540e\u7eed\u7684\u8868\u4e0d\u63d2\u5165\r\n\r\n**Sharding-JDBC\u7248\u672c:** [1.4.0]\r\n**\u64cd\u4f5c\u7cfb\u7edf\u53ca\u7248\u672c:** [OSX]\r\n", "url": "https://github.com/apache/shardingsphere/issues/199", "user": "hanahmily", "labels": ["bug"], "created": "2016-11-29 13:22:24", "closed": "2016-11-29 13:50:19", "commits": {"5efb5617fc8792547130117dc219a2eaab5e4dac": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5efb5617fc8792547130117dc219a2eaab5e4dac", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["7a617c443bcd82ef06dde80e1218e3f63b716c21"], "nameRev": "5efb5617fc8792547130117dc219a2eaab5e4dac tags/1.4.1~14", "commitMessage": "fixed #199 Only sharding table conditions, reuse PreparedStatement object cause data routing errors\n", "commitDateTime": "2016-11-29 21:50:10", "authoredDateTime": "2016-11-29 21:50:10", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/BackendPreparedStatementWrapper.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/BackendStatementWrapper.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatement.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingStatement.java", "insertions": 21, "deletions": 12, "lines": 33}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/tbl/pstatement/ShardingTablesOnlyForPStatementWithDMLTest.java", "insertions": 35, "deletions": 36, "lines": 71}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/tbl/statement/ShardingTablesOnlyForStatementWithDMLTest.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatementTableOnlyTest.java", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BackendPreparedStatementWrapper.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.BackendPreparedStatementWrapper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BackendStatementWrapper.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.BackendStatementWrapper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.generateStatement(java.sql.Connection,java.lang.String)", "TOT": 11, "UPD": 1, "INS": 5, "MOV": 5, "DEL": 0}]}, {"spoonFilePath": "ShardingStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.generateStatement(java.sql.Connection,java.lang.String)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.getStatement(java.sql.Connection,java.lang.String)", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.getRoutedStatements()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ShardingTablesOnlyForPStatementWithDMLTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.pstatement.ShardingTablesOnlyForPStatementWithDMLTest.assertInsert()", "TOT": 11, "UPD": 0, "INS": 2, "MOV": 8, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.pstatement.ShardingTablesOnlyForPStatementWithDMLTest.assertInsertWithAllPlaceholders()", "TOT": 11, "UPD": 0, "INS": 2, "MOV": 8, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.pstatement.ShardingTablesOnlyForPStatementWithDMLTest.assertUpdateWithoutAlias()", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.pstatement.ShardingTablesOnlyForPStatementWithDMLTest.assertUpdateWithAlias()", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.pstatement.ShardingTablesOnlyForPStatementWithDMLTest.assertDeleteWithoutAlias()", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.pstatement.ShardingTablesOnlyForPStatementWithDMLTest.assertUpdateWithoutShardingValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.pstatement.ShardingTablesOnlyForPStatementWithDMLTest.assertDeleteWithoutShardingValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.pstatement.ShardingTablesOnlyForPStatementWithDMLTest.assertInsertWithoutPlaceholder()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.pstatement.ShardingTablesOnlyForPStatementWithDMLTest.assertInsertWithPlaceholdersForShardingKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.pstatement.ShardingTablesOnlyForPStatementWithDMLTest.assertInsertWithPlaceholdersForNotShardingKeys()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingTablesOnlyForStatementWithDMLTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.statement.ShardingTablesOnlyForStatementWithDMLTest.assertUpdateWithoutShardingValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.statement.ShardingTablesOnlyForStatementWithDMLTest.assertDeleteWithoutShardingValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.statement.ShardingTablesOnlyForStatementWithDMLTest.assertInsert()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.statement.ShardingTablesOnlyForStatementWithDMLTest.assertUpdate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.tbl.statement.ShardingTablesOnlyForStatementWithDMLTest.assertDelete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatementTableOnlyTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatementTableOnlyTest.assertAddBatch()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5efb5617fc8792547130117dc219a2eaab5e4dac"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 119, "deletions": 18, "lines": 137, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 28, "UPD": 4, "INS": 13, "MOV": 8, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.getStatement(java.sql.Connection,java.lang.String)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.generateStatement(java.sql.Connection,java.lang.String)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.getRoutedStatements()", "com.dangdang.ddframe.rdb.sharding.jdbc.BackendStatementWrapper", "com.dangdang.ddframe.rdb.sharding.jdbc.BackendPreparedStatementWrapper", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.generateStatement(java.sql.Connection,java.lang.String)"]}, {"title": "jdbc\u63a5\u53e3\u4e2d\u8d44\u6e90\u91ca\u653e\u9519\u8bef", "body": "jdbc\u4e2d\uff0cConnection\uff0cStatement\uff0cResultset\u7b49\u63a5\u53e3\u4e2d\u7684close\u65b9\u6cd5\u4e2d\u90e8\u5206\u7ec4\u4ef6\u5f02\u5e38\u9020\u6210\u53e6\u5916\u4e00\u90e8\u5206\u7ec4\u4ef6\u7684close\u65b9\u6cd5\u6ca1\u6709\u88ab\u8c03\u7528\u3002\r\n\r\n**\u95ee\u9898\u590d\u73b0\u6b65\u9aa4:**\r\n\r\n1.\u6267\u884c\u4e00\u7ec4\u591a\u5206\u7247\u67e5\u8be2\r\n2.\u7528\u6a21\u62df\u8fde\u63a5\u6c60\uff0c\u5bf9\u8fd9\u6b21\u67e5\u8be2\u7684\u4e00\u7ec4\u8fde\u63a5\u91cc\u4e2d\u95f4\u7684\u8fde\u63a5\u6a21\u62dfclose\u9636\u6bb5\u629b\u51fa\u5f02\u5e38\r\n\r\n**\u671f\u671b\u7684\u8868\u73b0:**\r\n\r\n\u6a21\u62df\u51fa\u6765\u7684\u6240\u6709\u8fde\u63a5\u90fd\u6b63\u5e38\u5173\u95ed\r\n\r\n**\u89c2\u5bdf\u5230\u7684\u8868\u73b0:**\r\n\r\n\u90e8\u5206\u8fde\u63a5\u6ca1\u6709\u5173\u95ed\r\n\r\n**\u5c4f\u5e55\u622a\u56fe\u548c\u52a8\u6001GIF\u56fe**\r\n\r\n\u65e0\r\n**Sharding-JDBC\u7248\u672c:** [1.4.0]\r\n**\u64cd\u4f5c\u7cfb\u7edf\u53ca\u7248\u672c:** [OSX  10.11.6]", "url": "https://github.com/apache/shardingsphere/issues/194", "user": "hanahmily", "labels": ["bug"], "created": "2016-11-24 04:21:00", "closed": "2016-11-28 13:42:36", "commits": {"7a617c443bcd82ef06dde80e1218e3f63b716c21": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "7a617c443bcd82ef06dde80e1218e3f63b716c21", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["2c3fae0425539e866c67958cffedbcdaf3ace3f2"], "nameRev": "7a617c443bcd82ef06dde80e1218e3f63b716c21 tags/1.4.1~15", "commitMessage": "fixed #194 Part of the jdbc objects can not be released\n", "commitDateTime": "2016-11-28 21:42:15", "authoredDateTime": "2016-11-28 21:42:15", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 14, "deletions": 6, "lines": 20}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractResultSetAdapter.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractStatementAdapter.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/util/SQLUtil.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/util/ThrowableSQLExceptionMethod.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingConnectionTest.java", "insertions": 13, "deletions": 2, "lines": 15}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractConnectionAdapter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractConnectionAdapter.rollback()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractConnectionAdapter.close()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "AbstractResultSetAdapter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractResultSetAdapter.close()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "AbstractStatementAdapter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.close()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "SQLUtil.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.util.SQLUtil.safeInvoke(java.util.Collection,com.dangdang.ddframe.rdb.sharding.util.ThrowableSQLExceptionMethod)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ThrowableSQLExceptionMethod.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.util", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnectionTest.releaseBrokenConnectionTest()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnectionTest.closeExceptionConnection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7a617c443bcd82ef06dde80e1218e3f63b716c21"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 98, "deletions": 12, "lines": 110, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 23, "UPD": 4, "INS": 7, "MOV": 8, "DEL": 4, "spoonFilesChanged": 5, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/util"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractResultSetAdapter.close()", "com.dangdang.ddframe.rdb.sharding.util.SQLUtil.safeInvoke(java.util.Collection,com.dangdang.ddframe.rdb.sharding.util.ThrowableSQLExceptionMethod)", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractConnectionAdapter.close()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.close()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractConnectionAdapter.rollback()", "com.dangdang.ddframe.rdb.sharding.util"]}, {"title": "\u8bfb\u5199\u5206\u79bbSpring\u547d\u540d\u7a7a\u95f4\u7684\u5b9e\u73b0\u95ee\u9898", "body": "Spring\u547d\u540d\u7a7a\u95f4\u7684\u5b9e\u73b0\u6ca1\u6709\u4f9d\u8d56\u4e8eCommonConfig\u3002\u5e94\u8be5\u628a\u4ee3\u7801\u7edf\u4e00\u505a\u5b9e\u73b0", "url": "https://github.com/apache/shardingsphere/issues/182", "user": "hanahmily", "labels": ["bug"], "created": "2016-11-18 01:50:34", "closed": "2017-09-12 07:17:53", "commits": {}, "ttf": 298.0002777777778, "commitsDetails": []}, {"title": "\u6279\u91cf\u6267\u884cUpdate\u8fd4\u56de\u503c\u4e0d\u51c6\u786e", "body": "\u6279\u91cf\u6267\u884cUpdate \u8fd4\u56de\u6267\u884c\u6761\u6570\u4e0d\u51c6\u786e\u3002\u8fd4\u56de\u6570\u636e\u7684\u884c\u6570\u662f\u771f\u5b9e\u7684SQL\u6267\u884c\uff0c\u4f46\u6309\u7167`JDBC`\u7684\u89c4\u8303\u5e94\u8be5\u8fd4\u56de\u903b\u8f91SQL\u7684\u6267\u884c\u3002\u76ee\u524d\u5728\u7279\u5b9a\u6761\u4ef6\u8fd4\u56de\u7684\u6570\u7ec4\u4f1a\u591a\u3002", "url": "https://github.com/apache/shardingsphere/issues/180", "user": "hanahmily", "labels": ["bug"], "created": "2016-11-18 00:10:50", "closed": "2017-01-20 10:22:25", "commits": {"7cf964df21f571ada91bd6e04165d4ca172a264e": {"commitGHEventType": "referenced", "commitUser": "hanahmily"}, "036df5613d3cd376796179fdb8c49e23c4c98325": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 63.000277777777775, "commitsDetails": [{"commitHash": "7cf964df21f571ada91bd6e04165d4ca172a264e", "commitGHEventType": "referenced", "commitUser": "hanahmily", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "036df5613d3cd376796179fdb8c49e23c4c98325", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["f6ce91fe58b276bf0adf8c387337fe11f1de611f"], "nameRev": "036df5613d3cd376796179fdb8c49e23c4c98325 tags/1.4.2~28", "commitMessage": "fix #180 Batch update returns inaccurate\n", "commitDateTime": "2017-01-20 18:21:37", "authoredDateTime": "2017-01-20 18:07:02", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/PreparedStatementExecutor.java", "insertions": 9, "deletions": 10, "lines": 19}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatement.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatementTest.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "sharding-jdbc-doc/content/03-community/release-notes.md", "insertions": 3, "deletions": 7, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PreparedStatementExecutor.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatch().6.merge(java.util.List)", "TOT": 14, "UPD": 6, "INS": 0, "MOV": 3, "DEL": 5}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatch(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatch(int).6.merge(java.util.List)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PreparedStatementExecutorWrapper.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper.mapBatchIndex(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.clearRouteContext()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.addBatch()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.executeBatch()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatementTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatementTest.assertUpdateBatch()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["036df5613d3cd376796179fdb8c49e23c4c98325"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 31.0, "deletions": 11.0, "lines": 42.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 27.0, "UPD": 6.0, "INS": 13.0, "MOV": 3.0, "DEL": 5.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatch().6.merge(java.util.List)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.addBatch()", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.executeBatch()", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatch(int)", "com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper.mapBatchIndex(int)", "com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.clearRouteContext()", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatch(int).6.merge(java.util.List)"]}, {"title": "AbstractMemoryResultSet\u5bf9SQL\u7684wasNull\u5b9e\u73b0\u6709\u95ee\u9898", "body": "\u6807\u5fd7\u4f4dwasNull\u662f\u5728\u7ed3\u679c\u96c6\u4e2d\u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u662f`SQLNULL`\u7684\u65f6\u5019\u4f1a\u88ab\u8bbe\u7f6e\u4e3atrue\uff0c\u7528\u6765\u8868\u793a\u4eceResultSet\u4e2d\u83b7\u53d6\u7684\u503c\u662fnull\u3002\u4f46\u662f\u5f53\u67d0\u4e2a\u5b57\u6bb5\u7684\u503c\u4e0d\u662fnull\u7684\u65f6\u5019\u5e94\u8be5\u53ca\u65f6\u4fee\u6539\u6b64\u6807\u5fd7\u4f4d\u3002\r\n\r\n\u4f46\u662f`AbstractMemoryResultSet`\u7684\u5b9e\u73b0\u4e2d\u6ca1\u6709\u53ca\u65f6\u4fee\u6b63\u6b64flag\uff0c\u5bfc\u81f4\u67e5\u8be2\u7684\u6570\u636e\u4f1a\u51fa\u73b0\u4e00\u8fde\u4e32\u7684null\u3002\r\n\r\n\u6bd4\u5982\uff0cgetObject\u65b9\u6cd5\u5e94\u8be5\u8fd9\u6837\u5904\u7406wasNull\u3002\r\n\r\n````java\r\n    @Override\r\n    public Object getObject(final int columnIndex) throws SQLException {\r\n        Preconditions.checkState(!isClosed(), \"Result set is closed\");\r\n        Preconditions.checkState(!beforeFirst, \"Before start of result set\");\r\n        Preconditions.checkState(null != currentRow, \"After end of result set\");\r\n        Preconditions.checkArgument(currentRow.inRange(columnIndex), String.format(\"Column Index %d out of range\", columnIndex));\r\n        Object result = currentRow.getCell(columnIndex);\r\n        wasNull = null == result;\r\n        return result;\r\n    }\r\n````\r\n\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u7684\u51e0\u4e2a\u65b9\u6cd5\u540c\u6837\u5b58\u5728\u8fd9\u6837\u7684\u95ee\u9898\u3002\r\n\r\nJava\u4e2d\u5bf9\u6b64\u63a5\u53e3\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a\r\n\r\n````java\r\n    /**\r\n     * Reports whether\r\n     * the last column read had a value of SQL <code>NULL</code>.\r\n     * Note that you must first call one of the getter methods\r\n     * on a column to try to read its value and then call\r\n     * the method <code>wasNull</code> to see if the value read was\r\n     * SQL <code>NULL</code>.\r\n     *\r\n     * @return <code>true</code> if the last column value read was SQL\r\n     *         <code>NULL</code> and <code>false</code> otherwise\r\n     * @exception SQLException if a database access error occurs or this method is\r\n     *            called on a closed result set\r\n     */\r\n    boolean wasNull() throws SQLException;\r\n````", "url": "https://github.com/apache/shardingsphere/issues/176", "user": "0x0010", "labels": ["bug"], "created": "2016-11-16 07:03:03", "closed": "2016-11-17 03:38:44", "commits": {"8e3c0ee5fac623dc50ba61955f81c39a6fe9ceee": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8e3c0ee5fac623dc50ba61955f81c39a6fe9ceee", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["aee7517f4e8372d946ca28da5b8629b78027f453"], "nameRev": "8e3c0ee5fac623dc50ba61955f81c39a6fe9ceee tags/1.4.0~10", "commitMessage": "fix #176 ResultSet's state of wasNull mismatch the actual situation\n", "commitDateTime": "2016-11-17 11:39:08", "authoredDateTime": "2016-11-17 11:39:08", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/resultset/memory/AbstractMemoryResultSet.java", "insertions": 1, "deletions": 6, "lines": 7}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 5, "deletions": 8, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractMemoryResultSet.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.resultset.memory.AbstractMemoryResultSet.getObject(int)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.resultset.memory.AbstractMemoryResultSet.getBoolean(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.resultset.memory.AbstractMemoryResultSet.getBytes(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.resultset.memory.AbstractMemoryResultSet.getURL(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8e3c0ee5fac623dc50ba61955f81c39a6fe9ceee"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 6, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.merger.resultset.memory.AbstractMemoryResultSet.getBytes(int)", "com.dangdang.ddframe.rdb.sharding.merger.resultset.memory.AbstractMemoryResultSet.getURL(int)", "com.dangdang.ddframe.rdb.sharding.merger.resultset.memory.AbstractMemoryResultSet.getObject(int)", "com.dangdang.ddframe.rdb.sharding.merger.resultset.memory.AbstractMemoryResultSet.getBoolean(int)"]}, {"title": "\u9891\u7e41\u5e76\u53d1\u6267\u884csql\u51fa\u73b0ERROR executor.ExecutorEngine: Concurrent execute result error \u548cNo operations allowed after statement closed", "body": "\u5f53\u6211\u9891\u7e41\u7684\u6267\u884csql\u6216\u8005\u5728\u4e00\u4e2a\u8bf7\u6c42\u4e2d\u6267\u884csql\u592a\u591a\u4f1a\u51fa\u73b0\n[27/10/16 10:20:28:028 CST] pool-1-thread-26 ERROR executor.ExecutorEngine: Concurrent execute result error {}\ncom.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n\u548c\n[27/10/16 10:20:28:028 CST] pool-1-thread-30 ERROR stat.StatFilter: getUpdateCount error\ncom.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after statement closed.\n\u670d\u52a1\u914d\u7f6e\u5982\u4e0b:\n\n<bean id=\"dataSource_0\" class=\"com.alibaba.druid.pool.DruidDataSource\"\n        init-method=\"init\" destroy-method=\"close\">\n\n```\n    <!-- \u6570\u636e\u6e90\u9a71\u52a8\u7c7b\u53ef\u4e0d\u5199\uff0cDruid\u9ed8\u8ba4\u4f1a\u81ea\u52a8\u6839\u636eURL\u8bc6\u522bDriverClass -->\n    <!-- <property name=\"driverClassName\" value=\"${jdbc.replicationDriver}\" \n        /> -->\n    <property name=\"driverClassName\" value=\"${jdbc.driver}\" />\n    <!-- \u57fa\u672c\u5c5e\u6027 url\u3001user\u3001password -->\n    <property name=\"url\" value=\"${jdbc.url_0}\" />\n    <property name=\"username\" value=\"${jdbc.username_0}\" />\n    <property name=\"password\" value=\"${jdbc.password_0}\" />\n\n    <!-- \u914d\u7f6e\u521d\u59cb\u5316\u5927\u5c0f\u3001\u6700\u5c0f\u3001\u6700\u5927 -->\n    <property name=\"initialSize\" value=\"100\" />\n    <property name=\"minIdle\" value=\"300\" />\n    <property name=\"maxActive\" value=\"2000\" />\n\n    <!-- \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4 -->\n    <property name=\"maxWait\" value=\"60000\" />\n\n    <!-- \u914d\u7f6e\u95f4\u9694\u591a\u4e45\u624d\u8fdb\u884c\u4e00\u6b21\u68c0\u6d4b\uff0c\u68c0\u6d4b\u9700\u8981\u5173\u95ed\u7684\u7a7a\u95f2\u8fde\u63a5\uff0c\u5355\u4f4d\u662f\u6beb\u79d2 -->\n    <property name=\"timeBetweenEvictionRunsMillis\" value=\"5000\" />\n\n    <!-- \u914d\u7f6e\u4e00\u4e2a\u8fde\u63a5\u5728\u6c60\u4e2d\u6700\u5c0f\u751f\u5b58\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2 -->\n    <property name=\"minEvictableIdleTimeMillis\" value=\"30000\" />\n\n    <property name=\"testWhileIdle\" value=\"true\" />\n    <property name=\"testOnBorrow\" value=\"false\" />\n    <property name=\"testOnReturn\" value=\"false\" />\n    <!-- \u914d\u7f6e\u76d1\u63a7\u7edf\u8ba1\u62e6\u622a\u7684filters -->\n    <property name=\"filters\" value=\"stat\" />\n</bean>\n\n<bean id=\"dataSource_1\" class=\"com.alibaba.druid.pool.DruidDataSource\"\n    init-method=\"init\" destroy-method=\"close\">\n\n    <!-- \u6570\u636e\u6e90\u9a71\u52a8\u7c7b\u53ef\u4e0d\u5199\uff0cDruid\u9ed8\u8ba4\u4f1a\u81ea\u52a8\u6839\u636eURL\u8bc6\u522bDriverClass -->\n    <!-- <property name=\"driverClassName\" value=\"${jdbc.replicationDriver}\" \n        /> -->\n    <property name=\"driverClassName\" value=\"${jdbc.driver}\" />\n    <!-- \u57fa\u672c\u5c5e\u6027 url\u3001user\u3001password -->\n    <property name=\"url\" value=\"${jdbc.url_1}\" />\n    <property name=\"username\" value=\"${jdbc.username_1}\" />\n    <property name=\"password\" value=\"${jdbc.password_1}\" />\n\n    <!-- \u914d\u7f6e\u521d\u59cb\u5316\u5927\u5c0f\u3001\u6700\u5c0f\u3001\u6700\u5927 -->\n    <property name=\"initialSize\" value=\"100\" />\n    <property name=\"minIdle\" value=\"300\" />\n    <property name=\"maxActive\" value=\"2000\" />\n    <!-- \u914d\u7f6e\u83b7\u53d6\u8fde\u63a5\u7b49\u5f85\u8d85\u65f6\u7684\u65f6\u95f4 -->\n    <property name=\"maxWait\" value=\"60000\" />\n\n    <!-- \u914d\u7f6e\u95f4\u9694\u591a\u4e45\u624d\u8fdb\u884c\u4e00\u6b21\u68c0\u6d4b\uff0c\u68c0\u6d4b\u9700\u8981\u5173\u95ed\u7684\u7a7a\u95f2\u8fde\u63a5\uff0c\u5355\u4f4d\u662f\u6beb\u79d2 -->\n    <property name=\"timeBetweenEvictionRunsMillis\" value=\"5000\" />\n\n    <!-- \u914d\u7f6e\u4e00\u4e2a\u8fde\u63a5\u5728\u6c60\u4e2d\u6700\u5c0f\u751f\u5b58\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2 -->\n    <property name=\"minEvictableIdleTimeMillis\" value=\"30000\" />\n\n    <property name=\"testWhileIdle\" value=\"true\" />\n    <property name=\"testOnBorrow\" value=\"false\" />\n    <property name=\"testOnReturn\" value=\"false\" />\n    <!-- \u914d\u7f6e\u76d1\u63a7\u7edf\u8ba1\u62e6\u622a\u7684filters -->\n    <property name=\"filters\" value=\"stat\" />\n</bean>\n\n\n<rdb:strategy id=\"databaseShardingStrategy\" sharding-columns=\"id\"\n    algorithm-class=\"com.handu.open.dubbo.monitor.config.ModuloSingleKeyDatabaseShardingAlgorithm\" />\n<rdb:strategy id=\"tableShardingStrategy\" sharding-columns=\"invoke_time\"\n    algorithm-class=\"com.handu.open.dubbo.monitor.config.ModuloSingleKeyTableShardingAlgorithm\" />\n\n<rdb:data-source id=\"shardingDataSource\">\n<rdb:sharding-rule data-sources=\"dataSource_0,dataSource_1\"\n    default-data-source=\"dataSource_0\">\n    <rdb:table-rules>\n        <rdb:table-rule logic-table=\"dubbo_invoke\"\n            actual-tables=\"dubbo_invoke_${0..1}\" database-strategy=\"databaseShardingStrategy\"\n            table-strategy=\"tableShardingStrategy\" />\n    </rdb:table-rules>\n</rdb:sharding-rule>\n<rdb:props>\n    <prop key=\"executor.min.idle.size\">30</prop>\n    <prop key=\"executor.max.size\">100</prop>\n    <prop key=\"executor.max.idle.timeout.millisecond\">3000000</prop>\n</rdb:props>\n```\n\n/rdb:data-source\n\npom\u6587\u4ef6:\n<dependency>\n            <groupId>com.dangdang</groupId>\n            <artifactId>sharding-jdbc-core</artifactId>\n            <version>1.3.3</version>\n        </dependency>\n    <dependency>\n        <groupId>com.dangdang</groupId>\n        <artifactId>sharding-jdbc-config-spring</artifactId>\n        <version>1.3.3</version>\n    </dependency>\n\njava\u52a0\u8f7d\u914d\u7f6e:\npublic class MyBatisConfig implements ApplicationContextAware {\n\n```\n@Autowired\nprivate Environment env;\n\nprivate ApplicationContext context;\nprivate final ApplicationContext ac = new FileSystemXmlApplicationContext(\"classpath:spring-context.xml\");\n\n@Bean\npublic DataSource dataSource() {\n    DataSource dataSource = (DataSource) ac.getBean(\"shardingDataSource\");\n    return dataSource;\n}\n\n@Bean\npublic SqlSessionFactory sqlSessionFactory() throws Exception {\n    SqlSessionFactoryBean factoryBean = new SqlSessionFactoryBean();\n    factoryBean.setDataSource(dataSource());\n    factoryBean.setMapperLocations(context.getResources(\"classpath*:mappers/**/*.xml\"));\n    return factoryBean.getObject();\n}\n\n@Bean\npublic DataSourceTransactionManager transactionManager() {\n    DataSourceTransactionManager transactionManager = new DataSourceTransactionManager();\n    transactionManager.setDataSource(dataSource());\n    return transactionManager;\n}\n\npublic void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n    context = applicationContext;\n}\n```\n\n}\n\n\u5177\u4f53\u9519\u8bef:\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@42ac9424 AS failure\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@42ac9424\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: failure\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure)\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@3dc216f2 AS elapsed\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@3dc216f2\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: elapsed\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed)\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@a49cc586 AS maxElapsed\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@a49cc586\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: max_elapsed\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed)\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@11570f83 AS maxConcurrent\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@11570f83\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: max_concurrent\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent)\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 visit argument: 1 = 1\n    AND invoke_time >= ?\n    AND invoke_time <= ?\n    AND service = ?\n    AND method = ?\n    AND type = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: 1 = 1\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: 1\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: 1\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: invoke_time >= ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: invoke_time\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: invoke_time <= ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: invoke_time\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: service = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: service\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: method = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: method\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 visit argument: type = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 visit argument: type\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5   6 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4   5 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3   4 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3 endVisit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2   3 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelect\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1   2 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectStatement\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1 endVisit condition: ConditionContext(conditions={})\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE visitor.VisitorLogProxy:   1 endVisit SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG parser.SQLParseEngine: Parsed SQL result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=dubbo_invoke, alias=Optional.absent())], sqlStatementType=null, sqlBuilder=null), conditionContexts=[ConditionContext(conditions={})], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null))\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG parser.SQLParseEngine: Parsed SQL: SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM [Token(dubbo_invoke)] WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type = ?\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG single.SingleTableRouter: Before database sharding dubbo_invoke routes db names: [dataSource_0, dataSource_1] sharding columns: [id] sharding values: []\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG single.SingleTableRouter: After database sharding dubbo_invoke result: [dataSource_0, dataSource_1]\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG single.SingleTableRouter: Before table sharding dubbo_invoke routes db names: [DataNode(dataSourceName=dataSource_0, tableName=dubbo_invoke_1), DataNode(dataSourceName=dataSource_1, tableName=dubbo_invoke_1), DataNode(dataSourceName=dataSource_0, tableName=dubbo_invoke_0), DataNode(dataSourceName=dataSource_1, tableName=dubbo_invoke_0)] sharding columns: [invoke_time] sharding values: []\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG single.SingleTableRouter: After table sharding dubbo_invoke result: [dubbo_invoke_1, dubbo_invoke_0]\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: final route result is 4 target\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: dataSource_1:SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM dubbo_invoke_0 WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type = ? [1477497600986, 1477583999986, com.talk51.modules.course.CourseService, getSeries, provider]\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: dataSource_0:SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM dubbo_invoke_1 WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type = ? [1477497600986, 1477583999986, com.talk51.modules.course.CourseService, getSeries, provider]\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: dataSource_1:SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM dubbo_invoke_1 WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type = ? [1477497600986, 1477583999986, com.talk51.modules.course.CourseService, getSeries, provider]\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: dataSource_0:SELECT SUM(success) AS success, SUM(failure) AS failure, SUM(elapsed) AS elapsed, MAX(max_elapsed) AS maxElapsed, MIN(max_concurrent) AS maxConcurrent FROM dubbo_invoke_0 WHERE 1 = 1 AND invoke_time >= ? AND invoke_time <= ? AND service = ? AND method = ? AND type = ? [1477497600986, 1477583999986, com.talk51.modules.course.CourseService, getSeries, provider]\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG router.SQLRouteEngine: merge context:MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=SUM(success), aggregationType=SUM, alias=Optional.of(success), option=Optional.absent(), derivedColumns=[], columnIndex=1), AggregationColumn(expression=SUM(failure), aggregationType=SUM, alias=Optional.of(failure), option=Optional.absent(), derivedColumns=[], columnIndex=2), AggregationColumn(expression=SUM(elapsed), aggregationType=SUM, alias=Optional.of(elapsed), option=Optional.absent(), derivedColumns=[], columnIndex=3), AggregationColumn(expression=MAX(max_elapsed), aggregationType=MAX, alias=Optional.of(maxElapsed), option=Optional.absent(), derivedColumns=[], columnIndex=4), AggregationColumn(expression=MIN(max_concurrent), aggregationType=MIN, alias=Optional.of(maxConcurrent), option=Optional.absent(), derivedColumns=[], columnIndex=5)], limit=null)\n[27/10/16 10:57:12:012 CST] pool-1-thread-27 ERROR executor.ExecutorEngine: Concurrent execute result error {}\ncom.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n    at com.dangdang.ddframe.rdb.sharding.executor.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(PreparedStatementExecutor.java:188)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.access$200(PreparedStatementExecutor.java:46)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:170)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:166)\n    at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine$1.call(ExecutorEngine.java:109)\n    at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\n    at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\n    at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:77)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.sql.SQLException: Error\n    at com.alibaba.druid.pool.DruidDataSource.handleConnectionException(DruidDataSource.java:1193)\n    at com.alibaba.druid.pool.DruidPooledConnection.handleException(DruidPooledConnection.java:127)\n    at com.alibaba.druid.pool.DruidPooledStatement.checkException(DruidPooledStatement.java:68)\n    at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:495)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(PreparedStatementExecutor.java:185)\n    ... 10 more\nCaused by: java.lang.NullPointerException\n    at com.alibaba.druid.support.profile.Profiler.release(Profiler.java:58)\n    at com.alibaba.druid.filter.stat.StatFilter.statement_executeErrorAfter(StatFilter.java:501)\n    at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:450)\n    at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)\n    at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:118)\n    at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)\n    ... 11 more\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG spring.SqlSessionUtils: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@632fafe1]\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG datasource.DataSourceUtils: Returning JDBC Connection to DataSource\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG annotation.ExceptionHandlerExceptionResolver: Resolving exception from handler [public java.lang.String com.handu.open.dubbo.monitor.controller.StatisticsController.index(com.handu.open.dubbo.monitor.domain.DubboInvoke,org.springframework.ui.Model)]: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n### The error may exist in file [D:\\workspace.metadata.plugins\\org.eclipse.wst.server.core\\tmp9\\wtpwebapps\\dubbo-monitor\\WEB-INF\\classes\\mappers\\DubboInvokeMapper.xml]\n### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline\n### The error occurred while setting parameters\n### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time >= ?                                 AND invoke_time <= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ?\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG annotation.ResponseStatusExceptionResolver: Resolving exception from handler [public java.lang.String com.handu.open.dubbo.monitor.controller.StatisticsController.index(com.handu.open.dubbo.monitor.domain.DubboInvoke,org.springframework.ui.Model)]: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n### The error may exist in file [D:\\workspace.metadata.plugins\\org.eclipse.wst.server.core\\tmp9\\wtpwebapps\\dubbo-monitor\\WEB-INF\\classes\\mappers\\DubboInvokeMapper.xml]\n### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline\n### The error occurred while setting parameters\n### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time >= ?                                 AND invoke_time <= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ?\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG support.DefaultHandlerExceptionResolver: Resolving exception from handler [public java.lang.String com.handu.open.dubbo.monitor.controller.StatisticsController.index(com.handu.open.dubbo.monitor.domain.DubboInvoke,org.springframework.ui.Model)]: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n### The error may exist in file [D:\\workspace.metadata.plugins\\org.eclipse.wst.server.core\\tmp9\\wtpwebapps\\dubbo-monitor\\WEB-INF\\classes\\mappers\\DubboInvokeMapper.xml]\n### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline\n### The error occurred while setting parameters\n### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time >= ?                                 AND invoke_time <= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ?\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE servlet.DispatcherServlet: Cleared thread-bound request context: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.context.HttpSessionSecurityContextRepository$Servlet3SaveToSessionRequestWrapper@674b68bd]\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG servlet.DispatcherServlet: Could not complete request\norg.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n### The error may exist in file [D:\\workspace.metadata.plugins\\org.eclipse.wst.server.core\\tmp9\\wtpwebapps\\dubbo-monitor\\WEB-INF\\classes\\mappers\\DubboInvokeMapper.xml]\n### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline\n### The error occurred while setting parameters\n### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time >= ?                                 AND invoke_time <= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ?\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n\n```\nat org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:371)\nat com.sun.proxy.$Proxy26.selectList(Unknown Source)\nat org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:198)\nat com.handu.open.dubbo.monitor.support.Dao.getList(Dao.java:145)\nat com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo(DubboMonitorService.java:319)\nat com.handu.open.dubbo.monitor.controller.StatisticsController.composeData(StatisticsController.java:135)\nat com.handu.open.dubbo.monitor.controller.StatisticsController.index(StatisticsController.java:81)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:215)\nat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)\nat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\nat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:745)\nat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:685)\nat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:80)\nat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:919)\nat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:851)\nat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:953)\nat org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:844)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:620)\nat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:829)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:727)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\nat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)\nat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:118)\nat org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:84)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:103)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:113)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:154)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:45)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:201)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:110)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:57)\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:106)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:50)\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:106)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)\nat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)\nat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:343)\nat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:260)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\nat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)\nat org.apache.catalina.core.StandardContextValv\u5341\u6708 27, 2016 10:57:12 \u4e0a\u5348 org.apache.catalina.core.StandardWrapperValve invoke\n```\n\n\u4e25\u91cd: Servlet.service() for servlet [springServlet] in context with path [/dubbo-monitor] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n### The error may exist in file [D:\\workspace.metadata.plugins\\org.eclipse.wst.server.core\\tmp9\\wtpwebapps\\dubbo-monitor\\WEB-INF\\classes\\mappers\\DubboInvokeMapper.xml]\n### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline\n### The error occurred while setting parameters\n### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time >= ?                                 AND invoke_time <= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ?\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error] with root cause\n\njava.lang.NullPointerException\n    at com.alibaba.druid.support.profile.Profiler.release(Profiler.java:58)\n    at com.alibaba.druid.filter.stat.StatFilter.statement_executeErrorAfter(StatFilter.java:501)\n    at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:450)\n    at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)\n    at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:118)\n    at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(PreparedStatementExecutor.java:185)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.access$200(PreparedStatementExecutor.java:46)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:170)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:166)\n    at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine$1.call(ExecutorEngine.java:109)\n    at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\n    at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\n    at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:77)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\n\ne.invoke(StandardContextValve.java:122)\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98)\n    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:950)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:408)\n    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1040)\n    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)\n    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:315)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: org.apache.ibatis.exceptions.PersistenceException: \n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n### The error may exist in file [D:\\workspace.metadata.plugins\\org.eclipse.wst.server.core\\tmp9\\wtpwebapps\\dubbo-monitor\\WEB-INF\\classes\\mappers\\DubboInvokeMapper.xml]\n### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline\n### The error occurred while setting parameters\n### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time >= ?                                 AND invoke_time <= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ?\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n\n```\nat org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:26)\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:111)\nat org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:102)\nat sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:358)\n... 74 more\n```\n\nCaused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n    at com.dangdang.ddframe.rdb.sharding.executor.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61)\n    at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.getFutureResults(ExecutorEngine.java:134)\n    at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.execute(ExecutorEngine.java:70)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.execute(PreparedStatementExecutor.java:166)\n    at com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:112)\n    at sun.reflect.GeneratedMethodAccessor35.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:62)\n    at com.sun.proxy.$Proxy35.execute(Unknown Source)\n    at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:59)\n    at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:73)\n    at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:60)\n    at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:267)\n    at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:137)\n    at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:96)\n    at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:77)\n    at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:108)\n    ... 79 more\nCaused by: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n    at com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:472)\n    at com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:451)\n    at com.google.common.util.concurrent.AbstractFuture$TrustedFuture.get(AbstractFuture.java:74)\n    at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine.getFutureResults(ExecutorEngine.java:132)\n    ... 95 more\nCaused by: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n    at com.dangdang.ddframe.rdb.sharding.executor.ExecutorExceptionHandler.handleException(ExecutorExceptionHandler.java:61)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(PreparedStatementExecutor.java:188)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.access$200(PreparedStatementExecutor.java:46)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:170)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$4.execute(PreparedStatementExecutor.java:166)\n    at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine$1.call(ExecutorEngine.java:109)\n    at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\n    at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\n    at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:77)\n    ... 3 more\nCaused by: java.sql.SQLException: Error\n    at com.alibaba.druid.pool.DruidDataSource.handleConnectionException(DruidDataSource.java:1193)\n    at com.alibaba.druid.pool.DruidPooledConnection.handleException(DruidPooledConnection.java:127)\n    at com.alibaba.druid.pool.DruidPooledStatement.checkException(DruidPooledStatement.java:68)\n    at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:495)\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(PreparedStatementExecutor.java:185)\n    ... 10 more\nCaused by: java.lang.NullPointerException\n    at com.alibaba.druid.support.profile.Profiler.release(Profiler.java:58)\n    at com.alibaba.druid.filter.stat.StatFilter.statement_executeErrorAfter(StatFilter.java:501)\n    at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:450)\n    at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)\n    at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:118)\n    at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)\n    ... 11 more\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE support.XmlWebApplicationContext: Publishing event in WebApplicationContext for namespace 'springServlet-servlet': ServletRequestHandledEvent: url=[/dubbo-monitor/services/statistics]; client=[127.0.0.1]; method=[GET]; servlet=[springServlet]; session=[0CD0C26C26FBC7F192F21A645B3F58B2]; user=[admin]; time=[4806ms]; status=[failed: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n### The error may exist in file [D:\\workspace.metadata.plugins\\org.eclipse.wst.server.core\\tmp9\\wtpwebapps\\dubbo-monitor\\WEB-INF\\classes\\mappers\\DubboInvokeMapper.xml]\n### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline\n### The error occurred while setting parameters\n### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time >= ?                                 AND invoke_time <= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ?\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error]\n\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 TRACE support.AnnotationConfigWebApplicationContext: Publishing event in Root WebApplicationContext: ServletRequestHandledEvent: url=[/dubbo-monitor/services/statistics]; client=[127.0.0.1]; method=[GET]; servlet=[springServlet]; session=[0CD0C26C26FBC7F192F21A645B3F58B2]; user=[admin]; time=[4806ms]; status=[failed: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \n### Error querying database.  Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error\n### The error may exist in file [D:\\workspace.metadata.plugins\\org.eclipse.wst.server.core\\tmp9\\wtpwebapps\\dubbo-monitor\\WEB-INF\\classes\\mappers\\DubboInvokeMapper.xml]\n### The error may involve com.handu.open.dubbo.monitor.DubboMonitorService.countDubboInvokeInfo-Inline\n### The error occurred while setting parameters\n### SQL: SELECT             SUM(success) as success,             SUM(failure) as failure,             SUM(elapsed) as elapsed,             MAX(max_elapsed) as maxElapsed,             MIN(max_concurrent) as maxConcurrent         FROM dubbo_invoke         WHERE             1 = 1                                                     AND invoke_time >= ?                                 AND invoke_time <= ?                                 AND service = ?                                 AND method = ?                                                      AND type = ?\n### Cause: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.util.concurrent.ExecutionException: com.dangdang.ddframe.rdb.sharding.exception.ShardingJdbcException: java.sql.SQLException: Error]\n\n[27/10/16 10:57:12:012 CST] http-bio-9091-exec-1 DEBUG context.SecurityContextPersistenceFilter: SecurityContextHolder now cleared, as request processing completed\n[27/10/16 10:57:14:014 CST] DubboServerHandler-172.16.3.47:7070-thread-200 DEBUG transport.DecodeHandler:  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.8.4, current host: 172.16.3.47\n[27/10/16 10:57:14:014 CST] DubboServerHandler-172.16.3.47:7070-thread-200  INFO monitor.DubboMonitorService:  [DUBBO] collect statistics: count://172.16.0.179/com.talk51.modules.courseNew.ImportDataService/checkRedisDate?application=course-consumer&concurrent=0&elapsed=0&failure=0&input=0&interface=com.talk51.modules.courseNew.ImportDataService&max.concurrent=0&max.elapsed=0&max.input=0&max.output=0&method=checkRedisDate&output=0&provider=172.16.0.179:20887&success=0&timestamp=1477536710132, dubbo version: 2.8.4, current host: 172.16.3.47\n[27/10/16 10:57:14:014 CST] DubboServerHandler-172.16.3.47:7070-thread-200 TRACE codec.ExchangeCodec:  [DUBBO] the resulting byte size of encoding is 17, dubbo version: 2.8.4, current host: 172.16.3.47\n[27/10/16 10:57:14:014 CST] DubboMonitorAsyncWriteLogThread  INFO idgen.IdWorker: worker starting. timestamp left shift 22, datacenter id bits 5, worker id bits 5, sequence bits 12, workerid 1\n\r\n\r\n<!---\r\n@huboard:{\"custom_state\":\"archived\"}\r\n-->\r\n", "url": "https://github.com/apache/shardingsphere/issues/166", "user": "yangjinhao123", "labels": ["bug"], "created": "2016-10-27 02:32:55", "closed": "2016-11-01 03:50:37", "commits": {"905b94ac287a92721c38e060dee8a6dbd040a603": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "905b94ac287a92721c38e060dee8a6dbd040a603", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["9360049f77a076613487c5814a37ce1f8eb96921"], "nameRev": "905b94ac287a92721c38e060dee8a6dbd040a603 tags/1.4.0~17", "commitMessage": "fixed #166 concurrency execution error for druid ds pool\n", "commitDateTime": "2016-11-01 11:50:49", "authoredDateTime": "2016-11-01 11:50:49", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/EventPostman.java", "insertions": 84, "deletions": 0, "lines": 84}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/PreparedStatementExecutor.java", "insertions": 34, "deletions": 72, "lines": 106}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/StatementExecutor.java", "insertions": 20, "deletions": 44, "lines": 64}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/executor/PreparedStatementExecutorTest.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/executor/StatementExecutorTest.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EventPostman.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.EventPostman", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PreparedStatementExecutor.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeQuery()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeQueryInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdate()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdateInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.execute()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.execute().4.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map,com.google.common.base.Optional)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 4}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatch()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatchInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.BatchPreparedStatementExecutorWrapper,boolean,java.util.Map)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.postBatchExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.BatchPreparedStatementExecutorWrapper)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.postBatchExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.BatchPreparedStatementExecutorWrapper,com.dangdang.ddframe.rdb.sharding.executor.event.EventExecutionType,com.google.common.base.Optional)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.postExecutionEvents()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.postExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.postExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,com.dangdang.ddframe.rdb.sharding.executor.event.EventExecutionType,com.google.common.base.Optional)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeQuery().1.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdate().2.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatch().5.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "StatementExecutor.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeQuery()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeQueryInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,boolean,java.util.Map)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdate(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdateInternal(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater,com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,boolean,java.util.Map)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.execute(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeInternal(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor,com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,boolean,java.util.Map)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.postExecutionEvents()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.postExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.postExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,com.dangdang.ddframe.rdb.sharding.executor.event.EventExecutionType,com.google.common.base.Optional)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeQuery().1.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdate(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater).6.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.execute(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor).12.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PreparedStatementExecutorTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutorTest.assertExecuteQueryForMultiplePreparedStatementsSuccess()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutorTest.assertExecuteQueryForMultiplePreparedStatementsFailure()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutorTest.assertExecuteUpdateForMultiplePreparedStatementsSuccess()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutorTest.assertExecuteUpdateForMultiplePreparedStatementsFailure()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutorTest.assertExecuteForMultiplePreparedStatementsSuccessWithDML()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutorTest.assertExecuteForMultiplePreparedStatementsFailureWithDML()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutorTest.assertExecuteForMultiplePreparedStatements()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StatementExecutorTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteQueryForMultipleStatementsSuccess()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteQueryForMultipleStatementsFailure()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteUpdateForMultipleStatementsSuccess()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteUpdateForMultipleStatementsFailure()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteForMultipleStatementsSuccessWithDML()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteForMultipleStatementsFailureWithDML()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteForMultipleStatements()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["905b94ac287a92721c38e060dee8a6dbd040a603"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 138, "deletions": 116, "lines": 254, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 77, "UPD": 0, "INS": 32, "MOV": 10, "DEL": 35, "spoonFilesChanged": 3, "spoonMethodsChanged": 33}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatch().5.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.execute()", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeQuery()", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.postBatchExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.BatchPreparedStatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.execute().4.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatch()", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.postExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeQuery().1.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdate().2.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdateInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.postExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,com.dangdang.ddframe.rdb.sharding.executor.event.EventExecutionType,com.google.common.base.Optional)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeQuery().1.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeInternal(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor,com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,boolean,java.util.Map)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.postBatchExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.BatchPreparedStatementExecutorWrapper,com.dangdang.ddframe.rdb.sharding.executor.event.EventExecutionType,com.google.common.base.Optional)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.postExecutionEvents()", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdate()", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.postExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,com.dangdang.ddframe.rdb.sharding.executor.event.EventExecutionType,com.google.common.base.Optional)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeQueryInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeBatchInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.BatchPreparedStatementExecutorWrapper,boolean,java.util.Map)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.execute(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor).12.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdateInternal(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater,com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,boolean,java.util.Map)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdate(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater).6.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map,com.google.common.base.Optional)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeQueryInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,boolean,java.util.Map)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.postExecutionEventsAfterExecution(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.execute(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdate(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.postExecutionEvents()", "com.dangdang.ddframe.rdb.sharding.executor.EventPostman", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeQuery()"]}, {"title": "\u53ef\u80fd\u540c\u4e00\u4e2aconnection\u591a\u7ebf\u7a0b\u5bfc\u81f4\u95ee\u9898", "body": "\u6211\u5728\u4f7f\u7528\u6307\u5b9a\u8868\u5206\u7247\u540e \uff0c\u4f7f\u7528\u975e\u5206\u7247\u5b57\u6bb5\u67e5\u8be2\u591a\u6b21\u7ecf\u5e38\u4f1a\u7ebf\u7a0b\u8fd9\u4e2a\u95ee\u9898 \n\njava.lang.ArrayIndexOutOfBoundsException: 1\n    at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:368) ~[na:1.7.0_71]\n    at java.util.concurrent.CopyOnWriteArrayList.get(CopyOnWriteArrayList.java:377) ~[na:1.7.0_71]\n    at com.alibaba.druid.filter.FilterChainImpl.nextFilter(FilterChainImpl.java:405) ~[druid-1.0.9.jar:1.0.9]\n    at com.alibaba.druid.filter.FilterChainImpl.connection_getAutoCommit(FilterChainImpl.java:282) ~[druid-1.0.9.jar:1.0.9]\n    at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.getAutoCommit(ConnectionProxyImpl.java:212) ~[druid-1.0.9.jar:1.0.9]\n    at com.alibaba.druid.pool.DruidPooledConnection.transactionRecord(DruidPooledConnection.java:689) ~[druid-1.0.9.jar:1.0.9]\n    at com.alibaba.druid.pool.DruidPooledStatement.transactionRecord(DruidPooledStatement.java:131) ~[druid-1.0.9.jar:1.0.9]\n    at com.alibaba.druid.pool.DruidPooledPreparedStatement.executeQuery(DruidPooledPreparedStatement.java:221) ~[druid-1.0.9.jar:1.0.9]\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeQueryInternal(PreparedStatementExecutor.java:86) ~[sharding-jdbc-core-1.3.2.jar:na]\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.access$000(PreparedStatementExecutor.java:46) ~[sharding-jdbc-core-1.3.2.jar:na]\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$1.execute(PreparedStatementExecutor.java:71) ~[sharding-jdbc-core-1.3.2.jar:na]\n    at com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor$1.execute(PreparedStatementExecutor.java:67) ~[sharding-jdbc-core-1.3.2.jar:na]\n    at com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine$1.call(ExecutorEngine.java:109) ~[sharding-jdbc-core-1.3.2.jar:na]\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262) ~[na:1.7.0_71]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_71]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_71]\n    at java.lang.Thread.run(Thread.java:745) [na:1.7.0_71]\n\n\u67e5\u8be2druid\u540e\u53d1\u73b0\u662f druid\u4e2d  FilterChainImpl\u7c7b\u65b9\u6cd5 \n\n```\n@Override\npublic boolean connection_getAutoCommit(ConnectionProxy connection) throws SQLException {\n    if (this.pos < filterSize) {\n        return nextFilter().connection_getAutoCommit(this, connection);\n    }\n\n    return connection.getRawObject().getAutoCommit();\n}\n```\n\n\u5f15\u8d77\u7684 \u4e00\u4e2a \u8d8a\u754c\u9519\u8bef\uff0c\u611f\u89c9\u53ef\u80fd\u662f\u56e0\u4e3a\u591a\u7ebf\u7a0b\u4f7f\u7528\u540c\u4e00\u4e2a\u8fde\u63a5\u5bfc\u81f4\u7684\u591a\u7ebf\u7a0b\u8bbf\u95ee\u5bfc\u81f4\u7684\u95ee\u9898\n\n<!---\n@huboard:{\"custom_state\":\"archived\"}\n-->\n", "url": "https://github.com/apache/shardingsphere/issues/152", "user": "billForgithub", "labels": ["bug"], "created": "2016-10-12 03:59:50", "closed": "2016-10-26 01:07:11", "commits": {"695cf76150f216051a8c1d4eb7b01972cfe0cf50": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "695cf76150f216051a8c1d4eb7b01972cfe0cf50", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["ec657f6c0040584b430664468ca58edb4deffa3d"], "nameRev": "695cf76150f216051a8c1d4eb7b01972cfe0cf50 tags/1.3.3~2", "commitMessage": "fix #152 Make every SQLExecuteUnit to have its own Statement.\n", "commitDateTime": "2016-10-26 09:07:08", "authoredDateTime": "2016-10-26 09:07:08", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatement.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingStatement.java", "insertions": 84, "deletions": 28, "lines": 112}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractStatementAdapter.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/AllJDBCTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatementTableOnlyTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/StatementAdapterTest.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingPreparedStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.clearRouteContext()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ShardingStatement.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.getStatement(java.sql.Connection,java.lang.String)", "TOT": 27, "UPD": 6, "INS": 6, "MOV": 10, "DEL": 5}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.getRoutedStatements()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeQuery(java.lang.String)", "TOT": 9, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.clearRouteContext()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.clearRouteStatements()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeUpdate(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeUpdate(java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeUpdate(java.lang.String,int[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeUpdate(java.lang.String,java.lang.String[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.execute(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.execute(java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.execute(java.lang.String,int[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.execute(java.lang.String,java.lang.String[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractStatementAdapter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.close()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.getRoutedStatements()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.clearRouteStatements()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllJDBCTests.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.AllJDBCTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingPreparedStatementTableOnlyTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatementTableOnlyTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StatementAdapterTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.StatementAdapterTest.assertOverMaxUpdateRow().1.getRoutedStatements()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.StatementAdapterTest.assertOverMaxUpdateRow().1.clearRouteStatements()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["695cf76150f216051a8c1d4eb7b01972cfe0cf50"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 90, "deletions": 33, "lines": 123, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 74, "UPD": 10, "INS": 27, "MOV": 22, "DEL": 15, "spoonFilesChanged": 3, "spoonMethodsChanged": 18}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.execute(java.lang.String,java.lang.String[])", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.getStatement(java.sql.Connection,java.lang.String)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeUpdate(java.lang.String,int)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeUpdate(java.lang.String,int[])", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.clearRouteContext()", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeQuery(java.lang.String)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.clearRouteStatements()", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.execute(java.lang.String,int[])", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.clearRouteStatements()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.close()", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeUpdate(java.lang.String)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.clearRouteContext()", "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.getRoutedStatements()", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.getRoutedStatements()", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.execute(java.lang.String,int)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.execute(java.lang.String)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingStatement.executeUpdate(java.lang.String,java.lang.String[])"]}, {"title": "\u4e0e\u6700\u65b0SQLserver jdbc\u9a71\u52a8\u517c\u5bb9\u95ee\u9898", "body": " public String getDatabaseProductName() throws SQLServerException {\n        this.checkClosed();\n        return \"Microsoft SQL Server\";\n    }\n\n\u65b0\u9a71\u52a8\u7684PN\u662f\u8fd9\u4e2a\uff0c\u5bfc\u81f4\u4e0d\u80fd\u8f6c\u6362shardingDataSource\n\n<!---\n@huboard:{\"custom_state\":\"archived\"}\n-->\n", "url": "https://github.com/apache/shardingsphere/issues/150", "user": "boying52", "labels": ["bug"], "created": "2016-09-30 04:49:55", "closed": "2016-10-26 02:59:31", "commits": {"7c20b3a414dd37efc39de1bd6b2b3c2147a77165": {"commitGHEventType": "closed", "commitUser": "hanahmily"}, "586d70c9e8c343c4aaf8c2f565d6cebbdc17fcae": {"commitGHEventType": "referenced", "commitUser": "hanahmily"}}, "ttf": 25.00027777777778, "commitsDetails": [{"commitHash": "7c20b3a414dd37efc39de1bd6b2b3c2147a77165", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "586d70c9e8c343c4aaf8c2f565d6cebbdc17fcae", "commitGHEventType": "referenced", "commitUser": "hanahmily", "commitParents": ["695cf76150f216051a8c1d4eb7b01972cfe0cf50"], "nameRev": "586d70c9e8c343c4aaf8c2f565d6cebbdc17fcae tags/1.3.3~1", "commitMessage": "fix #150 adjust jdbc driver's product name.\n", "commitDateTime": "2016-10-26 11:02:27", "authoredDateTime": "2016-10-26 10:59:31", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/constants/DatabaseType.java", "insertions": 21, "deletions": 5, "lines": 26}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/constants/DatabaseTypeTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DatabaseType.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.constants.DatabaseType.valueFrom(java.lang.String)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.constants.DatabaseType", "TOT": 14, "UPD": 0, "INS": 8, "MOV": 6, "DEL": 0}]}, {"spoonFilePath": "DatabaseTypeTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.constants.DatabaseTypeTest.assertValueFromSuccess()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["586d70c9e8c343c4aaf8c2f565d6cebbdc17fcae"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21.0, "deletions": 5.0, "lines": 26.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 19.0, "UPD": 0.0, "INS": 10.0, "MOV": 8.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/constants"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.constants.DatabaseType", "com.dangdang.ddframe.rdb.sharding.constants.DatabaseType.valueFrom(java.lang.String)"]}, {"title": "INSERT IGNORE INTO\u65f6\u5982\u679c\u6570\u636e\u91cd\u4e86\u5ffd\u7565\u65f6\u8fd4\u56de\u7684\u6210-1\u4e86\uff0c\u5e94\u8be5\u8fd4\u56de0", "body": "\u53d1\u751f\u7248\u672c\uff1a1.3.2\n\u4e4b\u524d\u76841.3.1\u8fd8\u662f\u6b63\u786e\u76840\n\n<!---\n@huboard:{\"custom_state\":\"archived\"}\n-->\n", "url": "https://github.com/apache/shardingsphere/issues/149", "user": "yangl", "labels": ["bug"], "created": "2016-09-28 10:08:17", "closed": "2016-09-29 01:25:01", "commits": {"5f7d663c1db72a313951950c56bdcb31c98301f0": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5f7d663c1db72a313951950c56bdcb31c98301f0", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["861a5c27a0ce5f0d6ac0a16925459405242c6c52"], "nameRev": "5f7d663c1db72a313951950c56bdcb31c98301f0 tags/1.3.3~6", "commitMessage": "fix #149 statement getUpdateCount return error\n", "commitDateTime": "2016-09-29 09:25:30", "authoredDateTime": "2016-09-29 09:25:30", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractStatementAdapter.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/StatementAdapterTest.java", "insertions": 92, "deletions": 1, "lines": 93}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractStatementAdapter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.getUpdateCount()", "TOT": 10, "UPD": 2, "INS": 5, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "StatementAdapterTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.StatementAdapterTest.assertGetUpdateCountNoData()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.StatementAdapterTest.assertOverMaxUpdateRow()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5f7d663c1db72a313951950c56bdcb31c98301f0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 4, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 2, "INS": 5, "MOV": 0, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.getUpdateCount()"]}, {"title": "\u591a\u7ebf\u7a0b\u6267\u884c\u5668\u53c2\u6570\u8bbe\u7f6e\u65e0\u6548", "body": "\u591a\u7ebf\u7a0b\u6267\u884c\u5668\u7684\u53c2\u6570\u8bbe\u7f6e\u6ca1\u6709\u8fbe\u5230\u5e94\u6709\u7684\u6548\u679c\n", "url": "https://github.com/apache/shardingsphere/issues/141", "user": "hanahmily", "labels": ["bug"], "created": "2016-09-01 08:27:17", "closed": "2016-09-01 08:40:01", "commits": {"c4077e04da6fbb15b62a9cab61ab1f505e5fbf40": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c4077e04da6fbb15b62a9cab61ab1f505e5fbf40", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["577ae0bbbfba6c8d333d6cd8f0234870ecd7e3ed"], "nameRev": "c4077e04da6fbb15b62a9cab61ab1f505e5fbf40 tags/1.3.2~3", "commitMessage": "fix #141 ExecutorEngine parameter error\n", "commitDateTime": "2016-09-01 16:40:04", "authoredDateTime": "2016-09-01 16:40:04", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/config/ShardingPropertiesConstant.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/ExecutorEngine.java", "insertions": 17, "deletions": 2, "lines": 19}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingDataSource.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/db/AbstractShardingDataBasesOnlyDBUnitTest.java", "insertions": 17, "deletions": 3, "lines": 20}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/dynamic/pstatement/DynamicShardingBothForPStatementWithDMLTest.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/dynamic/pstatement/DynamicShardingBothForPStatementWithSelectTest.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/dynamic/statement/DynamicShardingBothForStatementWithAggregateTest.java", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/dynamic/statement/DynamicShardingBothForStatementWithDMLTest.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/dynamic/statement/DynamicShardingBothForStatementWithSelectTest.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/statically/pstatement/StaticShardingBothForPStatementWithAggregateTest.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/statically/pstatement/StaticShardingBothForPStatementWithDMLTest.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/statically/pstatement/StaticShardingBothForPStatementWithGroupByTest.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/statically/pstatement/StaticShardingBothForPStatementWithSelectTest.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/statically/statement/StaticShardingBothForStatementWithAggregateTest.java", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/statically/statement/StaticShardingBothForStatementWithDMLTest.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/statically/statement/StaticShardingBothForStatementWithSelectTest.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/hint/AbstractShardingDataBasesOnlyHintDBUnitTest.java", "insertions": 19, "deletions": 5, "lines": 24}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/masterslave/AbstractShardingMasterSlaveDBUnitTest.java", "insertions": 18, "deletions": 3, "lines": 21}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/nullable/AbstractShardingNullableDBUnitTest.java", "insertions": 19, "deletions": 4, "lines": 23}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/tbl/AbstractShardingTablesOnlyDBUnitTest.java", "insertions": 18, "deletions": 3, "lines": 21}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/executor/PreparedStatementExecutorTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/executor/StatementExecutorTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["c4077e04da6fbb15b62a9cab61ab1f505e5fbf40"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 30, "deletions": 5, "lines": 35, "gitFilesChange": 3}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/config", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor"]}, {"title": "\u8bfb\u5199\u5206\u79bb\u60c5\u51b5\u4e0boffset\u503c\u4e0d\u6b63\u5e38", "body": "com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor\npublic boolean visit(com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock.Limit x) \u65b9\u6cd5\u4e2d\u3002\n\n\u5047\u8bbe\u67e5\u8be2\u4e3aselect \\* from user limit 10 offset 10   \uff0csql \u89e3\u6790\u5b8c\u7ed3\u679c\u4e3a  select \\* from user limit 20,0\n\u67e5\u8be2\u7ed3\u679c\u4e3a0\u6761\u8bb0\u5f55\n\n\u5177\u4f53\u89c1\u4e0b\u9762\u4ee3\u7801\u7684\u6ce8\u91ca\uff0c \u8bf7\u95ee\u8fd9\u6837\u5199\u662f\u4f55\u7528\u610f\uff1f\n\n```\n\npublic boolean visit(final MySqlSelectQueryBlock.Limit x) {\n        print(\"LIMIT \");\n        int offset = 0;\n        if (null != x.getOffset()) {\n            if (x.getOffset() instanceof SQLNumericLiteralExpr) {\n                offset = ((SQLNumericLiteralExpr) x.getOffset()).getNumber().intValue();\n                print(\"0, \");\n            } else {\n                offset = ((Number) getParameters().get(((SQLVariantRefExpr) x.getOffset()).getIndex())).intValue();\n                getParameters().set(((SQLVariantRefExpr) x.getOffset()).getIndex(), 0); // \u8be5\u884c\u5c06offset \u8bbe\u7f6e\u4e3a0\n                print(\"?, \");\n            }\n        }\n        int rowCount;\n        if (x.getRowCount() instanceof SQLNumericLiteralExpr) {\n            rowCount = ((SQLNumericLiteralExpr) x.getRowCount()).getNumber().intValue();\n            print(rowCount + offset);\n        } else {\n            rowCount = ((Number) getParameters().get(((SQLVariantRefExpr) x.getRowCount()).getIndex())).intValue();\n            getParameters().set(((SQLVariantRefExpr) x.getRowCount()).getIndex(), rowCount + offset);  //\u8be5\u884c\u5c06rowcount \u8bbe\u7f6e\u4e3a 10 + 10 \u537320\n            print(\"?\");\n        }\n        getParseContext().getParsedResult().getMergeContext().setLimit(new Limit(offset, rowCount));\n        return false;\n    }\n```\n", "url": "https://github.com/apache/shardingsphere/issues/137", "user": "jasonzhouxf", "labels": ["bug"], "created": "2016-08-24 06:17:33", "closed": "2016-08-25 02:03:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "\u67d4\u6027\u4e8b\u52a1\u4e2dShardingPreparedStatement\u591a\u6b21\u8c03\u7528executeUpdate()\u95ee\u9898", "body": "\u57281.3.1\u7248\u672c\u4e2d\uff0c\u56e0\u67d4\u6027\u4e8b\u52a1\u8981autoCommit\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6279\u91cf\u63d2\u5165\u65f6\uff0c\u53ea\u80fd\u4f7f\u7528\u7c7b\u4f3c\u5982\u4e0b\u7684\u65b9\u5f0f\u63d0\u4ea4\uff1a\n\n```\ntransaction.begin(conn);\nfor(User u : userList){\n  pstm.setString(1, u.getName());\n  pstm.setInt(2, u.getCode());\n  hintManager.addDatabaseShardingValue(\"test\", \"user_id\", u.getUserId); \n\n  pstm.executeUpdate();\n  pstm.clearParameters();\n}\ntransaction.end();\n```\n\n\u5728ShardingPreparedStatement#executeUpdate()\u4e2d\n\n```\n@Override\n    public int executeUpdate() throws SQLException {\n        hasExecuted = true;\n        return new PreparedStatementExecutor(getShardingConnection().getShardingContext().getExecutorEngine(), getRoutedPreparedStatements()).executeUpdate();\n    }\n```\n\n\u5176\u4e2d `getRoutedPreparedStatements()`\u4f1a\u56e0\u4e3a`hasExecuted = true;`\u53cd\u590d\u4f7f\u7528\u76f8\u540c\u7684cachedRoutedPreparedStatements\uff0c\u5bfc\u81f4\u63d2\u5165\u7684\u503c\u90fd\u76f8\u540c\u4e14\u5728\u540c\u4e00\u5206\u7247\u4e2d\n\n<!---\n@huboard:{\"custom_state\":\"archived\"}\n-->\n", "url": "https://github.com/apache/shardingsphere/issues/134", "user": "Beyondeclipse", "labels": ["bug"], "created": "2016-08-16 09:52:56", "closed": "2016-10-20 06:23:48", "commits": {}, "ttf": 64.00027777777778, "commitsDetails": []}, {"title": "\u4e00\u4e2a\u67e5\u8be2\u65f6\u7684\u5c0fbug\uff0c\u6ca1\u6df1\u5165\u5206\u6790\u662f\u5426\u4f1a\u5f71\u54cd\u7ed3\u679c", "body": "Bug\u4fee\u590d\u5efa\u8bae\uff1a\ncom.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter\u4e2d\u7684\u91cd\u5199\u7684getUpdateCount\u65b9\u6cd5\n    @Override\n    public final int getUpdateCount() throws SQLException {\n        int result = 0;\n        for (Statement each : getRoutedStatements()) {\n            result += each.getUpdateCount();\n        }\n        return result;\n    }\n\u5e94\u8be5\u4fee\u6539\u4e3a\n    @Override\n    public final int getUpdateCount() throws SQLException {\n        int result = -1;\n        for (Statement each : getRoutedStatements()) {\n            if(each.getUpdateCount() == -1){\n                continue;\n            }\n            result += each.getUpdateCount();\n        }\n        return result;\n    }\n\nBug\u8bf4\u660e\uff1a\n\u6d4b\u8bd5\u65f6\uff0c\u53d1\u73b0\u5f53\u591a\u8868\u67e5\u8be2\u65f6\uff0c\u6bcf\u4e2a\u8868\u4e2d\u90fd\u6ca1\u6709\u7ed3\u679c\u65f6\n1\u3001each.getUpdateCount()\u4f1a\u8fd4\u56de-1\u3002\u82e5\u591a\u4e2a\u67e5\u8be2statement\u5747\u6ca1\u6709\u7ed3\u679c\u65f6\uff0cresult += each.getUpdateCount()\u8fd4\u56de-4\uff082\u5e93\uff0c\u8868\u6c34\u5e73\u52062\uff09\uff0c\u6b64\u65f6\uff0c\u4f1a\u8c03\u7528org.apache.ibatis.logging.jdbc.ResultSetLogger\u7684invoke(Object proxy, Method method, Object[] params)\u65b9\u6cd5\uff0c\u5c06resultSet\u8bbe\u7f6e\u4e3aclose\n\n2\u3001\u5728org.apache.ibatis.executor.resultset.DefaultResultSetHandler\u4e2d\u4ee3\u7801\u903b\u8f91\u4e2d\uff0c\u82e5\u83b7\u53d6\u5230\u7684getUpdateCount\u4e0d\u662f-1\uff0c\u4f1a\u7ee7\u7eed\u8fd4\u56deresultSet\uff0c\u7136\u540e\u7ee7\u7eed\u8c03\u7528getMetaData\nif (stmt.getConnection().getMetaData().supportsMultipleResultSets()) {\n        // Crazy Standard JDBC way of determining if there are more results\n        if (!((!stmt.getMoreResults()) && (stmt.getUpdateCount() == -1))) {\n          ResultSet rs = stmt.getResultSet();\n          return rs != null ? new ResultSetWrapper(rs, configuration) : null;\n        }\n}\n\n3\u3001\u6b64\u65f6org.apache.ibatis.logging.jdbc.ResultSetLogger\u7684invoke(Object proxy, Method method, Object[] params)\u65b9\u6cd5,proxy=resultSet{close=true}\uff0cmethod=getMetaData\uff0c\u5bfc\u81f4\u5f02\u5e38\uff0c\u5f02\u5e38\u4fe1\u606f\uff1ajava.sql.SQLException: Operation not allowed after ResultSet closed\n\norg.apache.ibatis.logging.jdbc.ResultSetLogger\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\npublic Object invoke(Object proxy, Method method, Object[] params) throws Throwable {\n    try {\n      if (Object.class.equals(method.getDeclaringClass())) {\n        return method.invoke(this, params);\n      }  \n      Object o = method.invoke(rs, params);\n      if (\"next\".equals(method.getName())) {\n        if (((Boolean) o)) {\n          rows++;\n          if (isTraceEnabled()) {\n            ResultSetMetaData rsmd = rs.getMetaData();\n            final int columnCount = rsmd.getColumnCount();\n            if (first) {\n              first = false;\n              printColumnHeaders(rsmd, columnCount);\n            }\n            printColumnValues(columnCount);\n          }\n        } else {\n          debug(\"     Total: \" + rows, false);\n        }\n      }\n      clearColumnInfo();\n      return o;\n    } catch (Throwable t) {\n      throw ExceptionUtil.unwrapThrowable(t);\n    }\n  }\n", "url": "https://github.com/apache/shardingsphere/issues/124", "user": "yackl", "labels": ["bug"], "created": "2016-07-18 16:03:06", "closed": "2016-07-25 08:51:21", "commits": {"577ae0bbbfba6c8d333d6cd8f0234870ecd7e3ed": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "577ae0bbbfba6c8d333d6cd8f0234870ecd7e3ed", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["e5425835326f59a1fecdffeed0850e4656ead743"], "nameRev": "577ae0bbbfba6c8d333d6cd8f0234870ecd7e3ed tags/1.3.2~4", "commitMessage": "fix #124 com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.getUpdateCount error\n", "commitDateTime": "2016-07-25 16:52:40", "authoredDateTime": "2016-07-25 16:52:40", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractStatementAdapter.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/StatementAdapterTest.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractStatementAdapter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.getUpdateCount()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "StatementAdapterTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.StatementAdapterTest.assertGetUpdateCountNoData()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.adapter.StatementAdapterTest.assertGetUpdateCountSelect()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["577ae0bbbfba6c8d333d6cd8f0234870ecd7e3ed"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.getUpdateCount()"]}, {"title": "\u67d4\u6027\u4e8b\u52a1\u4e2dautocommit\u95ee\u9898\u53cafail\u91cd\u8bd5\u95ee\u9898", "body": "\u6211\u67e5\u770b\u5230\u4ee3\u7801\n\n```\nAbstractSoftTransaction#beginInternal\u4e2d\npreviousAutoCommit = connection.getAutoCommit();\nconnection.setAutoCommit(true);\n```\n\n\u8fd9\u91cc\u7684\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u63d0\u4ea4\u6a21\u5f0f\u662f\u4ec0\u4e48\u610f\u601d?\n\u6211\u67e5\u770b\u8fc7SoftTransactionTest#bedSoftTransactionTest\n\u8fd9\u91cc\u7684conn\u5bf9\u8c61\u4e3a\u5b9e\u9645\u6267\u884c\u4e1a\u52a1\u8bed\u53e5\u7684\u5bf9\u8c61,\u8fd9\u91cc\u53cd\u800c\u8bbe\u7f6e\u4e3a\u81ea\u52a8\u63d0\u4ea4\u6a21\u5f0f,\u4e0d\u5c31\u662f\u8ba9\u4e1a\u52a1\u4ee3\u7801\u81ea\u52a8\u63d0\u4ea4\u4e86.\u90a3\u4e1a\u52a1\u4e2d\u7684\u4e8b\u52a1\u56de\u6eda\u5982\u4f55\u5904\u7406?\n\n\u540c\u65f6,\u5728best\u4e8b\u52a1\u5b9e\u73b0\u4e2d,\u4ee5\u4e0b\u4ee3\u7801:\n\n```\n                        conn = bedSoftTransaction.getConnection().getConnection(event.getDataSource(), SQLStatementType.SELECT);\n                        if (!isValidConnection(conn)) {\n                            conn = bedSoftTransaction.getConnection();\n                            isNewConnection = true;\n                        }\n```\n\n\u8fd9\u91cc\u672c\u610f\u662f\u65b0\u5f00\u8fde\u63a5, \u5982\u4f55\u4f53\u73b0\u51fa\u6765? \u7531\u4e8e ShardingConnection#connectionMap\u5bf9\u8c61\u7684\u5b58\u5728,\u8fd9\u91cc\u5c06conn\u56de\u5230shardconn\u5e76\u4e0d\u4f1a\u5bfc\u81f4\u8fde\u63a5\u88ab\u91cd\u5efa\n\u6309\u7167sql\u6807\u51c6\u6765\u8bf4,\u5982\u679c\u539f\u8fde\u63a5\u672c\u8eab\u4e0d\u53ef\u7528(\u5982\u7f51\u7edc\u4e2d\u65ad),\u5219\u5e94\u8be5\u76f4\u63a5\u4e2d\u65ad\u4e8b\u52a1,\u800c\u4e0d\u662f\u91cd\u8bd5.\u56e0\u4e3a\u539f\u6765\u7684\u8fde\u63a5\u4e2d\u6267\u884c\u7684\u4ee3\u7801\u672c\u8eab\u5c31\u88ab\u7834\u574f\u4e86.\n\n<!---\n@huboard:{\"custom_state\":\"archived\"}\n-->\n", "url": "https://github.com/apache/shardingsphere/issues/122", "user": "flym", "labels": ["bug"], "created": "2016-07-17 06:53:54", "closed": "2016-10-20 04:00:13", "commits": {"ec657f6c0040584b430664468ca58edb4deffa3d": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 94.00027777777778, "commitsDetails": [{"commitHash": "ec657f6c0040584b430664468ca58edb4deffa3d", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["1a2028747ee02784390159159e035b5a1f6a00f8"], "nameRev": "ec657f6c0040584b430664468ca58edb4deffa3d tags/1.3.3~3", "commitMessage": "fix #122 bed get new connection when old one is broken\n", "commitDateTime": "2016-10-20 12:01:08", "authoredDateTime": "2016-10-20 11:56:48", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingConnection.java", "insertions": 22, "deletions": 7, "lines": 29}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingConnectionTest.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/com/dangdang/ddframe/rdb/transaction/soft/bed/sync/BestEffortsDeliveryListener.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingConnection.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getRealDataSourceName(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.releaseBrokenConnection(java.sql.Connection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.closeConnection(java.sql.Connection)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnectionTest.releaseBrokenConnectionTest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BestEffortsDeliveryListener.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.bed.sync.BestEffortsDeliveryListener.listen(com.dangdang.ddframe.rdb.sharding.executor.event.DMLExecutionEvent)", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ec657f6c0040584b430664468ca58edb4deffa3d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 25, "deletions": 9, "lines": 34, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 11, "UPD": 1, "INS": 5, "MOV": 3, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc", "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/com/dangdang/ddframe/rdb/transaction"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getRealDataSourceName(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "com.dangdang.ddframe.rdb.transaction.soft.bed.sync.BestEffortsDeliveryListener.listen(com.dangdang.ddframe.rdb.sharding.executor.event.DMLExecutionEvent)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.closeConnection(java.sql.Connection)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.releaseBrokenConnection(java.sql.Connection)"]}, {"title": "\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5185\u8bfb\u5199\u5206\u79bb\u95ee\u9898", "body": "\u540c\u4e00\u4e2a\u65b9\u6cd5\u5185\u540c\u65f6\u6709\u8bfb\u5199\u64cd\u4f5c\u65f6 \u5982\u679c\u8bfb\u64cd\u4f5c\u5728\u524d \u65b9\u6cd5\u5185\u7684\u6240\u6709\u8bfb\u5199\u64cd\u4f5c\u90fd\u4f1a\u8d70\u4ece\u5e93 \u5982\u679c\u5199\u64cd\u4f5c\u5728\u524d \u4e4b\u540e\u7684\u6240\u6709\u8bfb\u5199\u64cd\u4f5c\u90fd\u8d70\u4e3b\u5e93 \n\n<!---\n@huboard:{\"custom_state\":\"archived\"}\n-->\n", "url": "https://github.com/apache/shardingsphere/issues/118", "user": "hzlzz", "labels": ["bug"], "created": "2016-07-02 02:19:10", "closed": "2016-10-18 06:40:48", "commits": {"1a2028747ee02784390159159e035b5a1f6a00f8": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 108.00027777777778, "commitsDetails": [{"commitHash": "1a2028747ee02784390159159e035b5a1f6a00f8", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["4b71cae1c57b135c40f65eab9255ea1081385055"], "nameRev": "1a2028747ee02784390159159e035b5a1f6a00f8 tags/1.3.3~4", "commitMessage": "fix #118 firstly execute DQL statement then execute DML statement, DML statement is executing in slave db\n", "commitDateTime": "2016-10-18 14:41:46", "authoredDateTime": "2016-10-18 14:41:46", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/MasterSlaveDataSource.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingConnection.java", "insertions": 48, "deletions": 3, "lines": 51}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/fixture/TestDataSource.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/AllJDBCTests.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingConnectionTest.java", "insertions": 106, "deletions": 0, "lines": 106}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MasterSlaveDataSource.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.MasterSlaveDataSource.isDML(com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.MasterSlaveDataSource.getDataSource(com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ShardingConnection.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getConnectionInternal(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "TOT": 11, "UPD": 1, "INS": 5, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getRealDataSourceName(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.fetchCachedConnectionBySqlStatementType(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getMasterDataSourceName(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getSlaveDataSourceName(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestDataSource.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.fixture.TestDataSource.getConnection()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.fixture.TestDataSource", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AllJDBCTests.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.AllJDBCTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingConnectionTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnectionTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1a2028747ee02784390159159e035b5a1f6a00f8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 54, "deletions": 4, "lines": 58, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 19, "UPD": 1, "INS": 12, "MOV": 6, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.jdbc.MasterSlaveDataSource.getDataSource(com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getRealDataSourceName(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getMasterDataSourceName(java.lang.String)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getConnectionInternal(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.fetchCachedConnectionBySqlStatementType(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "com.dangdang.ddframe.rdb.sharding.jdbc.ShardingConnection.getSlaveDataSourceName(java.lang.String)", "com.dangdang.ddframe.rdb.sharding.jdbc.MasterSlaveDataSource.isDML(com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)"]}, {"title": "PreparedStatement executeBatch  Java heap space", "body": "```\nprivate void initDBConnection(){        \n    try {\n        conn.setAutoCommit(false);          \n        StringBuffer sb = new StringBuffer();\n        sb.append(\" insert into t_mv_owner_x(videoid,kugouid,userid,deleteTime,deleteStatus,selfdirect,\");\n        sb.append(\" relation)\");                \n        sb.append(\" values(?,?,?,?,?,?,?)\");\n        pres = conn.prepareStatement(sb.toString());            \n    } catch (SQLException e1) {\n        log.error(\"init 3006 DB exception:\",e1);\n    }\n}\n\n\nprivate void batchInsert(List<MvOwner> Owners) throws SQLException{\n    for (MvOwner vo : Owners) {\n        pres.setLong(1, vo.getVideoid());\n        pres.setLong(2, vo.getKugouid());\n        pres.setLong(3, vo.getUserid());\n        pres.setInt(4, vo.getDeleteTime());\n        pres.setInt(5, vo.getDeleteStatus());\n        pres.setInt(6, vo.getSelfdirect());\n        pres.setInt(7, vo.getSelfdirect());\n        pres.addBatch();\n    }\n    pres.executeBatch();\n    conn.commit();\n    pres.clearBatch();\n    Owners.clear();\n}\n\n\n\n    TableRule ownerRule = TableRule.builder(\"t_mv_owner_x\").actualTables(Arrays.asList(\"t_mv_owner_0\", \"t_mv_owner_1\")).dataSourceRule(dataSourceRule).build();\n    ShardingRule shardingRule = ShardingRule.builder().dataSourceRule(dataSourceRule).tableRules(Arrays.asList(ownerRule))\n            .bindingTableRules(Collections.singletonList(new BindingTableRule(Arrays.asList(ownerRule))))\n            .tableShardingStrategy(new TableShardingStrategy(\"videoid\", new SingleKeyModuloTableShardingAlgorithm())).build();\n    return new ShardingDataSource(shardingRule);\n```\n", "url": "https://github.com/apache/shardingsphere/issues/114", "user": "super11892235", "labels": ["bug"], "created": "2016-06-28 06:58:14", "closed": "2016-07-06 09:59:37", "commits": {"1f7ed616df278375e1b2ef40ec816ac6dcb4bc0e": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "1f7ed616df278375e1b2ef40ec816ac6dcb4bc0e", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["fe49c45d74f4c21ca2f5bc6ec2882684176b38c4"], "nameRev": "1f7ed616df278375e1b2ef40ec816ac6dcb4bc0e tags/1.3.2~20", "commitMessage": "fix #36 cannot reuse ShardingPreparedStatement\nfix #114 ShardingPreparedStatement batch execution parse sql\n", "commitDateTime": "2016-07-06 18:00:06", "authoredDateTime": "2016-07-06 18:00:06", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/PreparedStatementExecutor.java", "insertions": 75, "deletions": 0, "lines": 75}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/wrapper/BatchPreparedStatementExecutorWrapper.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatement.java", "insertions": 60, "deletions": 63, "lines": 123}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingStatement.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/router/Condition.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/router/ConditionContext.java", "insertions": 21, "deletions": 5, "lines": 26}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/ParseContext.java", "insertions": 50, "deletions": 13, "lines": 63}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/basic/mysql/MySQLEvalVisitor.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/PreparedSQLRouter.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/SQLRouteEngine.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/AbstractDBUnitTest.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/common/statement/AbstractShardingBothForStatementWithDMLTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/statically/statement/StaticShardingBothForStatementWithDMLTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/masterslave/statement/ShardingMasterSlaveForStatementWithDMLTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatementTest.java", "insertions": 49, "deletions": 11, "lines": 60}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/AbstractBaseParseTest.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/AllParserTests.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/jaxb/Condition.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/result/SQLParsedResultTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/basic/mysql/MySQLEvalVisitorTest.java", "insertions": 82, "deletions": 0, "lines": 82}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/one_param/delete.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/one_param/insert.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/one_param/select.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/one_param/update.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/two_params/select.xml", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "TransactionLogStorage\u7c7b\u4e2d\u7684processData\u65b9\u6cd5\u6ce8\u91ca\u597d\u50cf\u4e0d\u6b63\u786e", "body": "1.3.1\u4ee3\u7801\u4e2d\u7684\u6ce8\u91ca\uff1a\n /**\n     \\* \u589e\u52a0\u4e8b\u52a1\u65e5\u5fd7\u5f02\u6b65\u91cd\u8bd5\u6b21\u6570.\n     *\n     \\* @param connection \u4e1a\u52a1\u6570\u636e\u5e93\u8fde\u63a5\n     \\* @param transactionLog \u4e8b\u52a1\u65e5\u5fd7\n     \\* @param maxDeliveryTryTimes \u4e8b\u52a1\u9001\u8fbe\u7684\u6700\u5927\u5c1d\u8bd5\u6b21\u6570\n     */\n    boolean processData(Connection connection, TransactionLog transactionLog, int maxDeliveryTryTimes);\n", "url": "https://github.com/apache/shardingsphere/issues/113", "user": "Qunzer", "labels": ["bug"], "created": "2016-06-27 09:51:34", "closed": "2016-07-11 15:39:29", "commits": {"77a87215551f86bbccf2e2add722227c7db2d1f5": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "77a87215551f86bbccf2e2add722227c7db2d1f5", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["4b0d9a0a0541c106d47534dca30bf0826161f1b7"], "nameRev": "77a87215551f86bbccf2e2add722227c7db2d1f5 tags/1.3.2~15", "commitMessage": "fix #113\n", "commitDateTime": "2016-07-11 23:39:19", "authoredDateTime": "2016-07-11 23:39:19", "commitGitStats": [{"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/com/dangdang/ddframe/rdb/transaction/soft/storage/TransactionLogStorage.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TransactionLogStorage.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["77a87215551f86bbccf2e2add722227c7db2d1f5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/com/dangdang/ddframe/rdb/transaction"]}, {"title": "PreparedStatement\u9884\u7f16\u8bd1\u4e00\u6b21\uff0c\u591a\u6b21set\u503c\u591a\u6b21executeUpdate\u6570\u636e\u76f8\u540c", "body": "DataSource dataSource = getShardingDataSource();\n        String sql = \"insert ignore into t_user(login_code,user_name,age,telephone,address) values(?,?,?,?,?)\";\n        try (\n            Connection conn = dataSource.getConnection();\n            PreparedStatement **ps = conn.prepareStatement(sql);**){\n            List<User> userList = getUserList(20);\n            for(User user:userList){\n                ps.setString(1, user.getLoginCode());\n                ps.setString(2, user.getUserName());\n                ps.setInt(3, user.getAge());\n                ps.setString(4, user.getTelephone());\n                ps.setString(5, user.getAddress());\n                **ps.executeUpdate();**\n            }\n            ps.close();\n            conn.close();\n        }\n", "url": "https://github.com/apache/shardingsphere/issues/106", "user": "xuchanggen", "labels": ["bug"], "created": "2016-06-18 12:18:08", "closed": "2016-06-24 00:58:35", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "\u8fd0\u884c sharding-jdbc-example-mybatis \u4ee3\u7801\u793a\u4f8b\u51fa\u9519", "body": "\u8fd0\u884c sharding-jdbc-example-mybatis \u4ee3\u7801\u793a\u4f8b\u51fa\u9519\n\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderTableRule' defined in class path resource [META-INF/shardingContext.xml]: Unsatisfied dependency expressed through constructor argument with index 1 of type [boolean]: Could not convert constructor argument value of type [java.util.ArrayList] to required type [boolean]: Failed to convert value of type 'java.util.ArrayList' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Cannot convert value of type [java.util.ArrayList] to required type [boolean]: PropertyEditor [org.springframework.beans.propertyeditors.CustomBooleanEditor] returned inappropriate value of type [java.util.ArrayList]\n", "url": "https://github.com/apache/shardingsphere/issues/90", "user": "empireghost", "labels": ["bug"], "created": "2016-06-01 08:18:07", "closed": "2016-06-02 02:21:36", "commits": {"735744b455701c23dd67ffda3f0cf250dd0e1042": {"commitGHEventType": "closed", "commitUser": "haocao"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "735744b455701c23dd67ffda3f0cf250dd0e1042", "commitGHEventType": "closed", "commitUser": "haocao", "commitParents": ["fb2e7c5439b8331535e0ede5915672268be256e1"], "nameRev": "735744b455701c23dd67ffda3f0cf250dd0e1042 tags/1.3.1~8", "commitMessage": "fix #90\n", "commitDateTime": "2016-06-02 10:21:30", "authoredDateTime": "2016-06-02 10:21:30", "commitGitStats": [{"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding/example/config/spring/masterslave/SpringNamespaceWithMasterSlaveMain.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding/example/config/spring/masterslave/algorithm/SingleKeyModuloTableShardingAlgorithm.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding/example/config/spring/masterslave/repository/ConfigRepository.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding/example/config/spring/masterslave/repository/ConfigRepositoryImpl.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding/example/config/spring/masterslave/repository/OrderRepository.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding/example/config/spring/masterslave/repository/OrderRepositoryImpl.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding/example/config/spring/masterslave/service/ConfigService.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding/example/config/spring/masterslave/service/ConfigServiceImpl.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding/example/config/spring/masterslave/service/OrderService.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding/example/config/spring/masterslave/service/OrderServiceImpl.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/resources/META-INF/applicationContextWithMasterSlave.xml", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/resources/all_schema.sql", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/resources/logback.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-config-spring/src/main/resources/META-INF/applicationContextWithAssignedDataSource.xml", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-config-spring/src/main/resources/META-INF/applicationContextWithDefaultDataSource.xml", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-jpa/src/main/resources/META-INF/shardingContext.xml", "insertions": 15, "deletions": 50, "lines": 65}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-mybatis/src/main/resources/META-INF/shardingContext.xml", "insertions": 15, "deletions": 51, "lines": 66}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpringNamespaceWithMasterSlaveMain.java", "spoonMethods": []}, {"spoonFilePath": "SingleKeyModuloTableShardingAlgorithm.java", "spoonMethods": []}, {"spoonFilePath": "ConfigRepository.java", "spoonMethods": []}, {"spoonFilePath": "ConfigRepositoryImpl.java", "spoonMethods": []}, {"spoonFilePath": "OrderRepository.java", "spoonMethods": []}, {"spoonFilePath": "OrderRepositoryImpl.java", "spoonMethods": []}, {"spoonFilePath": "ConfigService.java", "spoonMethods": []}, {"spoonFilePath": "ConfigServiceImpl.java", "spoonMethods": []}, {"spoonFilePath": "OrderService.java", "spoonMethods": []}, {"spoonFilePath": "OrderServiceImpl.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["735744b455701c23dd67ffda3f0cf250dd0e1042"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 11}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/java/com/dangdang/ddframe/rdb/sharding", "sharding-jdbc-example/{sharding-jdbc-example-spring-masterslave => sharding-jdbc-example-config-spring-masterslave}/src/main/resources/all_schema.sql"]}, {"title": "\u8bfb\u5199\u5206\u79bb\u548c\u5206\u7247\u7684hint\u4e00\u8d77\u4f7f\u7528\u5bfc\u81f4\u51b2\u7a81\u95ee\u9898", "body": "\u7531\u4e8e\u4f7f\u7528\u4e00\u4e2aHintManager\uff0c\u5bfc\u81f4\u8bfb\u5199\u5206\u79bb\u548c\u5206\u7247\u4e00\u8d77\u4f7f\u7528\u65f6\u76f8\u4e92\u5f71\u54cd\uff0c\u76ee\u524d\u5df2\u901a\u8fc7\u6807\u8bb0\u7684\u65b9\u5f0f\u9694\u79bb\uff0cAPI\u672a\u505a\u6539\u52a8\u3002\n", "url": "https://github.com/apache/shardingsphere/issues/89", "user": "terrymanu", "labels": ["bug"], "created": "2016-06-01 08:07:31", "closed": "2016-06-01 09:15:48", "commits": {"4b13df7959062d81f5074b3ad8eeeb34813ea541": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4b13df7959062d81f5074b3ad8eeeb34813ea541", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["bf433b15920d3f46c822360e0fd3493327660ddd"], "nameRev": "4b13df7959062d81f5074b3ad8eeeb34813ea541 tags/1.3.1~14", "commitMessage": "fix #89\n", "commitDateTime": "2016-06-01 17:15:43", "authoredDateTime": "2016-06-01 17:15:43", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/api/HintManager.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/hint/HintManagerHolder.java", "insertions": 16, "deletions": 5, "lines": 21}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/MasterSlaveDataSource.java", "insertions": 2, "deletions": 10, "lines": 12}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/single/SingleTableRouter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/masterslave/AbstractShardingMasterSlaveDBUnitTest.java", "insertions": 22, "deletions": 14, "lines": 36}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/masterslave/pstatement/ShardingMasterSlaveForPStatementWithDMLTest.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/masterslave/pstatement/ShardingMasterSlaveForPStatementWithSelectTest.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/hint/HintManagerHolderTest.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/MasterSlaveDataSourceTest.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/masterslave/expect/select/SelectEqualsWithSingleMasterTable_0.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-doc/content/post/master_slave.md", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HintManager.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.api.HintManager", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.api.HintManager.addDatabaseShardingValue(java.lang.String,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.Condition$BinaryOperator,java.lang.Comparable[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.api.HintManager.addTableShardingValue(java.lang.String,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.Condition$BinaryOperator,java.lang.Comparable[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HintManagerHolder.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.isUseHint()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.getDatabaseShardingValue(com.dangdang.ddframe.rdb.sharding.hint.ShardingKey)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.getTableShardingValue(com.dangdang.ddframe.rdb.sharding.hint.ShardingKey)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.isMasterRouteOnly()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.setMasterRouteOnly()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.isUseShardingHint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveDataSource.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.MasterSlaveDataSource.getDataSource(com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.MasterSlaveDataSource", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SingleTableRouter.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter.routeDataSources()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter.routeTables(java.util.Collection)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractShardingMasterSlaveDBUnitTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.masterslave.AbstractShardingMasterSlaveDBUnitTest.reset()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "ShardingMasterSlaveForPStatementWithDMLTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.masterslave.pstatement.ShardingMasterSlaveForPStatementWithDMLTest.assertInsertWithHint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingMasterSlaveForPStatementWithSelectTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.masterslave.pstatement.ShardingMasterSlaveForPStatementWithSelectTest.assertSelectForHint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.masterslave.pstatement.ShardingMasterSlaveForPStatementWithSelectTest.assertSelectForHintAndForceMaster()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HintManagerHolderTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolderTest.assertsUseShardingHintWithoutAddShardingColumns()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolderTest.assertsUseShardingHintWithoutSetHintManager()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolderTest.assertsUseShardingHintWithAddShardingColumns()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolderTest.assertSetMasterRouteOnlyWithHint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolderTest.assertSetMasterRouteOnlyWithoutHint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolderTest.assertGetDatabaseShardingValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolderTest.assertGetTableShardingValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolderTest.assertIsMasterRouteOnlyWithoutSet()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolderTest.assertIsMasterRouteOnly()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MasterSlaveDataSourceTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.jdbc.MasterSlaveDataSourceTest.reset()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4b13df7959062d81f5074b3ad8eeeb34813ea541"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 25, "deletions": 17, "lines": 42, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 18, "UPD": 6, "INS": 6, "MOV": 3, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/api", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/hint"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter.routeDataSources()", "com.dangdang.ddframe.rdb.sharding.jdbc.MasterSlaveDataSource.getDataSource(com.dangdang.ddframe.rdb.sharding.parser.result.router.SQLStatementType)", "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.isUseShardingHint()", "com.dangdang.ddframe.rdb.sharding.api.HintManager.addTableShardingValue(java.lang.String,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.Condition$BinaryOperator,java.lang.Comparable[])", "com.dangdang.ddframe.rdb.sharding.api.HintManager.addDatabaseShardingValue(java.lang.String,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.router.Condition$BinaryOperator,java.lang.Comparable[])", "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.isMasterRouteOnly()", "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.setMasterRouteOnly()", "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.isUseHint()", "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.getDatabaseShardingValue(com.dangdang.ddframe.rdb.sharding.hint.ShardingKey)", "com.dangdang.ddframe.rdb.sharding.hint.HintManagerHolder.getTableShardingValue(com.dangdang.ddframe.rdb.sharding.hint.ShardingKey)", "com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter.routeTables(java.util.Collection)", "com.dangdang.ddframe.rdb.sharding.jdbc.MasterSlaveDataSource", "com.dangdang.ddframe.rdb.sharding.api.HintManager"]}, {"title": "\u5173\u8054\u8868\u67e5\u8be2\u4f7f\u7528or\u67e5\u8be2\u6761\u4ef6\u89e3\u6790\u7ed3\u679c\u5f02\u5e38", "body": "", "url": "https://github.com/apache/shardingsphere/issues/81", "user": "hanahmily", "labels": ["bug"], "created": "2016-05-24 12:51:11", "closed": "2016-05-24 12:53:47", "commits": {"502a0f0a1fb6c2a49f38982102c9f7136e394e6c": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "502a0f0a1fb6c2a49f38982102c9f7136e394e6c", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["bf13298de8ed86aa86cbd83919a312c4ffbb1cb5"], "nameRev": "502a0f0a1fb6c2a49f38982102c9f7136e394e6c tags/1.3.0~16", "commitMessage": "fix #81\n", "commitDateTime": "2016-05-24 20:53:39", "authoredDateTime": "2016-05-24 20:53:39", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/or/OrVisitor.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/or/select_or.xml", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OrVisitor.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.or.OrVisitor", "TOT": 11, "UPD": 2, "INS": 2, "MOV": 5, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["502a0f0a1fb6c2a49f38982102c9f7136e394e6c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 2, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 2, "INS": 2, "MOV": 5, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parser.visitor.or.OrVisitor"]}, {"title": "MemoryTransactionLogStorage\u91cd\u8bd5\u6b21\u6570\u66f4\u65b0\u5e76\u53d1\u95ee\u9898", "body": "\u4ee3\u7801\ncom.dangdang.ddframe.rdb.transaction.soft.storage.impl.MemoryTransactionLogStorage\n\n\u65b9\u6cd5\u4e2d\uff1a\n    @Override\n    public void increaseAsyncDeliveryTryTimes(final String id) {\n        if (DATA.containsKey(id)) {\n            TransactionLog transactionLog = DATA.get(id);\n            transactionLog.setAsyncDeliveryTryTimes(transactionLog.getAsyncDeliveryTryTimes() + 1);\n            DATA.put(id, transactionLog);\n        }\n    }\n\ngetAsyncDeliveryTryTimes\u662f\u5426\u5e94\u8be5\u5728TransactionLog \u7684asyncDeliveryTryTimes \u52a0\u4e2avolatile\u5173\u952e\u5b57\uff0c\u73b0\u5728\u8fd9\u79cd\u573a\u5408\u4e0b\uff0c\u5e76\u53d1\u65f6\uff0c\u662f\u5426\u4f1a\u6709\u95ee\u9898\u3002\n", "url": "https://github.com/apache/shardingsphere/issues/75", "user": "jiang2015", "labels": ["bug"], "created": "2016-05-19 02:27:18", "closed": "2016-05-20 11:44:32", "commits": {"4695545adb0c60f33a1d1991817f1bd5525fe991": {"commitGHEventType": "closed", "commitUser": "terrymanu"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "4695545adb0c60f33a1d1991817f1bd5525fe991", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["a366df17cffebc7ae40ad0e55e11cd6005897edc"], "nameRev": "4695545adb0c60f33a1d1991817f1bd5525fe991 tags/1.2.1~3", "commitMessage": "fix #75\n", "commitDateTime": "2016-05-20 19:44:27", "authoredDateTime": "2016-05-20 19:44:27", "commitGitStats": [{"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-doc/content/post/roadmap.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/com/dangdang/ddframe/rdb/transaction/soft/storage/impl/MemoryTransactionLogStorage.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MemoryTransactionLogStorage.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.storage.impl.MemoryTransactionLogStorage.increaseAsyncDeliveryTryTimes(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4695545adb0c60f33a1d1991817f1bd5525fe991"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/com/dangdang/ddframe/rdb/transaction"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.transaction.soft.storage.impl.MemoryTransactionLogStorage.increaseAsyncDeliveryTryTimes(java.lang.String)"]}, {"title": "\u5bf9\u4e8e\u53ea\u8def\u7531\u5230\u4e00\u4e2a\u5206\u533a\u5bfc\u81f4LIMIT\u9519\u8bef\u7684\u95ee\u9898", "body": "\u5982\u679c\u8def\u7531\u5230\u4e00\u4e2a\u5206\u533a\uff0c\u4e14LIMIT\u7684offset\u4e0d\u4e3a0\u4f7f\uff0cSharding-JDBC\u8ba1\u7b97\u504f\u79fb\u91cf\u9519\u8bef\u3002\u539f\u56e0\u662f\u5bf9\u4e8e\u8def\u7531\u5355\u5206\u7247\u6ca1\u6709\u8ba1\u7b97LIMIT\n", "url": "https://github.com/apache/shardingsphere/issues/71", "user": "hanahmily", "labels": ["bug"], "created": "2016-05-13 13:09:09", "closed": "2016-05-13 13:20:27", "commits": {"f63eaa0c979be6d9bae3150dd411f14f48d042e4": {"commitGHEventType": "closed", "commitUser": "hanahmily"}, "228a2b6285e8cb8a3213474db3fe70649b005ff1": {"commitGHEventType": "referenced", "commitUser": "hanahmily"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f63eaa0c979be6d9bae3150dd411f14f48d042e4", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["e5d0dc5f934a8486904ac9600d8c7675c2548ba8"], "nameRev": "f63eaa0c979be6d9bae3150dd411f14f48d042e4 tags/1.2.1~6^2~3", "commitMessage": "single result set limit error\n\nfix #71\n", "commitDateTime": "2016-05-13 21:19:03", "authoredDateTime": "2016-05-13 19:35:31", "commitGitStats": [{"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "228a2b6285e8cb8a3213474db3fe70649b005ff1", "commitGHEventType": "referenced", "commitUser": "hanahmily", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f63eaa0c979be6d9bae3150dd411f14f48d042e4"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "\u914d\u7f6e\u5185\u5b58\u6027\u67d4\u6027\u4e8b\u52a1\u5931\u6548", "body": "", "url": "https://github.com/apache/shardingsphere/issues/69", "user": "haocao", "labels": ["bug"], "created": "2016-05-11 10:12:30", "closed": "2016-05-11 10:21:45", "commits": {"7d9546ffb0898ec616479244d4cc0fb2d4f79748": {"commitGHEventType": "closed", "commitUser": "haocao"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7d9546ffb0898ec616479244d4cc0fb2d4f79748", "commitGHEventType": "closed", "commitUser": "haocao", "commitParents": ["01b9e1ccf8582d187d4989d7d7185c277d19dd32"], "nameRev": "7d9546ffb0898ec616479244d4cc0fb2d4f79748 tags/1.2.1~6^2~6", "commitMessage": "fix #69\n", "commitDateTime": "2016-05-11 18:13:44", "authoredDateTime": "2016-05-11 18:13:44", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/executor/StatementExecutorTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/com/dangdang/ddframe/rdb/transaction/soft/api/SoftTransactionManager.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/com/dangdang/ddframe/rdb/transaction/soft/api/config/SoftTransactionConfiguration.java", "insertions": 26, "deletions": 1, "lines": 27}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/com/dangdang/ddframe/rdb/transaction/soft/bed/async/AbstractBestEffortsDeliveryJobFactory.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/com/dangdang/ddframe/rdb/transaction/soft/bed/sync/BestEffortsDeliveryListener.java", "insertions": 7, "deletions": 4, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StatementExecutorTest.java", "spoonMethods": []}, {"spoonFilePath": "SoftTransactionManager.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.getCurrentTransactionConfiguration()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.getCurrentTransaction()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SoftTransactionConfiguration.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.api.config.SoftTransactionConfiguration", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.api.config.SoftTransactionConfiguration.buildTransactionLogDataSource()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractBestEffortsDeliveryJobFactory.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.bed.async.AbstractBestEffortsDeliveryJobFactory.init()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "BestEffortsDeliveryListener.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.bed.sync.BestEffortsDeliveryListener.listen(com.dangdang.ddframe.rdb.sharding.executor.event.DMLExecutionEvent)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.bed.sync.BestEffortsDeliveryListener.isProcessContinuously()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7d9546ffb0898ec616479244d4cc0fb2d4f79748"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 36, "deletions": 10, "lines": 46, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 13, "UPD": 1, "INS": 4, "MOV": 2, "DEL": 6, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/com/dangdang/ddframe/rdb/transaction"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.transaction.soft.api.config.SoftTransactionConfiguration.buildTransactionLogDataSource()", "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.getCurrentTransactionConfiguration()", "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.getCurrentTransaction()", "com.dangdang.ddframe.rdb.transaction.soft.bed.sync.BestEffortsDeliveryListener.isProcessContinuously()", "com.dangdang.ddframe.rdb.transaction.soft.bed.async.AbstractBestEffortsDeliveryJobFactory.init()", "com.dangdang.ddframe.rdb.transaction.soft.bed.sync.BestEffortsDeliveryListener.listen(com.dangdang.ddframe.rdb.sharding.executor.event.DMLExecutionEvent)", "com.dangdang.ddframe.rdb.transaction.soft.api.config.SoftTransactionConfiguration"]}, {"title": "\u5206\u7247\u8def\u7531\u5230\u591a\u8868\u65f6\u67d4\u6027\u4e8b\u52a1\u65e5\u5fd7\u65e0\u6cd5\u5220\u9664", "body": "", "url": "https://github.com/apache/shardingsphere/issues/67", "user": "haocao", "labels": ["bug"], "created": "2016-05-11 01:33:29", "closed": "2016-05-11 03:14:09", "commits": {"01b9e1ccf8582d187d4989d7d7185c277d19dd32": {"commitGHEventType": "closed", "commitUser": "haocao"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "01b9e1ccf8582d187d4989d7d7185c277d19dd32", "commitGHEventType": "closed", "commitUser": "haocao", "commitParents": ["3e6d9f263a9d617c7228bafe2cd141e42d9c64aa"], "nameRev": "01b9e1ccf8582d187d4989d7d7185c277d19dd32 tags/1.2.1~9", "commitMessage": "fix #67\n", "commitDateTime": "2016-05-11 11:14:27", "authoredDateTime": "2016-05-11 11:14:27", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/ExecutorDataMap.java", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/PreparedStatementExecutor.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/StatementExecutor.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/executor/StatementExecutorTest.java", "insertions": 68, "deletions": 64, "lines": 132}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-config-spring/src/main/resources/logback.xml", "insertions": 15, "deletions": 10, "lines": 25}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-config-yaml/src/main/resources/logback.xml", "insertions": 15, "deletions": 10, "lines": 25}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-jdbc-transaction/src/main/resources/logback.xml", "insertions": 15, "deletions": 16, "lines": 31}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-jdbc/src/main/resources/logback.xml", "insertions": 15, "deletions": 16, "lines": 31}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-jpa/src/main/resources/logback.xml", "insertions": 15, "deletions": 16, "lines": 31}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-mybatis/src/main/resources/logback.xml", "insertions": 15, "deletions": 23, "lines": 38}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/com/dangdang/ddframe/rdb/transaction/soft/api/AbstractSoftTransaction.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/com/dangdang/ddframe/rdb/transaction/soft/api/SoftTransactionManager.java", "insertions": 19, "deletions": 12, "lines": 31}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ExecutorDataMap.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.ExecutorDataMap", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PreparedStatementExecutor.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdate()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdateInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map,com.google.common.base.Optional)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.execute()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map,com.google.common.base.Optional)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdate().2.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.execute().4.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StatementExecutor.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdate(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdateInternal(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater,com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,boolean,java.util.Map,com.google.common.base.Optional)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.execute(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeInternal(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor,com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,boolean,java.util.Map,com.google.common.base.Optional)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdate(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater).6.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.execute(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor).12.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StatementExecutorTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteQueryForSingleStatement()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteQueryForMultipleStatements()", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteUpdateForSingleStatementSuccess()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteUpdateForMultipleStatementsSuccess()", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteUpdateForSingleStatementFailure()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteUpdateForMultipleStatementsFailure()", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteUpdateWithAutoGeneratedKeys()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteUpdateWithColumnIndexes()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteUpdateWithColumnNames()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteForSingleStatementSuccessWithDML()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteForMultipleStatementsSuccessWithDML()", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteForSingleStatementFailureWithDML()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteForMultipleStatementsFailureWithDML()", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteForSingleStatementWithDQL()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteForMultipleStatements()", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 4}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteWithAutoGeneratedKeys()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteWithColumnIndexes()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.assertExecuteWithColumnNames()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.createStatementExecutorWrapperForDQL(java.sql.Statement,java.lang.String)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest.createStatementExecutorWrapperForDML(java.sql.Statement,java.lang.String)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutorTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractSoftTransaction.java", "spoonMethods": []}, {"spoonFilePath": "SoftTransactionManager.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager", "TOT": 6, "UPD": 4, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.getTransaction(com.dangdang.ddframe.rdb.transaction.soft.constants.SoftTransactionType)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.closeCurrentTransactionManager()", "TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.getCurrentTransactionConfiguration()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.getCurrentTransaction()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["01b9e1ccf8582d187d4989d7d7185c277d19dd32"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 106, "deletions": 25, "lines": 131, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 47, "UPD": 12, "INS": 28, "MOV": 4, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 18}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/com/dangdang/ddframe/rdb/transaction", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdate()", "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map,com.google.common.base.Optional)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.execute().4.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdateInternal(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper,boolean,java.util.Map,com.google.common.base.Optional)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdateInternal(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater,com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,boolean,java.util.Map,com.google.common.base.Optional)", "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.getCurrentTransactionConfiguration()", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdate(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater).6.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.executeUpdate().2.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.PreparedStatementExecutorWrapper)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeInternal(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor,com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper,boolean,java.util.Map,com.google.common.base.Optional)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.execute(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor).12.execute(com.dangdang.ddframe.rdb.sharding.executor.wrapper.StatementExecutorWrapper)", "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.getTransaction(com.dangdang.ddframe.rdb.transaction.soft.constants.SoftTransactionType)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.execute(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Executor)", "com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor.executeUpdate(com.dangdang.ddframe.rdb.sharding.executor.StatementExecutor$Updater)", "com.dangdang.ddframe.rdb.sharding.executor.PreparedStatementExecutor.execute()", "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.closeCurrentTransactionManager()", "com.dangdang.ddframe.rdb.sharding.executor.ExecutorDataMap", "com.dangdang.ddframe.rdb.transaction.soft.api.SoftTransactionManager.getCurrentTransaction()"]}, {"title": "ORDER BY\u4e0eGROUP BY\u884d\u751f\u5217\u672a\u6dfb\u52a0\u8868\u540d\u6216\u8868\u522b\u540d", "body": "1. order by \u751f\u6210\u7684\u8865\u5145\u5217\u4e0d\u5e26\u6240\u6709\u8868\u7684\u522b\u540d\n   bug\u73b0\u8c61\n\n``` sql\nselect ... order_id AS sharding_gen_1 from order a order by a.order_id\n```\n\n\u5e94\u8be5\u4e3a\n\n``` sql\nselect ... a.order_id AS sharding_gen_1 from order a order by a.order_id\n```\n1. group by \u751f\u6210\u8865\u5145\u5217\u65f6\u6ca1\u6709\u5224\u65ad\u67e5\u8be2\u6295\u5c04\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e86\u8be5\u5217\n   bug\u73b0\u8c61\n\n``` sql\nselect a.order_id, order_id AS sharding_gen_1 from order a group by a.order_id\n```\n\n\u5e94\u8be5\u4e3a\n\n``` sql\nselect a.order_id  from order a order by a.order_id\n```\n", "url": "https://github.com/apache/shardingsphere/issues/63", "user": "hanahmily", "labels": ["bug"], "created": "2016-05-06 09:37:30", "closed": "2016-05-06 09:44:09", "commits": {"180bb29a4dddfeb95e31f96271a8b1387b67fd24": {"commitGHEventType": "closed", "commitUser": "hanahmily"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "180bb29a4dddfeb95e31f96271a8b1387b67fd24", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["dfb3c5c2d701b9e6c74469bfe1a2f5c9c7e9d8af"], "nameRev": "180bb29a4dddfeb95e31f96271a8b1387b67fd24 tags/1.2.1~17", "commitMessage": "fix #63 derive column bug\n", "commitDateTime": "2016-05-06 17:44:02", "authoredDateTime": "2016-05-06 17:44:02", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/merger/AbstractSortableColumn.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/merger/GroupByColumn.java", "insertions": 8, "deletions": 12, "lines": 20}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/merger/MergeContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/merger/OrderByColumn.java", "insertions": 15, "deletions": 21, "lines": 36}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/ParseContext.java", "insertions": 39, "deletions": 17, "lines": 56}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/basic/mysql/MySQLSelectVisitor.java", "insertions": 22, "deletions": 15, "lines": 37}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/row/GroupByRowTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/AbstractBaseParseTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/jaxb/GroupByColumn.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/jaxb/OrderByColumn.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/result/SQLParsedResultTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/select_aggregate.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/select_group_by.xml", "insertions": 17, "deletions": 5, "lines": 22}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/select_order_by.xml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/select_sub_query.xml", "insertions": 10, "deletions": 2, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractSortableColumn.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.result.merger.AbstractSortableColumn", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GroupByColumn.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.jaxb.GroupByColumn", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MergeContext.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.result.merger.MergeContext.groupByKeysEqualsOrderByKeys().1.apply(com.dangdang.ddframe.rdb.sharding.parser.result.merger.GroupByColumn)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "OrderByColumn.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.jaxb.OrderByColumn", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ParseContext.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.addGroupByColumns(java.lang.String,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.merger.OrderByColumn.OrderByType)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.generateDerivedColumnAlias()", "TOT": 5, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.addOrderByColumn(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.merger.OrderByColumn.OrderByType)", "TOT": 16, "UPD": 1, "INS": 0, "MOV": 11, "DEL": 4}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.mergeCurrentConditionContext()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.addOrderByColumn(com.google.common.base.Optional,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.merger.OrderByColumn.OrderByType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.getAlias(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.addGroupByColumns(com.google.common.base.Optional,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.merger.OrderByColumn.OrderByType)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MySQLSelectVisitor.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor.endVisit(com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock)", "TOT": 23, "UPD": 4, "INS": 1, "MOV": 17, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor.visit(com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlSelectGroupByExpr)", "TOT": 9, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor.appendSortableColumn(java.lang.StringBuilder,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor.visit(com.alibaba.druid.sql.ast.SQLOrderBy)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GroupByRowTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.row.GroupByRowTest.testToString()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractBaseParseTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.AbstractBaseParseTest.getDataParameter(com.dangdang.ddframe.rdb.sharding.parser.jaxb.Assert).4.apply(com.dangdang.ddframe.rdb.sharding.parser.jaxb.GroupByColumn)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.AbstractBaseParseTest.getDataParameter(com.dangdang.ddframe.rdb.sharding.parser.jaxb.Assert).3.apply(com.dangdang.ddframe.rdb.sharding.parser.jaxb.OrderByColumn)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SQLParsedResultTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.result.SQLParsedResultTest.assertToString()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.parser.result.SQLParsedResultTest.generateMergeContext(com.dangdang.ddframe.rdb.sharding.parser.result.merger.MergeContext)", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["180bb29a4dddfeb95e31f96271a8b1387b67fd24"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 127, "deletions": 66, "lines": 193, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 81, "UPD": 10, "INS": 22, "MOV": 40, "DEL": 9, "spoonFilesChanged": 6, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.addGroupByColumns(com.google.common.base.Optional,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.merger.OrderByColumn.OrderByType)", "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.getAlias(java.lang.String)", "com.dangdang.ddframe.rdb.sharding.parser.jaxb.GroupByColumn", "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.addOrderByColumn(com.google.common.base.Optional,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.merger.OrderByColumn.OrderByType)", "com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor.visit(com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlSelectGroupByExpr)", "com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor.appendSortableColumn(java.lang.StringBuilder,java.util.List)", "com.dangdang.ddframe.rdb.sharding.parser.jaxb.OrderByColumn", "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.generateDerivedColumnAlias()", "com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor.endVisit(com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock)", "com.dangdang.ddframe.rdb.sharding.parser.visitor.basic.mysql.MySQLSelectVisitor.visit(com.alibaba.druid.sql.ast.SQLOrderBy)", "com.dangdang.ddframe.rdb.sharding.parser.result.merger.AbstractSortableColumn", "com.dangdang.ddframe.rdb.sharding.parser.result.merger.MergeContext.groupByKeysEqualsOrderByKeys().1.apply(com.dangdang.ddframe.rdb.sharding.parser.result.merger.GroupByColumn)", "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.addGroupByColumns(java.lang.String,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.merger.OrderByColumn.OrderByType)", "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.addOrderByColumn(java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.merger.OrderByColumn.OrderByType)", "com.dangdang.ddframe.rdb.sharding.parser.visitor.ParseContext.mergeCurrentConditionContext()"]}, {"title": "\u5411\u542b\u6709text\u5b57\u6bb5\u7c7b\u578b\u7684\u5206\u8868\u4e2d\u63d2\u5165\u6570\u636e\u65f6\u5931\u8d25", "body": " # **MyBatis+MySQL\uff0c\u5411\u542b\u6709text\u5b57\u6bb5\u7c7b\u578b\u7684\u5206\u8868\u4e2d\u63d2\u5165\u6570\u636e\u6570\u636e\u65f6\u5931\u8d25\uff0c\u5f02\u5e38\u4fe1\u606f\u5982\u4e0b\uff1a**\nCaused by: java.sql.SQLException: Invalid argument value: java.io.NotSerializableException\nat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:998)\nat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:937)\nat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:926)\nat com.mysql.jdbc.SQLError.createSQLException(SQLError.java:872)\nat com.mysql.jdbc.PreparedStatement.setSerializableObject(PreparedStatement.java:3887)\nat com.mysql.jdbc.PreparedStatement.setObject(PreparedStatement.java:3603)\nat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setObject(FilterChainImpl.java:2923)\nat com.alibaba.druid.filter.FilterAdapter.preparedStatement_setObject(FilterAdapter.java:1298)\nat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setObject(FilterChainImpl.java:2920)\nat com.alibaba.druid.filter.FilterAdapter.preparedStatement_setObject(FilterAdapter.java:1298)\nat com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setObject(FilterChainImpl.java:2920)\nat com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setObject(PreparedStatementProxyImpl.java:411)\nat com.alibaba.druid.pool.DruidPooledPreparedStatement.setObject(DruidPooledPreparedStatement.java:476)\nat com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.setParameters(ShardingPreparedStatement.java:188)\nat com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.routeSQL(ShardingPreparedStatement.java:163)\nat com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.routeIfNeed(ShardingPreparedStatement.java:151)\nat com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.getRoutedPreparedStatements(ShardingPreparedStatement.java:138)\nat com.dangdang.ddframe.rdb.sharding.jdbc.ShardingPreparedStatement.execute(ShardingPreparedStatement.java:107)\n\nCaused by: java.io.NotSerializableException: java.io.StringReader\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\nat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\nat com.mysql.jdbc.PreparedStatement.setSerializableObject(PreparedStatement.java:3876)\n\n<!---\n@huboard:{\"custom_state\":\"archived\"}\n-->\n", "url": "https://github.com/apache/shardingsphere/issues/59", "user": "dzxiang", "labels": ["bug"], "created": "2016-05-06 01:01:29", "closed": "2016-10-18 02:31:07", "commits": {"6b58890d27eccd1e71dccbb7ac1326465f8bfea0": {"commitGHEventType": "closed", "commitUser": "hanahmily"}, "4b71cae1c57b135c40f65eab9255ea1081385055": {"commitGHEventType": "referenced", "commitUser": "hanahmily"}}, "ttf": 165.00027777777777, "commitsDetails": [{"commitHash": "6b58890d27eccd1e71dccbb7ac1326465f8bfea0", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4b71cae1c57b135c40f65eab9255ea1081385055", "commitGHEventType": "referenced", "commitUser": "hanahmily", "commitParents": ["5f7d663c1db72a313951950c56bdcb31c98301f0"], "nameRev": "4b71cae1c57b135c40f65eab9255ea1081385055 tags/1.3.3~5", "commitMessage": "fix #59 can't set mysql \"text\" column\n", "commitDateTime": "2016-10-18 10:39:48", "authoredDateTime": "2016-10-18 10:32:06", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/MergeUnit.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatement.java", "insertions": 9, "deletions": 16, "lines": 25}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractPreparedStatementAdapter.java", "insertions": 47, "deletions": 52, "lines": 99}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/util/JdbcMethodInvocation.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/util/ParameterList.java", "insertions": 122, "deletions": 0, "lines": 122}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/resultset/memory/AbstractMemoryResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/SQLParserFactory.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/merger/Limit.java", "insertions": 36, "deletions": 5, "lines": 41}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/router/ConditionContext.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/router/SQLBuilder.java", "insertions": 97, "deletions": 50, "lines": 147}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/SQLVisitor.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/basic/mysql/AbstractMySQLVisitor.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/basic/mysql/MySQLSelectVisitor.java", "insertions": 10, "deletions": 13, "lines": 23}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/PreparedSQLRouter.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/SQLExecutionUnit.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/SQLRouteEngine.java", "insertions": 33, "deletions": 66, "lines": 99}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/binding/BindingRoutingTableFactor.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/mixed/CartesianDataSource.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/mixed/CartesianTableReference.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/single/SingleRoutingDataSource.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/single/SingleRoutingTableFactor.java", "insertions": 20, "deletions": 6, "lines": 26}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/single/SingleTableRouter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/AllJDBCTests.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractPreparedStatementAdapterTest.java", "insertions": 137, "deletions": 0, "lines": 137}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/PreparedStatementAdapterTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/util/ParameterListTest.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/pipeline/reducer/IteratorResultSetTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/jaxb/Limit.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/jaxb/OptionalAdapter.java", "insertions": 0, "deletions": 42, "lines": 42}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/result/SQLParsedResultTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/one_param/select_limit.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/select_aggregate.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/select_group_by.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/select_limit.xml", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/select_order_by.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/select_sub_query.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-mybatis/src/main/resources/META-INF/mybatis/mappers/OrderMapper.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-example/sharding-jdbc-example-mybatis/src/main/resources/META-INF/shardingContext.xml", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["4b71cae1c57b135c40f65eab9255ea1081385055"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 436.0, "deletions": 252.0, "lines": 688.0, "gitFilesChange": 22}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger"]}, {"title": "SQL\u89e3\u6790\u6a21\u5757\uff0c\u5e76\u672a\u89e3\u6790o.id=i.id\u7684\u573a\u666f", "body": "", "url": "https://github.com/apache/shardingsphere/issues/54", "user": "terrymanu", "labels": ["bug"], "created": "2016-04-29 09:40:09", "closed": "2016-05-03 03:38:30", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "yaml\u6587\u4ef6\u8bfb\u53d6\u4e4b\u540e\u672a\u5173\u95ed", "body": "", "url": "https://github.com/apache/shardingsphere/issues/48", "user": "terrymanu", "labels": ["bug"], "created": "2016-04-06 08:54:30", "closed": "2016-04-06 08:56:27", "commits": {"b34852cfcfaac47adea0300220e8b52e8c6b8fc1": {"commitGHEventType": "closed", "commitUser": "terrymanu"}, "0e82de49367d32e06117f5cb7a5acf96874293fb": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b34852cfcfaac47adea0300220e8b52e8c6b8fc1", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["4b9b8c8d301c9f1a62c42c1c0c399358b0dcc159"], "nameRev": "b34852cfcfaac47adea0300220e8b52e8c6b8fc1 tags/1.2.0~31", "commitMessage": "fix #48\n", "commitDateTime": "2016-04-06 16:56:29", "authoredDateTime": "2016-04-06 16:56:29", "commitGitStats": [{"filePath": "sharding-jdbc-config-parent/sharding-jdbc-config-yaml/src/main/java/com/dangdang/ddframe/rdb/sharding/config/yaml/api/YamlShardingDataSource.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "YamlShardingDataSource.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.yaml.api.YamlShardingDataSource.unmarshal(java.io.File)", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0e82de49367d32e06117f5cb7a5acf96874293fb", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["33e833a4345b7b4a9e483c7833dac21c98e19d51", "f7528d29b4337abbc4d307d09722cd4bf7e990cb"], "nameRev": "0e82de49367d32e06117f5cb7a5acf96874293fb tags/3.1.0.M1~200^2~8", "commitMessage": "Merge pull request #48 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-11-12 11:31:05", "authoredDateTime": "2018-11-12 11:31:05", "commitGitStats": [{"filePath": "sharding-core/src/main/antlr4/imports/BaseRule.g4", "insertions": 49, "deletions": 1, "lines": 50}, {"filePath": "sharding-core/src/main/antlr4/imports/Keyword.g4", "insertions": 159, "deletions": 139, "lines": 298}, {"filePath": "sharding-core/src/main/antlr4/imports/MySQLDCLStatement.g4", "insertions": 18, "deletions": 9, "lines": 27}, {"filePath": "sharding-core/src/main/antlr4/imports/MySQLKeyword.g4", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-core/src/main/antlr4/imports/PostgreSQLBase.g4", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-core/src/main/antlr4/imports/PostgreSQLDCLStatement.g4", "insertions": 188, "deletions": 0, "lines": 188}, {"filePath": "sharding-core/src/main/antlr4/imports/PostgreSQLKeyword.g4", "insertions": 168, "deletions": 2, "lines": 170}, {"filePath": "sharding-core/src/main/antlr4/imports/SQLServerDCLStatement.g4", "insertions": 124, "deletions": 4, "lines": 128}, {"filePath": "sharding-core/src/main/antlr4/imports/SQLServerKeyword.g4", "insertions": 80, "deletions": 0, "lines": 80}, {"filePath": "sharding-core/src/main/antlr4/imports/Symbol.g4", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/src/main/antlr4/io/shardingsphere/core/parsing/antlr/autogen/MySQLStatement.g4", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/src/main/antlr4/io/shardingsphere/core/parsing/antlr/autogen/PostgreSQLStatement.g4", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "sharding-core/src/main/antlr4/io/shardingsphere/core/parsing/antlr/autogen/SQLServerStatement.g4", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/AddColumnExtractHandler.java", "insertions": 15, "deletions": 10, "lines": 25}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/AddPrimaryKeyExtractHandler.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/ColumnDefinitionExtractHandler.java", "insertions": 14, "deletions": 9, "lines": 23}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/CreatePrimaryKeyExtractHandler.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/IndexNameExtractHandler.java", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/IndexesNameExtractHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/ModifyColumnExtractHandler.java", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/RenameColumnExtractHandler.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/RenameIndexExtractHandler.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/TableNameExtractHandler.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/mysql/MySQLChangeColumnExtractHandler.java", "insertions": 18, "deletions": 14, "lines": 32}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/oracle/OracleDropPrimaryKeyExtractHandler.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/oracle/OracleModifyColumnExtractHandler.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/handler/dialect/sqlserver/SQLServerAddPrimaryKeyExtractHandler.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/phrase/ColumnDefinitionPhraseExtractor.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/phrase/PhraseExtractor.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/extractor/statement/util/ExtractorUtils.java", "insertions": 6, "deletions": 36, "lines": 42}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/antlr/sql/ddl/AlterTableStatement.java", "insertions": 5, "deletions": 11, "lines": 16}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/spi/NewInstanceServiceLoader.java", "insertions": 5, "deletions": 22, "lines": 27}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/spi/executor/SPISQLExecutionHook.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/spi/parsing/SPIParsingHook.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/spi/root/SPIRootInvokeHook.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/spi/transaction/xa/SPIDataSourceMapConverter.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/test/resources/yaml/integrate/sharding_ms/configWithoutDataSourceWithoutProps.yaml", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/shardingjdbc/spring/cases/WithNamespaceLogicIndexTest.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/service/ConfigurationService.java", "insertions": 11, "deletions": 20, "lines": 31}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/service/DataSourceService.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/config/service/ConfigurationServiceTest.java", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "sharding-transaction/sharding-transaction-api/src/main/java/io/shardingsphere/transaction/manager/xa/XATransactionManager.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/convert/extractor/DBCPDataSourceParameterExtractor.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/convert/extractor/DruidDataSourceParameterExtractor.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/convert/extractor/HikariDataSourceParameterExtractor.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/manager/AtomikosTransactionManager.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/manager/ShardingTransactionalResource.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/manager/XATransactionDataSourceWrapper.java", "insertions": 16, "deletions": 4, "lines": 20}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/xa/manager/XATransactionManagerSPILoader.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/convert/XADataSourceMapConverterTest.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/convert/extractor/DataSourceParameterFactoryTest.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/fixture/DataSourceUtils.java", "insertions": 21, "deletions": 20, "lines": 41}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/fixture/ReflectiveUtil.java", "insertions": 34, "deletions": 4, "lines": 38}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/manager/AllManagerTests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/manager/AtomikosTransactionManagerRecoveryTest.java", "insertions": 87, "deletions": 0, "lines": 87}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/manager/AtomikosTransactionManagerTest.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/manager/DBCP2TransactionManagerRecoveryTest.java", "insertions": 78, "deletions": 0, "lines": 78}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/manager/TransactionManagerRecoveryTest.java", "insertions": 227, "deletions": 0, "lines": 227}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/manager/XATransactionDataSourceWrapperTest.java", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/xa/manager/XATransactionManagerSPILoaderTest.java", "insertions": 18, "deletions": 16, "lines": 34}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/resources/jta.properties", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["b34852cfcfaac47adea0300220e8b52e8c6b8fc1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6.0, "UPD": 0.0, "INS": 1.0, "MOV": 4.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-config-parent/sharding-jdbc-config-yaml/src/main/java/com/dangdang/ddframe/rdb/sharding"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.config.yaml.api.YamlShardingDataSource.unmarshal(java.io.File)"]}, {"title": "yaml\u6587\u4ef6\u4e2d\u5305\u542b\u4e2d\u6587\uff0c\u4e14\u64cd\u4f5c\u7cfb\u7edf\u6a21\u5f0f\u4e0d\u662futf-8\u7f16\u7801\u5bfc\u81f4\u7684yaml\u4e0d\u80fd\u89e3\u6790", "body": "\u4e4b\u524d\u4f7f\u7528\u7684\u662fFileReader\u8bfb\u53d6yaml\u6587\u4ef6\uff0c\u5bfc\u81f4\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b57\u7b26\u96c6\u3002\n\u5e94\u4fee\u6b63\u4e3a\u7edf\u4e00\u4f7f\u7528utf-8\u5b57\u7b26\u96c6\u3002\n", "url": "https://github.com/apache/shardingsphere/issues/43", "user": "terrymanu", "labels": ["bug"], "created": "2016-03-29 06:56:11", "closed": "2016-03-29 06:59:58", "commits": {"a4a81c5b49e125f6cc62404be0357b56541da567": {"commitGHEventType": "closed", "commitUser": "terrymanu"}, "9fcc1d4c90e1af64ba8791cae9658e987c9873c3": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a4a81c5b49e125f6cc62404be0357b56541da567", "commitGHEventType": "closed", "commitUser": "terrymanu", "commitParents": ["736492a9ed178be8aa9a02d3361173ad63eb94b4"], "nameRev": "a4a81c5b49e125f6cc62404be0357b56541da567 tags/1.2.0~42", "commitMessage": "fix #43\n", "commitDateTime": "2016-03-29 14:59:03", "authoredDateTime": "2016-03-29 14:59:03", "commitGitStats": [{"filePath": "sharding-jdbc-config-parent/sharding-jdbc-config-yaml/src/main/java/com/dangdang/ddframe/rdb/sharding/config/yaml/api/YamlShardingDataSource.java", "insertions": 11, "deletions": 10, "lines": 21}, {"filePath": "sharding-jdbc-config-parent/sharding-jdbc-config-yaml/src/test/java/com/dangdang/ddframe/rdb/sharding/config/yaml/YamlShardingConfigTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-config-parent/sharding-jdbc-config-yaml/src/test/resources/configWithDataSourceWithProps.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-config-parent/sharding-jdbc-config-yaml/src/test/resources/configWithDataSourceWithoutProps.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-config-parent/sharding-jdbc-config-yaml/src/test/resources/configWithoutDataSourceWithProps.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-config-parent/sharding-jdbc-config-yaml/src/test/resources/configWithoutDataSourceWithoutProps.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-config-parent/sharding-jdbc-config-yaml/src/test/resources/logback-test.xml", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/api/strategy/common/ShardingStrategy.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "YamlShardingDataSource.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.yaml.api.YamlShardingDataSource.parse(java.io.File)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "YamlShardingConfigTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.yaml.YamlShardingConfigTest.testWithDataSource()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShardingStrategy.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "9fcc1d4c90e1af64ba8791cae9658e987c9873c3", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["068aece71cd0e8c72e8d098ce6ccd0bc8ba51bcc", "917aeb657438773c61dd505348a5f15726a3eb04"], "nameRev": "9fcc1d4c90e1af64ba8791cae9658e987c9873c3 tags/3.1.0.M1~200^2~22", "commitMessage": "Merge pull request #43 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-10-31 22:42:01", "authoredDateTime": "2018-10-31 22:42:01", "commitGitStats": [{"filePath": ".github/GIT_TEMPLATE/.git_commit_template.txt", "insertions": 66, "deletions": 0, "lines": 66}, {"filePath": "README.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "README_ZH.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "RELEASE-NOTES.md", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "pom.xml", "insertions": 22, "deletions": 3, "lines": 25}, {"filePath": "sharding-core/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/api/ConfigMapContext.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/api/config/MasterSlaveRuleConfiguration.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/config/DataSourceConfiguration.java", "insertions": 164, "deletions": 0, "lines": 164}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/PoolType.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/properties/ShardingPropertiesConstant.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/config/OrchestrationType.java => sharding-core/src/main/java/io/shardingsphere/core/constant/transaction/ProxyPoolType.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/event/transaction/base/SagaSQLExecutionEvent.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/event/transaction/base/SagaTransactionEvent.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/executor/StatementExecuteUnit.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/SQLExecuteCallback.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/ShardingTableMetaData.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rule/DataSourceParameter.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/yaml/YamlRuleConfiguration.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/yaml/masterslave/YamlMasterSlaveConfiguration.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/yaml/masterslave/YamlMasterSlaveRuleConfiguration.java", "insertions": 1, "deletions": 10, "lines": 11}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/yaml/sharding/YamlShardingConfiguration.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/yaml/sharding/YamlShardingRuleConfiguration.java", "insertions": 2, "deletions": 10, "lines": 12}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/spi/xa/BackendDataSourceFactory.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/spi/xa/XABackendDataSourceFactory.java", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/AllCoreTests.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-transaction/src/test/java/io/shardingsphere/transaction/listener/AllListenerTests.java => sharding-core/src/test/java/io/shardingsphere/core/config/AllConfigTests.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/config/DataSourceConfigurationTest.java", "insertions": 66, "deletions": 0, "lines": 66}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/metadata/datasource/ShardingDataSourceMetaDataTest.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/rule/ShardingDataSourceNamesTest.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/yaml/masterslave/YamlMasterSlaveConfigurationTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/yaml/sharding/YamlShardingConfigurationTest.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/spi/xa/FixedBackendDataSourceFactory.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/spi/xa/XABackendDataSourceFactoryTest.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "sharding-core/src/test/resources/META-INF/services/io.shardingsphere.spi.xa.BackendDataSourceFactory", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/src/test/resources/yaml/master-slave-rule.yaml", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/src/test/resources/yaml/sharding-rule.yaml", "insertions": 9, "deletions": 11, "lines": 20}, {"filePath": "sharding-jdbc/pom.xml", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-core/pom.xml", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/api/yaml/YamlMasterSlaveDataSourceFactory.java", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/api/yaml/YamlShardingDataSourceFactory.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/executor/PreparedStatementExecutor.java", "insertions": 2, "deletions": 14, "lines": 16}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactory.java", "insertions": 69, "deletions": 0, "lines": 69}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/connection/ShardingConnection.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/ShardingDataSource.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/api/MasterSlaveDataSourceFactoryTest.java", "insertions": 12, "deletions": 4, "lines": 16}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/api/ShardingDataSourceFactoryTest.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/executor/AllExecutorTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutorTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/executor/SQLExecuteCallbackFactoryTest.java", "insertions": 80, "deletions": 0, "lines": 80}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/jdbc/core/connection/ShardingConnectionTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/FixedBackendDataSourceFactory.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSourceTest.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/ShardingDataSourceTest.java", "insertions": 32, "deletions": 1, "lines": 33}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/META-INF/services/io.shardingsphere.spi.xa.BackendDataSourceFactory", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/META-INF/services/io.shardingsphere.transaction.manager.base.servicecomb.ShardingTransportFactory", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/integrate/cases/dml/dml-integrate-test-cases.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/resources/integrate/env/dbtbl_with_masterslave/sharding-rule.yaml", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingsphere/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java", "insertions": 28, "deletions": 27, "lines": 55}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingsphere/shardingjdbc/orchestration/spring/boot/common/SpringBootConfigMapConfigurationProperties.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingsphere/shardingjdbc/orchestration/spring/boot/common/SpringBootPropertiesConfigurationProperties.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/io/shardingsphere/shardingjdbc/spring/boot/type/OrchestrationSpringBootMasterSlaveTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/io/shardingsphere/shardingjdbc/spring/boot/type/OrchestrationSpringBootShardingTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/resources/application-masterslave.properties", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/resources/application-sharding.properties", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/shardingjdbc/orchestration/spring/namespace/parser/DataSourceBeanDefinitionParser.java", "insertions": 2, "deletions": 10, "lines": 12}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/shardingjdbc/orchestration/spring/OrchestrationMasterSlaveNamespaceTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/shardingjdbc/orchestration/spring/OrchestrationShardingNamespaceTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/api/yaml/YamlOrchestrationMasterSlaveDataSourceFactory.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/api/yaml/YamlOrchestrationShardingDataSourceFactory.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/AbstractOrchestrationDataSource.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationMasterSlaveDataSource.java", "insertions": 22, "deletions": 18, "lines": 40}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/datasource/OrchestrationShardingDataSource.java", "insertions": 20, "deletions": 15, "lines": 35}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/main/java/io/shardingsphere/shardingjdbc/orchestration/internal/util/DataSourceConverter.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/test/resources/yaml/integrate/ms/configWithMasterSlaveDataSourceWithProps.yaml", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/test/resources/yaml/integrate/sharding/configWithDataSourceWithProps.yaml", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/test/resources/yaml/integrate/sharding/configWithDataSourceWithoutProps.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/test/resources/yaml/integrate/sharding/configWithoutDataSourceWithProps.yaml", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/test/resources/yaml/integrate/sharding_ms/configWithDataSourceWithProps.yaml", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/src/test/resources/yaml/integrate/sharding_ms/configWithoutDataSourceWithProps.yaml", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/io/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.java", "insertions": 16, "deletions": 8, "lines": 24}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/io/shardingsphere/shardingjdbc/spring/boot/common/SpringBootConfigMapConfigurationProperties.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/yaml/other/YamlServerConfiguration.java => sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/io/shardingsphere/shardingjdbc/spring/boot/common/SpringBootPropertiesConfigurationProperties.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/java/io/shardingsphere/shardingjdbc/spring/boot/type/SpringBootMasterSlaveTest.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/java/io/shardingsphere/shardingjdbc/spring/boot/type/SpringBootShardingTest.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/resources/application-masterslave.properties", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/resources/application-sharding.properties", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-namespace/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/shardingjdbc/spring/MasterSlaveNamespaceTest.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/shardingjdbc/spring/ShardingNamespaceTest.java", "insertions": 22, "deletions": 16, "lines": 38}, {"filePath": "sharding-opentracing/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-orchestration/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-orchestration/sharding-orchestration-core/pom.xml", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/OrchestrationFacade.java", "insertions": 38, "deletions": 70, "lines": 108}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/RegistryCenterLoader.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigMapListenerManager.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigurationListenerManager.java", "insertions": 45, "deletions": 30, "lines": 75}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigurationNode.java", "insertions": 63, "deletions": 26, "lines": 89}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/config/ConfigurationService.java", "insertions": 101, "deletions": 226, "lines": 327}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/event/config/{MasterSlaveConfigurationEventBusEvent.java => MasterSlaveConfigurationChangedEvent.java}", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/event/config/{ShardingConfigurationEventBusEvent.java => ShardingConfigurationChangedEvent.java}", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/listener/ListenerFactory.java", "insertions": 17, "deletions": 6, "lines": 23}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/listener/ListenerManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/state/datasource/DataSourceService.java", "insertions": 42, "deletions": 60, "lines": 102}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/YamlOrchestrationConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/converter/DataSourceConverter.java", "insertions": 0, "deletions": 60, "lines": 60}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/converter/DataSourceParameterConverter.java", "insertions": 0, "deletions": 58, "lines": 58}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/converter/MasterSlaveConfigurationConverter.java", "insertions": 0, "deletions": 106, "lines": 106}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/converter/ProxyConfigurationConverter.java", "insertions": 0, "deletions": 79, "lines": 79}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/converter/ShardingConfigurationConverter.java", "insertions": 0, "deletions": 104, "lines": 104}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/DataSourceParameterRepresenter.java", "insertions": 0, "deletions": 93, "lines": 93}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/DataSourceRepresenter.java", "insertions": 0, "deletions": 120, "lines": 120}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/{DefaultConfigurationRepresenter.java => DefaultRepresenter.java}", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/MasterSlaveConfigurationRepresenter.java", "insertions": 0, "deletions": 90, "lines": 90}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/ShardingConfigurationRepresenter.java", "insertions": 0, "deletions": 76, "lines": 76}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/SimpleTypeRepresenter.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/AllInternalTests.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/config/AllConfigTests.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/config/ConfigurationNodeTest.java", "insertions": 29, "deletions": 3, "lines": 32}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/config/ConfigurationServiceTest.java", "insertions": 377, "deletions": 0, "lines": 377}, {"filePath": "sharding-transaction/src/test/java/io/shardingsphere/transaction/manager/ShardingTransactionManagerRegistryTest.java => sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/state/StateNodeTest.java", "insertions": 12, "deletions": 7, "lines": 19}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/yaml/AllYamlTests.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/yaml/YamlOrchestrationConfigurationTest.java", "insertions": 69, "deletions": 0, "lines": 69}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/yaml/representer/DefaultRepresenterTest.java", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/yaml/representer/SimpleTypeRepresenterTest.java", "insertions": 54, "deletions": 0, "lines": 54}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/orchestration/internal/yaml/representer/fixture/DefaultRepresenterFixture.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/{main/java/io/shardingsphere/orchestration/internal/event/config/ProxyConfigurationEventBusEvent.java => test/java/io/shardingsphere/orchestration/internal/yaml/representer/fixture/SimpleTypeRepresenterFixture.java}", "insertions": 21, "deletions": 16, "lines": 37}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/resources/yaml/orchestration-configuration.max.yaml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/resources/yaml/orchestration-configuration.min.yaml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-orchestration/sharding-orchestration-reg/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-api/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-etcd/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-zookeeper-curator/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-proxy/pom.xml", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-proxy/src/main/docker/Dockerfile", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java", "insertions": 47, "deletions": 21, "lines": 68}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCBackendDataSource.java", "insertions": 4, "deletions": 21, "lines": 25}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCXABackendDataSourceFactory.java", "insertions": 6, "deletions": 20, "lines": 26}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/execute/JDBCExecuteEngine.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/GlobalRegistry.java", "insertions": 41, "deletions": 20, "lines": 61}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/runtime/ShardingSchema.java", "insertions": 11, "deletions": 10, "lines": 21}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/constant/ServerInfo.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/query/ComQueryPacket.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/util/DataSourceConverter.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-proxy/src/main/resources/META-INF/services/io.shardingsphere.transaction.manager.base.servicecomb.ShardingTransportFactory", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "sharding-proxy/src/main/resources/conf/config-master_slave.yaml", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/main/resources/conf/config-sharding.yaml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/resources/conf/server.yaml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/AllTests.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/frontend/AllFrontendTests.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/frontend/common/FrontendHandlerFactoryTest.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/frontend/common/executor/ChannelThreadExecutorGroupTest.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/frontend/common/executor/ExecutorGroupTest.java", "insertions": 69, "deletions": 0, "lines": 69}, {"filePath": "sharding-sql-test/pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-transaction/pom.xml", "insertions": 17, "deletions": 14, "lines": 31}, {"filePath": "sharding-transaction/sharding-transaction-api/pom.xml", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "sharding-transaction/{ => sharding-transaction-api}/src/main/java/io/shardingsphere/transaction/listener/ShardingTransactionListener.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-transaction/{ => sharding-transaction-api}/src/main/java/io/shardingsphere/transaction/listener/ShardingTransactionListenerAdapter.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-transaction/{ => sharding-transaction-api}/src/main/java/io/shardingsphere/transaction/manager/ShardingTransactionManager.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-transaction/{src/main/java/io/shardingsphere/transaction/manager/base/SagaTransactionManager.java => sharding-transaction-api/src/main/java/io/shardingsphere/transaction/manager/base/BASETransactionManager.java}", "insertions": 9, "deletions": 22, "lines": 31}, {"filePath": "sharding-transaction/{ => sharding-transaction-api}/src/main/java/io/shardingsphere/transaction/manager/xa/XATransactionManager.java", "insertions": 15, "deletions": 3, "lines": 18}, {"filePath": "sharding-transaction/sharding-transaction-base/pom.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-transaction/sharding-transaction-xa/pom.xml", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-transaction/{src/main/java/io/shardingsphere/transaction/TransactionListenerRegistry.java => sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/XATransactionListenerRegistry.java}", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-transaction/{ => sharding-transaction-xa}/src/main/java/io/shardingsphere/transaction/listener/xa/XATransactionListener.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/XABackendDataSourceConverter.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/XADataSourceFactory.java", "insertions": 77, "deletions": 0, "lines": 77}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/XADataSourceWrapper.java", "insertions": 85, "deletions": 0, "lines": 85}, {"filePath": "sharding-transaction/{ => sharding-transaction-xa}/src/main/java/io/shardingsphere/transaction/manager/xa/XATransactionManagerSPILoader.java", "insertions": 15, "deletions": 7, "lines": 22}, {"filePath": "sharding-transaction/{ => sharding-transaction-xa}/src/main/java/io/shardingsphere/transaction/manager/xa/atomikos/AtomikosTransactionManager.java", "insertions": 19, "deletions": 40, "lines": 59}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/convert/Converter.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/convert/DBCPTomcatConverter.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/convert/DataSourceParameterFactory.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/convert/DataSourceReflector.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/property/MysqlXAPropertyFactory.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/property/XADatabaseType.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/java/io/shardingsphere/transaction/manager/xa/property/XAPropertyFactory.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/main/resources/META-INF/services/io.shardingsphere.core.event.ShardingEventListenerRegistry", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-transaction/{ => sharding-transaction-xa}/src/main/resources/jta.properties", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-transaction/{ => sharding-transaction-xa}/src/test/java/io/shardingsphere/transaction/AllTests.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-transaction/{ => sharding-transaction-xa}/src/test/java/io/shardingsphere/transaction/listener/xa/XATransactionListenerTest.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-transaction/{src/test/java/io/shardingsphere/transaction/manager => sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/manager/xa}/AllManagerTests.java", "insertions": 10, "deletions": 7, "lines": 17}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/manager/xa/XABackendDataSourceConvertTest.java", "insertions": 85, "deletions": 0, "lines": 85}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/manager/xa/XADataSourceFactoryTest.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/manager/xa/XADataSourceWrapperTest.java", "insertions": 85, "deletions": 0, "lines": 85}, {"filePath": "sharding-transaction/{ => sharding-transaction-xa}/src/test/java/io/shardingsphere/transaction/manager/xa/XATransactionManagerSPILoaderTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-transaction/{ => sharding-transaction-xa}/src/test/java/io/shardingsphere/transaction/manager/xa/atomikos/AtomikosTransactionManagerTest.java", "insertions": 10, "deletions": 34, "lines": 44}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/manager/xa/convert/DataSourceParameterFactoryTest.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/manager/xa/fixture/DataSourceUtils.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-transaction/{ => sharding-transaction-xa}/src/test/java/io/shardingsphere/transaction/manager/xa/fixture/FixtureXATransactionManager.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/manager/xa/fixture/ReflectiveUtil.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/java/io/shardingsphere/transaction/manager/xa/property/XAPropertyFactoryTest.java", "insertions": 74, "deletions": 0, "lines": 74}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/resources/META-INF/services/io.shardingsphere.spi.xa.BackendDataSourceFactory", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/resources/META-INF/services/io.shardingsphere.transaction.manager.xa.XATransactionManager", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-transaction/sharding-transaction-xa/src/test/resources/jta.properties", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/ShardingTransactionManagerRegistry.java", "insertions": 0, "deletions": 71, "lines": 71}, {"filePath": "sharding-transaction/src/main/resources/META-INF/services/io.shardingsphere.core.event.ShardingEventListenerRegistry", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-transaction/src/test/java/io/shardingsphere/transaction/manager/base/SagaTransactionManagerTest.java", "insertions": 0, "deletions": 68, "lines": 68}, {"filePath": "sharding-transaction/src/test/resources/META-INF/services/io.shardingsphere.transaction.manager.xa.XATransactionManager", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["a4a81c5b49e125f6cc62404be0357b56541da567"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 11, "lines": 23, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3.0, "UPD": 2.0, "INS": 0.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-config-parent/sharding-jdbc-config-yaml/src/main/java/com/dangdang/ddframe/rdb/sharding", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/api"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.config.yaml.api.YamlShardingDataSource.parse(java.io.File)"]}, {"title": "JPA\u4e0eSharding-JDBC\u7684\u517c\u5bb9\u95ee\u9898\u3002JPA\u4f1a\u81ea\u52a8\u589e\u52a0SELECT\u7684\u5217\u522b\u540d\uff0c\u5bfc\u81f4ORDER BY\u53ea\u80fd\u901a\u8fc7\u522b\u540d\uff0c\u800c\u975e\u5217\u540d\u79f0\u83b7\u53d6ResultSet\u7684\u6570\u636e\u3002", "body": "", "url": "https://github.com/apache/shardingsphere/issues/38", "user": "haocao", "labels": ["bug"], "created": "2016-03-25 12:51:08", "closed": "2016-03-25 12:51:51", "commits": {"cc1e2addf100dc45e14431751c0d8f66562a3763": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cc1e2addf100dc45e14431751c0d8f66562a3763", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["d86a31d268badf8732e6c93def6f6dbd7a58affb", "9a986c869ac46975879fe59a0c4e2a006103cebc"], "nameRev": "cc1e2addf100dc45e14431751c0d8f66562a3763 tags/3.0.0~14^2~4", "commitMessage": "Merge pull request #38 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-10-10 18:32:19", "authoredDateTime": "2018-10-10 18:32:19", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/optimizer/insert/InsertOptimizeEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutorTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/executor/PreparedStatementExecutorTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/Bootstrap.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/BackendExecutorContext.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/BackendHandlerFactory.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaBroadcastBackendHandler.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaIgnoreBackendHandler.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/SchemaUnicastBackendHandler.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/JDBCBackendHandler.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/connection/BackendConnection.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCBackendDataSource.java", "insertions": 13, "deletions": 18, "lines": 31}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCXABackendDataSourceFactory.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/execute/JDBCExecuteEngine.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/wrapper/StatementExecutorWrapper.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/NettyBackendHandler.java", "insertions": 18, "deletions": 17, "lines": 35}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClient.java", "insertions": 11, "deletions": 12, "lines": 23}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/BackendNettyClientManager.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/response/mysql/MySQLResponseHandler.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/config/{yaml/ProxyConfiguration.java => ShardingConfiguration.java}", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/config/{yaml/ProxyYamlConfigurationLoader.java => ShardingConfigurationLoader.java}", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/ShardingProxy.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/common/executor/ExecutorGroup.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/frontend/mysql/MySQLFrontendHandler.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/listener/ProxyListenerRegister.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/{config/ProxyContext.java => runtime/GlobalRegistry.java}", "insertions": 21, "deletions": 20, "lines": 41}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/{config/RuleRegistry.java => runtime/ShardingSchema.java}", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/{config => runtime/metadata}/ProxyTableMetaDataConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/{config => runtime/nio}/BackendNIOConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/admin/initdb/ComInitDbPacket.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/execute/ComStmtExecutePacket.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/prepare/ComStmtPreparePacket.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/query/ComQueryPacket.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/transport/mysql/packet/handshake/AuthenticationHandler.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/config/AllConfigTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/config/ShardingConfigurationLoaderTest.java", "insertions": 101, "deletions": 0, "lines": 101}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/listener/ProxyListenerRegisterTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/runtime/AllRuntimeTests.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/{config => runtime/metadata}/ProxyTableMetaDataConnectionManagerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/CommandPacketFactoryTest.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/admin/initdb/ComInitDbPacketTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/execute/ComStmtExecutePacketTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/prepare/ComStmtPreparePacketTest.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/query/ComQueryPacketTest.java", "insertions": 15, "deletions": 15, "lines": 30}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/handshake/AuthenticationHandlerTest.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-proxy/src/test/resources/conf/config-empty.yaml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-proxy/src/test/resources/conf/config-master_slave.yaml", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "sharding-proxy/src/test/resources/conf/config-sharding.yaml", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "sharding-proxy/src/test/resources/conf/config.yaml", "insertions": 0, "deletions": 63, "lines": 63}, {"filePath": "sharding-proxy/src/test/resources/conf/server.yaml", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/atomikos/AtomikosTransactionManager.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "ShardingPreparedStatement.execute()\u65b9\u6cd5\u4e2d\u7f13\u5b58\u8bed\u53e5cachedRoutedPreparedStatements\u672a\u66f4\u65b0\u5bfc\u81f4\u7684\u95ee\u9898", "body": " String sql = \"insert into user_info_shard(id,user_no,user_name) values(?,?,?)\";\n            try {\n                    Connection conn = shardingDS.getConnection();\n                    PreparedStatement pstmt = conn.prepareStatement(sql);\n\n```\n                for (int i = 1; i <= 10000; i++) {\n                    pstmt.setInt(1, i);\n                    pstmt.setString(2, UUID.randomUUID().toString().replace(\"-\", \"\"));\n                    pstmt.setString(3,\"ZHANG\"+i);\n\n                    pstmt.execute();\n                }\n\n\n        } catch(Exception ex) {\n            ex.printStackTrace();\n        }\n```\n\n\u5355\u5e93\u3001\u5206\u8868\u6d4b\u8bd5\uff0c\u53ea\u6709\u4e00\u5f20\u903b\u8f91\u8868\u3002\n\u6d4b\u8bd5\u4ee3\u7801\u5982\u4e0a\uff0c\u8be5\u6d4b\u8bd5\u4ee3\u7801\u53ea\u6709\u7b2c\u4e00\u6761\u8bb0\u5f55\u63d2\u5165\u6210\u529f\uff0c\u7b2c\u4e8c\u6761\u8bb0\u5f55\u63d2\u5165\u65f6\u5c31\u51fa\u5f02\u5e38\uff08\u4e3b\u952e\u51b2\u7a81\uff09\uff0c\u539f\u56e0\u662fShardingPreparedStatement\u7684\u53c2\u6570\u91cd\u65b0\u8bbe\u7f6e\u4ee5\u540e\uff0ccachedRoutedPreparedStatements\u672a\u66f4\u65b0\u3002\n", "url": "https://github.com/apache/shardingsphere/issues/36", "user": "billberg", "labels": ["bug"], "created": "2016-03-21 11:50:29", "closed": "2016-07-06 09:59:37", "commits": {"1f7ed616df278375e1b2ef40ec816ac6dcb4bc0e": {"commitGHEventType": "closed", "commitUser": "hanahmily"}, "0f230c5836e6abc38e3aba3b38b565e89d02e383": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 106.00027777777778, "commitsDetails": [{"commitHash": "1f7ed616df278375e1b2ef40ec816ac6dcb4bc0e", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["fe49c45d74f4c21ca2f5bc6ec2882684176b38c4"], "nameRev": "1f7ed616df278375e1b2ef40ec816ac6dcb4bc0e tags/1.3.2~20", "commitMessage": "fix #36 cannot reuse ShardingPreparedStatement\nfix #114 ShardingPreparedStatement batch execution parse sql\n", "commitDateTime": "2016-07-06 18:00:06", "authoredDateTime": "2016-07-06 18:00:06", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/PreparedStatementExecutor.java", "insertions": 75, "deletions": 0, "lines": 75}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/wrapper/BatchPreparedStatementExecutorWrapper.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/executor/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatement.java", "insertions": 60, "deletions": 63, "lines": 123}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingStatement.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/router/Condition.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/result/router/ConditionContext.java", "insertions": 21, "deletions": 5, "lines": 26}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/ParseContext.java", "insertions": 50, "deletions": 13, "lines": 63}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/basic/mysql/MySQLEvalVisitor.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/PreparedSQLRouter.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/SQLRouteEngine.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/AbstractDBUnitTest.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/common/statement/AbstractShardingBothForStatementWithDMLTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/dbtbl/statically/statement/StaticShardingBothForStatementWithDMLTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/masterslave/statement/ShardingMasterSlaveForStatementWithDMLTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/jdbc/ShardingPreparedStatementTest.java", "insertions": 49, "deletions": 11, "lines": 60}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/AbstractBaseParseTest.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/AllParserTests.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/jaxb/Condition.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/result/SQLParsedResultTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/basic/mysql/MySQLEvalVisitorTest.java", "insertions": 82, "deletions": 0, "lines": 82}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/one_param/delete.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/one_param/insert.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/one_param/select.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/one_param/update.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/prepared_statement/two_params/select.xml", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "0f230c5836e6abc38e3aba3b38b565e89d02e383", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["8b7a9be7ca7b475f1f79b65ae935a4ce7ab44992", "0623d395708191a30fa1a58827218b916641baae"], "nameRev": "0f230c5836e6abc38e3aba3b38b565e89d02e383 tags/3.0.0~14^2~13", "commitMessage": "Merge pull request #36 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-09-28 16:25:34", "authoredDateTime": "2018-09-28 16:25:34", "commitGitStats": [{"filePath": "pom.xml", "insertions": 104, "deletions": 51, "lines": 155}, {"filePath": "sharding-core/pom.xml", "insertions": 2, "deletions": 48, "lines": 50}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/keygen/DefaultKeyGenerator.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dql/groupby/aggregation/AccumulationAggregationUnit.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dql/groupby/aggregation/AverageAggregationUnit.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dql/groupby/aggregation/ComparableAggregationUnit.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/H2DataSourceMetaData.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/MySQLDataSourceMetaData.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/OracleDataSourceMetaData.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/PostgreSQLDataSourceMetaData.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/dialect/SQLServerDataSourceMetaData.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/context/OrderItem.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/routing/type/complex/CartesianRoutingEngine.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/routing/type/complex/ComplexRoutingEngine.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/routing/type/hint/DatabaseHintRoutingEngine.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/spi/NewInstanceServiceLoader.java", "insertions": 22, "deletions": 9, "lines": 31}, {"filePath": "{sharding-jdbc-plugin/src/test/java/io/shardingsphere/plugin/keygen => sharding-core/src/test/java/io/shardingsphere}/AllTests.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/{AllTests.java => AllCoreTests.java}", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/executor/fixture/ExecutorTestUtil.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/executor/threadlocal/ExecutorExceptionHandlerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/keygen/DefaultKeyGeneratorTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/integrate/asserts/ParserResultSetLoader.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/integrate/asserts/condition/ConditionAssert.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/lexer/analyzer/TokenizerTest.java", "insertions": 15, "deletions": 11, "lines": 26}, {"filePath": "sharding-core/src/test/resources/yaml/master-slave-rule.yaml", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/src/test/resources/yaml/optimize-rule.yaml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/src/test/resources/yaml/parser-rule.yaml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/src/test/resources/yaml/rewrite-rule.yaml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/src/test/resources/yaml/sharding-rule.yaml", "insertions": 17, "deletions": 17, "lines": 34}, {"filePath": "sharding-jdbc-plugin/src/main/java/io/shardingsphere/plugin/keygen/HostNameKeyGenerator.java", "insertions": 0, "deletions": 62, "lines": 62}, {"filePath": "sharding-jdbc-plugin/src/main/java/io/shardingsphere/plugin/keygen/IPKeyGenerator.java", "insertions": 0, "deletions": 56, "lines": 56}, {"filePath": "sharding-jdbc-plugin/src/main/java/io/shardingsphere/plugin/keygen/IPSectionKeyGenerator.java", "insertions": 0, "deletions": 81, "lines": 81}, {"filePath": "sharding-jdbc-plugin/src/test/java/io/shardingsphere/plugin/keygen/HostNameKeyGeneratorTest.java", "insertions": 0, "deletions": 121, "lines": 121}, {"filePath": "sharding-jdbc-plugin/src/test/java/io/shardingsphere/plugin/keygen/IPKeyGeneratorTest.java", "insertions": 0, "deletions": 109, "lines": 109}, {"filePath": "sharding-jdbc-plugin/src/test/java/io/shardingsphere/plugin/keygen/IPSectionKeyGeneratorTest.java", "insertions": 0, "deletions": 123, "lines": 123}, {"filePath": "sharding-jdbc/pom.xml", "insertions": 0, "deletions": 36, "lines": 36}, {"filePath": "sharding-jdbc/sharding-jdbc-core/pom.xml", "insertions": 9, "deletions": 51, "lines": 60}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/AbstractShardingPreparedStatementAdapter.java", "insertions": 7, "deletions": 10, "lines": 17}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/WrapperAdapter.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/adapter/invocation/JdbcMethodInvocation.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/io/shardingsphere/shardingjdbc/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/dbtest/cases/assertion/IntegrateTestCasesLoader.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/dbtest/env/schema/SchemaEnvironmentManager.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/api/ShardingDataSourceFactoryTest.java", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/executor/AbstractBaseExecutorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutorTest.java", "insertions": 46, "deletions": 43, "lines": 89}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/executor/PreparedStatementExecutorTest.java", "insertions": 39, "deletions": 36, "lines": 75}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/executor/StatementExecutorTest.java", "insertions": 46, "deletions": 43, "lines": 89}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/executor/fixture/ExecutorTestUtil.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/jdbc/adapter/ConnectionAdapterTest.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/jdbc/adapter/DataSourceAdapterTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/jdbc/adapter/invocation/JdbcMethodInvocationTest.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/test/java/io/shardingsphere/shardingjdbc/jdbc/adapter/invocation/SetParameterMethodInvocationTest.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/pom.xml", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/pom.xml", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingsphere/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java", "insertions": 17, "deletions": 4, "lines": 21}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingsphere/shardingjdbc/orchestration/spring/boot/util/PropertyUtil.java", "insertions": 30, "deletions": 39, "lines": 69}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/io/shardingsphere/shardingjdbc/spring/boot/type/OrchestrationSpringBootMasterSlaveTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/io/shardingsphere/shardingjdbc/spring/boot/type/OrchestrationSpringBootShardingTest.java", "insertions": 13, "deletions": 11, "lines": 24}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/pom.xml", "insertions": 8, "deletions": 12, "lines": 20}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/shardingjdbc/orchestration/spring/OrchestrationMasterSlaveNamespaceTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/shardingjdbc/orchestration/spring/util/FieldValueUtil.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "sharding-jdbc/sharding-jdbc-orchestration/pom.xml", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/pom.xml", "insertions": 1, "deletions": 28, "lines": 29}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/pom.xml", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/io/shardingsphere/shardingjdbc/spring/boot/util/PropertyUtil.java", "insertions": 30, "deletions": 39, "lines": 69}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/java/io/shardingsphere/shardingjdbc/spring/boot/type/SpringBootShardingTest.java", "insertions": 12, "deletions": 8, "lines": 20}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-namespace/pom.xml", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/shardingjdbc/spring/util/FieldValueUtil.java", "insertions": 6, "deletions": 9, "lines": 15}, {"filePath": "sharding-opentracing/pom.xml", "insertions": 0, "deletions": 21, "lines": 21}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/ShardingTracerTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/hook/BaseOpenTracingHookTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-orchestration/pom.xml", "insertions": 1, "deletions": 86, "lines": 87}, {"filePath": "sharding-orchestration/sharding-orchestration-core/pom.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/DataSourceRepresenter.java", "insertions": 9, "deletions": 16, "lines": 25}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/MasterSlaveConfigurationRepresenter.java", "insertions": 8, "deletions": 15, "lines": 23}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/ProxyConfigurationRepresenter.java", "insertions": 8, "deletions": 15, "lines": 23}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/orchestration/internal/yaml/representer/ShardingConfigurationRepresenter.java", "insertions": 8, "deletions": 15, "lines": 23}, {"filePath": "sharding-orchestration/sharding-orchestration-reg/pom.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-proxy/pom.xml", "insertions": 8, "deletions": 30, "lines": 38}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/jdbc/datasource/JDBCBackendDataSource.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/shardingproxy/backend/netty/client/response/mysql/MySQLResponseHandler.java", "insertions": 12, "deletions": 16, "lines": 28}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/listener/ProxyListenerRegisterTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/CommandPacketFactoryTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/admin/initdb/ComInitDbPacketTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/BinaryStatementRegistryTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/execute/ComStmtExecutePacketTest.java", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/fixture/BinaryStatementRegistryUtil.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/prepare/ComStmtPreparePacketTest.java", "insertions": 11, "deletions": 8, "lines": 19}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/fieldlist/ComFieldListPacketTest.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/command/query/text/query/ComQueryPacketTest.java", "insertions": 15, "deletions": 10, "lines": 25}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/handshake/AuthorityHandlerTest.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/shardingproxy/transport/mysql/packet/handshake/ConnectionIdGeneratorTest.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "sharding-sql-test/pom.xml", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "sharding-sql-test/src/main/java/io/shardingsphere/test/sql/SQLCasesLoader.java", "insertions": 8, "deletions": 10, "lines": 18}, {"filePath": "sharding-transaction/pom.xml", "insertions": 0, "deletions": 25, "lines": 25}, {"filePath": "sharding-transaction/src/test/java/io/shardingsphere/transaction/listener/xa/XATransactionListenerTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-transaction/src/test/java/io/shardingsphere/transaction/manager/xa/atomikos/AtomikosTransactionManagerTest.java", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "limit \u652f\u6301\u95ee\u9898", "body": "\u4e0d\u652f\u6301 limit 1 offset 10  \n\u4e0d\u652f\u6301 limit 100 , -1\n", "url": "https://github.com/apache/shardingsphere/issues/33", "user": "pingww", "labels": ["bug"], "created": "2016-03-17 09:22:14", "closed": "2016-07-12 10:48:56", "commits": {"9a6866e21dab434381dbd84cdf94bfdeff340ddf": {"commitGHEventType": "closed", "commitUser": "hanahmily"}, "aff534187a68526e97f46619a03cb5598c720f1b": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 117.00027777777778, "commitsDetails": [{"commitHash": "9a6866e21dab434381dbd84cdf94bfdeff340ddf", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["c97a233e647c1791d0dd5b051d951f7c0db0b4d0"], "nameRev": "9a6866e21dab434381dbd84cdf94bfdeff340ddf tags/1.3.2~11", "commitMessage": "fix #33 Limit support\n", "commitDateTime": "2016-07-12 18:49:40", "authoredDateTime": "2016-07-12 18:49:40", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/db/statement/ShardingDataBasesOnlyForStatementWithSelectTest.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/resources/com/dangdang/ddframe/rdb/sharding/parser/mysql/statement/select_limit.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShardingDataBasesOnlyForStatementWithSelectTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.integrate.db.statement.ShardingDataBasesOnlyForStatementWithSelectTest.assertSelectLimitOffsetWithBindingTable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "aff534187a68526e97f46619a03cb5598c720f1b", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["4bad5329210b2f8553c2c7d8e6294258f1d26fe1", "1f7c0be8779ab746db1cec51f2f0ea186b3ab2f5"], "nameRev": "aff534187a68526e97f46619a03cb5598c720f1b tags/3.0.0.M4~78^2~8", "commitMessage": "Merge pull request #33 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-09-20 11:18:00", "authoredDateTime": "2018-09-20 11:18:00", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/api/algorithm/masterslave/RoundRobinMasterSlaveLoadBalanceAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java", "insertions": 0, "deletions": 67, "lines": 67}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/executor/sql/execute/SQLExecuteTemplate.java", "insertions": 0, "deletions": 37, "lines": 37}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/parser/sql/AllStatementParserTests.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/parser/sql/UpdateStatementParserTest.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "sharding-core/src/test/resources/parser/update.xml", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/AbstractStatementExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dml/dml-integrate-test-cases.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/listener/ExecuteEventListenerTest.java", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "sharding-sql-test/src/main/resources/sql/dml/update.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RoundRobinMasterSlaveLoadBalanceAlgorithm.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.api.algorithm.masterslave.RoundRobinMasterSlaveLoadBalanceAlgorithm.getDataSource(java.lang.String,java.lang.String,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ShardingExecuteEngine.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.executor.ShardingExecuteEngine.close()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.executor.ShardingExecuteEngine.asyncGroupExecute(io.shardingsphere.core.executor.ShardingExecuteGroup,io.shardingsphere.core.executor.ShardingGroupExecuteCallback)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.executor.ShardingExecuteEngine.close().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.executor.ShardingExecuteEngine.asyncGroupExecute(io.shardingsphere.core.executor.ShardingExecuteGroup,io.shardingsphere.core.executor.ShardingGroupExecuteCallback).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.core.executor.ShardingExecuteEngine.execute(java.util.Collection,io.shardingsphere.core.executor.ShardingExecuteCallback)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.executor.ShardingExecuteEngine.execute(java.util.Collection,io.shardingsphere.core.executor.ShardingExecuteCallback,io.shardingsphere.core.executor.ShardingExecuteCallback)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.executor.ShardingExecuteEngine.asyncExecute(java.util.Collection,io.shardingsphere.core.executor.ShardingExecuteCallback)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.executor.ShardingExecuteEngine.syncExecute(java.lang.Object,io.shardingsphere.core.executor.ShardingExecuteCallback)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.executor.ShardingExecuteEngine.getResults(java.lang.Object,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SQLExecuteTemplate.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.executor.sql.execute.SQLExecuteTemplate.execute(java.util.Collection,io.shardingsphere.core.executor.sql.execute.SQLExecuteCallback)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.executor.sql.execute.SQLExecuteTemplate.execute(java.util.Collection,io.shardingsphere.core.executor.sql.execute.SQLExecuteCallback,io.shardingsphere.core.executor.sql.execute.SQLExecuteCallback)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AllStatementParserTests.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.sql.AllStatementParserTests", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "UpdateStatementParserTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.sql.UpdateStatementParserTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractStatementExecutor.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.executor.AbstractStatementExecutor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractConnectionAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.adapter.AbstractConnectionAdapter.createConnections(javax.sql.DataSource,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ExecuteEventListenerTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.opentracing.listener.ExecuteEventListenerTest.assertSingleStatement()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.opentracing.listener.ExecuteEventListenerTest.assertMultiStatement()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "io.shardingsphere.opentracing.listener.ExecuteEventListenerTest.assertSQLException()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a6866e21dab434381dbd84cdf94bfdeff340ddf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "\u5982\u679c\u5b9e\u9645\u8868\u53ea\u6709\u4e00\u5f20\uff0c\u90a3\u4e48\u5e94\u8be5\u90e8\u8c03\u7528\u5206\u7247\u7b97\u6cd5\u76f4\u63a5\u8def\u7531\u5230\u8fd9\u5f20\u8868\u4e0a", "body": "", "url": "https://github.com/apache/shardingsphere/issues/26", "user": "hanahmily", "labels": ["bug"], "created": "2016-03-04 10:18:16", "closed": "2016-03-14 10:14:50", "commits": {"c06197812c8fb7ed924edc31fcbf29511e25b41e": {"commitGHEventType": "referenced", "commitUser": "beckhampu"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "c06197812c8fb7ed924edc31fcbf29511e25b41e", "commitGHEventType": "referenced", "commitUser": "beckhampu", "commitParents": ["ff44ebcb22edbd09e8f6b42e0395b195138bc4bd", "689f869d8ad376bb20d5971f50d3b8bb4a948632"], "nameRev": "c06197812c8fb7ed924edc31fcbf29511e25b41e tags/3.0.0.M4~78^2~25", "commitMessage": "Merge pull request #26 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-08-26 09:40:59", "authoredDateTime": "2018-08-26 09:40:59", "commitGitStats": [{"filePath": ".travis.yml", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "README.md", "insertions": 20, "deletions": 20, "lines": 40}, {"filePath": "README_ZH.md", "insertions": 16, "deletions": 16, "lines": 32}, {"filePath": "RELEASE-NOTES.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/{orche => api}/config/ProxyBasicRule.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/{orche/eventbus/config/jdbc => event/orche/config}/MasterSlaveConfigurationEventBusEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/{orche/eventbus/config/proxy => event/orche/config}/ProxyConfigurationEventBusEvent.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/{orche/eventbus/config/jdbc => event/orche/config}/ShardingConfigurationEventBusEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/{orche/eventbus/state/circuit => event/orche/state}/CircuitStateEventBusEvent.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/{orche/eventbus/state/disabled => event/orche/state}/DisabledStateEventBusEvent.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/state/disabled/DisabledStateEventBusInstance.java", "insertions": 0, "deletions": 42, "lines": 42}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/TableReferencesClauseParser.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/WhereClauseParser.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/expression/AliasExpressionParser.java", "insertions": 28, "deletions": 10, "lines": 38}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/routing/strategy/ShardingAlgorithmFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/resources/parser/select.xml", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "sharding-core/src/test/resources/parser/select_pagination.xml", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/OrchestrationProxyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/config/ConfigMapListenerManager.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/config/ConfigurationListenerManager.java", "insertions": 10, "deletions": 11, "lines": 21}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/config/ConfigurationService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/listener/ListenerFactory.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/listener/ListenerManager.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/state/datasource/DataSourceListenerManager.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/state/datasource/DataSourceService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/state/instance/InstanceListenerManager.java", "insertions": 11, "deletions": 16, "lines": 27}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/yaml/converter/ProxyConfigurationConverter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractDataSourceAdapter.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/ShardingContext.java", "insertions": 25, "deletions": 28, "lines": 53}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 7, "deletions": 13, "lines": 20}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSource.java", "insertions": 4, "deletions": 10, "lines": 14}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement/ShardingStatement.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/adapter/ResultSetAdapterTest.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/adapter/ResultSetGetterAdapterTest.java", "insertions": 21, "deletions": 20, "lines": 41}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSourceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/db/select_pagination_with_row_number_not_at_end.xml", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_pagination_with_row_number_not_at_end.xml", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/masterslave/select_pagination_with_row_number_not_at_end.xml", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/tbl/select_pagination_with_row_number_not_at_end.xml", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dql-integrate-test-cases.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/Bootstrap.java", "insertions": 9, "deletions": 20, "lines": 29}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/client/BackendNettyClientChannelInitializer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/RuleRegistry.java", "insertions": 15, "deletions": 6, "lines": 21}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/common/netty/ServerHandlerInitializer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/mysql/MySQLFrontendHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/listener/ProxyListenerRegister.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/common/codec/PacketCodecFactory.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/constant/ColumnType.java", "insertions": 60, "deletions": 46, "lines": 106}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/constant/NewParametersBoundFlag.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/constant/ServerErrorCode.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/CommandPacketFactory.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/admin/ping/ComPingPacket.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/ColumnDefinition41Packet.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/QueryResponsePackets.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/resources/conf/config.yaml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/AllTests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/AllTransportTests.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/common/codec/PacketCodecFactoryTest.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/constant/AllMySQLConstantTests.java", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/state/circuit/CircuitStateEventBusInstance.java => sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/constant/CapabilityFlagTest.java", "insertions": 13, "deletions": 19, "lines": 32}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/constant/ColumnTypeTest.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/config/proxy/ProxyConfigurationEventBusInstance.java => sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/constant/NewParametersBoundFlagTest.java", "insertions": 13, "deletions": 19, "lines": 32}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/constant/ServerErrorCodeTest.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/AllMySQLPacketTests.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/AllMySQLCommandPacketTests.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/CommandPacketFactoryTest.java", "insertions": 256, "deletions": 0, "lines": 256}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/config/jdbc/JdbcConfigurationEventBusInstance.java => sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/CommandPacketTypeTest.java", "insertions": 13, "deletions": 19, "lines": 32}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/CommandResponsePacketsTest.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/admin/UnsupportedCommandPacketTest.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/admin/initdb/ComInitDbPacketTest.java", "insertions": 78, "deletions": 0, "lines": 78}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/admin/ping/ComPingPacketTest.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/admin/quit/ComQuitPacketTest.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/ColumnDefinition41PacketTest.java", "insertions": 82, "deletions": 0, "lines": 82}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/FieldCountPacketTest.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/QueryResponsePacketsTest.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/text/TextResultSetRowPacketTest.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/text/fieldlist/ComFieldListPacketTest.java", "insertions": 127, "deletions": 0, "lines": 127}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/text/query/ComQueryPacketTest.java", "insertions": 185, "deletions": 0, "lines": 185}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/generic/AllMySQLGenericPacketTests.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/generic/EofPacketTest.java", "insertions": 66, "deletions": 0, "lines": 66}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/generic/ErrPacketTest.java", "insertions": 87, "deletions": 0, "lines": 87}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/generic/OKPacketTest.java", "insertions": 87, "deletions": 0, "lines": 87}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/handshake/AllMySQLHandshakeTests.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/handshake/AuthPluginDataTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/handshake/AuthorityHandlerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/handshake/ConnectionIdGeneratorTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/handshake/HandshakePacketTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/packet/handshake/HandshakeResponse41PacketTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select_pagination.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "OR\u8868\u8fbe\u5f0f\u4e0b\u4f1a\u51fa\u73b0\u91cd\u590d\u7ed3\u679c\u95ee\u9898", "body": "\u5047\u8bbe\u6709\u4e24\u4e2a\u5206\u8868\uff1atb0, tb1\uff1b \u6309\u7167id\u5b57\u6bb5\u53d6\u6a21\u3002\u73b0\u5728\u6709where\u67e5\u8be2\u6761\u4ef6 id = 0 or id = 2\uff0c\u5219\u5bfc\u81f4\u5728\u5206\u8868tb0\u4e0a\u6267\u884c\u4e24\u6b21\u8fd9\u6837\u7684\u6761\u4ef6\u67e5\u8be2\uff0c\u51fa\u73b0\u91cd\u590d\u7ed3\u679c\uff1a <0,2>, <0, 2>\n", "url": "https://github.com/apache/shardingsphere/issues/25", "user": "pingww", "labels": ["bug"], "created": "2016-03-02 07:28:57", "closed": "2016-03-14 10:09:41", "commits": {"75cdafccfeebe6e0001a74b3b985cad82530101a": {"commitGHEventType": "closed", "commitUser": "hanahmily"}, "ff44ebcb22edbd09e8f6b42e0395b195138bc4bd": {"commitGHEventType": "referenced", "commitUser": "beckhampu"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "75cdafccfeebe6e0001a74b3b985cad82530101a", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["b005981e1918e767ccc0e92739abe22eaff1d958"], "nameRev": "75cdafccfeebe6e0001a74b3b985cad82530101a tags/1.1.0~9", "commitMessage": "fix #25  OR\u8868\u8fbe\u5f0f\u4e0b\u4f1a\u51fa\u73b0\u91cd\u590d\u7ed3\u679c\u95ee\u9898\n", "commitDateTime": "2016-03-14 18:09:27", "authoredDateTime": "2016-03-14 18:09:27", "commitGitStats": [{"filePath": "sharding-jdbc-config-parent/sharding-jdbc-config-common/src/test/java/com/dangdang/ddframe/rdb/sharding/config/common/internal/TableRuleTest.java", "insertions": 24, "deletions": 24, "lines": 48}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/SQLExecutionUnit.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/SQLRouteEngine.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router/SQLRouteResult.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/router/AbstractBaseRouteSqlTest.java", "insertions": 8, "deletions": 10, "lines": 18}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/router/SelectSingleTableTest.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TableRuleTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.common.internal.TableRuleTest.testReturnMultiResult()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.common.internal.TableRuleTest.testLongValueAlgorithm()", "TOT": 20, "UPD": 10, "INS": 5, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.common.internal.TableRuleTest.testDoubleValueAlgorithm()", "TOT": 20, "UPD": 10, "INS": 5, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.common.internal.TableRuleTest.testDateValueAlgorithm()", "TOT": 12, "UPD": 6, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.common.internal.TableRuleTest.testDateValueToStringAlgorithm()", "TOT": 12, "UPD": 6, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.common.internal.TableRuleTest.testDateValueToDateAlgorithm()", "TOT": 8, "UPD": 4, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.common.internal.TableRuleTest.testInValueAlgorithm()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.common.internal.TableRuleTest.testNullRouteResult()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.common.internal.TableRuleTest.testDefaultStrategy()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.config.common.internal.TableRuleTest.testBindingTable()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SQLExecutionUnit.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLRouteEngine.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.routeSQL(com.dangdang.ddframe.rdb.sharding.parser.result.SQLParsedResult)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLRouteResult.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SQLRouteResult", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractBaseRouteSqlTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.AbstractBaseRouteSqlTest.assertMultipleTargets(java.lang.String,java.util.List,int,java.util.Collection,java.util.Collection)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SelectSingleTableTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SelectSingleTableTest.assertSelectWithInAndIntersection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.router.SelectSingleTableTest.assertSelectWithBetweenAndIntersection()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ff44ebcb22edbd09e8f6b42e0395b195138bc4bd", "commitGHEventType": "referenced", "commitUser": "beckhampu", "commitParents": ["2b0af723786ce3c530f6fa82ed9dbc57d416eb7a", "d4511ab2f428f382ede0d8e71c8684ee80f624a8"], "nameRev": "ff44ebcb22edbd09e8f6b42e0395b195138bc4bd tags/3.0.0.M4~78^2~26", "commitMessage": "Merge pull request #25 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-08-22 14:30:22", "authoredDateTime": "2018-08-22 14:30:22", "commitGitStats": [{"filePath": ".github/ISSUE_TEMPLATE", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": ".travis.yml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "README.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "README_ZH.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteCallback.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingExecuteEngine.java", "insertions": 37, "deletions": 32, "lines": 69}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/executor/ShardingGroupExecuteCallback.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/SQLExecuteCallback.java", "insertions": 12, "deletions": 10, "lines": 22}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/SQLExecuteTemplate.java", "insertions": 22, "deletions": 6, "lines": 28}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/StatementExecuteUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/event/overall/OverallExecutionEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/event/sql/DMLExecutionEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/event/sql/DQLExecutionEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/event/sql/SQLExecutionEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/event/sql/SQLExecutionEventFactory.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/result/MemoryQueryResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/result/StreamQueryResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/threadlocal/ExecutorDataMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc/src/main/java/io/shardingsphere/core/executor => sharding-core/src/main/java/io/shardingsphere/core/executor/sql}/threadlocal/ExecutorExceptionHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/ShardingMetaData.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataLoader.java", "insertions": 13, "deletions": 16, "lines": 29}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/config/ProxyBasicRule.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/config/jdbc/JdbcConfigurationEventBusInstance.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/config/jdbc/MasterSlaveConfigurationEventBusEvent.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/config/jdbc/ShardingConfigurationEventBusEvent.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/eventbus/ProxyEventBusEvent.java => sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/config/proxy/ProxyConfigurationEventBusEvent.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/config/proxy/ProxyConfigurationEventBusInstance.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/state/circuit/CircuitStateEventBusEvent.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/eventbus/ProxyEventBusInstance.java => sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/state/circuit/CircuitStateEventBusInstance.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/NamedDataSource.java => sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/state/disabled/DisabledStateEventBusEvent.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/orche/eventbus/state/disabled/DisabledStateEventBusInstance.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/AllTests.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/executor/AllExecutorTests.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/executor/fixture/EventCaller.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/executor/fixture/ExecutorTestUtil.java", "insertions": 71, "deletions": 0, "lines": 71}, {"filePath": "{sharding-jdbc => sharding-core}/src/test/java/io/shardingsphere/core/executor/threadlocal/ExecutorExceptionHandlerTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/src/test/resources/logback-test.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/OrchestrationFacade.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/OrchestrationMasterSlaveDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/OrchestrationProxyConfiguration.java", "insertions": 5, "deletions": 24, "lines": 29}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/OrchestrationShardingDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/config/ConfigMapListenerManager.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/config/ConfigurationListenerManager.java", "insertions": 25, "deletions": 21, "lines": 46}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/config/ConfigurationService.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/listener/ListenerFactory.java", "insertions": 17, "deletions": 21, "lines": 38}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/listener/ListenerManager.java", "insertions": 6, "deletions": 11, "lines": 17}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/state/datasource/DataSourceListenerManager.java", "insertions": 8, "deletions": 31, "lines": 39}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/state/datasource/DataSourceService.java", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/state/instance/InstanceListenerManager.java", "insertions": 15, "deletions": 25, "lines": 40}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/yaml/converter/ProxyConfigurationConverter.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/internal/AllInternalTests.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingsphere/transaction/api/AbstractSoftTransaction.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingsphere/transaction/api/SoftTransactionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingsphere/transaction/bed/sync/BestEffortsDeliveryListener.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/pom.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/{type => }/batch/BatchPreparedStatementExecutor.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/{type => }/batch/BatchPreparedStatementUnit.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/{type => }/prepared/PreparedStatementExecutor.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/{type => }/prepared/PreparedStatementUnit.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/{type => }/statement/StatementExecutor.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/{type => }/statement/StatementUnit.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractDataSourceAdapter.java", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/ShardingContext.java", "insertions": 146, "deletions": 10, "lines": 156}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/connection/ShardingConnection.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 103, "deletions": 10, "lines": 113}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSource.java", "insertions": 27, "deletions": 46, "lines": 73}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 71, "deletions": 76, "lines": 147}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement/ShardingStatement.java", "insertions": 55, "deletions": 42, "lines": 97}, {"filePath": "{sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/jdbc => sharding-jdbc/src/main/java/io/shardingsphere/core/orche}/connection/CircuitBreakerConnection.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "{sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/jdbc => sharding-jdbc/src/main/java/io/shardingsphere/core/orche}/datasource/CircuitBreakerDataSource.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/jdbc => sharding-jdbc/src/main/java/io/shardingsphere/core/orche}/metadata/CircuitBreakerDatabaseMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/jdbc => sharding-jdbc/src/main/java/io/shardingsphere/core/orche}/resultset/CircuitBreakerResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/jdbc => sharding-jdbc/src/main/java/io/shardingsphere/core/orche}/resultset/CircuitBreakerResultSetMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/jdbc => sharding-jdbc/src/main/java/io/shardingsphere/core/orche}/statement/CircuitBreakerPreparedStatement.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "{sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/jdbc => sharding-jdbc/src/main/java/io/shardingsphere/core/orche}/statement/CircuitBreakerStatement.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/AllUnitTests.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/common/base/AbstractSQLTest.java", "insertions": 1, "deletions": 14, "lines": 15}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/{type => }/AbstractBaseExecutorTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/AllExecutorTests.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/{type => }/BatchPreparedStatementExecutorTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/{type => }/PreparedStatementExecutorTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/{type => }/StatementExecutorTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/fixture/ExecutorTestUtil.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/fixture/TestDMLExecutionEventListener.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/fixture/TestDQLExecutionEventListener.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/fixture/TestOverallExecutionEventListener.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/connection/ShardingConnectionTest.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSourceTest.java", "insertions": 25, "deletions": 14, "lines": 39}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/statement/ShardingPreparedStatementTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/internal/jdbc/AllJdbcTests.java => sharding-jdbc/src/test/java/io/shardingsphere/core/orche/AllOrcheTests.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "{sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/internal/jdbc => sharding-jdbc/src/test/java/io/shardingsphere/core/orche}/connection/CircuitBreakerConnectionTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "{sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/internal/jdbc => sharding-jdbc/src/test/java/io/shardingsphere/core/orche}/datasource/CircuitBreakerDataSourceTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "{sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/internal/jdbc => sharding-jdbc/src/test/java/io/shardingsphere/core/orche}/metadata/CircuitBreakerDatabaseMetaDataTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/BaseIntegrateTest.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-jdbc/src/test/resources/logback-test.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/ShardingTags.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/execution/OverallExecuteEventListener.java", "insertions": 9, "deletions": 8, "lines": 17}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/execution/SQLExecuteEventListener.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/merger/MergeEventListener.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/routing/RouteEventListener.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/MergeEventListenerTest.java", "insertions": 161, "deletions": 0, "lines": 161}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/SqlRoutingEventListenerTest.java", "insertions": 154, "deletions": 0, "lines": 154}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/fixture/ShardingContextBuilder.java", "insertions": 16, "deletions": 3, "lines": 19}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/listener/execution/ExecuteEventListenerTest.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/Bootstrap.java", "insertions": 23, "deletions": 11, "lines": 34}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/BackendExecutorContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/SQLExecuteEngine.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/JDBCBackendHandler.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/datasource/JDBCBackendDataSource.java", "insertions": 46, "deletions": 5, "lines": 51}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/JDBCExecuteEngine.java", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/ProxyStatementExecuteUnit.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/memory/ConnectionStrictlyExecuteEngine.java", "insertions": 60, "deletions": 85, "lines": 145}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/memory/MemoryQueryResult.java", "insertions": 0, "deletions": 133, "lines": 133}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/stream/MemoryStrictlyExecuteEngine.java", "insertions": 52, "deletions": 58, "lines": 110}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/stream/StreamQueryResult.java", "insertions": 0, "deletions": 216, "lines": 216}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/NettyBackendHandler.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/RuleRegistry.java", "insertions": 63, "deletions": 14, "lines": 77}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/YamlProxyConfiguration.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/ShardingProxy.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/binary/execute/NullBitmap.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["75cdafccfeebe6e0001a74b3b985cad82530101a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 5, "lines": 15, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 7.0, "UPD": 3.0, "INS": 4.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/router"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit", "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine.routeSQL(com.dangdang.ddframe.rdb.sharding.parser.result.SQLParsedResult)", "com.dangdang.ddframe.rdb.sharding.router.SQLRouteEngine", "com.dangdang.ddframe.rdb.sharding.router.SQLRouteResult"]}, {"title": "sum\u548cavg\u51fd\u6570\uff0c\u4e0d\u52a0\u522b\u540d\u4e0d\u6267\u884cmerger\uff0c\u52a0\u4e86\u7a7a\u6307\u9488\u5f02\u5e38", "body": "AccumulationAggregationUnit\u548cAvgAggregationUnit\u7c7b\u7684doMerger\u51fd\u6570\u7684\u5165\u53c2\u5728\u67e5\u8be2\u7ed3\u679c\u4e3a\u7a7a\u7684\u65f6\u5019\uff0c\u4e3anull\uff0c\u9700\u8981\u52a0\u975e\u7a7a\u5224\u65ad\n", "url": "https://github.com/apache/shardingsphere/issues/19", "user": "tong549761863", "labels": ["bug"], "created": "2016-02-26 07:16:44", "closed": "2016-03-03 12:02:57", "commits": {"8670ede675b681e2b413a4ab657e3a50d50d1f58": {"commitGHEventType": "closed", "commitUser": "hanahmily"}, "ff2c1371e6eeb15fab7ba88ed2fbd8e57af648f3": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "8670ede675b681e2b413a4ab657e3a50d50d1f58", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["fc8dc4284e2802245a778dfb50b1c6776c0fcef3"], "nameRev": "8670ede675b681e2b413a4ab657e3a50d50d1f58 tags/1.0.1~7", "commitMessage": "fix #19 sum\u548cavg\u51fd\u6570\uff0c\u4e0d\u52a0\u522b\u540d\u4e0d\u6267\u884cmerger\uff0c\u52a0\u4e86\u7a7a\u6307\u9488\u5f02\u5e38\n", "commitDateTime": "2016-03-03 19:51:00", "authoredDateTime": "2016-03-03 19:51:00", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/AccumulationAggregationUnit.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/AggregationInvokeHandler.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/AggregationUnitFactory.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/AvgAggregationUnit.java", "insertions": 14, "deletions": 3, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/ComparableAggregationUnit.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/ResultSetAggregationValue.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/common/AbstractMergerInvokeHandler.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/common/ResultSetUtil.java", "insertions": 28, "deletions": 1, "lines": 29}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/metrics/ThreadLocalObjectContainer.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/ParseContext.java", "insertions": 10, "deletions": 20, "lines": 30}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser/visitor/basic/mysql/AbstractMySQLVisitor.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/util/SQLUtil.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/AllTests.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/AllIntegrateTests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/db/SelectAggregateShardingDataBasesOnlyTest.java", "insertions": 73, "deletions": 1, "lines": 74}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/nullable/AbstractShardingNullableDBUnitTest.java", "insertions": 78, "deletions": 0, "lines": 78}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/integrate/nullable/SelectAggregateShardingNullableTest.java", "insertions": 120, "deletions": 0, "lines": 120}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/AllMergerTest.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/ResultSetUtilTest.java", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/AggregationResultSetTest.java", "insertions": 8, "deletions": 29, "lines": 37}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/AvgAggregationUnitTest.java", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/ComparableAggregationUnitTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/NullableAggregationResultSetTest.java", "insertions": 98, "deletions": 0, "lines": 98}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/fixture/MergerTestUtil.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/fixture/MockResultSet.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/metrics/ThreadLocalObjectContainerTest.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/util/AllUtilTest.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/util/SQLUtilTest.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/nullable/init/nullable_0.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/nullable/init/nullable_1.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/nullable/init/nullable_2.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/nullable/init/nullable_3.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/nullable/init/nullable_4.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/nullable/init/nullable_5.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/nullable/init/nullable_6.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/nullable/init/nullable_7.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/nullable/init/nullable_8.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/dataset/nullable/init/nullable_9.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/schema/nullable/nullable_0.sql", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/schema/nullable/nullable_1.sql", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/schema/nullable/nullable_2.sql", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/schema/nullable/nullable_3.sql", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/schema/nullable/nullable_4.sql", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/schema/nullable/nullable_5.sql", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/schema/nullable/nullable_6.sql", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/schema/nullable/nullable_7.sql", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/schema/nullable/nullable_8.sql", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/schema/nullable/nullable_9.sql", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc-doc/content/post/release_notes.md", "insertions": 8, "deletions": 4, "lines": 12}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "ff2c1371e6eeb15fab7ba88ed2fbd8e57af648f3", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["2e4c47f884528d8375e7d9ab5b855713eaad7d09", "18fcde4ca1e52d13a4a2a7c55e894347de27dc67"], "nameRev": "ff2c1371e6eeb15fab7ba88ed2fbd8e57af648f3 tags/3.0.0.M3~201^2~6", "commitMessage": "Merge pull request #19 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-08-14 13:50:27", "authoredDateTime": "2018-08-14 13:50:27", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/{ => properties}/ShardingProperties.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/{ => properties}/ShardingPropertiesConstant.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/transaction/TransactionOperationType.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/{ => transaction}/TransactionType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/constant/ShardingPropertiesConstantTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/constant/ShardingPropertiesTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/io/shardingsphere/jdbc/spring/boot/type/OrchestrationSpringBootShardingTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/OrchestrationMasterSlaveNamespaceTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/OrchestrationShardingNamespaceTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/java/io/shardingsphere/jdbc/spring/boot/type/SpringBootShardingTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/jdbc/spring/ShardingNamespaceTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 21, "deletions": 26, "lines": 47}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractDataSourceAdapter.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSource.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/listener/JDBCListenerRegister.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSourceTest.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/JDBCBackendHandler.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/datasource/JDBCBackendDataSource.java", "insertions": 10, "deletions": 13, "lines": 23}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/datasource/JDBCBackendDataSourceFactory.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/datasource/JDBCRawBackendDataSourceFactory.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/datasource/JDBCXABackendDataSourceFactory.java", "insertions": 10, "deletions": 32, "lines": 42}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/memory/ConnectionStrictlyExecuteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/stream/MemoryStrictlyExecuteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/transaction/DefaultTransactionEngine.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/transaction/TransactionEngine.java", "insertions": 3, "deletions": 30, "lines": 33}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/transaction/TransactionEngineFactory.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/transaction/XATransactionEngine.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/transaction/XaTransactionEngine.java", "insertions": 0, "deletions": 59, "lines": 59}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/ProxyTableMetaDataConnectionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/RuleRegistry.java", "insertions": 5, "deletions": 11, "lines": 16}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/common/executor/ExecutorGroup.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/listener/ProxyListenerRegister.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/text/query/ComQueryPacket.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/resources/META-INF/services/io.shardingsphere.transaction.api.xa.XATransactionManager", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-proxy/src/main/resources/conf/config.yaml", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-proxy/src/main/resources/conf/jta.properties", "insertions": 0, "deletions": 17, "lines": 17}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/{common/TransactionContextHolder.java => TransactionTypeHolder.java}", "insertions": 17, "deletions": 14, "lines": 31}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/api/ShardingTransactionManagerFactory.java", "insertions": 0, "deletions": 51, "lines": 51}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/api/xa/AtomikosTransactionManager.java", "insertions": 0, "deletions": 83, "lines": 83}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/common/TransactionContext.java", "insertions": 0, "deletions": 42, "lines": 42}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/common/event/TransactionEvent.java", "insertions": 0, "deletions": 53, "lines": 53}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/common/event/TransactionEventFactory.java", "insertions": 0, "deletions": 50, "lines": 50}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/common/event/XaTransactionEvent.java", "insertions": 0, "deletions": 44, "lines": 44}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/common/listener/TransactionListener.java", "insertions": 0, "deletions": 66, "lines": 66}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/TCLType.java => sharding-transaction/src/main/java/io/shardingsphere/transaction/event/ShardingTransactionEvent.java", "insertions": 12, "deletions": 4, "lines": 16}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/{common/event => event/local}/LocalTransactionEvent.java", "insertions": 10, "deletions": 18, "lines": 28}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/{api/xa/XATransactionManager.java => event/xa/XATransactionEvent.java}", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/{api/xa/AtomikosUserTransaction.java => listener/ShardingTransactionListener.java}", "insertions": 17, "deletions": 14, "lines": 31}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/listener/ShardingTransactionListenerAdapter.java", "insertions": 55, "deletions": 0, "lines": 55}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/listener/local/LocalTransactionListener.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/listener/xa/XATransactionListener.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/{api => manager}/ShardingTransactionManager.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/ShardingTransactionManagerRegistry.java", "insertions": 74, "deletions": 0, "lines": 74}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/{api => manager}/base/SagaTransactionManager.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/{api => manager}/local/LocalTransactionManager.java", "insertions": 11, "deletions": 15, "lines": 26}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/XATransactionManager.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/{api => manager}/xa/XATransactionManagerSPILoader.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/manager/xa/atomikos/AtomikosTransactionManager.java", "insertions": 122, "deletions": 0, "lines": 122}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["8670ede675b681e2b413a4ab657e3a50d50d1f58"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 134, "deletions": 37, "lines": 171, "gitFilesChange": 13}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/metrics", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/parser", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/util", "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/jdbc"]}, {"title": "\u67e5\u8be2Count\u65f6\uff0c\u4f7f\u7528getObject()\u53d6\u6570\u4f1a\u62a5\u5f02\u5e38", "body": "**\u73b0\u8c61\uff1a**\nSQL\uff1a `select count(*) as cnt from tbl;`\n\n\u5982\u679c\u6211\u4f7f\u7528 `ResultSet.getLong()` \u6216 `getInt()`\u90fd\u53ef\u4ee5\u3002\n\u4f46\u662f\u5982\u679c\u6211\u4f7f\u7528 `getObject()`\uff0c\u5c31\u4f1a\u62a5\u5f02\u5e38\uff1a\n`ShardingJdbcException(\"Unsupported data type:%s\", convertType)`\n\n**\u539f\u56e0\uff1a**\n`s-jdbc`\u5728\u805a\u5408`Merge`\u65f6\uff0c\u4f1a\u6839\u636e\u8c03\u7528\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u6765\u8f6c\u6362`merge`\u7684\u7ed3\u679c\uff0c\u5f53\u8c03\u7528`getObject()`\u53d6`Number`\u7c7b\u578b\u7ed3\u679c\u65f6\uff0c\u5c31\u9700\u8981\u5c06`Number`\u8f6c\u4e3a`Object`\u4e86\uff0c\u73b0\u5728`s-jdbc`\u76f4\u63a5\u62a5\u4e0d\u652f\u6301\u7684\u7c7b\u578b\u3002\n\n**\u4fee\u6539\u65b9\u6cd5\uff1a**\n\u5bf9\u4e8e\u8fd4\u56de\u7c7b\u578b\u4e3a`Object`\u65f6\uff0c\u76f4\u63a5\u5c06`Number`\u503c\u8fd4\u56de\u3002\n\n\u4ee3\u7801\u4f4d\u7f6e\uff1a\n`com/dangdang/ddframe/rdb/sharding/merger/common/ResultSetUtil.java`\n`convertNumberValue`\u65b9\u6cd5\uff1a\n\u6211\u7ed9\u589e\u52a0\u4e86\n\n```\ncase \"java.lang.Object\":\n              return value;\n```\n\n\u5728\u6211\u672c\u5730\u6d4b\u8bd5\u6ca1\u6709\u95ee\u9898\u4e86\u3002\n", "url": "https://github.com/apache/shardingsphere/issues/18", "user": "wangda", "labels": ["bug"], "created": "2016-02-25 17:54:41", "closed": "2016-02-26 10:40:49", "commits": {"b78ca0541ba80474b7cb2b26e1b44f1d307d9bed": {"commitGHEventType": "closed", "commitUser": "hanahmily"}, "2e4c47f884528d8375e7d9ab5b855713eaad7d09": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b78ca0541ba80474b7cb2b26e1b44f1d307d9bed", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["650bf54f282e467e28b03b709cc1aca2198c95fc"], "nameRev": "b78ca0541ba80474b7cb2b26e1b44f1d307d9bed tags/1.0.1~16", "commitMessage": "fix #18\n", "commitDateTime": "2016-02-26 15:16:37", "authoredDateTime": "2016-02-26 15:16:37", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/common/ResultSetUtil.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/ResultSetUtilTest.java", "insertions": 10, "deletions": 10, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResultSetUtil.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.common.ResultSetUtil.convertNumberValue(java.lang.Object,java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ResultSetUtilTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.ResultSetUtilTest.assertConvertValueSuccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2e4c47f884528d8375e7d9ab5b855713eaad7d09", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["afda88848f6f6202a3514b051a357687b54706d5", "46da5d2fe6f7a6b80830cb601191d3c8431373f3"], "nameRev": "2e4c47f884528d8375e7d9ab5b855713eaad7d09 tags/3.0.0.M3~201^2~7", "commitMessage": "Merge pull request #18 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-08-13 09:50:13", "authoredDateTime": "2018-08-13 09:50:13", "commitGitStats": [{"filePath": ".github/ISSUE_TEMPLATE", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "CODE_OF_CONDUCT.md", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "CONTRIBUTING.md", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "README.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "README_ZH.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "RELEASE-NOTES.md", "insertions": 97, "deletions": 54, "lines": 151}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 84, "deletions": 42, "lines": 126}, {"filePath": "pom.xml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/ShardingConstant.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/ShardingPropertiesConstant.java", "insertions": 14, "deletions": 3, "lines": 17}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/TransactionType.java", "insertions": 2, "deletions": 42, "lines": 44}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dal/DALMergeEngine.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dal/show/LogicTablesMergedResult.java", "insertions": 94, "deletions": 0, "lines": 94}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dal/show/ShowCreateTableMergedResult.java", "insertions": 6, "deletions": 47, "lines": 53}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dal/show/ShowTableStatusMergedResult.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dal/show/ShowTablesMergedResult.java", "insertions": 2, "deletions": 53, "lines": 55}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dql/common/DecoratorMergedResult.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dql/common/MemoryMergedResult.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/merger/dql/common/StreamMergedResult.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/ShardingMetaData.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/datasource/ShardingDataSourceMetaData.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataConnectionManager.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataInitializer.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/table/executor/TableMetaDataLoader.java", "insertions": 46, "deletions": 41, "lines": 87}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/lexer/dialect/mysql/MySQLKeyword.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/DistinctClauseParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/GroupByClauseParser.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertDuplicateKeyUpdateClauseParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertIntoClauseParser.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertSetClauseParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertValuesClauseParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/OrderByClauseParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectListClauseParser.java", "insertions": 4, "deletions": 10, "lines": 14}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/SelectRestClauseParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/WhereClauseParser.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/expression/AliasExpressionParser.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/constant/DerivedColumn.java", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/MySQLDistinctClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/MySQLGroupByClauseParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/MySQLInsertIntoClauseParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/MySQLInsertValuesClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/MySQLOrderByClauseParser.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/MySQLSelectListClauseParser.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/MySQLWhereClauseParser.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/clause/facade/MySQLSelectClauseParserFacade.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLAlterTableParser.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLCreateIndexParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLCreateTableParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLDeleteParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLDropIndexParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLShowParser.java", "insertions": 56, "deletions": 28, "lines": 84}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLTruncateTableParser.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/sql/MySQLUpdateParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/constant/PacketHeader.java => sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/mysql/statement/ShowTableStatusStatement.java", "insertions": 5, "deletions": 16, "lines": 21}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/OracleDistinctClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/OracleGroupByClauseParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/OracleInsertDuplicateKeyUpdateClauseParser.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/OracleInsertIntoClauseParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/OracleInsertSetClauseParser.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/OracleInsertValuesClauseParser.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/OracleSelectListClauseParser.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/OracleSelectRestClauseParser.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/OracleWhereClauseParser.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/facade/OracleInsertClauseParserFacade.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/clause/facade/OracleSelectClauseParserFacade.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleAlterTableParser.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleCreateIndexParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleCreateTableParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleDeleteParser.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleDropIndexParser.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleDropTableParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleTruncateTableParser.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/oracle/sql/OracleUpdateParser.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/PostgreSQLDistinctClauseParser.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/PostgreSQLGroupByClauseParser.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/PostgreSQLInsertDuplicateKeyUpdateClauseParser.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/PostgreSQLInsertIntoClauseParser.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/PostgreSQLInsertSetClauseParser.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/PostgreSQLInsertValuesClauseParser.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/PostgreSQLSelectListClauseParser.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/PostgreSQLWhereClauseParser.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLDeleteClauseParserFacade.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLInsertClauseParserFacade.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLSelectClauseParserFacade.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLUpdateClauseParserFacade.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLCreateTableParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLDeleteParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLDropIndexParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLDropTableParser.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/postgresql/sql/PostgreSQLUpdateParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/clause/SQLServerDistinctClauseParser.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/clause/SQLServerGroupByClauseParser.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/clause/SQLServerInsertDuplicateKeyUpdateClauseParser.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/clause/SQLServerInsertIntoClauseParser.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/clause/SQLServerInsertSetClauseParser.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/clause/SQLServerInsertValuesClauseParser.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/clause/SQLServerSelectListClauseParser.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/clause/SQLServerWhereClauseParser.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/clause/facade/SQLServerInsertClauseParserFacade.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/clause/facade/SQLServerSelectClauseParserFacade.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerAlterTableParser.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerCreateIndexParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerCreateTableParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerDropIndexParser.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerDropTableParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerTruncateTableParser.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/dialect/sqlserver/sql/SQLServerUpdateParser.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/AbstractSQLStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/alter/AlterUserParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/create/CreateUserParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/deny/DenyUserParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/drop/DropUserParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/grant/GrantUserParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/rename/RenameUserParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dcl/revoke/RevokeUserParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/DDLStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/alter/table/AbstractAlterTableParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/create/index/AbstractCreateIndexParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/create/table/AbstractCreateTableParser.java", "insertions": 60, "deletions": 2, "lines": 62}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/create/table/CreateTableStatement.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/drop/index/AbstractDropIndexParser.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/drop/table/AbstractDropTableParser.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/constant/AuthType.java => sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/drop/table/DropTableStatement.java", "insertions": 7, "deletions": 29, "lines": 36}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/ddl/truncate/table/AbstractTruncateTableParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dml/delete/AbstractDeleteParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dml/update/AbstractUpdateParser.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dql/select/AbstractSelectParser.java", "insertions": 18, "deletions": 14, "lines": 32}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rewrite/SQLBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rule/ShardingRule.java", "insertions": 0, "deletions": 17, "lines": 17}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rule/TableRule.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/transaction/spi/TransactionEventHolder.java", "insertions": 0, "deletions": 48, "lines": 48}, {"filePath": "{sharding-jdbc => sharding-core}/src/main/java/io/shardingsphere/core/util/EventBusInstance.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/yaml/sharding/YamlTableRuleConfiguration.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/api/AllApiTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/constant/AllConstantsTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/fixture/OrderDatabaseHintShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/hint/AllHintTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/keygen/AllKeygenTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/keygen/KeyGeneratorFactoryTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/keygen/fixture/IncrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/merger/AllMergerTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/merger/dal/show/ShowCreateTableMergedResultTest.java", "insertions": 15, "deletions": 5, "lines": 20}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/merger/dql/groupby/aggregation/AllAggregationTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/metadata/AllMetaDataTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/metadata/datasource/ShardingDataSourceMetaDataTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/optimizer/AllOptimizerTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/AllParsingTests.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/integrate/AllParsingIntegrateTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/integrate/asserts/SQLStatementAssert.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/integrate/asserts/meta/TableMetaDataAssert.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/integrate/jaxb/meta/ExpectedTableMetaData.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/integrate/jaxb/root/ParserResult.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/lexer/AllLexerTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/parser/constant/DerivedColumnTest.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/parser/sql/AllSQLTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/parser/sql/AllStatementParserTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/parser/sql/DeleteStatementParserTest.java", "insertions": 2, "deletions": 72, "lines": 74}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/rewrite/AllRewriteTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/routing/AllRoutingTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/rule/AllRuleTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/util/AllUtilTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/yaml/AllYamlTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/resources/parser/create.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-core/src/test/resources/parser/show.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration-spring/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingsphere/jdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingsphere/jdbc/orchestration/spring/boot/util/PropertyUtil.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/io/shardingsphere/jdbc/spring/boot/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/datasource/OrchestrationMasterSlaveDataSourceFactoryBean.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/datasource/OrchestrationShardingDataSourceFactoryBean.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/namespace/parser/AbstractOrchestrationBeanDefinitionParser.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/namespace/parser/OrchestrationMasterSlaveDataSourceBeanDefinitionParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/namespace/parser/OrchestrationShardingDataSourceBeanDefinitionParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/namespace/parser/ShardingStrategyBeanDefinition.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingsphere/jdbc/orchestration/spring/namespace/parser/ShardingStrategyBeanDefinitionParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/OrchestrationShardingMasterSlaveNamespaceTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/algorithm/DefaultComplexKeysShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/algorithm/DefaultHintShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/algorithm/PreciseModuloDatabaseShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/algorithm/PreciseModuloTableShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/algorithm/RangeModuloDatabaseShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingsphere/jdbc/orchestration/spring/algorithm/RangeModuloTableShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/pom.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/OrchestrationMasterSlaveDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/OrchestrationShardingDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/jdbc/statement/CircuitBreakerStatement.java", "insertions": 1, "deletions": 10, "lines": 11}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/yaml/converter/ShardingConfigurationConverter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/yaml/representer/DataSourceRepresenter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/yaml/representer/MasterSlaveConfigurationRepresenter.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/yaml/representer/ProxyConfigurationRepresenter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/internal/yaml/representer/ShardingConfigurationRepresenter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/NewZookeeperRegistryCenter.java", "insertions": 34, "deletions": 38, "lines": 72}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/action/ContentionCallback.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/action/IAction.java", "insertions": 25, "deletions": 25, "lines": 50}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/action/IClient.java", "insertions": 30, "deletions": 23, "lines": 53}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/action/IExecStrategy.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/action/IGroupAction.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/action/IProvider.java", "insertions": 27, "deletions": 27, "lines": 54}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/action/ITransactionProvider.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/cache/CacheStrategy.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/cache/PathNode.java", "insertions": 12, "deletions": 37, "lines": 49}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/cache/PathResolve.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/cache/PathStatus.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/cache/PathTree.java", "insertions": 60, "deletions": 73, "lines": 133}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/election/LeaderElection.java", "insertions": 26, "deletions": 31, "lines": 57}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/retry/AsyncRetryCenter.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/retry/DelayPolicyExecutor.java", "insertions": 8, "deletions": 16, "lines": 24}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/retry/DelayRetryPolicy.java", "insertions": 7, "deletions": 16, "lines": 23}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/retry/RetryCallable.java", "insertions": 11, "deletions": 12, "lines": 23}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/retry/RetryResultCallable.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/retry/RetryThread.java", "insertions": 11, "deletions": 12, "lines": 23}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/utility/PathUtil.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/utility/ZookeeperConstants.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/CacheClient.java", "insertions": 16, "deletions": 16, "lines": 32}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/ClientFactory.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/UsualClient.java", "insertions": 30, "deletions": 30, "lines": 60}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/BaseClient.java", "insertions": 14, "deletions": 13, "lines": 27}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/BaseClientFactory.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/BaseContext.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/BaseOperation.java", "insertions": 9, "deletions": 14, "lines": 23}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/Holder.java", "insertions": 24, "deletions": 28, "lines": 52}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/operation/CreateAllNeedOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/operation/CreateCurrentOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/operation/DeleteAllChildrenOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/operation/DeleteCurrentBranchOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/operation/DeleteCurrentOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/operation/UpdateOperation.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/provider/BaseProvider.java", "insertions": 29, "deletions": 33, "lines": 62}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/provider/TransactionProvider.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/section/ClientContext.java", "insertions": 10, "deletions": 13, "lines": 23}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/section/ClientTask.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/section/Connection.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/section/StrategyType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/section/WatcherCreator.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/section/ZookeeperEventListener.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/strategy/AsyncRetryStrategy.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/strategy/BaseStrategy.java", "insertions": 6, "deletions": 8, "lines": 14}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/strategy/ContentionStrategy.java", "insertions": 35, "deletions": 28, "lines": 63}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/strategy/SyncRetryStrategy.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/strategy/TransactionContendStrategy.java", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/strategy/UsualStrategy.java", "insertions": 26, "deletions": 26, "lines": 52}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/transaction/BaseTransaction.java", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/transaction/{ZKTransaction.java => ZooKeeperTransaction.java}", "insertions": 19, "deletions": 19, "lines": 38}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/internal/AllInternalTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/internal/jdbc/AllJdbcTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/retry/TestCallable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/retry/TestResultCallable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/SyncRetryStrategyTest.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/BaseClientTest.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/BaseTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/TestClient.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/TestHolder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/reg/newzk/client/zookeeper/base/TestSupport.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/yaml/AllYamlTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/yaml/fixture/MultiAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/yaml/fixture/SingleAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-plugin/pom.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-plugin/src/test/java/io/shardingsphere/plugin/keygen/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/io/shardingsphere/jdbc/spring/boot/SpringBootConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/io/shardingsphere/jdbc/spring/boot/util/PropertyUtil.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/java/io/shardingsphere/jdbc/spring/boot/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/java/io/shardingsphere/jdbc/spring/boot/type/SpringBootMasterSlaveTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/java/io/shardingsphere/jdbc/spring/boot/type/SpringBootShardingTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/resources/application-masterslave.properties", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/test/resources/application-sharding.properties", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/io/shardingsphere/jdbc/spring/namespace/parser/MasterSlaveDataSourceBeanDefinitionParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/io/shardingsphere/jdbc/spring/namespace/parser/ShardingDataSourceBeanDefinitionParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/io/shardingsphere/jdbc/spring/namespace/parser/ShardingStrategyBeanDefinition.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/main/java/io/shardingsphere/jdbc/spring/namespace/parser/ShardingStrategyBeanDefinitionParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/jdbc/spring/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/jdbc/spring/algorithm/DefaultComplexKeysShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/jdbc/spring/algorithm/DefaultHintShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/jdbc/spring/algorithm/PreciseModuloDatabaseShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/jdbc/spring/algorithm/PreciseModuloTableShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/jdbc/spring/algorithm/RangeModuloDatabaseShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/java/io/shardingsphere/jdbc/spring/algorithm/RangeModuloTableShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/resources/META-INF/rdb/datasource/dataSource.xml", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-namespace/src/test/resources/META-INF/rdb/datasource/masterSlaveDataSource.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc-transaction-parent/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-async-job/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-async-job/src/main/java/io/shardingsphere/transaction/job/BASETransactionJobBootStrap.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingsphere/transaction/datasource/impl/MemoryTransactionLogDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingsphere/transaction/datasource/impl/RdbTransactionLogDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingsphere/transaction/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingsphere/transaction/integrate/AllIntegrateTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingsphere/transaction/integrate/storage/AbstractTransactionLogStorageOperationsTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingsphere/transaction/integrate/storage/RdbTransactionLogStorageOperationsTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingsphere/transaction/storage/AllStorageTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/test/java/io/shardingsphere/transaction/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/pom.xml", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/ExecutorEngine.java", "insertions": 31, "deletions": 64, "lines": 95}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/type/connection/ConnectionStrictlyExecutorEngine.java", "insertions": 105, "deletions": 0, "lines": 105}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/type/connection/MemoryQueryResult.java", "insertions": 134, "deletions": 0, "lines": 134}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/type/memory/MemoryStrictlyExecutorEngine.java", "insertions": 87, "deletions": 0, "lines": 87}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/{merger/JDBCQueryResult.java => executor/type/memory/StreamQueryResult.java}", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 20, "deletions": 11, "lines": 31}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractDataSourceAdapter.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractMasterSlavePreparedStatementAdapter.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractResultSetAdapter.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractShardingPreparedStatementAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractStatementAdapter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/WrapperAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/ShardingContext.java", "insertions": 3, "deletions": 33, "lines": 36}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSource.java", "insertions": 38, "deletions": 14, "lines": 52}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/resultset/GeneratedKeysResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/resultset/GeneratedKeysResultSetMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/resultset/ShardingResultSetMetaData.java", "insertions": 147, "deletions": 0, "lines": 147}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 53, "deletions": 17, "lines": 70}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/statement/ShardingStatement.java", "insertions": 54, "deletions": 15, "lines": 69}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/transaction/TransactionLoader.java", "insertions": 0, "deletions": 69, "lines": 69}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/metadata/{DataSourceMapTableMetaDataConnectionManager.java => JDBCTableMetaDataConnectionManager.java}", "insertions": 2, "deletions": 7, "lines": 9}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/metadata/ShardingConnectionTableMetaDataConnectionManager.java", "insertions": 0, "deletions": 48, "lines": 48}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/unsupported/AbstractUnsupportedGeneratedKeysResultSet.java", "insertions": 36, "deletions": 47, "lines": 83}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/unsupported/AbstractUnsupportedOperationResultSet.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/listener/JDBCListenerRegister.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/AllUnitTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/api/AllApiTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/common/base/AbstractSQLTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/common/base/AbstractShardingJDBCDatabaseAndTableTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/AllExecutorTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/type/AbstractBaseExecutorTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/type/BatchPreparedStatementExecutorTest.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/type/PreparedStatementExecutorTest.java", "insertions": 0, "deletions": 14, "lines": 14}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/type/StatementExecutorTest.java", "insertions": 0, "deletions": 14, "lines": 14}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/fixture/IncrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/AllJDBCTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/JDBCTestSQL.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/adapter/AllAdapterTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/AllCoreTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/connection/ShardingConnectionTest.java", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/unsupported/AllUnsupportedTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/util/JDBCTestSQL.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/util/AllUtilTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/AllIntegrateTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/cases/assertion/IntegrateTestCasesLoader.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/BaseIntegrateTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/BatchIntegrateTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/dcl/AllDCLTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/dcl/BaseDCLIntegrateTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/ddl/AllDDLTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/ddl/BaseDDLIntegrateTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/dml/AllDMLTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/dml/BaseDMLIntegrateTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/dql/AllDQLTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/dql/BaseDQLIntegrateTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/util/IntegrateTestParameters.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/env/EnvironmentPath.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/env/datasource/DataSourceUtil.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/fixture/PreciseModuloAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_avg.xml", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_group_by_with_avg.xml", "insertions": 0, "deletions": 28, "lines": 28}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_group_by_without_grouped_column.xml", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_order_by_desc_and_index_asc.xml", "insertions": 0, "deletions": 90, "lines": 90}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_order_by_with_date.xml", "insertions": 0, "deletions": 90, "lines": 90}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_pagination_with_row_number_and_limit.xml", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/db/select_with_expression.xml", "insertions": 0, "deletions": 46, "lines": 46}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_avg.xml", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_avg.xml", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_without_grouped_column.xml", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_pagination_with_row_number_and_limit.xml", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/dbtbl_with_masterslave/select_with_expression.xml", "insertions": 0, "deletions": 106, "lines": 106}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_avg.xml", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_group_by_with_avg.xml", "insertions": 0, "deletions": 10, "lines": 10}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_group_by_without_grouped_column.xml", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_order_by_desc_and_index_asc.xml", "insertions": 0, "deletions": 50, "lines": 50}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_order_by_with_date.xml", "insertions": 0, "deletions": 50, "lines": 50}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_pagination_with_row_number_and_limit.xml", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/dql/dataset/tbl/select_with_expression.xml", "insertions": 0, "deletions": 26, "lines": 26}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dcl/dcl-integrate-test-cases.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/ddl/dataset/alter_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/ddl/dataset/create_index.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/ddl/dataset/create_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/ddl/dataset/create_temporary_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/ddl/dataset/create_unique_index.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/ddl/dataset/empty_log.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/ddl/dataset/empty_temp_log.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/ddl/ddl-integrate-test-cases.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/db/batch_insert_for_order.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/db/batch_insert_with_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/db/batch_insert_without_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/db/delete_with_sharding_value.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/db/delete_without_sharding_value.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/db/insert_for_order_1.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/db/insert_for_order_2.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/db/insert_with_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/db/insert_without_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/db/update.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/dbtbl_with_masterslave/batch_insert_for_order.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/dbtbl_with_masterslave/batch_insert_with_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/dbtbl_with_masterslave/batch_insert_without_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/dbtbl_with_masterslave/delete_with_sharding_value.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/dbtbl_with_masterslave/delete_without_sharding_value.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/dbtbl_with_masterslave/insert_for_order_1.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/dbtbl_with_masterslave/insert_for_order_2.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/dbtbl_with_masterslave/insert_with_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/dbtbl_with_masterslave/insert_without_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/dbtbl_with_masterslave/update.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/delete.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/masterslave/batch_insert_for_order.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/masterslave/batch_insert_with_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/masterslave/batch_insert_without_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/masterslave/delete_with_sharding_value.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/masterslave/delete_without_sharding_value.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/masterslave/insert_for_order_1.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/masterslave/insert_for_order_2.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/masterslave/insert_with_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/masterslave/insert_without_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/masterslave/update.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/tbl/batch_insert_for_order.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/tbl/batch_insert_with_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/tbl/batch_insert_without_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/tbl/delete_with_sharding_value.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/tbl/delete_without_sharding_value.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/tbl/insert_for_order_1.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/tbl/insert_for_order_2.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/tbl/insert_with_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/tbl/insert_without_generate_key_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dataset/tbl/update.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dml/dml-integrate-test-cases.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_alias_as_keyword.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts/cases/dql/dataset/masterslave/mysql => integrate/cases/dql/dataset/db}/select_avg.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_between_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_count_like_concat.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_count_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_count_with_sub.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_count_with_sub_with_whitespace.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_equal_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_full_route_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts/cases/dql/dataset/masterslave/mysql => integrate/cases/dql/dataset/db}/select_group_by_with_avg.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_group_by_with_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_group_by_with_count_without_column_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_group_by_with_date_function.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_group_by_with_key_word_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_group_by_with_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_group_by_with_max.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_group_by_with_min.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_group_by_with_order_by_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_group_by_with_order_by_desc.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_group_by_with_sum.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts/cases/dql/dataset/masterslave => integrate/cases/dql/dataset/db}/select_group_by_without_grouped_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_in_with_same_sharding_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_in_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_inner_join.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_max.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_min.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_not_equal_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_not_in_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_or_mix_and_for_complex_pattern.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_or_mix_and_for_simple_pattern.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_or_mix_and_with_binding_and_broadcast_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_or_mix_and_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_or_with_different_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_or_with_none_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_or_with_same_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_order_by_asc_and_index_desc.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/db/select_order_by_desc_and_index_asc.xml", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_order_by_with_alias_star_alias_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/db/select_order_by_with_date.xml", "insertions": 89, "deletions": 0, "lines": 89}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_order_by_with_multiple_stars.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_order_by_with_ordered_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_order_by_with_star_no_table_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_order_by_with_star_table_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_order_by_with_table_star_table_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_order_by_with_table_star_without_table_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_pagination_with_offset.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_pagination_with_offset_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_pagination_with_offset_and_row_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_pagination_with_row_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_desc_and_index_asc.xml => integrate/cases/dql/dataset/db/select_pagination_with_row_number_and_limit.xml}", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_pagination_with_top_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_sharding_route_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_sharding_route_with_broadcast_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_sub_query_with_group_by.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_sub_query_with_multiple_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_sub_query_with_order_by.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_sub_query_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_sum.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_with_date_function.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts/cases/dql/dataset/masterslave => integrate/cases/dql/dataset/db}/select_with_expression.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_with_force_index_join.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_with_item_alias_match_order_by_and_group_by_items.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/db/select_with_regexp.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_alias_as_keyword.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_avg.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_between_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_count_like_concat.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_count_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_count_with_sub.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_count_with_sub_with_whitespace.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_equal_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_full_route_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_avg.xml", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_count_without_column_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_date_function.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_key_word_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_max.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_min.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_order_by_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_order_by_desc.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_with_sum.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_group_by_without_grouped_column.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_in_with_same_sharding_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_in_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_inner_join.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_max.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_min.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_not_equal_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_not_in_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_or_mix_and_for_complex_pattern.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_or_mix_and_for_simple_pattern.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_or_mix_and_with_binding_and_broadcast_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_or_mix_and_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_or_with_different_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_or_with_none_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_or_with_same_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_asc_and_index_desc.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts/cases/dql/dataset/masterslave => integrate/cases/dql/dataset/dbtbl_with_masterslave}/select_order_by_desc_and_index_asc.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_with_alias_star_alias_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts/cases/dql/dataset/masterslave => integrate/cases/dql/dataset/dbtbl_with_masterslave}/select_order_by_with_date.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_with_multiple_stars.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_with_ordered_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_with_star_no_table_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_with_star_table_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_with_table_star_table_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_with_table_star_without_table_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_pagination_with_offset.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_pagination_with_offset_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_pagination_with_offset_and_row_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_pagination_with_row_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_pagination_with_row_number_and_limit.xml", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_pagination_with_top_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_sharding_route_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_sharding_route_with_broadcast_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_sub_query_with_group_by.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_sub_query_with_multiple_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_sub_query_with_order_by.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_sub_query_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_sum.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_with_date_function.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/dbtbl_with_masterslave/select_with_expression.xml", "insertions": 105, "deletions": 0, "lines": 105}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_with_force_index_join.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_with_item_alias_match_order_by_and_group_by_items.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/dbtbl_with_masterslave/select_with_regexp.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/empty_order.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/empty_order_item.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/masterslave/mysql/select_avg.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/masterslave/mysql/select_group_by_with_avg.xml", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/postgresql/select_avg.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/postgresql/select_group_by_with_avg.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_alias_as_keyword.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_avg.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_between_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_count_like_concat.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_count_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_count_with_sub.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_count_with_sub_with_whitespace.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_equal_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_full_route_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_group_by_with_avg.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_group_by_with_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_group_by_with_count_without_column_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_group_by_with_key_word_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_group_by_with_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_group_by_with_max.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_group_by_with_min.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_group_by_with_order_by_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_group_by_with_order_by_desc.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_group_by_with_sum.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/masterslave/select_group_by_without_grouped_column.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_in_with_same_sharding_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_in_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_inner_join.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_max.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_min.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_not_equal_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_not_in_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_or_mix_and_for_complex_pattern.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_or_mix_and_for_simple_pattern.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_or_mix_and_with_binding_and_broadcast_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_or_mix_and_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_or_with_different_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_or_with_none_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_or_with_same_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_order_by_asc_and_index_desc.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts/cases/dql/dataset/masterslave/select_sharding_route_with_broadcast_table.xml => integrate/cases/dql/dataset/masterslave/select_order_by_desc_and_index_asc.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_order_by_with_alias_star_alias_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/masterslave/select_order_by_with_date.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_order_by_with_multiple_stars.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_order_by_with_ordered_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_order_by_with_star_no_table_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_order_by_with_star_table_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_order_by_with_table_star_table_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_order_by_with_table_star_without_table_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_pagination_with_offset.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_pagination_with_offset_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_pagination_with_offset_and_row_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_pagination_with_row_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_pagination_with_row_number_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_pagination_with_top_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_sharding_route_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/masterslave/select_sharding_route_with_broadcast_table.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_sub_query_with_group_by.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_sub_query_with_multiple_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_sub_query_with_order_by.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_sub_query_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_sum.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_with_date_function.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/masterslave/select_with_expression.xml", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_with_force_index_join.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_with_item_alias_match_order_by_and_group_by_items.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/masterslave/select_with_regexp.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/select_constant_without_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_alias_as_keyword.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/tbl/select_avg.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_between_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_count_like_concat.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_count_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_count_with_sub.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_count_with_sub_with_whitespace.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_equal_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_full_route_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/tbl/select_group_by_with_avg.xml", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_group_by_with_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_group_by_with_count_without_column_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_group_by_with_date_function.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_group_by_with_key_word_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_group_by_with_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_group_by_with_max.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_group_by_with_min.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_group_by_with_order_by_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_group_by_with_order_by_desc.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_group_by_with_sum.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/tbl/select_group_by_without_grouped_column.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_in_with_same_sharding_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_in_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_inner_join.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_max.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_min.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_not_equal_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_not_in_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_or_mix_and_for_complex_pattern.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_or_mix_and_for_simple_pattern.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_or_mix_and_with_binding_and_broadcast_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_or_mix_and_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_or_with_different_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_or_with_none_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_or_with_same_sharding_columns.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_order_by_asc_and_index_desc.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/tbl/select_order_by_desc_and_index_asc.xml", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_order_by_with_alias_star_alias_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/tbl/select_order_by_with_date.xml", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_order_by_with_multiple_stars.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_order_by_with_ordered_column.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_order_by_with_star_no_table_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_order_by_with_star_table_alias.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_order_by_with_table_star_table_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_order_by_with_table_star_without_table_name.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_pagination_with_offset.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_pagination_with_offset_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_pagination_with_offset_and_row_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_pagination_with_row_count.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts/cases/dql/dataset/dbtbl_with_masterslave/select_order_by_with_date.xml => integrate/cases/dql/dataset/tbl/select_pagination_with_row_number_and_limit.xml}", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_pagination_with_top_and_limit.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_sharding_route_with_binding_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_sharding_route_with_broadcast_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_sub_query_with_group_by.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_sub_query_with_multiple_tables.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_sub_query_with_order_by.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_sub_query_with_single_table.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_sum.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_with_date_function.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dql/dataset/tbl/select_with_expression.xml", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_with_force_index_join.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_with_item_alias_match_order_by_and_group_by_items.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dataset/tbl/select_with_regexp.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/cases/dql/dql-integrate-test-cases.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/{ => cases}/jdbc/jdbc_data.sql", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/integrate/{ => cases}/jdbc/jdbc_init.sql", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/db/authority.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/db/dataset.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/db/schema.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/db/sharding-rule.yaml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/dbtbl_with_masterslave/authority.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/dbtbl_with_masterslave/dataset.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/dbtbl_with_masterslave/schema.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/dbtbl_with_masterslave/sharding-rule.yaml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/masterslave/authority.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/masterslave/dataset.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/masterslave/schema.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/masterslave/sharding-rule.yaml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/tbl/authority.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/tbl/dataset.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/tbl/schema.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{asserts => integrate}/env/tbl/sharding-rule.yaml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-opentracing/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/ExecuteEventListenerTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/MergeEventListenerTest.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/SqlRoutingEventListenerTest.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-opentracing/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-proxy/pom.xml", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-proxy/src/main/docker/Dockerfile", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/Bootstrap.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/AbstractBackendHandler.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/BackendExecutorContext.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/JDBCBackendHandler.java", "insertions": 22, "deletions": 3, "lines": 25}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/datasource/JDBCRawBackendDataSourceFactory.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/datasource/JDBCXABackendDataSourceFactory.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/memory/ConnectionStrictlyExecuteEngine.java", "insertions": 30, "deletions": 2, "lines": 32}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/stream/MemoryStrictlyExecuteEngine.java", "insertions": 26, "deletions": 2, "lines": 28}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/transaction/DefaultTransactionEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/transaction/TransactionEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/transaction/XaTransactionEngine.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/CommandResponsePacketsHandler.java", "insertions": 0, "deletions": 41, "lines": 41}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/NettyBackendHandler.java", "insertions": 37, "deletions": 26, "lines": 63}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/{ShardingProxyClient.java => client/BackendNettyClient.java}", "insertions": 29, "deletions": 40, "lines": 69}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/{ClientHandlerInitializer.java => client/BackendNettyClientChannelInitializer.java}", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/{NettyChannelPoolHandler.java => client/BackendNettyClientChannelPoolHandler.java}", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/client/response/ResponseHandler.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/{NettyBackendHandlerFactory.java => client/response/ResponseHandlerFactory.java}", "insertions": 12, "deletions": 9, "lines": 21}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/{ => client/response}/mysql/MySQLQueryResult.java", "insertions": 18, "deletions": 13, "lines": 31}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/{mysql/MySQLBackendHandler.java => client/response/mysql/MySQLResponseHandler.java}", "insertions": 80, "deletions": 91, "lines": 171}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/{util/MySQLResultCache.java => backend/netty/future/FutureRegistry.java}", "insertions": 78, "deletions": 77, "lines": 155}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/{util => backend/netty/future}/SynchronizedFuture.java", "insertions": 97, "deletions": 97, "lines": 194}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/ProxyTableMetaDataConnectionManager.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/RuleRegistry.java", "insertions": 14, "deletions": 13, "lines": 27}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/FrontendExecutorContext.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/ShardingProxy.java", "insertions": 14, "deletions": 15, "lines": 29}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/common/FrontendHandler.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/common/FrontendHandlerFactory.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/common/executor/ExecutorGroup.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/common/netty/ServerHandlerInitializer.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/mysql/MySQLFrontendHandler.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/listener/ProxyListenerRegister.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/common/codec/PacketCodec.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/constant/ServerInfo.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/MySQLPacketPayload.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/CommandPacketFactory.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/binary/close/ComStmtClosePacket.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/query/binary/prepare/ComStmtPrepareOKPacket.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/EofPacket.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/ErrPacket.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/generic/OKPacket.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/util/ProxyTransactionLoader.java", "insertions": 0, "deletions": 63, "lines": 63}, {"filePath": "sharding-proxy/src/main/resources/META-INF/services/io.shardingsphere.core.transaction.spi.TransactionManager", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-proxy/src/main/resources/META-INF/services/io.shardingsphere.transaction.api.xa.XATransactionManager", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-proxy/src/main/resources/conf/config.yaml", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-proxy/src/main/resources/conf/config_master_slave.yaml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-proxy/src/main/resources/{ => conf}/jta.properties", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-proxy/src/main/resources/logback.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/test/java/io/shardingsphere/proxy/transport/mysql/codec/MySQLPacketCodecTest.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-proxy/src/test/resources/conf/config.yaml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-sql-test/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-sql-test/src/main/resources/sql/dal/show_table_status.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-sql-test/src/main/resources/sql/ddl/create.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-transaction/pom.xml", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/transaction/spi/TransactionManager.java => sharding-transaction/src/main/java/io/shardingsphere/transaction/api/ShardingTransactionManager.java", "insertions": 6, "deletions": 10, "lines": 16}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/api/ShardingTransactionManagerFactory.java", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/api/base/SagaTransactionManager.java", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/transaction/WeakXaTransactionManager.java => sharding-transaction/src/main/java/io/shardingsphere/transaction/api/local/LocalTransactionManager.java", "insertions": 26, "deletions": 18, "lines": 44}, {"filePath": "{sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingsphere/transaction => sharding-transaction/src/main/java/io/shardingsphere/transaction/api}/xa/AtomikosTransactionManager.java", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "{sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingsphere/transaction => sharding-transaction/src/main/java/io/shardingsphere/transaction/api}/xa/AtomikosUserTransaction.java", "insertions": 7, "deletions": 12, "lines": 19}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/netty/DataSourceConfig.java => sharding-transaction/src/main/java/io/shardingsphere/transaction/api/xa/XATransactionManager.java", "insertions": 5, "deletions": 18, "lines": 23}, {"filePath": "sharding-transaction/src/main/java/io/shardingsphere/transaction/api/xa/XATransactionManagerSPILoader.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "{sharding-core/src/main/java/io/shardingsphere/core/transaction => sharding-transaction/src/main/java/io/shardingsphere/transaction/common}/TransactionContext.java", "insertions": 7, "deletions": 13, "lines": 20}, {"filePath": "{sharding-core/src/main/java/io/shardingsphere/core/transaction => sharding-transaction/src/main/java/io/shardingsphere/transaction/common}/TransactionContextHolder.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/transaction/event/WeakXaTransactionEvent.java => sharding-transaction/src/main/java/io/shardingsphere/transaction/common/event/LocalTransactionEvent.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "{sharding-core/src/main/java/io/shardingsphere/core/transaction => sharding-transaction/src/main/java/io/shardingsphere/transaction/common}/event/TransactionEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/src/main/java/io/shardingsphere/core/transaction => sharding-transaction/src/main/java/io/shardingsphere/transaction/common}/event/TransactionEventFactory.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "{sharding-core/src/main/java/io/shardingsphere/core/transaction => sharding-transaction/src/main/java/io/shardingsphere/transaction/common}/event/XaTransactionEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "{sharding-core/src/main/java/io/shardingsphere/core/transaction => sharding-transaction/src/main/java/io/shardingsphere/transaction/common}/listener/TransactionListener.java", "insertions": 9, "deletions": 15, "lines": 24}, {"filePath": "src/resources/sharding_checks.xml", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["b78ca0541ba80474b7cb2b26e1b44f1d307d9bed"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.merger.common.ResultSetUtil.convertNumberValue(java.lang.Object,java.lang.Class)"]}, {"title": "count\u51fd\u6570\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd4\u56de\u4e0d\u6b63\u786e", "body": "\u53c2\u8003\u793a\u4f8b\u4ee3\u7801\u91cc\u7684\u573a\u666f\uff0c\u6c42t_order\u7684count\u603b\u6570\uff1a\n\n\u4f7f\u7528mybatis\uff0c\u5206\u62103\u4e2a\u5e93\uff0c\u6bcf\u4e2a\u5e93\u91cc\u52062\u5f20\u8868\uff0c\u6bcf\u4e2a\u8868\u91cc\u63d2\u51652\u6761\u8bb0\u5f55\uff0c\u6b63\u786e\u7684count\u503c\u5e94\u8be5\u662f12\n\n``` sql\n    <select id=\"queryCount\" resultType=\"int\">\n        select count(*) from t_order\n    </select>\n```\n\n\u4ec5\u8fd4\u56de\u4e00\u4e2aint\u578b\u6574\u6570\uff0c\u8fd4\u56de\u7684\u6570\u503c\uff0c\u4ec5\u4e3a\u67d0\u6761\u5b50\u67e5\u8be2\u7684count\u503c\uff0c\u6ca1\u6709\u7d2f\u52a0\uff0c\u4e0b\u9762\u662f\u8f93\u51fa\u7684\u65e5\u5fd7\uff1a\n\n```\n15:00:28,341 <com.dangdang.ddframe.rdb.sharding.parser.SQLParserFactory> DEBUG [main]: Logic SQL: select count(0) from t_order\n15:00:28,391 <com.dangdang.ddframe.rdb.sharding.parser.SQLParserFactory> TRACE [main]: Get com.alibaba.druid.sql.ast.statement.SQLSelectStatement SQL Statement\n15:00:28,783 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectStatement\n15:00:28,822 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 visit argument: SELECT COUNT(0)\nFROM t_order\n15:00:28,822 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelect\n15:00:28,823 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 visit argument: com.alibaba.druid.sql.ast.statement.SQLSelect@1d60737e\n15:00:28,823 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 visit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock\n15:00:28,823 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 visit argument: com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock@c7242101\n15:00:28,856 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n15:00:28,856 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@640d1fb2\n15:00:28,856 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n15:00:28,856 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@640d1fb2\n15:00:28,858 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr\n15:00:28,859 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 visit argument: 0\n15:00:28,859 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr\n15:00:28,859 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:00:28,860 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n15:00:28,860 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 endVisit SQL: SELECT COUNT(0\n15:00:28,879 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n15:00:28,879 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:00:28,879 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n15:00:28,879 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 endVisit SQL: SELECT COUNT(0)\n15:00:28,879 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n15:00:28,879 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:00:28,879 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 endVisit condition: ConditionContext(conditions={})\n15:00:28,879 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 endVisit SQL: SELECT COUNT(0)\n15:00:28,882 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 endVisit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock\n15:00:28,882 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:00:28,882 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 endVisit condition: ConditionContext(conditions={})\n15:00:28,885 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 endVisit SQL: SELECT COUNT(0) FROM [Token(t_order)]\n15:00:28,885 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelect\n15:00:28,885 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:00:28,885 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 endVisit condition: ConditionContext(conditions={})\n15:00:28,885 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 endVisit SQL: SELECT COUNT(0) FROM [Token(t_order)]\n15:00:28,886 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectStatement\n15:00:28,886 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:00:28,886 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 endVisit condition: ConditionContext(conditions={})\n15:00:28,886 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 endVisit SQL: SELECT COUNT(0) FROM [Token(t_order)]\n15:00:28,886 <com.dangdang.ddframe.rdb.sharding.parser.SQLParseEngine> DEBUG [main]: Parsed SQL result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[ConditionContext(conditions={})], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.absent(), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:00:28,886 <com.dangdang.ddframe.rdb.sharding.parser.SQLParseEngine> DEBUG [main]: Parsed SQL: SELECT COUNT(0) FROM [Token(t_order)]\n15:00:28,904 <com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter> TRACE [main]: Before database sharding t_order routes db names: [ds_0, ds_1, ds_2] sharding columns: [user_id] sharding values: []\n15:00:28,904 <com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter> TRACE [main]: After database sharding t_order result: [ds_2, ds_1, ds_0]\n15:00:28,904 <com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter> TRACE [main]: Before table sharding t_order routes db names: [DataNode(dataSourceName=ds_0, tableName=t_order_0), DataNode(dataSourceName=ds_1, tableName=t_order_0), DataNode(dataSourceName=ds_2, tableName=t_order_0), DataNode(dataSourceName=ds_0, tableName=t_order_1), DataNode(dataSourceName=ds_1, tableName=t_order_1), DataNode(dataSourceName=ds_2, tableName=t_order_1)] sharding columns: [order_id] sharding values: []\n15:00:28,904 <com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter> TRACE [main]: After table sharding t_order result: [t_order_0, t_order_1]\n15:00:28,907 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_0] sql: [SELECT COUNT(0) FROM t_order_0]\n15:00:28,907 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_0] sql: [SELECT COUNT(0) FROM t_order_1]\n15:00:28,907 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_1] sql: [SELECT COUNT(0) FROM t_order_0]\n15:00:28,907 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_1] sql: [SELECT COUNT(0) FROM t_order_1]\n15:00:28,907 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_2] sql: [SELECT COUNT(0) FROM t_order_0]\n15:00:28,907 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_2] sql: [SELECT COUNT(0) FROM t_order_1]\n15:00:29,084 <com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine> TRACE [main]: Concurrent execute result success [true, true, true, true, true, true]\n15:00:29,088 <com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory> TRACE [main]: Get 'Aggregate' result set\nFeb 22, 2016 3:00:29 PM org.springframework.context.support.ClassPathXmlApplicationContext doClose\nINFO: Closing org.springframework.context.support.ClassPathXmlApplicationContext@3d82c5f3: startup date [Mon Feb 22 15:00:24 CST 2016]; root of context hierarchy\ncount => 2 ***\u8fd9\u662f\u6211\u8f93\u51fa\u7684\u7ed3\u679c\n```\n\n\u4f46\u662f\uff0c\u5982\u679c\u6539\u6210\n\n``` sql\n    <select id=\"queryCount\" resultType=\"int\">\n        select count(*) order_count from t_order\n    </select>\n```\n\n\u5199\u6210\u8fd9\u6837\uff0c\u5373\uff1a\u52a0\u4e00\u4e2a\u5b57\u6bb5\u522b\u540d\u540e\uff0c\u8fd4\u56de\u7ed3\u679c\u662f\u6b63\u786e\u7684\uff0c\u4f1a\u628a\u5404\u5206\u5e93\u3001\u5206\u8868\u5b50\u67e5\u8be2\u7684count\u503c\u7d2f\u52a0\u8fd4\u56de\uff0c\u8f93\u51fa\u65e5\u5fd7\u5982\u4e0b\uff1a\n\n```\n15:03:49,055 <com.dangdang.ddframe.rdb.sharding.parser.SQLParserFactory> DEBUG [main]: Logic SQL: select count(0) order_count from t_order\n15:03:49,105 <com.dangdang.ddframe.rdb.sharding.parser.SQLParserFactory> TRACE [main]: Get com.alibaba.druid.sql.ast.statement.SQLSelectStatement SQL Statement\n15:03:49,505 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectStatement\n15:03:49,540 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 visit argument: SELECT COUNT(0) AS order_count\nFROM t_order\n15:03:49,540 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelect\n15:03:49,540 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 visit argument: com.alibaba.druid.sql.ast.statement.SQLSelect@1d60737e\n15:03:49,540 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 visit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock\n15:03:49,540 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 visit argument: com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock@c7242101\n15:03:49,572 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 visit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n15:03:49,572 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@640d1fb2 AS order_count\n15:03:49,572 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 visit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n15:03:49,572 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 visit argument: com.alibaba.druid.sql.ast.expr.SQLAggregateExpr@640d1fb2\n15:03:49,574 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 visit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr\n15:03:49,574 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 visit argument: 0\n15:03:49,574 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLIntegerExpr\n15:03:49,574 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:03:49,575 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 endVisit condition: ConditionContext(conditions={})\n15:03:49,575 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5   6 endVisit SQL: SELECT COUNT(0\n15:03:49,604 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 endVisit node: class com.alibaba.druid.sql.ast.expr.SQLAggregateExpr\n15:03:49,604 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:03:49,604 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 endVisit condition: ConditionContext(conditions={})\n15:03:49,604 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4   5 endVisit SQL: SELECT COUNT(0)\n15:03:49,605 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectItem\n15:03:49,605 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:03:49,605 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 endVisit condition: ConditionContext(conditions={})\n15:03:49,605 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3   4 endVisit SQL: SELECT COUNT(0) AS order_count\n15:03:49,606 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 endVisit node: class com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlSelectQueryBlock\n15:03:49,606 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:03:49,606 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 endVisit condition: ConditionContext(conditions={})\n15:03:49,609 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2   3 endVisit SQL: SELECT COUNT(0) AS order_count FROM [Token(t_order)]\n15:03:49,609 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelect\n15:03:49,609 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:03:49,609 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 endVisit condition: ConditionContext(conditions={})\n15:03:49,610 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1   2 endVisit SQL: SELECT COUNT(0) AS order_count FROM [Token(t_order)]\n15:03:49,610 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 endVisit node: class com.alibaba.druid.sql.ast.statement.SQLSelectStatement\n15:03:49,610 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 endVisit result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:03:49,610 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 endVisit condition: ConditionContext(conditions={})\n15:03:49,610 <com.dangdang.ddframe.rdb.sharding.parser.visitor.VisitorLogProxy> TRACE [main]:   1 endVisit SQL: SELECT COUNT(0) AS order_count FROM [Token(t_order)]\n15:03:49,611 <com.dangdang.ddframe.rdb.sharding.parser.SQLParseEngine> DEBUG [main]: Parsed SQL result: SQLParsedResult(routeContext=RouteContext(tables=[Table(name=t_order, alias=Optional.absent())], sqlBuilder=null), conditionContexts=[ConditionContext(conditions={})], mergeContext=MergeContext(orderByColumns=[], groupByColumns=[], aggregationColumns=[AggregationColumn(expression=COUNT(0), aggregationType=COUNT, alias=Optional.of(order_count), option=Optional.absent(), derivedColumns=[], index=1)], limit=null))\n15:03:49,611 <com.dangdang.ddframe.rdb.sharding.parser.SQLParseEngine> DEBUG [main]: Parsed SQL: SELECT COUNT(0) AS order_count FROM [Token(t_order)]\n15:03:49,637 <com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter> TRACE [main]: Before database sharding t_order routes db names: [ds_0, ds_1, ds_2] sharding columns: [user_id] sharding values: []\n15:03:49,638 <com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter> TRACE [main]: After database sharding t_order result: [ds_2, ds_1, ds_0]\n15:03:49,638 <com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter> TRACE [main]: Before table sharding t_order routes db names: [DataNode(dataSourceName=ds_0, tableName=t_order_0), DataNode(dataSourceName=ds_1, tableName=t_order_0), DataNode(dataSourceName=ds_2, tableName=t_order_0), DataNode(dataSourceName=ds_0, tableName=t_order_1), DataNode(dataSourceName=ds_1, tableName=t_order_1), DataNode(dataSourceName=ds_2, tableName=t_order_1)] sharding columns: [order_id] sharding values: []\n15:03:49,638 <com.dangdang.ddframe.rdb.sharding.router.single.SingleTableRouter> TRACE [main]: After table sharding t_order result: [t_order_0, t_order_1]\n15:03:49,641 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_0] sql: [SELECT COUNT(0) AS order_count FROM t_order_0]\n15:03:49,641 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_0] sql: [SELECT COUNT(0) AS order_count FROM t_order_1]\n15:03:49,641 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_1] sql: [SELECT COUNT(0) AS order_count FROM t_order_0]\n15:03:49,641 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_1] sql: [SELECT COUNT(0) AS order_count FROM t_order_1]\n15:03:49,642 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_2] sql: [SELECT COUNT(0) AS order_count FROM t_order_0]\n15:03:49,642 <com.dangdang.ddframe.rdb.sharding.router.SQLExecutionUnit> DEBUG [main]: route sql to db: [ds_2] sql: [SELECT COUNT(0) AS order_count FROM t_order_1]\n15:03:49,774 <com.dangdang.ddframe.rdb.sharding.executor.ExecutorEngine> TRACE [main]: Concurrent execute result success [true, true, true, true, true, true]\n15:03:49,779 <com.dangdang.ddframe.rdb.sharding.merger.ResultSetFactory> TRACE [main]: Get 'Aggregate' result set\n15:03:49,826 <com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit> TRACE [main]: Accumulation result: 2\n15:03:49,826 <com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit> TRACE [main]: Accumulation result: 4\n15:03:49,827 <com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit> TRACE [main]: Accumulation result: 6\n15:03:49,827 <com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit> TRACE [main]: Accumulation result: 8\n15:03:49,827 <com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit> TRACE [main]: Accumulation result: 10\n15:03:49,827 <com.dangdang.ddframe.rdb.sharding.merger.aggregation.AccumulationAggregationUnit> TRACE [main]: Accumulation result: 12\nFeb 22, 2016 3:03:49 PM org.springframework.context.support.ClassPathXmlApplicationContext doClose\nINFO: Closing org.springframework.context.support.ClassPathXmlApplicationContext@3d82c5f3: startup date [Mon Feb 22 15:03:45 CST 2016]; root of context hierarchy\ncount => 12 *** \u8fd9\u6b21\u5c31\u5bf9\u4e86\n```\n\n\u5404\u4f4d\u5927\u5927\uff0c\u6709\u7a7a\u770b\u4e0b\uff0c\u8c22\u8c22\uff01\n", "url": "https://github.com/apache/shardingsphere/issues/11", "user": "yjmyzz", "labels": ["bug"], "created": "2016-02-19 16:14:42", "closed": "2016-02-26 10:40:49", "commits": {"650bf54f282e467e28b03b709cc1aca2198c95fc": {"commitGHEventType": "closed", "commitUser": "hanahmily"}, "3f47f7814f34498f7d7fe9421907bf13c240adac": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "90ef7e70496c6cc1cd62e63d192fb083c1a620dd": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "650bf54f282e467e28b03b709cc1aca2198c95fc", "commitGHEventType": "closed", "commitUser": "hanahmily", "commitParents": ["5d03d89947e389fa4bc1017cb4f9d7909edab22c"], "nameRev": "650bf54f282e467e28b03b709cc1aca2198c95fc tags/1.0.1~17", "commitMessage": "fix #11\n", "commitDateTime": "2016-02-26 14:36:32", "authoredDateTime": "2016-02-26 14:36:32", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/AggregationInvokeHandler.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/com/dangdang/ddframe/rdb/sharding/merger/aggregation/AggregationResultSetTest.java", "insertions": 103, "deletions": 54, "lines": 157}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AggregationInvokeHandler.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationInvokeHandler.findAggregationColumn(com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSet,com.dangdang.ddframe.rdb.sharding.merger.common.ResultSetQueryIndex)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "AggregationResultSetTest.java", "spoonMethods": [{"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.createMergeContext(com.dangdang.ddframe.rdb.sharding.parser.result.merger.AggregationColumn.AggregationType,com.dangdang.ddframe.rdb.sharding.parser.result.merger.AggregationColumn[])", "TOT": 20, "UPD": 9, "INS": 0, "MOV": 11, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.createDerivedColumn(int,com.dangdang.ddframe.rdb.sharding.parser.result.merger.AggregationColumn.AggregationType)", "TOT": 9, "UPD": 4, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.assertNextForSum()", "TOT": 14, "UPD": 5, "INS": 0, "MOV": 8, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.assertNextForAvg()", "TOT": 29, "UPD": 6, "INS": 0, "MOV": 21, "DEL": 2}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.assertNextForCount()", "TOT": 10, "UPD": 4, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.assertNextForMax()", "TOT": 11, "UPD": 4, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.assertNextForMin()", "TOT": 10, "UPD": 3, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest", "TOT": 10, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.init()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.assertNext()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.TestTarget", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSetTest.createMergeContext(int,java.lang.String,java.lang.String,com.dangdang.ddframe.rdb.sharding.parser.result.merger.AggregationColumn.AggregationType)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3f47f7814f34498f7d7fe9421907bf13c240adac", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["cf8fb586722aec17af139ca8958f257c98af8920", "5abe94fc7c401208c2413e351bf4744b6fd15e57"], "nameRev": "3f47f7814f34498f7d7fe9421907bf13c240adac tags/3.0.0.M1~101^2~13", "commitMessage": "Merge pull request #11 from shardingjdbc/issue_601\n\nIssue 601", "commitDateTime": "2018-05-04 09:43:13", "authoredDateTime": "2018-05-04 09:43:13", "commitGitStats": [{"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/dbtest/IntegrateTestEnvironment.java", "insertions": 64, "deletions": 0, "lines": 64}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/dbtest/StartTest.java", "insertions": 74, "deletions": 86, "lines": 160}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/dbtest/asserts/AssertEngine.java", "insertions": 168, "deletions": 375, "lines": 543}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/dbtest/common/DatabaseEnvironment.java", "insertions": 0, "deletions": 25, "lines": 25}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/dbtest/common/DatabaseUtil.java", "insertions": 21, "deletions": 32, "lines": 53}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/dbtest/common/FileUtil.java", "insertions": 0, "deletions": 83, "lines": 83}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/dbtest/common/PathUtil.java", "insertions": 0, "deletions": 60, "lines": 60}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/dbtest/core/common/util/SQLPlaceholderUtil.java", "insertions": 0, "deletions": 20, "lines": 20}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/dbtest/exception/DbTestException.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/dbtest/init/InItCreateSchema.java", "insertions": 37, "deletions": 204, "lines": 241}, {"filePath": "sharding-jdbc-core/src/test/resources/integrate/env.properties", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "90ef7e70496c6cc1cd62e63d192fb083c1a620dd", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["6894fa6c7dce63a171fd3f3f47d750719e458da0", "f27721d7b445a20197422645426058e9f19fee5a"], "nameRev": "90ef7e70496c6cc1cd62e63d192fb083c1a620dd tags/3.0.0.M2~534^2~5", "commitMessage": "Merge pull request #11 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-06-11 16:05:14", "authoredDateTime": "2018-06-11 16:05:14", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "ROADMAP.md", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "pom.xml", "insertions": 30, "deletions": 2, "lines": 32}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/constant/TransactionType.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/ShardingMetaData.java", "insertions": 53, "deletions": 56, "lines": 109}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/metadata/TableMetaData.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/InsertColumnsClauseParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/sql/dql/select/AbstractSelectParser.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/routing/strategy/inline/InlineShardingStrategy.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/{yaml/sharding => rule}/DataSourceParameter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rule/ProxyAuthority.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rule/ShardingRule.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/rule/TableRule.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/util/InlineExpressionParser.java", "insertions": 35, "deletions": 6, "lines": 41}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/yaml/proxy/YamlProxyConfiguration.java", "insertions": 7, "deletions": 2, "lines": 9}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/integrate/jaxb/root/ParserResult.java", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/util/InlineExpressionParserTest.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/src/test/resources/parser/delete.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/resources/parser/insert.xml", "insertions": 19, "deletions": 19, "lines": 38}, {"filePath": "sharding-core/src/test/resources/parser/select.xml", "insertions": 30, "deletions": 124, "lines": 154}, {"filePath": "sharding-core/src/test/resources/parser/select_aggregate.xml", "insertions": 58, "deletions": 6, "lines": 64}, {"filePath": "sharding-core/src/test/resources/parser/select_expression.xml", "insertions": 7, "deletions": 19, "lines": 26}, {"filePath": "sharding-core/src/test/resources/parser/select_group_by.xml", "insertions": 42, "deletions": 74, "lines": 116}, {"filePath": "sharding-core/src/test/resources/parser/select_nullable.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/src/test/resources/parser/select_or.xml", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/src/test/resources/parser/select_pagination.xml", "insertions": 17, "deletions": 17, "lines": 34}, {"filePath": "sharding-core/src/test/resources/parser/select_pagination_group_by_order_by.xml", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/src/test/resources/parser/select_sub_query.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/src/test/resources/parser/update.xml", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/executor/ExecutorEngine.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSource.java", "insertions": 3, "deletions": 9, "lines": 12}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/metadata/JDBCShardingMetaData.java", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/metadata/dialect/DefaultShardingMetaDataHandler.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/metadata/dialect/H2ShardingMetaDataHandler.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/metadata/dialect/MySQLShardingMetaDataHandler.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/metadata/dialect/ShardingMetaDataHandler.java", "insertions": 15, "deletions": 5, "lines": 20}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/AllTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/api/ShardingDataSourceFactoryTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/common/env/DatabaseEnvironment.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/connection/ShardingConnectionTest.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/datasource/ShardingDataSourceTest.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/AllIntegrateTests.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/StartTest.java", "insertions": 0, "deletions": 208, "lines": 208}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/asserts/DDLAssertEngine.java", "insertions": 0, "deletions": 199, "lines": 199}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/asserts/DMLAssertEngine.java", "insertions": 0, "deletions": 149, "lines": 149}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/asserts/DQLAssertEngine.java", "insertions": 0, "deletions": 118, "lines": 118}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/asserts/DataSetAssert.java", "insertions": 0, "deletions": 148, "lines": 148}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/cases/assertion/IntegrateTestCasesLoader.java", "insertions": 214, "deletions": 0, "lines": 214}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/assertion/ddl/DDLIntegrateTestCase.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/assertion/ddl/DDLIntegrateTestCaseAssertion.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/cases/assertion/ddl/DDLIntegrateTestCases.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/assertion/dml/DMLIntegrateTestCase.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/assertion/dml/DMLIntegrateTestCaseAssertion.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/cases/assertion/dml/DMLIntegrateTestCases.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/assertion/dql/DQLIntegrateTestCase.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/assertion/dql/DQLIntegrateTestCaseAssertion.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/cases/assertion/dql/DQLIntegrateTestCases.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/assertion/root/IntegrateTestCase.java", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/assertion/root/IntegrateTestCaseAssertion.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{asserts/DataSetDefinitions.java => cases/assertion/root/IntegrateTestCases.java}", "insertions": 8, "deletions": 13, "lines": 21}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{common => cases/assertion/root}/SQLValue.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{common => cases/assertion/root}/SQLValueGroup.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/expected/dataset/ExpectedColumns.java", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/expected/dataset/ExpectedDataSetRow.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/expected/dataset/ExpectedDataSetsRoot.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/expected/metadata/ExpectedColumn.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/expected/metadata/ExpectedIndex.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/expected/metadata/ExpectedMetadata.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/expected/metadata/ExpectedMetadataRoot.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/init/DataSetColumnMetadata.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/init/DataSetIndexMetadata.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/init/DataSetMetadata.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/init/DataSetRow.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{jaxb => cases}/dataset/init/DataSetsRoot.java", "insertions": 21, "deletions": 4, "lines": 25}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/common/DatabaseUtil.java", "insertions": 0, "deletions": 382, "lines": 382}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/BaseIntegrateTest.java", "insertions": 151, "deletions": 0, "lines": 151}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/DDLIntegrateTest.java", "insertions": 187, "deletions": 0, "lines": 187}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/DMLIntegrateTest.java", "insertions": 225, "deletions": 0, "lines": 225}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/engine/DQLIntegrateTest.java", "insertions": 248, "deletions": 0, "lines": 248}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/env/EnvironmentPath.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/env/IntegrateTestEnvironment.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/{asserts => env/dataset}/DataSetEnvironmentManager.java", "insertions": 28, "deletions": 9, "lines": 37}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/env/datasource/DataSourceUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/env/datasource/DatabaseEnvironment.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/env/schema/SchemaEnvironmentManager.java", "insertions": 49, "deletions": 25, "lines": 74}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/fixture/{SingleAlgorithm.java => PreciseModuloAlgorithm.java}", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/fixture/RangeModuloAlgorithm.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/jaxb/assertion/IntegrateTestCasesLoader.java", "insertions": 0, "deletions": 157, "lines": 157}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/dbtest/jaxb/assertion/root/IntegrateTestCases.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "sharding-jdbc/src/test/resources/asserts/alter/integrate-test-cases.xml", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{alter/asserts/ddl => cases/alter/dataset}/t_order_update.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/alter/ddl-integrate-test-cases.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{assert-sharding-database-only-with-hint-for-dml-test/asserts/dml => cases/assert-sharding-database-only-with-hint-for-dml-test/dataset}/delete.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{assert-sharding-database-only-with-hint-for-dml-test/asserts/dml => cases/assert-sharding-database-only-with-hint-for-dml-test/dataset}/insert.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{assert-sharding-database-only-with-hint-for-dml-test/asserts/dml => cases/assert-sharding-database-only-with-hint-for-dml-test/dataset}/update.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{assert-sharding-database-only-with-hint-for-dml-test/integrate-test-cases.xml => cases/assert-sharding-database-only-with-hint-for-dml-test/dml-integrate-test-cases.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{create/asserts/ddl => cases/create/dataset}/assertCreateIndex.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{create/asserts/ddl => cases/create/dataset}/assertCreateTable.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{create/asserts/ddl => cases/create/dataset}/assertCreateTableTempLog.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{create/asserts/ddl => cases/create/dataset}/assertCreateUniqueIndex.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{create/asserts/ddl => cases/create/dataset}/update.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/create/ddl-integrate-test-cases.xml", "insertions": 49, "deletions": 0, "lines": 49}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_alias_as_keyword.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_avg.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/db/SelectBetweenWithSingleTable.xml => cases/select/dataset/db/select_between_with_single_table.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_count.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_count_like_concat.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_count_with_binding_tables.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/SelectEqualsWithSingleTable_2.xml => cases/select/dataset/db/select_equal_with_single_table.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_full_route_with_binding_tables.xml", "insertions": 83, "deletions": 0, "lines": 83}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_with_avg.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_with_count.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_with_date_function.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_with_key_word_alias.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_with_limit.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_with_max.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_with_min.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_with_order_by_and_limit.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_with_order_by_desc.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_with_sum.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_group_by_without_grouped_column.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/SelectInWithSameShardingColumns.xml => cases/select/dataset/db/select_in_with_same_sharding_column.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/SelectEqualsWithSingleTable_0.xml => cases/select/dataset/db/select_in_with_single_table_0.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/db/SelectEqualsWithSingleTable_1.xml => cases/select/dataset/db/select_in_with_single_table_1.xml}", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_max.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_min.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_not_equal_with_single_table.xml", "insertions": 82, "deletions": 0, "lines": 82}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_not_in_with_single_table.xml", "insertions": 82, "deletions": 0, "lines": 82}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_sharding_route_with_binding_tables.xml", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_sharding_route_with_broadcast_table.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_sum.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_with_date_function.xml", "insertions": 83, "deletions": 0, "lines": 83}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_with_expression.xml", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_with_force_index_join.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_with_item_alias_match_order_by_and_group_by_items.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/db/select_with_regexp.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_alias_as_keyword.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_avg.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_between_with_single_table.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_count.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_count_like_concat.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_count_with_binding_tables.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/masterslave/SelectEqualsWithSingleTable_2.xml => cases/select/dataset/dbtbl_with_masterslave/select_equal_with_single_table.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_full_route_with_binding_tables.xml", "insertions": 203, "deletions": 0, "lines": 203}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_with_avg.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_with_count.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_with_date_function.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_with_key_word_alias.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_with_limit.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_with_max.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_with_min.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_with_order_by_and_limit.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_with_order_by_desc.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_with_sum.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_group_by_without_grouped_column.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_in_with_same_sharding_column.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_in_with_single_table_0.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_in_with_single_table_1.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_max.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_min.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_not_equal_with_single_table.xml", "insertions": 202, "deletions": 0, "lines": 202}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_not_in_with_single_table.xml", "insertions": 201, "deletions": 0, "lines": 201}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_sharding_route_with_binding_tables.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_sharding_route_with_broadcast_table.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_sum.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_with_date_function.xml", "insertions": 203, "deletions": 0, "lines": 203}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_with_expression.xml", "insertions": 103, "deletions": 0, "lines": 103}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_with_force_index_join.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_with_item_alias_match_order_by_and_group_by_items.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/dbtbl_with_masterslave/select_with_regexp.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/Empty.xml => cases/select/dataset/empty_order.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/empty_order_item.xml", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/SelectOne.xml => cases/select/dataset/select_constant_without_table.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_alias_as_keyword.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_avg.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/SelectBetweenWithSingleTable.xml => cases/select/dataset/tbl/select_between_with_single_table.xml}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_count.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_count_like_concat.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_count_with_binding_tables.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/SelectEqualsWithSameShardingColumns.xml => cases/select/dataset/tbl/select_equal_with_single_table.xml}", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/SelectNotEqualsWithSingleTable.xml => cases/select/dataset/tbl/select_full_route_with_binding_tables.xml}", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_with_avg.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_with_count.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_with_date_function.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_with_key_word_alias.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_with_limit.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_with_max.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_with_min.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_with_order_by_and_limit.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_with_order_by_desc.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_with_sum.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_group_by_without_grouped_column.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/SelectEqualsWithSingleTable_1.xml => cases/select/dataset/tbl/select_in_with_same_sharding_column.xml}", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_in_with_single_table_0.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_in_with_single_table_1.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_max.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_min.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_not_equal_with_single_table.xml", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-jdbc/src/test/resources/asserts/{select/asserts/dql/SelectNotWithSingleTable.xml => cases/select/dataset/tbl/select_not_in_with_single_table.xml}", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_sharding_route_with_binding_tables.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_sharding_route_with_broadcast_table.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_sum.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_with_date_function.xml", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_with_expression.xml", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_with_force_index_join.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_with_item_alias_match_order_by_and_group_by_items.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dataset/tbl/select_with_regexp.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/cases/select/dql-integrate-test-cases.xml", "insertions": 256, "deletions": 0, "lines": 256}, {"filePath": "sharding-jdbc/src/test/resources/asserts/create/integrate-test-cases.xml", "insertions": 0, "deletions": 49, "lines": 49}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/db/data-init.xml", "insertions": 95, "deletions": 80, "lines": 175}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/db/schema.xml", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/db/sharding-rule.yaml", "insertions": 4, "deletions": 11, "lines": 15}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest/masterslave => asserts/env/dbtbl_with_masterslave}/data-init.xml", "insertions": 422, "deletions": 421, "lines": 843}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest/masterslave => asserts/env/dbtbl_with_masterslave}/schema.xml", "insertions": 22, "deletions": 12, "lines": 34}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest/masterslave => asserts/env/dbtbl_with_masterslave}/sharding-rule.yaml", "insertions": 12, "deletions": 12, "lines": 24}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/jdbc/schema.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/masterslaveonly/schema.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/nullable/data-init.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/nullable/schema.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/nullable/sharding-rule.yaml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/tbl/data-init.xml", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/tbl/schema.xml", "insertions": 22, "deletions": 12, "lines": 34}, {"filePath": "sharding-jdbc/src/test/resources/{integrate/dbtest => asserts/env}/tbl/sharding-rule.yaml", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "sharding-jdbc/src/test/resources/asserts/select/asserts/dql/dbtbl/SelectEqualsWithSingleTable_1.xml", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/asserts/select/integrate-test-cases.xml", "insertions": 0, "deletions": 53, "lines": 53}, {"filePath": "sharding-jdbc/src/test/resources/integrate/assert/select.xml", "insertions": 19, "deletions": 56, "lines": 75}, {"filePath": "sharding-jdbc/src/test/resources/integrate/assert/select_aggregate.xml", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-jdbc/src/test/resources/integrate/assert/select_expression.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/resources/integrate/assert/select_group_by.xml", "insertions": 11, "deletions": 17, "lines": 28}, {"filePath": "sharding-jdbc/src/test/resources/integrate/dbtest/dbtbl/data-init.xml", "insertions": 0, "deletions": 332, "lines": 332}, {"filePath": "sharding-jdbc/src/test/resources/integrate/dbtest/dbtbl/schema.xml", "insertions": 0, "deletions": 63, "lines": 63}, {"filePath": "sharding-jdbc/src/test/resources/integrate/dbtest/dbtbl/sharding-rule.yaml", "insertions": 0, "deletions": 29, "lines": 29}, {"filePath": "sharding-jdbc/src/test/resources/integrate/env.properties", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/src/test/resources/integrate/schema/manual_schema_create.sql", "insertions": 169, "deletions": 55, "lines": 224}, {"filePath": "sharding-jdbc/src/test/resources/integrate/schema/manual_schema_drop.sql", "insertions": 57, "deletions": 55, "lines": 112}, {"filePath": "sharding-proxy/pom.xml", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/common/SQLExecuteBackendHandler.java", "insertions": 31, "deletions": 176, "lines": 207}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/common/SQLExecuteWorker.java", "insertions": 232, "deletions": 0, "lines": 232}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/common/StatementExecuteBackendHandler.java", "insertions": 34, "deletions": 201, "lines": 235}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/common/StatementExecuteWorker.java", "insertions": 256, "deletions": 0, "lines": 256}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/DefaultProxyRawDataSource.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/ProxyRawDataSource.java", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/ProxyRawDataSourceFactory.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/RuleRegistry.java", "insertions": 40, "deletions": 42, "lines": 82}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/config/XaProxyRawDataSource.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/common/FrontendHandler.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/mysql/ChannelThreadHolder.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/mysql/MySQLFrontendHandler.java", "insertions": 16, "deletions": 9, "lines": 25}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/metadata/ProxyShardingMetaData.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/metadata/ProxyShardingRefreshHandler.java", "insertions": 2, "deletions": 7, "lines": 9}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/metadata/ShardingMetaDataHandler.java", "insertions": 24, "deletions": 4, "lines": 28}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transaction/AtomikosUserTransaction.java", "insertions": 48, "deletions": 0, "lines": 48}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/MySQLPacketPayload.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/command/text/query/ComQueryPacket.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/handshake/HandshakeResponse41Packet.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/transport/mysql/packet/handshake/ProxyAuthorityHandler.java", "insertions": 74, "deletions": 0, "lines": 74}, {"filePath": "sharding-proxy/src/main/resources/conf/config.yaml", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "sharding-proxy/src/main/resources/jta.properties", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select.xml", "insertions": 20, "deletions": 33, "lines": 53}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select_aggregate.xml", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select_expression.xml", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-sql-test/src/main/resources/sql/dql/select_group_by.xml", "insertions": 12, "deletions": 13, "lines": 25}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["650bf54f282e467e28b03b709cc1aca2198c95fc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 2, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 0, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6.0, "UPD": 0.0, "INS": 3.0, "MOV": 3.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["sharding-jdbc-core/src/main/java/com/dangdang/ddframe/rdb/sharding/merger"], "changesInPackagesSPOON": ["com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationInvokeHandler.findAggregationColumn(com.dangdang.ddframe.rdb.sharding.merger.aggregation.AggregationResultSet,com.dangdang.ddframe.rdb.sharding.merger.common.ResultSetQueryIndex)"]}, {"title": "\u4f60\u4eec\u7684parent pom\u6ca1\u6709\u63d0\u4ea4\u5230maven\u4ed3\u5e93\u3002", "body": "<groupId>com.dangdang</groupId>\n<artifactId>sharding-jdbc</artifactId>\n<version>1.0.0</version>\n", "url": "https://github.com/apache/shardingsphere/issues/3", "user": "ghost", "labels": ["bug"], "created": "2016-01-30 05:01:46", "closed": "2016-02-01 02:40:08", "commits": {"b2b83443262af390030b36dabf2d2786445b923e": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "18f86325204e8abb0425d1d88c50c62bea615772": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "7d445288ca1d5f9d452453657e8f926e4c53a0a9": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "d6e5e0eeba43f3fe8a9a6c6e7871e6a6fb15087a": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "f2a5374de2d6d8e614ddb73ad3ebc5f496297c87": {"commitGHEventType": "referenced", "commitUser": "terrymanu"}, "8e9b258112732490679e1caf8a03b8f3b19140d9": {"commitGHEventType": "referenced", "commitUser": "tristaZero"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "b2b83443262af390030b36dabf2d2786445b923e", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["61b90a38a6646e3b0e4eeb191dbf3a8fb55dd795", "12f52886ba5469effddfe469b850a69018c85f0b"], "nameRev": "b2b83443262af390030b36dabf2d2786445b923e tags/3.0.0.M1~101^2~69", "commitMessage": "Merge pull request #3 from shardingjdbc/dev\n\n\u5408\u5e76\u4ee3\u7801", "commitDateTime": "2018-03-15 10:24:24", "authoredDateTime": "2018-03-15 10:24:24", "commitGitStats": [{"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-boot-starter/src/main/java/io/shardingjdbc/spring/boot/SpringBootConfiguration.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-boot-starter/src/main/java/io/shardingjdbc/spring/boot/masterslave/SpringBootMasterSlaveRuleConfigurationProperties.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-boot-starter/src/main/java/io/shardingjdbc/spring/boot/sharding/SpringBootShardingRuleConfigurationProperties.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-boot-starter/src/test/java/io.shardingjdbc.spring.boot/AllSpringBootTests.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-boot-starter/src/test/java/io.shardingjdbc.spring.boot/type/SpringBootMasterSlaveTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-boot-starter/src/test/java/io.shardingjdbc.spring.boot/type/SpringBootShardingTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/datasource/SpringMasterSlaveDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/datasource/SpringShardingDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/constants/MasterSlaveDataSourceBeanDefinitionParserTag.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/constants/ShardingDataSourceBeanDefinitionParserTag.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/constants/ShardingStrategyBeanDefinitionParserTag.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/handler/MasterSlaveNamespaceHandler.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/handler/ShardingNamespaceHandler.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/parser/MasterSlaveDataSourceBeanDefinitionParser.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/parser/ShardingDataSourceBeanDefinitionParser.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/parser/ShardingStrategyBeanDefinition.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/main/java/io/shardingjdbc/spring/namespace/parser/ShardingStrategyBeanDefinitionParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/AbstractShardingBothDataBasesAndTablesSpringDBUnitTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/AbstractSpringDBUnitTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/AllSpringTests.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/GenerateKeyDBUnitTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/MasterSlaveNamespaceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/ShardingNamespaceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/algorithm/PreciseModuloDatabaseShardingAlgorithm.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/algorithm/PreciseModuloTableShardingAlgorithm.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/algorithm/RangeModuloDatabaseShardingAlgorithm.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/algorithm/RangeModuloTableShardingAlgorithm.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/cases/WithNamespaceAlgorithmClassTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/cases/WithNamespaceAlgorithmExpressionTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/cases/WithNamespaceBindingTablesTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/cases/WithNamespaceDefaultStrategyTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/cases/WithNamespaceDifferentTablesTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/cases/WithNamespaceForMasterSlaveWithDefaultStrategyTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/cases/WithNamespaceForMasterSlaveWithStrategyRefTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/cases/WithNamespaceForMasterSlaveWithStrategyTypeTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/cases/WithNamespaceLogicIndexTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/fixture/DecrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/fixture/IncrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core-spring/sharding-jdbc-core-spring-namespace/src/test/java/io/shardingjdbc/spring/util/FieldValueUtil.java", "insertions": 23, "deletions": 8, "lines": 31}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/ConfigMapContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/HintManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/MasterSlaveDataSourceFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/ShardingDataSourceFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/masterslave/MasterSlaveLoadBalanceAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/masterslave/MasterSlaveLoadBalanceAlgorithmType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/masterslave/RandomMasterSlaveLoadBalanceAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/masterslave/RoundRobinMasterSlaveLoadBalanceAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/sharding/ListShardingValue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/sharding/PreciseShardingValue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/sharding/RangeShardingValue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/sharding/ShardingValue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/sharding/complex/ComplexKeysShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/sharding/hint/HintShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/sharding/standard/PreciseShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/algorithm/sharding/standard/RangeShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/config/MasterSlaveRuleConfiguration.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/config/ShardingRuleConfiguration.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/config/TableRuleConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/config/strategy/ComplexShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/config/strategy/HintShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/config/strategy/InlineShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/config/strategy/NoneShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/config/strategy/ShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/api/config/strategy/StandardShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/constant/AggregationType.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/constant/DatabaseType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/constant/OrderType.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/constant/SQLType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/constant/ShardingConstant.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/constant/ShardingOperator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/constant/ShardingProperties.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/constant/ShardingPropertiesConstant.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/exception/ShardingJdbcException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/BaseStatementUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/ExecuteCallback.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/ExecutorEngine.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/event/AbstractExecutionEvent.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/event/AbstractSQLExecutionEvent.java", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/event/DMLExecutionEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/event/DQLExecutionEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/event/EventExecutionType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/event/OverallExecutionEvent.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/threadlocal/ExecutorDataMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/threadlocal/ExecutorExceptionHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/batch/BatchPreparedStatementExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/batch/BatchPreparedStatementUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/prepared/PreparedStatementExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/prepared/PreparedStatementUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/statement/StatementExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/executor/type/statement/StatementUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/hint/HintManagerHolder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/hint/ShardingKey.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractDataSourceAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractMasterSlavePreparedStatementAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractResultSetAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractShardingPreparedStatementAdapter.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/AbstractStatementAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/WrapperAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/invocation/JdbcMethodInvocation.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/adapter/invocation/SetParameterMethodInvocation.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/ShardingContext.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection/MasterSlaveConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/connection/ShardingConnection.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/datasource/MasterSlaveDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/datasource/NamedDataSource.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/datasource/ShardingDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/resultset/GeneratedKeysResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/resultset/GeneratedKeysResultSetMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/resultset/ShardingResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/statement/MasterSlavePreparedStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/statement/MasterSlaveStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/core/statement/ShardingStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/unsupported/AbstractUnsupportedGeneratedKeysResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/unsupported/AbstractUnsupportedOperationConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/unsupported/AbstractUnsupportedOperationDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/unsupported/AbstractUnsupportedOperationPreparedStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/unsupported/AbstractUnsupportedOperationResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/unsupported/AbstractUnsupportedOperationStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/jdbc/unsupported/AbstractUnsupportedUpdateOperationResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/keygen/DefaultKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/keygen/KeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/keygen/KeyGeneratorFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/keygen/TimeService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/DALMergeEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/MergeEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/ResultSetMerger.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/SelectMergeEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/common/AbstractDecoratorResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/common/AbstractMemoryResultSetMerger.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/common/AbstractStreamResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/common/MemoryResultSetRow.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/groupby/GroupByMemoryResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/groupby/GroupByRowComparator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/groupby/GroupByStreamResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/groupby/GroupByValue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/groupby/aggregation/AccumulationAggregationUnit.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/groupby/aggregation/AggregationUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/groupby/aggregation/AggregationUnitFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/groupby/aggregation/AverageAggregationUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/groupby/aggregation/ComparableAggregationUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/iterator/IteratorStreamResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/orderby/OrderByStreamResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/orderby/OrderByValue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/pagination/LimitDecoratorResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/pagination/RowNumberDecoratorResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/pagination/TopAndRowNumberDecoratorResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/show/ShowCreateTableResultSetMerger.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/show/ShowDatabasesResultSetMerger.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/show/ShowOtherResultSetMerger.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/show/ShowTablesResultSetMerger.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/merger/util/ResultSetUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/SQLJudgeEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/SQLParsingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/LexerEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/LexerEngineFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/analyzer/Dictionary.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/analyzer/UnterminatedCharException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/dialect/mysql/MySQLLexer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/dialect/oracle/OracleKeyword.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/dialect/oracle/OracleLexer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/dialect/postgresql/PostgreSQLKeyword.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/dialect/postgresql/PostgreSQLLexer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/dialect/sqlserver/SQLServerKeyword.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/dialect/sqlserver/SQLServerLexer.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/token/Assist.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/token/DefaultKeyword.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/token/Keyword.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/token/Literals.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/token/Symbol.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/token/Token.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/lexer/token/TokenType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/DistinctClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/GroupByClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/HavingClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/InsertColumnsClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/InsertIntoClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/InsertSetClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/InsertValuesClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/OrderByClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/SQLClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/SelectListClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/SelectRestClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/TableReferencesClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/UpdateSetItemsClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/WhereClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/expression/AliasExpressionParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/expression/BasicExpressionParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/facade/AbstractDeleteClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/facade/AbstractInsertClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/facade/AbstractSelectClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/clause/facade/AbstractUpdateClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/GeneratedKey.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/OrderItem.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/condition/Column.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/condition/Condition.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/condition/Conditions.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/limit/Limit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/selectitem/AggregationSelectItem.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/selectitem/CommonSelectItem.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/selectitem/SelectItem.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/selectitem/StarSelectItem.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/table/Table.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/context/table/Tables.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/ExpressionParserFactory.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLDistinctClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLGroupByClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLInsertIntoClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLInsertSetClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLInsertValuesClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLLimitClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLSelectOptionClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLSelectRestClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLTableReferencesClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/MySQLWhereClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/expression/MySQLAliasExpressionParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/facade/MySQLDeleteClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/facade/MySQLInsertClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/facade/MySQLSelectClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/clause/facade/MySQLUpdateClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLAlterParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLCreateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLDeleteParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLDescribeParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLDropParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLInsertParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLSelectParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLShowParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLTruncateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLUpdateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/sql/MySQLUseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/statement/DescribeStatement.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/statement/ShowColumnsStatement.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/statement/ShowCreateTableStatement.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/statement/ShowDatabasesStatement.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/statement/ShowOtherStatement.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/statement/ShowTablesStatement.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/mysql/statement/UseStatement.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleDistinctClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleForClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleGroupByClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleHierarchicalQueryClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleInsertIntoClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleModelClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleOrderByClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleSelectListClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleTableReferencesClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/OracleWhereClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/expression/OracleAliasExpressionParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/facade/OracleDeleteClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/facade/OracleInsertClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/facade/OracleSelectClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/clause/facade/OracleUpdateClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/sql/OracleAlterParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/sql/OracleCreateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/sql/OracleDeleteParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/sql/OracleDropParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/sql/OracleInsertParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/sql/OracleSelectParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/sql/OracleTruncateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/oracle/sql/OracleUpdateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/PostgreSQLForClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/PostgreSQLInsertIntoClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/PostgreSQLLimitClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/PostgreSQLOrderByClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/PostgreSQLSelectRestClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/PostgreSQLTableReferencesClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/expression/PostgreSQLAliasExpressionParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLDeleteClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLInsertClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLSelectClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/clause/facade/PostgreSQLUpdateClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/sql/PostgreSQLAlterParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/sql/PostgreSQLCreateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/sql/PostgreSQLDeleteParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/sql/PostgreSQLDropParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/sql/PostgreSQLInsertParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/sql/PostgreSQLSelectParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/sql/PostgreSQLTruncateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/postgresql/sql/PostgreSQLUpdateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerInsertIntoClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerOffsetClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerOrderByClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerSelectListClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerSelectRestClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerTableReferencesClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerTopClauseParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/SQLServerWhereClauseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/expression/SQLServerAliasExpressionParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/facade/SQLServerDeleteClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/facade/SQLServerInsertClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/facade/SQLServerSelectClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/clause/facade/SQLServerUpdateClauseParserFacade.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/sql/SQLServerAlterParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/sql/SQLServerCreateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/sql/SQLServerDeleteParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/sql/SQLServerDropParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/sql/SQLServerInsertParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/sql/SQLServerSelectParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/sql/SQLServerTruncateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/dialect/sqlserver/sql/SQLServerUpdateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/exception/SQLParsingException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/exception/SQLParsingUnsupportedException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/expression/SQLExpression.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/expression/SQLIdentifierExpression.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/expression/SQLIgnoreExpression.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/expression/SQLNumberExpression.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/expression/SQLPlaceholderExpression.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/expression/SQLPropertyExpression.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/expression/SQLTextExpression.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/AbstractSQLStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/SQLParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/SQLParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/SQLStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dal/AbstractDALParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dal/DALStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dal/describe/AbstractDescribeParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dal/describe/DescribeParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dal/show/AbstractShowParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dal/show/ShowParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dal/use/AbstractUseParser.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dal/use/UseParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/ddl/DDLStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/ddl/alter/AbstractAlterParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/ddl/alter/AlterParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/ddl/create/AbstractCreateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/ddl/create/CreateParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/ddl/drop/AbstractDropParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/ddl/drop/DropParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/ddl/truncate/AbstractTruncateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/ddl/truncate/TruncateParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dml/DMLStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dml/delete/AbstractDeleteParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dml/delete/DeleteParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dml/insert/AbstractInsertParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dml/insert/InsertParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dml/insert/InsertStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dml/update/AbstractUpdateParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dml/update/UpdateParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dql/DQLStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dql/select/AbstractSelectParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dql/select/SelectParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/dql/select/SelectStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/tcl/TCLParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/tcl/TCLParserFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/sql/tcl/TCLStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/GeneratedKeyToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/IndexToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/ItemsToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/MultipleInsertValuesToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/OffsetToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/OrderByToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/RowCountToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/SQLToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/SchemaToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/parsing/parser/token/TableToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rewrite/SQLBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rewrite/SQLRewriteEngine.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rewrite/placeholder/IndexPlaceholder.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rewrite/placeholder/SchemaPlaceholder.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rewrite/placeholder/ShardingPlaceholder.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rewrite/placeholder/TablePlaceholder.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/PreparedStatementRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/SQLExecutionUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/SQLRouteResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/StatementRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/router/DatabaseHintSQLRouter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/router/ParsingSQLRouter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/router/SQLRouter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/router/SQLRouterFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/strategy/ShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/strategy/ShardingAlgorithmFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/strategy/ShardingStrategy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/strategy/complex/ComplexShardingStrategy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/strategy/hint/HintShardingStrategy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/strategy/inline/InlineShardingStrategy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/strategy/none/NoneShardingStrategy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/strategy/standard/StandardShardingStrategy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/RoutingEngine.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/RoutingResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/TableUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/TableUnits.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/broadcast/DatabaseBroadcastRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/broadcast/TableBroadcastRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/complex/CartesianDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/complex/CartesianRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/complex/CartesianRoutingResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/complex/CartesianTableReference.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/complex/ComplexRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/hint/DatabaseHintRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/ignore/IgnoreRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/standard/StandardRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/routing/type/unicast/UnicastRoutingEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rule/BindingTableRule.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rule/DataNode.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rule/MasterSlaveRule.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rule/ShardingRule.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/rule/TableRule.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util/DataSourceUtil.java", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util/EventBusInstance.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util/InlineExpressionParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util/SQLUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/util/StringUtil.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/masterslave/YamlMasterSlaveConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/masterslave/YamlMasterSlaveRuleConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/sharding/YamlShardingConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/sharding/YamlShardingRuleConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/sharding/YamlShardingStrategyConfiguration.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/sharding/YamlTableRuleConfiguration.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/sharding/strategy/YamlComplexShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/sharding/strategy/YamlHintShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/sharding/strategy/YamlInlineShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/sharding/strategy/YamlNoneShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/sharding/strategy/YamlShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/main/java/io/shardingjdbc/core/yaml/sharding/strategy/YamlStandardShardingStrategyConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/AllApiTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/HintManagerTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/MasterSlaveDataSourceFactoryTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/ShardingDataSourceFactoryTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/algorithm/common/ShardingStrategyTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/algorithm/fixture/TestComplexKeysShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/algorithm/fixture/TestPreciseShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/algorithm/fixture/TestRangeShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/algorithm/masterslave/RandomMasterSlaveLoadBalanceAlgorithmTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/algorithm/masterslave/RoundRobinMasterSlaveLoadBalanceAlgorithmTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/algorithm/sharding/DatabaseShardingStrategyTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/algorithm/table/TableShardingStrategyTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/api/fixture/ShardingRuleMockBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/common/base/AbstractSQLAssertTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/common/base/AbstractSQLTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/common/env/DatabaseEnvironment.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/common/jaxb/helper/SQLStatementHelper.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/common/util/DBUnitUtil.java", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/common/util/SQLAssertHelper.java", "insertions": 86, "deletions": 33, "lines": 119}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/common/util/SQLPlaceholderUtil.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/constant/AllConstantsTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/constant/DatabaseTypeTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/constant/ShardingPropertiesConstantTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/constant/ShardingPropertiesTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/AllExecutorTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/fixture/EventCaller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/fixture/ExecutorTestUtil.java", "insertions": 13, "deletions": 2, "lines": 15}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/fixture/TestDMLExecutionEventListener.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/fixture/TestDQLExecutionEventListener.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/fixture/TestOverallExecutionEventListener.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/threadlocal/ExecutorExceptionHandlerTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/type/AbstractBaseExecutorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/type/BatchPreparedStatementExecutorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/type/PreparedStatementExecutorTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/executor/type/StatementExecutorTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/fixture/OrderDatabaseHintShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/fixture/PreciseOrderShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/fixture/RangeOrderShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/fixture/TestDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/hint/AllHintTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/hint/HintManagerHolderTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/AllIntegrateTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/fixture/ComplexKeysModuloDatabaseShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/fixture/HintModuloDatabaseShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/fixture/PreciseModuloDatabaseShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/fixture/PreciseModuloTableShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/fixture/RangeModuloDatabaseShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/fixture/RangeModuloTableShardingAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/jaxb/helper/SQLAssertJAXBHelper.java", "insertions": 25, "deletions": 1, "lines": 26}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/type/sharding/hint/base/AbstractHintTest.java", "insertions": 4, "deletions": 10, "lines": 14}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/type/sharding/hint/base/AbstractRoutingDatabaseOnlyWithHintTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/type/sharding/hint/base/AbstractShardingDatabaseOnlyWithHintTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/type/sharding/hint/helper/HintDatabaseShardingValueHelper.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/type/sharding/hint/helper/HintShardingValueHelper.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/type/sharding/hint/type/RoutingDatabaseOnlyWithHintForDMLTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/type/sharding/hint/type/RoutingDatabaseOnlyWithHintForSelectTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/type/sharding/hint/type/ShardingDatabaseOnlyWithHintForDMLTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/integrate/type/sharding/hint/type/ShardingDatabaseOnlyWithHintForSelectTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/AllJDBCTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/adapter/ConnectionAdapterTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/adapter/DataSourceAdapterTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/adapter/PreparedStatementAdapterTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/adapter/ResultSetAdapterTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/adapter/ResultSetGetterAdapterTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/adapter/StatementAdapterTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/adapter/invocation/JdbcMethodInvocationTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/adapter/invocation/SetParameterMethodInvocationTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/core/connection/ShardingConnectionTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/core/datasource/MasterSlaveDataSourceTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/core/datasource/ShardingDataSourceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/core/resultset/GeneratedKeysResultSetMetaDataTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/core/resultset/GeneratedKeysResultSetTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/core/resultset/ShardingResultSetTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/core/statement/ShardingPreparedStatementTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/core/statement/ShardingStatementTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/unsupported/UnsupportedGeneratedKeysResultSetTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/unsupported/UnsupportedOperationConnectionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/unsupported/UnsupportedOperationDataSourceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/unsupported/UnsupportedOperationPreparedStatementTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/unsupported/UnsupportedOperationResultSetTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/unsupported/UnsupportedOperationStatementTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/unsupported/UnsupportedUpdateOperationResultSetTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/jdbc/util/JDBCTestSQL.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/keygen/AllKeygenTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/keygen/DefaultKeyGeneratorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/keygen/KeyGeneratorFactoryTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/keygen/fixture/FixedTimeService.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/keygen/fixture/IncrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/AllMergerTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/SelectMergeEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/common/DecoratorResultSetMergerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/common/MemoryResultSetMergerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/common/MemoryResultSetRowTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/common/StreamResultSetMergerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/common/fixture/TestDecoratorResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/common/fixture/TestMemoryResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/common/fixture/TestStreamResultSetMerger.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/groupby/GroupByMemoryResultSetMergerTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/groupby/GroupByRowComparatorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/groupby/GroupByStreamResultSetMergerTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/groupby/GroupByValueTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/groupby/aggregation/AccumulationAggregationUnitTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/groupby/aggregation/AggregationUnitFactoryTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/groupby/aggregation/AllAggregationTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/groupby/aggregation/AverageAggregationUnitTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/groupby/aggregation/ComparableAggregationUnitTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/iterator/IteratorStreamResultSetMergerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/orderby/OrderByStreamResultSetMergerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/orderby/OrderByValueTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/pagination/LimitDecoratorResultSetMergerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/merger/util/ResultSetUtilTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/AllParsingTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/SQLJudgeEngineTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/SQLParsingEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/UnsupportedSQLParsingEngineTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/lexer/LexerAssert.java", "insertions": 21, "deletions": 3, "lines": 24}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/lexer/LexerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/lexer/analyzer/CharTypeTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/lexer/analyzer/TokenizerTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/lexer/dialect/mysql/MySQLLexerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/lexer/dialect/oracle/OracleLexerTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/lexer/dialect/postgresql/PostgreSQLLexerTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/lexer/dialect/sqlserver/SQLServerLexerTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/base/AbstractBaseParseSQLTest.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/base/AbstractBaseParseTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/context/OrderItemTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/context/condition/ConditionTest.java", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/AggregationSelectItem.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/Assert.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/Asserts.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/Condition.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/Conditions.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/GeneratedKeyToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/GroupByColumn.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/IndexToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/ItemsToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/Limit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/MultipleInsertValuesToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/OffsetToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/OrderByColumn.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/OrderByToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/RowCountToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/SQLToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/Table.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/TableToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/Value.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/helper/ParserAssertHelper.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/jaxb/helper/ParserJAXBHelper.java", "insertions": 35, "deletions": 1, "lines": 36}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/sql/AbstractStatementParserTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/sql/DeleteStatementParserTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/sql/InsertStatementParserTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/sql/SelectStatementTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/parsing/parser/sql/UpdateStatementParserTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rewrite/SQLBuilderTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rewrite/SQLRewriteEngineTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/routing/AllRoutingTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/routing/DatabaseTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rule/AllRuleTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rule/BindingTableRuleTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rule/DataNodeTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rule/ShardingRuleTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/rule/TableRuleTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/util/AllUtilTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/util/DataSourceUtilTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/util/EventBusInstanceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/util/InlineBasicExpressionParserTest.java", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/util/NumberUtilTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/util/SQLUtilTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/util/StringUtilTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/AbstractYamlDataSourceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/AllYamlTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/fixture/DecrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/fixture/IncrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/fixture/MultiAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/fixture/SingleAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/masterslave/YamlMasterSlaveIntegrateTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/sharding/YamlShardingDataSourceTest.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/sharding/YamlShardingIntegrateTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-core/src/test/java/io/shardingjdbc/core/yaml/sharding/YamlShardingWithMasterSlaveIntegrateTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingjdbc/orchestration/spring/boot/masterslave/SpringBootMasterSlaveRuleConfigurationProperties.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingjdbc/orchestration/spring/boot/orchestration/SpringBootOrchestrationConfigurationProperties.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingjdbc/orchestration/spring/boot/sharding/SpringBootShardingRuleConfigurationProperties.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/io.shardingjdbc.spring.boot/AllOrchestrationSpringBootTests.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/io.shardingjdbc.spring.boot/type/OrchestrationSpringBootMasterSlaveTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/io.shardingjdbc.spring.boot/type/OrchestrationSpringBootShardingTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/io.shardingjdbc.spring.boot/util/EmbedTestingServer.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/datasource/SpringMasterSlaveDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/constants/EtcdRegistryCenterBeanDefinitionParserTag.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/constants/MasterSlaveDataSourceBeanDefinitionParserTag.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/constants/ShardingDataSourceBeanDefinitionParserTag.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/constants/ShardingStrategyBeanDefinitionParserTag.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/constants/ZookeeperRegistryCenterBeanDefinitionParserTag.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/handler/OrchestrationMasterSlaveNamespaceHandler.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/handler/OrchestrationShardingNamespaceHandler.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/parser/AbstractOrchestrationBeanDefinitionParser.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/parser/OrchestrationMasterSlaveDataSourceBeanDefinitionParser.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/parser/OrchestrationShardingDataSourceBeanDefinitionParser.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/parser/ShardingStrategyBeanDefinition.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/main/java/io/shardingjdbc/orchestration/spring/namespace/parser/ShardingStrategyBeanDefinitionParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/AllOrchestrationSpringTests.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/OrchestrationMasterSlaveNamespaceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/OrchestrationShardingMasterSlaveNamespaceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/OrchestrationShardingNamespaceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/algorithm/PreciseModuloDatabaseShardingAlgorithm.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/algorithm/PreciseModuloTableShardingAlgorithm.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/algorithm/RangeModuloDatabaseShardingAlgorithm.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/algorithm/RangeModuloTableShardingAlgorithm.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/fixture/DecrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/fixture/IncrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/util/EmbedTestingServer.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-namespace/src/test/java/io/shardingjdbc/orchestration/spring/util/FieldValueUtil.java", "insertions": 23, "deletions": 8, "lines": 31}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/api/OrchestrationMasterSlaveDataSourceFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/api/OrchestrationShardingDataSourceFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/api/config/OrchestrationConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/api/util/OrchestrationDataSourceCloseableUtil.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/OrchestrationFacade.java", "insertions": 8, "deletions": 11, "lines": 19}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/jdbc/connection/CircuitBreakerConnection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/jdbc/datasource/CircuitBreakerDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/jdbc/metadata/CircuitBreakerDatabaseMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/jdbc/resultset/CircuitBreakerResultSet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/jdbc/resultset/CircuitBreakerResultSetMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/jdbc/statement/CircuitBreakerPreparedStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/jdbc/statement/CircuitBreakerStatement.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/json/DataSourceGsonTypeAdapter.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/json/DataSourceGsonTypeConstants.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/json/DataSourceJsonConverter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/json/ShardingRuleConfigurationConverter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/internal/state/instance/OrchestrationInstance.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/reg/api/RegistryCenterConfiguration.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/reg/etcd/internal/channel/EtcdChannelFactory.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/reg/zookeeper/ZookeeperRegistryCenter.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/yaml/YamlOrchestrationConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/yaml/YamlOrchestrationMasterSlaveRuleConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/main/java/io/shardingjdbc/orchestration/yaml/YamlOrchestrationShardingRuleConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/internal/AllInternalTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/internal/config/ConfigurationNodeTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/internal/jdbc/AllJdbcTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/internal/jdbc/connection/CircuitBreakerConnectionTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/internal/jdbc/datasource/CircuitBreakerDataSourceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/internal/jdbc/metadata/CircuitBreakerDatabaseMetaDataTest.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/internal/json/DataSourceJsonConverterTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/internal/json/ShardingRuleConfigurationConverterTest.java", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/util/EmbedTestingServer.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/yaml/AbstractYamlDataSourceTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/yaml/AllYamlTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/yaml/fixture/DecrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/yaml/fixture/IncrementKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/yaml/fixture/MultiAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/yaml/fixture/SingleAlgorithm.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/yaml/masterslave/YamlOrchestrationMasterSlaveIntegrateTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/yaml/sharding/YamlOrchestrationShardingIntegrateTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-orchestration/src/test/java/io/shardingjdbc/orchestration/yaml/sharding/YamlOrchestrationShardingWithMasterSlaveIntegrateTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-plugin/src/main/java/io/shardingjdbc/plugin/keygen/HostNameKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-plugin/src/main/java/io/shardingjdbc/plugin/keygen/IPKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-plugin/src/main/java/io/shardingjdbc/plugin/keygen/IPSectionKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-plugin/src/test/java/io/shardingjdbc/plugin/keygen/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-plugin/src/test/java/io/shardingjdbc/plugin/keygen/HostNameKeyGeneratorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-plugin/src/test/java/io/shardingjdbc/plugin/keygen/IPKeyGeneratorTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-plugin/src/test/java/io/shardingjdbc/plugin/keygen/IPSectionKeyGeneratorTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/Bootstrap.java", "insertions": 18, "deletions": 3, "lines": 21}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/DataSourceManager.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/ShardingJDBCServer.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/codec/MySQLPacketCodec.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/constant/CapabilityFlag.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/constant/ColumnType.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/constant/ServerInfo.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/constant/StatusFlag.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/handler/ServerHandler.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/AbstractMySQLPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/AbstractMySQLReceivedPacket.java", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/AbstractMySQLSentPacket.java", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/MySQLPacketPayload.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/AbstractCommandPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/ColumnDefinition41Packet.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/ComFieldListPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/ComInitDbPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/ComQueryPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/ComQuitPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/CommandPacketFactory.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/CommandPacketType.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/FieldCountPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/TextResultSetRowPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/command/UnsupportedCommandPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/handshake/AuthPluginData.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/handshake/ConnectionIdGenerator.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/handshake/HandshakePacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/handshake/HandshakeResponse41Packet.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/handshake/RandomGenerator.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/ok/EofPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/ok/ErrPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/main/java/io/shardingjdbc/server/packet/ok/OKPacket.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "sharding-jdbc-server/src/test/java/io/shardingjdbc/server/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-server/src/test/java/io/shardingjdbc/server/util/RandomGeneratorTest.java", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/constants/SoftTransactionType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/constants/TransactionLogDataSourceType.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/datasource/TransactionLogDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/datasource/impl/MemoryTransactionLogDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/datasource/impl/RdbTransactionLogDataSource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/exception/TransactionCompensationException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/exception/TransactionLogStorageException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/storage/TransactionLog.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/storage/TransactionLogStorage.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/storage/TransactionLogStorageFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/storage/impl/MemoryTransactionLogStorage.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/main/java/io/shardingjdbc/transaction/storage/impl/RdbTransactionLogStorage.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingjdbc/transaction/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingjdbc/transaction/integrate/AllIntegrateTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingjdbc/transaction/integrate/storage/AbstractTransactionLogStorageOperationsTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingjdbc/transaction/integrate/storage/MemoryTransactionLogStorageOperationsTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingjdbc/transaction/integrate/storage/RdbTransactionLogStorageOperationsTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingjdbc/transaction/storage/AllStorageTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingjdbc/transaction/storage/TransactionLogStorageFactoryTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingjdbc/transaction/storage/impl/MemoryTransactionLogStorageTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingjdbc/transaction/storage/impl/RdbTransactionLogStorageTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingjdbc/transaction/api/AbstractSoftTransaction.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingjdbc/transaction/api/SoftTransactionManager.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingjdbc/transaction/api/config/AbstractBestEffortsDeliveryJobConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingjdbc/transaction/api/config/NestedBestEffortsDeliveryJobConfiguration.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingjdbc/transaction/api/config/SoftTransactionConfiguration.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingjdbc/transaction/bed/BEDSoftTransaction.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingjdbc/transaction/bed/sync/BestEffortsDeliveryListener.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingjdbc/transaction/tcc/TCCSoftTransaction.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/main/java/io/shardingjdbc/transaction/tcc/TCCWorkflow.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/test/java/io/shardingjdbc/transaction/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/test/java/io/shardingjdbc/transaction/api/SoftTransactionManagerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/test/java/io/shardingjdbc/transaction/base/AbstractSoftTransactionIntegrationTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/test/java/io/shardingjdbc/transaction/base/AbstractSoftTransactionMockTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/test/java/io/shardingjdbc/transaction/bed/BEDSoftTransactionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/test/java/io/shardingjdbc/transaction/integrate/SoftTransactionTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/resources/copyright.txt", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "src/resources/sharding_checks.xml", "insertions": 182, "deletions": 139, "lines": 321}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "18f86325204e8abb0425d1d88c50c62bea615772", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["2551a6851407db50817a02647f2b2bd24e8e9152", "843b06909727462b29cb03d4fbb640cde162b3c5"], "nameRev": "18f86325204e8abb0425d1d88c50c62bea615772 tags/3.0.0.M1~1^2~4", "commitMessage": "Merge pull request #3 from sharding-sphere/dev\n\nupdate from origin", "commitDateTime": "2018-05-15 09:27:15", "authoredDateTime": "2018-05-15 09:27:15", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/parsing/parser/clause/WhereClauseParser.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/adapter/ConnectionAdapterTest.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "sharding-proxy/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/common/SQLExecuteBackendHandler.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "sharding-proxy/src/main/resources/conf/config.yaml", "insertions": 13, "deletions": 14, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WhereClauseParser.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.parsing.parser.clause.WhereClauseParser.parseInCondition(io.shardingsphere.core.rule.ShardingRule,io.shardingsphere.core.parsing.parser.sql.SQLStatement,io.shardingsphere.core.parsing.parser.expression.SQLExpression)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "io.shardingsphere.core.parsing.parser.clause.WhereClauseParser.parseNotCondition(io.shardingsphere.core.parsing.parser.sql.SQLStatement)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "AbstractConnectionAdapter.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.adapter.AbstractConnectionAdapter.getTransactionIsolation()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConnectionAdapterTest.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.core.jdbc.adapter.ConnectionAdapterTest.assertGetTransactionIsolation()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SQLExecuteBackendHandler.java", "spoonMethods": [{"spoonMethodName": "io.shardingsphere.proxy.backend.common.SQLExecuteBackendHandler.mergeDML(io.shardingsphere.proxy.transport.mysql.packet.command.CommandResponsePackets)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7d445288ca1d5f9d452453657e8f926e4c53a0a9", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["35f3e569ad7272ee1d101cce026da6cb8771ff85", "b7f26611ab2c0c4f84db160d247f6498b9f64754"], "nameRev": "7d445288ca1d5f9d452453657e8f926e4c53a0a9 tags/3.1.0.M1~217^2^2~15", "commitMessage": "Merge pull request #3 from sharding-sphere/dev\n\nSynchronize origin code", "commitDateTime": "2018-09-21 09:29:14", "authoredDateTime": "2018-09-21 09:29:14", "commitGitStats": [{"filePath": "sharding-core/src/main/java/io/shardingsphere/core/event/connection/GetConnectionFinishEvent.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/event/root/{RootInvokeEvent.java => RootInvokeFinishEvent.java}", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "sharding-core/src/main/java/io/shardingsphere/core/event/root/RootInvokeStartEvent.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/api/AllApiTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/constant/AllConstantsTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/executor/AllExecutorTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/executor/fixture/ExecutorTestUtil.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/hint/AllHintTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/keygen/AllKeygenTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/merger/AllMergerTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/merger/dql/groupby/aggregation/AllAggregationTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/metadata/AllMetaDataTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/optimizer/AllOptimizerTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/AllParsingTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/integrate/AllParsingIntegrateTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/lexer/AllLexerTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/parser/sql/AllSQLTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/parser/sql/AllStatementParserTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/parsing/parser/sql/InsertStatementParserTest.java", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/rewrite/SQLRewriteEngineTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/routing/AllRoutingTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/rule/AllRuleTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/java/io/shardingsphere/core/util/AllUtilTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/src/test/resources/parser/insert.xml", "insertions": 21, "deletions": 1, "lines": 22}, {"filePath": "sharding-jdbc-plugin/src/test/java/io/shardingsphere/plugin/keygen/AllTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/io/shardingsphere/jdbc/spring/boot/util/PropertyUtil.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction-storage/src/test/java/io/shardingsphere/transaction/storage/AllStorageTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc-transaction-parent/sharding-jdbc-transaction/src/test/java/io/shardingsphere/transaction/AllTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/adapter/AbstractConnectionAdapter.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "sharding-jdbc/src/main/java/io/shardingsphere/core/jdbc/core/connection/ShardingConnection.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/api/AllApiTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/common/base/AbstractShardingJDBCDatabaseAndTableTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/AbstractBaseExecutorTest.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/AllExecutorTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/fixture/ExecutorTestUtil.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/AllJDBCTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/adapter/AllAdapterTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/adapter/StatementAdapterTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/core/AllCoreTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/jdbc/unsupported/AllUnsupportedTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/transaction/AllTransactionTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/util/AllUtilTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-jdbc/src/test/resources/integrate/cases/dml/dml-integrate-test-cases.xml", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-jdbc/src/test/java/io/shardingsphere/core/executor/fixture/TestOverallExecutionEventListener.java => sharding-opentracing/src/main/java/io/shardingsphere/opentracing/ShardingErrorLogTags.java", "insertions": 16, "deletions": 18, "lines": 34}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/ShardingTags.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/CloseConnectionEventListener.java", "insertions": 5, "deletions": 16, "lines": 21}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/GetConnectionEventListener.java", "insertions": 8, "deletions": 14, "lines": 22}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/OpenTracingListener.java", "insertions": 18, "deletions": 11, "lines": 29}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/ParsingEventListener.java", "insertions": 4, "deletions": 14, "lines": 18}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/RootInvokeEventListener.java", "insertions": 22, "deletions": 17, "lines": 39}, {"filePath": "sharding-opentracing/src/main/java/io/shardingsphere/opentracing/listener/SQLExecuteEventListener.java", "insertions": 4, "deletions": 11, "lines": 15}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/AllTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/SQLParsingEventListenerTest.java", "insertions": 0, "deletions": 115, "lines": 115}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/listener/AllListenerTests.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/listener/BaseEventListenerTest.java", "insertions": 29, "deletions": 6, "lines": 35}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/listener/CloseConnectionEventListenerTest.java", "insertions": 82, "deletions": 0, "lines": 82}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/listener/GetConnectionEventListenerTest.java", "insertions": 77, "deletions": 0, "lines": 77}, {"filePath": "sharding-opentracing/src/test/java/io/shardingsphere/opentracing/listener/RootInvokeEventListenerTest.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "sharding-orchestration/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/io/shardingsphere/jdbc/orchestration/spring/boot/util/PropertyUtil.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-orchestration/sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/api/AllApiTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-orchestration/sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/api/yaml/AllYamlTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-orchestration/sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/api/yaml/sharding/YamlOrchestrationShardingWithMasterSlaveIntegrateTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-orchestration/sharding-jdbc-orchestration/src/test/java/io/shardingsphere/jdbc/orchestration/internal/circuit/AllCircuitTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/io/shardingsphere/jdbc/orchestration/internal/state/datasource/DataSourceService.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/test/java/io/shardingsphere/jdbc/orchestration/internal/AllInternalTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/connection/BackendConnection.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/backend/jdbc/execute/JDBCExecuteEngine.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-proxy/src/main/java/io/shardingsphere/proxy/frontend/mysql/MySQLFrontendHandler.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "sharding-sql-test/src/main/resources/sql/dml/insert.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "d6e5e0eeba43f3fe8a9a6c6e7871e6a6fb15087a", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["1166807f670ac3ad1aa6c8ea532240d3759af13f", "84a73932375de1c71d267548127ee975b42b470e"], "nameRev": "d6e5e0eeba43f3fe8a9a6c6e7871e6a6fb15087a tags/4.0.0-RC2~495^2~4", "commitMessage": "Merge pull request #3 from apache/dev\n\nupdate", "commitDateTime": "2019-06-03 21:06:18", "authoredDateTime": "2019-06-03 21:06:18", "commitGitStats": [{"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResult.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/iterator/IteratorStreamMergedResultTest.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResultTest.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResultTest.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResultTest.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/extractor/impl/dml/select/LimitExtractor.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/extractor/impl/dml/select/item/impl/TopSelectItemExtractor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/common/dml/LimitFiller.java", "insertions": 1, "deletions": 35, "lines": 36}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/common/dml/SelectItemFiller.java", "insertions": 2, "deletions": 17, "lines": 19}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/sharding/dml/select/ShardingRowNumberPredicateFiller.java", "insertions": 16, "deletions": 25, "lines": 41}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/context/limit/LimitValue.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/limit/LimitValueSegment.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/limit/NumberLiteralLimitValueSegment.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/limit/ParameterMarkerLimitValueSegment.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/statement/AbstractSQLStatement.java", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/statement/dml/SelectStatement.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/limit/LimitAssert.java", "insertions": 16, "deletions": 10, "lines": 26}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/token/OffsetTokenAssert.java", "insertions": 0, "deletions": 74, "lines": 74}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/token/RowCountTokenAssert.java", "insertions": 0, "deletions": 74, "lines": 74}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/token/TokenAssert.java", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/jaxb/token/ExpectedOffsetToken.java", "insertions": 0, "deletions": 37, "lines": 37}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/jaxb/token/ExpectedRowCountToken.java", "insertions": 0, "deletions": 37, "lines": 37}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/jaxb/token/ExpectedTokens.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/dql/select_group_by.xml", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/dql/select_pagination.xml", "insertions": 0, "deletions": 17, "lines": 17}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/parser/dql/select_pagination_group_by_order_by.xml", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/rewriter/EncryptSQLRewriter.java", "insertions": 17, "deletions": 3, "lines": 20}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/rewriter/ShardingSQLRewriter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/ShardingTokenGenerateEngine.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/EncryptColumnTokenGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/OffsetTokenGenerator.java", "insertions": 53, "deletions": 0, "lines": 53}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/RowCountTokenGenerator.java", "insertions": 53, "deletions": 0, "lines": 53}, {"filePath": "sharding-core/{sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/token/impl => sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo}/EncryptColumnToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/{sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/token/impl => sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo}/OffsetToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/rewriter/ShardingSQLRewriterTest.java", "insertions": 76, "deletions": 78, "lines": 154}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ParsingSQLRouter.java", "insertions": 17, "deletions": 6, "lines": 23}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/DatabaseTest.java", "insertions": 21, "deletions": 12, "lines": 33}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "f2a5374de2d6d8e614ddb73ad3ebc5f496297c87", "commitGHEventType": "referenced", "commitUser": "terrymanu", "commitParents": ["214c11e677745600887da3a21dbaf104096488dd", "ad8989f6e37697fd35d4f69f1fe67b8fee766492"], "nameRev": "f2a5374de2d6d8e614ddb73ad3ebc5f496297c87 tags/4.0.0-RC2~255^2~1", "commitMessage": "Merge pull request #3 from apache/dev\n\npull", "commitDateTime": "2019-07-09 08:20:19", "authoredDateTime": "2019-07-09 08:20:19", "commitGitStats": [{"filePath": "RELEASE-NOTES.md", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "RELEASE-NOTES_ZH.md", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "jenkinsfile", "insertions": 71, "deletions": 0, "lines": 71}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/table/TableMetaData.java", "insertions": 4, "deletions": 6, "lines": 10}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/route/standard/StandardShardingStrategy.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/route/value/ListRouteValue.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/strategy/route/value/{BetweenRouteValue.java => RangeRouteValue.java}", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/test/java/org/apache/shardingsphere/core/strategy/route/ShardingStrategyTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-entry/src/main/java/org/apache/shardingsphere/core/BaseShardingEngine.java", "insertions": 41, "deletions": 18, "lines": 59}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/BaseShardingEngineTest.java", "insertions": 3, "deletions": 7, "lines": 10}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/PreparedQueryShardingEngineTest.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-entry/src/test/java/org/apache/shardingsphere/core/SimpleQueryShardingEngineTest.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/metadata/TableMetaDataLoader.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/MergeEngineFactory.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngine.java", "insertions": 20, "deletions": 21, "lines": 41}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResult.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparator.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResult.java", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByValue.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResult.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByValue.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/main/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/MergeEngineFactoryTest.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/DQLMergeEngineTest.java", "insertions": 91, "deletions": 40, "lines": 131}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByMemoryMergedResultTest.java", "insertions": 17, "deletions": 7, "lines": 24}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByRowComparatorTest.java", "insertions": 59, "deletions": 30, "lines": 89}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByStreamMergedResultTest.java", "insertions": 11, "deletions": 7, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/groupby/GroupByValueTest.java", "insertions": 27, "deletions": 12, "lines": 39}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/iterator/IteratorStreamMergedResultTest.java", "insertions": 9, "deletions": 5, "lines": 14}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByStreamMergedResultTest.java", "insertions": 11, "deletions": 7, "lines": 18}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/orderby/OrderByValueTest.java", "insertions": 29, "deletions": 19, "lines": 48}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/LimitDecoratorMergedResultTest.java", "insertions": 17, "deletions": 11, "lines": 28}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/RowNumberDecoratorMergedResultTest.java", "insertions": 16, "deletions": 10, "lines": 26}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/dql/pagination/TopAndRowNumberDecoratorMergedResultTest.java", "insertions": 19, "deletions": 11, "lines": 30}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/OptimizeEngineFactory.java", "insertions": 31, "deletions": 17, "lines": 48}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/DefaultOptimizeEngine.java", "insertions": 0, "deletions": 37, "lines": 37}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/OptimizeEngine.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/encrypt/EncryptInsertOptimizeEngine.java", "insertions": 11, "deletions": 16, "lines": 27}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/encrypt/EncryptWhereOptimizeEngine.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/sharding/ddl/{DDLOptimizeEngine.java => ShardingDropIndexOptimizeEngine.java}", "insertions": 13, "deletions": 23, "lines": 36}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/sharding/dml/AlwaysFalseRouteCondition.java", "insertions": 0, "deletions": 28, "lines": 28}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/sharding/dml/ShardingDeleteOptimizeEngine.java", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/sharding/dml/ShardingInsertOptimizeEngine.java", "insertions": 42, "deletions": 42, "lines": 84}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/sharding/dml/ShardingSelectOptimizeEngine.java", "insertions": 175, "deletions": 74, "lines": 249}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/sharding/dml/ShardingUpdateOptimizeEngine.java", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "sharding-core/{sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/InsertGeneratedKeyPlaceholder.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/engine/transparent/TransparentOptimizeEngine.java}", "insertions": 10, "deletions": 16, "lines": 26}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/result/OptimizeResult.java", "insertions": 0, "deletions": 91, "lines": 91}, {"filePath": "sharding-core/{sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/aware/ShardingRuleAware.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/InsertColumns.java}", "insertions": 18, "deletions": 7, "lines": 25}, {"filePath": "sharding-core/{sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/rewriter/parameter/ParameterRewriter.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/InsertOptimizedStatement.java}", "insertions": 17, "deletions": 8, "lines": 25}, {"filePath": "sharding-core/{sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/optimizer/SQLStatementOptimizer.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/OptimizedStatement.java}", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/{sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/aware/EncryptRuleAware.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/WhereOptimizedStatement.java}", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/encrypt/EncryptInsertColumns.java", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/{result/insert/InsertOptimizeResult.java => statement/encrypt/EncryptInsertOptimizedStatement.java}", "insertions": 21, "deletions": 11, "lines": 32}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/encrypt/EncryptWhereOptimizedStatement.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "sharding-core/{sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/encrypt/dml/EncryptOrPredicateFiller.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/encrypt/condition/WhereClauseEncryptConditionEngine.java}", "insertions": 47, "deletions": 50, "lines": 97}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/ddl/DropIndexOptimizedStatement.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "sharding-core/{sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/InsertAssistedColumnsPlaceholder.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/ShardingWhereOptimizedStatement.java}", "insertions": 16, "deletions": 18, "lines": 34}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/{engine/sharding/dml => statement/sharding/dml/condition}/AlwaysFalseRouteValue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/{sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/ShardingPlaceholder.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/condition/AlwaysFalseShardingCondition.java}", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/{condition/RouteCondition.java => statement/sharding/dml/condition/ShardingCondition.java}", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/{condition/RouteConditions.java => statement/sharding/dml/condition/ShardingConditions.java}", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/condition/engine/InsertClauseShardingConditionEngine.java", "insertions": 112, "deletions": 0, "lines": 112}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/condition/engine/WhereClauseShardingConditionEngine.java", "insertions": 183, "deletions": 0, "lines": 183}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/condition/generator/ConditionValue.java", "insertions": 71, "deletions": 0, "lines": 71}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/condition/generator/ConditionValueGenerator.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/condition/generator/ConditionValueGeneratorFactory.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/condition/generator/impl/ConditionValueBetweenOperatorGenerator.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/condition/generator/impl/ConditionValueCompareOperatorGenerator.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/condition/generator/impl/ConditionValueInOperatorGenerator.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/{keygen => statement/sharding/dml/insert}/GeneratedKey.java", "insertions": 13, "deletions": 21, "lines": 34}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/{result => statement/sharding/dml}/insert/InsertOptimizeResultUnit.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/insert/ShardingInsertColumns.java", "insertions": 93, "deletions": 0, "lines": 93}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/insert/ShardingInsertOptimizedStatement.java", "insertions": 76, "deletions": 0, "lines": 76}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/{pagination => statement/sharding/dml/select}/Pagination.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/select/ShardingSelectOptimizedStatement.java", "insertions": 189, "deletions": 0, "lines": 189}, {"filePath": "sharding-core/{sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/LimitOffsetPlaceholder.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/select/groupby/GroupBy.java}", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/select/groupby/GroupByEngine.java", "insertions": 59, "deletions": 0, "lines": 59}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/{pagination/PaginationValue.java => statement/sharding/dml/select/orderby/OrderBy.java}", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/select/orderby/OrderByEngine.java", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "sharding-core/{sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/InsertColumnsPlaceholder.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/select/orderby/OrderByItem.java}", "insertions": 16, "deletions": 16, "lines": 32}, {"filePath": "sharding-core/{sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/AggregationDistinctPlaceholder.java => sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/statement/transparent/TransparentOptimizedStatement.java}", "insertions": 9, "deletions": 12, "lines": 21}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/engine/encrypt/EncryptInsertOptimizeEngineTest.java", "insertions": 35, "deletions": 39, "lines": 74}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/engine/sharding/ShardingSelectOptimizeEngineTest.java", "insertions": 0, "deletions": 142, "lines": 142}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/engine/sharding/ddl/ShardingDropIndexOptimizeEngineTest.java", "insertions": 65, "deletions": 0, "lines": 65}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/engine/sharding/{ => dml}/ShardingInsertOptimizeEngineTest.java", "insertions": 56, "deletions": 95, "lines": 151}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/engine/sharding/dml/ShardingSelectOptimizeEngineTest.java", "insertions": 190, "deletions": 0, "lines": 190}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/engine/transparent/TransparentOptimizeEngineTest.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/result/InsertOptimizeResultTest.java", "insertions": 0, "deletions": 50, "lines": 50}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/statement/sharding/dml/insert/InsertOptimizedStatementTest.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/{ => statement/sharding/dml/insert/keygen}/GeneratedKeyTest.java", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/SQLParseEngine.java", "insertions": 3, "deletions": 10, "lines": 13}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/entry/EncryptSQLParseEntry.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/entry/MasterSlaveSQLParseEntry.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/entry/ShardingSQLParseEntry.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/SQLStatementFillerEngine.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/encrypt/dml/insert/EncryptInsertValuesFiller.java", "insertions": 0, "deletions": 66, "lines": 66}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/TableFiller.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/dal/SchemaFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/ddl/column/AddColumnDefinitionFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/ddl/column/ColumnDefinitionFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/ddl/column/DropColumnDefinitionFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/ddl/column/ModifyColumnDefinitionFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/ddl/column/RenameColumnDefinitionFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/ddl/constraint/ConstraintDefinitionFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/ddl/constraint/DropPrimaryKeyFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/ddl/index/IndexFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/dml/InsertColumnsFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/impl/dml/InsertValuesFiller.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/dml/LimitFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common/dml/GroupByFiller.java => impl/dml/OrPredicateFiller.java}", "insertions": 11, "deletions": 8, "lines": 19}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/dml/PredicateUtils.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{sharding/dml/select/ShardingRowNumberPredicateFiller.java => impl/dml/RowNumberPredicateFiller.java}", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/dml/SelectItemFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/dml/SelectItemsFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{encrypt/dml/update/EncryptSetAssignmentsFiller.java => impl/dml/SetAssignmentsFiller.java}", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/dml/SubqueryFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common/dml/OrderByFiller.java => impl/dml/SubqueryPredicateFiller.java}", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/dml/WhereFiller.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/sharding/dml/ShardingOrPredicateFiller.java", "insertions": 0, "deletions": 132, "lines": 132}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/sharding/dml/insert/ShardingInsertValuesFiller.java", "insertions": 0, "deletions": 105, "lines": 105}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/sharding/dml/insert/ShardingOnDuplicateKeyColumnsFiller.java", "insertions": 0, "deletions": 48, "lines": 48}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/sharding/dml/select/ShardingSubqueryPredicateFiller.java", "insertions": 0, "deletions": 62, "lines": 62}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/filler/sharding/dml/update/ShardingSetAssignmentsFiller.java", "insertions": 0, "deletions": 113, "lines": 113}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/optimizer/SQLStatementOptimizerEngine.java", "insertions": 0, "deletions": 65, "lines": 65}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/optimizer/select/ShardingSelectOptimizer.java", "insertions": 0, "deletions": 211, "lines": 211}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/rule/jaxb/entity/statement/SQLStatementRuleEntity.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/rule/registry/statement/SQLStatementRule.java", "insertions": 0, "deletions": 15, "lines": 15}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/context/condition/AndCondition.java", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/context/table/Tables.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/order/item/IndexOrderByItemSegment.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/order/item/OrderByItemSegment.java", "insertions": 0, "deletions": 15, "lines": 15}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/statement/dml/DMLStatement.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/statement/dml/InsertStatement.java", "insertions": 1, "deletions": 13, "lines": 14}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/statement/dml/SelectStatement.java", "insertions": 1, "deletions": 144, "lines": 145}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/resources/META-INF/parsing-rule-definition/filler-rule-definition.xml", "insertions": 17, "deletions": 15, "lines": 32}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/resources/META-INF/parsing-rule-definition/sharding/filler-rule-definition.xml", "insertions": 0, "deletions": 25, "lines": 25}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/java/org/apache/shardingsphere/core/parse/filler/{common => impl}/dml/PredicateUtilsTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/java/org/apache/shardingsphere/core/parse/rule/registry/filler/FillerRuleDefinitionTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/java/org/apache/shardingsphere/core/parse/rule/registry/statement/SQLStatementRuleDefinitionTest.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/resources/META-INF/parsing-rule-definition/sharding/mysql/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/resources/META-INF/parsing-rule-definition/sharding/oracle/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/resources/META-INF/parsing-rule-definition/sharding/postgresql/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/test/resources/META-INF/parsing-rule-definition/sharding/sqlserver/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/java/org/apache/shardingsphere/core/parse/filler/dal/MySQLShowLikeFiller.java", "insertions": 2, "deletions": 9, "lines": 11}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/resources/META-INF/parsing-rule-definition/encrypt/mysql/filler-rule-definition.xml", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/resources/META-INF/parsing-rule-definition/encrypt/mysql/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/resources/META-INF/parsing-rule-definition/masterslave/mysql/sql-statement-rule-definition.xml", "insertions": 18, "deletions": 18, "lines": 36}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-mysql/src/main/resources/META-INF/parsing-rule-definition/sharding/mysql/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-oracle/src/main/resources/META-INF/parsing-rule-definition/encrypt/oracle/filler-rule-definition.xml", "insertions": 0, "deletions": 23, "lines": 23}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-oracle/src/main/resources/META-INF/parsing-rule-definition/masterslave/oracle/sql-statement-rule-definition.xml", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-oracle/src/main/resources/META-INF/parsing-rule-definition/sharding/oracle/filler-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-oracle/src/main/resources/META-INF/parsing-rule-definition/sharding/oracle/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-postgresql/src/main/resources/META-INF/parsing-rule-definition/encrypt/postgresql/filler-rule-definition.xml", "insertions": 0, "deletions": 23, "lines": 23}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-postgresql/src/main/resources/META-INF/parsing-rule-definition/masterslave/postgresql/sql-statement-rule-definition.xml", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-postgresql/src/main/resources/META-INF/parsing-rule-definition/sharding/postgresql/filler-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-postgresql/src/main/resources/META-INF/parsing-rule-definition/sharding/postgresql/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-sqlserver/src/main/resources/META-INF/parsing-rule-definition/encrypt/sqlserver/filler-rule-definition.xml", "insertions": 0, "deletions": 23, "lines": 23}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-sqlserver/src/main/resources/META-INF/parsing-rule-definition/masterslave/sqlserver/sql-statement-rule-definition.xml", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-sqlserver/src/main/resources/META-INF/parsing-rule-definition/sharding/sqlserver/sql-statement-rule-definition.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/fixture/ParsingTestCaseFixtureBuilder.java", "insertions": 0, "deletions": 37, "lines": 37}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/EncryptSQLStatementAssert.java", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/ShardingSQLStatementAssert.java", "insertions": 2, "deletions": 7, "lines": 9}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/condition/ConditionAssert.java", "insertions": 9, "deletions": 15, "lines": 24}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/insert/InsertNamesAndValuesAssert.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/item/AggregationSelectItemAssert.java", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/asserts/orderby/OrderByAssert.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/engine/encrypt/EncryptParameterizedParsingTest.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/engine/sharding/ShardingParameterizedParsingExceptionTest.java", "insertions": 0, "deletions": 67, "lines": 67}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/engine/sharding/ShardingParameterizedParsingTest.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/engine/sharding/ShardingParameterizedUnsupportedParsingTest.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/jaxb/insert/ExpectedInsertColumnsAndValues.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/java/org/apache/shardingsphere/core/parse/integrate/jaxb/root/ParserResult.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/encrypt/delete.xml", "insertions": 13, "deletions": 19, "lines": 32}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/encrypt/insert.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/encrypt/select.xml", "insertions": 18, "deletions": 26, "lines": 44}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/encrypt/update.xml", "insertions": 9, "deletions": 15, "lines": 24}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/sharding/dml/delete.xml", "insertions": 15, "deletions": 25, "lines": 40}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/sharding/dml/select.xml", "insertions": 18, "deletions": 30, "lines": 48}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/sharding/dml/select_group_by.xml", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/sharding/dml/select_or.xml", "insertions": 12, "deletions": 20, "lines": 32}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/sharding/dml/select_order_by.xml", "insertions": 6, "deletions": 10, "lines": 16}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/sharding/dml/select_sub_query.xml", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java", "insertions": 82, "deletions": 84, "lines": 166}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/builder/BaseParameterBuilder.java", "insertions": 99, "deletions": 0, "lines": 99}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/builder/InsertParameterBuilder.java", "insertions": 87, "deletions": 0, "lines": 87}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/builder/ParameterBuilder.java", "insertions": 7, "deletions": 91, "lines": 98}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/builder/SQLBuilder.java", "insertions": 33, "deletions": 46, "lines": 79}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/IndexPlaceholder.java", "insertions": 0, "deletions": 51, "lines": 51}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/InsertSetAddGeneratedKeyPlaceholder.java", "insertions": 0, "deletions": 52, "lines": 52}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/InsertSetAddItemsPlaceholder.java", "insertions": 0, "deletions": 59, "lines": 59}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/InsertSetEncryptValuePlaceholder.java", "insertions": 0, "deletions": 45, "lines": 45}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/InsertValuesPlaceholder.java", "insertions": 0, "deletions": 67, "lines": 67}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/LimitRowCountPlaceholder.java", "insertions": 0, "deletions": 38, "lines": 38}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/OrderByPlaceholder.java", "insertions": 0, "deletions": 52, "lines": 52}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/SelectItemPrefixPlaceholder.java", "insertions": 0, "deletions": 34, "lines": 34}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/SelectItemsPlaceholder.java", "insertions": 0, "deletions": 46, "lines": 46}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/placeholder/TablePlaceholder.java", "insertions": 0, "deletions": 48, "lines": 48}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/rewriter/parameter/ShardingParameterRewriter.java", "insertions": 0, "deletions": 62, "lines": 62}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/rewriter/sql/BaseSQLRewriter.java", "insertions": 0, "deletions": 87, "lines": 87}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/rewriter/sql/EncryptSQLRewriter.java", "insertions": 0, "deletions": 257, "lines": 257}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/rewriter/sql/SQLRewriter.java", "insertions": 0, "deletions": 39, "lines": 39}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/rewriter/sql/ShardingSQLRewriter.java", "insertions": 0, "deletions": 173, "lines": 173}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/BaseTokenGenerateEngine.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/EncryptTokenGenerateEngine.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/SQLTokenGenerateEngine.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/ShardingTokenGenerateEngine.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/AggregationDistinctTokenGenerator.java", "insertions": 6, "deletions": 10, "lines": 16}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/CollectionSQLTokenGenerator.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/EncryptColumnTokenGenerator.java", "insertions": 0, "deletions": 82, "lines": 82}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/IndexTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertAssistedColumnsTokenGenerator.java", "insertions": 14, "deletions": 13, "lines": 27}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertColumnsTokenGenerator.java", "insertions": 21, "deletions": 22, "lines": 43}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertGeneratedKeyTokenGenerator.java", "insertions": 10, "deletions": 11, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertSetAddAssistedColumnsTokenGenerator.java", "insertions": 25, "deletions": 13, "lines": 38}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertSetAddGeneratedKeyTokenGenerator.java", "insertions": 20, "deletions": 14, "lines": 34}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertSetEncryptValueTokenGenerator.java", "insertions": 14, "deletions": 11, "lines": 25}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertValuesTokenGenerator.java", "insertions": 22, "deletions": 7, "lines": 29}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/OffsetTokenGenerator.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/OptionalSQLTokenGenerator.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/OrderByTokenGenerator.java", "insertions": 20, "deletions": 9, "lines": 29}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/RemoveTokenGenerator.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/RowCountTokenGenerator.java", "insertions": 14, "deletions": 12, "lines": 26}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/SelectItemPrefixTokenGenerator.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/SelectItemsTokenGenerator.java", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/TableTokenGenerator.java", "insertions": 32, "deletions": 14, "lines": 46}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/UpdateEncryptColumnTokenGenerator.java", "insertions": 145, "deletions": 0, "lines": 145}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/WhereEncryptColumnTokenGenerator.java", "insertions": 126, "deletions": 0, "lines": 126}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/AggregationDistinctToken.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/{placeholder => token/pojo}/Alterable.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/EncryptColumnToken.java", "insertions": 2, "deletions": 9, "lines": 11}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/IndexToken.java", "insertions": 15, "deletions": 3, "lines": 18}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertAssistedColumnsToken.java", "insertions": 12, "deletions": 2, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertColumnsToken.java", "insertions": 15, "deletions": 5, "lines": 20}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertGeneratedKeyToken.java", "insertions": 14, "deletions": 5, "lines": 19}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertSetAddAssistedColumnsToken.java", "insertions": 30, "deletions": 3, "lines": 33}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertSetAddGeneratedKeyToken.java", "insertions": 23, "deletions": 1, "lines": 24}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertSetEncryptValueToken.java", "insertions": 15, "deletions": 3, "lines": 18}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/{placeholder/InsertValuePlaceholder.java => token/pojo/InsertValueToken.java}", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertValuesToken.java", "insertions": 38, "deletions": 2, "lines": 40}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/OffsetToken.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/OrderByToken.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/RemoveToken.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/RowCountToken.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/SelectItemPrefixToken.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/SelectItemsToken.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/TableToken.java", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/{placeholder/UpdateEncryptAssistedItemPlaceholder.java => token/pojo/UpdateEncryptAssistedItemToken.java}", "insertions": 18, "deletions": 10, "lines": 28}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/{placeholder/UpdateEncryptItemPlaceholder.java => token/pojo/UpdateEncryptItemToken.java}", "insertions": 14, "deletions": 9, "lines": 23}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/{placeholder/WhereEncryptColumnPlaceholder.java => token/pojo/WhereEncryptColumnToken.java}", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/builder/BaseParameterBuilderTest.java", "insertions": 85, "deletions": 0, "lines": 85}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/builder/InsertParameterBuilderTest.java", "insertions": 78, "deletions": 0, "lines": 78}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/builder/SQLBuilderTest.java", "insertions": 14, "deletions": 161, "lines": 175}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/placeholder/UpdateEncryptAssistedItemPlaceholderTest.java", "insertions": 0, "deletions": 45, "lines": 45}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/rewriter/EncryptSQLRewriterTest.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/rewriter/ShardingSQLRewriterTest.java", "insertions": 194, "deletions": 183, "lines": 377}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/token/UpdateEncryptAssistedItemTokenTest.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/{placeholder/UpdateEncryptItemPlaceholderTest.java => token/UpdateEncryptItemTokenTest.java}", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/{placeholder/WhereEncryptColumnPlaceholderTest.java => token/WhereEncryptColumnTokenTest.java}", "insertions": 16, "deletions": 15, "lines": 31}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/SQLRouteResult.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/masterslave/ShardingMasterSlaveRouter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/DatabaseHintSQLRouter.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/ParsingSQLRouter.java", "insertions": 42, "deletions": 87, "lines": 129}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/router/sharding/RoutingEngineFactory.java", "insertions": 23, "deletions": 18, "lines": 41}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/broadcast/TableBroadcastRoutingEngine.java", "insertions": 5, "deletions": 9, "lines": 14}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/complex/ComplexRoutingEngine.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngine.java", "insertions": 24, "deletions": 38, "lines": 62}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/DatabaseTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/broadcast/TableBroadcastRoutingEngineTest.java", "insertions": 3, "deletions": 26, "lines": 29}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/complex/ComplexRoutingEngineTest.java", "insertions": 24, "deletions": 19, "lines": 43}, {"filePath": "sharding-core/sharding-core-route/src/test/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngineTest.java", "insertions": 16, "deletions": 11, "lines": 27}, {"filePath": "sharding-integration-test/sharding-jdbc-test/src/test/java/org/apache/shardingsphere/dbtest/engine/util/IntegrateTestParameters.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/BatchPreparedStatementExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/PreparedStatementExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/executor/StatementExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/connection/EncryptConnection.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/datasource/EncryptDataSource.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptPreparedStatement.java", "insertions": 3, "deletions": 13, "lines": 16}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/EncryptStatement.java", "insertions": 4, "deletions": 14, "lines": 18}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingPreparedStatement.java", "insertions": 10, "deletions": 7, "lines": 17}, {"filePath": "sharding-jdbc/sharding-jdbc-core/src/main/java/org/apache/shardingsphere/shardingjdbc/jdbc/core/statement/ShardingStatement.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGenerator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/JDBCDatabaseCommunicationEngine.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/execute/JDBCExecuteEngine.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/PreparedStatementExecutorWrapper.java", "insertions": 8, "deletions": 19, "lines": 27}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/communication/jdbc/wrapper/StatementExecutorWrapper.java", "insertions": 9, "deletions": 18, "lines": 27}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/schema/EncryptSchema.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-proxy/sharding-proxy-backend/src/main/java/org/apache/shardingsphere/shardingproxy/backend/text/TextProtocolBackendHandlerFactory.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/mysql/command/query/binary/prepare/MySQLComStmtPrepareExecutor.java", "insertions": 4, "deletions": 11, "lines": 15}, {"filePath": "sharding-proxy/sharding-proxy-frontend/sharding-proxy-frontend-postgresql/src/main/java/org/apache/shardingsphere/shardingproxy/frontend/postgresql/command/query/binary/parse/PostgreSQLComParseExecutor.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/main/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/prepare/MySQLComStmtPrepareOKPacket.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-proxy/sharding-proxy-transport/sharding-proxy-transport-mysql/src/test/java/org/apache/shardingsphere/shardingproxy/transport/mysql/packet/command/query/binary/prepare/MySQLComStmtPrepareMySQLOKPacketTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/OrchestrationSpringBootConfiguration.java", "insertions": 69, "deletions": 73, "lines": 142}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/encrypt/LocalEncryptRuleCondition.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/masterslave/LocalMasterSlaveRuleCondition.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/sharding/LocalShardingRuleCondition.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/util/PropertyUtil.java", "insertions": 22, "deletions": 3, "lines": 25}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/registry/TestRegistryCenter.java", "insertions": 14, "deletions": 6, "lines": 20}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/type/OrchestrationSpringBootRegistryEncryptTest.java", "insertions": 91, "deletions": 0, "lines": 91}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/type/OrchestrationSpringBootRegistryMasterSlaveTest.java", "insertions": 100, "deletions": 0, "lines": 100}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/java/org/apache/shardingsphere/shardingjdbc/orchestration/spring/boot/type/OrchestrationSpringBootRegistryShardingTest.java", "insertions": 224, "deletions": 0, "lines": 224}, {"filePath": "sharding-spring/sharding-jdbc-orchestration-spring/sharding-jdbc-orchestration-spring-boot-starter/src/test/resources/application-registry.properties", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/SpringBootConfiguration.java", "insertions": 31, "deletions": 14, "lines": 45}, {"filePath": "sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/encrypt/EncryptRuleCondition.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/masterslave/MasterSlaveRuleCondition.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/sharding/ShardingRuleCondition.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "sharding-spring/sharding-jdbc-spring/sharding-jdbc-spring-boot-starter/src/main/java/org/apache/shardingsphere/shardingjdbc/spring/boot/util/PropertyUtil.java", "insertions": 22, "deletions": 3, "lines": 25}, {"filePath": "sharding-sql-test/src/main/java/org/apache/shardingsphere/test/sql/loader/sharding/ShardingParseErrorSQLCasesRegistry.java", "insertions": 0, "deletions": 47, "lines": 47}, {"filePath": "sharding-sql-test/src/main/resources/sql/parse_error/parse_error.xml", "insertions": 0, "deletions": 21, "lines": 21}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "8e9b258112732490679e1caf8a03b8f3b19140d9", "commitGHEventType": "referenced", "commitUser": "tristaZero", "commitParents": ["76ec99d853d80fe0bf4c1962b2a61c8ec03bd2e3", "0c0e2713a8aa272881713aebb9a2229432913040"], "nameRev": "8e9b258112732490679e1caf8a03b8f3b19140d9 tags/4.0.0-RC3~202^2~3", "commitMessage": "Merge pull request #3 from apache/dev\n\nsync from apache", "commitDateTime": "2019-09-07 08:38:10", "authoredDateTime": "2019-09-07 08:38:10", "commitGitStats": [{"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/metadata/table/TableMetas.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "sharding-core/sharding-core-common/src/main/java/org/apache/shardingsphere/core/rule/EncryptRule.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "sharding-core/sharding-core-entry/src/main/java/org/apache/shardingsphere/core/BaseShardingEngine.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResult.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/MemoryQueryResult.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResult.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/result/QueryResultMetaData.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-execute/src/main/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRow.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/result/DistinctQueryResultTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-execute/src/test/java/org/apache/shardingsphere/core/execute/sql/execute/row/QueryRowTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-merge/src/test/java/org/apache/shardingsphere/core/merge/MergeEngineFactoryTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/api/segment/InsertValue.java", "insertions": 16, "deletions": 30, "lines": 46}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/api/segment/expression/DerivedLiteralExpressionSegment.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/api/segment/expression/DerivedParameterMarkerExpressionSegment.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/api/segment/expression/DerivedSimpleExpressionSegment.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/api/statement/InsertOptimizedStatement.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/encrypt/constant/EncryptDerivedColumnType.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/encrypt/engine/dml/EncryptInsertOptimizeEngine.java", "insertions": 3, "deletions": 13, "lines": 16}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/encrypt/statement/EncryptInsertOptimizedStatement.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/constant/ShardingDerivedColumnType.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/engnie/dml/ShardingInsertOptimizeEngine.java", "insertions": 16, "deletions": 29, "lines": 45}, {"filePath": "sharding-core/sharding-core-optimize/src/main/java/org/apache/shardingsphere/core/optimize/sharding/statement/dml/ShardingInsertOptimizedStatement.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/encrypt/engine/EncryptInsertOptimizeEngineTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "sharding-core/sharding-core-optimize/src/test/java/org/apache/shardingsphere/core/optimize/sharding/segment/insert/InsertOptimizedStatementTest.java", "insertions": 14, "deletions": 15, "lines": 29}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/expr/simple/LiteralExpressionSegment.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/segment/dml/expr/simple/ParameterMarkerExpressionSegment.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "sharding-core/sharding-core-parse/sharding-core-parse-common/src/main/java/org/apache/shardingsphere/core/parse/sql/statement/dml/InsertStatement.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/SQLRewriteEngine.java", "insertions": 23, "deletions": 37, "lines": 60}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertSetCipherColumnTokenGenerator.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertSetGeneratedKeyColumnTokenGenerator.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/InsertSetQueryAndPlainColumnsTokenGenerator.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/UpdateEncryptColumnTokenGenerator.java", "insertions": 35, "deletions": 39, "lines": 74}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/generator/WhereEncryptColumnTokenGenerator.java", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertSetCipherColumnToken.java", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertSetGeneratedKeyColumnToken.java", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertSetQueryAndPlainColumnsToken.java", "insertions": 11, "deletions": 10, "lines": 21}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/InsertValuesToken.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/sharding-core-rewrite/src/main/java/org/apache/shardingsphere/core/rewrite/token/pojo/UpdateEncryptLiteralColumnToken.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "sharding-core/sharding-core-rewrite/src/test/java/org/apache/shardingsphere/core/rewrite/rewriter/ShardingSQLRewriteEngineTest.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "sharding-core/sharding-core-route/src/main/java/org/apache/shardingsphere/core/route/type/standard/StandardRoutingEngine.java", "insertions": 15, "deletions": 11, "lines": 26}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 3, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}]}