{"bugLabels": ["Bug"], "projectName": "haraldk/TwelveMonkeys", "captureTime": "Fri Jul  3 16:48:03 2020", "issues": [{"created": "2020-06-24 12:39:10", "commits": {"8f942922fdc6274f37a7f25a84fa2cb1ac103097": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "closed": "2020-06-28 10:12:40", "filteredCommits": [], "commitsDetails": [{"nameRev": "", "commitMessage": "", "commitParents": [], "spoonStatsSkippedReason": "", "commitHash": "8f942922fdc6274f37a7f25a84fa2cb1ac103097", "authoredDateTime": "", "commitGHEventType": "referenced", "commitGitStats": [], "commitDateTime": "", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/547", "ttf": 3.000277777777778, "title": "BMP Writer only supports TYPE_4BYTE_ABGR", "statsSkippedReason": "", "user": "FlorianKirmaier", "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The BMPImageWriter currently only supports TYPE_4BYTE_ABGR\r\nWith the previous version, 3.4.3 it worked in our environment because another ImageWriter was found.\r\nWith 3.5 the twelve-monkey implementation is found randomly which ends with the \"Blows!\" exception.\r\nBut we have to remove the other implementation anyway.\r\n\r\nThe issue can be found in the class [DIBImageWriter](https://github.com/haraldk/TwelveMonkeys/blob/master/imageio/imageio-bmp/src/main/java/com/twelvemonkeys/imageio/plugins/bmp/DIBImageWriter.java)\r\nThe required ColorModel is hardcoded. If the code finds another \"Type\" then a \"Blows!\" exception is thrown.\r\n\r\nI assume this is relatively easy to fix? Can I help somehow?\r\n\r\nTest class:\r\n```\r\npackage test;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport javax.imageio.ImageTypeSpecifier;\r\nimport javax.imageio.ImageWriter;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.BufferedOutputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.IOException;\r\nimport java.util.Iterator;\r\n\r\npublic class TestImageWriter {\r\n\r\n    public static void main(String[] args)\r\n    {\r\n        BufferedImage image = createTestImage(100, 100 );\r\n        int imageWidth = image.getWidth();\r\n        int imageHeight = image.getHeight();\r\n        final int imageLengthInBytes = createBytesFromImage(image).length;\r\n    }\r\n\r\n    private static BufferedImage createTestImage(final int width, final int height) {\r\n        // works: TYPE_4BYTE_ABGR\r\n        // doesn't work: TYPE_INT_RGB\r\n        BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);\r\n        Graphics2D g2 = image.createGraphics();\r\n        g2.setBackground(java.awt.Color.BLUE);\r\n        g2.setColor(java.awt.Color.PINK);\r\n        g2.drawLine(0,0, width, height);\r\n        g2.dispose();\r\n        return image;\r\n    }\r\n\r\n\r\n    public static byte[] createBytesFromImage(BufferedImage image) {\r\n        int bufferSize = 1024;\r\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\r\n        byte[] result = null;\r\n\r\n        BufferedOutputStream bufferedStream = new BufferedOutputStream(out, bufferSize);\r\n        String format = \"bmp\";\r\n        try {\r\n            ImageTypeSpecifier type =\r\n                    ImageTypeSpecifier.createFromRenderedImage(image);\r\n            Iterator<ImageWriter> writers = ImageIO.getImageWriters(type, format);\r\n            while(writers.hasNext()) {\r\n                ImageWriter writer = writers.next();\r\n                if(writer.getClass().getName().contains(\"welve\")) {\r\n                    writer.setOutput(ImageIO.createImageOutputStream(bufferedStream));\r\n                    System.out.println(\"Found writer: \" + writer);\r\n                    writer.write(image);\r\n                }\r\n            }\r\n\r\n            ImageIO.write(image, format, bufferedStream);\r\n\r\n            bufferedStream.flush();\r\n            result = out.toByteArray();\r\n\r\n\r\n        } catch (IOException ex) {\r\n            throw new RuntimeException(ex);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n```", "labels": ["Bug"]}, {"created": "2020-02-12 06:15:48", "commits": {"96cb3a07f450d7cc280b2ca91703da48b61722dd": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)"], "closed": "2020-04-15 11:30:08", "filteredCommits": ["96cb3a07f450d7cc280b2ca91703da48b61722dd"], "commitsDetails": [{"nameRev": "96cb3a07f450d7cc280b2ca91703da48b61722dd master~2", "commitMessage": "#525: Fix for negative arrays size in old style JPEG in TIFF.\n", "commitParents": ["cd6a6258b608bfcb152cbf0bcb0a0b70296ebd7b"], "spoonStatsSkippedReason": "", "commitHash": "96cb3a07f450d7cc280b2ca91703da48b61722dd", "authoredDateTime": "2020-04-15 13:28:56", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 21, "deletions": 0, "lines": 21, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/662260-color.tif"}, {"insertions": 6, "deletions": 5, "lines": 11, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2020-04-15 13:28:56", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadOldStyleWangMultiStrip()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadOldStyleWangMultiStrip2()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 11, "MOV": 3, "INS": 5, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/525", "ttf": 63.000277777777775, "gitStatsSummary": {"insertions": 6, "deletions": 5, "lines": 11, "gitFilesChange": 1}, "title": "Reading a multipage TIFF with JPEG compression can yield a ArrayNegativeSizeException", "statsSkippedReason": "", "user": "odrusso", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 1, "TOT": 11, "MOV": 3, "INS": 5, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When running the following code on a multi-page TIFF (attached) (in Kotlin)\r\n```\r\nimport java.awt.image.BufferedImage\r\nimport javax.imageio.ImageIO\r\n\r\nval inputBytes = File(*path to image*).readBytes()\r\n\r\nval imageStream = ImageIO.createImageInputStream(inputBytes.inputStream())\r\nreader.input = imageStream\r\nval numPages = reader.getNumImages(true)\r\nval listOfImages = (0 until numPages).map { reader.read(it) }.toList()\r\n```\r\n\r\nThrows the following error:\r\n\r\n```\r\njava.lang.NegativeArraySizeException: -19548\r\n\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(TIFFImageReader.java:1303)\r\n\tat java.desktop/javax.imageio.ImageReader.read(ImageReader.java:938)\r\n        ...\r\n```\r\nWith the following Gradle dependencies,\r\n```\r\ncompile group: 'com.twelvemonkeys.imageio', name: 'imageio-pnm', version: '3.5'\r\ncompile group: 'com.twelvemonkeys.imageio', name: 'imageio-tiff', version: '3.5'\r\n```\r\n\r\nNotably - the ImageIO builtin TIFFImageReader does not exhibit the same behavior.\r\n\r\n[662260-color.tif.zip](https://github.com/haraldk/TwelveMonkeys/files/4190408/662260-color.tif.zip)\r\n\r\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2020-01-29 12:58:58", "commits": {"fb304d6c27d100e9ae22deb45b9632d86de480a2": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.asTree(com.twelvemonkeys.imageio.metadata.Directory)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.setFromTree(java.lang.String,org.w3c.dom.Node)"], "closed": "2020-01-29 19:59:29", "filteredCommits": ["fb304d6c27d100e9ae22deb45b9632d86de480a2"], "commitsDetails": [{"nameRev": "fb304d6c27d100e9ae22deb45b9632d86de480a2 master~6", "commitMessage": "#520: Fix for incorrect serialization of single element arrays in metadata.\n", "commitParents": ["903289caa40e1280da46915752f95cd8b9cbcbb5"], "spoonStatsSkippedReason": "", "commitHash": "fb304d6c27d100e9ae22deb45b9632d86de480a2", "authoredDateTime": "2020-01-29 20:58:34", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 3, "lines": 6, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageMetadata.java"}, {"insertions": 39, "deletions": 0, "lines": 39, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2020-01-29 20:58:34", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.asTree(com.twelvemonkeys.imageio.metadata.Directory)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.setFromTree(java.lang.String,org.w3c.dom.Node)"}], "spoonFilePath": "TIFFImageMetadata.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testMergeTreeGray()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testMergeTreeBW()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testMergeTreeARGB()"}], "spoonFilePath": "TIFFImageWriterTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/520", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "title": "TIFFImageMetadata.setFromTree(...) fails on TIFF.TAG_BITS_PER_SAMPLE", "statsSkippedReason": "", "user": "Schmidor", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "We're modifying some metadata tags in the tree and merge the changes back via setFromTree.\r\nWhen the base image uses simple color data it works, but on grayscale or monochrome image types it fails on merging the tree node containing TIFF.TAG_BITS_PER_SAMPLE.\r\nI'm suspecting the latest metadata changes in 3.5, as this is a newer problem not happening in an older 3.5 snapshot i'm using.\r\n\r\n```\r\njava.lang.NumberFormatException: For input string: \"[S@5cc7c2a6\"\r\n\r\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:68)\r\n\tat java.base/java.lang.Integer.parseInt(Integer.java:658)\r\n\tat java.base/java.lang.Integer.parseInt(Integer.java:776)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.getValue(TIFFImageMetadata.java:1252)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.toEntry(TIFFImageMetadata.java:1170)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.toIFD(TIFFImageMetadata.java:1152)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.mergeNativeTree(TIFFImageMetadata.java:1134)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.mergeEntries(TIFFImageMetadata.java:953)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.setFromTree(TIFFImageMetadata.java:922)\r\n```\r\n\r\n```\r\n    @Test\r\n    public void testMergeTree() throws IOException{\r\n        BufferedImage image;\r\n        try(InputStream inputStream = getClass().getResourceAsStream(\"/tiff/ccitt_tolessrows.tif\")){\r\n            image = ImageIO.read(inputStream);\r\n        }\r\n\r\n        ImageWriter writer = createImageWriter();\r\n        ImageWriteParam writeParam = writer.getDefaultWriteParam();\r\n        writeParam.setCompressionMode( ImageWriteParam.MODE_EXPLICIT );\r\n        writeParam.setCompressionType(\"CCITT T.6\");\r\n\r\n        IIOMetadata metadata = writer.getDefaultImageMetadata( new ImageTypeSpecifier( image ), writeParam );\r\n\r\n        IIOMetadataNode tiffTree = ( IIOMetadataNode )metadata.getAsTree( metadata.getNativeMetadataFormatName() );\r\n        metadata.setFromTree( metadata.getNativeMetadataFormatName(), tiffTree );\r\n    }\r\n```", "labels": ["Bug"]}, {"created": "2020-01-14 16:52:06", "commits": {"d9d84198031a28924b953391c148c1c207fd7894": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.tiff.TIFFWriter,long)"], "closed": "2020-01-14 20:23:33", "filteredCommits": ["d9d84198031a28924b953391c148c1c207fd7894"], "commitsDetails": [{"nameRev": "d9d84198031a28924b953391c148c1c207fd7894 tags/twelvemonkeys-3.5~2", "commitMessage": "#514: Fix integer overflow in stripbytecounts computation.\n", "commitParents": ["7a9523690c26c2d4e5c13c761f9bbb67ab1dfc6f"], "spoonStatsSkippedReason": "", "commitHash": "d9d84198031a28924b953391c148c1c207fd7894", "authoredDateTime": "2020-01-14 21:17:59", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}], "commitDateTime": "2020-01-14 21:18:13", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.tiff.TIFFWriter,long)"}], "spoonFilePath": "TIFFImageWriter.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/514", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "title": "TIFF: Invalid StripByteCounts when writing large resolution files (9800x8000)", "statsSkippedReason": "", "user": "jmleziva", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello, when writing a high resolution tiff file the stripByteCounts appears to be corrupt. An approx 300 mb output file has a single image strip with the byte count of: 4071696385 which is larger than the file itself. \r\n\r\nHowever when working with lower (more common) resolutions the meta for the image strips is created properly. \r\n\r\nI'm not for sure if I am missing a step or if it is a bug with the library.\r\n\r\nThis code creates the file with the incorrect meta data:\r\n```\r\n// Input high resolution 48 bit depth\r\nfinal InputStream inStream = getClass().getClassLoader().getResourceAsStream(\"9800x8000_resolution_48bit_depth.tif\");\r\nfinal BufferedImage originalImage = ImageIO.read(inStream);\r\nfinal int width = originalImage.getWidth();\r\nfinal int height = originalImage.getHeight();\r\n\r\n// Modify image (8 bit per channel, ARGB)\r\nfinal BufferedImage modifiedImage = new BufferedImage(width, height, TYPE_INT_ARGB);\r\nfinal Graphics2D g = modifiedImage.createGraphics();\r\ng.drawImage(originalImage, 0, 0, width, height, null);\r\ng.dispose();\r\n\r\n// Write modified file \r\nfinal File convertedTempFile = File.createTempFile(\"converted_test_image_\", \".tiff\");\r\nImageIO.write(modifiedImage, \"tiff\", convertedTempFile);\r\n```\r\n\r\nAttaching zipped image: [9800x8000_resolution_48bit_depth.zip](https://github.com/haraldk/TwelveMonkeys/files/4060292/9800x8000_resolution_48bit_depth.zip)\r\n\r\nI've tested and reproduced the issue with the following versions: 3.4.1, 3.4.2, 3.4.3\r\n\r\nThanks in advance,\r\n-Jesse", "labels": ["Bug"]}, {"created": "2019-10-02 17:51:41", "commits": {"42e17f20632ab55466687d2fb98e8f597e199aab": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "c087addb765d8cb9daa01ce4f1086bd7eb84df1c": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createFromBufferedImageType(int)", "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createPackedGrayscale(java.awt.color.ColorSpace,int,int)"], "closed": "2019-10-11 15:01:01", "filteredCommits": ["42e17f20632ab55466687d2fb98e8f597e199aab"], "commitsDetails": [{"nameRev": "42e17f20632ab55466687d2fb98e8f597e199aab tags/twelvemonkeys-3.5~8", "commitMessage": "#501: Fix for TYPE_USHORT_555/565_RGB, ColorModel now 16 bits\n", "commitParents": ["f449a50d6436325638433e29bc865438b9abacb6"], "spoonStatsSkippedReason": "", "commitHash": "42e17f20632ab55466687d2fb98e8f597e199aab", "authoredDateTime": "2019-10-11 16:56:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 29, "deletions": 7, "lines": 36, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/util/ImageTypeSpecifiers.java"}, {"insertions": 20, "deletions": 6, "lines": 26, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/util/ImageTypeSpecifiersTest.java"}], "commitDateTime": "2019-10-11 16:56:00", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreatePackedGrayscale4()"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreateFromBufferedImageType()"}], "spoonFilePath": "ImageTypeSpecifiersTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createFromBufferedImageType(int)"}, {"UPD": 9, "TOT": 11, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createPackedGrayscale(java.awt.color.ColorSpace,int,int)"}], "spoonFilePath": "ImageTypeSpecifiers.java"}]}, {"nameRev": "c087addb765d8cb9daa01ce4f1086bd7eb84df1c tags/twelvemonkeys-3.4.3~4", "commitMessage": "#501: Fix for TYPE_USHORT_555/565_RGB, ColorModel now 16 bits\n\n(cherry picked from commit 42e17f20632ab55466687d2fb98e8f597e199aab)\n", "commitParents": ["250c58cc2e13fc7d5ff580f853976d2a7ffc76df"], "spoonStatsSkippedReason": "", "commitHash": "c087addb765d8cb9daa01ce4f1086bd7eb84df1c", "authoredDateTime": "2019-10-11 16:56:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 29, "deletions": 7, "lines": 36, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/util/ImageTypeSpecifiers.java"}, {"insertions": 20, "deletions": 6, "lines": 26, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/util/ImageTypeSpecifiersTest.java"}], "commitDateTime": "2020-01-09 19:25:48", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreatePackedGrayscale4()"}, {"UPD": 0, "TOT": 4, "MOV": 1, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreateFromBufferedImageType()"}], "spoonFilePath": "ImageTypeSpecifiersTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createFromBufferedImageType(int)"}, {"UPD": 9, "TOT": 11, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createPackedGrayscale(java.awt.color.ColorSpace,int,int)"}], "spoonFilePath": "ImageTypeSpecifiers.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/501", "ttf": 8.000277777777777, "gitStatsSummary": {"insertions": 29, "deletions": 7, "lines": 36, "gitFilesChange": 1}, "title": "Resample filter error resizing BufferedImage of type RGB_555 or RGB_565", "statsSkippedReason": "", "user": "Zardoz89", "changesInPackagesGIT": ["imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/util"], "spoonStatsSummary": {"UPD": 9, "spoonMethodsChanged": 2, "TOT": 12, "MOV": 2, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Adapting some old code base to use Twelve Monkeys resampling filter (using esampleOp.FILTER_MITCHELL), I found a particular BMP file that throws an error : \r\n\r\n```\r\njava.lang.IllegalArgumentException: Raster IntegerInterleavedRaster: width = 63 height = 32 #Bands = 3 xOff = 0 yOff = 0 dataOffset[0] 0 is incompatible with ColorModel DirectColorModel: rmask=7c00 gmask=3e0 bmask=1f amask=0\r\n\tat java.awt.image.BufferedImage.<init>(BufferedImage.java:622)\r\n\tat com.twelvemonkeys.image.ResampleOp.createCompatibleDestImage(ResampleOp.java:821)\r\n\tat com.twelvemonkeys.image.ResampleOp.filter(ResampleOp.java:574)\r\n```\r\n\r\nDebuging, I saw that the BufferedImage generated by Twelve Monkeys BMP ImageIO plugins, is  TYPE_USHORT_555_RGB with DirectColorModel. I suspect that the same problem would rise with a BufferedImage of TYPE_USHORT_565_RGB, but I didn't test it.\r\n\r\nI workaround this problem, converting it to TYPE_INT_RGB\r\n\r\nI adjunct the BMP \r\n[bmp_rgb16.zip](https://github.com/haraldk/TwelveMonkeys/files/3682533/bmp_rgb16.zip)\r\n\r\n", "labels": ["Bug", "New feature"]}, {"created": "2019-08-14 07:43:47", "commits": {"250c58cc2e13fc7d5ff580f853976d2a7ffc76df": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "0c2433dc9f0618fe744e51ea2c9b42a0c4d828b0": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2019-08-29 17:14:43", "filteredCommits": [], "commitsDetails": [{"nameRev": "250c58cc2e13fc7d5ff580f853976d2a7ffc76df tags/twelvemonkeys-3.4.3~5", "commitMessage": "#289, #493: Finally implemented subsampling for < 8 bit samples\n\n(cherry picked from commit 0c2433dc9f0618fe744e51ea2c9b42a0c4d828b0)\n", "commitParents": ["c33b3a76f4a56c5d07180c33cbcf5418f921a841"], "spoonStatsSkippedReason": "", "commitHash": "250c58cc2e13fc7d5ff580f853976d2a7ffc76df", "authoredDateTime": "2019-08-29 19:06:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 145, "deletions": 0, "lines": 145, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/util/IIOUtilTest.java"}, {"insertions": 15, "deletions": 13, "lines": 28, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}, {"insertions": 23, "deletions": 0, "lines": 23, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 80, "deletions": 7, "lines": 87, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/util/IIOUtil.java"}], "commitDateTime": "2020-01-09 19:25:48", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtilTest"}], "spoonFilePath": "IIOUtilTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadWithSubsampleParamPixelsBinary()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtil.fakeAOI(java.awt.image.BufferedImage,java.awt.Rectangle)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtil.subsampleRow(int[],int,int,int[],int,int,int,int)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtil.normalizeNames(java.lang.String[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtil.subsampleRow(byte[],int,int,byte[],int,int,int,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtil.subsampleRow(short[],int,int,short[],int,int,int,int)"}], "spoonFilePath": "IIOUtil.java"}, {"spoonMethods": [{"UPD": 7, "TOT": 28, "MOV": 13, "INS": 5, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(java.awt.image.Raster,java.awt.Rectangle,int,int,int,int,int,java.awt.image.WritableRaster,int,int,int,int,java.io.DataInput)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.createDecompressorStream(int,int,int,java.io.InputStream)"}], "spoonFilePath": "TIFFImageReader.java"}]}, {"nameRev": "0c2433dc9f0618fe744e51ea2c9b42a0c4d828b0 tags/twelvemonkeys-3.5~10", "commitMessage": "#289, #493: Finally implemented subsampling for < 8 bit samples\n", "commitParents": ["a5def1ba3d64cb2fadf45220f211ecbf1ec7ed22"], "spoonStatsSkippedReason": "", "commitHash": "0c2433dc9f0618fe744e51ea2c9b42a0c4d828b0", "authoredDateTime": "2019-08-29 19:06:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 145, "deletions": 0, "lines": 145, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/util/IIOUtilTest.java"}, {"insertions": 15, "deletions": 13, "lines": 28, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}, {"insertions": 23, "deletions": 0, "lines": 23, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 80, "deletions": 7, "lines": 87, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/util/IIOUtil.java"}], "commitDateTime": "2019-08-29 19:11:14", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtilTest"}], "spoonFilePath": "IIOUtilTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadWithSubsampleParamPixelsBinary()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtil.fakeAOI(java.awt.image.BufferedImage,java.awt.Rectangle)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtil.subsampleRow(int[],int,int,int[],int,int,int,int)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtil.normalizeNames(java.lang.String[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtil.subsampleRow(byte[],int,int,byte[],int,int,int,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.IIOUtil.subsampleRow(short[],int,int,short[],int,int,int,int)"}], "spoonFilePath": "IIOUtil.java"}, {"spoonMethods": [{"UPD": 7, "TOT": 28, "MOV": 13, "INS": 5, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(java.awt.image.Raster,java.awt.Rectangle,int,int,int,int,int,java.awt.image.WritableRaster,int,int,int,int,java.io.DataInput)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.createDecompressorStream(int,int,int,java.io.InputStream)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/493", "ttf": 15.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "ArrayIndexOutOfBoundsException in TIFFImageReader#readStripTileData", "statsSkippedReason": "", "user": "viqueen", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "```\r\nCaused by: java.lang.ArrayIndexOutOfBoundsException: arraycopy: last source index 217 out of bounds for byte[216]\r\n\tat java.base/java.lang.System.arraycopy(Native Method)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(TIFFImageReader.java:1874)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(TIFFImageReader.java:1095)\r\n```\r\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2019-08-08 20:11:37", "commits": {"8247861095c5980ca3dbc278fd775ce6fc4de070": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "bdd7f5b22879641b4b1cf451555fd28ad747ece7": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readValue(javax.imageio.stream.ImageInputStream,short,int)"], "closed": "2019-08-08 21:03:39", "filteredCommits": ["8247861095c5980ca3dbc278fd775ce6fc4de070"], "commitsDetails": [{"nameRev": "8247861095c5980ca3dbc278fd775ce6fc4de070 tags/twelvemonkeys-3.5~21", "commitMessage": "#492: Now correctly parses multiple strings for ASCII fields.\n", "commitParents": ["8480c929c107c4d700bbc2e9e427ca3d327e5daf"], "spoonStatsSkippedReason": "", "commitHash": "8247861095c5980ca3dbc278fd775ce6fc4de070", "authoredDateTime": "2019-08-08 23:03:13", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 1, "lines": 8, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReader.java"}], "commitDateTime": "2019-08-08 23:03:13", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readValue(javax.imageio.stream.ImageInputStream,short,int)"}], "spoonFilePath": "TIFFReader.java"}]}, {"nameRev": "bdd7f5b22879641b4b1cf451555fd28ad747ece7 tags/twelvemonkeys-3.4.2~8", "commitMessage": "#492: Now correctly parses multiple strings for ASCII fields.\n\n(cherry picked from commit 8247861095c5980ca3dbc278fd775ce6fc4de070)\n", "commitParents": ["0e41d4a5f763dc9a13951558d71212573be981fc"], "spoonStatsSkippedReason": "", "commitHash": "bdd7f5b22879641b4b1cf451555fd28ad747ece7", "authoredDateTime": "2019-08-08 23:03:13", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 1, "lines": 8, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReader.java"}], "commitDateTime": "2019-08-09 21:04:40", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readValue(javax.imageio.stream.ImageInputStream,short,int)"}], "spoonFilePath": "TIFFReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/492", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 1, "lines": 8, "gitFilesChange": 1}, "title": "TIFFReader: ASCII fields are incorrectly parsed as single string", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": ["imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 5, "MOV": 1, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "According to the TIFF specification:\r\n\r\n> Any ASCII field can contain multiple strings, each terminated with a NUL. A single string is preferred whenever possible. The Count for multi-string fields is the number of bytes in all the strings in that field plus their terminating NUL bytes. Only one NUL is allowed between strings, so that the strings following the first string will often begin on an odd byte.\r\n\r\nThe current implementation parses the whole field as one string, with NULL-terminations inside...", "labels": ["Bug"]}, {"created": "2019-07-10 19:46:51", "commits": {"1d0cc434762847c9c378dc7db16c0ca973c572b0": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "f6aa810f8b2f73f32ffec51ea024828114942b1b": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "closed": "2019-08-07 14:56:50", "filteredCommits": ["1d0cc434762847c9c378dc7db16c0ca973c572b0"], "commitsDetails": [{"nameRev": "1d0cc434762847c9c378dc7db16c0ca973c572b0 tags/twelvemonkeys-3.4.2~12", "commitMessage": "#489 Fix for Unexpected End of PackBits Stream for padded streams.\n\n(cherry picked from commit f6aa810f8b2f73f32ffec51ea024828114942b1b)\n", "commitParents": ["9791a251ed53712079623fb478af9cb464fc0e17"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "1d0cc434762847c9c378dc7db16c0ca973c572b0", "authoredDateTime": "2019-08-07 16:04:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 186, "deletions": 210, "lines": 396, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/enc/PackBitsDecoder.java"}], "commitDateTime": "2019-08-09 21:04:40", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}, {"nameRev": "f6aa810f8b2f73f32ffec51ea024828114942b1b tags/twelvemonkeys-3.5~25", "commitMessage": "#489 Fix for Unexpected End of PackBits Stream for padded streams.\n", "commitParents": ["e8d1b999a290071b4df1aad77099cc4b8ee40572"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "f6aa810f8b2f73f32ffec51ea024828114942b1b", "authoredDateTime": "2019-08-07 16:04:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 186, "deletions": 210, "lines": 396, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/enc/PackBitsDecoder.java"}], "commitDateTime": "2019-08-07 16:04:46", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/489", "ttf": 27.00027777777778, "gitStatsSummary": {"insertions": 186, "deletions": 210, "lines": 396, "gitFilesChange": 1}, "title": "Unexpected End of PackBits Stream for some TIFF files", "statsSkippedReason": "", "user": "annacc-everlaw", "changesInPackagesGIT": ["common/common-io/src/main/java/com/twelvemonkeys/io/enc"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hiya. For some TIFF files that I've attempted to read using your library, I run into the following exception:\r\n\r\n```\r\njava.io.EOFException: Unexpected end of PackBits stream\r\n\tat com.twelvemonkeys.io.enc.PackBitsDecoder.readFully(PackBitsDecoder.java:202)\r\n\tat com.twelvemonkeys.io.enc.PackBitsDecoder.decode(PackBitsDecoder.java:158)\r\n\tat com.twelvemonkeys.io.enc.DecoderStream.fill(DecoderStream.java:180)\r\n\tat com.twelvemonkeys.io.enc.DecoderStream.read(DecoderStream.java:124)\r\n\tat com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(LittleEndianDataInputStream.java:425)\r\n\tat com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(LittleEndianDataInputStream.java:398)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(TIFFImageReader.java:1863)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(TIFFImageReader.java:1102)\r\n\tat javax.imageio.ImageReader.read(ImageReader.java:939)\r\n```\r\nI've attached one of the files that caused this error in the following ZIP, because for whatever reason GitHub won't allow me to attach the TIFF directly:\r\n\r\n[TIFF Error.tif.zip](https://github.com/haraldk/TwelveMonkeys/files/3379081/TIFF.Error.tif.zip)\r\n\r\nIf you need any extra information from me, I am happy to provide it.\r\n\r\nThanks!\r\n", "labels": ["Bug"]}, {"created": "2019-06-20 04:28:41", "commits": {"4f193d543c7c1a28956b317b2ba32a24c594c519": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "ee049d946551cfe1dcbd5816ff366d26dc0ad26a": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getEmbeddedICCProfile(boolean)"], "closed": "2019-08-07 14:29:52", "filteredCommits": ["4f193d543c7c1a28956b317b2ba32a24c594c519"], "commitsDetails": [{"nameRev": "4f193d543c7c1a28956b317b2ba32a24c594c519 tags/twelvemonkeys-3.4.2~11", "commitMessage": "#488: Fix for AIOOBE in getEmbeddedICCProfile when ICC profile is empty\n\n(cherry picked from commit ee049d946551cfe1dcbd5816ff366d26dc0ad26a)\n", "commitParents": ["1d0cc434762847c9c378dc7db16c0ca973c572b0"], "spoonStatsSkippedReason": "", "commitHash": "4f193d543c7c1a28956b317b2ba32a24c594c519", "authoredDateTime": "2019-08-07 16:18:01", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 5, "lines": 12, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/exif-empty-icc-profile.jpeg"}, {"insertions": 26, "deletions": 4, "lines": 30, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2019-08-09 21:04:40", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 16, "MOV": 14, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadSequenceInverse()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadEmptyICCProfile()"}], "spoonFilePath": "JPEGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 15, "MOV": 5, "INS": 6, "DEL": 4, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getEmbeddedICCProfile(boolean)"}], "spoonFilePath": "JPEGImageReader.java"}]}, {"nameRev": "ee049d946551cfe1dcbd5816ff366d26dc0ad26a tags/twelvemonkeys-3.5~24", "commitMessage": "#488: Fix for AIOOBE in getEmbeddedICCProfile when ICC profile is empty\n", "commitParents": ["f6aa810f8b2f73f32ffec51ea024828114942b1b"], "spoonStatsSkippedReason": "", "commitHash": "ee049d946551cfe1dcbd5816ff366d26dc0ad26a", "authoredDateTime": "2019-08-07 16:18:01", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 5, "lines": 12, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/exif-empty-icc-profile.jpeg"}, {"insertions": 26, "deletions": 4, "lines": 30, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2019-08-07 16:18:01", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 16, "MOV": 14, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadSequenceInverse()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadEmptyICCProfile()"}], "spoonFilePath": "JPEGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 15, "MOV": 5, "INS": 6, "DEL": 4, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getEmbeddedICCProfile(boolean)"}], "spoonFilePath": "JPEGImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/488", "ttf": 48.000277777777775, "gitStatsSummary": {"insertions": 7, "deletions": 5, "lines": 12, "gitFilesChange": 1}, "title": "ArrayIndexOutOfBoundsException in getEmbeddedICCProfile", "statsSkippedReason": "", "user": "akultomar17", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 15, "MOV": 5, "INS": 6, "DEL": 4, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "```\r\nException java.lang.ArrayIndexOutOfBoundsException: 14 occurred with cause: null\r\n\r\nand stack trace: \r\ncom.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader(JPEGImageReader.java:646) intFromBigEndian\r\ncom.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader(JPEGImageReader.java:959) getEmbeddedICCProfile\r\ncom.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader(JPEGImageReader.java:332) read\r\njavax.imageio.ImageIO(ImageIO.java:1448) read\r\njavax.imageio.ImageIO(ImageIO.java:1308) read\r\n```", "labels": ["Bug"]}, {"created": "2019-03-04 22:11:50", "commits": {"59c6c18cbb4a39e235a17adbfe221695399747ab": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "b0b5de5fa42eae3a4fcfdd93cc5654db584ea56e": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "8480c929c107c4d700bbc2e9e427ca3d327e5daf": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "0e41d4a5f763dc9a13951558d71212573be981fc": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.getTIFFLength(javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readLinkedIFDs(javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(javax.imageio.stream.ImageInputStream,java.util.List,java.util.Collection)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.read(javax.imageio.stream.ImageInputStream)"], "closed": "2019-08-08 20:46:50", "filteredCommits": ["59c6c18cbb4a39e235a17adbfe221695399747ab", "8480c929c107c4d700bbc2e9e427ca3d327e5daf"], "commitsDetails": [{"nameRev": "59c6c18cbb4a39e235a17adbfe221695399747ab tags/twelvemonkeys-3.4.2~5", "commitMessage": "#477: Better tests to for cyclic loops in IFDs.\n\n(cherry picked from commit b0b5de5fa42eae3a4fcfdd93cc5654db584ea56e)\n", "commitParents": ["c48e17dabf5fa53028e3f77ad3f2b75ecbf8ee0d"], "spoonStatsSkippedReason": "", "commitHash": "59c6c18cbb4a39e235a17adbfe221695399747ab", "authoredDateTime": "2019-08-09 19:32:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 101, "deletions": 1, "lines": 102, "filePath": "imageio/imageio-metadata/src/test/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReaderTest.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReader.java"}], "commitDateTime": "2019-08-09 21:04:41", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "TIFFReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testIFDLoopNested()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testSubIFDLoopNested()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testReadCyclicExifWithoutLoopOrOOME()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testIFDLoop()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testSubIFDLoop()"}], "spoonFilePath": "TIFFReaderTest.java"}]}, {"nameRev": "b0b5de5fa42eae3a4fcfdd93cc5654db584ea56e tags/twelvemonkeys-3.5~18", "commitMessage": "#477: Better tests to for cyclic loops in IFDs.\n", "commitParents": ["64178bd636c61a0f85f566b548fdca13fe66252b"], "spoonStatsSkippedReason": "", "commitHash": "b0b5de5fa42eae3a4fcfdd93cc5654db584ea56e", "authoredDateTime": "2019-08-09 19:32:52", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 101, "deletions": 1, "lines": 102, "filePath": "imageio/imageio-metadata/src/test/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReaderTest.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReader.java"}], "commitDateTime": "2019-08-09 19:32:52", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "TIFFReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testIFDLoopNested()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testSubIFDLoopNested()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testReadCyclicExifWithoutLoopOrOOME()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testIFDLoop()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testSubIFDLoop()"}], "spoonFilePath": "TIFFReaderTest.java"}]}, {"nameRev": "8480c929c107c4d700bbc2e9e427ca3d327e5daf tags/twelvemonkeys-3.5~22", "commitMessage": "#477: Avoid cyclic loops in IFDs.\n", "commitParents": ["e6f437f55bcecdf38a8287ba0a6aa3c45775ed5b"], "spoonStatsSkippedReason": "", "commitHash": "8480c929c107c4d700bbc2e9e427ca3d327e5daf", "authoredDateTime": "2019-08-08 22:41:23", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 11, "deletions": 0, "lines": 11, "filePath": "imageio/imageio-metadata/src/test/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReaderTest.java"}, {"insertions": 27, "deletions": 16, "lines": 43, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-metadata/src/test/resources/exif/exif-loop.bin"}], "commitDateTime": "2019-08-08 22:41:41", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.read(javax.imageio.stream.ImageInputStream)"}, {"UPD": 5, "TOT": 6, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(javax.imageio.stream.ImageInputStream,java.util.List,java.util.Collection)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader"}, {"UPD": 8, "TOT": 20, "MOV": 8, "INS": 2, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readLinkedIFDs(javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.getTIFFLength(javax.imageio.stream.ImageInputStream)"}], "spoonFilePath": "TIFFReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testReadCyclicExifWithoutLoopOrOOME()"}], "spoonFilePath": "TIFFReaderTest.java"}]}, {"nameRev": "0e41d4a5f763dc9a13951558d71212573be981fc tags/twelvemonkeys-3.4.2~9", "commitMessage": "#477: Avoid cyclic loops in IFDs.\n\n(cherry picked from commit 8480c929c107c4d700bbc2e9e427ca3d327e5daf)\n", "commitParents": ["653360e054c0fa8fe79c9abb1fe14b9966a6d81c"], "spoonStatsSkippedReason": "", "commitHash": "0e41d4a5f763dc9a13951558d71212573be981fc", "authoredDateTime": "2019-08-08 22:41:23", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 11, "deletions": 0, "lines": 11, "filePath": "imageio/imageio-metadata/src/test/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReaderTest.java"}, {"insertions": 27, "deletions": 16, "lines": 43, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-metadata/src/test/resources/exif/exif-loop.bin"}], "commitDateTime": "2019-08-09 21:04:40", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.read(javax.imageio.stream.ImageInputStream)"}, {"UPD": 5, "TOT": 6, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(javax.imageio.stream.ImageInputStream,java.util.List,java.util.Collection)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader"}, {"UPD": 8, "TOT": 20, "MOV": 8, "INS": 2, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readLinkedIFDs(javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.getTIFFLength(javax.imageio.stream.ImageInputStream)"}], "spoonFilePath": "TIFFReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testReadCyclicExifWithoutLoopOrOOME()"}], "spoonFilePath": "TIFFReaderTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/477", "ttf": 156.00027777777777, "gitStatsSummary": {"insertions": 28, "deletions": 16, "lines": 44, "gitFilesChange": 1}, "title": "Cyclic directory references in EXIF data cause StackOverflowErrors", "statsSkippedReason": "", "user": "jabshire", "changesInPackagesGIT": ["imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff"], "spoonStatsSummary": {"UPD": 13, "spoonMethodsChanged": 5, "TOT": 30, "MOV": 9, "INS": 4, "DEL": 4, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When you give TwelveMonkeys a JPEG with an EXIF directory that points to itself, you get a StackOverflowError:\r\n\r\n        at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readValue(EXIFReader.java:344) ~[TwelveMonkeys-imageio-metadata-3.3.2.jar:?]\r\n        at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readValueAt(EXIFReader.java:287) ~[TwelveMonkeys-imageio-metadata-3.3.2.jar:?]\r\n        at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readEntry(EXIFReader.java:277) ~[TwelveMonkeys-imageio-metadata-3.3.2.jar:?]\r\n        at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:109) ~[TwelveMonkeys-imageio-metadata-3.3.2.jar:?]\r\n        at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:133) ~[TwelveMonkeys-imageio-metadata-3.3.2.jar:?]  (this one repeats until you StackOverflow)\r\n\r\nThis is line 133:\r\n                CompoundDirectory next = (CompoundDirectory) readDirectory(pInput, nextOffset, true);\r\n\r\nYou can see where another library solved this same issue: https://github.com/drewnoakes/metadata-extractor/blob/master/Source/com/drew/imaging/tiff/TiffReader.java#L112-L118\r\n\r\nThis is on 3.3.2, which is an old version. But if I upgrade locally to the latest version, it just hangs instead of stack overflowing.", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2019-02-06 11:21:18", "commits": {"c48e17dabf5fa53028e3f77ad3f2b75ecbf8ee0d": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "64178bd636c61a0f85f566b548fdca13fe66252b": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.color.ColorSpaces.validateColorSpace(java.awt.color.ICC_ColorSpace)"], "closed": "2019-08-08 21:34:34", "filteredCommits": ["c48e17dabf5fa53028e3f77ad3f2b75ecbf8ee0d"], "commitsDetails": [{"nameRev": "c48e17dabf5fa53028e3f77ad3f2b75ecbf8ee0d tags/twelvemonkeys-3.4.2~6", "commitMessage": "#474: Fix java.awt.color.CMMException: Can not access specified profile\n\n(cherry picked from commit 64178bd636c61a0f85f566b548fdca13fe66252b)\n", "commitParents": ["22a842eb785389471b0eebbcf4c5ba0876351a5c"], "spoonStatsSkippedReason": "", "commitHash": "c48e17dabf5fa53028e3f77ad3f2b75ecbf8ee0d", "authoredDateTime": "2019-08-08 23:33:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 3, "lines": 10, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/ColorSpaces.java"}], "commitDateTime": "2019-08-09 21:04:41", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 5, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.validateColorSpace(java.awt.color.ICC_ColorSpace)"}], "spoonFilePath": "ColorSpaces.java"}]}, {"nameRev": "64178bd636c61a0f85f566b548fdca13fe66252b tags/twelvemonkeys-3.5~19", "commitMessage": "#474: Fix java.awt.color.CMMException: Can not access specified profile\n", "commitParents": ["7985cdd4a7c459cace5ee247426a968c37c8964f"], "spoonStatsSkippedReason": "", "commitHash": "64178bd636c61a0f85f566b548fdca13fe66252b", "authoredDateTime": "2019-08-08 23:33:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 3, "lines": 10, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/ColorSpaces.java"}], "commitDateTime": "2019-08-08 23:33:08", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 5, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.validateColorSpace(java.awt.color.ICC_ColorSpace)"}], "spoonFilePath": "ColorSpaces.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/474", "ttf": 183.00027777777777, "gitStatsSummary": {"insertions": 7, "deletions": 3, "lines": 10, "gitFilesChange": 1}, "title": "java.awt.color.CMMException: Can not access specified profile", "statsSkippedReason": "", "user": "waqqasdadabhoy", "changesInPackagesGIT": ["imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color"], "spoonStatsSummary": {"UPD": 3, "spoonMethodsChanged": 1, "TOT": 5, "MOV": 0, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I'm trying to use TwelveMonkeys to get the dimensions of https://ia601303.us.archive.org/16/items/mbid-22fe8b56-a3b4-4ba3-acb8-2b14eba06dd3/mbid-22fe8b56-a3b4-4ba3-acb8-2b14eba06dd3-11661564753.jpg but I'm getting the following error:\r\n\r\n```java\r\njava.awt.color.CMMException: Can not access specified profile.\r\n  at sun.java2d.cmm.lcms.LCMS.getProfileSizeNative(Native Method)\r\n  at sun.java2d.cmm.lcms.LCMS.getProfileSize(LCMS.java:68)\r\n  at java.awt.color.ICC_Profile.getData(ICC_Profile.java:1330)\r\n  at com.twelvemonkeys.imageio.color.ColorSpaces.getProfileHeaderWithProfileId(ColorSpaces.java:147)\r\n  at com.twelvemonkeys.imageio.color.ColorSpaces.isCS_sRGB(ColorSpaces.java:239)\r\n  at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:374)\r\n  at javax.imageio.ImageIO.read(ImageIO.java:1448)\r\n  at javax.imageio.ImageIO.read(ImageIO.java:1400)\r\n```\r\n\r\nIf I try vanilla Java (without TwelveMonkeys), I get the same error, but with a different stacktrace:\r\n```java\r\njava.awt.color.CMMException: Can not access specified profile.\r\n  at sun.java2d.cmm.lcms.LCMS.getProfileSizeNative(Native Method)\r\n  at sun.java2d.cmm.lcms.LCMS.getProfileSize(LCMS.java:68)\r\n  at java.awt.color.ICC_Profile.getData(ICC_Profile.java:1330)\r\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.setImageData(JPEGImageReader.java:687)\r\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.readImageHeader(Native Method)\r\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.readNativeHeader(JPEGImageReader.java:620)\r\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.readHeader(JPEGImageReader.java:614)\r\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.readInternal(JPEGImageReader.java:1070)\r\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:1050)\r\n  at javax.imageio.ImageIO.read(ImageIO.java:1448)\r\n  at javax.imageio.ImageIO.read(ImageIO.java:1400)\r\n```\r\n\r\nThis is the code I'm using to read the image (in a Scala REPL):\r\n```scala\r\nimport javax.imageio.ImageIO\r\nimport java.net.URL\r\nImageIO.read(new URL(\"https://ia601303.us.archive.org/16/items/mbid-22fe8b56-a3b4-4ba3-acb8-2b14eba06dd3/mbid-22fe8b56-a3b4-4ba3-acb8-2b14eba06dd3-11661564753.jpg\"))\r\n```\r\n\r\nI'm using OpenJDK 1.8.0_191 on Ubuntu 18.10.", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2019-01-22 08:30:42", "commits": {"9791a251ed53712079623fb478af9cb464fc0e17": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "e8d1b999a290071b4df1aad77099cc4b8ee40572": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readEntry(javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(javax.imageio.stream.ImageInputStream,java.util.List,java.util.Collection)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.main(java.lang.String[])", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(javax.imageio.stream.ImageInputStream,java.util.List,java.util.List)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.createSafeRational(long,long)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.read(javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.createSubIFDMap()", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(javax.imageio.stream.ImageInputStream,long,java.util.Collection)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.getTIFFLength(javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readLinkedIFDs(javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.HexDump.toAsciiString(byte[],int,int)", "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(javax.imageio.stream.ImageInputStream,long)"], "closed": "2019-08-08 21:00:19", "filteredCommits": ["9791a251ed53712079623fb478af9cb464fc0e17"], "commitsDetails": [{"nameRev": "9791a251ed53712079623fb478af9cb464fc0e17 tags/twelvemonkeys-3.4.2~13", "commitMessage": "#469 Fix for OOME while reading Exif with corrupted IFDs/counts\n\n(cherry picked from commit e8d1b999a290071b4df1aad77099cc4b8ee40572)\n", "commitParents": ["0bc30f4d1839a3b99f6c2a69ba290373eff17ed4"], "spoonStatsSkippedReason": "", "commitHash": "9791a251ed53712079623fb478af9cb464fc0e17", "authoredDateTime": "2019-08-07 15:55:24", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-metadata/src/test/resources/jpeg/exif-oome-bogus-count.jpg"}, {"insertions": 22, "deletions": 0, "lines": 22, "filePath": "imageio/imageio-metadata/src/test/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReaderTest.java"}, {"insertions": 97, "deletions": 83, "lines": 180, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-metadata/src/test/resources/jpeg/exif-with-nested-exif.jpg"}], "commitDateTime": "2019-08-09 21:04:40", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 9, "MOV": 6, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readEntry(javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readLinkedIFDs(javax.imageio.stream.ImageInputStream)"}, {"UPD": 3, "TOT": 13, "MOV": 8, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(javax.imageio.stream.ImageInputStream,java.util.List,java.util.List)"}, {"UPD": 5, "TOT": 9, "MOV": 0, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader"}, {"UPD": 0, "TOT": 13, "MOV": 10, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.main(java.lang.String[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.createSafeRational(long,long)"}, {"UPD": 3, "TOT": 4, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.read(javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.createSubIFDMap()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(javax.imageio.stream.ImageInputStream,long,java.util.Collection)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.getTIFFLength(javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(javax.imageio.stream.ImageInputStream,java.util.List,java.util.Collection)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.HexDump.toAsciiString(byte[],int,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(javax.imageio.stream.ImageInputStream,long)"}], "spoonFilePath": "TIFFReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testReadExifBogusCountWithoutOOME()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testReadNestedExifWithoutOOME()"}], "spoonFilePath": "TIFFReaderTest.java"}]}, {"nameRev": "e8d1b999a290071b4df1aad77099cc4b8ee40572 tags/twelvemonkeys-3.5~26", "commitMessage": "#469 Fix for OOME while reading Exif with corrupted IFDs/counts\n", "commitParents": ["d7fbd6594e073ca41476d9513a163aa7c43ef549"], "spoonStatsSkippedReason": "", "commitHash": "e8d1b999a290071b4df1aad77099cc4b8ee40572", "authoredDateTime": "2019-08-07 15:55:24", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-metadata/src/test/resources/jpeg/exif-oome-bogus-count.jpg"}, {"insertions": 22, "deletions": 0, "lines": 22, "filePath": "imageio/imageio-metadata/src/test/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReaderTest.java"}, {"insertions": 97, "deletions": 83, "lines": 180, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff/TIFFReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-metadata/src/test/resources/jpeg/exif-with-nested-exif.jpg"}], "commitDateTime": "2019-08-07 15:55:24", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 9, "MOV": 6, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readEntry(javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readLinkedIFDs(javax.imageio.stream.ImageInputStream)"}, {"UPD": 3, "TOT": 13, "MOV": 8, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(javax.imageio.stream.ImageInputStream,java.util.List,java.util.List)"}, {"UPD": 5, "TOT": 9, "MOV": 0, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader"}, {"UPD": 0, "TOT": 13, "MOV": 10, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.main(java.lang.String[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.createSafeRational(long,long)"}, {"UPD": 3, "TOT": 4, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.read(javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.createSubIFDMap()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(javax.imageio.stream.ImageInputStream,long,java.util.Collection)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.getTIFFLength(javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(javax.imageio.stream.ImageInputStream,java.util.List,java.util.Collection)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.HexDump.toAsciiString(byte[],int,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(javax.imageio.stream.ImageInputStream,long)"}], "spoonFilePath": "TIFFReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testReadExifBogusCountWithoutOOME()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.tiff.TIFFReaderTest.testReadNestedExifWithoutOOME()"}], "spoonFilePath": "TIFFReaderTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/469", "ttf": 198.00027777777777, "gitStatsSummary": {"insertions": 97, "deletions": 83, "lines": 180, "gitFilesChange": 1}, "title": "Out of memory while reading Exif data from JPEG file", "statsSkippedReason": "", "user": "skirjak", "changesInPackagesGIT": ["imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/tiff"], "spoonStatsSummary": {"UPD": 12, "spoonMethodsChanged": 13, "TOT": 64, "MOV": 25, "INS": 19, "DEL": 8, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "While trying to read exif data from the attached image we got an \"out of memory\" exception.\r\nLooks like the image is somehow corrupted but maybe the exception thrown can be prevented as it tears down the our whole application. Please take a look. Thanks in advance!\r\n\r\n\r\n````\r\nUncaught error from thread [application-thumbnailing-context-26] shutting down JVM since 'akka.jvm-exit-on-fatal-error' is enabled for ActorSystem[application]\r\njava.lang.OutOfMemoryError: Java heap space\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readValue(TIFFReader.java:407)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readValueAt(TIFFReader.java:324)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readEntry(TIFFReader.java:298)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(TIFFReader.java:146)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(TIFFReader.java:188)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(TIFFReader.java:158)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(TIFFReader.java:188)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(TIFFReader.java:158)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(TIFFReader.java:188)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(TIFFReader.java:158)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readSubIFDs(TIFFReader.java:188)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readIFD(TIFFReader.java:158)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.readLinkedIFDs(TIFFReader.java:120)\r\n    at com.twelvemonkeys.imageio.metadata.tiff.TIFFReader.read(TIFFReader.java:109)\r\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.read(EXIFReader.java:55)\r\n````\r\n\r\n![20190117_die macht der gefuhle_ute frevert](https://user-images.githubusercontent.com/9862530/51521613-60512800-1e27-11e9-8afe-0a8c08a9a054.jpg)\r\n\r\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2018-11-21 13:02:48", "commits": {"90ef605b0cad9f6d9298a70594ac0e51422e8ea9": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "5ade293445bc72487806616db5e79e2521f2e8a6": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)"], "closed": "2019-08-08 20:53:30", "filteredCommits": ["90ef605b0cad9f6d9298a70594ac0e51422e8ea9"], "commitsDetails": [{"nameRev": "90ef605b0cad9f6d9298a70594ac0e51422e8ea9 tags/twelvemonkeys-3.4.2~20", "commitMessage": "Fix for #455: Ignore profiles PhotometricInterpretation MinIsWhite with 1bit/pixel\n\n(cherry picked from commit cbaa0dc688fba123d52363290df420a73dba7fe0)\n", "commitParents": ["b40eea0fc47121e2010b024f21a54a94fb5a4fc0"], "spoonStatsSkippedReason": "", "commitHash": "90ef605b0cad9f6d9298a70594ac0e51422e8ea9", "authoredDateTime": "2018-11-22 12:20:58", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 14, "deletions": 0, "lines": 14, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/ccitt/min-is-white-with-profile.tif"}], "commitDateTime": "2019-08-09 21:03:00", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testMinIsWhiteWithProfile()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)"}], "spoonFilePath": "TIFFImageReader.java"}]}, {"nameRev": "5ade293445bc72487806616db5e79e2521f2e8a6 tags/twelvemonkeys-3.5~31", "commitMessage": "Merge pull request #458 from Schmidor/455\n\nFix for #455: Ignore profiles PhotometricInterpretation MinIsWhite wi\u2026", "commitParents": ["a0fc5f560d6c9c92ac438d0f352d7b4c08827725", "cbaa0dc688fba123d52363290df420a73dba7fe0"], "spoonStatsSkippedReason": "", "commitHash": "5ade293445bc72487806616db5e79e2521f2e8a6", "authoredDateTime": "2019-02-12 20:29:31", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 14, "deletions": 0, "lines": 14, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/ccitt/min-is-white-with-profile.tif"}], "commitDateTime": "2019-02-12 20:29:31", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testMinIsWhiteWithProfile()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/455", "ttf": 260.0002777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "TIFF with PHOTOMETRIC_WHITE_IS_ZERO and ICC Profile is inverted", "statsSkippedReason": "", "user": "Schmidor", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "The TIFF uses CCITT Compression with PHOTOMETRIC_WHITE_IS_ZERO and a ICC profile.\r\nSince the changes in  https://github.com/haraldk/TwelveMonkeys/commit/dd914444c9f526afc1f85cca3edb0fc13479e53e#diff-6b756dc8ec79c1721a23075308fae210 it is displayed inverted.\r\nI'm not sure whether we must invert the data as before the changes or whether \r\nother readers are just ignoring the color profile.\r\n\r\n[00002426622018.zip](https://github.com/haraldk/TwelveMonkeys/files/2604268/00002426622018.zip)", "labels": ["Bug"]}, {"created": "2018-08-29 16:12:36", "commits": {"0cd250646a606029d7ef331dfed257a1e4421618": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "04f27a16946dc0f1ce4d42d404d065a39082173b": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.close()", "com.twelvemonkeys.io.AbstractCachedSeekableStream.StreamCache", "com.twelvemonkeys.io.MemoryCacheSeekableStream.MemoryCache.close()", "com.twelvemonkeys.io.AbstractCachedSeekableStream.StreamCache.close()", "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.write(byte[],int,int)", "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache", "com.twelvemonkeys.io.ole2.CompoundDocument", "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.seek(long)", "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.read(byte[],int,int)", "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.write(int)", "com.twelvemonkeys.io.AbstractCachedSeekableStream.closeImpl()", "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.getPosition()", "com.twelvemonkeys.io.ole2.CompoundDocument.close()", "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.read()"], "closed": "2018-09-08 14:26:37", "filteredCommits": ["04f27a16946dc0f1ce4d42d404d065a39082173b"], "commitsDetails": [{"nameRev": "04f27a16946dc0f1ce4d42d404d065a39082173b tags/twelvemonkeys-3.4.2~36", "commitMessage": "#438 CompoundDocument file descriptor fix\n", "commitParents": ["2630a6a7950e4d4c949a2cba3fe21ad6fadc016c"], "spoonStatsSkippedReason": "", "commitHash": "04f27a16946dc0f1ce4d42d404d065a39082173b", "authoredDateTime": "2018-09-08 16:21:01", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 43, "deletions": 11, "lines": 54, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/ole2/CompoundDocument.java"}, {"insertions": 36, "deletions": 36, "lines": 72, "filePath": "common/common-io/src/test/java/com/twelvemonkeys/io/ole2/CompoundDocumentTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/LittleEndianDataOutputStream.java"}, {"insertions": 5, "deletions": 3, "lines": 8, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/AbstractCachedSeekableStream.java"}, {"insertions": 17, "deletions": 9, "lines": 26, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/FileCacheSeekableStream.java"}, {"insertions": 1, "deletions": 31, "lines": 32, "filePath": "common/common-io/src/test/java/com/twelvemonkeys/io/ole2/CompoundDocument_StreamTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/LittleEndianRandomAccessFile.java"}, {"insertions": 6, "deletions": 1, "lines": 7, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/MemoryCacheSeekableStream.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/LittleEndianDataInputStream.java"}], "commitDateTime": "2018-09-08 16:21:01", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument.close()"}, {"UPD": 6, "TOT": 11, "MOV": 0, "INS": 3, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument"}], "spoonFilePath": "CompoundDocument.java"}, {"spoonMethods": [], "spoonFilePath": "LittleEndianRandomAccessFile.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.io.AbstractCachedSeekableStream.StreamCache"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.AbstractCachedSeekableStream.StreamCache.close()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.AbstractCachedSeekableStream.closeImpl()"}], "spoonFilePath": "AbstractCachedSeekableStream.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.write(byte[],int,int)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.getPosition()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.seek(long)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.read(byte[],int,int)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.write(int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.close()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.read()"}], "spoonFilePath": "FileCacheSeekableStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.MemoryCacheSeekableStream.MemoryCache.close()"}], "spoonFilePath": "MemoryCacheSeekableStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 6, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocumentTest.testChildEntriesUnmodifiable()"}, {"UPD": 0, "TOT": 12, "MOV": 10, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocumentTest.testRoot()"}, {"UPD": 0, "TOT": 9, "MOV": 7, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocumentTest.testContents()"}, {"UPD": 0, "TOT": 10, "MOV": 8, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocumentTest.testReadThumbsCatalogFile()"}], "spoonFilePath": "CompoundDocumentTest.java"}, {"spoonMethods": [], "spoonFilePath": "LittleEndianDataInputStream.java"}, {"spoonMethods": [], "spoonFilePath": "LittleEndianDataOutputStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument_StreamTest.createRealInputStream()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument_StreamTest.createTestDocument()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument_StreamTest.testDev()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument_StreamTest"}], "spoonFilePath": "CompoundDocument_StreamTest.java"}]}, {"nameRev": "0cd250646a606029d7ef331dfed257a1e4421618 tags/twelvemonkeys-3.5~47", "commitMessage": "#438 CompoundDocument file descriptor fix\n\n(cherry picked from commit 04f27a1)\n", "commitParents": ["586359e7ab2f6b108d45a307cda46e89d3c3098b"], "spoonStatsSkippedReason": "", "commitHash": "0cd250646a606029d7ef331dfed257a1e4421618", "authoredDateTime": "2018-09-08 16:21:01", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 43, "deletions": 11, "lines": 54, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/ole2/CompoundDocument.java"}, {"insertions": 36, "deletions": 36, "lines": 72, "filePath": "common/common-io/src/test/java/com/twelvemonkeys/io/ole2/CompoundDocumentTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/LittleEndianDataOutputStream.java"}, {"insertions": 5, "deletions": 3, "lines": 8, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/AbstractCachedSeekableStream.java"}, {"insertions": 17, "deletions": 9, "lines": 26, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/FileCacheSeekableStream.java"}, {"insertions": 5, "deletions": 35, "lines": 40, "filePath": "common/common-io/src/test/java/com/twelvemonkeys/io/ole2/CompoundDocument_StreamTest.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/LittleEndianRandomAccessFile.java"}, {"insertions": 6, "deletions": 1, "lines": 7, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/MemoryCacheSeekableStream.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "common/common-io/src/main/java/com/twelvemonkeys/io/LittleEndianDataInputStream.java"}], "commitDateTime": "2018-09-08 16:23:43", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument.close()"}, {"UPD": 6, "TOT": 11, "MOV": 0, "INS": 3, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument"}], "spoonFilePath": "CompoundDocument.java"}, {"spoonMethods": [], "spoonFilePath": "LittleEndianRandomAccessFile.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.io.AbstractCachedSeekableStream.StreamCache"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.AbstractCachedSeekableStream.StreamCache.close()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.AbstractCachedSeekableStream.closeImpl()"}], "spoonFilePath": "AbstractCachedSeekableStream.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.write(byte[],int,int)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.getPosition()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.seek(long)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.read(byte[],int,int)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.write(int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.close()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.FileCacheSeekableStream.FileCache.read()"}], "spoonFilePath": "FileCacheSeekableStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.MemoryCacheSeekableStream.MemoryCache.close()"}], "spoonFilePath": "MemoryCacheSeekableStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 6, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocumentTest.testChildEntriesUnmodifiable()"}, {"UPD": 0, "TOT": 12, "MOV": 10, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocumentTest.testRoot()"}, {"UPD": 0, "TOT": 9, "MOV": 7, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocumentTest.testContents()"}, {"UPD": 0, "TOT": 10, "MOV": 8, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocumentTest.testReadThumbsCatalogFile()"}], "spoonFilePath": "CompoundDocumentTest.java"}, {"spoonMethods": [], "spoonFilePath": "LittleEndianDataInputStream.java"}, {"spoonMethods": [], "spoonFilePath": "LittleEndianDataOutputStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument_StreamTest.createRealInputStream()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument_StreamTest.createTestDocument()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument_StreamTest.testDev()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.io.ole2.CompoundDocument_StreamTest"}], "spoonFilePath": "CompoundDocument_StreamTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/438", "ttf": 9.000277777777777, "gitStatsSummary": {"insertions": 71, "deletions": 27, "lines": 98, "gitFilesChange": 7}, "title": "CompoundDocument leaks a file descriptor", "statsSkippedReason": "", "user": "tingley", "changesInPackagesGIT": ["common/common-io/src/main/java/com/twelvemonkeys/io/ole2", "common/common-io/src/main/java/com/twelvemonkeys/io"], "spoonStatsSummary": {"UPD": 15, "spoonMethodsChanged": 14, "TOT": 26, "MOV": 0, "INS": 7, "DEL": 4, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The `CompoundDocument` class uses a `LittleEndianRandomAccessFile` internally to read the file contents:\r\nhttps://github.com/haraldk/TwelveMonkeys/blob/24c6682236e5a02151359486aa4075ddc5ab1534/common/common-io/src/main/java/com/twelvemonkeys/io/ole2/CompoundDocument.java#L105\r\n\r\nHowever, `input.close()` is never called, which means that the underlying `RandomAccessFile` can hold an open file descriptor indefinitely in a long-running process.\r\n\r\nIs there any reason not to just add a `CompoundDocument#close()` method?", "labels": ["Bug"]}, {"created": "2018-08-04 12:59:35", "commits": {"6f9c83a0a984a8ff069e740e29c7add242802d09": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "2235f6c9112bb053b8139b1be29a9c02436c174e": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2018-08-18 11:09:03", "filteredCommits": ["6f9c83a0a984a8ff069e740e29c7add242802d09"], "commitsDetails": [{"nameRev": "6f9c83a0a984a8ff069e740e29c7add242802d09 tags/twelvemonkeys-3.4~4", "commitMessage": "#433: Test case for offset issue.\n", "commitParents": ["4afa934251aa0fb1bb56ef66ab87a1ce327ac6b4"], "spoonStatsSkippedReason": "", "commitHash": "6f9c83a0a984a8ff069e740e29c7add242802d09", "authoredDateTime": "2018-08-18 13:17:43", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 34, "deletions": 4, "lines": 38, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2018-08-18 13:17:43", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testStreamOffset()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.getTestData()"}], "spoonFilePath": "JPEGImageReaderTest.java"}]}, {"nameRev": "2235f6c9112bb053b8139b1be29a9c02436c174e tags/twelvemonkeys-3.4~6", "commitMessage": "#202, #433: Fixes offset issues when reading multiple JPEGs from single stream + embedded case (ie. TIFF).\n", "commitParents": ["27fcd495db21600e944b5d74c6fb4de448faf169"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "2235f6c9112bb053b8139b1be29a9c02436c174e", "authoredDateTime": "2018-08-18 13:08:17", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 186, "deletions": 68, "lines": 254, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStream.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/jfif-with-preview-as-second-image.jpg"}, {"insertions": 29, "deletions": 0, "lines": 29, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2018-08-18 13:08:17", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/433", "ttf": 13.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "\"javax.imageio.IIOException: No SOF segment in stream\" when using JPEG compression in a TIFF", "statsSkippedReason": "", "user": "THausherr", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "test code:\r\n\r\n```java\r\n@Test\r\n    public void TestWriteRead() throws IOException\r\n    {\r\n        BufferedImage image = new BufferedImage(100, 100, BufferedImage.TYPE_INT_RGB);\r\n\r\n        ImageWriter writer = ImageIO.getImageWritersByFormatName(\"tif\").next();\r\n        ImageWriteParam param = writer.getDefaultWriteParam();\r\n        IIOMetadata metadata = writer.getDefaultImageMetadata(new ImageTypeSpecifier(image), param);\r\n\r\n        System.out.println(writer);\r\n        System.out.println(param);\r\n        System.out.println(metadata);\r\n\r\n        param.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);\r\n        param.setCompressionType(\"JPEG\"); // https://download.java.net/media/jai-imageio/javadoc/1.1/com/sun/media/imageio/plugins/tiff/TIFFImageWriteParam.html\r\n        try (ImageOutputStream imageOutputStream = ImageIO.createImageOutputStream(new File(\"test.tif\")))\r\n        {\r\n            System.out.println(imageOutputStream);\r\n            writer.setOutput(imageOutputStream);\r\n            writer.write(null, new IIOImage(image, null, metadata), param);\r\n        }\r\n\r\n        ImageReader reader = ImageIO.getImageReadersByFormatName(\"tif\").next();\r\n        System.out.println(reader);\r\n        try (ImageInputStream imageInputStream = ImageIO.createImageInputStream(new File(\"test.tif\")))\r\n        {\r\n            reader.setInput(imageInputStream);\r\n            reader.read(0);\r\n        }\r\n    }\r\n```\r\n\r\noutput:\r\n\r\n````\r\ncom.sun.media.imageioimpl.plugins.tiff.TIFFImageWriter@2471cca7\r\ncom.sun.media.imageio.plugins.tiff.TIFFImageWriteParam@5fe5c6f\r\ncom.sun.media.imageioimpl.plugins.tiff.TIFFImageMetadata@6979e8cb\r\njavax.imageio.stream.FileImageOutputStream@2d6a9952\r\ncom.sun.media.imageioimpl.plugins.tiff.TIFFImageReader@7225790e\r\nException in thread \"main\" javax.imageio.IIOException: No SOF segment in stream\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getSOF(JPEGImageReader.java:762)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:334)\r\n\tat com.sun.media.imageioimpl.plugins.tiff.TIFFJPEGDecompressor.decodeRaw(TIFFJPEGDecompressor.java:224)\r\n\tat com.sun.media.imageio.plugins.tiff.TIFFDecompressor.decode(TIFFDecompressor.java:2527)\r\n\tat com.sun.media.imageioimpl.plugins.tiff.TIFFImageReader.decodeTile(TIFFImageReader.java:1137)\r\n\tat com.sun.media.imageioimpl.plugins.tiff.TIFFImageReader.read(TIFFImageReader.java:1417)\r\n\tat javax.imageio.ImageReader.read(ImageReader.java:939)\r\n\tat jdk9test.JDK9Test.main(JDK9Test.java:44)\r\n````\r\n\r\nThis happens only if I use the JPEG decoder from here and the jai_imageio.jar from oracle (or the community fork on github). If I use all from oracle or all from twelvemonkeys it works.\r\n\r\n[test.zip](https://github.com/haraldk/TwelveMonkeys/files/2259496/test.zip)\r\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2018-04-28 06:41:13", "commits": {"ce7fb1cb947e0d0b734b2d17479153b59109d2b0": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "30582dc5e581fe7347324527da3e556e92884ee4": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "b32a38bf026ae22462e782254c00b83c4a5e0bfc": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "5c8b4e0edf444032c452513c9e020ef9589e01c2": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "2ea3acb2c6033c4328d839a66d26202a023a382a": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 5, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpDirectBits(javax.imageio.stream.ImageInputStream,boolean,int)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.verboseRegionCmd(java.lang.String,java.awt.Rectangle,java.awt.Polygon)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageWriter", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpBits(javax.imageio.stream.ImageInputStream,boolean)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readPICTopcodes(javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.verbosePolyCmd(java.lang.String,java.awt.Rectangle,java.awt.Polygon)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpDirectBitsRect(javax.imageio.stream.ImageInputStream,int)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpPackBitsRect(javax.imageio.stream.ImageInputStream,int)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.read(int,javax.imageio.ImageReadParam)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpPackBits(javax.imageio.stream.ImageInputStream,boolean,int)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageWriterSpi", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReaderSpi", "com.twelvemonkeys.imageio.plugins.pict.PICTUtil.readColorTable(java.io.DataInput,int)"], "closed": "2018-05-02 20:13:16", "filteredCommits": ["5c8b4e0edf444032c452513c9e020ef9589e01c2", "30582dc5e581fe7347324527da3e556e92884ee4", "2ea3acb2c6033c4328d839a66d26202a023a382a", "b32a38bf026ae22462e782254c00b83c4a5e0bfc", "ce7fb1cb947e0d0b734b2d17479153b59109d2b0"], "commitsDetails": [{"nameRev": "ce7fb1cb947e0d0b734b2d17479153b59109d2b0 tags/twelvemonkeys-3.4~17", "commitMessage": "#423: Finally fixed region parsing to Area (seems to work, but slow)!\nBonus: Implemented more transfer modes, better QT parsing/debug output.\n", "commitParents": ["5c8b4e0edf444032c452513c9e020ef9589e01c2"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "ce7fb1cb947e0d0b734b2d17479153b59109d2b0", "authoredDateTime": "2018-05-04 20:53:21", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 156, "deletions": 0, "lines": 156, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/QuickDrawComposite.java"}, {"insertions": 130, "deletions": 144, "lines": 274, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/QuickDrawContext.java"}, {"insertions": 130, "deletions": 118, "lines": 248, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/PICTImageReader.java"}, {"insertions": 74, "deletions": 4, "lines": 78, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/QuickDraw.java"}], "commitDateTime": "2018-05-04 20:53:21", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}, {"nameRev": "30582dc5e581fe7347324527da3e556e92884ee4 tags/twelvemonkeys-3.4~19", "commitMessage": "#423 Implemented opBitsRect for pixmap + opBitsRgn, opPackBitsRgn and opDirectBitsRgn, with some additional clea-up.\n", "commitParents": ["2ea3acb2c6033c4328d839a66d26202a023a382a"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "30582dc5e581fe7347324527da3e556e92884ee4", "authoredDateTime": "2018-05-01 12:22:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 298, "deletions": 185, "lines": 483, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/PICTImageReader.java"}], "commitDateTime": "2018-05-01 12:22:00", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}, {"nameRev": "b32a38bf026ae22462e782254c00b83c4a5e0bfc tags/twelvemonkeys-3.4~16", "commitMessage": "#423: Minor clean-up\n", "commitParents": ["ce7fb1cb947e0d0b734b2d17479153b59109d2b0"], "spoonStatsSkippedReason": "", "commitHash": "b32a38bf026ae22462e782254c00b83c4a5e0bfc", "authoredDateTime": "2018-05-22 20:47:04", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/PICTImageReaderSpi.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/PICTImageWriterSpi.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/PICTImageWriter.java"}], "commitDateTime": "2018-05-22 20:47:04", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageWriterSpi"}], "spoonFilePath": "PICTImageWriterSpi.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageWriter"}], "spoonFilePath": "PICTImageWriter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReaderSpi"}], "spoonFilePath": "PICTImageReaderSpi.java"}]}, {"nameRev": "5c8b4e0edf444032c452513c9e020ef9589e01c2 tags/twelvemonkeys-3.4~18", "commitMessage": "#423 Fixed PICT offset issue.\n", "commitParents": ["30582dc5e581fe7347324527da3e556e92884ee4"], "spoonStatsSkippedReason": "", "commitHash": "5c8b4e0edf444032c452513c9e020ef9589e01c2", "authoredDateTime": "2018-05-02 22:11:26", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 29, "deletions": 39, "lines": 68, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/PICTImageReader.java"}], "commitDateTime": "2018-05-02 22:11:26", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpDirectBits(javax.imageio.stream.ImageInputStream,boolean,int)"}, {"UPD": 2, "TOT": 17, "MOV": 5, "INS": 4, "DEL": 6, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.verboseRegionCmd(java.lang.String,java.awt.Rectangle,java.awt.Polygon)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpPackBits(javax.imageio.stream.ImageInputStream,boolean,int)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpBits(javax.imageio.stream.ImageInputStream,boolean)"}, {"UPD": 2, "TOT": 16, "MOV": 4, "INS": 4, "DEL": 6, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.verbosePolyCmd(java.lang.String,java.awt.Rectangle,java.awt.Polygon)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.read(int,javax.imageio.ImageReadParam)"}], "spoonFilePath": "PICTImageReader.java"}]}, {"nameRev": "2ea3acb2c6033c4328d839a66d26202a023a382a tags/twelvemonkeys-3.4~20", "commitMessage": "#423 PICT IndexColor issue + always reading compressed for V1 bitmap.\n", "commitParents": ["961dee3d41d529661951711d327709e7042e8f73"], "spoonStatsSkippedReason": "", "commitHash": "2ea3acb2c6033c4328d839a66d26202a023a382a", "authoredDateTime": "2018-04-30 14:16:57", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 9, "deletions": 12, "lines": 21, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/PICTImageReader.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/PICTUtil.java"}], "commitDateTime": "2018-04-30 14:16:57", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTUtil.readColorTable(java.io.DataInput,int)"}], "spoonFilePath": "PICTUtil.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readPICTopcodes(javax.imageio.stream.ImageInputStream)"}, {"UPD": 2, "TOT": 4, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpDirectBitsRect(javax.imageio.stream.ImageInputStream,int)"}, {"UPD": 2, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpPackBitsRect(javax.imageio.stream.ImageInputStream,int)"}], "spoonFilePath": "PICTImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/423", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 835, "deletions": 509, "lines": 1344, "gitFilesChange": 8}, "title": "QuickDraw (PICT) Support for Glider Pro images", "statsSkippedReason": "", "user": "lbordowitz", "changesInPackagesGIT": ["imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict"], "spoonStatsSummary": {"UPD": 14.0, "spoonMethodsChanged": 13, "TOT": 64.0, "MOV": 14.0, "INS": 16.0, "DEL": 20.0, "spoonFilesChanged": 5}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I'm trying to remake an old Macintosh game called Glider Pro, and this tool has already been invaluable. Using the normal \"Read/Write Buffered Image\" pattern, I've translated QuickDraw images from [this folder](https://github.com/lbordowitz/glider_pro/tree/7cbcec1b6a349f819e25b2b4f286ceab39d34a45/_raw_Sprites) into PNG images in [this folder](https://github.com/lbordowitz/glider_pro/tree/7cbcec1b6a349f819e25b2b4f286ceab39d34a45/Sprites). Thank you!\r\n\r\nI do have a couple problematic images. On a Mac, you can open PICT images in the \"Preview\" program. You'll notice subtle differences (a [transparent sun in this picture](https://github.com/lbordowitz/glider_pro/blob/7cbcec1b6a349f819e25b2b4f286ceab39d34a45/Sprites/1000.PICT.png) where the corresponding picture has it white), to complete failures in rendering ([this sprite selection](https://github.com/lbordowitz/glider_pro/blob/7cbcec1b6a349f819e25b2b4f286ceab39d34a45/Sprites/1011.PICT.png) is particularly egregious), to Java exceptions in conversion (for instance, `150.PICT` and `151.PICT` threw exceptions, though I don't really need those images).\r\n\r\nThese pictures come from the [resource file](https://github.com/softdorothy/glider_pro/blob/master/Glider%20PRO.r) provided in the [open sourced Glider Pro](https://github.com/softdorothy/glider_pro) repository, where the hex provided in each resource is extracted into raw bytes as separate files.\r\n\r\nThe goal of this issue is to improve PICT parsing with these images as a test bed. If they render the same, or even similar, to the way they do on a Mac's Preview, that would constitute \"done\". This is a large issue; it ought to be broken down into fixing each image, or maybe opcodes functionality missing/maligned to render the images properly.\r\n\r\nI know some Java development, and I am able to build and use the SNAPSHOT version of `imageio-pict`. Point me to some resources, and I can try to send you some PRs.\r\n\r\nCaveat: The project is licensed under GPL; including them as test cases in this repository might affect the open source licensing.", "labels": ["Bug", "New feature", "Sponsor needed"]}, {"created": "2018-04-06 13:58:19", "commits": {"961dee3d41d529661951711d327709e7042e8f73": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.color.ColorSpaces.getCachedOrCreateCS(java.awt.color.ICC_Profile,byte[])", "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.validationAltersProfileHeader()", "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.intToBigEndian(int,byte[],int)", "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.intFromBigEndian(byte[],int)", "com.twelvemonkeys.imageio.color.validationAltersProfileHeader()", "com.twelvemonkeys.imageio.color.LCMSSanitizerStrategy.validationAltersProfileHeader()"], "closed": "2018-04-09 13:06:03", "filteredCommits": ["961dee3d41d529661951711d327709e7042e8f73"], "commitsDetails": [{"nameRev": "961dee3d41d529661951711d327709e7042e8f73 tags/twelvemonkeys-3.4~21", "commitMessage": "#421: Fix for LCMS profile issue, due to LCMS altering the profile header on first use (ie. validation).\n", "commitParents": ["20788430863445cd4ca94fd838b93dfe68077cd4"], "spoonStatsSkippedReason": "", "commitHash": "961dee3d41d529661951711d327709e7042e8f73", "authoredDateTime": "2018-04-06 20:45:38", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 2, "lines": 9, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/KCMSSanitizerStrategy.java"}, {"insertions": 2, "deletions": 0, "lines": 2, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/ICCProfileSanitizer.java"}, {"insertions": 5, "deletions": 0, "lines": 5, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/LCMSSanitizerStrategy.java"}, {"insertions": 5, "deletions": 0, "lines": 5, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/ColorSpaces.java"}, {"insertions": 20, "deletions": 28, "lines": 48, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/color/ColorSpacesTest.java"}], "commitDateTime": "2018-04-06 20:45:38", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.validationAltersProfileHeader()"}], "spoonFilePath": "ICCProfileSanitizer.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpacesTest.testAdobeRGB98AlwaysSame()"}, {"UPD": 0, "TOT": 4, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpacesTest.testCMYKAlwaysSame()"}], "spoonFilePath": "ColorSpacesTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.getCachedOrCreateCS(java.awt.color.ICC_Profile,byte[])"}], "spoonFilePath": "ColorSpaces.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.intFromBigEndian(byte[],int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.validationAltersProfileHeader()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.intToBigEndian(int,byte[],int)"}], "spoonFilePath": "KCMSSanitizerStrategy.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.LCMSSanitizerStrategy.validationAltersProfileHeader()"}], "spoonFilePath": "LCMSSanitizerStrategy.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/421", "ttf": 2.000277777777778, "gitStatsSummary": {"insertions": 19, "deletions": 2, "lines": 21, "gitFilesChange": 4}, "title": "CS_GENERIC_CMYK profile loaded from path has different headers during lifetime.", "statsSkippedReason": "", "user": "ikhaldeev", "changesInPackagesGIT": ["imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 6, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\r\nI've faced some strange bug. If you try to load CMYK ICC profile from a properties file, first color space loaded with `ColorSpaces.getColorSpace(ColorSpaces.CS_GENERIC_CMYK)` will be different from subsequent. I've managed to trace the issue up to `ColorSpaces::getProfileHeaderWithProfileId` method, and it seems that ICC_Profile header can be changed during object lifetime.\r\n\r\nI've created PR with a failing test. [#420](https://github.com/haraldk/TwelveMonkeys/pull/420)", "labels": ["Bug"]}, {"created": "2018-04-05 09:07:39", "commits": {"20788430863445cd4ca94fd838b93dfe68077cd4": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.getXPtCoord(int)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.getYPtCoord(int)", "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpDirectBitsRect(javax.imageio.stream.ImageInputStream,int)"], "closed": "2018-04-05 18:55:04", "filteredCommits": ["20788430863445cd4ca94fd838b93dfe68077cd4"], "commitsDetails": [{"nameRev": "20788430863445cd4ca94fd838b93dfe68077cd4 tags/twelvemonkeys-3.4~22", "commitMessage": "#419 PICT rounding issue\n", "commitParents": ["a81472bb5f63e2f2b0e51ba9688baef7e1ff68dd"], "spoonStatsSkippedReason": "", "commitHash": "20788430863445cd4ca94fd838b93dfe68077cd4", "authoredDateTime": "2018-04-05 18:58:42", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 22, "lines": 38, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/PICTImageReader.java"}], "commitDateTime": "2018-04-05 18:58:42", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.getXPtCoord(int)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.getYPtCoord(int)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReader.readOpDirectBitsRect(javax.imageio.stream.ImageInputStream,int)"}], "spoonFilePath": "PICTImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/419", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 16, "deletions": 22, "lines": 38, "gitFilesChange": 1}, "title": "PICT images with missing rows and columns", "statsSkippedReason": "", "user": "j-p-sequeira", "changesInPackagesGIT": ["imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 3, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "This is a barely noticed issue. I have come across a PICT issue where a single row and column is missing from the generated image. It is better seen in non-photo images (like the drawing in the following example).\r\n\r\nThe PICT images I have were created by me with Photoshop and are displayed properly in Photoshop (I have no other app for handling PICT images).\r\n\r\nHere is an example where a row (at +/- 352px) and a column (at +/- 354px) are missing (the column is harder to spot because there are only 2 points where it affects the girl and 1 of these matches the row issue):\r\n\r\n![problem](https://user-images.githubusercontent.com/34538795/38356372-77e8f840-38b7-11e8-8752-734eff7b4d19.png)\r\n\r\nThe overall size of the image is correct, so the problem results in the last column and row to be transparent.\r\n\r\nEither two things are happening while reading the image: or the row and column are skipped or they overwrite a previously read row and column. After a quick glance, it seems the first scenario (though I can't understand what's really going on).\r\n\r\nNot related to this issue, but I have been wanting to ask, is the \".PIC\" format that Twelve Monkeys can read referring to the \"PICT - Apple Picture\" format or to the \"HDR - High Dynamic Range\" format?\r\n\r\nPS: I'll attach the original PCT file.\r\n[pict-example.zip](https://github.com/haraldk/TwelveMonkeys/files/1879245/pict-example.zip)\r\n", "labels": ["Bug"]}, {"created": "2018-03-22 12:26:25", "commits": {"a81472bb5f63e2f2b0e51ba9688baef7e1ff68dd": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readInt()", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readDirect(byte[],int,int)", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readLong()", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readBit()", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.read()", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.seek(long)", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.setByteOrder(java.nio.ByteOrder)", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readShort()", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.flushBefore(long)", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.read(byte[],int,int)", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.fillBuffer()", "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readBits(int)"], "closed": "2018-03-22 12:35:29", "filteredCommits": ["a81472bb5f63e2f2b0e51ba9688baef7e1ff68dd"], "commitsDetails": [{"nameRev": "a81472bb5f63e2f2b0e51ba9688baef7e1ff68dd tags/twelvemonkeys-3.4~23", "commitMessage": "#414: Fix for BufferedImageInputStream alignment/partial read issues.\nBonus clean-up of tests.\n", "commitParents": ["0c66ad82dde2fa0cc4103abff73802e9c60faf93"], "spoonStatsSkippedReason": "", "commitHash": "a81472bb5f63e2f2b0e51ba9688baef7e1ff68dd", "authoredDateTime": "2018-03-22 13:27:40", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 158, "deletions": 18, "lines": 176, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/stream/BufferedImageInputStream.java"}, {"insertions": 36, "deletions": 8, "lines": 44, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/stream/{BufferedImageInputStreamTestCase.java => BufferedImageInputStreamTest.java}"}, {"insertions": 18, "deletions": 4, "lines": 22, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/stream/{ByteArrayImageInputStreamTestCase.java => ByteArrayImageInputStreamTest.java}"}, {"insertions": 22, "deletions": 15, "lines": 37, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/stream/{SubImageInputStreamTestCase.java => SubImageInputStreamTest.java}"}], "commitDateTime": "2018-03-22 13:27:40", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readBits(int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readLong()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readInt()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.read()"}, {"UPD": 1, "TOT": 5, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readDirect(byte[],int,int)"}, {"UPD": 1, "TOT": 12, "MOV": 4, "INS": 6, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.seek(long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.read(byte[],int,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.setByteOrder(java.nio.ByteOrder)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readShort()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.flushBefore(long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.readBit()"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStream.fillBuffer()"}], "spoonFilePath": "BufferedImageInputStream.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStreamTestCase.testReadResetReadDirectBufferBug()"}, {"UPD": 5, "TOT": 10, "MOV": 5, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStreamTestCase.testBufferPositionCorrect()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStreamTest.testReadResetReadDirectBufferBug()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStreamTest.testBufferPositionCorrect()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStreamTest.testArrayIndexOutOfBoundsBufferedReadBug()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStreamTest.testCreateNull()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStreamTestCase"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStreamTestCase.testArrayIndexOutOfBoundsBufferedReadBug()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStreamTest.testCreate()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.BufferedImageInputStreamTestCase.testCreateNull()"}], "spoonFilePath": "BufferedImageInputStreamTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testReadArrayOffLen()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testCreateNull()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testCreateBadOff()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testReadSkip()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testCreateNegativeLen()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testReadSeek()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testReadArray()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testCreateNegativeLen()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testReadArrayOffLen()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testReadSeek()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testCreateNullOffLen()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testReadOffsetLen()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testCreate()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testCreate()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testRead()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testCreateBadLen()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testReadSkip()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testReadArray()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testCreateBadLen()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testRead()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testCreateNullOffLen()"}, {"UPD": 4, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testCreateNegativeOff()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testCreateBadOff()"}, {"UPD": 5, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTestCase.testReadOffsetLen()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testCreateNegativeOff()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.ByteArrayImageInputStreamTest.testCreateNull()"}], "spoonFilePath": "ByteArrayImageInputStreamTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testReadResetRead()"}, {"UPD": 8, "TOT": 8, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testRead()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testWraphBeyondWrappedLength()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testSeekNegative()"}, {"UPD": 2, "TOT": 7, "MOV": 4, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testCreateNegativeLength()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testCreateNegativeLength()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testCreate()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase"}, {"UPD": 1, "TOT": 5, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testCreateNullStream()"}, {"UPD": 3, "TOT": 5, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testSeek()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testSeekNegative()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testRead()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testCreateNullStream()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testWrapUnknownLength()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testWrapUnknownLength()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testSeekAfterEOF()"}, {"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testCreate()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testWraphBeyondWrappedLength()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.createStream(int)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testSeekAfterEOF()"}, {"UPD": 4, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTestCase.testSeekBeforeFlushedPos()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testReadResetRead()"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testSeekBeforeFlushedPos()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.stream.SubImageInputStreamTest.testSeek()"}], "spoonFilePath": "SubImageInputStreamTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/414", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 158, "deletions": 18, "lines": 176, "gitFilesChange": 1}, "title": "Alignment issues in BufferedImageInputStream when reading multi-byte entities on buffer boundary", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": ["imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/stream"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 13, "TOT": 29, "MOV": 7, "INS": 17, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Due to bugs in `ImageInputStreamImpl` (!) the methods all methods that is or uses the multi-byte integral read methods (`readShort(), readInt() & readLong()` with friends) may cause alignment issues in `BufferedImageInputStream` and returning semi-initialized values.\r\n\r\nThe problem can be seen in `ImageInputStreamImpl.java`: \r\n\r\n````java\r\n    public short readShort() throws IOException {\r\n        if (read(byteBuf, 0, 2) < 0) { // <-- Bad assumption, as read may return less than 2\r\n            throw new EOFException();\r\n        }\r\n   ...\r\n\r\n    public int readInt() throws IOException {\r\n        if (read(byteBuf, 0, 4) < 0) { // <-- Bad assumption, as read may return less than 4\r\n            throw new EOFException();\r\n        }\r\n\r\n````\r\n\r\nThe above methods should probably have used `readFully(byteBuf, 0, x)` instead. That would have made the code shorter as well, as `readFully` already covers the EOF case.\r\n\r\n-- \r\nHarald K\r\n", "labels": ["Bug"]}, {"created": "2018-02-13 14:26:07", "commits": {"127e6c0acb43be7d08b5a6ee3d0081a7de4054ff": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2018-03-06 22:10:12", "filteredCommits": [], "commitsDetails": [{"nameRev": "127e6c0acb43be7d08b5a6ee3d0081a7de4054ff tags/twelvemonkeys-3.4~29", "commitMessage": "#404, #406: Better detection of source color space for JPEG-in-TIFF.\n", "commitParents": ["633e5cc6a2c0637e508ab334b629b24470071724"], "spoonStatsSkippedReason": "", "commitHash": "127e6c0acb43be7d08b5a6ee3d0081a7de4054ff", "authoredDateTime": "2018-03-06 22:48:07", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 47, "deletions": 14, "lines": 61, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/twain-rgb-jpeg-with-bogus-ycbcr-subsampling.tif"}, {"insertions": 147, "deletions": 26, "lines": 173, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2018-03-06 22:48:07", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 12, "MOV": 0, "INS": 12, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadRGBJPEGAssumedYCbCr()"}, {"UPD": 3, "TOT": 28, "MOV": 19, "INS": 1, "DEL": 5, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadYCbCrJPEGAssumedRGB()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 0, "INS": 7, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getJPEGSourceCS(javax.imageio.metadata.IIOMetadata)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.needsCSConversion(int,int,javax.imageio.metadata.IIOMetadata)"}, {"UPD": 21, "TOT": 56, "MOV": 30, "INS": 0, "DEL": 5, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.needsCSConversion(int,javax.imageio.metadata.IIOMetadata)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getNode(javax.imageio.metadata.IIOMetadataNode,java.lang.String)"}, {"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readJPEGMetadataSafe(javax.imageio.ImageReader)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/406", "ttf": 21.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "TIFF with 'new-style' JPEG treated as YCbCr displayed \"pink\"", "statsSkippedReason": "", "user": "gitdode", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "We have some TIFFs with 'new-style' JPEG inside where i.e. white turns to pink.\r\n\r\nThe cid0 = 0, cid1 = 1 and cid2 = 2, so the colorspace of the JPEG is assumed to be YCbCr, while I think it actually is sRGB - at least the image is displayed correctly with JPEGColorSpace.RGB.\r\n\r\nI had a look [here](https://docs.oracle.com/javase/8/docs/api/javax/imageio/metadata/doc-files/jpeg_metadata.html) and from what I understand, there is no assumption made on componend ids 0, 1 and 2 and if subsampled, YCbCr is assumed and if not, RGB is assumed.\r\n\r\nIn 3.2.2, JPEGImageReader did that, but in the current 3.4-SNAPSHOT it doesn't. Is there any reason for that?\r\n\r\nJust to try, I put that check back in 3.4-SNAPSHOT and the image is displayed correctly.\r\n\r\nAnything I can contribute with?", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2017-12-22 20:57:58", "commits": {"63830a26e57ee65df7194dbe86624cee488f9e96": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-12-22 21:01:36", "filteredCommits": [], "commitsDetails": [{"nameRev": "63830a26e57ee65df7194dbe86624cee488f9e96 tags/twelvemonkeys-3.4~48", "commitMessage": "#401 #334 Work around for stream position issue in FileCacheImageOutputStream causing garbled output for multipage TIFF files\n+ Added regression tests.\n", "commitParents": ["921dba89f79fc51550451f01c2d803651bc6ee48"], "spoonStatsSkippedReason": "", "commitHash": "63830a26e57ee65df7194dbe86624cee488f9e96", "authoredDateTime": "2017-12-22 22:01:10", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 99, "deletions": 13, "lines": 112, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2017-12-22 22:01:10", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 9, "TOT": 26, "MOV": 14, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequence()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequenceFileCacheImageOutputStreamCompressedUncompressed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequenceFileImageOutputStreamUncompressedCompressed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequenceFileCacheImageOutputStreamCompressed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.assertWriteSequence(java.lang.Class,java.lang.String[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequenceFileCacheImageOutputStreamUncompressed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequenceFileImageOutputCompressed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequenceFileImageOutputStreamCompressedUncompressed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequenceFileImageOutputStreamUncompressed()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequenceFileCacheImageOutputStreamUncompressedCompressed()"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeToSequence(javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"}], "spoonFilePath": "TIFFImageWriter.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/401", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "TIFFImageWriter: Work around stream position issue in FileCacheImageOutputStream causing garbled output for multipage TIFF files", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "See discussion from #334, [bug found by James Dudley](https://github.com/haraldk/TwelveMonkeys/issues/334#issuecomment-353616311). \r\n\r\nFiling as separate issue for better tracking/release notes.\r\n", "labels": ["Bug"]}, {"created": "2017-12-21 09:45:04", "commits": {"3a86bfab98833675e4c0550a0f30d52c9d24bc15": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(int,javax.imageio.ImageReadParam)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getRawImageType(int)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageTypes(int)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getSourceCSType(com.twelvemonkeys.imageio.plugins.jpeg.JFIF,com.twelvemonkeys.imageio.plugins.jpeg.AdobeDCT,java.awt.Frame)"], "closed": "2018-01-05 10:49:41", "filteredCommits": ["3a86bfab98833675e4c0550a0f30d52c9d24bc15"], "commitsDetails": [{"nameRev": "3a86bfab98833675e4c0550a0f30d52c9d24bc15 tags/twelvemonkeys-3.4~46", "commitMessage": "#399 Rewritten getSourceCSType to mimic libjpeg\n", "commitParents": ["cdb2d72f8bcb6038a949ce79e7354f17c27acb6c"], "spoonStatsSkippedReason": "", "commitHash": "3a86bfab98833675e4c0550a0f30d52c9d24bc15", "authoredDateTime": "2018-01-05 11:41:15", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 65, "deletions": 110, "lines": 175, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}], "commitDateTime": "2018-01-05 11:41:15", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(int,javax.imageio.ImageReadParam)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getRawImageType(int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageTypes(int)"}, {"UPD": 8, "TOT": 118, "MOV": 38, "INS": 38, "DEL": 34, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getSourceCSType(com.twelvemonkeys.imageio.plugins.jpeg.JFIF,com.twelvemonkeys.imageio.plugins.jpeg.AdobeDCT,java.awt.Frame)"}], "spoonFilePath": "JPEGImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/399", "ttf": 15.000277777777777, "gitStatsSummary": {"insertions": 65, "deletions": 110, "lines": 175, "gitFilesChange": 1}, "title": "YCbCr color space incorrectly interpreted as RGB", "statsSkippedReason": "", "user": "albms", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 8, "spoonMethodsChanged": 4, "TOT": 121, "MOV": 38, "INS": 41, "DEL": 34, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\r\n\r\nI've included a code snippet below that depends on an input image file IMG-26.jpg which I'll supply separately. The aim of the code it was extracted from is to attempt to resize an image to be below a maximum size in bytes.\r\n\r\nWhen run with the following 6 libs on the classpath, the output (IMG-26-out.jpg) image has incorrect colours (the symptoms look similar to other issues where an image is interpetted as a different colourspace than RGB like this one: https://stackoverflow.com/questions/9340569/jpeg-image-with-wrong-colors):\r\n\r\n> twelvemonkeys-common-image-3.4-SNAPSHOT.jar\r\n> twelvemonkeys-common-io-3.4-SNAPSHOT.jar\r\n> twelvemonkeys-common-lang-3.4-SNAPSHOT.jar\r\n> twelvemonkeys-imageio-core-3.4-SNAPSHOT.jar\r\n> twelvemonkeys-imageio-jpeg-3.4-SNAPSHOT.jar\r\n> twelvemonkeys-imageio-metadata-3.4-SNAPSHOT.jar\r\n\r\nThe problem happens with both the libs from the 3.3.2 release and ones built from the master branch as of yesterday.\r\n\r\nWhen the code is run without the Twelve Monkeys libs on the classpath the output image colours look ok - the same as in the input image. \r\n\r\n```java\r\nimport java.awt.image.BufferedImage;\r\nimport java.awt.image.RenderedImage;\r\nimport java.io.BufferedInputStream;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.OutputStream;\r\nimport java.util.Iterator;\r\n\r\nimport javax.imageio.IIOImage;\r\nimport javax.imageio.ImageIO;\r\nimport javax.imageio.ImageReader;\r\nimport javax.imageio.ImageTypeSpecifier;\r\nimport javax.imageio.ImageWriteParam;\r\nimport javax.imageio.ImageWriter;\r\nimport javax.imageio.stream.ImageInputStream;\r\nimport javax.imageio.stream.ImageOutputStream;\r\n\r\npublic class ImageTest {\r\n\r\n    public static final int READ_LIMIT = 14680064;\r\n\r\n    ImageDecoder decoder = new ImageDecoder();\r\n\r\n    static int sizeLimit = 3000000;\r\n    static int startingQuality = 100;\r\n\r\n    public static void main(String[] args) throws ImageProcessingException, IOException {\r\n        System.out.println(\"running...\");\r\n        File input = new File(\"IMG-26.jpg\");\r\n        File output = new File(\"IMG-26-out.jpg\");\r\n        BufferedImage imageIn = new ImageDecoder().decodeImage(new FileInputStream(input));\r\n\r\n        InputStream in = encodeImage(imageIn, 0);\r\n\r\n        copy(in, new FileOutputStream(output));\r\n        System.out.println(\"Finished, wrote to \" + output.getAbsolutePath());\r\n    }\r\n\r\n    public static InputStream encodeImage(RenderedImage image, long originalSize) throws ImageProcessingException {\r\n        long maxSize = sizeLimit;\r\n        float q = 1.00f;\r\n        float delta = q * 0.05f;\r\n        int maxTries = 5;\r\n        int tries = 0;\r\n        ByteArrayEncodedImage out = null;\r\n        // Encode 1..maxTries times until output is small enough\r\n        long previousSize = originalSize;\r\n        while (true) {\r\n            try {\r\n                ByteArrayEncodedImage out2 = encodeImage(image, q);\r\n                if (out != null) {\r\n                    previousSize = out.getSize();\r\n                    closePrevious(out);\r\n                }\r\n                out = out2;\r\n            } catch (ImageProcessingException e) {\r\n                if (out != null) {\r\n                    System.out.println(\"Failed to process image many times via limitator. \"\r\n                            + \"Using the previous encoding. \" + e.getMessage());\r\n                    return out.getStream();\r\n                } else {\r\n                    throw e;\r\n                }\r\n            }\r\n            ++tries;\r\n            if (out.getSize() == null) {\r\n                System.out.println(\"Cannot limit image byte size\");\r\n                break;\r\n            }\r\n            // if (LOG.isDebugEnabled()) {\r\n            double previous = (previousSize == 0 ? 0f : (1.0 * previousSize / 1024));\r\n            System.out.println(\r\n                    String.format(\"Previous size was %.2f kbytes encoding %d with quality %.2f produced %.2f kbytes.\",\r\n                            previous, tries, q, 1.0 * out.getSize() / 1024));\r\n            // }\r\n            if (out.getSize() <= maxSize || tries >= maxTries) {\r\n                // either found small enough or tried too many times\r\n                break;\r\n            }\r\n            if (q < 0.1)\r\n                break; // already 0.0, stop\r\n            q -= delta;\r\n            if (q < 0.1)\r\n                q = 0.0f; // round last value into exactly 0.0\r\n        }\r\n\r\n        // use the last encoding hoping it is the best choice\r\n        return out.getStream();\r\n    }\r\n\r\n    public static ByteArrayEncodedImage encodeImage(RenderedImage image, float quality)\r\n            throws ImageProcessingException {\r\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\r\n        writeJpeg(image, out, quality);\r\n        return new ByteArrayEncodedImage(out);\r\n    }\r\n\r\n    private static void writeJpeg(RenderedImage image, OutputStream os, float compressionQuality)\r\n            throws ImageProcessingException {\r\n\r\n        ImageWriter iwriter = null;\r\n        if (ImageIO.getImageWritersByFormatName(\"jpeg\").hasNext()) {\r\n            iwriter = (ImageWriter) ImageIO.getImageWritersByFormatName(\"jpeg\").next();\r\n        } else {\r\n            String msg = \"Could not get JPEG ImageWriter\";\r\n            throw new ImageProcessingException(msg);\r\n        }\r\n\r\n        ImageWriteParam iwparam = iwriter.getDefaultWriteParam();\r\n        iwparam.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);\r\n        iwparam.setCompressionQuality(compressionQuality);\r\n        ImageOutputStream ios;\r\n        try {\r\n            ios = ImageIO.createImageOutputStream(os);\r\n        } catch (IOException ex) {\r\n            String msg = \"Could not get create image stream\";\r\n            throw new ImageProcessingException(msg, ex);\r\n        }\r\n\r\n        try {\r\n            iwriter.setOutput(ios);\r\n            iwriter.write(null, new IIOImage(image, null, null), iwparam);\r\n            ios.flush();\r\n            iwriter.dispose();\r\n        } catch (IOException ex) {\r\n            throw new ImageProcessingException(\"Could not write image\", ex);\r\n        } finally {\r\n            try {\r\n                ios.close();\r\n            } catch (IOException ex) {\r\n                ex.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    public static class ByteArrayEncodedImage {\r\n\r\n        private final ByteArrayOutputStream data;\r\n\r\n        public ByteArrayEncodedImage(ByteArrayOutputStream out) {\r\n            this.data = out;\r\n        }\r\n\r\n        public Long getSize() {\r\n            return (long) data.size();\r\n        }\r\n\r\n        public InputStream getStream() {\r\n            byte[] bytes = data.toByteArray();\r\n            return new ByteArrayInputStream(bytes);\r\n            // return this.data.toByteArrayInputStream();\r\n        }\r\n\r\n    }\r\n\r\n    public static class ImageDecoder {\r\n        \r\n        // Define an exception to which the exceptions that occur during\r\n        // decoding are stored. The exceptions are appended to the exception\r\n        // chain of this exception.\r\n        ImageProcessingException ipe = null;\r\n\r\n        /**\r\n         * Load an image. If the source stream supports marking, then it can be reset to\r\n         * original state after this method has returned. If the stream does no support\r\n         * marking, then it will be consumed by this method.\r\n         *\r\n         * @param source\r\n         *            the stream from which the encoded image is read.\r\n         * @return the decoded image.\r\n         */\r\n        public BufferedImage decodeImage(InputStream source) throws ImageProcessingException {\r\n\r\n            // If reset is not allowed by the stream wrap it in a\r\n            // BufferedInputStream to allow us to unwind back to start\r\n            // if we need to do a jpeg4 thumbnail.\r\n            if (!source.markSupported()) {\r\n                source = new BufferedInputStream(source);\r\n            }\r\n            source.mark(READ_LIMIT);\r\n\r\n            try {\r\n                BufferedImage image = new ImageIODecoder().decodeImage(source);\r\n                // BufferedImage image = decoders[i].decodeImage(source);\r\n                if (image == null) {\r\n                    // This happens on some TIFF images.\r\n                    String msg = \"Decoder failed silently and returned a \" + \"null reference\";\r\n                    throw new ImageProcessingException(msg);\r\n                }\r\n\r\n                return image;\r\n            } catch (ImageProcessingException ex) {\r\n                // Append the exception to the previous one. We do not want to\r\n                // log this exception, since it is part of expected program\r\n                // behaviour. An ugly hack caused by the lack of CMYK support\r\n                // in Java image processing libraries.\r\n                if (ipe == null) {\r\n                    ipe = ex;\r\n                } else {\r\n                    append(ipe, ex);\r\n                }\r\n\r\n                // Reset the stream before the next decoder is tried.\r\n                try {\r\n                    source.reset();\r\n                    source.mark(READ_LIMIT);\r\n                } catch (IOException ex2) {\r\n                    throw new ImageProcessingException(\"Failed to reset \" + \"stream\", ex2);\r\n                }\r\n            }\r\n\r\n            // If we get here, an error has occurred and ipe will be initialized.\r\n            throw ipe;\r\n        }\r\n\r\n        /**\r\n         * Append exception e2 to exception e1.\r\n         */\r\n        private void append(Throwable e1, Throwable e2) {\r\n            if (e1.getCause() != null) {\r\n                append(e1.getCause(), e2);\r\n            } else {\r\n                Exception spacer = new Exception(\"The following exception occurred after the previous exception.\");\r\n                spacer.setStackTrace(new StackTraceElement[0]);\r\n                spacer.initCause(e2);\r\n                e1.initCause(spacer);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void closePrevious(ByteArrayEncodedImage out) {\r\n        if (out != null) {\r\n            try {\r\n                out.getStream().close();\r\n            } catch (Throwable t) {\r\n                // nop\r\n            }\r\n        }\r\n    }\r\n\r\n    public static class ImageProcessingException extends Exception {\r\n        public ImageProcessingException(String msg) {\r\n            super(msg);\r\n        }\r\n\r\n        public ImageProcessingException(String msg, Throwable cause) {\r\n            super(msg, cause);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A decoder that uses JAI to decode images.\r\n     */\r\n    public static class ImageIODecoder {\r\n\r\n        /**\r\n         * Load an image. The implementation of this method will consume the source\r\n         * stream.\r\n         *\r\n         * @param source\r\n         *            the stream from which the encoded image is read.\r\n         * @return the decoded image.\r\n         */\r\n        public BufferedImage decodeImage(InputStream source) throws ImageProcessingException {\r\n\r\n            // Get an ImageReader. This code chooses the first reader from\r\n            // the available readers. There amy be an algorithm with which\r\n            // the most suitable reader could be selected.\r\n            ImageInputStream input;\r\n            try {\r\n                input = ImageIO.createImageInputStream(source);\r\n            } catch (IOException ex) {\r\n                throw new ImageProcessingException(\"Failed to create image reader\", ex);\r\n            }\r\n\r\n            Iterator<ImageReader> readers = ImageIO.getImageReaders(input);\r\n            ImageReader reader;\r\n            if (readers == null || !readers.hasNext()) {\r\n                throw new ImageProcessingException(\"No ImageReaders found for image\");\r\n            } else {\r\n                reader = readers.next();\r\n                reader.setInput(input);\r\n            }\r\n\r\n            // Find out the image type and pixel size.\r\n            ImageTypeSpecifier spec = null;\r\n            try {\r\n                Iterator<ImageTypeSpecifier> iter = reader.getImageTypes(0);\r\n                if (iter.hasNext()) {\r\n                    spec = iter.next();\r\n                }\r\n\r\n                if (spec == null) {\r\n                    throw new ImageProcessingException(\"Failed to detect image \" + \"type\");\r\n                }\r\n            } catch (IOException ex) {\r\n                throw new ImageProcessingException(\"Error while detecting image \" + \"type\", ex);\r\n            }\r\n\r\n            // Read the image\r\n            BufferedImage image;\r\n            try {\r\n                image = reader.read(0);\r\n            } catch (IOException ex) {\r\n                try {\r\n                    source.reset();\r\n                    source.mark(READ_LIMIT);\r\n                } catch (IOException ex2) {\r\n                    throw new ImageProcessingException(\"Failed to reset \" + \"stream\", ex2);\r\n                }\r\n\r\n                // write to temp file\r\n                File tmp = null;\r\n                FileOutputStream fout = null;\r\n                try {\r\n                    try {\r\n                        tmp = File.createTempFile(\"imageiodecoder\", \"tmp\");\r\n                        fout = new FileOutputStream(tmp);\r\n                        copy(source, fout);\r\n                    } finally {\r\n                        if (fout != null) {\r\n                            fout.close();\r\n                        }\r\n                    }\r\n\r\n                    // read image from temp file\r\n                    image = ImageIO.read(tmp);\r\n                } catch (IOException e) {\r\n                    throw new ImageProcessingException(\"Failed to read image from file\", e);\r\n\r\n                } finally {\r\n                    if (tmp != null) {\r\n                        tmp.delete();\r\n                    }\r\n                }\r\n            }\r\n\r\n            reader.dispose();\r\n            return image;\r\n        }\r\n    }\r\n    \r\n    private static void copy(InputStream in, OutputStream out)\r\n            throws IOException {\r\n            byte[] buf = new byte[8192];\r\n            int n;\r\n            while ((n = in.read(buf)) > 0) {\r\n                out.write(buf, 0, n);\r\n            }\r\n        }\r\n}\r\n```", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2017-12-20 14:00:35", "commits": {"140b074ac659fc3d4c66962434e8271c7eda9b16": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "9ce1a86cae996a0819b864849e26260e70b54ba1": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.ImageReaderBase.getDestination(javax.imageio.ImageReadParam,java.util.Iterator,int,int)"], "closed": "2019-08-09 18:01:12", "filteredCommits": ["140b074ac659fc3d4c66962434e8271c7eda9b16"], "commitsDetails": [{"nameRev": "140b074ac659fc3d4c66962434e8271c7eda9b16 tags/twelvemonkeys-3.4.2~4", "commitMessage": "#398: Better exception message when BufferedImage size > Integer.MAX\n\n(cherry picked from commit 9ce1a86cae996a0819b864849e26260e70b54ba1)\n", "commitParents": ["59c6c18cbb4a39e235a17adbfe221695399747ab"], "spoonStatsSkippedReason": "", "commitHash": "140b074ac659fc3d4c66962434e8271c7eda9b16", "authoredDateTime": "2019-08-09 19:52:07", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 2, "lines": 10, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/ImageReaderBase.java"}, {"insertions": 10, "deletions": 1, "lines": 11, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/ImageReaderBaseTest.java"}], "commitDateTime": "2019-08-09 21:04:41", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.ImageReaderBaseTest.testGetDestinationStorageExceedsIntegerMax()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.ImageReaderBaseTest.testGetDestinationExceedsIntegerMax()"}], "spoonFilePath": "ImageReaderBaseTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 8, "MOV": 2, "INS": 4, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.ImageReaderBase.getDestination(javax.imageio.ImageReadParam,java.util.Iterator,int,int)"}], "spoonFilePath": "ImageReaderBase.java"}]}, {"nameRev": "9ce1a86cae996a0819b864849e26260e70b54ba1 tags/twelvemonkeys-3.5~17", "commitMessage": "#398: Better exception message when BufferedImage size > Integer.MAX\n", "commitParents": ["b0b5de5fa42eae3a4fcfdd93cc5654db584ea56e"], "spoonStatsSkippedReason": "", "commitHash": "9ce1a86cae996a0819b864849e26260e70b54ba1", "authoredDateTime": "2019-08-09 19:52:07", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 2, "lines": 10, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/ImageReaderBase.java"}, {"insertions": 10, "deletions": 1, "lines": 11, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/ImageReaderBaseTest.java"}], "commitDateTime": "2019-08-09 19:52:07", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.ImageReaderBaseTest.testGetDestinationStorageExceedsIntegerMax()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.ImageReaderBaseTest.testGetDestinationExceedsIntegerMax()"}], "spoonFilePath": "ImageReaderBaseTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 8, "MOV": 2, "INS": 4, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.ImageReaderBase.getDestination(javax.imageio.ImageReadParam,java.util.Iterator,int,int)"}], "spoonFilePath": "ImageReaderBase.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/398", "ttf": 597.0002777777778, "gitStatsSummary": {"insertions": 8, "deletions": 2, "lines": 10, "gitFilesChange": 1}, "title": "java.lang.IllegalArgumentException: Invalid scanline stride with a high resolution PSB file", "statsSkippedReason": "", "user": "vsarya", "changesInPackagesGIT": ["imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 8, "MOV": 2, "INS": 4, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Following exception is observed with this high resolution PSB [file](https://drive.google.com/open?id=1-TU3HAf5WjF-Z8ZDLWE9TMDYDdlR3ieJ).\r\n\r\njava.lang.IllegalArgumentException: Invalid scanline stride\r\n\tat java.awt.image.ComponentSampleModel.getBufferSize(ComponentSampleModel.java:274)\r\n\tat java.awt.image.ComponentSampleModel.verify(ComponentSampleModel.java:252)\r\n\tat java.awt.image.ComponentSampleModel.<init>(ComponentSampleModel.java:170)\r\n\tat java.awt.image.PixelInterleavedSampleModel.<init>(PixelInterleavedSampleModel.java:87)\r\n\tat java.awt.image.PixelInterleavedSampleModel.createCompatibleSampleModel(PixelInterleavedSampleModel.java:144)\r\n\tat javax.imageio.ImageTypeSpecifier.getSampleModel(ImageTypeSpecifier.java:1039)\r\n\tat javax.imageio.ImageTypeSpecifier.createBufferedImage(ImageTypeSpecifier.java:1072)\r\n\tat com.twelvemonkeys.imageio.ImageReaderBase.getDestination(Unknown Source)\r\n\tat com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read(PSDImageReader.java:357)", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2017-12-19 19:31:30", "commits": {"910f9fafc77b5f9ff4bd38f5d6c133cdf96df39b": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.getStandardChromaNode()"], "closed": "2017-12-19 19:32:47", "filteredCommits": ["910f9fafc77b5f9ff4bd38f5d6c133cdf96df39b"], "commitsDetails": [{"nameRev": "910f9fafc77b5f9ff4bd38f5d6c133cdf96df39b tags/twelvemonkeys-3.4~55", "commitMessage": "#397 ColorSpaceType value -> name\n", "commitParents": ["73e4eb8627ab832a15f2eb87036e81bc64ca83a0"], "spoonStatsSkippedReason": "", "commitHash": "910f9fafc77b5f9ff4bd38f5d6c133cdf96df39b", "authoredDateTime": "2017-12-19 20:32:26", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 9, "deletions": 9, "lines": 18, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageMetadata.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageMetadataTest.java"}], "commitDateTime": "2017-12-19 20:32:26", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 9, "TOT": 9, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.getStandardChromaNode()"}], "spoonFilePath": "TIFFImageMetadata.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadataTest.testMetadataStandardFormat()"}], "spoonFilePath": "TIFFImageMetadataTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/397", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 9, "deletions": 9, "lines": 18, "gitFilesChange": 1}, "title": "TIFFImageMetadata has incorrect attribute \"value\" for ColorSpaceType, should be \"name\"", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 9, "spoonMethodsChanged": 1, "TOT": 9, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "", "labels": ["Bug"]}, {"created": "2017-11-15 14:16:39", "commits": {"7a5110506b32354fc69a65404ec44a2113b3f570": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "743c2bf3cdc6535cad4c82a519ec5636af574db5": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,float[])", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.clamp(float[])"], "closed": "2017-11-18 15:17:33", "filteredCommits": ["7a5110506b32354fc69a65404ec44a2113b3f570"], "commitsDetails": [{"nameRev": "7a5110506b32354fc69a65404ec44a2113b3f570 tags/twelvemonkeys-3.4~61", "commitMessage": "#394: Fix for ArrayIndexOutOfBoundsException for grayscale floating point TIFFs + bonus WhiteIsZero for float.\n", "commitParents": ["cd9f3a036eb977db82f4effa36d5f47b3e1746a8"], "spoonStatsSkippedReason": "", "commitHash": "7a5110506b32354fc69a65404ec44a2113b3f570", "authoredDateTime": "2017-11-18 16:13:27", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 12, "deletions": 2, "lines": 14, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2017-11-18 16:13:27", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,float[])"}, {"UPD": 2, "TOT": 6, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.clamp(float[])"}], "spoonFilePath": "TIFFImageReader.java"}]}, {"nameRev": "743c2bf3cdc6535cad4c82a519ec5636af574db5 tags/twelvemonkeys-3.4~60", "commitMessage": "#394: Fix for ArrayIndexOutOfBoundsException for grayscale floating point TIFFs + bonus WhiteIsZero for float.\n", "commitParents": ["7a5110506b32354fc69a65404ec44a2113b3f570"], "spoonStatsSkippedReason": "", "commitHash": "743c2bf3cdc6535cad4c82a519ec5636af574db5", "authoredDateTime": "2017-11-18 16:16:46", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 3, "deletions": 2, "lines": 5, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2017-11-18 16:16:46", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(java.awt.image.Raster,java.awt.Rectangle,int,int,int,int,int,java.awt.image.WritableRaster,int,int,int,int,java.io.DataInput)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,float[])"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/394", "ttf": 3.000277777777778, "gitStatsSummary": {"insertions": 12, "deletions": 2, "lines": 14, "gitFilesChange": 1}, "title": "ArrayIndexOutOfBoundsException when drawing float greyscale TIFF", "statsSkippedReason": "", "user": "converge20t", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 2, "TOT": 8, "MOV": 2, "INS": 3, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "First, I'd like to thank you on this excellent image library, as it has been very beneficial in adding TIFF support to our application.\r\n\r\nPreviously using version 3.3.2, I was unable to to read in greyscale TIFF images using this code:\r\n\r\n`BufferedImage tiffImage = ImageIO.read(new File(\"greyscale_image.tif\"));`\r\n\r\nI would get this exception: _IllegalArgumentException: Bad value for bits!_\r\n\r\nAfter downloading and compiling the latest sources, the above code now completes without exception. However, if I try to do anything with the BufferedImage afterwards, I get an _ArrayIndexOutOfBoundsException_. The code below produces this exception:\r\n\r\n```\r\nGraphics2D g2 = (Graphics2D) g.create();\r\ng2.drawImage(tiffImage, 0, 0, this);\r\n```\r\n\r\nI created a work-around by manually creating a new BufferedImage and using setRGB() to copy the read-in image. However, I have to catch the _ArrayIndexOutOfBoundsException_ as image.getRGB() also produces the same exception whenever it encounters a black pixel. This work-around works, although the image appears to be inverted (black/white to white/black) once it's drawn on the screen. Here is that code:\r\n\r\n```\r\nBufferedImage convertedImage = new BufferedImage(tiffImage.getWidth(), tiffImage.getHeight(), BufferedImage.TYPE_INT_RGB);\r\nfor (int y = 0; y < tiffImage.getHeight(); y++) {\r\n\tfor (int x = 0; x < tiffImage.getWidth(); x++) {\r\n\t\ttry {\r\n\t\t\tint color = tiffImage.getRGB(x, y); // may create exception\r\n\t\t\tconvertedImage.setRGB(x, y, color);\r\n\t\t} catch (ArrayIndexOutOfBoundsException e) {\r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n```\r\n\r\nAttached is an example image that exhibits this issue.\r\n[greyscale_image.zip](https://github.com/haraldk/TwelveMonkeys/files/1474986/greyscale_image.zip)\r\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2017-11-11 22:10:04", "commits": {"cd9f3a036eb977db82f4effa36d5f47b3e1746a8": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getEmbeddedICCProfile(boolean)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.intToBigEndian(int,byte[],int)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readICCProfileSafe(java.io.InputStream,boolean,int,int)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.intFromBigEndian(byte[],int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getICCProfile()"], "closed": "2017-11-18 14:59:37", "filteredCommits": ["cd9f3a036eb977db82f4effa36d5f47b3e1746a8"], "commitsDetails": [{"nameRev": "cd9f3a036eb977db82f4effa36d5f47b3e1746a8 tags/twelvemonkeys-3.4~62", "commitMessage": "#393: Input size validation of ICC profiles\n", "commitParents": ["719b6e78830fa7b437ac7ecd9deb2b23e235e5f0"], "spoonStatsSkippedReason": "", "commitHash": "cd9f3a036eb977db82f4effa36d5f47b3e1746a8", "authoredDateTime": "2017-11-18 15:54:27", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 38, "deletions": 11, "lines": 49, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 0, "deletions": 1, "lines": 1, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/KCMSSanitizerStrategy.java"}, {"insertions": 7, "deletions": 1, "lines": 8, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2017-11-18 15:54:27", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "KCMSSanitizerStrategy.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readICCProfileSafe(java.io.InputStream,boolean,int,int)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.intToBigEndian(int,byte[],int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.intFromBigEndian(byte[],int)"}, {"UPD": 0, "TOT": 17, "MOV": 3, "INS": 14, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getEmbeddedICCProfile(boolean)"}], "spoonFilePath": "JPEGImageReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 4, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getICCProfile()"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/393", "ttf": 6.000277777777778, "gitStatsSummary": {"insertions": 45, "deletions": 13, "lines": 58, "gitFilesChange": 3}, "title": "OutOfMemory error on TIFF image with corrupt ICC header", "statsSkippedReason": "", "user": "bdaum", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff", "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color", "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 5, "TOT": 32, "MOV": 7, "INS": 24, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "A corrupt ICC header may cause java.awt.color.ICC_Profile to allocate a huge read buffer resulting in an OutOfMemory exception. You may want to catch this in the TIFFImageReader.getICCProfile() like this: \r\n\r\n catch (CMMException | IllegalArgumentException | **OutOfMemoryError** ignore) { \r\n        processWarningOccurred(\"Ignoring broken/incompatible ICC profile: \" + ignore.getMessage());\r\n }\r\n", "labels": ["Bug", "New feature"]}, {"created": "2017-10-27 09:18:30", "commits": {"b68848f58f0d6aeab4949602380fd9d6f82bd45d": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "d677141ab7f0e1b111189426b25be9d6efaecf84": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.color.ColorSpaces.getProfileHeaderWithProfileId(java.awt.color.ICC_Profile)", "com.twelvemonkeys.imageio.color.ColorSpaces.isOffendingColorProfile(java.awt.color.ICC_Profile)", "com.twelvemonkeys.imageio.color.ColorSpaces.Key", "com.twelvemonkeys.imageio.color.ColorSpaces.LINEAR_RGB", "com.twelvemonkeys.imageio.color.ColorSpaces.validateProfile(java.awt.color.ICC_Profile)", "com.twelvemonkeys.imageio.color.LCMSSanitizerStrategy.fixProfile(java.awt.color.ICC_Profile,byte[])", "com.twelvemonkeys.imageio.color.ColorSpaces.getCachedOrCreateCS(java.awt.color.ICC_Profile,byte[])", "com.twelvemonkeys.imageio.color.ColorSpaces.sRGB", "com.twelvemonkeys.imageio.color.ColorSpaces.isCS_sRGB(java.awt.color.ICC_Profile)", "com.twelvemonkeys.imageio.color.ColorSpaces.getColorSpace(int)", "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.intFromBigEndian(byte[],int)", "com.twelvemonkeys.imageio.color.ColorSpaces.PYCC", "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy", "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.fixProfileXYZTag(java.awt.color.ICC_Profile,int)", "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.fixProfile(java.awt.color.ICC_Profile)", "com.twelvemonkeys.imageio.color.ColorSpaces.computeProfileIdMD5(java.awt.color.ICC_Profile,byte[])", "com.twelvemonkeys.imageio.color.ColorSpaces", "com.twelvemonkeys.imageio.color.ColorSpaces.CIEXYZ", "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.fixProfile(java.awt.color.ICC_Profile,byte[])", "com.twelvemonkeys.imageio.color.fixProfile(java.awt.color.ICC_Profile,byte[])", "com.twelvemonkeys.imageio.color.ColorSpaces.Key.toString()", "com.twelvemonkeys.imageio.color.ColorSpaces.Profiles.getPath(java.lang.String)", "com.twelvemonkeys.imageio.color.ColorSpaces.GRAY", "com.twelvemonkeys.imageio.color.ColorSpaces.readProfileFromClasspathResource(java.lang.String)", "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.intToBigEndian(int,byte[],int)", "com.twelvemonkeys.imageio.color.ColorSpaces.createColorSpace(java.awt.color.ICC_Profile)", "com.twelvemonkeys.imageio.color.ColorSpaces.computeMD5(byte[])", "com.twelvemonkeys.imageio.color.ColorSpaces.validateColorSpace(java.awt.color.ICC_ColorSpace)"], "closed": "2017-11-05 10:46:48", "filteredCommits": ["b68848f58f0d6aeab4949602380fd9d6f82bd45d", "d677141ab7f0e1b111189426b25be9d6efaecf84"], "commitsDetails": [{"nameRev": "b68848f58f0d6aeab4949602380fd9d6f82bd45d tags/twelvemonkeys-3.4~64", "commitMessage": "#386 Fixed ColorSpaces ICC profile caching bug pt II\n", "commitParents": ["d677141ab7f0e1b111189426b25be9d6efaecf84"], "spoonStatsSkippedReason": "", "commitHash": "b68848f58f0d6aeab4949602380fd9d6f82bd45d", "authoredDateTime": "2017-11-18 14:20:40", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 21, "deletions": 11, "lines": 32, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/KCMSSanitizerStrategy.java"}, {"insertions": 41, "deletions": 26, "lines": 67, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/ColorSpaces.java"}, {"insertions": 4, "deletions": 1, "lines": 5, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/color/ColorSpacesTest.java"}], "commitDateTime": "2017-11-18 14:20:40", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 4, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpacesTest.createBrokenProfile(java.awt.color.ICC_Profile)"}], "spoonFilePath": "ColorSpacesTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.getProfileHeaderWithProfileId(java.awt.color.ICC_Profile)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.isOffendingColorProfile(java.awt.color.ICC_Profile)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.getCachedOrCreateCS(java.awt.color.ICC_Profile,byte[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.Key.toString()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.validateColorSpace(java.awt.color.ICC_ColorSpace)"}, {"UPD": 11, "TOT": 21, "MOV": 8, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.computeProfileIdMD5(java.awt.color.ICC_Profile,byte[])"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.readProfileFromClasspathResource(java.lang.String)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.computeMD5(byte[])"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.validateProfile(java.awt.color.ICC_Profile)"}], "spoonFilePath": "ColorSpaces.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy"}, {"UPD": 6, "TOT": 23, "MOV": 12, "INS": 1, "DEL": 4, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.fixProfileXYZTag(java.awt.color.ICC_Profile,int)"}, {"UPD": 14, "TOT": 33, "MOV": 14, "INS": 1, "DEL": 4, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.fixProfile(java.awt.color.ICC_Profile)"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.intFromBigEndian(byte[],int)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.intToBigEndian(int,byte[],int)"}], "spoonFilePath": "KCMSSanitizerStrategy.java"}]}, {"nameRev": "d677141ab7f0e1b111189426b25be9d6efaecf84 tags/twelvemonkeys-3.4~65", "commitMessage": "#386 Fixed ColorSpaces ICC profile caching bug\n", "commitParents": ["1c27b58598d69ef30b44f5e518c8260a62e7fc1e"], "spoonStatsSkippedReason": "", "commitHash": "d677141ab7f0e1b111189426b25be9d6efaecf84", "authoredDateTime": "2017-11-05 11:44:41", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 10, "lines": 12, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/color/LCMSSanitizerStrategyTest.java"}, {"insertions": 8, "deletions": 3, "lines": 11, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/KCMSSanitizerStrategy.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-core/src/test/resources/profiles/adobe_rgb_1998.icc"}, {"insertions": 61, "deletions": 28, "lines": 89, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/ColorSpaces.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-core/src/test/resources/profiles/color_match_rgb.icc"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/LCMSSanitizerStrategy.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/ICCProfileSanitizer.java"}, {"insertions": 16, "deletions": 1, "lines": 17, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/color/ColorSpacesTest.java"}, {"insertions": 12, "deletions": 9, "lines": 21, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/color/KCMSSanitizerStrategyTest.java"}], "commitDateTime": "2017-11-05 11:44:41", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpacesTest.createBrokenProfile(java.awt.color.ICC_Profile)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpacesTest.testEqualHeadersDifferentProfile()"}], "spoonFilePath": "ColorSpacesTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.getProfileHeaderWithProfileId(java.awt.color.ICC_Profile)"}, {"UPD": 2, "TOT": 6, "MOV": 2, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.isOffendingColorProfile(java.awt.color.ICC_Profile)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.Key"}, {"UPD": 7, "TOT": 27, "MOV": 18, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.createColorSpace(java.awt.color.ICC_Profile)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.sRGB"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.PYCC"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.computeProfileIdMD5(java.awt.color.ICC_Profile,byte[])"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.CIEXYZ"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.LINEAR_RGB"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.isCS_sRGB(java.awt.color.ICC_Profile)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.Profiles.getPath(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.GRAY"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.ColorSpaces.getColorSpace(int)"}], "spoonFilePath": "ColorSpaces.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategyTest.testFixProfileNullHeader()"}, {"UPD": 1, "TOT": 9, "MOV": 2, "INS": 4, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategyTest.testFixProfileUpdateHeader()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategyTest.testFixProfileCorbisRGB()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategyTest.testFixProfileNullProfile()"}], "spoonFilePath": "KCMSSanitizerStrategyTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 6, "MOV": 2, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.fixProfile(java.awt.color.ICC_Profile,byte[])"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 4, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.KCMSSanitizerStrategy.fixProfile(java.awt.color.ICC_Profile)"}], "spoonFilePath": "KCMSSanitizerStrategy.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.LCMSSanitizerStrategy.fixProfile(java.awt.color.ICC_Profile,byte[])"}], "spoonFilePath": "LCMSSanitizerStrategy.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.fixProfile(java.awt.color.ICC_Profile,byte[])"}], "spoonFilePath": "ICCProfileSanitizer.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.LCMSSanitizerStrategyTest.testFixProfileNullProfile()"}, {"UPD": 0, "TOT": 4, "MOV": 3, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.color.LCMSSanitizerStrategyTest.testFixProfileNoHeader()"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 0, "DEL": 4, "spoonMethodName": "com.twelvemonkeys.imageio.color.LCMSSanitizerStrategyTest.testFixProfile()"}], "spoonFilePath": "LCMSSanitizerStrategyTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/386", "ttf": 9.000277777777777, "gitStatsSummary": {"insertions": 134, "deletions": 71, "lines": 205, "gitFilesChange": 4}, "title": "Caching in ColorSpaces may cause wrong ICC profile to be used in color conversion", "statsSkippedReason": "", "user": "igorrogov", "changesInPackagesGIT": ["imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color"], "spoonStatsSummary": {"UPD": 52, "spoonMethodsChanged": 28, "TOT": 160, "MOV": 58, "INS": 30, "DEL": 20, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\r\n\r\nI noticed the following weird behavior. If I load the image 002.jpg (attached), it works fine. But if I first load another image 001.jpg (also attached) and then 002.jpg right after that, the color of the 002 image is slightly different and I can see the bytes are different now.\r\n\r\n```\r\nTest 1\r\ngetImageMd5( \"002.jpg\" ) = 32629496911f9addbc476ec8db564446\r\n\r\n```\r\n\r\n```\r\nTest 2\r\ngetImageMd5( \"001.jpg\" ) = 6400d19bda78a9464651c07a2235aa9d\r\ngetImageMd5( \"002.jpg\" ) = 83ba95b3d6c5b8c4c063a824666735bd // same image, different MD5\r\n\r\n```\r\n\r\n\r\nSample source code and images are attached.\r\n\r\nVersion: twelvemonkeys.imageio-jpeg 3.3.2 (also tried 3.3.1).\r\n\r\n[JpegReaderTest.java.zip](https://github.com/haraldk/TwelveMonkeys/files/1421483/JpegReaderTest.java.zip)\r\n[images.zip](https://github.com/haraldk/TwelveMonkeys/files/1421489/images.zip)\r\n\r\nThanks!", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2017-10-23 05:30:04", "commits": {"4a1eb4b376459c0663f3a407786b8bd2076315f2": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.psd.PSDHeader", "com.twelvemonkeys.imageio.plugins.psd.PSDMetadata", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.getNumImages(boolean)", "com.twelvemonkeys.imageio.plugins.psd.PSDUnicodeAlphaNames.toString()", "com.twelvemonkeys.imageio.plugins.psd.PSDMetadata.getResources(int[])", "com.twelvemonkeys.imageio.plugins.psd.PSDMetadata.getStandardDimensionNode()", "com.twelvemonkeys.imageio.plugins.psd.PSDMetadata.getLayerCount()", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readLayerData(int,javax.imageio.ImageReadParam)", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.getRawImageTypeForCompositeLayer()", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readImageData(java.awt.image.BufferedImage,java.awt.image.ColorModel,java.awt.Rectangle,java.awt.Rectangle,int,int,int[],int)", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readImageResources(boolean)", "com.twelvemonkeys.imageio.plugins.psd.PSDMetadata.hasAlpha()", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readLayerAndMaskInfo(boolean)", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.checkBounds(int)"], "closed": "2017-10-27 17:52:08", "filteredCommits": ["4a1eb4b376459c0663f3a407786b8bd2076315f2"], "commitsDetails": [{"nameRev": "4a1eb4b376459c0663f3a407786b8bd2076315f2 tags/twelvemonkeys-3.4~70", "commitMessage": "#384 RGB PSB files with non-transparency alpha channels now rendered correctly\n", "commitParents": ["f14159de57ac0dc2bcd969dfa24bfa5110784d49"], "spoonStatsSkippedReason": "", "commitHash": "4a1eb4b376459c0663f3a407786b8bd2076315f2", "authoredDateTime": "2017-10-27 19:51:09", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 111, "deletions": 126, "lines": 237, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDImageReader.java"}, {"insertions": 33, "deletions": 2, "lines": 35, "filePath": "imageio/imageio-psd/src/test/java/com/twelvemonkeys/imageio/plugins/psd/PSDImageReaderTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDAlphaChannelInfo.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDHeader.java"}, {"insertions": 8, "deletions": 1, "lines": 9, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDUnicodeAlphaNames.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-psd/src/test/resources/psd/rgb-multichannel-no-transparency.psd"}, {"insertions": 13, "deletions": 9, "lines": 22, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDMetadata.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-psd/src/test/resources/{psd => psb}/test_original.psb"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-psd/src/test/resources/psb/rgb-multichannel-no-transparency.psb"}], "commitDateTime": "2017-10-27 19:51:09", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "PSDAlphaChannelInfo.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 8, "MOV": 2, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDHeader"}], "spoonFilePath": "PSDHeader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDUnicodeAlphaNames.toString()"}], "spoonFilePath": "PSDUnicodeAlphaNames.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readLayerData(int,javax.imageio.ImageReadParam)"}, {"UPD": 1, "TOT": 7, "MOV": 3, "INS": 1, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.getNumImages(boolean)"}, {"UPD": 17, "TOT": 71, "MOV": 42, "INS": 3, "DEL": 9, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.getRawImageTypeForCompositeLayer()"}, {"UPD": 2, "TOT": 30, "MOV": 18, "INS": 4, "DEL": 6, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readImageData(java.awt.image.BufferedImage,java.awt.image.ColorModel,java.awt.Rectangle,java.awt.Rectangle,int,int,int[],int)"}, {"UPD": 0, "TOT": 12, "MOV": 8, "INS": 2, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readImageResources(boolean)"}, {"UPD": 0, "TOT": 23, "MOV": 15, "INS": 6, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readLayerAndMaskInfo(boolean)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.checkBounds(int)"}], "spoonFilePath": "PSDImageReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReaderTest.testMultiChannelNoTransparencyPSB()"}, {"UPD": 1, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReaderTest.getTestData()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReaderTest.testMultiChannelNoTransparencyPSD()"}], "spoonFilePath": "PSDImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDMetadata.getStandardDimensionNode()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDMetadata.getLayerCount()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDMetadata"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDMetadata.getResources(int[])"}, {"UPD": 1, "TOT": 8, "MOV": 5, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDMetadata.hasAlpha()"}], "spoonFilePath": "PSDMetadata.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/384", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 137, "deletions": 141, "lines": 278, "gitFilesChange": 5}, "title": "PSD/PSB files with non-transparency alpha channels rendered incorrectly", "statsSkippedReason": "", "user": "vsarya", "changesInPackagesGIT": ["imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd"], "spoonStatsSummary": {"UPD": 23, "spoonMethodsChanged": 14, "TOT": 169, "MOV": 96, "INS": 24, "DEL": 26, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Incorrect thumbnails (attached) are generated for following psb files - \r\n\r\n1 alpha + 3 channels RGB & flatten.psb - https://drive.google.com/open?id=0B1SBo6BEhvipemFIT1pTYmtkTVE\r\n4 alpha + 3 channels RGB & flatten.psb - https://drive.google.com/open?id=0B1SBo6BEhvipeU9lZmJRVnd3RXc\r\n\r\n[1 alpha 3 channels rgb flatten.jpeg](https://user-images.githubusercontent.com/11541786/31873507-23c5800a-b7e1-11e7-9ec8-ceb0fd4793e3.jpeg)\r\n[4 alpha 3 channels rgb flatten.jpeg](https://user-images.githubusercontent.com/11541786/31873508-23ecf306-b7e1-11e7-95e3-647940fb743e.jpeg)", "labels": ["Bug"]}, {"created": "2017-08-29 08:36:58", "commits": {"a15e69e0191a526f9704d826557975c1af110083": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createGrayscale(int,int)", "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createGrayscale(int,int,boolean)"], "closed": "2017-10-16 12:53:40", "filteredCommits": ["a15e69e0191a526f9704d826557975c1af110083"], "commitsDetails": [{"nameRev": "a15e69e0191a526f9704d826557975c1af110083 tags/twelvemonkeys-3.4~74", "commitMessage": "#374 Added support for TIFF 32 bit float Grayscale\n", "commitParents": ["c1fac78f3c9193bfcc18f449d81646fc5d0cce1b"], "spoonStatsSkippedReason": "", "commitHash": "a15e69e0191a526f9704d826557975c1af110083", "authoredDateTime": "2017-10-16 14:52:40", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 0, "lines": 6, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/util/ImageTypeSpecifiers.java"}, {"insertions": 38, "deletions": 2, "lines": 40, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/util/ImageTypeSpecifiersTest.java"}], "commitDateTime": "2017-10-16 14:52:40", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreateGrayscaleAlphaFloat()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreateGrayscaleDouble()"}, {"UPD": 3, "TOT": 6, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreateGrayscale32()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreateGrayscaleAlphaDouble()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreateGrayscaleFloat()"}], "spoonFilePath": "ImageTypeSpecifiersTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 5, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createGrayscale(int,int)"}, {"UPD": 0, "TOT": 9, "MOV": 5, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createGrayscale(int,int,boolean)"}], "spoonFilePath": "ImageTypeSpecifiers.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/374", "ttf": 48.000277777777775, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "title": "TIFF Grayscale float image can't be read ", "statsSkippedReason": "", "user": "diorcety", "changesInPackagesGIT": ["imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/util"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 18, "MOV": 10, "INS": 6, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "We can not load Grayscale float tiff image because the library use javax.imageio.ImageTypeSpecifier.Grayscale which not handle this format and throws IllegalArgumentException(\"Bad value for bits!\")", "labels": ["Bug"]}, {"created": "2017-05-19 10:26:49", "user": "haraldk", "body": "See: http://stackoverflow.com/questions/44058336/reading-dpi-from-photoshop-file\r\n\r\nThe issue is an inverted test condition:\r\n\r\n        if (!resolutionInfos.hasNext()) {\r\n\r\nShould have been:\r\n\r\n        if (resolutionInfos.hasNext()) {\r\n\r\n\r\nCreate test case and fix!\r\n\r\n-- \r\nHarald K", "closed": "2017-12-19 18:56:11", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/350", "ttf": 214.00027777777777, "commits": {}, "labels": ["Bug"], "title": "PSDMetadata does not include Horizontal-/VerticalPixelSize in standard Dimension node"}, {"created": "2017-03-23 12:08:38", "commits": {"bf32881d47e895223398bbcd842b67009a3a100f": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "b8a540c0af5ea7cb8bfdf5627274ea991b367240": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "22e7b215108d36be433f469891ff83b640254121": {"commitGHEventType": "closed", "commitUser": "haraldk"}, "8ca3fceccaa149c281cf5527276563b72c89ee60": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "9cf30790def5ea0d31c4a41f09677864b9b7205f": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeToSequence(javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"], "closed": "2017-08-21 19:38:23", "filteredCommits": ["22e7b215108d36be433f469891ff83b640254121", "b8a540c0af5ea7cb8bfdf5627274ea991b367240"], "commitsDetails": [{"nameRev": "b8a540c0af5ea7cb8bfdf5627274ea991b367240 tags/twelvemonkeys-3.4~52", "commitMessage": "#334 Hardened test case for multi page (sequence) writing.\n", "commitParents": ["73a13fa84917c6c957df6751d15d09c355c36292"], "spoonStatsSkippedReason": "", "commitHash": "b8a540c0af5ea7cb8bfdf5627274ea991b367240", "authoredDateTime": "2017-12-19 21:40:15", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 11, "deletions": 2, "lines": 13, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2017-12-19 21:40:15", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 23, "MOV": 8, "INS": 8, "DEL": 7, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequence()"}], "spoonFilePath": "TIFFImageWriterTest.java"}]}, {"nameRev": "22e7b215108d36be433f469891ff83b640254121 tags/twelvemonkeys-3.4~78^2~1^2", "commitMessage": "Fix #334: Writing compressed multipage TIFF\n", "commitParents": ["86fa76c17dd456f439c8330e6414057eae257e84"], "spoonStatsSkippedReason": "", "commitHash": "22e7b215108d36be433f469891ff83b640254121", "authoredDateTime": "2017-07-28 13:23:14", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}], "commitDateTime": "2017-07-28 13:26:15", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeToSequence(javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"}], "spoonFilePath": "TIFFImageWriter.java"}]}, {"nameRev": "bf32881d47e895223398bbcd842b67009a3a100f tags/twelvemonkeys-3.4~51", "commitMessage": "#334 Hardened test case for multi page (sequence) writing.\n", "commitParents": ["b8a540c0af5ea7cb8bfdf5627274ea991b367240"], "spoonStatsSkippedReason": "", "commitHash": "bf32881d47e895223398bbcd842b67009a3a100f", "authoredDateTime": "2017-12-19 21:42:28", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 5, "lines": 5, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2017-12-19 21:42:28", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequence()"}], "spoonFilePath": "TIFFImageWriterTest.java"}]}, {"nameRev": "8ca3fceccaa149c281cf5527276563b72c89ee60 tags/twelvemonkeys-3.4~50", "commitMessage": "#334 Hardened test case for multi page (sequence) writing.\n", "commitParents": ["bf32881d47e895223398bbcd842b67009a3a100f"], "spoonStatsSkippedReason": "", "commitHash": "8ca3fceccaa149c281cf5527276563b72c89ee60", "authoredDateTime": "2017-12-19 21:59:14", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 3, "lines": 10, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2017-12-19 21:59:14", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 2, "INS": 5, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequence()"}], "spoonFilePath": "TIFFImageWriterTest.java"}]}, {"nameRev": "9cf30790def5ea0d31c4a41f09677864b9b7205f tags/twelvemonkeys-3.4~78^2~1", "commitMessage": "Merge pull request #369 from Schmidor/tm334\n\nFix #334: Writing compressed multipage TIFF", "commitParents": ["d16c9067d1276934927fd935bdc93718e1ecfc5f", "22e7b215108d36be433f469891ff83b640254121"], "spoonStatsSkippedReason": "", "commitHash": "9cf30790def5ea0d31c4a41f09677864b9b7205f", "authoredDateTime": "2017-08-21 21:38:21", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}], "commitDateTime": "2017-08-21 21:38:21", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeToSequence(javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"}], "spoonFilePath": "TIFFImageWriter.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/334", "ttf": 151.00027777777777, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "title": "Writing compressed multipage TIFF", "statsSkippedReason": "", "user": "WowMuchName", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "There is either a bug or need for additional clarification with the tiff-plugin when writing multiple pages is combined with compression.\r\n\r\nhttps://gist.github.com/WowMuchName/23b80df8cb54917fac0b338f1e3ea245\r\n\r\n**Expected:**\r\n\r\nA tiff is created with two pages:\r\n\r\n![image0](https://cloud.githubusercontent.com/assets/13510843/24246304/0ee1974a-0fc7-11e7-9e7e-1acee2c56b63.png)\r\n\r\n![image1](https://cloud.githubusercontent.com/assets/13510843/24246312/148489d2-0fc7-11e7-9a1e-6c860fa3ea75.png)\r\n\r\n**Received**\r\n\r\nA tiff with two pages:\r\n\r\n![image0](https://cloud.githubusercontent.com/assets/13510843/24246369/4e1c6c3c-0fc7-11e7-8655-b8fa49cd47ea.png)\r\n\r\n![image1](https://cloud.githubusercontent.com/assets/13510843/24246373/52650c72-0fc7-11e7-89f5-457024868abd.png)\r\n\r\n**Additional information**\r\n\r\nThe pages after one seem always wrong. When using real images, they are not always completely black but always messed up with black bars all over the place. They are displayed like that in windows-image viewer and irfan view. Also reading the file-data back into java contains the same error after page one. \r\n\r\nWhen I remove the lines 34-35 (where group4 compression is set) the multitiff is okay. Using LZW instead of CCITT T.6 emitts a result which is also invalid and causes an exception when trying to read it in java.\r\n\r\nIt seems that combining multitiff + compression is either not working correctly or there is need for additional documentation. In JAI from which we are migrating I can't recall ever needing anything apart from setCompressionMode and setCompressionType to achieve the desired compression for multitiffs. If additional steps are needed in twelvemonkeys an example, testcase or additional documentation which shows how to write multitiffs with compression would be helpfull.\r\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2017-03-06 19:07:10", "commits": {"7ab72f016181b0d63f0a89bf6dbe7f8de3d31143": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readRaster(int,javax.imageio.ImageReadParam)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.fetchSegment()", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageTypes(int)", "com.twelvemonkeys.imageio.metadata.jpeg.JPEGSegmentUtil.isKnownJPEGMarker(int)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.repositionAsNecessary()", "com.twelvemonkeys.imageio.plugins.jpeg.Application.read(int,java.lang.String,java.io.DataInput,int)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.read(byte[],int,int)", "com.twelvemonkeys.imageio.metadata.jpeg.JPEGSegmentUtil.readSegment(javax.imageio.stream.ImageInputStream,java.util.Map)"], "closed": "2018-05-22 19:34:45", "filteredCommits": ["7ab72f016181b0d63f0a89bf6dbe7f8de3d31143"], "commitsDetails": [{"nameRev": "7ab72f016181b0d63f0a89bf6dbe7f8de3d31143 tags/twelvemonkeys-3.4~15", "commitMessage": "#329 JPEGImageReader endless loop fix\n", "commitParents": ["b32a38bf026ae22462e782254c00b83c4a5e0bfc"], "spoonStatsSkippedReason": "", "commitHash": "7ab72f016181b0d63f0a89bf6dbe7f8de3d31143", "authoredDateTime": "2018-05-22 21:10:57", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/broken-jpeg/516c2778-02a8-11e7-9d50-e916ce831200.jpg"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/broken-jpeg/513f29d0-02a8-11e7-9756-6035edb96e79.jpg"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/broken-jpeg/514e4122-02a8-11e7-8c03-0830d60cd585.jpg"}, {"insertions": 62, "deletions": 9, "lines": 71, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/jpeg/JPEGSegmentUtil.java"}, {"insertions": 126, "deletions": 4, "lines": 130, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/broken-jpeg/514b20dc-02a8-11e7-92c6-d4fed7b4ebb1.jpg"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/broken-jpeg/5145e95a-02a8-11e7-8372-4787a7307ab8.jpg"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/broken-jpeg/514c48ea-02a8-11e7-8789-bb75321f404f.jpg"}, {"insertions": 16, "deletions": 3, "lines": 19, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/broken-jpeg/51432b02-02a8-11e7-9203-b42b1c43c0c3.jpg"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/Application.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/broken-jpeg/515e763c-02a8-11e7-85fb-573b41201f05.jpg"}, {"insertions": 28, "deletions": 0, "lines": 28, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStreamTest.java"}, {"insertions": 18, "deletions": 13, "lines": 31, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStream.java"}], "commitDateTime": "2018-05-22 21:10:57", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.repositionAsNecessary()"}, {"UPD": 1, "TOT": 9, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.fetchSegment()"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.read(byte[],int,int)"}], "spoonFilePath": "JPEGSegmentImageInputStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.jpeg.JPEGSegmentUtil.isKnownJPEGMarker(int)"}, {"UPD": 0, "TOT": 6, "MOV": 4, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.jpeg.JPEGSegmentUtil.readSegment(javax.imageio.stream.ImageInputStream,java.util.Map)"}], "spoonFilePath": "JPEGSegmentUtil.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.Application.read(int,java.lang.String,java.io.DataInput,int)"}], "spoonFilePath": "Application.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testBrokenGetImageTypes()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testSPIRecognizesBrokenJPEG()"}, {"UPD": 0, "TOT": 7, "MOV": 0, "INS": 7, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.getBrokenTestData()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testBrokenGetRawImageTypeIgnoreMetadata()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testBrokenGetRawImageType()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testBrokenGetImageTypesIgnoreMetadata()"}], "spoonFilePath": "JPEGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStreamTest.testEOFExceptionInSegmentParsingShouldNotCreateBadState2()"}, {"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStreamTest.testEOFExceptionInSegmentParsingShouldNotCreateBadState()"}], "spoonFilePath": "JPEGSegmentImageInputStreamTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readRaster(int,javax.imageio.ImageReadParam)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageTypes(int)"}], "spoonFilePath": "JPEGImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/329", "ttf": 442.0002777777778, "gitStatsSummary": {"insertions": 97, "deletions": 26, "lines": 123, "gitFilesChange": 4}, "title": "Indefinite loop while reading corrupt JPEG", "statsSkippedReason": "", "user": "Nadahar", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg", "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/jpeg"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 8, "TOT": 24, "MOV": 12, "INS": 9, "DEL": 1, "spoonFilesChanged": 4}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi Harald.\r\n\r\nI know reading corrupt files and solving related problems is boring and not very interesting, but since this one hangs the thread it might be worth looking into. Tests have been performed on my code using some Google test suite, and it ends up hanging the application because the thread doing the reading goes into an indefinite loop while holding locks ending up blocking almost everything.\r\n\r\nI've been able to track it down to an endless loop in ```com.sun.imageio.plugins.jpeg.JPEGImageReader.hasNextImage()```. The loop is this:\r\n```java\r\n        boolean foundFF = false;\r\n        for (int byteval = iis.read();\r\n             byteval != -1;\r\n             byteval = iis.read()) {\r\n\r\n            if (foundFF == true) {\r\n                if (byteval == JPEG.SOI) {\r\n                    iis.reset();\r\n                    if (debug) {\r\n                        System.out.println(\"true\");\r\n                    }\r\n                    return true;\r\n                }\r\n            }\r\n            foundFF = (byteval == 0xff) ? true : false;\r\n        }\r\n```\r\n\r\nFrom what I can tell, the only ways to break the loop is either by an ```Exception``` being thrown, ```-1``` being returned from the ```ImageInputStream``` or finding the ```SOE```. I know that this code isn't yours, but it seems that the reason for the endless loop is found in ```com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.repositionAsNecessary()``` which swallows the ```EOFException```. The code comments says that an ```EOFException``` will be thrown or ```-1``` will be returned by the subsequent read, but this clearly isn't the case.\r\n\r\nI'm not familiar enough with this code to understand why the ```EOFException``` is ignored in the first place, and thus not able to produce a fix.\r\n\r\nThe test suite has thousands of images, and only 8 JPEGs end up in a hung thread, so it's not a very frequent problem. Still it would be nice to avoid it.\r\n\r\nThe corrupt/invalid JPEGs are very small (as they have very little actual content), so I'm attaching them all:\r\n\r\n![id_005573 sync_jpeg_turbo src_004235](https://cloud.githubusercontent.com/assets/12900583/23625107/513f29d0-02a8-11e7-9756-6035edb96e79.jpg)\r\n![id_000448 src_000000 op_havoc rep_32 cov](https://cloud.githubusercontent.com/assets/12900583/23625109/5145e95a-02a8-11e7-8372-4787a7307ab8.jpg)\r\n![id_001917 src_001912 op_havoc rep_8](https://cloud.githubusercontent.com/assets/12900583/23625108/51432b02-02a8-11e7-9203-b42b1c43c0c3.jpg)\r\n![id_001918 src_001917 op_havoc rep_8](https://cloud.githubusercontent.com/assets/12900583/23625110/514b20dc-02a8-11e7-92c6-d4fed7b4ebb1.jpg)\r\n![id_003682 sync_jpeg_turbo src_001907](https://cloud.githubusercontent.com/assets/12900583/23625111/514c48ea-02a8-11e7-8789-bb75321f404f.jpg)\r\n![id_003723 sync_jpeg_turbo src_001917](https://cloud.githubusercontent.com/assets/12900583/23625112/514e4122-02a8-11e7-8c03-0830d60cd585.jpg)\r\n![id_003809 sync_jpeg_turbo src_001918](https://cloud.githubusercontent.com/assets/12900583/23625113/515e763c-02a8-11e7-85fb-573b41201f05.jpg)\r\n![id_004235 src_003897 op_havoc rep_16](https://cloud.githubusercontent.com/assets/12900583/23625114/516c2778-02a8-11e7-9d50-e916ce831200.jpg)\r\n\r\n", "labels": ["Bug"]}, {"created": "2017-02-27 14:41:17", "commits": {"12050dfe61a725441c02c681e3e89af2e66d64ba": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream", "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.getNextChangingElement(int,boolean)"], "closed": "2017-03-09 19:37:25", "filteredCommits": ["12050dfe61a725441c02c681e3e89af2e66d64ba"], "commitsDetails": [{"nameRev": "12050dfe61a725441c02c681e3e89af2e66d64ba tags/twelvemonkeys-3.4~84", "commitMessage": "#328 CCITTFaxDecoderStream AIOOBE fix\n", "commitParents": ["97cd8a955fcc7b4bf103ec1a06602d880b28e69b"], "spoonStatsSkippedReason": "", "commitHash": "12050dfe61a725441c02c681e3e89af2e66d64ba", "authoredDateTime": "2017-03-09 20:33:11", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 19, "deletions": 1, "lines": 20, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/CCITTFaxDecoderStreamTest.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/CCITTFaxDecoderStream.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/ccitt-too-many-changes.tif"}], "commitDateTime": "2017-03-09 20:33:11", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.getTestData()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStreamTest.testMoreChangesThanColumnsFile()"}], "spoonFilePath": "CCITTFaxDecoderStreamTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.getNextChangingElement(int,boolean)"}], "spoonFilePath": "CCITTFaxDecoderStream.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/328", "ttf": 10.000277777777777, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "title": "ArrayIndexOutOfBoundsException in CCITTFaxDecoderStream.decode2D", "statsSkippedReason": "", "user": "THausherr", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 2, "spoonMethodsChanged": 2, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "```\r\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 25\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.decode2D(CCITTFaxDecoderStream.java:184)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.decodeRowType6(CCITTFaxDecoderStream.java:275)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.decodeRow(CCITTFaxDecoderStream.java:287)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.fetch(CCITTFaxDecoderStream.java:114)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.read(CCITTFaxDecoderStream.java:439)\r\n\tat java.io.DataInputStream.readFully(DataInputStream.java:195)\r\n\tat java.io.DataInputStream.readFully(DataInputStream.java:169)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(TIFFImageReader.java:1508)\r\n\tat com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(TIFFImageReader.java:934)\r\n\tat javax.imageio.ImageIO.read(ImageIO.java:1448)\r\n\tat javax.imageio.ImageIO.read(ImageIO.java:1308)\r\n\tat TwelveMonkeysTest.main(TwelveMonkeysTest.java:57)\r\n\r\n\r\n```\r\n\r\n[223423.zip](https://github.com/haraldk/TwelveMonkeys/files/803948/223423.zip)\r\n\r\nThis file comes from a stream in a PDF file, I constructed the TIF header myself. The PDF file displays properly in Adobe Reader, ghostscript and in PDF.js.\r\n\r\nI tried to change the offending code line to do nothing if the index is out of bounds and that works, but I don't know if this the best solution.\r\n\r\nUnrelated and unimportant: I looked at the changes since we copied the code from CCITTFaxDecoderStream.java - why does getNextChangingElement() declare a \"throws IOException\"? I can't see where this would be thrown.", "labels": ["Bug"]}, {"created": "2017-02-21 10:58:44", "commits": {"97cd8a955fcc7b4bf103ec1a06602d880b28e69b": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.ThumbnailReader.readRawThumbnail(byte[],int,int,int,int)", "com.twelvemonkeys.imageio.plugins.jpeg.JFIF.read(java.io.DataInput,int)"], "closed": "2017-02-27 20:03:24", "filteredCommits": ["97cd8a955fcc7b4bf103ec1a06602d880b28e69b"], "commitsDetails": [{"nameRev": "97cd8a955fcc7b4bf103ec1a06602d880b28e69b tags/twelvemonkeys-3.4~85", "commitMessage": "#326: Support for JFIF JPEG with non-spec 8 bit grayscale thumbnail.\n", "commitParents": ["d8d179204f7f6d1820685070307094e92498dea9"], "spoonStatsSkippedReason": "", "commitHash": "97cd8a955fcc7b4bf103ec1a06602d880b28e69b", "authoredDateTime": "2017-02-27 20:58:23", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 15, "deletions": 3, "lines": 18, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JFIFThumbnailReaderTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/jfif-grayscale-thumbnail.jpg"}, {"insertions": 11, "deletions": 2, "lines": 13, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/ThumbnailReader.java"}, {"insertions": 4, "deletions": 2, "lines": 6, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JFIF.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2017-02-27 20:58:23", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JFIF.read(java.io.DataInput,int)"}], "spoonFilePath": "JFIF.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.getTestData()"}], "spoonFilePath": "JPEGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.ThumbnailReader.readRawThumbnail(byte[],int,int,int,int)"}], "spoonFilePath": "ThumbnailReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JFIFThumbnailReaderTest.testReadNonSpecGray()"}], "spoonFilePath": "JFIFThumbnailReaderTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/326", "ttf": 6.000277777777778, "gitStatsSummary": {"insertions": 15, "deletions": 4, "lines": 19, "gitFilesChange": 2}, "title": "JFIF JPEG with non-spec grayscale thumbail fail to load", "statsSkippedReason": "", "user": "gregkotsaftis", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 5, "MOV": 3, "INS": 2, "DEL": 0, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When trying to display any JPEGs created from a scanner, an error occurs!\r\n\r\nJars included in classpath:\r\n```\r\n  common-image-3.3.2.jar\r\n  common-io-3.3.2.jar\r\n  common-lang-3.3.2.jar\r\n  imageio-bmp-3.3.2.jar\r\n  imageio-core-3.3.2.jar\r\n  imageio-jpeg-3.3.2.jar\r\n  imageio-metadata-3.3.2.jar\r\n  imageio-tiff-3.3.2.jar\r\n\r\n```\r\nException:\r\n```\r\njava.nio.BufferUnderflowException\r\n\tat java.nio.HeapByteBuffer.get(HeapByteBuffer.java:151)\r\n\tat java.nio.ByteBuffer.get(ByteBuffer.java:715)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JFIF.getBytes(JFIF.java:125)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JFIF.read(JFIF.java:106)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.Application.read(Application.java:72)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.Segment.read(Segment.java:94)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.initHeader(JPEGImageReader.java:691)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getSOF(JPEGImageReader.java:754)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:334)\r\n\tat javax.imageio.ImageIO.read(ImageIO.java:1448)\r\n\tat javax.imageio.ImageIO.read(ImageIO.java:1308)\r\n\r\n```\r\nIf i use the original java ImageIO (remove **_imageio-jpeg-3.3.2.jar_** from the classpath), the image loads and displays properly.\r\n\r\nSee the attached JPEG sample file that causes this error!\r\n\r\n![roza](https://cloud.githubusercontent.com/assets/3630283/23162985/45ca9a7c-f839-11e6-8df4-cec63c86d85c.jpg)\r\n", "labels": ["Bug", "New feature"]}, {"created": "2017-02-15 22:26:42", "commits": {"7bed5a1c9cdf0db3dcdaf8e27416d855dc96ad74": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "15e39bce3f0342ece02a407ed75460a5bff1a293": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.readReplaceDuplicateSOSComponentSelectors(long)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.replaceDuplicateSOFnComponentIds(int,long)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.JPEGSegmentStreamWarningDelegate", "com.twelvemonkeys.imageio.plugins.jpeg", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.setInput(java.lang.Object,boolean,boolean)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.DownsampledDQTReplacement.createMarkerFixedLength(int,int,javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.AdobeAPP14Replacement", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.readReplaceDuplicateSOFnComponentIds(int,long)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.fetchSegment()", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.ComponentIdSet", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.processWarningOccured(java.lang.String)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.readSegment(int,int,javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.replaceDuplicateSOSComponentSelectors(long)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.AdobeAPP14Replacement.createMarkerFixedLength(javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.isSOFMarker(int)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.initHeader()"], "closed": "2018-03-06 22:53:39", "filteredCommits": ["15e39bce3f0342ece02a407ed75460a5bff1a293", "7bed5a1c9cdf0db3dcdaf8e27416d855dc96ad74"], "commitsDetails": [{"nameRev": "7bed5a1c9cdf0db3dcdaf8e27416d855dc96ad74 tags/twelvemonkeys-3.4~26", "commitMessage": "#323: Minor optimization + changed warning message.\n", "commitParents": ["ee299ee577bf0dcd75cc2c331382d00ed7d6827f"], "spoonStatsSkippedReason": "", "commitHash": "7bed5a1c9cdf0db3dcdaf8e27416d855dc96ad74", "authoredDateTime": "2018-03-06 23:47:51", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 55, "deletions": 26, "lines": 81, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStream.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2018-03-06 23:47:51", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.readReplaceDuplicateSOSComponentSelectors(long)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.fetchSegment()"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.ComponentIdSet"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.readReplaceDuplicateSOFnComponentIds(int,long)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.replaceDuplicateSOFnComponentIds(int,long)"}, {"UPD": 8, "TOT": 16, "MOV": 6, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.replaceDuplicateSOSComponentSelectors(long)"}], "spoonFilePath": "JPEGSegmentImageInputStream.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadDuplicateComponentIds()"}], "spoonFilePath": "JPEGImageReaderTest.java"}]}, {"nameRev": "15e39bce3f0342ece02a407ed75460a5bff1a293 tags/twelvemonkeys-3.4~28", "commitMessage": "#323 JPEGSegmentImageInputStream now rewrites duplicate SOF/SOS ids.\nAnd emits warnings when it applies rewrites.\n", "commitParents": ["127e6c0acb43be7d08b5a6ee3d0081a7de4054ff"], "spoonStatsSkippedReason": "", "commitHash": "15e39bce3f0342ece02a407ed75460a5bff1a293", "authoredDateTime": "2018-03-06 23:19:47", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 1, "lines": 9, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/duplicate-component-ids.jpg"}, {"insertions": 13, "deletions": 0, "lines": 13, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentStreamWarningListener.java"}, {"insertions": 35, "deletions": 0, "lines": 35, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}, {"insertions": 4, "deletions": 4, "lines": 8, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStreamTest.java"}, {"insertions": 151, "deletions": 39, "lines": 190, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStream.java"}], "commitDateTime": "2018-03-06 23:19:47", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 23, "MOV": 10, "INS": 9, "DEL": 4, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.fetchSegment()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.replaceDuplicateSOSComponentSelectors(long)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.DownsampledDQTReplacement.createMarkerFixedLength(int,int,javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.processWarningOccured(java.lang.String)"}, {"UPD": 0, "TOT": 5, "MOV": 0, "INS": 5, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream"}, {"UPD": 8, "TOT": 16, "MOV": 2, "INS": 0, "DEL": 6, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.AdobeAPP14Replacement.createMarkerFixedLength(javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.readSegment(int,int,javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.isSOFMarker(int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.replaceDuplicateSOFnComponentIds(int,long)"}, {"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.AdobeAPP14Replacement"}], "spoonFilePath": "JPEGSegmentImageInputStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadAdobeAPP14CMYKAnd3channelData()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadDuplicateComponentIds()"}], "spoonFilePath": "JPEGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg"}], "spoonFilePath": "JPEGSegmentStreamWarningListener.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStreamTest.getClassLoaderResource(java.lang.String)"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStreamTest.testStreamRealDataLength()"}], "spoonFilePath": "JPEGSegmentImageInputStreamTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.setInput(java.lang.Object,boolean,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.initHeader()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.JPEGSegmentStreamWarningDelegate"}], "spoonFilePath": "JPEGImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/323", "ttf": 384.0002777777778, "gitStatsSummary": {"insertions": 227, "deletions": 66, "lines": 293, "gitFilesChange": 3}, "title": "Invalid component ID 1 in SOS when reading CMYK JPEG", "statsSkippedReason": "", "user": "THausherr", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 21, "spoonMethodsChanged": 17, "TOT": 90, "MOV": 22, "INS": 34, "DEL": 13, "spoonFilesChanged": 3}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "```\r\n    javax.imageio.IIOException: Invalid component ID 1 in SOS\r\n\tat com.sun.imageio.plugins.jpeg.JPEGImageReader.readImageHeader(Native Method)\r\n\tat com.sun.imageio.plugins.jpeg.JPEGImageReader.readNativeHeader(JPEGImageReader.java:609)\r\n\tat com.sun.imageio.plugins.jpeg.JPEGImageReader.checkTablesOnly(JPEGImageReader.java:347)\r\n\tat com.sun.imageio.plugins.jpeg.JPEGImageReader.gotoImage(JPEGImageReader.java:481)\r\n\tat com.sun.imageio.plugins.jpeg.JPEGImageReader.readHeader(JPEGImageReader.java:602)\r\n\tat com.sun.imageio.plugins.jpeg.JPEGImageReader.readInternal(JPEGImageReader.java:1059)\r\n\tat com.sun.imageio.plugins.jpeg.JPEGImageReader.readRaster(JPEGImageReader.java:1458)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readRaster(JPEGImageReader.java:920)\r\n\tat org.apache.pdfbox.filter.DCTFilterProd.decode(DCTFilterProd.java:104)\r\n```\r\n\r\n![huhu2](https://cloud.githubusercontent.com/assets/6665575/22998049/65f519f2-f3d5-11e6-9a9f-168e6a4d10e7.jpg)\r\n\r\nI'm using 3.3.2 on 1.8.0_121 on Windows 7.\r\n\r\n(memo for myself: in 200818.pdf)", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2017-01-12 11:51:34", "commits": {"aa3e2cc01992a333c7a4da4a6276befed9a89ef5": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "6ea1ea891680eb548cdea1da2b5e3b2fc4e5588f": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-01-18 18:14:27", "filteredCommits": [], "commitsDetails": [{"nameRev": "aa3e2cc01992a333c7a4da4a6276befed9a89ef5 tags/twelvemonkeys-3.3.2~5", "commitMessage": "#312, #313, #314 Fixed ClassCastException when rewriting compressed TIFF images.\n\n(cherry picked from commit 6ea1ea8)\n", "commitParents": ["b0108fe39bec799e51f77370ce523e898e06381b"], "spoonStatsSkippedReason": "", "commitHash": "aa3e2cc01992a333c7a4da4a6276befed9a89ef5", "authoredDateTime": "2017-01-18 18:44:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 18, "deletions": 9, "lines": 27, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/36-tiff-8-bit-gray-jpeg.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/51-tiff-24-bit-color-jpeg.tif"}, {"insertions": 141, "deletions": 0, "lines": 141, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/58-plexustiff-binary-ccitt-group4.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/17-tiff-binary-ccitt-group3.tif"}], "commitDateTime": "2017-02-02 21:06:07", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.ImageInfo"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteStreamMetadataDefaultII()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testRewrite()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteStreamMetadataDefaultMM()"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel)"}, {"UPD": 0, "TOT": 6, "MOV": 1, "INS": 4, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.initMeta(com.twelvemonkeys.imageio.metadata.Directory,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.exif.EXIFWriter,long)"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel,int)"}], "spoonFilePath": "TIFFImageWriter.java"}]}, {"nameRev": "6ea1ea891680eb548cdea1da2b5e3b2fc4e5588f tags/twelvemonkeys-3.4~92", "commitMessage": "#312, #313, #314 Fixed ClassCastException when rewriting compressed TIFF images.\n", "commitParents": ["762b59674b46fb88f471da6095063f1578dcb91e"], "spoonStatsSkippedReason": "", "commitHash": "6ea1ea891680eb548cdea1da2b5e3b2fc4e5588f", "authoredDateTime": "2017-01-18 18:44:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 18, "deletions": 9, "lines": 27, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/36-tiff-8-bit-gray-jpeg.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/51-tiff-24-bit-color-jpeg.tif"}, {"insertions": 108, "deletions": 0, "lines": 108, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/58-plexustiff-binary-ccitt-group4.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/17-tiff-binary-ccitt-group3.tif"}], "commitDateTime": "2017-01-18 18:44:05", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testRewrite()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.ImageInfo"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 1, "INS": 4, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.initMeta(com.twelvemonkeys.imageio.metadata.Directory,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel)"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.tiff.TIFFWriter,long)"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel,int)"}], "spoonFilePath": "TIFFImageWriter.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/314", "ttf": 6.000277777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Re-encoding a Packbits compressed TIFF may cause ClassCastException", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Similar to #312, using a sample from #310.\r\n\r\nThe tag value is unconditionally cast to int, but may be long/short.", "labels": ["Bug"]}, {"created": "2017-01-10 16:10:06", "commits": {"aa3e2cc01992a333c7a4da4a6276befed9a89ef5": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "6ea1ea891680eb548cdea1da2b5e3b2fc4e5588f": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-01-18 18:14:10", "filteredCommits": [], "commitsDetails": [{"nameRev": "aa3e2cc01992a333c7a4da4a6276befed9a89ef5 tags/twelvemonkeys-3.3.2~5", "commitMessage": "#312, #313, #314 Fixed ClassCastException when rewriting compressed TIFF images.\n\n(cherry picked from commit 6ea1ea8)\n", "commitParents": ["b0108fe39bec799e51f77370ce523e898e06381b"], "spoonStatsSkippedReason": "", "commitHash": "aa3e2cc01992a333c7a4da4a6276befed9a89ef5", "authoredDateTime": "2017-01-18 18:44:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 18, "deletions": 9, "lines": 27, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/36-tiff-8-bit-gray-jpeg.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/51-tiff-24-bit-color-jpeg.tif"}, {"insertions": 141, "deletions": 0, "lines": 141, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/58-plexustiff-binary-ccitt-group4.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/17-tiff-binary-ccitt-group3.tif"}], "commitDateTime": "2017-02-02 21:06:07", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.ImageInfo"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteStreamMetadataDefaultII()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testRewrite()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteStreamMetadataDefaultMM()"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel)"}, {"UPD": 0, "TOT": 6, "MOV": 1, "INS": 4, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.initMeta(com.twelvemonkeys.imageio.metadata.Directory,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.exif.EXIFWriter,long)"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel,int)"}], "spoonFilePath": "TIFFImageWriter.java"}]}, {"nameRev": "6ea1ea891680eb548cdea1da2b5e3b2fc4e5588f tags/twelvemonkeys-3.4~92", "commitMessage": "#312, #313, #314 Fixed ClassCastException when rewriting compressed TIFF images.\n", "commitParents": ["762b59674b46fb88f471da6095063f1578dcb91e"], "spoonStatsSkippedReason": "", "commitHash": "6ea1ea891680eb548cdea1da2b5e3b2fc4e5588f", "authoredDateTime": "2017-01-18 18:44:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 18, "deletions": 9, "lines": 27, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/36-tiff-8-bit-gray-jpeg.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/51-tiff-24-bit-color-jpeg.tif"}, {"insertions": 108, "deletions": 0, "lines": 108, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/58-plexustiff-binary-ccitt-group4.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/17-tiff-binary-ccitt-group3.tif"}], "commitDateTime": "2017-01-18 18:44:05", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testRewrite()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.ImageInfo"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 1, "INS": 4, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.initMeta(com.twelvemonkeys.imageio.metadata.Directory,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel)"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.tiff.TIFFWriter,long)"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel,int)"}], "spoonFilePath": "TIFFImageWriter.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/313", "ttf": 8.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "TIFFImageWriter incorrectly writes PhotometricInterpretation YCbCr for GRAY JPEG data", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "There's currently a bug in the TIFFImageWriter, where it unconditionally writes PhotometricInterpretation YCbCr (value 6), even if the input data is GRAY or CMYK. This causes the writer to write corrupted TIFF files.\r\n\r\nSee #310 for background and possible sample file.\r\n\r\nPS: We should probably also avoid writing the default gray ICC profile for gray data.", "labels": ["Bug"]}, {"created": "2017-01-10 15:06:17", "commits": {"aa3e2cc01992a333c7a4da4a6276befed9a89ef5": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "6ea1ea891680eb548cdea1da2b5e3b2fc4e5588f": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2017-01-18 18:13:54", "filteredCommits": [], "commitsDetails": [{"nameRev": "aa3e2cc01992a333c7a4da4a6276befed9a89ef5 tags/twelvemonkeys-3.3.2~5", "commitMessage": "#312, #313, #314 Fixed ClassCastException when rewriting compressed TIFF images.\n\n(cherry picked from commit 6ea1ea8)\n", "commitParents": ["b0108fe39bec799e51f77370ce523e898e06381b"], "spoonStatsSkippedReason": "", "commitHash": "aa3e2cc01992a333c7a4da4a6276befed9a89ef5", "authoredDateTime": "2017-01-18 18:44:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 18, "deletions": 9, "lines": 27, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/36-tiff-8-bit-gray-jpeg.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/51-tiff-24-bit-color-jpeg.tif"}, {"insertions": 141, "deletions": 0, "lines": 141, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/58-plexustiff-binary-ccitt-group4.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/17-tiff-binary-ccitt-group3.tif"}], "commitDateTime": "2017-02-02 21:06:07", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.ImageInfo"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteStreamMetadataDefaultII()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testRewrite()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteStreamMetadataDefaultMM()"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel)"}, {"UPD": 0, "TOT": 6, "MOV": 1, "INS": 4, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.initMeta(com.twelvemonkeys.imageio.metadata.Directory,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.exif.EXIFWriter,long)"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel,int)"}], "spoonFilePath": "TIFFImageWriter.java"}]}, {"nameRev": "6ea1ea891680eb548cdea1da2b5e3b2fc4e5588f tags/twelvemonkeys-3.4~92", "commitMessage": "#312, #313, #314 Fixed ClassCastException when rewriting compressed TIFF images.\n", "commitParents": ["762b59674b46fb88f471da6095063f1578dcb91e"], "spoonStatsSkippedReason": "", "commitHash": "6ea1ea891680eb548cdea1da2b5e3b2fc4e5588f", "authoredDateTime": "2017-01-18 18:44:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 18, "deletions": 9, "lines": 27, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/36-tiff-8-bit-gray-jpeg.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/51-tiff-24-bit-color-jpeg.tif"}, {"insertions": 108, "deletions": 0, "lines": 108, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/58-plexustiff-binary-ccitt-group4.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/pixtiff/17-tiff-binary-ccitt-group3.tif"}], "commitDateTime": "2017-01-18 18:44:05", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testRewrite()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.ImageInfo"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 1, "INS": 4, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.initMeta(com.twelvemonkeys.imageio.metadata.Directory,javax.imageio.ImageTypeSpecifier,javax.imageio.ImageWriteParam)"}, {"UPD": 0, "TOT": 1, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel)"}, {"UPD": 0, "TOT": 8, "MOV": 5, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.tiff.TIFFWriter,long)"}, {"UPD": 0, "TOT": 6, "MOV": 2, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.getPhotometricInterpretation(java.awt.image.ColorModel,int)"}], "spoonFilePath": "TIFFImageWriter.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/312", "ttf": 8.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Re-encoding a CCITT compressed TIFF may cause ClassCastException", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "In the case of re-encoding a CCITT compressed TIFF, with metadata from the original, the G3/G4 options may not be a long value as the writer expects, thus causing a ClassCastException.\r\n\r\nSee #310 for background and sample images.\r\n\r\nFull stack trace:\r\n\r\n    Exception in thread \"main\" java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.Long\r\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(TIFFImageWriter.java:578)\r\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(TIFFImageWriter.java:430)\r\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeToSequence(TIFFImageWriter.java:975)\r\n\r\nEasily fixed by changing the line in question to:\r\n\r\n    option = ((Number) entries.get(compression == TIFFExtension.COMPRESSION_CCITT_T4 ? TIFF.TAG_GROUP3OPTIONS : TIFF.TAG_GROUP4OPTIONS).getValue()).longValue();\r\n", "labels": ["Bug"]}, {"created": "2016-12-30 14:56:54", "commits": {"c181f74fb0ff377de151637b910bbeb2d50b8961": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "762b59674b46fb88f471da6095063f1578dcb91e": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "c0f66b5584774b184e5387c0be8e882b98f4f9ca": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "b0108fe39bec799e51f77370ce523e898e06381b": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "94d6ad1ef787e438c3c875390b155d4cc5c429a5": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.tiff.TIFFWriter,long)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeToSequence(javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeImageData(java.io.DataOutput,int,java.awt.image.RenderedImage,int,int[],int[])", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.resetMembers()", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createColorMap(java.awt.image.IndexColorModel)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.ListenerDelegate", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.endWriteSequence()", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeImageData(java.io.DataOutput,java.awt.image.RenderedImage,int,int[],int[])", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createColorMap(java.awt.image.IndexColorModel,int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.prepareWriteSequence(javax.imageio.metadata.IIOMetadata)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter"], "closed": "2017-02-02 21:02:54", "filteredCommits": ["c181f74fb0ff377de151637b910bbeb2d50b8961", "762b59674b46fb88f471da6095063f1578dcb91e", "94d6ad1ef787e438c3c875390b155d4cc5c429a5"], "commitsDetails": [{"nameRev": "94d6ad1ef787e438c3c875390b155d4cc5c429a5 tags/twelvemonkeys-3.4~87", "commitMessage": "#306 TIFF LZW write EOF issue\n", "commitParents": ["d57e4143c4fc7144606a44d9673cb56da4b9cd12"], "spoonStatsSkippedReason": "", "commitHash": "94d6ad1ef787e438c3c875390b155d4cc5c429a5", "authoredDateTime": "2017-01-19 16:10:54", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 40, "deletions": 1, "lines": 41, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2017-01-19 16:10:54", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 21, "MOV": 1, "INS": 20, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testRewrite()"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 4, "INS": 1, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)"}], "spoonFilePath": "TIFFImageWriter.java"}]}, {"nameRev": "762b59674b46fb88f471da6095063f1578dcb91e tags/twelvemonkeys-3.4~93", "commitMessage": "#306 TIFF LZW IndexColorModel issue + sequence index\n", "commitParents": ["10b8c11a8e362ea8e4d57c0226ed328eae98edc8"], "spoonStatsSkippedReason": "", "commitHash": "762b59674b46fb88f471da6095063f1578dcb91e", "authoredDateTime": "2017-01-18 18:08:20", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 95, "deletions": 35, "lines": 130, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 47, "deletions": 0, "lines": 47, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2017-01-18 18:08:20", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequenceProgress()"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createColorMap(java.awt.image.IndexColorModel)"}, {"UPD": 2, "TOT": 4, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter"}, {"UPD": 3, "TOT": 4, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.endWriteSequence()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeImageData(java.io.DataOutput,int,java.awt.image.RenderedImage,int,int[],int[])"}, {"UPD": 2, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.resetMembers()"}, {"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.tiff.TIFFWriter,long)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.ListenerDelegate"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeImageData(java.io.DataOutput,java.awt.image.RenderedImage,int,int[],int[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createColorMap(java.awt.image.IndexColorModel,int)"}, {"UPD": 4, "TOT": 5, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.prepareWriteSequence(javax.imageio.metadata.IIOMetadata)"}, {"UPD": 2, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeToSequence(javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"}, {"UPD": 0, "TOT": 18, "MOV": 5, "INS": 8, "DEL": 5, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)"}], "spoonFilePath": "TIFFImageWriter.java"}]}, {"nameRev": "b0108fe39bec799e51f77370ce523e898e06381b tags/twelvemonkeys-3.3.2~6", "commitMessage": "#306 TIFF LZW IndexColorModel issue + sequence index\n\n(cherry picked from commit 762b596)\n", "commitParents": ["3f6a27b75ef9215e09905263e3cbdef7e71969e9"], "spoonStatsSkippedReason": "", "commitHash": "b0108fe39bec799e51f77370ce523e898e06381b", "authoredDateTime": "2017-01-18 18:08:20", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 90, "deletions": 31, "lines": 121, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 47, "deletions": 0, "lines": 47, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2017-02-02 20:58:11", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteSequenceProgress()"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 6, "MOV": 0, "INS": 6, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writePage(int,javax.imageio.IIOImage,javax.imageio.ImageWriteParam,com.twelvemonkeys.imageio.metadata.exif.EXIFWriter,long)"}, {"UPD": 2, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter"}, {"UPD": 2, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.endWriteSequence()"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeImageData(java.io.DataOutput,int,java.awt.image.RenderedImage,int,int[],int[])"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.resetMembers()"}, {"UPD": 1, "TOT": 3, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createColorMap(java.awt.image.IndexColorModel)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.ListenerDelegate"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeImageData(java.io.DataOutput,java.awt.image.RenderedImage,int,int[],int[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createColorMap(java.awt.image.IndexColorModel,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.prepareWriteSequence(javax.imageio.metadata.IIOMetadata)"}, {"UPD": 1, "TOT": 2, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeToSequence(javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"}, {"UPD": 0, "TOT": 18, "MOV": 5, "INS": 8, "DEL": 5, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)"}], "spoonFilePath": "TIFFImageWriter.java"}]}, {"nameRev": "c0f66b5584774b184e5387c0be8e882b98f4f9ca tags/twelvemonkeys-3.3.2~2", "commitMessage": "#306 TIFF LZW write EOF issue\n\n(cherry picked from commit 94d6ad1)\n", "commitParents": ["69dcfe971357f1dfe25141cb8ddf822028a89f2e"], "spoonStatsSkippedReason": "", "commitHash": "c0f66b5584774b184e5387c0be8e882b98f4f9ca", "authoredDateTime": "2017-01-19 16:10:54", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 40, "deletions": 1, "lines": 41, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2017-02-02 21:11:30", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 21, "MOV": 1, "INS": 20, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testRewrite()"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 4, "INS": 1, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.createCompressorStream(java.awt.image.RenderedImage,javax.imageio.ImageWriteParam,java.util.Map)"}], "spoonFilePath": "TIFFImageWriter.java"}]}, {"nameRev": "c181f74fb0ff377de151637b910bbeb2d50b8961 tags/twelvemonkeys-3.3.2~1", "commitMessage": "#306 TIFF LZW write issue test case fix for 3.3 branch.\n", "commitParents": ["c0f66b5584774b184e5387c0be8e882b98f4f9ca"], "spoonStatsSkippedReason": "", "commitHash": "c181f74fb0ff377de151637b910bbeb2d50b8961", "authoredDateTime": "2017-01-18 18:08:20", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 5, "deletions": 5, "lines": 10, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2017-02-02 21:18:56", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "MOV": 0, "INS": 0, "DEL": 5, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testRewrite()"}], "spoonFilePath": "TIFFImageWriterTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/306", "ttf": 34.000277777777775, "gitStatsSummary": {"insertions": 96, "deletions": 36, "lines": 132, "gitFilesChange": 1}, "title": "Problems creating a TIFF using a custom color scheme and TYPE_BYTE_INDEXED BufferedImage", "statsSkippedReason": "", "user": "FelixA", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 14, "spoonMethodsChanged": 13, "TOT": 61, "MOV": 12, "INS": 26, "DEL": 9, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 2, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi Harald,\r\n\r\nI've been playing further around with your library. \r\nOne Thing I would like to do is reducing the Image size of an Image by limiting the Color Palette. \r\nA tif is actually being created, but the Colors and the Image itself is corrupted.\r\n\r\nFor that I'm using an IndexColorModel and create a new BufferedImage with the Type TYPE_BYTE_INDEXED as you can see here: \r\n\r\n```public static void reduceColorPalette(BufferedImage inputImage, File outputPath) {\r\n\t\tIndexColorModel cm = new IndexColorModel(3, 8,\r\n\r\n\t\t\t\t// RED GREEN1 GREEN2 BLUE WHITE BLACK\r\n\t\t\t\t// new byte[] { -100, 0, 0, 0, -1, 0 },\r\n\t\t\t\t// new byte[] { 0, -100, 60, 0, -1, 0 },\r\n\t\t\t\t// new byte[] { 0, 0, 0, -100, -1, 0 });\r\n\r\n\t\t\t\t// RED GREEN BLUE YELLOW \t\t\tDARKGRAY \tWHITE \tLIGHTGRAY \t\tBLACK\r\n\r\n\t\t\t\tnew byte[]{ (byte) 255, 0, 0,    (byte) 255,   (byte)64,    (byte) 255,  (byte) 192, (byte) 0 }, \r\n\t\t\t\tnew byte[]{ 0,(byte) 255, 0,     (byte) 255,   (byte)64,   (byte) 255,  (byte) 192, (byte) 0 },\r\n\t\t\t\tnew byte[]{ 0,  0,  (byte) 255,   0,          (byte) 64,   (byte) 255,  (byte) 192, (byte) 0 });\r\n\r\n\r\n\t\r\n\t\tBufferedImage img = new BufferedImage(inputImage.getWidth(), inputImage.getHeight(), BufferedImage.TYPE_BYTE_INDEXED, cm);\r\n\t\tGraphics2D g2 = img.createGraphics();\r\n\t\tg2.drawImage(inputImage, 0, 0, null);\r\n\t\tg2.dispose();\r\n\r\n\t\t// TIFUtils.writeBufferedImageToFile(outputPath, img, \"LZW\");\r\n\r\n\t\t// output\r\n\t\ttry\r\n\t\t{\r\n\r\n\t\t\tImageIO.write(img, \"png\", outputPath);\r\n\t\t}\r\n\t\tcatch (IOException e)\r\n\t\t{\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t}\r\n```\r\n\r\nWriting this out as a PNG works perfectly, but the custom tif writer seems to have Problems with this type of BufferedImage. The following is the code I use to write the TIFF to file:\r\n\r\n```public static boolean writeBufferedImageToFile(File outputFileName, Object inputImage, String targetCompressionType)\r\n\r\n\t{\r\n\t\tif (inputImage instanceof BufferedImage || inputImage instanceof PlanarImage || inputImage instanceof RenderedImage)\r\n\t\t{\r\n\r\n\t\t\tbuffer = new ByteArrayOutputStream();\r\n\r\n\t\t\tImageOutputStream stream = null;\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tstream = ImageIO.createImageOutputStream(buffer);\r\n\r\n\t\t\t\tTIFFImageWriterSpi imageWriterSPI = new TIFFImageWriterSpi();\r\n\r\n\t\t\t\tTIFFImageWriter writer = new TIFFImageWriter(imageWriterSPI);\r\n\r\n\t\t\t\twriter.setOutput(stream);\r\n\r\n\t\t\t\tout = ImageIO.createImageOutputStream(outputFileName);\r\n\r\n\t\t\t\twriter.setOutput(out);\r\n\r\n\t\t\t\twriter.prepareWriteSequence(null);\r\n\r\n\t\t\t\tTIFFImageWriteParam params = new TIFFImageWriteParam(Locale.GERMAN);\r\n\r\n\t\t\t\t// Sets Compression Mode. 2 is MODE_EXPLICIT which is needed to\r\n\t\t\t\t// pass the compression parameter.\r\n\t\t\t\tparams.setCompressionMode(2);\r\n\r\n\t\t\t\tparams.setCompressionType(targetCompressionType);\r\n\r\n\t\t\t\twriter.writeToSequence(new IIOImage((RenderedImage) inputImage, null, null), params);\r\n\r\n\t\t\t\tout.close();\r\n\r\n\t\t\t\tstream.close();\r\n\r\n\t\t\t\tbuffer.close();\r\n\r\n\t\t\t\twriter.dispose();\r\n\t\t\t}\r\n\t\t\tcatch (IOException e)\r\n\t\t\t{\r\n\t\t\t\tlogger.error(\"CRITICAL: Exception while writing the image\");\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n\t\t\t\t\tstream.close();\r\n\t\t\t\t}\r\n\t\t\t\tcatch (IOException e1)\r\n\t\t\t\t{\r\n\t\t\t\t\t// TODO Auto-generated catch block\r\n\t\t\t\t\te1.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlogger.error(String.format(\"Wrong image format %s\", inputImage.getClass()));\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n```\r\n\r\nWould be awesome if you'd have an Idea why using this model tifs cannot be created", "labels": ["Bug", "New feature", "Trouble-shooting"]}, {"created": "2016-11-17 10:49:19", "commits": {"e189b5e14f15fa983d0c47e308e74ff12dbfa72c": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "18705be7f6c961bafc6aaa59a5d71e42af7551e0": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.Application", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.initHeader()"], "closed": "2016-11-20 19:14:13", "filteredCommits": ["e189b5e14f15fa983d0c47e308e74ff12dbfa72c"], "commitsDetails": [{"nameRev": "e189b5e14f15fa983d0c47e308e74ff12dbfa72c tags/twelvemonkeys-3.3.1~2", "commitMessage": "#294 Fixed regression, reading JPEGs containing strange APPn markers without identifier string\n", "commitParents": ["f0316f7ec54ac7fe636826881f817ee6717b7932"], "spoonStatsSkippedReason": "", "commitHash": "e189b5e14f15fa983d0c47e308e74ff12dbfa72c", "authoredDateTime": "2016-11-20 20:11:22", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/app-marker-missing-null-term.jpg"}, {"insertions": 2, "deletions": 3, "lines": 5, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/Application.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2016-11-29 20:10:28", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.Application"}], "spoonFilePath": "Application.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.getTestData()"}], "spoonFilePath": "JPEGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.initHeader()"}], "spoonFilePath": "JPEGImageReader.java"}]}, {"nameRev": "18705be7f6c961bafc6aaa59a5d71e42af7551e0 tags/twelvemonkeys-3.4~105", "commitMessage": "#294 Fixed regression, reading JPEGs containing strange APPn markers without identifier string\n", "commitParents": ["8cac4ee792cfddf21712d617fee25ae11e4ae614"], "spoonStatsSkippedReason": "", "commitHash": "18705be7f6c961bafc6aaa59a5d71e42af7551e0", "authoredDateTime": "2016-11-20 20:11:22", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/app-marker-missing-null-term.jpg"}, {"insertions": 2, "deletions": 3, "lines": 5, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/Application.java"}, {"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2016-11-20 20:11:22", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.Application"}], "spoonFilePath": "Application.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.getTestData()"}], "spoonFilePath": "JPEGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.initHeader()"}], "spoonFilePath": "JPEGImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/294", "ttf": 3.000277777777778, "gitStatsSummary": {"insertions": 3, "deletions": 4, "lines": 7, "gitFilesChange": 2}, "title": "Cannot open some JPEGs", "statsSkippedReason": "", "user": "abhijeetmulugu", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 8, "MOV": 2, "INS": 4, "DEL": 1, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello, I get the following exception while opening some JPEG images\r\n\r\nException in thread \"main\" java.lang.IllegalArgumentException: identifier may not be blank\r\n\tat com.twelvemonkeys.lang.Validate.notEmpty(Validate.java:47)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.Application.<init>(Application.java:54)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.Application.read(Application.java:96)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.Segment.read(Segment.java:94)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.initHeader(JPEGImageReader.java:721)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getSOF(JPEGImageReader.java:784)\r\n\tat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:364)\r\n\tat javax.imageio.ImageIO.read(ImageIO.java:1448)\r\n\tat javax.imageio.ImageIO.read(ImageIO.java:1352)\r\n\tat gridfs.images.App.main(App.java:84)\r\n\r\nCan you fix this ? Thanks", "labels": ["Bug"]}, {"created": "2016-10-17 18:35:29", "commits": {"17eeda210e2478fedcb239c87e0a5cb700b8f603": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.bmp.BMPImageReader.readColorMap()"], "closed": "2016-10-17 18:37:01", "filteredCommits": ["17eeda210e2478fedcb239c87e0a5cb700b8f603"], "commitsDetails": [{"nameRev": "17eeda210e2478fedcb239c87e0a5cb700b8f603 tags/twelvemonkeys-3.3~6", "commitMessage": "#285: Fix for non-spec BMPs without palette.\n", "commitParents": ["b116b4b5a7f81746f3398288b8594d50d5d4bdf9"], "spoonStatsSkippedReason": "", "commitHash": "17eeda210e2478fedcb239c87e0a5cb700b8f603", "authoredDateTime": "2016-10-17 20:36:40", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-bmp/src/test/resources/bmp/24bitpalette.bmp"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "imageio/imageio-bmp/src/test/java/com/twelvemonkeys/imageio/plugins/bmp/BMPImageReaderTest.java"}, {"insertions": 7, "deletions": 5, "lines": 12, "filePath": "imageio/imageio-bmp/src/main/java/com/twelvemonkeys/imageio/plugins/bmp/BMPImageReader.java"}], "commitDateTime": "2016-10-17 20:36:40", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.bmp.BMPImageReaderTest.getTestData()"}], "spoonFilePath": "BMPImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 3, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.bmp.BMPImageReader.readColorMap()"}], "spoonFilePath": "BMPImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/285", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 5, "lines": 12, "gitFilesChange": 1}, "title": "BMPImageReader.getImageMetadata throws exception for files with incorrect header", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": ["imageio/imageio-bmp/src/main/java/com/twelvemonkeys/imageio/plugins/bmp"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 4, "MOV": 3, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "BMPImageReader.getImageMetadata() throws exception for certain non-spec BMPs that reports 24 bit palette, but don't actually contain palette data. \n\nSee http://stackoverflow.com/questions/39983471/bmp-filenot-correctly-read-by-android\n\nStack trace:\n\n```\njava.lang.IllegalArgumentException: Map size (0) must be >= 1\n    at java.awt.image.IndexColorModel.<init>(IndexColorModel.java:419)\n    at com.twelvemonkeys.imageio.plugins.bmp.BMPImageReader.readColorMap(BMPImageReader.java:170)\n    at com.twelvemonkeys.imageio.plugins.bmp.BMPImageReader.getImageMetadata(BMPImageReader.java:645)\n```\n", "labels": ["Bug"]}, {"created": "2016-09-21 13:39:01", "commits": {"d4afbee0f5ff0c2cc08446289671689eb3f62886": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(java.awt.image.Raster,java.awt.Rectangle,int,int,int,int,java.awt.image.WritableRaster,int,int,int,int,java.io.DataInput)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(java.awt.image.Raster,java.awt.Rectangle,int,int,int,int,int,java.awt.image.WritableRaster,int,int,int,int,java.io.DataInput)"], "closed": "2016-09-28 10:38:54", "filteredCommits": ["d4afbee0f5ff0c2cc08446289671689eb3f62886"], "commitsDetails": [{"nameRev": "d4afbee0f5ff0c2cc08446289671689eb3f62886 tags/twelvemonkeys-3.3~9", "commitMessage": "#282 TIFFImageReader now supports compressed planar data in strips/tiles.\n", "commitParents": ["288ad54c42a64795148cb13630ff9505c39ac9c6"], "spoonStatsSkippedReason": "", "commitHash": "d4afbee0f5ff0c2cc08446289671689eb3f62886", "authoredDateTime": "2016-09-28 12:37:47", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/planar-striped-lzw.tif"}, {"insertions": 53, "deletions": 48, "lines": 101, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2016-09-28 12:37:47", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.getTestData()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 21, "MOV": 17, "INS": 0, "DEL": 4, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(java.awt.image.Raster,java.awt.Rectangle,int,int,int,int,java.awt.image.WritableRaster,int,int,int,int,java.io.DataInput)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)"}, {"UPD": 0, "TOT": 14, "MOV": 10, "INS": 4, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(java.awt.image.Raster,java.awt.Rectangle,int,int,int,int,int,java.awt.image.WritableRaster,int,int,int,int,java.io.DataInput)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/282", "ttf": 6.000277777777778, "gitStatsSummary": {"insertions": 53, "deletions": 48, "lines": 101, "gitFilesChange": 1}, "title": "TIFFReader EOFException when reading LZW RGB image", "statsSkippedReason": "", "user": "Eurybiadan", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 4, "TOT": 38, "MOV": 28, "INS": 6, "DEL": 4, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi Harald,\n\nLong time no issue. Thanks for all your good work.\n\nI've run into an EOF exception when loading an LZW compressed RGB Tiff image, with stack trace:\n\n`java.io.EOFException\n    at com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(LittleEndianDataInputStream.java:426)\n    at com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(LittleEndianDataInputStream.java:396)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(TIFFImageReader.java:1485)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(TIFFImageReader.java:930)\n    at javax.imageio.ImageReader.read(ImageReader.java:939)\n`\n\nFrom what I can tell debugging it, it simply reads too much (hence the EOF), but appears to correctly detect the width/height of the image.\n\nI am using your newest 3.3-SNAPSHOT, which (I thought) had a fix already in it for LZW compression. Unfortunately, I may have found another bug.\n\nI've attached one of the tifs (naturally it won't allow me to upload the tif directly, so just change the extension as usual) that I can reliably reproduce this behavior with.\n\n![tiffreadereof](https://cloud.githubusercontent.com/assets/5322065/18713073/0a772850-7fdf-11e6-9a34-79475b0e2d1c.png)\n", "labels": ["Bug"]}, {"created": "2016-08-05 04:26:16", "commits": {"13bea2355045174aaf5a3de9069d9a24e5c7db7d": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGImage10MetadataCleaner.cleanMetadata(javax.imageio.metadata.IIOMetadata)"], "closed": "2016-08-09 09:49:00", "filteredCommits": ["13bea2355045174aaf5a3de9069d9a24e5c7db7d"], "commitsDetails": [{"nameRev": "13bea2355045174aaf5a3de9069d9a24e5c7db7d tags/twelvemonkeys-3.3~19", "commitMessage": "#276 Fix DHT inconsistency\n", "commitParents": ["c7208c2c97edba4f0c0d58438fba1700f28dc69b"], "spoonStatsSkippedReason": "", "commitHash": "13bea2355045174aaf5a3de9069d9a24e5c7db7d", "authoredDateTime": "2016-08-09 11:47:25", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/6dhtsegments.jpg"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/5dhtsegments.jpg"}, {"insertions": 96, "deletions": 0, "lines": 96, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImage10MetadataCleanerTest.java"}, {"insertions": 3, "deletions": 8, "lines": 11, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImage10MetadataCleaner.java"}], "commitDateTime": "2016-08-09 11:47:25", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImage10MetadataCleanerTest"}], "spoonFilePath": "JPEGImage10MetadataCleanerTest.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 17, "MOV": 9, "INS": 2, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImage10MetadataCleaner.cleanMetadata(javax.imageio.metadata.IIOMetadata)"}], "spoonFilePath": "JPEGImage10MetadataCleaner.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/276", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 3, "deletions": 8, "lines": 11, "gitFilesChange": 1}, "title": "JPEG Metadata Cleaner doesn't split DHT correctly", "statsSkippedReason": "", "user": "David-Keeffe", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 3, "spoonMethodsChanged": 1, "TOT": 17, "MOV": 9, "INS": 2, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "File JPEGImage10MetadataCleaner.java, Line 278.\n\nYou remove the dht child, but don't compensate for the dht list becoming shorter. This means that if the list is, say, 8 elements long, you only deal with 2 of them.\n\nThe band-aid is to decrement i when you do that delete/append, so that it continues to point to the next valid element.\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2016-07-28 21:38:06", "commits": {"44401d9a0dbc5863533215b38a2825a1f96239c8": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.svg.SVGImageReaderSpi.canDecode(javax.imageio.stream.ImageInputStream)", "com.twelvemonkeys.imageio.plugins.svg.SVGImageReaderSpi"], "closed": "2016-08-08 09:28:26", "filteredCommits": ["44401d9a0dbc5863533215b38a2825a1f96239c8"], "commitsDetails": [{"nameRev": "44401d9a0dbc5863533215b38a2825a1f96239c8 tags/twelvemonkeys-3.3~21", "commitMessage": "#275 Fix infinite loop if EOF before header done\n", "commitParents": ["c18893184b284202c92c8e4d326e997d9840271f"], "spoonStatsSkippedReason": "", "commitHash": "44401d9a0dbc5863533215b38a2825a1f96239c8", "authoredDateTime": "2016-08-08 11:27:12", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 9, "deletions": 6, "lines": 15, "filePath": "imageio/imageio-batik/src/main/java/com/twelvemonkeys/imageio/plugins/svg/SVGImageReaderSpi.java"}, {"insertions": 70, "deletions": 0, "lines": 70, "filePath": "imageio/imageio-batik/src/test/java/com/twelvemonkeys/imageio/plugins/svg/SVGImageReaderSpiTest.java"}], "commitDateTime": "2016-08-08 11:27:12", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 10, "MOV": 3, "INS": 4, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.svg.SVGImageReaderSpi.canDecode(javax.imageio.stream.ImageInputStream)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.svg.SVGImageReaderSpi"}], "spoonFilePath": "SVGImageReaderSpi.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.svg.SVGImageReaderSpiTest"}], "spoonFilePath": "SVGImageReaderSpiTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/275", "ttf": 10.000277777777777, "gitStatsSummary": {"insertions": 9, "deletions": 6, "lines": 15, "gitFilesChange": 1}, "title": "Infinite loop while getting ImageReaders", "statsSkippedReason": "", "user": "Ph3n1x", "changesInPackagesGIT": ["imageio/imageio-batik/src/main/java/com/twelvemonkeys/imageio/plugins/svg"], "spoonStatsSummary": {"UPD": 3, "spoonMethodsChanged": 2, "TOT": 11, "MOV": 3, "INS": 5, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I downloaded [this favicon](http://www.citrus.ua/img/favicon.ico) (which is a SVG, not an ICO) and loaded it into a byte[]. Then I am trying to get the ImageReaders like this\n\n```\ntry (ImageInputStream inputStream =\n                   ImageIO.createImageInputStream(new ByteArrayInputStream(imageBytes))) {\n    Iterator<ImageReader> iter = ImageIO.getImageReaders(inputStream));\n    // it never gets past \n}\n```\n\nThe method never returns and ends in an infinite loop in SVGImageReaderSpi.java in line 140\n\n```\nwhile (pInput.read() != '<') {\n    // Skip over, until next begin tag\n}\n```\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2016-07-20 15:38:15", "commits": {"6c9deb8768ab822ee228a1eee8e1b33113568ca9": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "f0316f7ec54ac7fe636826881f817ee6717b7932": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.DownsampledDQTReplacement.createMarkerFixedLength(int,int,javax.imageio.stream.ImageInputStream)"], "closed": "2016-11-23 19:41:44", "filteredCommits": ["6c9deb8768ab822ee228a1eee8e1b33113568ca9"], "commitsDetails": [{"nameRev": "6c9deb8768ab822ee228a1eee8e1b33113568ca9 tags/twelvemonkeys-3.4~103", "commitMessage": "#274 Fixed bug in 16 -> 8 bit downsampling of DQT, causing \"Bogus marker length\" IIOException\n", "commitParents": ["0b030dde52e6b7a5e051776aeafda14c36535608"], "spoonStatsSkippedReason": "", "commitHash": "6c9deb8768ab822ee228a1eee8e1b33113568ca9", "authoredDateTime": "2016-11-23 20:40:48", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 2, "lines": 3, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStream.java"}], "commitDateTime": "2016-11-23 20:40:48", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 4, "INS": 1, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.DownsampledDQTReplacement.createMarkerFixedLength(int,int,javax.imageio.stream.ImageInputStream)"}], "spoonFilePath": "JPEGSegmentImageInputStream.java"}]}, {"nameRev": "f0316f7ec54ac7fe636826881f817ee6717b7932 tags/twelvemonkeys-3.3.1~3", "commitMessage": "#274 Fixed bug in 16 -> 8 bit downsampling of DQT, causing \"Bogus marker length\" IIOException\n", "commitParents": ["654e1116054f3db5fbcbab46baa68f623ed508fe"], "spoonStatsSkippedReason": "", "commitHash": "f0316f7ec54ac7fe636826881f817ee6717b7932", "authoredDateTime": "2016-11-23 20:40:48", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 2, "lines": 3, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStream.java"}], "commitDateTime": "2016-11-29 20:09:42", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 4, "INS": 1, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.DownsampledDQTReplacement.createMarkerFixedLength(int,int,javax.imageio.stream.ImageInputStream)"}], "spoonFilePath": "JPEGSegmentImageInputStream.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/274", "ttf": 126.00027777777778, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "title": "Bogus marker length when reading JPEG image", "statsSkippedReason": "", "user": "tecywiz121", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 7, "MOV": 4, "INS": 1, "DEL": 2, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I get an exception when trying to open a specific JPEG image, and I am not entirely sure why. I suspect it has something to do with the metadata attached to it.\n\nHere's the image: [Metadata_BogusMarkerLength.jpg.tar.gz](https://github.com/haraldk/TwelveMonkeys/files/374081/Metadata_BogusMarkerLength.jpg.tar.gz)\n\nThe exception:\n\n```\nCaused by: javax.imageio.IIOException: Bogus marker length\n        at com.sun.imageio.plugins.jpeg.JPEGImageReader.readImageHeader(Native Method)\n        at com.sun.imageio.plugins.jpeg.JPEGImageReader.readNativeHeader(JPEGImageReader.java:609)\n        at com.sun.imageio.plugins.jpeg.JPEGImageReader.checkTablesOnly(JPEGImageReader.java:347)\n        at com.sun.imageio.plugins.jpeg.JPEGImageReader.gotoImage(JPEGImageReader.java:481)\n        at com.sun.imageio.plugins.jpeg.JPEGImageReader.readHeader(JPEGImageReader.java:602)\n        at com.sun.imageio.plugins.jpeg.JPEGImageReader.getRawImageType(JPEGImageReader.java:759)\n        at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getRawImageType(JPEGImageReader.java:272)\n        at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:343)\n        at javax.imageio.ImageReader.read(ImageReader.java:939)\n        ... 81 more\n```\n\nI get the following output from exiv2 (not sure if it's relevant):\n\n```\nError: Upper boundary of data for directory Panasonic, entry 0x00a7 is out of bounds: Offset = 0x00003086, size = 864, exceeds buffer size by 56 Bytes; truncating the entry\nError: Offset of directory Panasonic, entry 0x2003 is out of bounds: Offset = 0x000033e6; truncating the entry\nError: Offset of directory Panasonic, entry 0x8010 is out of bounds: Offset = 0x000033fa; truncating the entry\nError: XMP Toolkit error 203: Duplicate property or field node\nWarning: Failed to decode XMP metadata.\nFile name       : 11-905-4519-0-01.jpg\nFile size       : 63723 Bytes\nMIME type       : image/jpeg\nImage size      : 960 x 960\nCamera make     : Panasonic\nCamera model    : DMC-GF6\nImage timestamp : 2016:02:12 11:09:37\nImage number    : \nExposure time   : 1/15 s\nAperture        : F3.5\nExposure bias   : -233/100 EV\nFlash           : No, compulsory\nFlash bias      : 0\nFocal length    : 14.0 mm (35 mm equivalent: 28.0 mm)\nSubject distance: \nISO speed       : 400\nExposure mode   : Auto\nMetering mode   : Spot\nMacro mode      : Off\nImage quality   : High\nExif Resolution : 960 x 960\nWhite balance   : Auto\nThumbnail       : None\nCopyright       : \nExif comment    : \n```\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2016-07-07 21:29:52", "commits": {"b116b4b5a7f81746f3398288b8594d50d5d4bdf9": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.createDecompressorStream(int,int,int,java.io.InputStream)"], "closed": "2016-10-10 19:49:30", "filteredCommits": ["b116b4b5a7f81746f3398288b8594d50d5d4bdf9"], "commitsDetails": [{"nameRev": "b116b4b5a7f81746f3398288b8594d50d5d4bdf9 tags/twelvemonkeys-3.3~7", "commitMessage": "#272: Fix for LZW decoding issue caused by runs way longer than buffer.\n", "commitParents": ["afd8b28617d1eb03d375b4dbd4bbefc54265391d"], "spoonStatsSkippedReason": "", "commitHash": "b116b4b5a7f81746f3398288b8594d50d5d4bdf9", "authoredDateTime": "2016-10-10 21:46:39", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/lzw-colormap-iiobe.tif"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2016-10-10 21:46:39", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.getTestData()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.createDecompressorStream(int,int,int,java.io.InputStream)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/272", "ttf": 94.00027777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "LZWDecoder - IndexOutOfBoundsException when reading some files", "statsSkippedReason": "", "user": "balamuru", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When attempting to read and write certain grayscale tiffs, the following happens\n1. The resulting image is always corrupted\n2. Sometimes, an IndexOutOfBoundsException exception is raised when the LZWDecoder is is invoked via a call to com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read . This doesn't always happen. I needed to run the test class a few times to see the exception.\n\nSome files don't have this issue, others do . See the code and test files for details\n\nThanks\n\n[test_and_data.zip](https://github.com/haraldk/TwelveMonkeys/files/353090/test_and_data.zip)\n\nException details\n`Exception in thread \"main\" java.lang.IndexOutOfBoundsException\n    at java.nio.Buffer.checkIndex(Buffer.java:532)\n    at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:172)\n    at com.twelvemonkeys.imageio.plugins.tiff.LZWDecoder$LZWString.writeTo(LZWDecoder.java:330)\n    at com.twelvemonkeys.imageio.plugins.tiff.LZWDecoder.decode(LZWDecoder.java:129)\n    at com.twelvemonkeys.io.enc.DecoderStream.fill(DecoderStream.java:178)\n    at com.twelvemonkeys.io.enc.DecoderStream.read(DecoderStream.java:122)\n    at com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(LittleEndianDataInputStream.java:423)\n    at com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(LittleEndianDataInputStream.java:396)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(TIFFImageReader.java:1417)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(TIFFImageReader.java:931)\n    at javax.imageio.ImageIO.read(ImageIO.java:1448)\n    at javax.imageio.ImageIO.read(ImageIO.java:1308)\n    at ImagingIssue.main(ImagingIssue.java:24)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)`\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2016-06-28 11:48:41", "commits": {"054499b78ae8d27e8fd5ce49017ec31f0da8ca70": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "b0eb668ed4ec37d64363276b3924b6f53de7b66d": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readImageAsRasterAndReplaceColorProfile(int,javax.imageio.ImageReadParam,com.twelvemonkeys.imageio.plugins.jpeg.SOFSegment,com.twelvemonkeys.imageio.plugins.jpeg.JPEGColorSpace,java.awt.color.ICC_Profile)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(int,javax.imageio.ImageReadParam)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readICCProfileSafe(java.io.InputStream,boolean)"], "closed": "2016-06-28 16:20:46", "filteredCommits": ["054499b78ae8d27e8fd5ce49017ec31f0da8ca70", "b0eb668ed4ec37d64363276b3924b6f53de7b66d"], "commitsDetails": [{"nameRev": "054499b78ae8d27e8fd5ce49017ec31f0da8ca70 tags/twelvemonkeys-3.3~29", "commitMessage": "#269: Hopefully fix CI build again. :-)\n", "commitParents": ["b0eb668ed4ec37d64363276b3924b6f53de7b66d"], "spoonStatsSkippedReason": "", "commitHash": "054499b78ae8d27e8fd5ce49017ec31f0da8ca70", "authoredDateTime": "2016-06-28 18:30:30", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 6, "deletions": 1, "lines": 7, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2016-06-28 18:30:30", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadCMYKAsCMYKSameRGBasRGB()"}], "spoonFilePath": "JPEGImageReaderTest.java"}]}, {"nameRev": "b0eb668ed4ec37d64363276b3924b6f53de7b66d tags/twelvemonkeys-3.3~30", "commitMessage": "#269: Fixed an issue with CMYK colors as CMYK being off.\n", "commitParents": ["458ef92af52bc5e42a754cf675f5b42fd73ea100"], "spoonStatsSkippedReason": "", "commitHash": "b0eb668ed4ec37d64363276b3924b6f53de7b66d", "authoredDateTime": "2016-06-28 18:18:15", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 7, "deletions": 3, "lines": 10, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 72, "deletions": 3, "lines": 75, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2016-06-28 18:18:15", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadCMYKAsCMYKSameRGBasRGB()"}, {"UPD": 0, "TOT": 8, "MOV": 0, "INS": 8, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.assertRGBEquals(java.lang.String,int,int,int)"}, {"UPD": 0, "TOT": 4, "MOV": 0, "INS": 1, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.assertRGBEquals(int,int)"}], "spoonFilePath": "JPEGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readImageAsRasterAndReplaceColorProfile(int,javax.imageio.ImageReadParam,com.twelvemonkeys.imageio.plugins.jpeg.SOFSegment,com.twelvemonkeys.imageio.plugins.jpeg.JPEGColorSpace,java.awt.color.ICC_Profile)"}, {"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(int,javax.imageio.ImageReadParam)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readICCProfileSafe(java.io.InputStream,boolean)"}], "spoonFilePath": "JPEGImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/269", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 7, "deletions": 3, "lines": 10, "gitFilesChange": 1}, "title": "Issue with loading CMYK jpeg as BufferedImage with CMYK color model", "statsSkippedReason": "", "user": "the21st", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 3, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi!\n\nFirst off, thanks so much for your work on this library and for your immense help on StackOverflow. It made my life a lot easier!\n\nI am using your `JPEGImageReader` to load a [CMYK JPEG image with an ICC profile](https://dl.dropboxusercontent.com/u/73774/cmyk.jpg). When I read it with the default setup, I get a `BufferedImage` with an sRGB color model, and its RGB values correspond to what I get in Photoshop. But my CMYK gamut is not a strict subset of sRGB, so I thought I wanted to keep the image in CMYK color space, so that no clipping to sRGB would occur.\n\nIn the tests, I found a method that does this: `JPEGImageReaderTest.testReadCMYKAsCMYK`. But the problem I encountered was that the CMYK `BufferedImage` generated this way returns different RGB values than the RGB image (using `getRGB`). If I'm understanding this correctly, it should return the same values \u2013 the only difference being whether the conversion ICC CMYK -> sRGB is done during loading or when calling `getRGB`.\n\nI debugged the code to see what might be the issue, and it seems the problem is this line in `JPEGImageReader`:\n\n``` java\nconvert = new ColorConvertOp(intendedCS, image.getColorModel().getColorSpace(), null);\n```\n\nthe intended CS is the ICC CMYK that's loaded from the image, but the `image`'s color space is different from that and as a result, the image is converted from one CMYK to another, but this conversion is redundant (and incorrect, in the end) if I understand it correctly.\n\nHere's my Scala code that fails with the image I linked above, I can convert it to Java if that's an issue https://gist.github.com/the21st/7db788d0417dbff63d6c4ba6a80b5dc8\n", "labels": ["Bug"]}, {"created": "2016-06-28 11:09:29", "commits": {"5ab3fdd1d3731a6ff5fb30831112ea8157cee6a9": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "610f9bec9fd1fab0e20460c2697ebd42eae229cf": {"commitGHEventType": "closed", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)"], "closed": "2016-10-20 14:43:55", "filteredCommits": ["610f9bec9fd1fab0e20460c2697ebd42eae229cf"], "commitsDetails": [{"nameRev": "5ab3fdd1d3731a6ff5fb30831112ea8157cee6a9 tags/twelvemonkeys-3.3~5", "commitMessage": "Merge pull request #286 from Schmidor/TMI268\n\nFix #268: Reading with source region for JPEG-in-TIFF", "commitParents": ["17eeda210e2478fedcb239c87e0a5cb700b8f603", "610f9bec9fd1fab0e20460c2697ebd42eae229cf"], "spoonStatsSkippedReason": "", "commitHash": "5ab3fdd1d3731a6ff5fb30831112ea8157cee6a9", "authoredDateTime": "2016-10-20 16:43:54", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 1, "lines": 1, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 5, "deletions": 4, "lines": 9, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2016-10-20 16:43:54", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadJPEGRasterCaseWithSrcRegion()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 22, "MOV": 3, "INS": 10, "DEL": 9, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)"}], "spoonFilePath": "TIFFImageReader.java"}]}, {"nameRev": "610f9bec9fd1fab0e20460c2697ebd42eae229cf tags/twelvemonkeys-3.3~5^2", "commitMessage": "Fix #268: Reading with source region for JPEG-in-TIFF\n", "commitParents": ["17eeda210e2478fedcb239c87e0a5cb700b8f603"], "spoonStatsSkippedReason": "", "commitHash": "610f9bec9fd1fab0e20460c2697ebd42eae229cf", "authoredDateTime": "2016-10-19 15:54:11", "commitGHEventType": "closed", "commitGitStats": [{"insertions": 0, "deletions": 1, "lines": 1, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 5, "deletions": 4, "lines": 9, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2016-10-19 16:00:04", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadJPEGRasterCaseWithSrcRegion()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 22, "MOV": 3, "INS": 10, "DEL": 9, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/268", "ttf": 114.00027777777778, "gitStatsSummary": {"insertions": 5, "deletions": 4, "lines": 9, "gitFilesChange": 1}, "title": "TIFFImageReader: Reading with source region is broken for JPEG-in-TIFF raster case", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 22, "MOV": 3, "INS": 10, "DEL": 9, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "See the `testReadJPEGRasterCaseWithSrcRegion` method in `TIFFImageReaderTest`.\n## \n\nHarald K\n", "labels": ["Bug"]}, {"created": "2016-06-23 11:59:38", "commits": {"f4b61820acb6c5001ba316476021e90c05d594d1": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createPacked(java.awt.color.ColorSpace,int,int,int,int,int,boolean)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)", "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createPackedGrayscale(java.awt.color.ColorSpace,int,int)"], "closed": "2016-06-23 20:26:53", "filteredCommits": ["f4b61820acb6c5001ba316476021e90c05d594d1"], "commitsDetails": [{"nameRev": "f4b61820acb6c5001ba316476021e90c05d594d1 tags/twelvemonkeys-3.3~34", "commitMessage": "#267: Reads monochrome images with gray ICC profile.\n", "commitParents": ["9a6096664ec9557f5c06be9f90fd1704c9a5fee5"], "spoonStatsSkippedReason": "", "commitHash": "f4b61820acb6c5001ba316476021e90c05d594d1", "authoredDateTime": "2016-06-23 16:15:22", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 37, "deletions": 15, "lines": 52, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/util/ImageTypeSpecifiers.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/scan-mono-iccgray.tif"}, {"insertions": 24, "deletions": 0, "lines": 24, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/util/ImageTypeSpecifiersTest.java"}, {"insertions": 5, "deletions": 2, "lines": 7, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2016-06-23 16:15:22", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreatePackedGrayscale4()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreatePackedGrayscale1()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiersTest.testCreatePackedGrayscale2()"}], "spoonFilePath": "ImageTypeSpecifiersTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.getTestData()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 7, "TOT": 16, "MOV": 3, "INS": 3, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createPacked(java.awt.color.ColorSpace,int,int,int,int,int,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageTypeSpecifiers.createPackedGrayscale(java.awt.color.ColorSpace,int,int)"}], "spoonFilePath": "ImageTypeSpecifiers.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 4, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/267", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 42, "deletions": 17, "lines": 59, "gitFilesChange": 2}, "title": "TIFFImageReader: Monochrome image with grayscale profile", "statsSkippedReason": "", "user": "Schmidor", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff", "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/util"], "spoonStatsSummary": {"UPD": 7, "spoonMethodsChanged": 3, "TOT": 24, "MOV": 7, "INS": 6, "DEL": 4, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The image contains 1bit/pixel monochrome data and also a grayscale profile and fails to read, because the BufferedImage tries to use 8bits/pixel.\n[scan_17062016.zip](https://github.com/haraldk/TwelveMonkeys/files/329888/scan_17062016.zip)\n\nThe profile causes TIFFImageReader.getRawImageType to use ImageTypeSpecifiers.createInterleaved for creating the ImageTypeSpecifier, which I believe cannot handle 1/2/4bit width pixels and only uses the dataType.\n", "labels": ["Bug"]}, {"created": "2016-06-22 17:28:55", "commits": {"9a6096664ec9557f5c06be9f90fd1704c9a5fee5": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.streamInit()"], "closed": "2016-06-23 11:33:11", "filteredCommits": ["9a6096664ec9557f5c06be9f90fd1704c9a5fee5"], "commitsDetails": [{"nameRev": "9a6096664ec9557f5c06be9f90fd1704c9a5fee5 tags/twelvemonkeys-3.3~35", "commitMessage": "#266: Fix NPE for empty streams.\n", "commitParents": ["c2aa7e31505d03f085f159f967b5f083d7a57702"], "spoonStatsSkippedReason": "", "commitHash": "9a6096664ec9557f5c06be9f90fd1704c9a5fee5", "authoredDateTime": "2016-06-23 13:26:58", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 18, "deletions": 0, "lines": 18, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStreamTest.java"}, {"insertions": 10, "deletions": 5, "lines": 15, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStream.java"}], "commitDateTime": "2016-06-23 13:26:58", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 8, "MOV": 6, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.streamInit()"}], "spoonFilePath": "JPEGSegmentImageInputStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStreamTest.testStreamEmptyArray()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStreamTest.testStreamEmpty()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStreamTest.testStreamNonJPEGArray()"}], "spoonFilePath": "JPEGSegmentImageInputStreamTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/266", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 10, "deletions": 5, "lines": 15, "gitFilesChange": 1}, "title": "NPE when reading empty file", "statsSkippedReason": "", "user": "jpiperventuretech", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 8, "MOV": 6, "INS": 1, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "If you try to read an empty file you'll get a NullPointerException in JPEGSegmentImageInputStream#read when it tries to access #segment. I believe the problem is that since #repositionAsNecessary swallows the EOFException there is no way for #read to detect the problem. Just removing the catch isn't sufficient though since that causes the JPEGSegmentImageInputStreamTest.testEOFExceptionInSegmentParsingShouldNotCreateBadState test to fail. Having #read explicitly check if #segment is null and throw EOFException might be appropriate.\n\nI've attached a test case for JPEGSegmentImageInputStreamTest that exercises this bug.\n\n[JPEGSegmentImageInputStreamTest.txt](https://github.com/haraldk/TwelveMonkeys/files/328396/JPEGSegmentImageInputStreamTest.txt)\n", "labels": ["Bug"]}, {"created": "2016-06-01 15:54:51", "commits": {"e9388e55ec1480052ea7b1d6521f7b8149d61751": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "closed": "2016-06-02 09:28:58", "filteredCommits": ["e9388e55ec1480052ea7b1d6521f7b8149d61751"], "commitsDetails": [{"nameRev": "e9388e55ec1480052ea7b1d6521f7b8149d61751 tags/twelvemonkeys-3.3~39", "commitMessage": "#260 ProviderInfo fix\n", "commitParents": ["8dd84930be0742fb359af876e34cd3cf87cebe54"], "spoonStatsSkippedReason": "tooManyFiles", "commitHash": "e9388e55ec1480052ea7b1d6521f7b8149d61751", "authoredDateTime": "2016-06-02 11:24:57", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-icns/src/main/java/com/twelvemonkeys/imageio/plugins/icns/ICNSProviderInfo.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-iff/src/test/java/com/twelvemonkeys/imageio/plugins/iff/IFFProviderInfoTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-pcx/src/test/java/com/twelvemonkeys/imageio/plugins/dcx/DCXProviderInfoTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-pict/src/test/java/com/twelvemonkeys/imageio/plugins/pict/PICTProviderInfoTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-psd/src/test/java/com/twelvemonkeys/imageio/plugins/psd/PSDProviderInfoTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-tga/src/test/java/com/twelvemonkeys/imageio/plugins/tga/TGAProviderInfoTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "imageio/imageio-thumbsdb/src/main/java/com/twelvemonkeys/imageio/plugins/thumbsdb/ThumbsDBProviderInfo.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-hdr/src/test/java/com/twelvemonkeys/imageio/plugins/hdr/HDRProviderInfoTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-bmp/src/test/java/com/twelvemonkeys/imageio/plugins/bmp/ICOProviderInfoTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-bmp/src/test/java/com/twelvemonkeys/imageio/plugins/bmp/CURProviderInfoTest.java"}, {"insertions": 38, "deletions": 0, "lines": 38, "filePath": "imageio/imageio-pnm/src/test/java/com/twelvemonkeys/imageio/plugins/pnm/PNMImageWriterSpiTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-pcx/src/test/java/com/twelvemonkeys/imageio/plugins/pcx/PCXProviderInfoTest.java"}, {"insertions": 21, "deletions": 0, "lines": 21, "filePath": "imageio/imageio-pnm/src/test/java/com/twelvemonkeys/imageio/plugins/pnm/PNMProviderInfoTest.java"}, {"insertions": 160, "deletions": 0, "lines": 160, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/spi/ReaderWriterProviderInfoTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFProviderInfo.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGProviderInfoTest.java"}, {"insertions": 38, "deletions": 0, "lines": 38, "filePath": "imageio/imageio-pnm/src/test/java/com/twelvemonkeys/imageio/plugins/pnm/PNMImageReaderSpiTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-batik/src/test/java/com/twelvemonkeys/imageio/plugins/svg/SVGProviderInfoTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-icns/src/test/java/com/twelvemonkeys/imageio/plugins/icns/ICNSProviderInfoTest.java"}, {"insertions": 38, "deletions": 0, "lines": 38, "filePath": "imageio/imageio-pnm/src/test/java/com/twelvemonkeys/imageio/plugins/pnm/PAMImageWriterSpiTest.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/spi/ReaderWriterProviderInfo.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFProviderInfoTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-bmp/src/test/java/com/twelvemonkeys/imageio/plugins/bmp/BMPProviderInfoTest.java"}, {"insertions": 43, "deletions": 0, "lines": 43, "filePath": "imageio/imageio-thumbsdb/src/test/java/com/twelvemonkeys/imageio/plugins/thumbsdb/ThumbsDBProviderInfoTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-sgi/src/test/java/com/twelvemonkeys/imageio/plugins/sgi/SGIProviderInfoTest.java"}, {"insertions": 19, "deletions": 0, "lines": 19, "filePath": "imageio/imageio-batik/src/test/java/com/twelvemonkeys/imageio/plugins/wmf/WMFProviderInfoTest.java"}], "commitDateTime": "2016-06-02 11:24:57", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/260", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 10, "deletions": 10, "lines": 20, "gitFilesChange": 4}, "title": "Typo in TIFFProviderInfo - class package should read as com.twelvemkonkeys.imageio.plugins.tiff.TIFFImageWriterSpi", "statsSkippedReason": "", "user": "balamuru", "changesInPackagesGIT": ["imageio/imageio-icns/src/main/java/com/twelvemonkeys/imageio/plugins/icns", "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff", "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/spi", "imageio/imageio-thumbsdb/src/main/java/com/twelvemonkeys/imageio/plugins/thumbsdb"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "final class TIFFProviderInfo extends ReaderWriterProviderInfo {\n    protected TIFFProviderInfo() {\n        super(\n                TIFFProviderInfo.class,\n                new String[] {\"tiff\", \"TIFF\", \"tif\", \"TIF\"},\n                new String[] {\"tif\", \"tiff\"},\n                new String[] {\n                        \"image/tiff\", \"image/x-tiff\"\n                },\n                \"com.twelvemkonkeys.imageio.plugins.tiff.TIFFImageReader\",\n                new String[] {\"com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderSpi\"},\n                \"com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter\",\n                new String[] {\"com.twelvemkonkeys.imageio.plugins.**tif**.TIFFImageWriterSpi\"}, =========> should read as \"tiff\", not \"tif\" to correctly resolve the class \n                false, TIFFMedataFormat.SUN_NATIVE_STREAM_METADATA_FORMAT_NAME, \"TODO\", null, null,\n                true, TIFFMedataFormat.SUN_NATIVE_IMAGE_METADATA_FORMAT_NAME, \"com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata\", null, null\n        );\n    }\n}\n", "labels": ["Bug"]}, {"created": "2016-06-01 04:03:12", "commits": {"3d68b61f724909a380f36f4a6d551d0faace7b8f": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFProviderInfo", "com.twelvemonkeys.imageio.plugins.tga.TGAProviderInfo", "com.twelvemonkeys.imageio.plugins.psd.PSDProviderInfo", "com.twelvemonkeys.imageio.plugins.pict.PICTProviderInfo", "com.twelvemonkeys.imageio.plugins.pcx.PCXProviderInfo", "com.twelvemonkeys.imageio.plugins.sgi.SGIProviderInfo", "com.twelvemonkeys.imageio.plugins.pnm.PNMImageReaderSpi", "com.twelvemonkeys.imageio.plugins.dcx.DCXProviderInfo"], "closed": "2016-06-01 08:14:00", "filteredCommits": ["3d68b61f724909a380f36f4a6d551d0faace7b8f"], "commitsDetails": [{"nameRev": "3d68b61f724909a380f36f4a6d551d0faace7b8f tags/twelvemonkeys-3.3~44", "commitMessage": "#258 SPI typos\n", "commitParents": ["c29f8953376f35fb310cc155fa1395c69bee06e1"], "spoonStatsSkippedReason": "", "commitHash": "3d68b61f724909a380f36f4a6d551d0faace7b8f", "authoredDateTime": "2016-06-01 10:12:29", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDProviderInfo.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFProviderInfo.java"}, {"insertions": 3, "deletions": 3, "lines": 6, "filePath": "imageio/imageio-pnm/src/main/java/com/twelvemonkeys/imageio/plugins/pnm/PNMImageReaderSpi.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-pcx/src/main/java/com/twelvemonkeys/imageio/plugins/pcx/PCXProviderInfo.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-pcx/src/main/java/com/twelvemonkeys/imageio/plugins/dcx/DCXProviderInfo.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict/PICTProviderInfo.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-sgi/src/main/java/com/twelvemonkeys/imageio/plugins/sgi/SGIProviderInfo.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-tga/src/main/java/com/twelvemonkeys/imageio/plugins/tga/TGAProviderInfo.java"}], "commitDateTime": "2016-06-01 10:12:29", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pcx.PCXProviderInfo"}], "spoonFilePath": "PCXProviderInfo.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.dcx.DCXProviderInfo"}], "spoonFilePath": "DCXProviderInfo.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDProviderInfo"}], "spoonFilePath": "PSDProviderInfo.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tga.TGAProviderInfo"}], "spoonFilePath": "TGAProviderInfo.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFProviderInfo"}], "spoonFilePath": "TIFFProviderInfo.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.sgi.SGIProviderInfo"}], "spoonFilePath": "SGIProviderInfo.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTProviderInfo"}], "spoonFilePath": "PICTProviderInfo.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pnm.PNMImageReaderSpi"}], "spoonFilePath": "PNMImageReaderSpi.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/258", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 15, "deletions": 15, "lines": 30, "gitFilesChange": 8}, "title": "Typo in provider info, spis etc  : \"twelvemkonkeys\"", "statsSkippedReason": "", "user": "balamuru", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff", "imageio/imageio-pcx/src/main/java/com/twelvemonkeys/imageio/plugins/pcx", "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd", "imageio/imageio-pcx/src/main/java/com/twelvemonkeys/imageio/plugins/dcx", "imageio/imageio-pict/src/main/java/com/twelvemonkeys/imageio/plugins/pict", "imageio/imageio-pnm/src/main/java/com/twelvemonkeys/imageio/plugins/pnm", "imageio/imageio-sgi/src/main/java/com/twelvemonkeys/imageio/plugins/sgi", "imageio/imageio-tga/src/main/java/com/twelvemonkeys/imageio/plugins/tga"], "spoonStatsSummary": {"UPD": 14, "spoonMethodsChanged": 8, "TOT": 14, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 8}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "These typos affect the instantiation of writers from the associated readers. There are several instantances of the typo (search URL :  https://github.com/haraldk/TwelveMonkeys/search?utf8=%E2%9C%93&q=twelvemkonkeys&type=Code )\n\neg.\n\n``` java\nprotected TIFFProviderInfo() {\n        super(\n                TIFFProviderInfo.class,\n                new String[] {\"tiff\", \"TIFF\", \"tif\", \"TIF\"},\n                new String[] {\"tif\", \"tiff\"},\n                new String[] {\n                        \"image/tiff\", \"image/x-tiff\"\n                },\n                \"com.twelvemkonkeys.imageio.plugins.tiff.TIFFImageReader\", ================> typo\n                new String[] {\"com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderSpi\"},\n                \"com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter\",\n                new String[] {\"com.twelvemkonkeys.imageio.plugins.tif.TIFFImageWriterSpi\"}, ========> typo\n                false, TIFFMedataFormat.SUN_NATIVE_STREAM_METADATA_FORMAT_NAME, \"TODO\", null, null,\n                true, TIFFMedataFormat.SUN_NATIVE_IMAGE_METADATA_FORMAT_NAME, \"com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata\", null, null\n        );\n    }\n```\n", "labels": ["Bug"]}, {"created": "2016-05-31 13:02:03", "commits": {"04a39158e54278d6ec14f90f9037ba80e29ca91b": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "closed": "2016-07-01 17:37:51", "filteredCommits": [], "commitsDetails": [{"nameRev": "04a39158e54278d6ec14f90f9037ba80e29ca91b tags/twelvemonkeys-3.3~23", "commitMessage": "#257, #229: Fixed LZW writing for < 8 bit, fixed StripByteCounts for uncompressed < 8 bit, disabled Predictor for < 8 bit.\nBonus rework of sequence writing and restored writing of uncompressed data for less fseeking.\n", "commitParents": ["6673bb353632209c5a3135880493d8368e7ba4aa"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "04a39158e54278d6ec14f90f9037ba80e29ca91b", "authoredDateTime": "2016-07-01 19:32:35", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/util/ImageReaderAbstractTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/a33.tif"}, {"insertions": 122, "deletions": 101, "lines": 223, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 458, "deletions": 49, "lines": 507, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2016-07-01 19:32:35", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/257", "ttf": 31.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "TiffImageWriter: Unreadable LZW", "statsSkippedReason": "", "user": "Schmidor", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "A read/write with the attached LZW compressed TIFF produces an unreadable image:\n\n```\n    @Test\n    public void testReadWriteReadLZW() throws IOException{\n        ImageInputStream input = ImageIO.createImageInputStream(getClass().getResource(\"/tiff/a33.tif\"));\n        ImageReader reader = ImageIO.getImageReaders(input).next();\n        reader.setInput(input);\n\n        BufferedImage original = reader.read(0);\n        IIOMetadata metadata = reader.getImageMetadata(0);\n        input.close();\n        reader.dispose();\n\n        ImageWriter writer = createImageWriter();\n        ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n        ImageOutputStream output = ImageIO.createImageOutputStream(buffer);\n        writer.setOutput(output);\n        writer.write(new IIOImage(original, null, metadata));\n        output.close();\n        writer.dispose();\n\n        ImageInputStream input2 = ImageIO.createImageInputStream(new ByteArrayInputStream(buffer.toByteArray()));\n        ImageReader reader2 = ImageIO.getImageReaders(input2).next();\n        reader2.setInput(input2);\n        reader2.read(0);\n    }\n```\n\n```\njava.io.EOFException: Unexpected end of stream\n    at com.twelvemonkeys.imageio.plugins.tiff.HorizontalDeDifferencingStream.fetch(HorizontalDeDifferencingStream.java:95)\n```\n\n![a33](https://cloud.githubusercontent.com/assets/10960818/15674949/e0867930-273f-11e6-836d-10cb1887adf2.png)\n", "labels": ["Bug"]}, {"created": "2016-05-23 19:25:55", "commits": {"b129117ee922bc2b3e1f90808f1bc7101b3cc6dd": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.getStandardChromaNode()", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.getSamplesPerPixelWithFallback()", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.getStandardDataNode()"], "closed": "2016-05-25 08:57:18", "filteredCommits": ["b129117ee922bc2b3e1f90808f1bc7101b3cc6dd"], "commitsDetails": [{"nameRev": "b129117ee922bc2b3e1f90808f1bc7101b3cc6dd tags/twelvemonkeys-3.3~47", "commitMessage": "#254 Fix NPE reading TIFF Metadata when BitsPerSample not set\n", "commitParents": ["3d3615998238c37a256c805d17c42c784da2585c"], "spoonStatsSkippedReason": "", "commitHash": "b129117ee922bc2b3e1f90808f1bc7101b3cc6dd", "authoredDateTime": "2016-05-25 10:50:42", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 13, "deletions": 13, "lines": 26, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageMetadata.java"}, {"insertions": 63, "deletions": 3, "lines": 66, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageMetadataTest.java"}], "commitDateTime": "2016-05-25 10:50:42", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 7, "MOV": 5, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.getStandardChromaNode()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.getSamplesPerPixelWithFallback()"}, {"UPD": 3, "TOT": 6, "MOV": 1, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.getStandardDataNode()"}], "spoonFilePath": "TIFFImageMetadata.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadataTest.testStandardChromaSamplesPerPixel()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadataTest.testStandardChromaSamplesPerPixelFallbackBitsPerSample()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadataTest.testStandardNodeSamplesPerPixelFallbackDefault()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadataTest.testStandardDataBitsPerSampleFallbackDefault()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadataTest.testStandardChromaSamplesPerPixelFallbackDefault()"}], "spoonFilePath": "TIFFImageMetadataTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/254", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 13, "deletions": 13, "lines": 26, "gitFilesChange": 1}, "title": "NPE reading TIFF Metadata when BitsPerSample not set", "statsSkippedReason": "", "user": "myronu", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 3, "spoonMethodsChanged": 3, "TOT": 14, "MOV": 6, "INS": 2, "DEL": 3, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "In our code we read the size and DPI of TIFF images using code like this:\n\n```\nimageMetadata = reader.getImageMetadata(iis); // iis is an ImageInputStream\nElement root = (Element) imageMetadata.getAsTree(\"javax_imageio_1.0\");\n\n```\n\nThis code will fail with this NPE if the image doesn't have Bits/Sample (258) or Samples/Pixel (277) set. It does not fail using the reader from jai_imageio but instead just returns Bits/Sample = 1.\n\n```\njava.lang.NullPointerException\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageMetadata.getStandardChromaNode(TIFFImageMetadata.java:330)\n    at javax.imageio.metadata.IIOMetadata.getStandardTree(Unknown Source)\n    at com.twelvemonkeys.imageio.AbstractMetadata.getAsTree(AbstractMetadata.java:75)\n\n```\n\nI can provide a sample image privately, but don't want to post it here. tiffinfo reports:\nTIFF Directory at offset 0x8 (8)\n  Subfile Type: (0 = 0x0)\n  Image Width: 14400 Image Length: 11100\n  Resolution: 600, 600 pixels/inch\n  Compression Scheme: CCITT Group 4\n  Photometric Interpretation: min-is-white\n  Orientation: row 0 top, col 0 lhs\n  Rows/Strip: 11100\n  Planar Configuration: single image plane\n", "labels": ["Bug"]}, {"created": "2016-05-23 07:11:54", "commits": {"458ef92af52bc5e42a754cf675f5b42fd73ea100": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.convertYCbCr2RGB(short[],short[],double[],int)", "com.twelvemonkeys.imageio.color.YCbCrConverter.convertYCbCr2RGB(byte[],byte[],double[],int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)", "com.twelvemonkeys.imageio.color.YCbCrConverter.convertYCbCr2RGB(byte[],byte[],double[],double[],int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.needsCSConversion(int,javax.imageio.metadata.IIOMetadata)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.convertYCbCr2RGB(short[],short[],double[],double[],int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getValueAsDoubleArray(int,java.lang.String,boolean,int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,byte[])", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,short[])"], "closed": "2016-06-28 10:59:53", "filteredCommits": ["458ef92af52bc5e42a754cf675f5b42fd73ea100"], "commitsDetails": [{"nameRev": "458ef92af52bc5e42a754cf675f5b42fd73ea100 tags/twelvemonkeys-3.3~31", "commitMessage": "#253: Fix for non-subsampled YCbCr encoded JPEG-in-TIFF being decoded as RGB.\n", "commitParents": ["788b11e4fa1c5bba14e44a1f1c9d8b40a83dc5a8"], "spoonStatsSkippedReason": "", "commitHash": "458ef92af52bc5e42a754cf675f5b42fd73ea100", "authoredDateTime": "2016-06-28 12:54:25", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 54, "deletions": 0, "lines": 54, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/xerox-jpeg-ycbcr-weird-coefficients.tif"}, {"insertions": 167, "deletions": 45, "lines": 212, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}, {"insertions": 19, "deletions": 6, "lines": 25, "filePath": "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color/YCbCrConverter.java"}], "commitDateTime": "2016-06-28 12:54:25", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 4, "TOT": 7, "MOV": 3, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.YCbCrConverter.convertYCbCr2RGB(byte[],byte[],double[],int)"}, {"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.color.YCbCrConverter.convertYCbCr2RGB(byte[],byte[],double[],double[],int)"}], "spoonFilePath": "YCbCrConverter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadJPEGRasterCaseWithSrcRegion()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadYCbCrJPEGAssumedRGB()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.convertYCbCr2RGB(short[],short[],double[],double[],int)"}, {"UPD": 9, "TOT": 15, "MOV": 5, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.convertYCbCr2RGB(short[],short[],double[],int)"}, {"UPD": 3, "TOT": 32, "MOV": 10, "INS": 14, "DEL": 5, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.needsCSConversion(int,javax.imageio.metadata.IIOMetadata)"}, {"UPD": 7, "TOT": 24, "MOV": 6, "INS": 7, "DEL": 4, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,short[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getValueAsDoubleArray(int,java.lang.String,boolean,int)"}, {"UPD": 3, "TOT": 15, "MOV": 6, "INS": 5, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,byte[])"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/253", "ttf": 36.000277777777775, "gitStatsSummary": {"insertions": 186, "deletions": 51, "lines": 237, "gitFilesChange": 2}, "title": "TIFFImageReader: JPEG/YCbCr doc from Xerox scanner get inverted colors", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff", "imageio/imageio-core/src/main/java/com/twelvemonkeys/imageio/color"], "spoonStatsSummary": {"UPD": 26, "spoonMethodsChanged": 10, "TOT": 100, "MOV": 30, "INS": 33, "DEL": 11, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "From Miguel Hern\u00e1ndez: \n\n> I've found an issue: It happens that when I fed my app with certain tiff files (produced by a xerox scanner) the BufferedImage I obtain using the plugin differs from the image in the tiff in color information.\n> \n> I attached two files in this mail:\n> - test.tif (tif file produced by the scanner)\n> - read_by_imageio.png (a BufferedImage image generated out of the tiff \n>   file and immediately written to a png file without any processing)\n> \n> I'd would really appreciate your advice in how to solve the issue. If you give me some hits I think I could try to fix it myself and thus contribute to such a valuable piece of software.\n> \n> Thanks in advance and best regards from Ecuador,\n> Miguel\n\nWhat I found so far, this seems like a classic example of the JPEGImageReader not converting YCbCr to RGB. If we do this manually, the file looks like it does in Preview. Need to debug further, to figure out _why_ the conversion isn't applied as it should.\n\nThe TIFF container also contains some custom YCbCr coefficients, using those for the conversion does not produce the expected colors. Need to look into the conversion, to verify it is correct.\n\nAttachments: [xerox-tiff.zip](https://github.com/haraldk/TwelveMonkeys/files/276958/xerox-tiff.zip)\n## \n\nHarald K\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2016-05-20 12:45:05", "commits": {"77bbc066e358949af66b074856f967ffa8be6e66": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-05-25 16:43:27", "filteredCommits": ["77bbc066e358949af66b074856f967ffa8be6e66"], "commitsDetails": [{"nameRev": "77bbc066e358949af66b074856f967ffa8be6e66 tags/twelvemonkeys-3.3~46", "commitMessage": "#249 Remove unnecessary part of test that breaks on 8u60+\n", "commitParents": ["b129117ee922bc2b3e1f90808f1bc7101b3cc6dd"], "spoonStatsSkippedReason": "", "commitHash": "77bbc066e358949af66b074856f967ffa8be6e66", "authoredDateTime": "2016-05-25 18:40:29", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 5, "lines": 5, "filePath": "common/common-image/src/test/java/com/twelvemonkeys/image/ImageUtilTestCase.java"}], "commitDateTime": "2016-05-25 18:40:29", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.image.ImageUtilTestCase.testToBufferedImage()"}], "spoonFilePath": "ImageUtilTestCase.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/249", "ttf": 5.000277777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "ImageUtilTestCase fails with 8u60+", "statsSkippedReason": "", "user": "ankon", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When building master (723632addfdb9fa637f29de56bb8a24c94fd4136) with Oracle JDK 1.8.0_60 and higher on Linux/x64:\n\n```\nRunning com.twelvemonkeys.image.ImageUtilTestCase\nTests run: 10, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.842 sec <<< FAILURE! - in com.twelvemonkeys.image.ImageUtilTestCase\ntestToBufferedImage(com.twelvemonkeys.image.ImageUtilTestCase)  Time elapsed: 0.007 sec  <<< FAILURE!\njava.lang.AssertionError: \n    at org.junit.Assert.fail(Assert.java:91)\n    at org.junit.Assert.assertTrue(Assert.java:43)\n    at org.junit.Assert.assertTrue(Assert.java:54)\n    at com.twelvemonkeys.image.ImageUtilTestCase.testToBufferedImage(ImageUtilTestCase.java:108)\n```\n\nThe build passes with 8u51.\n", "labels": ["Bug", "New feature"]}, {"created": "2016-05-19 19:50:50", "commits": {"00c1285fe0885ce4fc617f6c2ae23d6a04b9e9d6": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "a29960e8ee2724e17116831bd9a440873475dacb": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "closed": "2016-06-30 12:19:58", "filteredCommits": ["00c1285fe0885ce4fc617f6c2ae23d6a04b9e9d6"], "commitsDetails": [{"nameRev": "00c1285fe0885ce4fc617f6c2ae23d6a04b9e9d6 tags/twelvemonkeys-3.3~26^2", "commitMessage": "#248 PSDImageReader now uses correct band indices for grayscale + alpha layers.\n", "commitParents": ["478ed62cd1af993cb84215f9fa55557476a48aff"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "00c1285fe0885ce4fc617f6c2ae23d6a04b9e9d6", "authoredDateTime": "2016-06-30 14:17:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 15, "deletions": 1, "lines": 16, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDImageReader.java"}, {"insertions": 186, "deletions": 124, "lines": 310, "filePath": "imageio/imageio-psd/src/test/java/com/twelvemonkeys/imageio/plugins/psd/PSDImageReaderTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-psd/src/test/resources/psd/test_grayscale_boxes.psd"}], "commitDateTime": "2016-06-30 14:17:00", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}, {"nameRev": "a29960e8ee2724e17116831bd9a440873475dacb tags/twelvemonkeys-3.3~27", "commitMessage": "#248 PSDImageReader now uses correct band indices for grayscale + alpha layers.\n", "commitParents": ["478ed62cd1af993cb84215f9fa55557476a48aff"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "a29960e8ee2724e17116831bd9a440873475dacb", "authoredDateTime": "2016-06-30 14:17:00", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 16, "deletions": 2, "lines": 18, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDImageReader.java"}, {"insertions": 186, "deletions": 124, "lines": 310, "filePath": "imageio/imageio-psd/src/test/java/com/twelvemonkeys/imageio/plugins/psd/PSDImageReaderTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-psd/src/test/resources/psd/test_grayscale_boxes.psd"}], "commitDateTime": "2016-06-30 14:21:30", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/248", "ttf": 41.000277777777775, "gitStatsSummary": {"insertions": 15, "deletions": 1, "lines": 16, "gitFilesChange": 1}, "title": "PSDReader loads wrong band indicies in grayscale psd files with backgrounds.", "statsSkippedReason": "", "user": "Eurybiadan", "changesInPackagesGIT": ["imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd"], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The band index creation section (PSDImageReader: line 1116) is this:\n\n```\nfor (int i = 0, indicesLength = indices.length; i < indicesLength; i++) {\n     indices[i] = indicesLength - i;\n}\n\n```\n\nAnd when a layer from grayscale psd with a background is loaded, it fills in the index array as follows:\n\n```\nindicies[0] = 2;\nindicies[1] = 1;\n```\n\nWhich is incorrect, because the bands (in this case) should be loaded sequentially (0,1).\n", "labels": ["Bug"]}, {"created": "2016-05-17 02:15:50", "commits": {"723632addfdb9fa637f29de56bb8a24c94fd4136": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-05-20 09:56:36", "filteredCommits": [], "commitsDetails": [{"nameRev": "723632addfdb9fa637f29de56bb8a24c94fd4136 tags/twelvemonkeys-3.3~50", "commitMessage": "Merge pull request #247 from Eurybiadan/master\n\nFix for issue #244", "commitParents": ["70bb5de4dece5a7e1371f75410f286881f490404", "21ff12219a95adb234aaa78dc98c0e73cc434a89"], "spoonStatsSkippedReason": "", "commitHash": "723632addfdb9fa637f29de56bb8a24c94fd4136", "authoredDateTime": "2016-05-18 19:55:19", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDImageReader.java"}], "commitDateTime": "2016-05-18 19:55:19", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 6, "TOT": 6, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.getRawImageTypeForCompositeLayer()"}], "spoonFilePath": "PSDImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/244", "ttf": 3.000277777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "PSDReader incorrectly uses grayscale ICCProfile with a grayscale background.", "statsSkippedReason": "", "user": "Eurybiadan", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Hello again,\n\nI've found a (rather specific bug) that I see in my application of the PSDReader. I'm pretty sure know exactly what the problem is, but I'm not sure how you want to approach fixing it (or I'd just submit a pull request...).\n\nAs the title suggests, the reader does not correctly use the ICC Profile of Grayscale PSD files that have a grayscale background. When a background is enabled (visible) in the attached psd (renamed as a png, of course), the intensities are washed out, consistent with a basic linear grayscale colorspace, instead of the more typical Gamma 2.2 or Dot Gain 20%.\n\nThis appears to be because the number of channels changes when there is a background. When the background is invisible (transparent), the file contains 2 channels. When the background is visible, the file contains 1 channel. This causes a variety of issues that causes the simple \"ImageIO.read\" to fail (i.e. load the wrong bands).\n\nI attempted to get around this bug by creating my own ImageReadParam, but it appears that even if the data gets loaded correctly, the destination color model I choose with my ImageReadParam is not being applied (PSDImageReader:line 496) for some reason, which still causes the layers to appear washed out.\n\nAs far as fixes go, I see two options:\n\n1) Honor every aspect of the ImageReadParam that is submitted, down to the color model, and don't convert after the fact.\n2) Change lines 174 and 180 of PSDImageReader to be consistent with the other channel/bit levels, ex: `return ImageTypeSpecifiers.createBanded(cs, new int[] {0}, new int[] {0}, DataBuffer.TYPE_BYTE, false, false);`\n\nI have workarounds like forcing the grayscale image into a more \"typical\" curve via LUTs (ala gamma 2.2 or Dot Gain 20%), but it would be nice if I didn't have to detect if the user has a visible background (and all the handling code that entails).\n\nRespectfully,\n\nRFC\n\n![itty_bitty](https://cloud.githubusercontent.com/assets/5322065/15309015/e07a6b8a-1bb0-11e6-94c6-e079de4efe9d.png)\n", "labels": ["Bug"]}, {"created": "2016-05-09 09:35:47", "user": "THausherr", "body": "I am unable to read the file from #237 after saving it as a TIF:\n\n```\n        BufferedImage bim = ImageIO.read(new File(\"XXXX\\\\badccittstream.tif\"));\n        ImageIO.write(bim, \"tif\", new File(\"XXX\\\\badccittstream-saved.tif\"));\n        ImageIO.read(new File(\"XXXX\\\\badccittstream-saved.tif\"));\n```\n\n[badccittstream.zip](https://github.com/haraldk/TwelveMonkeys/files/254628/badccittstream.zip)\n\n```\nException in thread \"main\" java.io.EOFException\n    at javax.imageio.stream.ImageInputStreamImpl.readFully(ImageInputStreamImpl.java:353)\n    at javax.imageio.stream.ImageInputStreamImpl.readFully(ImageInputStreamImpl.java:361)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readValue(EXIFReader.java:328)\n    at com.twelvemonkeys.image io.metadata.exif.EXIFReader.readValueAt(EXIFReader.java:287)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readEntry(EXIFReader.java:277)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:109)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:133)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.read(EXIFReader.java:87)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readMetadata(TIFFImageReader.java:171)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readIFD(TIFFImageReader.java:252)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(TIFFImageReader.java:715)\n    at javax.imageio.ImageIO.read(ImageIO.java:1448)\n    at javax.imageio.ImageIO.read(ImageIO.java:1308)\n```\n\nThe saved file cannot be displayed with IrfanView too.\n", "closed": "2016-07-01 17:39:32", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/241", "ttf": 53.000277777777775, "commits": {}, "labels": ["Bug"], "title": "TIF: read after save fails with EOFException"}, {"created": "2016-05-05 08:55:04", "commits": {"c373223ca34833f4689aa42a86f7744b07b14417": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-05-09 09:25:52", "filteredCommits": [], "commitsDetails": [{"nameRev": "c373223ca34833f4689aa42a86f7744b07b14417 tags/twelvemonkeys-3.3~53", "commitMessage": "Merge pull request #240 from Schmidor/TMI237\n\nTMI #237: Fix for CCITT images with more b/w changes than columns", "commitParents": ["e0434a1dcb919243fb914fced56f25d094b4e290", "fa0341f30237effe523e9905e672d709ffe9c6bd"], "spoonStatsSkippedReason": "", "commitHash": "c373223ca34833f4689aa42a86f7744b07b14417", "authoredDateTime": "2016-05-09 09:51:42", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 18, "deletions": 4, "lines": 22, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/CCITTFaxDecoderStreamTest.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/CCITTFaxDecoderStream.java"}], "commitDateTime": "2016-05-09 09:51:42", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream"}], "spoonFilePath": "CCITTFaxDecoderStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStreamTest.testMoreChangesThanColumns()"}], "spoonFilePath": "CCITTFaxDecoderStreamTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/237", "ttf": 4.000277777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "ArrayIndexOutOfBoundsException when reading G4 compressed TIFF file", "statsSkippedReason": "", "user": "THausherr", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "```\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 8\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.decode2D(CCITTFaxDecoderStream.java:207)\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.decodeRowType6(CCITTFaxDecoderStream.java:264)\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.decodeRow(CCITTFaxDecoderStream.java:276)\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.fetch(CCITTFaxDecoderStream.java:111)\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.read(CCITTFaxDecoderStream.java:427)\n    at java.io.DataInputStream.readFully(DataInputStream.java:195)\n    at java.io.DataInputStream.readFully(DataInputStream.java:169)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(TIFFImageReader.java:1386)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(TIFFImageReader.java:900)\n    at javax.imageio.ImageIO.read(ImageIO.java:1448)\n    at javax.imageio.ImageIO.read(ImageIO.java:1352)\n\n```\n\n[badccittstream.zip](https://github.com/haraldk/TwelveMonkeys/files/250130/badccittstream.zip)\n\n(For me: the file is from PDFBOX-2188, `Root/Pages/Kids/[2]/Resources/Pattern/P2/Resources/XObject/Im1` , raw stream converted to TIF file using JavaApplication41createTIFF2 )\n\nThe TIFF file displays with IrfanView, and reads with java 7.\n\nThe problem itself appeared in our current decoder too (which is an early version of the sun decoder), as can be seen in \nhttps://issues.apache.org/jira/browse/PDFBOX-2187\n\nlater versions of the sun decoder increased two arrays by 1, which surpprisingly would also solve the problem for you, in CCITTFaxDecoderStream, change\n\n```\n        this.changesReferenceRow = new int[columns];\n        this.changesCurrentRow = new int[columns];\n```\n\nto\n\n```\n        this.changesReferenceRow = new int[columns+1];\n        this.changesCurrentRow = new int[columns+1];\n```\n", "labels": ["Bug"]}, {"created": "2016-04-20 09:24:04", "user": "xiexed", "body": "Hello. [JPEGImageReader.java#L929](https://github.com/haraldk/TwelveMonkeys/blob/master/imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java#L929) at this moment does not support reading **raw** `Raster` data. Because the `readRaster` method always delegates to system reader.\n\nThis is actual for me in view of Lossless JPEG support (pull request #215), but maybe it also should be supported in other codecs.\n\nAt this moment I've fixed it this way:\n\n``` java\n    @Override\n    public Raster readRaster(int imageIndex, ImageReadParam param) throws IOException {\n\n        if(getSOF().marker == JPEG.SOF3){\n            JPEGLosslessDecoder decoder = new JPEGLosslessDecoder(getBytes((ImageInputStream) this.getInput()));\n            int[][] decoded = decoder.decode();\n            switch(decoder.getPrecision())\n            {\n                case 8: {\n                    DataBufferByte buff = new DataBufferByte(decoded[0].length, 1);\n                    for (int i = 0; i < decoded[0].length; i++) {\n                        buff.getData()[i] = (byte) decoded[0][i];\n                    }\n                    return Raster.createRaster(new BandedSampleModel(DataBuffer.TYPE_BYTE, decoder.getDimX(), decoder.getDimY(), 1),\n                            buff, null);\n                }\n                case 16: {\n                    DataBufferUShort buff = new DataBufferUShort(decoded[0].length, 1);\n                    for (int i = 0; i < decoded[0].length; i++) {\n                        buff.getData()[i] = (short) decoded[0][i];\n                    }\n                    return Raster.createRaster(new BandedSampleModel(DataBuffer.TYPE_USHORT, decoder.getDimX(), decoder.getDimY(), 1),\n                            buff, null);\n                }\n                default:\n                    throw new IOException(\"JPEG Lossless with \" + decoder.getPrecision() + \" bit precision and 1 component cannot be decoded\");\n            }\n\n        }\n\n        return delegate.readRaster(imageIndex, param);\n    }\n```\n\nThis works for me (after applying #215 of course), but I am not experienced in internals of Java imaging, so maybe there is a more convenient way. And also, possibly this code better should be putted into ongoing [JPEGLosslessDecoderWrapper](https://github.com/HermannKroll/TwelveMonkeys/blob/94a018f/imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/lossless/JPEGLosslessDecoderWrapper.java) class of pull request #215\n\nThanks\n", "closed": "2016-09-09 12:11:18", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/234", "ttf": 142.00027777777777, "commits": {}, "labels": ["Bug", "New feature"], "title": "Raw Lossles Raster reading support for JPEGImageReader"}, {"created": "2016-03-23 10:15:51", "commits": {"047884e3d9e1b30516c79b147ead763303dc9bcb": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2016-04-21 12:37:32", "filteredCommits": [], "commitsDetails": [{"nameRev": "047884e3d9e1b30516c79b147ead763303dc9bcb tags/twelvemonkeys-3.3~58", "commitMessage": "#232: Cleanup after merge of #225\n", "commitParents": ["2cec177c6debadbc62e10264176edc6327554160"], "spoonStatsSkippedReason": "", "commitHash": "047884e3d9e1b30516c79b147ead763303dc9bcb", "authoredDateTime": "2016-04-21 14:05:45", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 32, "deletions": 3, "lines": 35, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/CCITTFaxDecoderStreamTest.java"}, {"insertions": 45, "deletions": 46, "lines": 91, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/CCITTFaxDecoderStream.java"}, {"insertions": 29, "deletions": 30, "lines": 59, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/CCITTFaxEncoderStreamTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/CCITTFaxEncoderStream.java"}], "commitDateTime": "2016-04-21 14:05:45", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 6, "MOV": 0, "INS": 2, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.read(byte[],int,int)"}, {"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.read()"}], "spoonFilePath": "CCITTFaxDecoderStream.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStreamTest.init()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStreamTest"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStreamTest.testDecodeMissingRows()"}], "spoonFilePath": "CCITTFaxDecoderStreamTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxEncoderStreamTest.testReencodeImages()"}, {"UPD": 0, "TOT": 5, "MOV": 2, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxEncoderStreamTest.testStreamEncodeDecode(int,int,long)"}, {"UPD": 4, "TOT": 25, "MOV": 20, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxEncoderStreamTest.testImage(java.net.URL)"}], "spoonFilePath": "CCITTFaxEncoderStreamTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxEncoderStream"}], "spoonFilePath": "CCITTFaxEncoderStream.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/232", "ttf": 29.00027777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "TIFF EOFException", "statsSkippedReason": "", "user": "simonsteiner1984", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Exception in thread \"main\" java.io.EOFException\n    at com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(LittleEndianDataInputStream.java:426)\n[CS1D2F.tif.zip](https://github.com/haraldk/TwelveMonkeys/files/185757/CS1D2F.tif.zip)\n", "labels": ["Bug"]}, {"created": "2016-02-23 13:42:08", "commits": {"04a39158e54278d6ec14f90f9037ba80e29ca91b": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "closed": "2016-07-01 17:38:33", "filteredCommits": [], "commitsDetails": [{"nameRev": "04a39158e54278d6ec14f90f9037ba80e29ca91b tags/twelvemonkeys-3.3~23", "commitMessage": "#257, #229: Fixed LZW writing for < 8 bit, fixed StripByteCounts for uncompressed < 8 bit, disabled Predictor for < 8 bit.\nBonus rework of sequence writing and restored writing of uncompressed data for less fseeking.\n", "commitParents": ["6673bb353632209c5a3135880493d8368e7ba4aa"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "04a39158e54278d6ec14f90f9037ba80e29ca91b", "authoredDateTime": "2016-07-01 19:32:35", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/util/ImageReaderAbstractTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/a33.tif"}, {"insertions": 122, "deletions": 101, "lines": 223, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 458, "deletions": 49, "lines": 507, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}], "commitDateTime": "2016-07-01 19:32:35", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/229", "ttf": 129.00027777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "TIFFImageWriter writes uncompressed files with incorrect \"StripByteCounts\" field", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "The TIFFImageWriter does not correctly calculate `StripByteCounts` for uncompressed TIFFs (the default) if the bits per sample is not 8. Most tools will just ignore the value (as in the \"Warning: Bogus StripByteCounts field\") and compute it correctly anyway if the data is uncompressed, but it does cause problems for certain tools on the Windows platform.\n\nSee #226 for background & discussion.\n", "labels": ["Bug"]}, {"created": "2016-02-23 13:39:04", "commits": {"c18893184b284202c92c8e4d326e997d9840271f": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeImageData(java.io.DataOutput,java.awt.image.RenderedImage,int,int[],int[])"], "closed": "2016-07-07 13:28:12", "filteredCommits": ["c18893184b284202c92c8e4d326e997d9840271f"], "commitsDetails": [{"nameRev": "c18893184b284202c92c8e4d326e997d9840271f tags/twelvemonkeys-3.3~22", "commitMessage": "#228: TIFFImageWriter now correctly writes images with sample model translation.\n", "commitParents": ["04a39158e54278d6ec14f90f9037ba80e29ca91b"], "spoonStatsSkippedReason": "", "commitHash": "c18893184b284202c92c8e4d326e997d9840271f", "authoredDateTime": "2016-07-07 15:27:08", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 9, "deletions": 4, "lines": 13, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/util/ImageReaderAbstractTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-psd/src/test/java/com/twelvemonkeys/imageio/plugins/psd/PSDImageReaderTest.java"}, {"insertions": 56, "deletions": 11, "lines": 67, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriterTest.java"}, {"insertions": 76, "deletions": 33, "lines": 109, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageWriter.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2016-07-07 15:27:08", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 4, "TOT": 68, "MOV": 39, "INS": 18, "DEL": 7, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriter.writeImageData(java.io.DataOutput,java.awt.image.RenderedImage,int,int[],int[])"}], "spoonFilePath": "TIFFImageWriter.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 7, "MOV": 3, "INS": 0, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReaderTest.testGrayAlphaLayers()"}], "spoonFilePath": "PSDImageReaderTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testReadWriteRead24BitLZW()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.assertImageEquals(java.lang.String,java.awt.image.BufferedImage,java.awt.image.BufferedImage,int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.getTestData()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testReadWriteRead1BitNone()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testReadWriteRead24BitNone()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testWriteCropped()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testReadWriteRead1BitDeflate()"}, {"UPD": 1, "TOT": 2, "MOV": 1, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageWriterTest.testReadWriteRead24BitDeflate()"}], "spoonFilePath": "TIFFImageWriterTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadCMYKAsCMYKSameRGBasRGB()"}], "spoonFilePath": "JPEGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "MOV": 4, "INS": 1, "DEL": 4, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageReaderAbstractTest.assertRGBEquals(java.lang.String,int,int,int)"}], "spoonFilePath": "ImageReaderAbstractTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/228", "ttf": 134.00027777777777, "gitStatsSummary": {"insertions": 76, "deletions": 33, "lines": 109, "gitFilesChange": 1}, "title": "TIFFImageWriter does not correctly write images with \"sampleModelTranslate\"", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 4, "spoonMethodsChanged": 1, "TOT": 68, "MOV": 39, "INS": 18, "DEL": 7, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "TIFFImageWriter does not correctly write images with \"sampleModelTranslate\" (ie. as returned by `BufferedImage.getSubimage(...)`). \n\nThe writer is accessing the pixel data directly without taking the offset and the original pixel stride into account, and as a result, the written image looked skewed (or in other words, just completely messed up).\n\nSee #226 for background & discussion.\n", "labels": ["Bug"]}, {"created": "2016-02-08 17:07:19", "commits": {"a1de9ff4489636aacf1fe5889e0b7fab9f4f0ef7": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)"], "closed": "2016-02-11 15:57:30", "filteredCommits": ["a1de9ff4489636aacf1fe5889e0b7fab9f4f0ef7"], "commitsDetails": [{"nameRev": "a1de9ff4489636aacf1fe5889e0b7fab9f4f0ef7 tags/twelvemonkeys-3.3~62", "commitMessage": "#220 PlanarConfiguration now default to 1 (Chunky) according to the TIFF 6.0 spec.\n", "commitParents": ["eeeb22666cfb24b16815195e6d8a6607ed66336c"], "spoonStatsSkippedReason": "", "commitHash": "a1de9ff4489636aacf1fe5889e0b7fab9f4f0ef7", "authoredDateTime": "2016-02-11 16:49:50", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2016-02-11 16:49:50", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/220", "ttf": 2.000277777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "Incorrect default for PlanarConfiguration in TIFFImageReader", "statsSkippedReason": "", "user": "leolux", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "I like to combine two tiff files into one. But the result image contains unwanted glitches. The issue only occurs when the tiff file that should be added has been written by TwelvekMonkeys before. In the opposite the issue does not occur when both tiffs have not been written by TwelvekMonkeys previously. So combining the two images is possible without glitches but only when the source files are \"untouched\".\n\nI have created a reproducer for this issue: https://github.com/leolux/tmonkeys-issue-01\n", "labels": ["Bug"]}, {"created": "2016-01-28 13:09:58", "commits": {"34eb084d246d4d3a9bc84859326d4784b734b569": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getCCITTOptions(int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.clipRowToRect(java.awt.image.Raster,java.awt.Rectangle,int[],int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(java.awt.image.Raster,java.awt.Rectangle,int,int,int,int,int,java.awt.image.WritableRaster,int,int,int,int,java.io.DataInput)", "com.twelvemonkeys.imageio.plugins.tga.TGAImageReader.readRowByte(java.io.DataInput,int,java.awt.Rectangle,int,int,int,byte[],java.awt.image.WritableRaster,java.awt.image.Raster,int)", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.createDecompressorStream(int,int,int,java.io.InputStream)"], "closed": "2016-11-02 18:13:39", "filteredCommits": ["34eb084d246d4d3a9bc84859326d4784b734b569"], "commitsDetails": [{"nameRev": "34eb084d246d4d3a9bc84859326d4784b734b569 tags/twelvemonkeys-3.3~3", "commitMessage": "#212 TIFF subsampling fix\n", "commitParents": ["3f6bc722bc8d8e37bccf25373a3efeacb5a3bd5c"], "spoonStatsSkippedReason": "", "commitHash": "34eb084d246d4d3a9bc84859326d4784b734b569", "authoredDateTime": "2016-11-02 19:06:12", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 48, "deletions": 11, "lines": 59, "filePath": "imageio/imageio-core/src/test/java/com/twelvemonkeys/imageio/util/ImageReaderAbstractTest.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "imageio/imageio-bmp/src/test/java/com/twelvemonkeys/imageio/plugins/bmp/ICOImageReaderTest.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "imageio/imageio-batik/src/test/java/com/twelvemonkeys/imageio/plugins/wmf/WMFImageReaderTest.java"}, {"insertions": 70, "deletions": 1, "lines": 71, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 56, "deletions": 23, "lines": 79, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "imageio/imageio-batik/src/test/java/com/twelvemonkeys/imageio/plugins/svg/SVGImageReaderTest.java"}, {"insertions": 4, "deletions": 2, "lines": 6, "filePath": "imageio/imageio-bmp/src/main/java/com/twelvemonkeys/imageio/plugins/bmp/BMPImageReader.java"}, {"insertions": 8, "deletions": 6, "lines": 14, "filePath": "imageio/imageio-pict/src/test/java/com/twelvemonkeys/imageio/plugins/pict/PICTImageReaderTest.java"}, {"insertions": 4, "deletions": 3, "lines": 7, "filePath": "imageio/imageio-tga/src/main/java/com/twelvemonkeys/imageio/plugins/tga/TGAImageReader.java"}, {"insertions": 55, "deletions": 4, "lines": 59, "filePath": "imageio/imageio-bmp/src/test/java/com/twelvemonkeys/imageio/plugins/bmp/BMPImageReaderTest.java"}, {"insertions": 7, "deletions": 0, "lines": 7, "filePath": "imageio/imageio-bmp/src/test/java/com/twelvemonkeys/imageio/plugins/bmp/CURImageReaderTest.java"}], "commitDateTime": "2016-11-02 19:06:12", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.svg.SVGImageReaderTest.testReadWithSubsampleParamPixels()"}], "spoonFilePath": "SVGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.bmp.ICOImageReaderTest.testReadWithSubsampleParamPixels()"}], "spoonFilePath": "ICOImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.bmp.BMPImageReaderTest.testReadWithSubsampleParamPixels()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.bmp.BMPImageReaderTest.testReadWithSubsampleParamPixelsIndexed8()"}], "spoonFilePath": "BMPImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.pict.PICTImageReaderTest.testReadWithSubsampleParamPixels()"}], "spoonFilePath": "PICTImageReaderTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageReaderAbstractTest.failBecause(java.lang.String,java.lang.Throwable)"}, {"UPD": 17, "TOT": 41, "MOV": 23, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.util.ImageReaderAbstractTest.testReadWithSubsampleParamPixels()"}], "spoonFilePath": "ImageReaderAbstractTest.java"}, {"spoonMethods": [], "spoonFilePath": "BMPImageReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 16, "MOV": 6, "INS": 7, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tga.TGAImageReader.readRowByte(java.io.DataInput,int,java.awt.Rectangle,int,int,int,byte[],java.awt.image.WritableRaster,java.awt.image.Raster,int)"}], "spoonFilePath": "TGAImageReader.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.wmf.WMFImageReaderTest.testReadWithSubsampleParamPixels()"}], "spoonFilePath": "WMFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.bmp.CURImageReaderTest.testReadWithSubsampleParamPixels()"}], "spoonFilePath": "CURImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadWithSubsampleParamPixelsTiled()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadWithSubsampleParamPixelsOldJPEG()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadWithSubsampleParamPixelsJPEG()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)"}, {"UPD": 0, "TOT": 3, "MOV": 0, "INS": 3, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getCCITTOptions(int)"}, {"UPD": 5, "TOT": 31, "MOV": 7, "INS": 13, "DEL": 6, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(int,javax.imageio.ImageReadParam)"}, {"UPD": 0, "TOT": 8, "MOV": 4, "INS": 4, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.clipRowToRect(java.awt.image.Raster,java.awt.Rectangle,int[],int)"}, {"UPD": 0, "TOT": 20, "MOV": 4, "INS": 8, "DEL": 8, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(java.awt.image.Raster,java.awt.Rectangle,int,int,int,int,int,java.awt.image.WritableRaster,int,int,int,int,java.io.DataInput)"}, {"UPD": 1, "TOT": 29, "MOV": 22, "INS": 2, "DEL": 4, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.createDecompressorStream(int,int,int,java.io.InputStream)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/212", "ttf": 279.0002777777778, "gitStatsSummary": {"insertions": 64, "deletions": 28, "lines": 92, "gitFilesChange": 3}, "title": "TIFFImageReader: Subsampling is incorrect", "statsSkippedReason": "", "user": "AlskiOnTheWeb", "changesInPackagesGIT": ["imageio/imageio-bmp/src/main/java/com/twelvemonkeys/imageio/plugins/bmp", "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff", "imageio/imageio-tga/src/main/java/com/twelvemonkeys/imageio/plugins/tga"], "spoonStatsSummary": {"UPD": 8, "spoonMethodsChanged": 7, "TOT": 109, "MOV": 43, "INS": 37, "DEL": 21, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "If I setup the reader params to subsample a TIFF image using the Twelve Monkeys reader, I am seeing a strange result. The image width is too narrow. My code looks like:\n\n```\n// Get the scaled width and height we want to load\nfinal int nWidth = reader.getWidth (nImage);\nfinal int nHeight = reader.getHeight (nImage);\nfinal float xScale = nWidth / THUMBNAIL_SIZE;\nfinal float yScale = nHeight / THUMBNAIL_SIZE;\nfinal float scale = Math.min (xScale, yScale);\nfinal int nSampling = Math.max (1, (int)scale);\nfinal ImageReadParam params = new ImageReadParam ();\nparams.setSourceSubsampling (nSampling, nSampling, 0, 0);\nresult = reader.read (nImage, params);\n```\n", "labels": ["Bug"]}, {"created": "2016-01-07 03:14:53", "commits": {"2235f6c9112bb053b8139b1be29a9c02436c174e": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "closed": "2018-08-18 11:09:22", "filteredCommits": [], "commitsDetails": [{"nameRev": "2235f6c9112bb053b8139b1be29a9c02436c174e tags/twelvemonkeys-3.4~6", "commitMessage": "#202, #433: Fixes offset issues when reading multiple JPEGs from single stream + embedded case (ie. TIFF).\n", "commitParents": ["27fcd495db21600e944b5d74c6fb4de448faf169"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "2235f6c9112bb053b8139b1be29a9c02436c174e", "authoredDateTime": "2018-08-18 13:08:17", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 186, "deletions": 68, "lines": 254, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 2, "deletions": 1, "lines": 3, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGSegmentImageInputStream.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/jfif-with-preview-as-second-image.jpg"}, {"insertions": 29, "deletions": 0, "lines": 29, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2018-08-18 13:08:17", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/202", "ttf": 954.0002777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Multiple JPEG streams in single file causes javax.imageio.IIOException: Not a JPEG file: starts with 0xff 0xff", "statsSkippedReason": "", "user": "tmyroadctfig", "changesInPackagesGIT": [], "spoonStatsSummary": {}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Hi,\n\nI'm hitting an error trying to convert the following image to PDF. While grabbing the image size to work out how to scale it on the page I'm seeing this error:\n\n```\njavax.imageio.IIOException: Not a JPEG file: starts with 0xff 0xff\nat com.sun.imageio.plugins.jpeg.JPEGImageReader.readImageHeader(Native Method)\nat com.sun.imageio.plugins.jpeg.JPEGImageReader.readNativeHeader(JPEGImageReader.java:609)\nat com.sun.imageio.plugins.jpeg.JPEGImageReader.readHeader(JPEGImageReader.java:603)\nat com.sun.imageio.plugins.jpeg.JPEGImageReader.getWidth(JPEGImageReader.java:716)\nat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getWidth(Unknown Source)\n```\n\nAny help would be appreciated. Also I'll try to track down another sample which is free to use.\n\nThanks,\n\nLuke\n\n![olympus fe3010 x895](https://cloud.githubusercontent.com/assets/855586/12161324/9b1df67a-b548-11e5-9c51-711c0d8b03ef.jpg)\n", "labels": ["Bug"]}, {"created": "2015-11-26 12:12:35", "commits": {"d5a35fa8181f904758e6a91f4092942354e5b5ae": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "04a4c6e3ae115cf670c8df4abfb314c1e85e93a7": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "6ce58dd68236879a834ee4b08db6404777cf1bda": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "6db06414af93ec02ceaa955efd44bfe147556fcf": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.twelvemonkeys.image.ResampleOp.calcXContrib(double,double,int,com.twelvemonkeys.image.ResampleOp$InterpolationFilter,int)", "com.twelvemonkeys.image.ResampleOp.resample(java.awt.image.BufferedImage,java.awt.image.BufferedImage,com.twelvemonkeys.image.ResampleOp$InterpolationFilter)"], "closed": "2015-12-16 09:22:03", "filteredCommits": ["d5a35fa8181f904758e6a91f4092942354e5b5ae", "04a4c6e3ae115cf670c8df4abfb314c1e85e93a7", "6ce58dd68236879a834ee4b08db6404777cf1bda"], "commitsDetails": [{"nameRev": "d5a35fa8181f904758e6a91f4092942354e5b5ae tags/twelvemonkeys-3.3~71", "commitMessage": "#195: Faster (and correct) test\n", "commitParents": ["5c63dd216800d99f91acc730179204b3dee8f87d"], "spoonStatsSkippedReason": "", "commitHash": "d5a35fa8181f904758e6a91f4092942354e5b5ae", "authoredDateTime": "2015-12-16 10:25:23", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 2, "lines": 4, "filePath": "common/common-image/src/test/java/com/twelvemonkeys/image/ResampleOpTestCase.java"}], "commitDateTime": "2016-01-04 09:11:54", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 0, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.image.ResampleOpTestCase.testAIOOBEWidth()"}], "spoonFilePath": "ResampleOpTestCase.java"}]}, {"nameRev": "6ce58dd68236879a834ee4b08db6404777cf1bda tags/twelvemonkeys-3.2.1~4", "commitMessage": "#195 ArrayIndexOutOfBoundsException for ResampleOp in certain cases\n", "commitParents": ["f21bc2089a7e8e6403fdda3b1c86dc7ffdacb8f2"], "spoonStatsSkippedReason": "", "commitHash": "6ce58dd68236879a834ee4b08db6404777cf1bda", "authoredDateTime": "2015-11-27 13:20:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 13, "deletions": 1, "lines": 14, "filePath": "common/common-image/src/test/java/com/twelvemonkeys/image/ResampleOpTestCase.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "common/common-image/src/main/java/com/twelvemonkeys/image/ResampleOp.java"}], "commitDateTime": "2015-12-04 21:26:26", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.image.ResampleOp.resample(java.awt.image.BufferedImage,java.awt.image.BufferedImage,com.twelvemonkeys.image.ResampleOp$InterpolationFilter)"}], "spoonFilePath": "ResampleOp.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.image.ResampleOpTestCase.testAIOOBE()"}], "spoonFilePath": "ResampleOpTestCase.java"}]}, {"nameRev": "04a4c6e3ae115cf670c8df4abfb314c1e85e93a7 tags/twelvemonkeys-3.3~73", "commitMessage": "#195: Fixed AIOOBE  related to specific widths\n", "commitParents": ["9e5204ddbb20337b473198f4d1374b3af687d3e2"], "spoonStatsSkippedReason": "", "commitHash": "04a4c6e3ae115cf670c8df4abfb314c1e85e93a7", "authoredDateTime": "2015-12-16 10:18:26", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 13, "deletions": 1, "lines": 14, "filePath": "common/common-image/src/test/java/com/twelvemonkeys/image/ResampleOpTestCase.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "common/common-image/src/main/java/com/twelvemonkeys/image/ResampleOp.java"}], "commitDateTime": "2015-12-16 10:18:26", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.image.ResampleOp.calcXContrib(double,double,int,com.twelvemonkeys.image.ResampleOp$InterpolationFilter,int)"}], "spoonFilePath": "ResampleOp.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.image.ResampleOpTestCase.testAIOOBE()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.image.ResampleOpTestCase.testAIOOBEWidth()"}], "spoonFilePath": "ResampleOpTestCase.java"}]}, {"nameRev": "6db06414af93ec02ceaa955efd44bfe147556fcf tags/twelvemonkeys-3.3~77", "commitMessage": "#195 ArrayIndexOutOfBoundsException for ResampleOp in certain cases\n", "commitParents": ["d097742002265f15f3b4b917c16afe4ce1f8db0b"], "spoonStatsSkippedReason": "", "commitHash": "6db06414af93ec02ceaa955efd44bfe147556fcf", "authoredDateTime": "2015-11-27 13:20:44", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 13, "deletions": 1, "lines": 14, "filePath": "common/common-image/src/test/java/com/twelvemonkeys/image/ResampleOpTestCase.java"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "common/common-image/src/main/java/com/twelvemonkeys/image/ResampleOp.java"}], "commitDateTime": "2015-11-27 13:20:44", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 2, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.image.ResampleOp.resample(java.awt.image.BufferedImage,java.awt.image.BufferedImage,com.twelvemonkeys.image.ResampleOp$InterpolationFilter)"}], "spoonFilePath": "ResampleOp.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.image.ResampleOpTestCase.testAIOOBE()"}], "spoonFilePath": "ResampleOpTestCase.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/195", "ttf": 19.00027777777778, "gitStatsSummary": {"insertions": 4, "deletions": 4, "lines": 8, "gitFilesChange": 1}, "title": "ArrayIndexOutOfBoundsException for special srcHeight - dstHeight combination", "statsSkippedReason": "", "user": "meonwax", "changesInPackagesGIT": ["common/common-image/src/main/java/com/twelvemonkeys/image"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 2, "TOT": 8, "MOV": 4, "INS": 4, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When i have a BufferedImage of dimensions 100x354 and want to resample it to 100x18,\ni get an ArrayIndexOutOfBoundsException.\n\nExample code:\n\n```\nBufferedImage myImage = new BufferedImage(100, 354, BufferedImage.TYPE_INT_ARGB);\nBufferedImageOp resampler = new ResampleOp(100, 18, ResampleOp.FILTER_LANCZOS);\n\ntry {\n    BufferedImage resizedImage = resampler.filter(myImage, null);\n} catch (Exception e) {\n    e.printStackTrace();\n}\n```\n\nStackTrace:\n\n```\njava.lang.ArrayIndexOutOfBoundsException: 118\n    at com.twelvemonkeys.image.ResampleOp.resample(ResampleOp.java:1500)\n    at com.twelvemonkeys.image.ResampleOp.filter(ResampleOp.java:566)\n    at com.mycompany.app.App.main(App.java:17)\n```\n\nThis issue seems to be related to the `srcHeight` - `dstHeight` combination.\nMaybe there is something buggy calculating the `yscale` or rounding with `Math.ceil` and `Math.floor`.\n", "labels": ["Bug"]}, {"created": "2015-10-23 10:37:43", "commits": {"062413d2d8f2a418f7932c28250acee92d264801": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2015-10-23 10:53:47", "filteredCommits": ["062413d2d8f2a418f7932c28250acee92d264801"], "commitsDetails": [{"nameRev": "062413d2d8f2a418f7932c28250acee92d264801 tags/twelvemonkeys-3.2~1", "commitMessage": "#187 Removing hardcoded test path/debug code.\n", "commitParents": ["e62922eb9533a5e6b9f87e1bf3bd85c68e2e66df"], "spoonStatsSkippedReason": "", "commitHash": "062413d2d8f2a418f7932c28250acee92d264801", "authoredDateTime": "2015-10-23 12:53:28", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 11, "lines": 12, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/CCITTFaxEncoderStreamTest.java"}], "commitDateTime": "2015-10-23 12:53:28", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxEncoderStreamTest.testImage(java.net.URL)"}], "spoonFilePath": "CCITTFaxEncoderStreamTest.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/187", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Can't build imageio-tiff", "statsSkippedReason": "", "user": "OSwoboda", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "---\n## Test set: com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxEncoderStreamTest\n\nTests run: 6, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.242 sec <<< FAILURE! - in com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxEncoderStreamTest\ntestReencodeImages(com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxEncoderStreamTest)  Time elapsed: 0.241 sec  <<< ERROR!\njava.io.FileNotFoundException: H:\\tmp\\test.tif (Das System kann den angegebenen Pfad nicht finden)\n    at java.io.FileOutputStream.open0(Native Method)\n    at java.io.FileOutputStream.open(FileOutputStream.java:270)\n    at java.io.FileOutputStream.<init>(FileOutputStream.java:213)\n    at java.io.FileOutputStream.<init>(FileOutputStream.java:101)\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxEncoderStreamTest.testImage(CCITTFaxEncoderStreamTest.java:163)\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxEncoderStreamTest.testReencodeImages(CCITTFaxEncoderStreamTest.java:124)\n", "labels": ["Bug"]}, {"created": "2015-10-12 08:47:57", "commits": {"e62922eb9533a5e6b9f87e1bf3bd85c68e2e66df": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "b6e44c5bff5ec371fb85e51d18a01d5d046cce61": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 2, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,byte[])", "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,short[])"], "closed": "2015-10-15 16:45:04", "filteredCommits": ["e62922eb9533a5e6b9f87e1bf3bd85c68e2e66df", "b6e44c5bff5ec371fb85e51d18a01d5d046cce61"], "commitsDetails": [{"nameRev": "e62922eb9533a5e6b9f87e1bf3bd85c68e2e66df tags/twelvemonkeys-3.2~2", "commitMessage": "#184 Re-read the spec, that says ICC and ITU lab uses D50 by default.\n", "commitParents": ["302035443d47cb198842e59acf7e7c14aae389d8"], "spoonStatsSkippedReason": "", "commitHash": "e62922eb9533a5e6b9f87e1bf3bd85c68e2e66df", "authoredDateTime": "2015-10-22 22:14:48", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 4, "deletions": 2, "lines": 6, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2015-10-22 22:14:48", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 2, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,byte[])"}, {"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.normalizeColor(int,short[])"}], "spoonFilePath": "TIFFImageReader.java"}]}, {"nameRev": "b6e44c5bff5ec371fb85e51d18a01d5d046cce61 tags/twelvemonkeys-3.2~12", "commitMessage": "#184 Support for PlanarConfiguration 2 + bonus changes.\n", "commitParents": ["867ca61755584921eea2882b6b6ebac3bd42e8bf"], "spoonStatsSkippedReason": "tooManyChanges", "commitHash": "b6e44c5bff5ec371fb85e51d18a01d5d046cce61", "authoredDateTime": "2015-10-15 17:47:20", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-planar-14.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-planar-04.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-planar-16.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-minisblack-10.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-minisblack-04.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-palette-08.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-planar-12.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-separated-contig-08.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-minisblack-12.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-contig-16.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-palette-02.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-minisblack-14.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-minisblack-02.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-minisblack-24.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-contig-02.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-minisblack-08.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-contig-10.tif"}, {"insertions": 9, "deletions": 0, "lines": 9, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/README.txt"}, {"insertions": 4, "deletions": 0, "lines": 4, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/exif/EXIFEntry.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-planar-32.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-separated-planar-08.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-planar-08.tif"}, {"insertions": 2, "deletions": 2, "lines": 4, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFProviderInfo.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-contig-08.tif"}, {"insertions": 193, "deletions": 114, "lines": 307, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-separated-contig-16.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-minisblack-06.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-separated-planar-16.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-contig-04.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-minisblack-32.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-contig-24.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-contig-32.tif"}, {"insertions": 100, "deletions": 2, "lines": 102, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-contig-12.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-planar-24.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-planar-10.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-contig-14.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-palette-04.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-minisblack-16.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-rgb-planar-02.tif"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/flower-palette-16.tif"}, {"insertions": 37, "deletions": 0, "lines": 37, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/depth/summary.txt"}], "commitDateTime": "2015-10-15 17:47:20", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/184", "ttf": 3.000277777777778, "gitStatsSummary": {"insertions": 203, "deletions": 118, "lines": 321, "gitFilesChange": 3}, "title": "TIFF PlanarConfiguration 2 (planar) mistaken for interleaved", "statsSkippedReason": "", "user": "nicolas-f", "changesInPackagesGIT": ["imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/exif", "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 3.0, "spoonMethodsChanged": 2, "TOT": 3.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hi,\n\nWe use your library in open source project OrbisGIS to read TIFF files. However there is a problem with a TIFF file.\n\nThe TIFF file is successfully read, however it shows a greyscale image with duplicated image. May be the bands are merged together ?\n\nHere some info about the file\n\n```\nidentify -verbose /mnt/stock/raster/raster/Nantes_Ouest_lambert2.tif\nImage: /mnt/stock/raster/raster/Nantes_Ouest_lambert2.tif\n  Format: TIFF (Tagged Image File Format)\n  Mime type: image/tiff\n  Class: DirectClass\n  Geometry: 17115x30810+0+0\n  Units: PixelsPerInch\n  Type: TrueColor\n  Base type: TrueColor\n  Endianess: LSB\n  Colorspace: sRGB\n  Depth: 8-bit\n  Channel depth:\n    red: 8-bit\n    green: 8-bit\n    blue: 8-bit\n  Channel statistics:\n    Pixels: 527313150\n    Red:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 86.9599 (0.341019)\n      standard deviation: 88.8267 (0.34834)\n      kurtosis: -1.50411\n      skewness: 0.299257\n    Green:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 37.1403 (0.145648)\n      standard deviation: 60.5394 (0.23741)\n      kurtosis: 4.01027\n      skewness: 2.14245\n    Blue:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 43.2769 (0.169713)\n      standard deviation: 61.8433 (0.242523)\n      kurtosis: 2.93259\n      skewness: 1.84273\n  Image statistics:\n    Overall:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 55.7924 (0.218794)\n      standard deviation: 71.6003 (0.280785)\n      kurtosis: 0.820791\n      skewness: 1.39108\n  Rendering intent: Perceptual\n  Gamma: 0.454545\n  Chromaticity:\n    red primary: (0.64,0.33)\n    green primary: (0.3,0.6)\n    blue primary: (0.15,0.06)\n    white point: (0.3127,0.329)\n  Background color: white\n  Border color: srgb(223,223,223)\n  Matte color: grey74\n  Transparent color: black\n  Interlace: None\n  Intensity: Undefined\n  Compose: Over\n  Page geometry: 17115x30810+0+0\n  Dispose: Undefined\n  Iterations: 0\n  Compression: None\n  Orientation: TopLeft\n  Properties:\n    date:create: 2015-10-09T16:30:34+02:00\n    date:modify: 2015-10-09T16:30:34+02:00\n    signature: 75e5e167bcd0b3e19e55fc08def01eaf63ea175acd7f9eb81b193dddce8fb747\n    tiff:endian: lsb\n    tiff:photometric: RGB\n    tiff:rows-per-strip: 1\n  Artifacts:\n    filename: /mnt/stock/raster/raster/Nantes_Ouest_lambert2.tif\n    verbose: true\n  Tainted: False\n  Filesize: 1.5834GB\n  Number pixels: 527.3M\n  Pixels per second: 161.8MB\n  User time: 3.260u\n  Elapsed time: 0:04.259\n  Version: ImageMagick 6.8.9-8 Q16 x86_64 2014-11-18 http://www.imagemagick.org\n```\n\nWhat we get:\n\nhttp://imgur.com/VbCfDTo\n", "labels": ["Bug"]}, {"created": "2015-09-29 06:40:08", "commits": {"b85d0f7d6b20297e7825aa82144cdef291416ff2": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.main(java.lang.String[])", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readHeader()", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readLayerData(int,javax.imageio.ImageReadParam)", "com.twelvemonkeys.imageio.plugins.psd.PSDUtil.intToStr(int)", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readImageData(java.awt.image.BufferedImage,java.awt.image.ColorModel,java.awt.Rectangle,java.awt.Rectangle,int,int,int[],int)", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readImageResources(boolean)", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read32bitChannel(int,int,java.awt.image.DataBuffer,int,int,java.awt.image.ColorModel,int[],java.awt.Rectangle,java.awt.Rectangle,int,int,int,int,int[],int,boolean)", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read16bitChannel(int,int,java.awt.image.DataBuffer,int,int,java.awt.image.ColorModel,short[],java.awt.Rectangle,java.awt.Rectangle,int,int,int,int,int[],int,boolean)", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read8bitChannel(int,int,java.awt.image.DataBuffer,int,int,java.awt.image.ColorModel,byte[],java.awt.Rectangle,java.awt.Rectangle,int,int,int,int,int[],int,boolean)", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read1bitChannel(int,int,java.awt.image.DataBuffer,int,int,java.awt.image.ColorModel,byte[],java.awt.Rectangle,java.awt.Rectangle,int,int,int,int,int[],boolean)", "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readLayerAndMaskInfo(boolean)"], "closed": "2015-10-15 17:10:17", "filteredCommits": ["b85d0f7d6b20297e7825aa82144cdef291416ff2"], "commitsDetails": [{"nameRev": "b85d0f7d6b20297e7825aa82144cdef291416ff2 tags/twelvemonkeys-3.2~11", "commitMessage": "#179: Fixed broken offsets for 16 and 32 bits PackBits data.\n", "commitParents": ["b6e44c5bff5ec371fb85e51d18a01d5d046cce61"], "spoonStatsSkippedReason": "", "commitHash": "b85d0f7d6b20297e7825aa82144cdef291416ff2", "authoredDateTime": "2015-10-15 19:06:05", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 91, "deletions": 98, "lines": 189, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDImageReader.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDUtil.java"}], "commitDateTime": "2015-10-15 19:06:05", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readHeader()"}, {"UPD": 0, "TOT": 5, "MOV": 3, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readLayerData(int,javax.imageio.ImageReadParam)"}, {"UPD": 0, "TOT": 15, "MOV": 8, "INS": 4, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read32bitChannel(int,int,java.awt.image.DataBuffer,int,int,java.awt.image.ColorModel,int[],java.awt.Rectangle,java.awt.Rectangle,int,int,int,int,int[],int,boolean)"}, {"UPD": 21, "TOT": 30, "MOV": 5, "INS": 1, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readImageData(java.awt.image.BufferedImage,java.awt.image.ColorModel,java.awt.Rectangle,java.awt.Rectangle,int,int,int[],int)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readImageResources(boolean)"}, {"UPD": 0, "TOT": 6, "MOV": 3, "INS": 1, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read1bitChannel(int,int,java.awt.image.DataBuffer,int,int,java.awt.image.ColorModel,byte[],java.awt.Rectangle,java.awt.Rectangle,int,int,int,int,int[],boolean)"}, {"UPD": 2, "TOT": 5, "MOV": 1, "INS": 1, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.main(java.lang.String[])"}, {"UPD": 1, "TOT": 12, "MOV": 6, "INS": 3, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read8bitChannel(int,int,java.awt.image.DataBuffer,int,int,java.awt.image.ColorModel,byte[],java.awt.Rectangle,java.awt.Rectangle,int,int,int,int,int[],int,boolean)"}, {"UPD": 1, "TOT": 16, "MOV": 8, "INS": 4, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read16bitChannel(int,int,java.awt.image.DataBuffer,int,int,java.awt.image.ColorModel,short[],java.awt.Rectangle,java.awt.Rectangle,int,int,int,int,int[],int,boolean)"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readLayerAndMaskInfo(boolean)"}], "spoonFilePath": "PSDImageReader.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDUtil.intToStr(int)"}], "spoonFilePath": "PSDUtil.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/179", "ttf": 16.00027777777778, "gitStatsSummary": {"insertions": 92, "deletions": 99, "lines": 191, "gitFilesChange": 2}, "title": "PSD file ImageIO.read gives java.io.EOFException: Unexpected end of PackBits stream", "statsSkippedReason": "", "user": "prakharmishra", "changesInPackagesGIT": ["imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd"], "spoonStatsSummary": {"UPD": 26, "spoonMethodsChanged": 11, "TOT": 93, "MOV": 34, "INS": 18, "DEL": 15, "spoonFilesChanged": 2}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hey everyone,\n\nI am trying to convert a PSD file (500+ MB in size) which yields to this exception:\n\n``` java\njava.io.EOFException: Unexpected end of PackBits stream\n    at com.twelvemonkeys.io.enc.PackBitsDecoder.readFully(Unknown Source)\n    at com.twelvemonkeys.io.enc.PackBitsDecoder.decode(Unknown Source)\n    at com.twelvemonkeys.io.enc.DecoderStream.fill(Unknown Source)\n    at com.twelvemonkeys.io.enc.DecoderStream.read(Unknown Source)\n    at java.io.DataInputStream.readShort(DataInputStream.java:313)\n    at com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read16bitChannel(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readImageData(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.read(Unknown Source)\n    at javax.imageio.ImageIO.read(ImageIO.java:1448)\n    at javax.imageio.ImageIO.read(ImageIO.java:1308)\n```\n\nCould anybody please suggest a solution for this? Or, at least, a reason why it yields this exception (maybe newer version of photoshop?).\n\n**UPDATE:**\n\nI am using Java 8 with TwelveMonkeys 3.1.1 and here is the link for the PSD file I used:\n[heavy.psd](https://drive.google.com/file/d/0Bx8GyTBfuSFuZEgwRl9vYXdLX1k/view?usp=sharing)\n\nThank you\n", "labels": ["Bug"]}, {"created": "2015-08-26 09:10:20", "commits": {"867ca61755584921eea2882b6b6ebac3bd42e8bf": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.createDecompressorStream(int,int,int,java.io.InputStream)"], "closed": "2015-08-26 09:18:08", "filteredCommits": ["867ca61755584921eea2882b6b6ebac3bd42e8bf"], "commitsDetails": [{"nameRev": "867ca61755584921eea2882b6b6ebac3bd42e8bf tags/twelvemonkeys-3.2~13", "commitMessage": "TMI #172: Fix IIOBE/Buffer overflow issue.\n", "commitParents": ["2bdfa4fccb7a1914271aae65db02557cef82555c"], "spoonStatsSkippedReason": "", "commitHash": "867ca61755584921eea2882b6b6ebac3bd42e8bf", "authoredDateTime": "2015-08-26 11:16:35", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 1, "deletions": 1, "lines": 2, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/lzw-buffer-overflow.tif"}], "commitDateTime": "2015-08-26 11:16:35", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.getTestData()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.createDecompressorStream(int,int,int,java.io.InputStream)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/172", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "title": "TIFF: Some LZW encoded TIFFs may throw IndexOutOfBoundsException due to buffer overflow", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "The TIFFs are probably incorrectly compressed (compressed around boundaries), however a larger buffer should handle it.\n", "labels": ["Bug"]}, {"created": "2015-08-25 05:59:14", "commits": {"25bef72ac0a9771461066cbd0bd78b5a8ca5b27a": {"commitGHEventType": "referenced", "commitUser": "haraldk"}, "d4e34d610993c11556a4e54ecf6fdf7ff8b07d70": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2015-08-25 12:15:14", "filteredCommits": ["25bef72ac0a9771461066cbd0bd78b5a8ca5b27a"], "commitsDetails": [{"nameRev": "25bef72ac0a9771461066cbd0bd78b5a8ca5b27a tags/twelvemonkeys-3.2~16", "commitMessage": "TMI #170 Fix General CMM error517/LCMS error 13 (Ignore incompatible ICC profile)\n", "commitParents": ["e957120480380fe7588837c7f831da03dcca52cf"], "spoonStatsSkippedReason": "", "commitHash": "25bef72ac0a9771461066cbd0bd78b5a8ca5b27a", "authoredDateTime": "2015-08-25 14:12:47", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/general-cmm-error.tif"}], "commitDateTime": "2015-08-25 14:12:47", "commitUser": "haraldk", "commitSpoonAstDiffStats": []}, {"nameRev": "d4e34d610993c11556a4e54ecf6fdf7ff8b07d70 tags/twelvemonkeys-3.2~15", "commitMessage": "TMI #170 Fix General CMM error517/LCMS error 13 (Ignore incompatible ICC profile)\n", "commitParents": ["25bef72ac0a9771461066cbd0bd78b5a8ca5b27a"], "spoonStatsSkippedReason": "", "commitHash": "d4e34d610993c11556a4e54ecf6fdf7ff8b07d70", "authoredDateTime": "2015-08-25 14:13:35", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 24, "deletions": 16, "lines": 40, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 14, "deletions": 5, "lines": 19, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}], "commitDateTime": "2015-08-25 14:13:35", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.getTestData()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testBadICCProfile()"}, {"UPD": 0, "TOT": 13, "MOV": 10, "INS": 1, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadIncompatibleICCProfileIgnoredWithWarning()"}, {"UPD": 0, "TOT": 11, "MOV": 8, "INS": 1, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testReadOldStyleJPEGGrayscale()"}, {"UPD": 0, "TOT": 16, "MOV": 13, "INS": 1, "DEL": 2, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.testColorMap8Bit()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 8, "MOV": 3, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getICCProfile()"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/170", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "java.awt.color.CMMException: LCMS error 13: Couldn't link the profiles", "statsSkippedReason": "", "user": "rmuller", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0.0, "spoonMethodsChanged": 0, "TOT": 0.0, "MOV": 0.0, "INS": 0.0, "DEL": 0.0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 1, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "With attached file I get this exception:\n\nAlso see #130 \n\n```\nLCMS error 13: Couldn't link the profiles\njava.awt.color.CMMException\n at sun.java2d.cmm.lcms.LCMS.createNativeTransform(Native Method)\n at sun.java2d.cmm.lcms.LCMS.createTransform(LCMS.java:156)\n at sun.java2d.cmm.lcms.LCMSTransform.doTransform(LCMSTransform.java:155)\n at sun.java2d.cmm.lcms.LCMSTransform.colorConvert(LCMSTransform.java:629)\n at java.awt.color.ICC_ColorSpace.fromRGB(ICC_ColorSpace.java:232)\n at com.twelvemonkeys.imageio.color.ColorSpaces.getCachedOrCreateCS\n at com.twelvemonkeys.imageio.color.ColorSpaces.createColorSpace\n at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType\n at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getImageTypes\n at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read\n```\n\nEnvironment:\nUbuntu 12.04 (x64)\nOracle Java 8u60\ntwelvemonkeys.imageio 3.1.2\n\n![8797055-66_42320_tif](https://cloud.githubusercontent.com/assets/754040/9459739/25c239b2-4aff-11e5-9e1f-85e5d3dd06ef.png)\n", "labels": ["Bug"]}, {"created": "2015-08-24 15:28:39", "commits": {"e957120480380fe7588837c7f831da03dcca52cf": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(int,javax.imageio.ImageReadParam)", "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getRawImageType(int)"], "closed": "2015-08-25 10:25:03", "filteredCommits": ["e957120480380fe7588837c7f831da03dcca52cf"], "commitsDetails": [{"nameRev": "e957120480380fe7588837c7f831da03dcca52cf tags/twelvemonkeys-3.2~17", "commitMessage": "TMI #169 NullPointerException when reading JPEG image\n", "commitParents": ["35edfc519f55cfbd205ba84ab2c1ed5fbd44eb4e"], "spoonStatsSkippedReason": "", "commitHash": "e957120480380fe7588837c7f831da03dcca52cf", "authoredDateTime": "2015-08-25 12:12:10", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 13, "deletions": 19, "lines": 32, "filePath": "imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-jpeg/src/test/resources/jpeg/exif-jfif-app13-app14ycck-3channel.jpg"}, {"insertions": 36, "deletions": 0, "lines": 36, "filePath": "imageio/imageio-jpeg/src/test/java/com/twelvemonkeys/imageio/plugins/jpeg/JPEGImageReaderTest.java"}], "commitDateTime": "2015-08-25 12:12:10", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadAdobeAPP14CMYKAnd3channelData()"}, {"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testGetRawImageTypeAdobeAPP14CMYKAnd3channelData()"}], "spoonFilePath": "JPEGImageReaderTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 9, "MOV": 4, "INS": 3, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(int,javax.imageio.ImageReadParam)"}, {"UPD": 0, "TOT": 3, "MOV": 2, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getRawImageType(int)"}], "spoonFilePath": "JPEGImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/169", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 13, "deletions": 19, "lines": 32, "gitFilesChange": 1}, "title": "NullPointerException when reading JPEG image", "statsSkippedReason": "", "user": "rmuller", "changesInPackagesGIT": ["imageio/imageio-jpeg/src/main/java/com/twelvemonkeys/imageio/plugins/jpeg"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 2, "TOT": 12, "MOV": 6, "INS": 4, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "java.lang.NullPointerException:\n    at com.sun.imageio.plugins.jpeg.JPEGImageReader.getRawImageType(JPEGImageReader.java:763)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getRawImageType(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(Unknown Source)\n    at javax.imageio.ImageIO.read(ImageIO.java:1448)\n    at javax.imageio.ImageIO.read(ImageIO.java:1400)\n\n![u-vorm-aluminium](https://cloud.githubusercontent.com/assets/754040/9444162/6b6968b6-4a85-11e5-92b5-b2bfc4399093.jpg)\n\nEnvironment:\nUbuntu 12.04 (x64)\nOracle Java 8u60\nTwelveMonkeys 3.1.2\n", "labels": ["Bug"]}, {"created": "2015-08-21 13:22:13", "commits": {"99c5fea0056dccf753529afa1f4c488eeaa48029": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readSubdirectories(javax.imageio.stream.ImageInputStream,java.util.List,java.util.List)"], "closed": "2015-08-21 13:25:14", "filteredCommits": ["99c5fea0056dccf753529afa1f4c488eeaa48029"], "commitsDetails": [{"nameRev": "99c5fea0056dccf753529afa1f4c488eeaa48029 tags/twelvemonkeys-3.2~20", "commitMessage": "TMI #166 Remove printStackTrace() from EXIFReader\n", "commitParents": ["4b70b0cf1cf6b1dc0fe8373c1a52971755110b4b"], "spoonStatsSkippedReason": "", "commitHash": "99c5fea0056dccf753529afa1f4c488eeaa48029", "authoredDateTime": "2015-08-21 15:24:49", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 8, "deletions": 5, "lines": 13, "filePath": "imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/exif/EXIFReader.java"}], "commitDateTime": "2015-08-21 15:24:49", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readSubdirectories(javax.imageio.stream.ImageInputStream,java.util.List,java.util.List)"}], "spoonFilePath": "EXIFReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/166", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 8, "deletions": 5, "lines": 13, "gitFilesChange": 1}, "title": "Remove printStackTrace() from EXIFReader", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": ["imageio/imageio-metadata/src/main/java/com/twelvemonkeys/imageio/metadata/exif"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 2, "MOV": 1, "INS": 1, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Should only print stack trace if debug is enabled.\n", "labels": ["Bug"]}, {"created": "2015-08-21 10:48:51", "commits": {"4b70b0cf1cf6b1dc0fe8373c1a52971755110b4b": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.bmp.DIBImageReader.readBitmap(com.twelvemonkeys.imageio.plugins.bmp.DirectoryEntry)"], "closed": "2015-08-21 10:58:35", "filteredCommits": ["4b70b0cf1cf6b1dc0fe8373c1a52971755110b4b"], "commitsDetails": [{"nameRev": "4b70b0cf1cf6b1dc0fe8373c1a52971755110b4b tags/twelvemonkeys-3.2~21", "commitMessage": "TMI #165 ICOImageReader prints debug information.\n", "commitParents": ["22e490ca40bee7d7b19c370a791fad2230b58d5f"], "spoonStatsSkippedReason": "", "commitHash": "4b70b0cf1cf6b1dc0fe8373c1a52971755110b4b", "authoredDateTime": "2015-08-21 12:57:29", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 0, "deletions": 2, "lines": 2, "filePath": "imageio/imageio-bmp/src/main/java/com/twelvemonkeys/imageio/plugins/bmp/DIBImageReader.java"}], "commitDateTime": "2015-08-21 12:57:29", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.bmp.DIBImageReader.readBitmap(com.twelvemonkeys.imageio.plugins.bmp.DirectoryEntry)"}], "spoonFilePath": "DIBImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/165", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 2, "lines": 2, "gitFilesChange": 1}, "title": "Error when reading ICO files (version 3.1.2)", "statsSkippedReason": "", "user": "rmuller", "changesInPackagesGIT": ["imageio/imageio-bmp/src/main/java/com/twelvemonkeys/imageio/plugins/bmp"], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 1, "TOT": 1, "MOV": 0, "INS": 0, "DEL": 1, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "When reading [this](http://www.jpg.fr/Images/StaplesFR/shared/favicon.ico) ICO file, i get this error:\n\ndescriptor: BitmapRGB[ICOEntry: width: 20, height: 20, colors: 0, planes: 1, bit count: 32, size: 1720, offset: 22, BitmapInfoHeader: size: 40 bytes, width: 20, height: 40, planes: 1, bit count: 32, compression: 0, image size: 1600, X pixels per m: 3779, Y pixels per m: 3779, colors used: 1 (unknown), colors important: 1 (all)]\njavax.imageio.IIOException: Illegal count -1959962730 for tag 25956 type 19576 @0000dc76\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readEntry(Unknown Source)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(Unknown Source)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readSubdirectories(Unknown Source)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(Unknown Source)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.read(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readMetadata(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readIFD(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(Unknown Source)\n    at javax.imageio.ImageIO.read(ImageIO.java:1448)\n\nWhen using metadata-extractor or imagemagick no errors appear.\n\nRonald\n", "labels": ["Bug", "Trouble-shooting"]}, {"created": "2015-08-20 14:13:28", "commits": {"f7d9a64e41c13a942b5befcdb4291a1e5b496d20": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 1, "changesInPackagesSPOON": ["com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)"], "closed": "2015-08-20 15:08:12", "filteredCommits": ["f7d9a64e41c13a942b5befcdb4291a1e5b496d20"], "commitsDetails": [{"nameRev": "f7d9a64e41c13a942b5befcdb4291a1e5b496d20 tags/twelvemonkeys-3.2~24", "commitMessage": "TMI #162 Support for TIFF containing gray + alpha.\n", "commitParents": ["5c76899c049ed6bf3c93ff17e1e0e0c1844497ae"], "spoonStatsSkippedReason": "", "commitHash": "f7d9a64e41c13a942b5befcdb4291a1e5b496d20", "authoredDateTime": "2015-08-20 17:06:19", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 1, "deletions": 0, "lines": 1, "filePath": "imageio/imageio-tiff/src/test/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReaderTest.java"}, {"insertions": 41, "deletions": 4, "lines": 45, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/TIFFImageReader.java"}, {"insertions": 0, "deletions": 0, "lines": 0, "filePath": "imageio/imageio-tiff/src/test/resources/tiff/grayscale-alpha.tiff"}], "commitDateTime": "2015-08-20 17:06:19", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReaderTest.getTestData()"}], "spoonFilePath": "TIFFImageReaderTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(int)"}], "spoonFilePath": "TIFFImageReader.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/162", "ttf": 0.0002777777777777778, "gitStatsSummary": {"insertions": 41, "deletions": 4, "lines": 45, "gitFilesChange": 1}, "title": "Problem with gray-scaled tiff file", "statsSkippedReason": "", "user": "muxmax", "changesInPackagesGIT": ["imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff"], "spoonStatsSummary": {"UPD": 1, "spoonMethodsChanged": 1, "TOT": 3, "MOV": 0, "INS": 2, "DEL": 0, "spoonFilesChanged": 1}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 0, "alsoFixesPhrase": 0}, "body": "Hello,\n\nFor the attached gay scaled tiff file an error occurs while loading:\njavax.imageio.IIOException: Unsupported SamplesPerPixel/BitsPerSample combination for Bi-level/Gray TIFF (expected 1/1, 1/2, 1/4, 1/8 or 1/16): 2/8\n\nWhen I debug to the point where the exception is thrown, I'm at TiffImageReader:line 353\n\nPlease rename the png-file to tiff.\n![greyscaled](https://cloud.githubusercontent.com/assets/1533880/9384902/aaff5e5c-4753-11e5-9ba1-281d172e9e9d.png)\n", "labels": ["Bug", "New feature"]}, {"created": "2015-08-03 08:09:54", "commits": {"40b11710ea9d277ba8011e22401223efd34f8533": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2015-08-14 08:23:07", "filteredCommits": [], "commitsDetails": [{"nameRev": "40b11710ea9d277ba8011e22401223efd34f8533 tags/twelvemonkeys-3.2~28", "commitMessage": "Merge pull request #160 from Schmidor/master\n\nFix for Issue #159", "commitParents": ["61b07cb9cbaadebd029142cb57902bc20470ec90", "d86af8bd8260d808f0a47207542802a90b57cee8"], "spoonStatsSkippedReason": "", "commitHash": "40b11710ea9d277ba8011e22401223efd34f8533", "authoredDateTime": "2015-08-14 09:32:31", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 17, "deletions": 14, "lines": 31, "filePath": "imageio/imageio-tiff/src/main/java/com/twelvemonkeys/imageio/plugins/tiff/CCITTFaxDecoderStream.java"}], "commitDateTime": "2015-08-14 09:32:31", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 4, "MOV": 1, "INS": 2, "DEL": 1, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.getNextChangingElement(int,boolean)"}, {"UPD": 0, "TOT": 21, "MOV": 11, "INS": 7, "DEL": 3, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.decode2D()"}], "spoonFilePath": "CCITTFaxDecoderStream.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/159", "ttf": 11.000277777777777, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "ArrayIndexOutOfBoundsException in CCITTFaxDecoderStream.decode2D", "statsSkippedReason": "", "user": "haraldk", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Found a special multipage TIFF created by \"Pixel Translations Inc., PIXTIFF Version 56.0.218.1093\", that includes one page monochrome T.6/Group 4 encoded, and one page Old-style JPEG encoded.\n\nThe second page is read correctly using the `TIFFImageReader`, however the first page throws an exception while reading.\nThe first page is displayed correctly using Preview (although it ignores page 2), so it should be decodable.\n\nHere's the relevant stack trace:\n\n```\njava.lang.ArrayIndexOutOfBoundsException: 1648\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.decode2D(CCITTFaxDecoderStream.java:199)\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.decodeRowType6(CCITTFaxDecoderStream.java:255)\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.decodeRow(CCITTFaxDecoderStream.java:267)\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.fetch(CCITTFaxDecoderStream.java:111)\n    at com.twelvemonkeys.imageio.plugins.tiff.CCITTFaxDecoderStream.read(CCITTFaxDecoderStream.java:417)\n    at com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(LittleEndianDataInputStream.java:423)\n    at com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(LittleEndianDataInputStream.java:396)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(TIFFImageReader.java:1266)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(TIFFImageReader.java:794)\n```\n\nThe file in question (rename from `.png` to `.tif`):\n\n![multipage-t6 old-jpeg-tiff](https://cloud.githubusercontent.com/assets/110299/9033487/a78a60da-39c7-11e5-8b0e-f321bed778a3.png)\n## \n\nHarald K\n", "labels": ["Bug"]}, {"created": "2015-07-25 22:18:13", "user": "DmytroPuzhay", "body": "I try to read an image from a *.tga file http://www.filedropper.com/imageoriginal and display it on a JLabel\n\n```\nFile file = new File(\"...\\\\image_original.tga\");\nBufferedImage rawImage = ImageIO.read(file);\nJLabel lblNewLabel = new JLabel();\nlblNewLabel.setIcon(new ImageIcon(rawImage ));\n```\n\nit is then displayed like that: http://www.filedropper.com/imagereadjlabel\n\nWhen I write it to a file\n\n```\nFile file_raw = new File(\"...\\\\image_read_written.jpg\");\nImageIO.write(rawImage, \"JPG\", file_raw);\n```\n\nthe result is: http://www.filedropper.com/imagereadwritten\n\nI tried to follow your advice from https://github.com/haraldk/TwelveMonkeys/issues/155 and convert the image, but the result is blackish for all image types except for BufferedImage.TYPE_BYTE_GRAY:\n\n```\nFile file = new File(\"...\\\\image_original.tga\");\nBufferedImage rawImage = ImageIO.read(file);\nJLabel lblNewLabel = new JLabel();\nBufferedImage convertedImage = new BufferedImage(rawImage.getWidth(), rawImage.getHeight(), BufferedImage.TYPE_BYTE_GRAY);\nColorConvertOp colorConvert = new ColorConvertOp(null);\ncolorConvert.filter(rawImage, convertedImage);\nlblNewLabel.setIcon(new ImageIcon(convertedImage));\n```\n\ndisplayed like:http://www.filedropper.com/imagereadconvertedjlabel\n", "closed": "2015-07-27 13:09:33", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/156", "ttf": 1.0002777777777778, "commits": {}, "labels": ["Bug", "Trouble-shooting"], "title": "Unable to read/display TGA as RGB with imageio-tga 3.1.1"}, {"created": "2015-07-20 04:59:27", "user": "trejkaz", "body": "We restrict access to global system files as an attempt to get most reproducible results across different machines running the same OS.\n\nI found that this library is attempting to access my ColorSync profiles:\n\n```\njava.security.AccessControlException: access denied (\"java.io.FilePermission\" \"/System/Library/ColorSync/Profiles/Generic CMYK Profile.icc\" \"read\")\n   at java.security.AccessControlContext.checkPermission(AccessControlContext.java:457)\n   at java.security.AccessController.checkPermission(AccessController.java:884)\n   at java.lang.SecurityManager.checkPermission(SecurityManager.java:549)\n   at java.lang.SecurityManager.checkRead(SecurityManager.java:888)\n   at java.io.File.isFile(File.java:877)\n   at java.awt.color.ICC_Profile.getProfileFile(ICC_Profile.java:1825)\n   at java.awt.color.ICC_Profile.getInstance(ICC_Profile.java:974)\n   at com.twelvemonkeys.imageio.color.ColorSpaces.readProfileFromPath(Unknown Source)\n   at com.twelvemonkeys.imageio.color.ColorSpaces.getColorSpace(Unknown Source)\n   at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageTypes(Unknown Source)\n   at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readImageAsRasterAndReplaceColorProfile(Unknown Source)\n   at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(Unknown Source)\n```\n\nThis causes any attempt to read images using this library to fail as there doesn't appear to be any fallback occurring when the profile cannot be read.\n\nIs there a reason these profile files have to be read from the system and can't be included with the library? I worry about whether this library can produce consistent results across platforms if it's relying on files only present on OSX.\n", "closed": "2015-07-27 13:10:53", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/154", "ttf": 7.000277777777778, "commits": {}, "labels": ["Bug", "Trouble-shooting"], "title": "java.security.AccessControlException attempting to read ColorSync profiles"}, {"created": "2015-07-08 10:46:45", "user": "xinyingho", "body": "I got a set of ico files that raises an illegal exception while reading them. The code is quite simple:\n\n``` java\nImageInputStream stream = ImageIO.createImageInputStream(Files.newInputStream(\n                                    path, StandardOpenOption.READ\n));\nImageReader reader = ImageIO.getImageReaders(stream).next();\nreader.setInput(stream);\nBufferedImage image = reader.read(0, null);\n```\n\nHere's one of the problematic ico files:\n![18w](https://cloud.githubusercontent.com/assets/9655252/8568536/b7730802-256e-11e5-812c-93ac9b7bae3c.png)\n\nWindows Explorer and other image editing applications can display them all right. So I suppose that the BMP library is not lenient enough towards malformed ico files.\n", "closed": "2015-07-11 11:21:43", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/150", "ttf": 3.000277777777778, "commits": {}, "labels": ["Bug"], "title": "ICO: java.lang.IllegalArgumentException: Pixel stride times width must be less than or equal to the scanline stride"}, {"created": "2015-06-24 11:49:47", "user": "maciejhirsz", "body": "I've been using TwelveMonkeys for a while without much of an issue, but of course finally some client managed to fabricate an image that doesn't load quite right, it's the first CMYK image that I see load with inverted colors, and I'm a bit at a loss why...\n\nThe JPEG in question to be found here: http://terhix.com/inverted.jpg\n\nImageMagick `identify -verbose` dump:\n\n```\nImage: inverted.jpg\n  Format: JPEG (Joint Photographic Experts Group JFIF format)\n  Mime type: image/jpeg\n  Class: DirectClass\n  Geometry: 796x1194+0+0\n  Resolution: 28.3465x28.3465\n  Print size: 28.0811x42.1216\n  Units: PixelsPerCentimeter\n  Type: ColorSeparation\n  Endianess: Undefined\n  Colorspace: CMYK\n  Depth: 8-bit\n  Channel depth:\n    cyan: 8-bit\n    magenta: 8-bit\n    yellow: 8-bit\n    black: 8-bit\n  Channel statistics:\n    Pixels: 950424\n    Cyan:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 77.9501 (0.305687)\n      standard deviation: 52.9279 (0.207561)\n      kurtosis: -0.987192\n      skewness: 0.00923395\n      entropy: 0.882891\n    Magenta:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 87.5529 (0.343345)\n      standard deviation: 58.1934 (0.228209)\n      kurtosis: -0.841658\n      skewness: -0.150388\n      entropy: 0.867921\n    Yellow:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 131.115 (0.514175)\n      standard deviation: 87.8883 (0.34466)\n      kurtosis: -1.45162\n      skewness: -0.131165\n      entropy: 0.927241\n    Black:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 55.7855 (0.218767)\n      standard deviation: 60.2406 (0.236238)\n      kurtosis: -0.661707\n      skewness: 0.7945\n      entropy: 0.775388\n  Image statistics:\n    Overall:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 88.1008 (0.345493)\n      standard deviation: 66.2214 (0.259692)\n      kurtosis: 0.129288\n      skewness: 0.564087\n      entropy: 0.86336\n  Total ink density: 372.157%\n  Rendering intent: Perceptual\n  Gamma: 0.454545\n  Chromaticity:\n    red primary: (0.64,0.33)\n    green primary: (0.3,0.6)\n    blue primary: (0.15,0.06)\n    white point: (0.3127,0.329)\n  Background color: cmyk(255,255,255,0)\n  Border color: cmyk(223,223,223,0)\n  Matte color: cmyk(189,189,189,0)\n  Transparent color: cmyk(0,0,0,0)\n  Interlace: None\n  Intensity: Undefined\n  Compose: Over\n  Page geometry: 796x1194+0+0\n  Dispose: Undefined\n  Iterations: 0\n  Compression: JPEG\n  Quality: 78\n  Orientation: TopLeft\n  Properties:\n    date:create: 2015-06-24T13:46:51+02:00\n    date:modify: 2015-06-24T13:46:46+02:00\n    exif:ApertureValue: 327680/65536\n    exif:BitsPerSample: 8, 8, 8, 8\n    exif:ColorSpace: 65535\n    exif:Compression: 5\n    exif:DateTime: 2015:02:12 10:13:55\n    exif:DateTimeDigitized: 2016:07:12 08:37:36\n    exif:DateTimeOriginal: 2016:07:12 08:37:36\n    exif:ExifImageLength: 1194\n    exif:ExifImageWidth: 796\n    exif:ExifOffset: 312\n    exif:ExifVersion: 48, 50, 50, 48\n    exif:ExposureBiasValue: 0/1\n    exif:ExposureMode: 1\n    exif:ExposureProgram: 1\n    exif:ExposureTime: 1/250\n    exif:FileSource: 3\n    exif:Flash: 16\n    exif:FNumber: 56/10\n    exif:FocalLength: 88/1\n    exif:FocalPlaneResolutionUnit: 2\n    exif:ImageLength: 6739\n    exif:ImageWidth: 4493\n    exif:ISOSpeedRatings: 200\n    exif:Make: Canon\n    exif:MeteringMode: 5\n    exif:Model: Canon EOS-1Ds Mark III\n    exif:Orientation: 1\n    exif:PhotometricInterpretation: 5\n    exif:PlanarConfiguration: 1\n    exif:ResolutionUnit: 3\n    exif:SamplesPerPixel: 4\n    exif:SceneType: 1\n    exif:ShutterSpeedValue: 524288/65536\n    exif:Software: Adobe Photoshop CS5.1 Windows\n    exif:SubjectDistance: 0/1\n    exif:thumbnail:Compression: 6\n    exif:thumbnail:JPEGInterchangeFormat: 806\n    exif:thumbnail:JPEGInterchangeFormatLength: 7607\n    exif:thumbnail:ResolutionUnit: 2\n    exif:thumbnail:XResolution: 72/1\n    exif:thumbnail:YResolution: 72/1\n    exif:WhiteBalance: 0\n    exif:XResolution: 283465/10000\n    exif:YResolution: 283465/10000\n    jpeg:colorspace: 4\n    jpeg:sampling-factor: 2x2,1x1,1x1,2x2\n    signature: f79ef5e4bdbc0d1b087a48b9f1c690ac172e2c30ae7370ec29aed49aa738a1df\n  Profiles:\n    Profile-8bim: 9904 bytes\n    Profile-exif: 8419 bytes\n    Profile-icc: 1052608 bytes\n    Profile-iptc: 139 bytes\n      unknown[1,0]: \n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      City[1,90]: 0x00000000: 254700                                        -%\n      unknown[2,0]: \n      Created Date[2,55]: 20160712\n      Created Time[2,60]: 083736+0200\n    Profile-xmp: 5100 bytes\n  Artifacts:\n    filename: inverted.jpg\n    verbose: true\n  Tainted: False\n  Filesize: 1.159MB\n  Number pixels: 950K\n  Pixels per second: 237.61GB\n  User time: 0.000u\n  Elapsed time: 0:01.000\n  Version: ImageMagick 6.9.1-1 Q16 x86_64 2015-04-15 http://www.imagemagick.org\n```\n\nTested with TwelveMonkeys 3.1.1.\n", "closed": "2015-07-13 10:33:14", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/147", "ttf": 18.00027777777778, "commits": {}, "labels": ["Bug"], "title": "CMYK image loading with inverted colors"}, {"created": "2015-06-16 11:46:05", "user": "haraldk", "body": "...because the writer incorrectly writes an `ExtraSamples` tag with the value `0` (unspecified) for any file that has more than 3 components, while there isn't any extra samples for CMYK which really has 4 color components. \n", "closed": "2015-06-17 11:25:44", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/146", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "CMYK TIFFs written by the TIFFImageWriter does not open in Preview/Photoshop"}, {"created": "2015-06-07 16:47:44", "user": "oliverwelter", "body": "Hi,\nI'm was trying to use the tiff plugin as maven artifact in a gradle project.\nI added\n\ncompile 'com.twelvemonkeys.imageio:imageio-tiff:3.1.0'`\n\ninto the gradle.build file. Afterwards a tiff reader but no writer was available.\nI wrote a small unit test showing supported mime types\n\n``` java\n@Test\npublic void testFormats() {\n  ImageIO.scanForPlugins();\n  System.out.println(\"Available readers:\");\n  System.out.println(Arrays.toString(ImageIO.getReaderMIMETypes()));\n  System.out.println(\"Available writers:\");\n  System.out.println(Arrays.toString(ImageIO.getWriterMIMETypes()));\n}\n```\n\nBefore adding the imageio-tiff dependency I got the following output\n\n> Available readers:\n> [image/png, image/jpeg, image/x-png, image/tiff, image/vnd.wap.wbmp, image/bmp, image/gif, image/x-tiff]\n> Available writers:\n> [image/png, image/jpeg, image/x-png, image/vnd.wap.wbmp, image/gif, image/bmp]`\n\nAfterwards:\n\n> Available readers:\n> [image/png, image/jpeg, image/x-png, image/tiff, image/vnd.wap.wbmp, image/gif, image/bmp, image/x-tiff]\n> Available writers:\n> [image/jpeg, image/png, image/x-png, image/vnd.wap.wbmp, image/bmp, image/gif]\n\nDo you have any suggestion what could be the reason that the writer plugin isn't found?\nThe gradle dependencies are showing the correct jar and within it I can see TIFFImageWriter.class and TIFFImageWriterSpi.class .\n\nBest Regards,\nOliver\n", "closed": "2015-06-08 09:13:01", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/142", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "TIFF writer not available via maven artifacts"}, {"created": "2015-05-28 19:38:29", "user": "thesunshinerain", "body": "The attached image was found on this following Java bug ticket:\nhttp://bugs.java.com/view_bug.do?bug_id=6829549\nhttp://farm1.static.flickr.com/130/413993721_0894d0328d_b.jpg\n\nOracle Java 7 and 8 work fine with this image:\n\nUsing imageio-jpeg-3.1.0.jar, I get:\nSEVERE        2015.05.28.11.43.59.068T-0500 java.awt.color.CMMException: Cannot get color transform\nSEVERE        2015.05.28.11.43.59.068T-0500     at sun.java2d.cmm.lcms.LCMS.createNativeTransform(Native Method)\nSEVERE        2015.05.28.11.43.59.068T-0500     at sun.java2d.cmm.lcms.LCMSTransform.doTransform(LCMSTransform.java:149)\nSEVERE        2015.05.28.11.43.59.068T-0500     at sun.java2d.cmm.lcms.LCMSTransform.colorConvert(LCMSTransform.java:526)\nSEVERE        2015.05.28.11.43.59.068T-0500     at java.awt.image.ColorConvertOp.filter(ColorConvertOp.java:571)\nSEVERE        2015.05.28.11.43.59.068T-0500     at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readImageAsRasterAndReplaceColorProfile(Unknown Source)\nSEVERE        2015.05.28.11.43.59.068T-0500     at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(Unknown Source)\n![badtest](https://cloud.githubusercontent.com/assets/12647056/7869256/258b11ba-0547-11e5-9b4b-69c4f82a6397.jpg)\n", "closed": "2015-05-28 21:05:36", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/140", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "java.awt.color.CMMException: Cannot get color transform"}, {"created": "2015-05-26 06:39:41", "user": "sanatmastan", "body": "HI Harald,\n\nI am seeting following test case got failed due to timezone in DateUtilTest\n\n```\n@Test\npublic void testCurrentTimeHour() {\n    Calendar calendar = getCalendar(DateUtil.currentTimeHour());\n\n    assertEquals(0, calendar.get(Calendar.MILLISECOND));\n    assertEquals(0, calendar.get(Calendar.SECOND));\n    assertEquals(0, calendar.get(Calendar.MINUTE));\n}\n```\n\nI am staying in india in IST TimeZone India Time Zone (UTC+05:30) ,i am always getting 30 for calendar.get(Calendar.MINUTE), which is causing the failure of the testcase.\n\nI have seen a comment in your code for sub hour in the timezone,  \n\n```\n/**\n * Rounds the given time down to the closest hour, using the default timezone.\n *\n * @param pTime time\n * @return the time rounded to the closest hour.\n */\npublic static long roundToHour(long pTime) {\n    // TODO: What if timezone offset is sub hour? Are there any? I think so...\n    return ((pTime / HOUR) * HOUR);\n}\n```\n", "closed": "2015-05-27 13:51:03", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/138", "ttf": 1.0002777777777778, "commits": {}, "labels": ["Bug"], "title": "DateUtil Testcases are failing"}, {"created": "2015-05-05 09:40:20", "user": "haraldk", "body": "Reading certain PSD files throws exception:\n\n```\nException in thread \"main\" javax.imageio.IIOException: Illegal PSD Layer Mask data size: 28 (expected 20 or 36)\n    at com.twelvemonkeys.imageio.plugins.psd.PSDLayerMaskData.<init>(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.psd.PSDLayerInfo.<init>(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.readLayerAndMaskInfo(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.psd.PSDImageReader.main(Unknown Source)\n```\n\nInstead, the layer mask data should be correctly parsed or just skipped.\n", "closed": "2015-05-05 09:41:44", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/134", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "Cannot read PSD images with PSD Layer Mask data size 28"}, {"created": "2015-03-20 20:18:02", "user": "THausherr", "body": "Until now, PDFBox could use sun imaging and twelvemonkeys. There is some regression that must have been not more than 1-2 weeks old, which results in badly rendered images. This is both with the \"official version\" of DCTFilter and with the version based on code you suggested not long ago (and which worked fine). I suspect something has changed there. Other possibility would be that the meta data is shown differently.\n\nThis is the code I mean:\n\n```\n/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.pdfbox.filter;\n\nimport java.awt.image.DataBufferByte;\nimport java.awt.image.Raster;\nimport java.awt.image.WritableRaster;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport javax.imageio.ImageIO;\nimport javax.imageio.ImageReader;\nimport javax.imageio.metadata.IIOMetadata;\nimport javax.imageio.metadata.IIOMetadataNode;\nimport javax.imageio.stream.ImageInputStream;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.apache.pdfbox.cos.COSDictionary;\nimport org.w3c.dom.Element;\n\n/**\n * Decompresses data encoded using a DCT (discrete cosine transform)\n * technique based on the JPEG standard.\n *\n * @author John Hewson\n */\nfinal class DCTFilter extends Filter\n{\n    private static final Log LOG = LogFactory.getLog(DCTFilter.class);\n\n    @Override\n    public DecodeResult decode(InputStream encoded, OutputStream decoded,\n                                         COSDictionary parameters, int index) throws IOException\n    {\n        ImageReader reader = findImageReader(\"JPEG\", \"a suitable JAI I/O image filter is not installed\");\n        ImageInputStream iis = null;\n        try\n        {\n            iis = ImageIO.createImageInputStream(encoded);\n\n            reader.setInput(iis);\n\n            // Get the raster \n            Raster raster;\n\n            // Strategy 3 by Harald Kuhr:\n            // Read raster directly, faster. No color conversion done by the reader.\n            // Will give you the data exactly as in the stream.\n            // YCbCr or YCCK conversion/inversion must be done by DCTFilter class.\n            // Not sure if PDF embedded JPEGs are allowed to contain ICC profiles; if they do, \n            // you might need to perform additional ColorConvertOp on the raster. \n            raster = reader.readRaster(0, null);\n\n            String colorSpace = getColorSpace(reader); // Get color space from Standard metadata,\n\n            if (\"YCbCr\".equals(colorSpace))\n            {\n                YCbCrConverter.convertYCbCr2RGB(raster); // Similar to fromYCCKtoCMYK, feel free to see my code\n            }\n            else if (\"YCCK\".equals(colorSpace))\n            {\n                raster = fromYCCKtoCMYK(raster);\n            }\n            // ...else, CMYK, GRAY and RGB left as-is.            \n\n            DataBufferByte dataBuffer = (DataBufferByte)raster.getDataBuffer();\n            decoded.write(dataBuffer.getData());\n        }\n        finally\n        {\n            if (iis != null)\n            {\n                iis.close();\n            }\n            reader.dispose();\n        }\n        return new DecodeResult(parameters);\n    }\n\n    // converts YCCK image to CMYK. YCCK is an equivalent encoding for\n    // CMYK data, so no color management code is needed here, nor does the\n    // PDF color space have to be consulted\n    private WritableRaster fromYCCKtoCMYK(Raster raster) throws IOException\n    {\n        WritableRaster writableRaster = raster.createCompatibleWritableRaster();\n\n        int[] value = new int[4];\n        for (int y = 0, height = raster.getHeight(); y < height; y++)\n        {\n            for (int x = 0, width = raster.getWidth(); x < width; x++)\n            {\n                raster.getPixel(x, y, value);\n\n                // 4-channels 0..255\n                float Y = value[0];\n                float Cb = value[1];\n                float Cr = value[2];\n                float K = value[3];\n\n                // YCCK to RGB, see http://software.intel.com/en-us/node/442744\n                int r = clamp(Y + 1.402f * Cr - 179.456f);\n                int g = clamp(Y - 0.34414f * Cb - 0.71414f * Cr + 135.45984f);\n                int b = clamp(Y + 1.772f * Cb - 226.816f);\n\n                // naive RGB to CMYK\n                int cyan = 255 - r;\n                int magenta = 255 - g;\n                int yellow = 255 - b;\n\n                // update new raster\n                value[0] = cyan;\n                value[1] = magenta;\n                value[2] = yellow;\n                value[3] = (int)K;\n                writableRaster.setPixel(x, y, value);\n            }\n        }\n        return writableRaster;\n    }\n\n    // clamps value to 0-255 range\n    private int clamp(float value)\n    {\n        return (int)((value < 0) ? 0 : ((value > 255) ? 255 : value));\n    }\n\n    @Override\n    protected void encode(InputStream input, OutputStream encoded, COSDictionary parameters)\n            throws IOException\n    {\n        LOG.warn(\"DCTFilter#encode is not implemented yet, skipping this stream.\");\n    }\n\n    // returns the color space as a string, or an empty string if there is an error getting the meta data\n    private String getColorSpace(ImageReader reader) throws IOException\n    {\n        try\n        {\n            IIOMetadata imageMetadata = reader.getImageMetadata(0);\n            if (imageMetadata == null)\n            {\n                return \"\";\n            }\n\n            IIOMetadataNode metaTree = (IIOMetadataNode) imageMetadata.getAsTree(\"javax_imageio_1.0\");\n            Element colorSpaceType = (Element) metaTree.getElementsByTagName(\"ColorSpaceType\").item(0);\n            if (colorSpaceType == null)\n            {\n                return \"\";\n            }\n\n            return colorSpaceType.getAttribute(\"name\");\n        }\n        catch (IOException e)\n        {\n            return \"\";\n        }\n    }\n\n    /**\n     * Static inner class for lazy-loading of conversion tables.\n     *\n     * @author <a href=\"mailto:harald.kuhr@gmail.com\">Harald Kuhr</a>\n     * @author Original code by Werner Randelshofer\n     */\n    static final class YCbCrConverter\n    {\n        /**\n         * Define tables for YCC->RGB color space conversion.\n         */\n        private final static int SCALEBITS = 16;\n        private final static int MAXJSAMPLE = 255;\n        private final static int CENTERJSAMPLE = 128;\n        private final static int ONE_HALF = 1 << (SCALEBITS - 1);\n\n        private final static int[] Cr_R_LUT = new int[MAXJSAMPLE + 1];\n        private final static int[] Cb_B_LUT = new int[MAXJSAMPLE + 1];\n        private final static int[] Cr_G_LUT = new int[MAXJSAMPLE + 1];\n        private final static int[] Cb_G_LUT = new int[MAXJSAMPLE + 1];\n\n        /**\n         * Initializes tables for YCC->RGB color space conversion.\n         */\n        private static void buildYCCtoRGBtable()\n        {\n            for (int i = 0, x = -CENTERJSAMPLE; i <= MAXJSAMPLE; i++, x++)\n            {\n                // i is the actual input pixel value, in the range 0..MAXJSAMPLE\n                // The Cb or Cr value we are thinking of is x = i - CENTERJSAMPLE\n                // Cr=>R value is nearest int to 1.40200 * x\n                Cr_R_LUT[i] = (int) ((1.40200 * (1 << SCALEBITS) + 0.5) * x + ONE_HALF) >> SCALEBITS;\n                // Cb=>B value is nearest int to 1.77200 * x\n                Cb_B_LUT[i] = (int) ((1.77200 * (1 << SCALEBITS) + 0.5) * x + ONE_HALF) >> SCALEBITS;\n                // Cr=>G value is scaled-up -0.71414 * x\n                Cr_G_LUT[i] = -(int) (0.71414 * (1 << SCALEBITS) + 0.5) * x;\n                // Cb=>G value is scaled-up -0.34414 * x\n                // We also add in ONE_HALF so that need not do it in inner loop\n                Cb_G_LUT[i] = -(int) ((0.34414) * (1 << SCALEBITS) + 0.5) * x + ONE_HALF;\n            }\n        }\n\n        static\n        {\n            buildYCCtoRGBtable();\n        }\n\n        static void convertYCbCr2RGB(final Raster raster)\n        {\n            final int height = raster.getHeight();\n            final int width = raster.getWidth();\n            final byte[] data = ((DataBufferByte) raster.getDataBuffer()).getData();\n\n            for (int y = 0; y < height; y++)\n            {\n                for (int x = 0; x < width; x++)\n                {\n                    convertYCbCr2RGB(data, data, (x + y * width) * 3);\n                }\n            }\n        }\n\n        static void convertYCbCr2RGB(final byte[] yCbCr, final byte[] rgb, final int offset)\n        {\n            int y = yCbCr[offset] & 0xff;\n            int cr = yCbCr[offset + 2] & 0xff;\n            int cb = yCbCr[offset + 1] & 0xff;\n\n            rgb[offset] = clamp(y + Cr_R_LUT[cr]);\n            rgb[offset + 1] = clamp(y + (Cb_G_LUT[cb] + Cr_G_LUT[cr] >> SCALEBITS));\n            rgb[offset + 2] = clamp(y + Cb_B_LUT[cb]);\n        }\n\n        static void convertYCCK2CMYK(final Raster raster)\n        {\n            final int height = raster.getHeight();\n            final int width = raster.getWidth();\n            final byte[] data = ((DataBufferByte) raster.getDataBuffer()).getData();\n\n            for (int y = 0; y < height; y++)\n            {\n                for (int x = 0; x < width; x++)\n                {\n                    convertYCCK2CMYK(data, data, (x + y * width) * 4);\n                }\n            }\n        }\n\n        private static void convertYCCK2CMYK(byte[] ycck, byte[] cmyk, int offset)\n        {\n            // Inverted\n            int y = 255 - ycck[offset] & 0xff;\n            int cb = 255 - ycck[offset + 1] & 0xff;\n            int cr = 255 - ycck[offset + 2] & 0xff;\n            int k = 255 - ycck[offset + 3] & 0xff;\n\n            int cmykC = MAXJSAMPLE - (y + Cr_R_LUT[cr]);\n            int cmykM = MAXJSAMPLE - (y + (Cb_G_LUT[cb] + Cr_G_LUT[cr] >> SCALEBITS));\n            int cmykY = MAXJSAMPLE - (y + Cb_B_LUT[cb]);\n\n            cmyk[offset] = clamp(cmykC);\n            cmyk[offset + 1] = clamp(cmykM);\n            cmyk[offset + 2] = clamp(cmykY);\n            cmyk[offset + 3] = (byte) k; // K passes through unchanged\n        }\n\n        private static byte clamp(int val)\n        {\n            return (byte) Math.max(0, Math.min(255, val));\n        }\n    }\n}\n```\n\nI am also attaching\n- OK rendered page\n- badly rendered pages\n- two JPEGs within the PDF file\n\nI'm aware that I have made better bug reports. If this one doesn't help, I could try creating \ndifferent snapshots of twelvemonkeys to tell when \"it happened\".\n\n![pdfbox-1058 pdf-3](https://cloud.githubusercontent.com/assets/6665575/6760122/32f749b8-cf46-11e4-809f-95eaf0136d45.png)\n\n![_pdfbox-1058 pdf-3](https://cloud.githubusercontent.com/assets/6665575/6760127/41d09976-cf46-11e4-9462-fc0acfe9f06c.png)\n![dct-1426881978101](https://cloud.githubusercontent.com/assets/6665575/6760129/475b3176-cf46-11e4-85a9-648d6b4219bf.jpg)\n![dct-1426881978181](https://cloud.githubusercontent.com/assets/6665575/6760131/4a1cdac2-cf46-11e4-856b-f68ed7ef5660.jpg)\n", "closed": "2015-03-21 17:28:18", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/121", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "Regression with reading jpegs"}, {"created": "2015-03-19 20:56:09", "user": "haraldk", "body": "For broken (\"tables only\") image. \n", "closed": "2015-03-19 20:57:42", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/120", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "JPEGImageReader throws IndexOutOfBoundsException for getNumImages(true)"}, {"created": "2015-03-19 17:10:08", "user": "THausherr", "body": "reader.getImageMetadata(0) on the attached (broken) jpeg file never comes back.\n(The attached file is a renamed ZIP file, the jpeg is within)\n\n![endless zip](https://cloud.githubusercontent.com/assets/6665575/6736113/1ec8ace0-ce63-11e4-94d8-63cb06accee1.jpg)\n", "closed": "2015-03-19 20:34:39", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/119", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "endless loop attempting to read meta in jpeg"}, {"created": "2015-03-12 11:54:48", "user": "haraldk", "body": "```\njavax.imageio.metadata.IIOInvalidTreeException: componentId attribute out of range\n    at com.sun.imageio.plugins.jpeg.MarkerSegment.getAttributeValue(MarkerSegment.java:164)\n    at com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.<init>(SOFMarkerSegment.java:243)\n    at com.sun.imageio.plugins.jpeg.SOFMarkerSegment.updateFromNativeNode(SOFMarkerSegment.java:149)\n    at com.sun.imageio.plugins.jpeg.SOFMarkerSegment.<init>(SOFMarkerSegment.java:95)\n    at com.sun.imageio.plugins.jpeg.JPEGMetadata.setFromMarkerSequenceNode(JPEGMetadata.java:2233)\n    at com.sun.imageio.plugins.jpeg.JPEGMetadata.setFromNativeTree(JPEGMetadata.java:2208)\n    at com.sun.imageio.plugins.jpeg.JPEGMetadata.setFromTree(JPEGMetadata.java:2168)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImage10MetadataCleaner.cleanMetadata(JPEGImage10MetadataCleaner.java:261)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageMetadata(JPEGImageReader.java:1110)\n```\n", "closed": "2015-03-12 11:57:33", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/117", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "javax.imageio.metadata.IIOInvalidTreeException: componentId attribute out of range"}, {"created": "2015-03-11 13:35:42", "user": "haraldk", "body": "", "closed": "2015-03-11 19:47:51", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/116", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "EXIFReader throws exception reading bad Interop sub-IFD"}, {"created": "2015-03-10 17:11:56", "user": "haraldk", "body": "Some perfectly readable (although very low quality) images, causes the following exception when trying to access the metadata. The DQT claims to have precision 1 (ie. 16 bit), however the data is not. Should be possible to disregard this and get metadata?\n\n```\njavax.imageio.IIOException: Unsupported element precision\n    at com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.<init>(DQTMarkerSegment.java:227)\n    at com.sun.imageio.plugins.jpeg.DQTMarkerSegment.<init>(DQTMarkerSegment.java:61)\n    at com.sun.imageio.plugins.jpeg.JPEGMetadata.<init>(JPEGMetadata.java:195)\n    at com.sun.imageio.plugins.jpeg.JPEGImageReader.getImageMetadata(JPEGImageReader.java:1023)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageMetadata(JPEGImageReader.java:1094)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGMassTester.readFile(JPEGMassTester.java:57)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGMassTester.main(JPEGMassTester.java:30)\n```\n", "closed": "2015-03-23 09:30:22", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/115", "ttf": 12.000277777777777, "commits": {}, "labels": ["Bug"], "title": "javax.imageio.IIOException: Unsupported element precision"}, {"created": "2015-03-10 14:43:52", "user": "haraldk", "body": "TIFF sub-directories are not linked, instead the tag value contains one or more offsets to sub-directories. The current implementation attempts to read linked sub-directories, misinterpreting random data as an IFD pointer, and causing bad tag output like below, and possibly `EOFException` later:\n\n```\nBad EXIFtagId: 2 \ntype: 32 (INVALID)\ncount: 9568256\n0000000c: 0200 2000 0000 9200 0000 0f01 0200 1800 0000 b200 0000 1001 0200 0a00 0000 ca00  .. .............................\n0000002c: 0000 1201 0300 0100 0000 0100 1400 1a01 0500 0100 0000 d400 0000 1b01 0500 0100  ................................\n0000004c: 0000 dc00 0000 2801 0300 0100 0000 0200 1400 3101 0200 0900 0000 e400 0000 3201  ......(...........1...........2.\n0000006c: 0200 1400 0000 ed00 0000 1302 0300 0100 0000 0200 1400 6987 0400 0100 0000 0101  ......................i.........[...]\n\njava.io.EOFException\n    at javax.imageio.stream.ImageInputStreamImpl.readShort(ImageInputStreamImpl.java:229)\n    at javax.imageio.stream.ImageInputStreamImpl.readUnsignedShort(ImageInputStreamImpl.java:242)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:92)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:113)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readSubdirectories(EXIFReader.java:152)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:121)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readSubdirectories(EXIFReader.java:152)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:121)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.read(EXIFReader.java:83)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readThumbnailMetadata(JPEGImageReader.java:1017)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getNumThumbnails(JPEGImageReader.java:1053)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGMassTester.readFile(JPEGMassTester.java:58)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGMassTester.main(JPEGMassTester.java:30)\n```\n", "closed": "2015-03-10 18:03:27", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/114", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "EXIFReader incorrectly tries to read linked subdirectories, causing EOFException and bad tag output"}, {"created": "2015-03-10 13:46:15", "user": "haraldk", "body": "Found another one of the \"Inconsistent metadata read from stream\" files. We might need to filter out more segments, or just replace the entire metadata with our own implementation.\n\n```\njavax.imageio.IIOException: Inconsistent metadata read from stream\n    at com.sun.imageio.plugins.jpeg.JPEGMetadata.<init>(JPEGMetadata.java:362)\n    at com.sun.imageio.plugins.jpeg.JPEGImageReader.getImageMetadata(JPEGImageReader.java:1023)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageMetadata(JPEGImageReader.java:1094)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGMassTester.readFile(JPEGMassTester.java:57)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGMassTester.main(JPEGMassTester.java:30)\n```\n\n![229392](https://cloud.githubusercontent.com/assets/110299/6576022/3223f988-c734-11e4-9069-c821fd9b9476.jpg)\n", "closed": "2015-03-16 11:06:11", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/113", "ttf": 5.000277777777778, "commits": {}, "labels": ["Bug"], "title": "javax.imageio.IIOException: Inconsistent metadata read from stream"}, {"created": "2015-03-10 12:17:20", "user": "haraldk", "body": "Attached image causes exception when trying to read image metadata:\n\n```\njavax.imageio.metadata.IIOInvalidTreeException: Invalid DHT node\n    at com.sun.imageio.plugins.jpeg.DHTMarkerSegment.<init>(DHTMarkerSegment.java:87)\n    at com.sun.imageio.plugins.jpeg.JPEGMetadata.setFromMarkerSequenceNode(JPEGMetadata.java:2223)\n    at com.sun.imageio.plugins.jpeg.JPEGMetadata.setFromNativeTree(JPEGMetadata.java:2208)\n    at com.sun.imageio.plugins.jpeg.JPEGMetadata.setFromTree(JPEGMetadata.java:2168)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImage10MetadataCleaner.cleanMetadata(JPEGImage10MetadataCleaner.java:261)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageMetadata(JPEGImageReader.java:1110)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.main(JPEGImageReader.java:1460)\n```\n\n![219251](https://cloud.githubusercontent.com/assets/110299/6574718/b16ed7ce-c727-11e4-9802-171eeb860eb0.jpg)\n", "closed": "2015-03-11 19:48:19", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/112", "ttf": 1.0002777777777778, "commits": {}, "labels": ["Bug"], "title": "javax.imageio.metadata.IIOInvalidTreeException: Invalid DHT node"}, {"created": "2015-03-10 09:18:22", "user": "haraldk", "body": "**Update** There doesn't seem to be anything wrong with the image. However, there's something bad happening causing the reader (`JPEGBuffer`) to skip data...\n\nThe data in the stream looks like this:\n\n```\nFF DA 00 08 01 01 01 06 3F 02 0E 70 9A A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 A2 64 05 5D ...\n```\n\n..but the JPEGBuffer class contains:\n\n```\nFF DA 00 08 A2 A2 A2 A2 A2 64 05 5D 02 87 FC 5B 5C E1 0E BD ...\n            *****************??\n```\n\n15 bytes missing..? \n## \n\nIt seems `com.sun.imageio.plugins.jpeg.SOSMarkerSegment` doesn't do proper input validation, and might choke on negative component size. Or perhaps the negative component size is just a side effect of a bad read earlier/incorrect offset. The image can be read correctly, but an exception is thrown if one tries to read the image metadata: \n\n```\njava.lang.NegativeArraySizeException\n    at com.sun.imageio.plugins.jpeg.SOSMarkerSegment.<init>(SOSMarkerSegment.java:73)\n    at com.sun.imageio.plugins.jpeg.JPEGMetadata.<init>(JPEGMetadata.java:319)\n    at com.sun.imageio.plugins.jpeg.JPEGImageReader.getImageMetadata(JPEGImageReader.java:1023)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageMetadata(JPEGImageReader.java:1094)\n```\n\n![182030](https://cloud.githubusercontent.com/assets/110299/6575916/67cba7bc-c733-11e4-85f3-4b3bd5de56db.jpg)\n", "closed": "2015-03-16 11:13:56", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/111", "ttf": 6.000277777777778, "commits": {}, "labels": ["Bug"], "title": "NegativeArraySizeException when reading image metadata"}, {"created": "2015-03-10 09:04:18", "user": "haraldk", "body": "```\nBad EXIFtagId: 0 (INVALID)\ntype: 23296 (INVALID)\ncount: 1952672112\n/Downloads/jpg/515/515402.jpg\njava.lang.OutOfMemoryError: Java heap space\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readEntry(EXIFReader.java:234)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:95)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readSubdirectories(EXIFReader.java:152)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:121)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readSubdirectories(EXIFReader.java:152)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.readDirectory(EXIFReader.java:121)\n    at com.twelvemonkeys.imageio.metadata.exif.EXIFReader.read(EXIFReader.java:83)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readThumbnailMetadata(JPEGImageReader.java:1017)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getNumThumbnails(JPEGImageReader.java:1053)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.main(JPEGImageReader.java:1469)\n```\n", "closed": "2015-03-10 09:15:11", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/110", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "EXIFReader may cause OutOfMemoryError for invalid tags"}, {"created": "2015-03-06 22:41:39", "user": "THausherr", "body": "I get this exception with the attached file:\n\n```\nException in thread \"main\" java.lang.NullPointerException\n  at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(Unknown Source)\n  at javax.imageio.ImageIO.read(ImageIO.java:1448)\n  at javax.imageio.ImageIO.read(ImageIO.java:1308)\n  at JpegMassTest.main(JpegMassTest.java:20)\n```\n\n![dct-1425666923550](https://cloud.githubusercontent.com/assets/6665575/6537737/1b1e0dfa-c45a-11e4-9790-a4bebbaf9e25.jpg)\n![dct-1425666923550 zip](https://cloud.githubusercontent.com/assets/6665575/6537748/3bbfeaf6-c45a-11e4-9ae1-d1dc4e988b57.png)\n\n(testing attaching it both as a jpeg and as a zip)\n", "closed": "2015-03-07 11:11:17", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/109", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "NullPointerException in JPEGImageReader.read"}, {"created": "2015-03-05 19:58:48", "user": "THausherr", "body": "I get this with the attached (broken) file:\n\n```\njava.lang.IndexOutOfBoundsException: Index: 2, Size: 2\n  at java.util.ArrayList.rangeCheck(ArrayList.java:635)\n  at java.util.ArrayList.get(ArrayList.java:411)\n  at com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.fetchSegment(Unknown Source)\n  at com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.repositionAsNecessary(Unknown Source)\n  at com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.read(Unknown Source)\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.readInputData(JPEGImageReader.java:307)\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.readImageHeader(Native Method)\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.readNativeHeader(JPEGImageReader.java:604)\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.checkTablesOnly(JPEGImageReader.java:342)\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.gotoImage(JPEGImageReader.java:476)\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.readHeader(JPEGImageReader.java:597)\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.readInternal(JPEGImageReader.java:1054)\n  at com.sun.imageio.plugins.jpeg.JPEGImageReader.readRaster(JPEGImageReader.java:1453)\n  at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readRaster(Unknown Source)\n```\n\nmy wish (as usual): an IIOException instead :-)\n\n![dct-1425584807450](https://cloud.githubusercontent.com/assets/6665575/6513311/59842196-c37a-11e4-965a-d92af587a8dd.jpg)\n", "closed": "2015-03-07 20:43:39", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/107", "ttf": 2.000277777777778, "commits": {}, "labels": ["Bug"], "title": "IndexOutOfBoundsException in reader.readRaster(0, null)"}, {"created": "2015-03-03 14:50:17", "user": "haraldk", "body": "", "closed": "2015-03-19 13:52:01", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/106", "ttf": 15.000277777777777, "commits": {}, "labels": ["Bug"], "title": "Fix bug in PICT PixMap reading"}, {"created": "2015-03-02 19:58:24", "user": "THausherr", "body": "```\nImageIO.read(new File(\"_422364.jpg\"));\n```\n\nworks fine with the sun reader, but not with twelvemonkeys:\n\n```\nException in thread \"main\" java.io.EOFException\nat java.io.DataInputStream.readUnsignedByte(DataInputStream.java:290)\nat com.twelvemonkeys.imageio.plugins.jpeg.JFIFSegment.read(Unknown Source)\nat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getJFIF(Unknown Source)\nat com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(Unknown Source)\nat javax.imageio.ImageIO.read(ImageIO.java:1448)\nat javax.imageio.ImageIO.read(ImageIO.java:1308)\nat JpegMassTest.main(JpegMassTest.java:20)\n```\n\n![_422364](https://cloud.githubusercontent.com/assets/6665575/6449120/cdb26194-c11e-11e4-8407-df0f6d389dc2.jpg)\n", "closed": "2015-03-03 08:39:39", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/105", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "EOFException only with twelvemonkeys"}, {"created": "2015-03-02 17:24:16", "user": "THausherr", "body": "In issue 102 you asked me to \"report a bug on one of the other image in the series, if they still have issues (ie. if the metadata still says YCbCr and 1 channel, which obviously can't happen)\". So there it is attached :-)\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><javax_imageio_1.0>\n  <Chroma>\n    <ColorSpaceType name=\"YCbCr\"/>\n    <NumChannels value=\"1\"/>\n  </Chroma>\n  <Compression>\n    <CompressionTypeName value=\"JPEG\"/>\n    <Lossless value=\"FALSE\"/>\n    <NumProgressiveScans value=\"1\"/>\n  </Compression>\n  <Dimension>\n    <ImageOrientation value=\"normal\"/>\n  </Dimension>\n</javax_imageio_1.0> \n```\n\n![176936-p154-1](https://cloud.githubusercontent.com/assets/6665575/6446096/e4a5ecba-c108-11e4-8d6e-a0865e9a60a7.jpg)\n", "closed": "2015-03-03 13:53:35", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/104", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "jpeg metadata YCbCr and 1 channel"}, {"created": "2015-02-27 21:16:16", "user": "THausherr", "body": "I get this with the attached (broken) file:\n![178360-p1](https://cloud.githubusercontent.com/assets/6665575/6421317/fe50ecec-becd-11e4-863e-910a32d99e69.jpg)\n\nException in thread \"main\" java.lang.NullPointerException\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getSourceCSType(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(Unknown Source)\n    at javax.imageio.ImageIO.read(ImageIO.java:1448)\n    at javax.imageio.ImageIO.read(ImageIO.java:1308)\n    at com.mycompany.preflightmasstest.PreflightMassTest.main(PreflightMassTest.java:27)\n\nAn IIOException would be nice :-)\n", "closed": "2015-03-02 09:38:18", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/103", "ttf": 2.000277777777778, "commits": {}, "labels": ["Bug"], "title": "NullPointerException in JPEGImageReader.getSourceCSType"}, {"created": "2015-02-27 20:56:56", "user": "THausherr", "body": "I get this with the attached file:\n\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 4841\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader$YCbCrConverter.convertYCbCr2RGB(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader$YCbCrConverter.convertYCbCr2RGB(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readImageAsRasterAndReplaceColorProfile(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(Unknown Source)\n    at javax.imageio.ImageIO.read(ImageIO.java:1448)\n    at javax.imageio.ImageIO.read(ImageIO.java:1308)\n\nthe \"standard\" jpeg reader of java is able to read the file.\n\nThe file has no meta data, but other jpeg files in the same series have this meta:\n\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><javax_imageio_1.0>\n  <Chroma>\n    <ColorSpaceType name=\"YCbCr\"/>\n    <NumChannels value=\"1\"/>\n  </Chroma>\n  <Compression>\n    <CompressionTypeName value=\"JPEG\"/>\n    <Lossless value=\"FALSE\"/>\n    <NumProgressiveScans value=\"1\"/>\n  </Compression>\n  <Dimension>\n    <ImageOrientation value=\"normal\"/>\n  </Dimension>\n</javax_imageio_1.0>\n```\n\n(I'm doing a mass test with PDF files. I'm reporting the few embedded JPEG files that bring errors but didn't have errors with the sun reader)\n![176936-p154-2](https://cloud.githubusercontent.com/assets/6665575/6420702/cdedebe0-bec8-11e4-8fc4-887efdc9981e.jpg)\n", "closed": "2015-03-02 09:37:12", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/102", "ttf": 2.000277777777778, "commits": {}, "labels": ["Bug"], "title": "ArrayIndexOutOfBoundsException for 1 channel file"}, {"created": "2015-02-27 15:59:59", "user": "THausherr", "body": "The attached jpeg file is broken, but opening it with ImageIO.read() fails gracefully: \"javax.imageio.IIOException: Bogus marker length\". However trying to gets its metadata brings an IndexOutOfBoundsException :-( My wish would be that reader.getImageMetadata(0) also fails with some IIOException.\n\nException in thread \"main\" java.lang.IndexOutOfBoundsException: off < 0 || len < 0 || off+len > b.length || off+len < 0!\n    at \n![485945-badjpeg](https://cloud.githubusercontent.com/assets/6665575/6415860/01f71262-bea2-11e4-8cfe-9b067c47f102.jpg)\njavax.imageio.stream.MemoryCacheImageInputStream.read(MemoryCacheImageInputStream.java:100)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStream.read(Unknown Source)\n    at com.sun.imageio.plugins.jpeg.JPEGBuffer.loadBuf(JPEGBuffer.java:106)\n    at com.sun.imageio.plugins.jpeg.JPEGMetadata.<init>(JPEGMetadata.java:171)\n    at com.sun.imageio.plugins.jpeg.JPEGImageReader.getImageMetadata(JPEGImageReader.java:1018)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageMetadata(Unknown Source)\n    at TwelveMonkeysTest.main(TwelveMonkeysTest.java:191)\n", "closed": "2015-03-02 09:34:40", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/101", "ttf": 2.000277777777778, "commits": {}, "labels": ["Bug"], "title": "IndexOutOfBoundsException when trying to get jpeg metadata"}, {"created": "2015-02-25 21:37:18", "user": "mjball", "body": "I get this exception trying to read one of the JPEG files I'm trying to process:\n\n```\nCaused by: java.lang.IllegalArgumentException: bandOffsets.length is wrong!\n    at javax.imageio.ImageTypeSpecifier$Interleaved.<init>(ImageTypeSpecifier.java:286)\n    at javax.imageio.ImageTypeSpecifier.createInterleaved(ImageTypeSpecifier.java:399)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageTypes(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readImageAsRasterAndReplaceColorProfile(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(Unknown Source)\n    at javax.imageio.ImageIO.read(ImageIO.java:1448)\n    at javax.imageio.ImageIO.read(ImageIO.java:1352)\n    at com.hubspot.imageutils.ImageUtils.getImage(ImageUtils.java:293)\n    at com.hubspot.imageutils.ImageUtils.resizeImage(ImageUtils.java:\n```\n\n![image](https://cloud.githubusercontent.com/assets/378111/6381053/649f7d56-bd0c-11e4-9b5f-993260b9956b.png)\n\nOriginal: http://pbs.twimg.com/profile_images/1877700001/logo.jpg\n\nHelp?\n", "closed": "2015-02-26 20:57:42", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/99", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "Unable to read JPEG image: \"IllegalArgumentException: bandOffsets.length is wrong!\""}, {"created": "2015-02-05 15:12:20", "user": "octavian-nita", "body": "Hi,\n\nI've just checked out the latest version of TwelveMonkeys and tried to build it from the main pom file. However, the build (tests actually) fails at the PICT plugin.\n\nTest machine / configuration:\n- Windows 7 Pro (Mac OS X fails as well)\n- jdk8\n- <sun.java2d.cmm>sun.java2d.cmm.kcms.KcmsServiceProvider</sun.java2d.cmm> set in the main pom.xml file\n\nBelow, the individual test report:\n-------------------------------------------------------------------------------\nTest set: com.twelvemonkeys.imageio.plugins.pict.PICTImageWriterTest\n-------------------------------------------------------------------------------\nTests run: 17, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.221 sec <<< FAILURE!\ntestWriteReadCompare(com.twelvemonkeys.imageio.plugins.pict.PICTImageWriterTest)  Time elapsed: 0.145 sec  <<< FAILURE!\njava.lang.AssertionError: Test data 6 R(10,0) expected:<851968.0> but was:<393216.0>\n    at org.junit.Assert.fail(Assert.java:91)\n    at org.junit.Assert.failNotEquals(Assert.java:645)\n    at org.junit.Assert.assertEquals(Assert.java:441)\n    at com.twelvemonkeys.imageio.plugins.pict.PICTImageWriterTest.testWriteReadCompare(Unknown Source)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:236)\n    at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)\n    at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)\n    at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)\n    at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)\n    at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)\n    at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)\n", "closed": "2015-02-06 09:42:14", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/94", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug", "New feature"], "title": "Test failure when building the PICT plugin on Java 8"}, {"created": "2015-02-04 05:43:22", "user": "mjball", "body": "Trying to read this image:\n\n![image](https://cloud.githubusercontent.com/assets/378111/6035701/f3bcff44-ac05-11e4-8bb2-4670c05c5050.png)\n\n(original: http://pbs.twimg.com/profile_images/1251399177/Logo_600_kb.jpg)\n\nI get this exception:\n\n```\njava.lang.IllegalArgumentException: Unknown color space\n    at java.awt.color.ICC_Profile.iccCStoJCS(ICC_Profile.java:1774) ~[na:1.8.0_25]\n    at java.awt.color.ICC_Profile.getColorSpaceType(ICC_Profile.java:1242) ~[na:1.8.0_25]\n    at java.awt.color.ICC_Profile.getColorSpaceType(ICC_Profile.java:1233) ~[na:1.8.0_25]\n    at java.awt.color.ICC_ColorSpace.<init>(ICC_ColorSpace.java:112) ~[na:1.8.0_25]\n    at com.twelvemonkeys.imageio.color.ColorSpaces.getCachedOrCreateCS(Unknown Source) ~[redacted.jar:1.0-SNAPSHOT]\n    at com.twelvemonkeys.imageio.color.ColorSpaces.createColorSpace(Unknown Source) ~[redacted.jar:1.0-SNAPSHOT]\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readImageAsRasterAndReplaceColorProfile(Unknown Source) ~[redacted.jar:1.0-SNAPSHOT]\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(Unknown Source) ~[redacted.jar:1.0-SNAPSHOT]\n    at javax.imageio.ImageIO.read(ImageIO.java:1448) ~[na:1.8.0_25]\n    at javax.imageio.ImageIO.read(ImageIO.java:1352) ~[na:1.8.0_25]\n```\n\nHere's what exiftool has to say about the image:\n\n```\nExifTool Version Number         : 9.76\nFile Name                       : unknown-color-space.jpg\nDirectory                       : .\nFile Size                       : 24 kB\nFile Modification Date/Time     : 2015:02:04 00:29:58-05:00\nFile Access Date/Time           : 2015:02:04 00:38:12-05:00\nFile Inode Change Date/Time     : 2015:02:04 00:33:17-05:00\nFile Permissions                : rw-r--r--\nFile Type                       : JPEG\nMIME Type                       : image/jpeg\nJFIF Version                    : 1.01\nCurrent IPTC Digest             : ef444f77d0e828fe18ecc49329439244\nCoded Character Set             : UTF8\nApplication Record Version      : 2\nObject Name                     : Logo\nIPTC Digest                     : ef444f77d0e828fe18ecc49329439244\nExif Byte Order                 : Big-endian (Motorola, MM)\nOrientation                     : Horizontal (normal)\nX Resolution                    : 300\nY Resolution                    : 300\nResolution Unit                 : inches\nSoftware                        : Adobe Photoshop CS4 Macintosh\nModify Date                     : 2009:11:12 16:14:00\nColor Space                     : Uncalibrated\nExif Image Width                : 3543\nExif Image Height               : 3549\nProfile CMM Type                : ADBE\nProfile Version                 : 2.1.0\nProfile Class                   : Output Device Profile\nColor Space Data                : GRAY\nProfile Connection Space        : XYZ\nProfile Date Time               : 1999:06:03 00:00:00\nProfile File Signature          : acsp\nPrimary Platform                : Apple Computer Inc.\nCMM Flags                       : Not Embedded, Independent\nDevice Manufacturer             : none\nDevice Model                    :\nDevice Attributes               : Reflective, Glossy, Positive, Color\nRendering Intent                : Unknown (16777216)\nConnection Space Illuminant     : 0.9642 1 0.82491\nProfile Creator                 : ADBE\nProfile ID                      : 0\nProfile Copyright               : Copyright 1999 Adobe Systems Incorporated\nProfile Description             : Dot Gain 20%\nMedia White Point               : 0.9642 1 0.82491\nMedia Black Point               : 0 0 0\nGray Tone Reproduction Curve    : (Binary data 524 bytes, use -b option to extract)\nXMP Toolkit                     : XMP Core 4.4.0\nTitle                           : Logo\nImage Width                     : 499\nImage Height                    : 500\nEncoding Process                : Baseline DCT, Huffman coding\nBits Per Sample                 : 8\nColor Components                : 1\nImage Size                      : 499x500\n```\n\nAny ideas on what's going wrong here? Thanks for providing this fantastic library.\n", "closed": "2015-02-04 08:54:35", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/93", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug", "Trouble-shooting"], "title": "Unable to read JPEG image: \"IllegalArgumentException: Unknown color space\""}, {"created": "2015-01-31 15:31:07", "user": "octavian-nita", "body": "Hello,\n\nFirst off -- Wow! What an amazing job you're doing with the TwelveMonkeys imaging library! Thank you!\n\nHaving said that, I noticed that when I am trying to render `BufferedImage`s loaded from **PSD** (Adobe Photoshop) documents saved with the **Adobe RGB** _color profile_, I get quite dull colors. This doesn't happen when I open the same documents in programs that support the PSD format, other than Photoshop, e.g. GIMP on any platform or Mac's Preview app.\n\nBelow there are two screenshots that illustrate the difference in rendering colors.\n\nRendered using TwelveMonkeys:\n![image](https://cloud.githubusercontent.com/assets/4410478/5988566/31b59808-a966-11e4-9545-744739fe2595.png)\n\nRendered in GIMP:\n![image](https://cloud.githubusercontent.com/assets/4410478/5988573/5e5733c6-a966-11e4-91b3-9f45ed284ba7.png)\n\nThe test file can be found here: http://github.com/octavian-nita/thepholio-desktop/blob/master/src/main/resources/samples/home-away-from-home.psd .\n", "closed": "2015-02-02 09:16:00", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/92", "ttf": 1.0002777777777778, "commits": {}, "labels": ["Bug"], "title": "Dull colors when rendering PSD files saved with Adobe RGB color profile"}, {"created": "2014-12-31 19:27:22", "user": "twelvemonkeysissue", "body": "Please rename the attached .png back to .tif. I added a .png extension to get around the attachment limitation.\n\nException in thread \"main\" java.lang.IndexOutOfBoundsException\n    at java.nio.Buffer.checkIndex(Buffer.java:512)\n    at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:154)\n    at com.twelvemonkeys.imageio.plugins.tiff.LZWDecoder$LZWString.writeTo(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.tiff.LZWDecoder.decode(Unknown Source)\n    at com.twelvemonkeys.io.enc.DecoderStream.fill(Unknown Source)\n    at com.twelvemonkeys.io.enc.DecoderStream.read(Unknown Source)\n    at java.nio.channels.Channels$ReadableByteChannelImpl.read(Channels.java:221)\n    at com.twelvemonkeys.imageio.plugins.tiff.HorizontalDeDifferencingStream.fetch(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.tiff.HorizontalDeDifferencingStream.read(Unknown Source)\n    at com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(Unknown Source)\n    at com.twelvemonkeys.io.LittleEndianDataInputStream.readFully(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.readStripTileData(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(Unknown Source)\n    at javax.imageio.ImageReader.read(ImageReader.java:923)\n\n![test 2 tif](https://cloud.githubusercontent.com/assets/10360202/5589977/f7f8472a-90ef-11e4-87a0-a71c858c9c3d.png)\n", "closed": "2015-01-02 16:50:05", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/89", "ttf": 1.0002777777777778, "commits": {}, "labels": ["Bug"], "title": "Exception in LZWDecoder when reading tiff"}, {"created": "2014-12-16 10:49:01", "user": "haraldk", "body": "When reading 16 bit TIFFs with signed integral data, the following stack trace occurs if you try to draw the image (see #85):\n\n```\njava.lang.ArrayIndexOutOfBoundsException: -65536\nat java.awt.image.ComponentColorModel.getRGBComponent(ComponentColorModel.java:903)\n```\n\nWe should try to provide a workaround for that (ComponentColorModel subclass).\n", "closed": "2015-10-23 12:53:08", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/87", "ttf": 311.0002777777778, "commits": {}, "labels": ["Bug", "New feature", "Trouble-shooting"], "title": "Workaround for ComponentColorModel.getRGBComponent throwing ArrayIndexOutOfBoundsException for SHORT (signed 16 bit)"}, {"created": "2014-12-02 13:02:21", "user": "michal-niklas", "body": "Hello,\n\nOne of TIFF images I tried to open with your plugin failed with exception:\n\ncom.twelvemonkeys.io.enc.DecodeException: TIFF LZW with more than 12 bits per code encountered (table overflow)\n    at com.twelvemonkeys.imageio.plugins.tiff.LZWDecoder.addStringToTable(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.tiff.LZWDecoder.decode(Unknown Source)\n    at com.twelvemonkeys.io.enc.DecoderStream.fill(Unknown Source)\n    at com.twelvemonkeys.io.enc.DecoderStream.read(Unknown Source)\n    at java.nio.channels.Channels$ReadableByteChannelImpl.read(Channels.java:385)\n    at com.twelvemonkeys.imageio.plugins.tiff.HorizontalDeDifferencingStream.fetch(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.tiff.HorizontalDeDifferencingStream.read(Unknown Source)\n    at java.io.DataInputStream.readFully(DataInputStream.java:195)\n...\n\nThis TIFF opens without problems with GIMP, Krusader preview or with Pythons PIL library. It seems to be grayscale, 8 bits per pixel, LZW compression.\n", "closed": "2014-12-04 18:40:35", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/84", "ttf": 2.000277777777778, "commits": {}, "labels": ["Bug"], "title": "Support for TIFF with LZW with more than 12 bits per code"}, {"created": "2014-11-16 11:47:13", "user": "haraldk", "body": "See http://stackoverflow.com/questions/26875429/how-to-create-bufferedimage-for-32-bits-per-sample-3-samples-image-data\n\nA local workaround is exists for the `TIFFImageReader`, but should be used globally, wherever we're using the full 32 bits per sample. \n", "closed": "2014-11-20 15:28:09", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/81", "ttf": 4.000277777777778, "commits": {}, "labels": ["Bug", "New feature"], "title": "ComponentColorModel is broken for int/32 bits per sample, introduce workaround"}, {"created": "2014-11-04 15:13:37", "user": "haraldk", "body": "", "closed": "2014-11-04 15:24:12", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/80", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "PCXImageReader source region is incorrectly applied"}, {"created": "2014-11-04 15:12:20", "user": "haraldk", "body": "A bug in `DecoderStream.skip(int len)` (the buffer position is never updated) causes no bytes to be skipped, even if the return value seems correct.\n", "closed": "2014-11-04 15:23:54", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/79", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "DecoderStream.skip doesn't really skip..."}, {"created": "2014-11-03 20:01:25", "user": "haraldk", "body": "There's a bug in the horizontal differencing Predictor in combination with Tiles, as the un-predictor is passed the width of the entire image, rather than the width of the tile.\n", "closed": "2014-11-03 20:11:06", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/77", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "Bug in Predictor for Tiled TIFFs"}, {"created": "2014-11-03 19:58:50", "user": "haraldk", "body": "The current implementation is broken. \n", "closed": "2014-11-03 20:04:18", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/76", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug", "New feature"], "title": "Support for 24/32 bit in PCXImageReader"}, {"created": "2014-11-03 19:57:41", "user": "haraldk", "body": "As the DCXImageReader doesn't wrap the ImageInputStream passed on to the PCXImageReader, seeks/offsets are wrong, thus producing a bad image.\n", "closed": "2014-11-03 20:05:09", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/75", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "Offset issue in the DCXImageReader"}, {"created": "2014-11-03 19:55:55", "user": "haraldk", "body": "Currently, the JPEGImageReader may throw NullPointerException, as it won't recognise the SOI marker if padded.\n", "closed": "2014-11-03 20:08:06", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/74", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug", "New feature"], "title": "Make JPEG segment parsing more lenient about trash bytes before markers"}, {"created": "2014-10-31 13:14:02", "user": "haraldk", "body": "TIFFImageReader (LZWDecoder) may throw IndexOutOfBoundsException if compressed run is longer than buffer size. \n\nQuick fix: Make sure buffer size is equal to image width.\n", "closed": "2014-10-31 13:16:14", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/72", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "TIFFImageReader (LZWDecoder) throws IndexOutOfBoundsException if compressed run is longer than buffer size"}, {"created": "2014-10-27 15:55:04", "user": "tpunder", "body": "I get this exception trying to read one of the TIFF files I'm trying to process:\n\n```\nCaused by: java.lang.IllegalArgumentException: bandOffsets.length is wrong!\n        at javax.imageio.ImageTypeSpecifier$Interleaved.<init>(ImageTypeSpecifier.java:286)\n        at javax.imageio.ImageTypeSpecifier.createInterleaved(ImageTypeSpecifier.java:399)\n        at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getRawImageType(Unknown Source)\n        at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.getImageTypes(Unknown Source)\n        at com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader.read(Unknown Source)\n```\n\nJAI seems to read it without the exception (although JAI has other issues which is why I'm trying to move away from it).\n\nI'm happy to email the TIFF file for debugging.  \n\nHere is what ImageMagick's `identify -verbose` says about it:\n\n```\nImage: /tmp/magick-0vcNPRfk\n  Base filename: -\n  Format: TIFF (Tagged Image File Format)\n  Class: DirectClass\n  Geometry: 1500x1500+0+0\n  Resolution: 300x300\n  Print size: 5x5\n  Units: PixelsPerInch\n  Type: TrueColor\n  Base type: TrueColor\n  Endianess: MSB\n  Colorspace: sRGB\n  Depth: 8-bit\n  Channel depth:\n    red: 8-bit\n    green: 8-bit\n    blue: 8-bit\n  Channel statistics:\n    Red:\n      min: 1 (0.00392157)\n      max: 255 (1)\n      mean: 222.729 (0.873448)\n      standard deviation: 54.7168 (0.214576)\n      kurtosis: 3.37358\n      skewness: -1.83475\n    Green:\n      min: 1 (0.00392157)\n      max: 255 (1)\n      mean: 228.19 (0.894862)\n      standard deviation: 48.8773 (0.191676)\n      kurtosis: 6.47753\n      skewness: -2.37876\n    Blue:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 223.201 (0.875298)\n      standard deviation: 55.6451 (0.218216)\n      kurtosis: 3.72092\n      skewness: -1.95672\n  Image statistics:\n    Overall:\n      min: 0 (0)\n      max: 255 (1)\n      mean: 224.707 (0.881203)\n      standard deviation: 53.1642 (0.208487)\n      kurtosis: 4.36383\n      skewness: -2.04576\n  Rendering intent: Perceptual\n  Gamma: 0.454545\n  Chromaticity:\n    red primary: (0.64,0.33)\n    green primary: (0.3,0.6)\n    blue primary: (0.15,0.06)\n    white point: (0.3127,0.329)\n  Interlace: None\n  Background color: white\n  Border color: srgb(223,223,223)\n  Matte color: grey74\n  Transparent color: black\n  Compose: Over\n  Page geometry: 1500x1500+0+0\n  Dispose: Undefined\n  Iterations: 0\n  Compression: None\n  Orientation: TopLeft\n  Properties:\n    date:create: 2014-10-27T08:40:44-07:00\n    date:modify: 2014-10-27T08:40:44-07:00\n    signature: e42b572bf79aeb61aaefd5ad9ba792fb5709331b14df8c92dae9e30d28303726\n    tiff:document: D:\\\\FTPRoot\\\\VSConversionService\\\\Temp\\\\\\0a20baf8-1022-437f-a894-7cef4a969665\\Master with dash TIF\\49379cc7-547d-4101-bbcb-df3eefdeadaf.tif\n    tiff:endian: lsb\n    tiff:photometric: RGB\n    tiff:rows-per-strip: 1\n  Clipping path:\n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<svg width=\"1500\" height=\"1500\">\n<g>\n<path style=\"fill:#00000000;stroke:#00000000;stroke-width:0;stroke-antialiasing:false\" d=\"\nM 756.48,963.331\nC 756.48,963.331 687.921,923.694 700.839,867.271\nC 700.839,867.271 700.202,869.665 697.928,840.549\nL 690.499,684.976\nL 685.981,538.895\nL 681.432,451.297\nC 681.432,451.297 681.129,442.696 682.736,441.221\nC 682.736,441.221 669.152,420.734 672.699,406.176\nC 672.699,406.176 669.394,416.197 658.963,432.007\nL 638.344,464.964\nC 638.344,464.964 629.126,479.661 616.754,480.107\nC 616.754,480.107 604.868,482.779 593.224,478.103\nC 593.224,478.103 587.887,484.338 584.976,485.674\nC 584.976,485.674 581.338,491.018 578.427,497.031\nC 578.427,497.031 573.575,502.598 570.179,504.825\nC 570.179,504.825 566.055,509.724 563.629,512.619\nC 563.629,512.619 553.926,522.417 551.5,523.53\nC 551.5,523.53 551.258,533.328 545.436,535.332\nC 545.436,535.332 543.738,542.013 539.371,543.126\nC 539.371,543.126 537.673,552.256 528.455,552.479\nC 528.455,552.479 533.792,570.962 518.024,574.97\nC 518.024,574.97 518.995,586.772 507.836,589.667\nC 507.836,589.667 509.777,603.474 497.405,603.028\nC 497.405,603.028 504.44,615.721 493.039,617.058\nC 493.039,617.058 476.543,614.385 485.519,619.73\nC 485.519,619.73 498.375,625.52 490.856,631.532\nC 490.856,631.532 487.459,633.759 481.637,632.868\nC 481.637,632.868 471.934,633.536 481.395,637.099\nC 481.395,637.099 491.826,642.221 486.489,648.901\nC 486.489,648.901 484.306,653.578 477.514,654.023\nC 477.514,654.023 489.157,661.817 483.335,668.72\nL 479.454,673.174\nC 479.454,673.174 489.643,683.863 479.697,690.989\nC 479.697,690.989 489.885,700.119 480.91,709.917\nC 480.91,709.917 485.519,714.816 486.489,720.383\nL 492.796,737.53\nC 492.796,737.53 497.89,742.651 494.009,745.324\nL 494.737,748.664\nL 495.95,749.555\nL 497.162,750.891\nC 497.162,750.891 500.073,757.571 497.648,761.357\nC 497.648,761.357 494.494,770.042 489.885,768.928\nL 483.335,768.928\nC 483.335,768.928 490.946,842.052 493.857,867.271\nL 514.871,1032.95\nL 525.302,1120.99\nC 525.302,1120.99 526.515,1131.01 524.817,1132.35\nC 524.817,1132.35 527.728,1133.24 527.485,1137.69\nL 531.851,1173.1\nC 531.851,1173.1 535.49,1174.88 535.005,1180.23\nC 535.005,1180.23 537.673,1181.12 535.975,1188.91\nC 535.975,1188.91 540.342,1191.58 536.946,1201.6\nC 536.946,1201.6 538.644,1202.05 538.159,1214.74\nL 539.371,1227.43\nC 539.371,1227.43 545.678,1220.53 554.896,1225.43\nC 554.896,1225.43 569.451,1234.12 567.268,1237.68\nL 567.268,1257.27\nC 567.268,1257.27 570.179,1267.74 567.996,1271.08\nC 567.996,1271.08 565.085,1275.09 558.778,1274.42\nC 558.778,1274.42 555.139,1274.87 552.228,1273.31\nL 549.56,1273.75\nL 549.802,1284.66\nC 549.802,1284.66 547.862,1290.9 544.708,1292.9\nL 544.951,1296.69\nC 544.951,1296.69 558.535,1300.92 560.233,1312.28\nL 560.476,1321.63\nC 560.476,1321.63 562.902,1321.63 567.026,1321.85\nC 567.026,1321.85 569.209,1336.33 567.026,1340.11\nL 565.085,1343.23\nL 567.026,1376.63\nC 567.026,1376.63 569.451,1378.19 570.179,1381.75\nL 571.149,1391.78\nC 571.149,1391.78 577.699,1396.45 579.64,1402.91\nC 579.64,1402.91 580.367,1404.91 585.947,1408.7\nC 585.947,1408.7 586.432,1407.14 588.858,1432.75\nL 590.798,1457.24\nC 590.798,1457.24 592.011,1461.03 588.615,1463.93\nC 588.615,1463.93 583.764,1466.82 582.793,1466.82\nC 581.823,1466.82 581.823,1470.83 581.823,1470.83\nC 581.823,1470.83 582.793,1471.94 577.699,1475.95\nC 577.699,1475.95 568.966,1486.42 539.129,1491.76\nL 510.504,1497.11\nC 510.504,1497.11 506.381,1498.22 503.47,1495.77\nL 484.548,1483.74\nC 484.548,1483.74 484.548,1481.52 480.182,1484.41\nC 480.182,1484.41 479.454,1486.64 470.964,1483.97\nL 442.582,1476.62\nL 384.363,1443.66\nL 342.882,1418.94\nC 342.882,1418.94 338.03,1413.15 330.51,1402.02\nC 330.51,1402.02 329.297,1401.57 327.599,1390.22\nL 323.961,1352.81\nC 323.961,1352.81 322.02,1348.57 327.842,1347.46\nC 327.842,1347.46 331.966,1345.68 334.149,1348.57\nL 329.055,1288\nL 327.357,1269.3\nL 338.515,1255.27\nL 352.828,1263.73\nC 352.828,1263.73 353.798,1260.61 357.194,1256.16\nC 357.194,1256.16 365.927,1245.03 371.991,1240.8\nL 372.476,1234.78\nC 372.476,1234.78 368.11,1231.67 367.867,1228.1\nL 367.382,1224.99\nC 367.382,1224.99 366.412,1223.2 366.412,1227.88\nL 362.773,1227.43\nL 362.046,1211.18\nC 362.046,1211.18 359.862,1211.62 360.347,1209.17\nC 360.347,1209.17 357.194,1208.73 357.437,1204.94\nC 357.437,1204.94 356.466,1200.71 360.347,1200.94\nC 360.347,1200.94 359.377,1186.68 365.684,1183.79\nL 364.957,1166.42\nC 364.957,1166.42 364.229,1161.74 362.531,1154.17\nC 362.531,1154.17 361.318,1147.71 363.258,1147.27\nC 363.258,1147.27 360.347,1139.92 362.046,1137.92\nC 362.046,1137.92 361.075,1129.23 362.773,1127\nC 362.773,1127 361.318,1117.65 363.744,1115.2\nC 363.744,1115.2 347.491,1103.18 356.951,1090.48\nC 356.951,1090.48 348.704,1079.35 356.224,1070.89\nC 356.224,1070.89 347.976,1060.87 355.496,1052.18\nC 355.496,1052.18 347.248,1043.05 354.768,1033.03\nC 354.768,1033.03 347.248,1021.23 354.768,1014.33\nC 354.768,1014.33 348.219,1003.64 355.011,994.952\nC 355.011,994.952 349.189,982.928 355.981,976.024\nC 355.981,976.024 349.917,963.999 356.951,957.542\nC 356.951,957.542 350.644,947.298 357.922,938.613\nC 357.922,938.613 351.129,927.034 358.892,919.24\nC 358.892,919.24 354.768,903.652 360.833,900.089\nC 360.833,900.089 355.011,888.287 362.773,881.384\nC 362.773,881.384 355.496,873.59 364.471,861.342\nC 364.471,861.342 358.164,852.435 366.897,842.191\nC 366.897,842.191 361.803,831.057 369.323,822.372\nC 369.323,822.372 362.773,811.461 372.234,802.108\nC 372.234,802.108 364.957,792.755 375.145,782.289\nC 375.145,782.289 367.382,772.491 379.026,761.357\nC 379.026,761.357 368.838,749.777 382.18,741.093\nC 382.18,741.093 377.571,736.639 377.328,732.185\nC 377.328,732.185 363.986,773.605 342.639,883.61\nC 342.639,883.61 330.844,938.836 321.777,1002.38\nC 321.777,1002.38 316.926,1027.6 312.711,1073.03\nC 312.711,1073.03 304.311,1138.67 300.764,1154.39\nC 300.764,1154.39 295.245,1154.39 325.659,1171.01\nL 336.089,1176.44\nL 333.421,1187.57\nL 330.753,1187.57\nL 328.327,1196.48\nL 326.144,1196.7\nL 323.475,1206.06\nL 321.777,1206.06\nL 313.772,1239.24\nL 313.044,1242.8\nC 313.044,1242.8 310.861,1248.14 308.921,1249.26\nL 305.039,1252.82\nC 305.039,1252.82 302.371,1254.6 301.886,1257.72\nL 291.94,1295.13\nC 291.94,1295.13 290.727,1300.47 290.97,1301.81\nC 290.97,1301.81 289.999,1304.26 289.029,1304.48\nL 288.544,1306.71\nL 287.088,1306.49\nL 285.148,1306.04\nL 283.207,1305.37\nL 281.509,1304.26\nL 280.053,1302.92\nL 278.841,1305.82\nL 276.415,1306.93\nL 275.687,1306.04\nL 272.776,1305.82\nC 271.806,1306.04 270.35,1306.49 270.35,1306.49\nL 268.895,1306.71\nL 267.197,1306.71\nL 266.227,1307.38\nL 230.81,1285.11\nL 225.23,1285.78\nL 219.409,1282.88\nL 220.864,1275.53\nL 217.468,1273.75\nL 215.042,1279.99\nL 206.067,1274.87\nL 215.285,1233.45\nL 230.325,1174.44\nL 228.384,1173.77\nL 231.537,1162.63\nL 230.325,1161.74\nL 232.508,1151.28\nL 230.81,1150.16\nL 232.508,1141.48\nC 232.508,1141.48 232.993,1137.92 237.359,1138.14\nL 257.008,1137.25\nL 265.014,1062.2\nC 265.014,1062.2 272.048,1002.52 275.93,985.377\nC 275.93,985.377 286.361,915.677 287.331,915.009\nC 288.301,914.341 300.188,840.187 305.524,820.814\nC 305.524,820.814 316.926,771.378 320.807,759.575\nC 320.807,759.575 335.362,706.576 344.095,681.859\nC 344.095,681.859 357.922,638.435 369.323,613.272\nC 369.323,613.272 396.734,547.357 409.349,525.757\nL 427.785,491.686\nC 427.785,491.686 425.116,480.775 436.032,475.431\nC 436.032,475.431 429.725,462.737 443.552,456.057\nC 443.552,456.057 437.003,442.028 451.557,436.461\nC 451.557,436.461 445.25,423.545 459.805,417.31\nC 459.805,417.31 454.226,403.058 469.994,398.159\nC 469.994,398.159 463.929,385.021 480.182,380.122\nC 480.182,380.122 473.632,367.651 490.37,361.862\nC 490.37,361.862 486.246,348.055 502.014,344.27\nC 502.014,344.27 498.861,331.131 514.143,327.346\nC 514.143,327.346 509.534,314.875 526.515,310.644\nC 526.515,310.644 522.633,297.729 539.129,294.611\nC 539.129,294.611 536.703,280.137 551.986,278.8\nC 551.986,278.8 549.075,265.662 564.842,262.99\nC 564.842,262.99 563.144,248.738 578.184,247.847\nC 578.184,247.847 575.031,235.154 591.526,232.26\nC 591.526,232.26 587.887,220.457 603.655,217.562\nC 603.655,217.562 601.714,206.651 616.027,202.643\nC 616.027,202.643 616.269,190.172 628.398,187.945\nC 628.398,187.945 627.185,177.702 641.498,173.916\nC 641.498,173.916 640.527,168.794 642.953,167.681\nC 642.953,167.681 642.71,159.887 648.047,156.77\nC 648.047,156.77 649.018,147.194 662.602,143.409\nC 662.602,143.409 664.543,136.283 670.365,133.61\nC 670.365,133.61 671.092,124.926 678.37,120.249\nC 678.37,120.249 678.855,111.565 687.103,107.556\nC 687.103,107.556 687.588,99.0943 693.895,95.7541\nC 693.895,95.7541 694.623,89.9644 701.657,84.1745\nC 701.657,84.1745 704.568,77.0486 708.935,74.599\nC 708.935,74.599 728.099,40.5284 754.782,32.2891\nC 754.782,32.2891 789.957,23.8272 804.026,56.5617\nC 804.026,56.5617 808.15,68.8094 806.937,82.3931\nC 806.937,82.3931 841.383,62.1289 887.716,59.4566\nC 887.716,59.4566 934.777,54.7803 986.204,79.9435\nL 987.659,80.6116\nL 1069.89,76.826\nC 1069.89,76.826 1081.54,65.2464 1093.42,77.0486\nC 1093.42,77.0486 1108.22,66.5825 1119.87,82.1704\nC 1119.87,82.1704 1134.91,73.9311 1143.88,92.1911\nC 1143.88,92.1911 1162.8,92.4138 1163.77,109.338\nC 1163.77,109.338 1168.38,109.338 1170.81,111.565\nC 1170.81,111.565 1190.94,108.893 1190.94,116.909\nC 1190.94,116.909 1191.67,124.703 1179.78,123.144\nC 1179.78,123.144 1181.24,128.489 1179.3,132.274\nC 1179.3,132.274 1200.4,142.74 1186.09,157.883\nC 1186.09,157.883 1196.76,163.895 1195.55,171.244\nC 1195.55,171.244 1230.48,181.933 1255.95,225.802\nC 1255.95,225.802 1260.56,233.373 1261.77,250.965\nL 1262.99,291.939\nC 1262.99,291.939 1282.64,305.745 1285.3,341.82\nL 1285.55,395.042\nC 1285.55,395.042 1286.52,408.625 1281.18,400.163\nC 1281.18,400.163 1279.97,405.062 1277.06,407.512\nL 1280.7,407.957\nC 1280.7,407.957 1282.88,407.066 1282.64,410.407\nL 1281.42,535.555\nL 1280.94,732.631\nC 1280.94,732.631 1280.7,745.101 1276.81,768.928\nC 1276.81,768.928 1273.18,782.512 1273.66,802.331\nL 1271.96,882.274\nL 1271.72,898.976\nC 1271.72,898.976 1272.93,906.992 1268.08,909.664\nL 1262.02,914.341\nL 1261.77,919.017\nL 1245.52,932.378\nL 1245.76,943.958\nL 1235.58,951.974\nC 1235.58,951.974 1231.21,957.096 1222.23,954.201\nL 1221.99,966.226\nC 1221.99,966.226 1215.68,975.356 1206.95,973.575\nC 1206.95,973.575 1198.22,973.798 1193.12,964.667\nL 1193.12,982.705\nC 1193.12,982.705 1192.4,993.616 1181.97,990.499\nL 1159.41,980.923\nC 1159.41,980.923 1157.22,980.478 1157.22,983.596\nL 1157.22,989.385\nC 1157.22,989.385 1157.95,998.738 1137.82,1001.19\nL 1137.82,1006.98\nC 1137.82,1006.98 1135.39,1014.33 1129.57,1009.87\nL 1124.23,1005.86\nL 1085.66,1016.55\nL 1084.93,1018.11\nL 1045.15,1024.12\nC 1045.15,1024.12 1044.18,1021.9 1034.72,1023.23\nC 1034.72,1023.23 994.694,1024.57 983.778,1024.12\nC 983.778,1024.12 983.05,1030.8 976.5,1027.91\nC 976.5,1027.91 974.075,1026.8 971.649,1023.9\nL 952.97,1021.9\nC 952.97,1021.9 944.722,1023.46 942.782,1011.65\nC 942.782,1011.65 943.51,1007.87 940.841,1007.65\nL 933.806,1006.98\nC 933.806,1006.98 931.866,1025.01 925.559,1026.13\nC 925.559,1026.13 920.464,1025.91 919.737,1021.45\nL 919.737,1004.08\nC 919.737,1004.08 901.058,1001.41 894.994,999.406\nC 894.994,999.406 892.568,1019.67 882.865,1017.67\nC 882.865,1017.67 875.587,1015.22 875.587,1009.2\nL 875.345,993.839\nC 875.345,993.839 860.062,990.053 859.577,988.94\nC 859.577,988.94 853.27,1009.43 844.052,1006.31\nC 844.052,1006.31 838.715,1004.08 834.591,999.852\nL 833.378,978.697\nL 828.284,977.138\nL 828.042,984.041\nC 828.042,984.041 814.942,994.062 807.907,989.831\nC 807.907,989.831 804.269,988.272 796.264,982.26\nL 795.536,972.239\nL 774.431,975.356\nC 774.431,975.356 759.634,975.802 756.48,963.331 Z\nM 858.607,76.158\nC 858.607,76.158 908.487,62.6577 953.789,80.1662\nL 951.697,80.5281\nC 951.697,80.5281 939.871,74.4599 936.172,80.6951\nC 936.172,80.6951 914.248,77.494 898.541,77.327\nC 898.541,77.327 865.156,76.2414 855.059,77.327\nM 978.926,140.291\nC 979.715,139.428 1044.42,136.283 1044.42,136.283\nL 1049.52,141.627\nC 1049.52,141.627 1031.57,152.093 1031.81,162.559\nC 1031.81,162.559 1026.23,161.223 1031.08,176.811\nL 802.571,198.634\nC 802.571,198.634 804.511,195.071 796.264,191.954\nC 796.264,191.954 795.778,193.067 797.719,189.504\nC 798.932,189.281 805.482,187.5 808.635,181.71\nC 808.635,181.71 813.972,181.265 819.794,175.03\nC 819.794,175.03 826.829,174.584 831.195,169.685\nC 831.195,169.685 838.715,170.353 842.839,165.009\nC 842.839,165.009 852.3,165.9 856.909,160.333\nC 856.909,160.333 867.339,161.891 871.706,156.324\nC 871.706,156.324 879.954,158.551 886.746,153.429\nC 886.746,153.429 898.39,154.765 904.212,149.866\nC 904.212,149.866 914.885,154.097 921.92,146.971\nC 921.92,146.971 931.138,152.539 940.113,144.745\nC 940.113,144.745 948.846,151.425 958.064,142.74\nC 958.064,142.74 969.466,150.757 978.926,140.291 Z\nM 1048.06,175.03\nL 1045.88,170.576\nL 1045.88,168.349\nL 1045.39,167.236\nL 1044.67,165.677\nL 1043.45,164.564\nC 1043.45,164.564 1039.57,160.555 1057.04,150.089\nC 1057.04,150.089 1058.25,148.085 1074.99,173.471\nM 1069.17,144.076\nC 1069.17,144.076 1077.41,139.846 1080.81,139.4\nC 1080.81,139.4 1087.12,140.736 1089.79,138.955\nC 1089.79,138.955 1093.91,141.404 1100.7,140.514\nC 1100.7,140.514 1106.04,144.745 1110.4,144.299\nC 1110.4,144.299 1112.59,149.198 1116.71,149.644\nC 1116.71,149.644 1119.62,155.879 1122.05,156.77\nC 1122.05,156.77 1123.02,163.895 1125.44,164.786\nC 1125.44,164.786 1123.26,167.236 1124.23,168.572\nL 1088.81,171.689\nC 1088.81,171.689 1072.32,147.639 1069.17,144.076 Z\nM 513.901,463.851\nL 513.658,459.62\nL 516.812,458.729\nL 516.084,462.069\nM 521.178,443.587\nC 521.178,443.587 527.485,441.36 527.97,437.352\nC 527.97,437.352 528.94,438.465 531.124,438.465\nC 531.124,438.465 527.728,442.251 528.213,444.7\nC 528.213,444.7 524.332,452.049 521.663,453.162\nC 521.663,453.162 523.361,449.822 521.178,443.587 Z\nM 409.349,553.815\nL 415.171,559.605\nC 415.171,559.605 392.368,568.735 412.745,582.319\nC 412.745,582.319 385.576,588.999 407.408,603.028\nL 406.68,606.814\nC 406.68,606.814 386.061,609.041 399.645,622.847\nL 397.22,631.309\nC 397.22,631.309 386.789,635.095 392.611,643.112\nC 392.611,643.112 379.36,677.544 365.442,724.169\nL 345.702,806.423\nC 345.702,806.423 326.295,895.496 324.688,907.966\nC 324.688,907.966 307.859,1004.44 305.615,1025.24\nL 291.061,1133.6\nL 288.786,1147.27\nL 270.35,1136.58\nC 270.35,1136.58 276.506,1069.47 277.779,1059.67\nC 277.779,1059.67 285.542,996.149 289.423,978.919\nL 306.889,872.922\nC 306.889,872.922 323.384,796.012 327.933,780.285\nC 327.933,780.285 338.606,738.114 351.524,698.643\nC 351.524,698.643 373.841,632.423 383.878,610.154\nC 383.878,610.154 398.038,575.193 409.349,553.815 Z\nM 452.134,1301.67\nL 451.8,1288\nC 451.8,1288 451.466,1283.86 454.378,1279.68\nC 454.378,1279.68 456.318,1282.97 455.045,1268.71\nL 454.378,1259.81\nL 448.556,1260.09\nC 448.556,1260.09 452.134,1245.83 433.364,1236.34\nL 432.727,1232.47\nC 432.727,1232.47 437.882,1231 438.216,1222.09\nL 437.579,1204.86\nC 437.579,1204.86 443.704,1206.06 444.371,1201.3\nL 442.097,1168.34\nC 442.097,1168.34 443.401,1165.67 434.971,1163\nL 428.179,1161.21\nC 428.179,1161.21 430.12,1146.68 426.905,1145.79\nC 426.905,1145.79 429.816,1138.67 426.905,1134.8\nC 426.905,1134.8 429.149,1125.89 424.298,1122.33\nL 423.327,1111.64\nC 423.327,1111.64 429.816,1105.99 430.12,1097.39\nC 430.12,1097.39 430.453,1088.17 426.905,1086.7\nC 426.905,1086.7 433.03,1076.9 426.572,1068.3\nC 426.572,1068.3 431.757,1059.98 426.572,1049.87\nC 426.572,1049.87 431.09,1039.49 425.268,1032.95\nC 425.268,1032.95 431.423,1025.82 425.935,1015.13\nC 425.935,1015.13 430.787,1008.01 426.238,997.04\nC 426.238,997.04 431.423,989.608 425.935,980.116\nC 425.935,980.116 434.001,967.033 426.572,962.886\nC 426.572,962.886 433.03,958.739 428.846,943.29\nC 428.846,943.29 435.305,933.798 430.453,926.06\nC 430.453,926.06 436.609,917.765 431.09,907.354\nC 431.09,907.354 439.186,903.207 433.364,888.649\nL 434.668,886.589\nL 449.859,1005.64\nL 465.385,1132.13\nC 465.385,1132.13 465.718,1136.27 467.962,1137.16\nC 467.962,1137.16 464.414,1141.34 468.296,1146.68\nL 469.599,1174.88\nC 469.599,1174.88 465.051,1177.86 467.962,1182.9\nC 467.962,1182.9 467.325,1192.39 469.599,1194.17\nC 469.599,1194.17 466.021,1198.93 470.236,1204.58\nC 470.236,1204.58 469.599,1212.6 472.814,1218.53\nC 472.814,1218.53 474.754,1222.67 474.451,1229.8\nL 474.754,1238.12\nL 475.421,1247.62\nL 475.088,1253.85\nC 475.088,1253.85 470.873,1258.3 473.147,1267.21\nC 473.147,1267.21 471.843,1279.99 478.969,1285.03\nC 478.969,1285.03 478.969,1292.46 483.184,1295.44\nL 483.184,1302.56\nC 483.184,1302.56 476.392,1305.82 474.117,1310.58\nC 474.117,1310.58 472.51,1314.14 466.992,1310.27\nM 804.36,100.069\nC 804.36,100.069 828.284,84.6199 875.496,88.489\nC 875.496,88.489 857.394,87.5983 855.787,92.6365\nC 855.787,92.6365 843.172,89.9644 837.987,96.784\nC 837.987,96.784 824.069,94.7242 819.218,102.435\nC 819.218,102.435 809.848,101.238 804.026,105.998\n\"/>\n</g>\n</svg>\n\n  Profiles:\n    Profile-8bim: 14758 bytes\n    Profile-icc: 11792 bytes\n      Description: SWOP (Coated), 15%\n      Manufacturer: SWOP (Coated), 15%\n      Model: SWOP (Coated), 15%\n      Copyright: (c) 2002 Adobe Systems Inc.\n  Artifacts:\n    filename: -\n    verbose: true\n  Tainted: False\n  Filesize: 6.789MB\n  Number pixels: 2.25M\n  Pixels per second: 112.5MB\n  User time: 0.020u\n  Elapsed time: 0:01.019\n  Version: ImageMagick 6.7.7-10 2014-03-06 Q16 http://www.imagemagick.org\n```\n", "closed": "2014-10-28 09:17:40", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/71", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "TIFFImageReader IllegalArgumentException: bandOffsets.length is wrong!"}, {"created": "2014-10-16 12:41:57", "user": "haraldk", "body": "TIFFImageReader may throw IndexOutOfBoundsException if width not a multiple of tileWidth.\n", "closed": "2014-10-16 12:44:49", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/69", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "TIFFImageReader may throw IndexOutOfBoundsException if width not a multiple of tileWidth"}, {"created": "2014-10-07 18:04:24", "user": "elijahiuu", "body": "I am using your plugin to read a funky TIFF which gives me this error: \"Not a JPEG file: starts with 0x4a 0x46\"\n\nAt first I was using JAI.create(\"stream\", is), which gave me the message: \"Decoding of old style JPEG-in-TIFF data is not supported\". Then I tried using your plugins. And getting \"Not a JPEG file\" message. Any idea on how to guide the decoder into reading it using the right codec/table?\n\nAlso, Apache commons imaging gives this error: \"Tiff: unknown/unsupported compression: 6\". Which i guess means the same thing - old jpeg\n", "closed": "2014-10-09 16:49:58", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/67", "ttf": 1.0002777777777778, "commits": {}, "labels": ["Bug", "Trouble-shooting"], "title": "Not a JPEG file: starts with 0x4a 0x46"}, {"created": "2014-09-10 17:37:27", "user": "haraldk", "body": "Reading byte rasters are fast, short and int rasters are (very) slow.\n\nKnown reason: \nByte rasters are read using `DataInput.readFully(byte[]...)`.\nShort and Integer rasters are currently read in loop, reading one `short/int` at a time, respectively. \n\nQuickFIx: \nCast to `ImageInputStream` if possible, and use the overloaded `readFully` that takes `short[]/int[]` parameters.\n\nFull fix: \nImplement util functions that can read `short/int` arrays fast from a `DataInput`, probably using `ByteBuffer` or similar code to the one in `ImageInputStream`.\n", "closed": "2014-09-10 20:17:52", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/62", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug", "Optimization"], "title": "TIFF reading of short and integer rasters unreasonably slow"}, {"created": "2014-09-02 19:45:12", "user": "azhuchkov", "body": "Apparently TwelveMonkeys and JDK have exchanged seats: the `com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader` confuses **JPEG** color space while **JDK** produces adequate result.\n\nThe test:\n\n``` scala\nval img = ImageIO.read(new File(\"/home/andrey/Downloads/tailand.jpg\"))\nImageIO.write(img, \"JPG\", new File(\"/tmp/thumbnail.jpg\"))\n```\n\nOriginal image ([link](http://i66.fastpic.ru/big/2014/0828/92/51ee2d266a0b828d901825818caf5292.jpg)):\n![tailand](https://cloud.githubusercontent.com/assets/765471/4124440/828524ba-32d8-11e4-91a9-9a0836cfb0bc.jpg)\nResult:\n![thumbnail](https://cloud.githubusercontent.com/assets/765471/4124455/a2f02cfe-32d8-11e4-94f1-b156d6e7aeea.jpg)\n\n```\njava version \"1.7.0_45\"\nJava(TM) SE Runtime Environment (build 1.7.0_45-b18)\nJava HotSpot(TM) 64-Bit Server VM (build 24.45-b08, mixed mode)\n\nTwelveMonkeys: 3.0-rc5\n```\n", "closed": "2014-09-03 12:17:19", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/59", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "Wrong JPEG color space"}, {"created": "2014-08-25 07:28:02", "commits": {"96eb0d0b7f94478f323cf50b06bcd166b0f8cdd3": {"commitGHEventType": "referenced", "commitUser": "haraldk"}}, "numCommits": 0, "changesInPackagesSPOON": [], "closed": "2014-08-26 19:10:25", "filteredCommits": [], "commitsDetails": [{"nameRev": "96eb0d0b7f94478f323cf50b06bcd166b0f8cdd3 tags/twelvemonkeys-3.0-rc7~21", "commitMessage": "Merge pull request #58 from rvsoni/master\n\n#57 Added 'image/vnd.adobe.photoshop' mimetype", "commitParents": ["9a6f4bba3337898d788ec522dd57f25ff1cd071d", "9e9f47a2fbb11b030cffa2ccff1de4046d55ea4d"], "spoonStatsSkippedReason": "", "commitHash": "96eb0d0b7f94478f323cf50b06bcd166b0f8cdd3", "authoredDateTime": "2014-08-26 21:01:23", "commitGHEventType": "referenced", "commitGitStats": [{"insertions": 2, "deletions": 1, "lines": 3, "filePath": "imageio/imageio-psd/src/main/java/com/twelvemonkeys/imageio/plugins/psd/PSDImageReaderSpi.java"}], "commitDateTime": "2014-08-26 21:01:23", "commitUser": "haraldk", "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "MOV": 0, "INS": 1, "DEL": 0, "spoonMethodName": "com.twelvemonkeys.imageio.plugins.psd.PSDImageReaderSpi"}], "spoonFilePath": "PSDImageReaderSpi.java"}]}], "url": "https://github.com/haraldk/TwelveMonkeys/issues/57", "ttf": 1.0002777777777778, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "title": "Wrong PSD mimetype used. it shoule be 'image/vnd.adobe.photoshop'", "statsSkippedReason": "", "user": "rvsoni", "changesInPackagesGIT": [], "spoonStatsSummary": {"UPD": 0, "spoonMethodsChanged": 0, "TOT": 0, "MOV": 0, "INS": 0, "DEL": 0, "spoonFilesChanged": 0}, "filteredCommitsReason": {"unavailable": 0, "moreThanOneParent": 0, "mergeCommitUsed": 0, "duplicated": 0, "multipleIssueFixes": 1, "alsoFixesPhrase": 0}, "body": "Wrong PSD mimetype used. it shoule be 'image/vnd.adobe.photoshop'\n", "labels": ["Bug"]}, {"created": "2014-03-03 13:17:44", "user": "ankon", "body": "On revision e3bab84e82a2eb09a1f12c94a3088c0aaee84074 I have these tests failing:\n\n```\n-------------------------------------------------------------------------------\nTest set: com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest\n-------------------------------------------------------------------------------\nTests run: 104, Failures: 3, Errors: 0, Skipped: 5, Time elapsed: 2.124 sec <<< FAILURE!\ntestReadSubsamplingBounds1027(com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest)  Time elapsed: 0.041 sec  <<< FAILURE!\njava.lang.AssertionError: expected:<16711421> but was:<16711677>\n    at org.junit.Assert.fail(Assert.java:91)\n    at org.junit.Assert.failNotEquals(Assert.java:645)\n    at org.junit.Assert.assertEquals(Assert.java:126)\n    at org.junit.Assert.assertEquals(Assert.java:470)\n    at org.junit.Assert.assertEquals(Assert.java:454)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadSubsamplingBounds1027(Unknown Source)\n...\ntestReadSubsamplingBounds1026(com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest)  Time elapsed: 0.034 sec  <<< FAILURE!\njava.lang.AssertionError: expected:<16711421> but was:<16711677>\n    at org.junit.Assert.fail(Assert.java:91)\n    at org.junit.Assert.failNotEquals(Assert.java:645)\n    at org.junit.Assert.assertEquals(Assert.java:126)\n    at org.junit.Assert.assertEquals(Assert.java:470)\n    at org.junit.Assert.assertEquals(Assert.java:454)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadSubsamplingBounds1026(Unknown Source)\n...\ntestReadSubsamplingBounds1024(com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest)  Time elapsed: 0.022 sec  <<< FAILURE!\njava.lang.AssertionError: expected:<16711421> but was:<16711677>\n    at org.junit.Assert.fail(Assert.java:91)\n    at org.junit.Assert.failNotEquals(Assert.java:645)\n    at org.junit.Assert.assertEquals(Assert.java:126)\n    at org.junit.Assert.assertEquals(Assert.java:470)\n    at org.junit.Assert.assertEquals(Assert.java:454)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest.testReadSubsamplingBounds1024(Unknown Source)\n...\n```\n\nJava is \n\n```\njava version \"1.7.0_51\"\nJava(TM) SE Runtime Environment (build 1.7.0_51-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 24.51-b03, mixed mode)\n```\n\n(same failures also with 1.7.0_45, and with 1.8.0-b129 under KCMS, see #41 )\n\nThe machine in question is a Fedora 20 x86_64 system.\n", "closed": "2014-03-03 19:32:25", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/43", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "JPEGImageReaderTest#testReadSubsamplingBounds{1024,1026,1027} failing "}, {"created": "2014-03-03 11:50:51", "user": "ankon", "body": "When building with JDK 8 (b129) the ColorSpacesTest#testCorbisRGBSpecialHandling() fails:\n\n```\n-------------------------------------------------------------------------------\nTest set: com.twelvemonkeys.imageio.color.ColorSpacesTest\n-------------------------------------------------------------------------------\nTests run: 18, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.067 sec <<< FAILURE!\ntestCorbisRGBSpecialHandling(com.twelvemonkeys.imageio.color.ColorSpacesTest)  Time elapsed: 0.007 sec  <<< FAILURE!\njava.lang.AssertionError: array lengths differed, expected.length=452 actual.length=420\n    at org.junit.Assert.fail(Assert.java:91)\n    at org.junit.internal.ComparisonCriteria.assertArraysAreSameLength(ComparisonCriteria.java:72)\n    at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:36)\n    at org.junit.Assert.internalArrayEquals(Assert.java:414)\n    at org.junit.Assert.assertArrayEquals(Assert.java:200)\n    at org.junit.Assert.assertArrayEquals(Assert.java:213)\n    at com.twelvemonkeys.imageio.color.ColorSpacesTest.testCorbisRGBSpecialHandling(Unknown Source)\n```\n\nThis seems to be caused by the use of LCMS in JDK8, while earlier JDKs use kcms. The test can be made to pass by using the JVM arguments to switch back to kcms:\n\n```\n-Dsun.java2d.cmm=sun.java2d.cmm.kcms.KcmsServiceProvider\n```\n\nUnofrtunately I cannot get my JDK 1.7.0u45 to use LCMS to check in the other direction.\n", "closed": "2015-01-06 11:51:26", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/41", "ttf": 309.0002777777778, "commits": {}, "labels": ["Bug"], "title": "ColorSpacesTest#testCorbisRGBSpecialHandling() fails with JDK8/LCMS"}, {"created": "2014-03-02 22:21:04", "user": "haraldk", "body": "Fixing https://github.com/haraldk/TwelveMonkeys/pull/39 revealed another issue: \n\nThe last line of subsampled images may turn out black. The issue can be shown by running the tests:\n\n```\nJPEGImageReaderTest.testReadSubsamplingNotSkippingLines1025()\n```\n\nand \n\n```\nJPEGImageReaderTest.testReadSubsamplingNotSkippingLines1028()\n```\n\n(currently `@Ignore`ed).\n", "closed": "2015-03-19 22:40:28", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/40", "ttf": 382.0002777777778, "commits": {}, "labels": ["Bug"], "title": "Subsampling in JPEGImageReader may result in black last line "}, {"created": "2014-02-21 09:16:13", "user": "kendoboris", "body": "Hi,\n\nFirst of all thanks for this great library, it helped me overcome already many issues with images.\n\nI'm currently working with one type of image that appears to be YCbCr, but RGB model is used. Example images are:\n\n1)\n![4ss0332-014](https://f.cloud.github.com/assets/6744328/2228197/b92fe580-9ad6-11e3-8741-f516af98a1c3.jpg)\n2)\n![14-0281-054_1](https://f.cloud.github.com/assets/6744328/2228198/beb82134-9ad6-11e3-977f-ee5deb0b3e44.jpg)\n\nThese images seem to be created by Photoshop and have :\nstartOfFrame.components[0].id == 0\nstartOfFrame.components[1].id == 1\nstartOfFrame.components[2].id == 2\n\nTherefore, in JPEGImageReader.java I have changed the if statement on line 569 from\nif (startOfFrame.components[0].id == 1 && startOfFrame.components[1].id == 2 && startOfFrame.components[2].id == 3) {\n\nto\n\nif ((startOfFrame.components[0].id == 0 && startOfFrame.components[1].id == 1 && startOfFrame.components[2].id == 2) || (startOfFrame.components[0].id == 1 && startOfFrame.components[1].id == 2 && startOfFrame.components[2].id == 3)) {\n\nin order to select return JPEGColorSpace.YCbCr.\n\nWould you be willing to apply this patch?\n\nBest regards,\nBoris\n", "closed": "2014-03-02 21:11:02", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/38", "ttf": 9.000277777777777, "commits": {}, "labels": ["Bug"], "title": "JPEG 3-channel component ID = 0-2 YCbCr (using RGB)"}, {"created": "2014-02-12 20:42:39", "user": "THausherr", "body": "Documentation:\n\"The TwelveMonkeys service providers for TIFF and JPEG overrides the onRegistration method, and utilizes the pairwise partial ordering mechanism of the IIOServiceRegistry to make sure it is installed before the Sun/Oracle provided JPEGImageReader and the Apple provided TIFFImageReader on OS X, respectively. \"\n\nCode:\n\nIterator<ImageReader> jpegReaders = ImageIO.getImageReadersByFormatName(\"JPEG\");\nwhile (jpegReaders.hasNext()) {\n    System.out.println(\"jpeg reader: \" + jpegReaders.next());\n}  \nIterator<ImageReader> tiffReaders = ImageIO.getImageReadersByFormatName(\"TIFF\");\nwhile (tiffReaders.hasNext()) {\n    System.out.println(\"tiff reader: \" + tiffReaders.next());\n}            \n\nresult:\njpeg reader: com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader@5dadd1c5\njpeg reader: com.sun.imageio.plugins.jpeg.JPEGImageReader@4929a06b\ntiff reader: com.sun.media.imageioimpl.plugins.tiff.TIFFImageReader@247ab39\ntiff reader: com.twelvemonkeys.imageio.plugins.tiff.TIFFImageReader@5f3f333c\n\nSo the tiff reader isn't in front :-( Or does the documentation mean that it only applies to OSX?\n", "closed": "2014-02-13 11:48:43", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/37", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "twelvemonkey not in front"}, {"created": "2014-02-06 11:41:57", "user": "thaichat04", "body": "This simple WMF file extracted from OOXML Office thumbnail. WMFImageReaderSpi can not decode with its header.\n{01 00 09 00 00 03 82 09 00 00 0C 00 54 00 00 00 00 00 04 00 00 00 03 01 08 00 05 00 00 00 0B 02 00 00 00 00}\n", "closed": "2014-02-12 12:42:12", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/35", "ttf": 6.000277777777778, "commits": {}, "labels": ["Bug"], "title": "Unable to parse a WMF thumbnail file extracted from OOXML Office"}, {"created": "2014-02-05 01:25:48", "user": "rtimpe", "body": "Hi Harald,\n\nI've been using TwelveMonkeys successfully, but I found an image that causes problems (attached and linked):\n\nhttp://25.media.tumblr.com/77f31c36ea8f46ad1f41d6c6f02c60a8/tumblr_n0ccizPvsK1smx7x5o5_1280.jpg\n\n![tumblr_n0ccizpvsk1smx7x5o5_1280](https://f.cloud.github.com/assets/1720246/2083446/a2b0cd6e-8e02-11e3-9773-119d1f0996b8.jpg)\n\nWhen I try to read in that image, I get the following exception:\n\n```\njava.awt.color.CMMException: General CMM error517\n    at sun.java2d.cmm.kcms.CMM.checkStatus(CMM.java:180)\n    at sun.java2d.cmm.kcms.CMM.createTransform(CMM.java:134)\n    at java.awt.image.ColorConvertOp.filter(ColorConvertOp.java:540)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readImageAsRasterAndReplaceColorProfile(Unknown Source)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(Unknown Source)\n    at javax.imageio.ImageIO.read(ImageIO.java:1448)\n    at javax.imageio.ImageIO.read(ImageIO.java:1308)\n...\n```\n\nThis may be related to this java bug:\nhttp://bugs.java.com/bugdatabase/view_bug.do?bug_id=6444360\n\nAnd here's another image I found that causes the same problem, in case that helps:\nhttp://lh6.ggpht.com/_zhJGGuLhHrQ/Ro6SIyBE_TI/AAAAAAAAAA4/PWx6LzckCSs/Flower+-+GalleryPlayer.jpg\n", "closed": "2014-02-07 08:56:51", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/34", "ttf": 2.000277777777778, "commits": {}, "labels": ["Bug"], "title": "CMMException when parsing jpeg"}, {"created": "2014-01-27 15:17:39", "user": "csyperski", "body": "I can't seem to get a successful build on Ubuntu 14.04 or Fedora 20, I am getting the same failed tests, if this normal?  Am I doing something wrong?\n\nJava -version\njava version \"1.7.0_51\"\nOpenJDK Runtime Environment (fedora-2.4.4.1.fc20-x86_64 u51-b02)\nOpenJDK 64-Bit Server VM (build 24.45-b08, mixed mode)\n\nexport MAVEN_OPTS=\"-Xmx512m -XX:MaxPermSize=256m\"\nmvn -e package\n\ntail of mvn output:\n\n---\n##  T E S T S\n\nRunning com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest\nWARNING: Reading reference metadata failed for TestData: file:/home/csyperski88/Downloads/TwelveMonkeys-master/imageio/imageio-jpeg/target/test-classes/jpeg/cmyk-sample.jpg image 0: Inconsistent metadata read from stream\nWARNING: Reading reference metadata failed for TestData: file:/home/csyperski88/Downloads/TwelveMonkeys-master/imageio/imageio-jpeg/target/test-classes/jpeg/cmyk-sample-multiple-chunk-icc.jpg image 0: Image format Error\nWARNING: Test skipped due to reader.getRawImageType(0) returning null\nTests run: 95, Failures: 2, Errors: 0, Skipped: 3, Time elapsed: 5.806 sec <<< FAILURE!\nRunning com.twelvemonkeys.imageio.plugins.jpeg.JFIFThumbnailReaderTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec\nRunning com.twelvemonkeys.imageio.plugins.jpeg.JPEGSegmentImageInputStreamTest\nTests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.018 sec\nRunning com.twelvemonkeys.imageio.plugins.jpeg.JFXXThumbnailReaderTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec\nRunning com.twelvemonkeys.imageio.plugins.jpeg.EXIFThumbnailReaderTest\nTests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 sec\nRunning com.twelvemonkeys.imageio.plugins.jpeg.FastCMYKToRGBTest\nTests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 sec\nRunning com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageWriterTest\nTests run: 16, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.09 sec <<< FAILURE!\n\nResults :\n\nFailed tests:   testGetTypeSpecifiers(com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest): ImageTypeSepcifier from getRawImageType should be in the iterator from getImageTypes\n  testSetDestinationType(com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReaderTest): Could not read file:/home/csyperski88/Downloads/TwelveMonkeys-master/imageio/imageio-jpeg/target/test-classes/jpeg/cmm-exception-adobe-rgb.jpg with explicit destination type javax.imageio.ImageTypeSpecifier$Interleaved@2a0e3919\n  testWrite(com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageWriterTest): Invalid argument to native writeImage\n\nTests run: 138, Failures: 3, Errors: 0, Skipped: 3\n\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO] \n[INFO] Twelvemonkeys ..................................... SUCCESS [0.254s]\n[INFO] TwelveMonkeys :: Common ........................... SUCCESS [0.007s]\n[INFO] TwelveMonkeys :: Common :: Language support ....... SUCCESS [1.937s]\n[INFO] TwelveMonkeys :: Common :: IO ..................... SUCCESS [3.161s]\n[INFO] TwelveMonkeys :: Common :: Image .................. SUCCESS [1.671s]\n[INFO] TwelveMonkeys :: Servlet .......................... SUCCESS [3.851s]\n[INFO] TwelveMonkeys :: ImageIO .......................... SUCCESS [0.007s]\n[INFO] TwelveMonkeys :: ImageIO :: Core .................. SUCCESS [0.644s]\n[INFO] TwelveMonkeys :: ImageIO :: Metadata .............. SUCCESS [0.671s]\n[INFO] TwelveMonkeys :: ImageIO :: ICO plugin ............ SUCCESS [1.023s]\n[INFO] TwelveMonkeys :: ImageIO :: ICNS plugin ........... SUCCESS [0.730s]\n[INFO] TwelveMonkeys :: ImageIO :: IFF plugin ............ SUCCESS [1.522s]\n[INFO] TwelveMonkeys :: ImageIO :: JPEG plugin ........... FAILURE [6.178s]\n[INFO] TwelveMonkeys :: ImageIO :: PDF plugin ............ SKIPPED\n[INFO] TwelveMonkeys :: ImageIO :: PICT plugin ........... SKIPPED\n[INFO] TwelveMonkeys :: ImageIO :: PSD plugin ............ SKIPPED\n[INFO] TwelveMonkeys :: ImageIO :: Thumbs.db plugin ...... SKIPPED\n[INFO] TwelveMonkeys :: ImageIO :: TIFF plugin ........... SKIPPED\n[INFO] TwelveMonkeys :: ImageIO :: Batik Plugin .......... SKIPPED\n[INFO] TwelveMonkeys :: ImageIO :: JMagick Plugin ........ SKIPPED\n[INFO] TwelveMonkeys :: ImageIO :: reference test cases .. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 21.981s\n[INFO] Finished at: Mon Jan 27 08:59:19 CST 2014\n[INFO] Final Memory: 29M/303M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.10:test (default-test) on project imageio-jpeg: There are test failures.\n[ERROR] \n[ERROR] Please refer to /home/csyperski88/Downloads/TwelveMonkeys-master/imageio/imageio-jpeg/target/surefire-reports for the individual test results.\n[ERROR] -> [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.10:test (default-test) on project imageio-jpeg: There are test failures.\n\nPlease refer to /home/csyperski88/Downloads/TwelveMonkeys-master/imageio/imageio-jpeg/target/surefire-reports for the individual test results.\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)\n    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:317)\n    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:152)\n    at org.apache.maven.cli.MavenCli.execute(MavenCli.java:555)\n    at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\n    at org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\nCaused by: org.apache.maven.plugin.MojoFailureException: There are test failures.\n\nPlease refer to /home/csyperski88/Downloads/TwelveMonkeys-master/imageio/imageio-jpeg/target/surefire-reports for the individual test results.\n    at org.apache.maven.plugin.surefire.SurefireHelper.reportExecution(SurefireHelper.java:87)\n    at org.apache.maven.plugin.surefire.SurefirePlugin.writeSummary(SurefirePlugin.java:641)\n    at org.apache.maven.plugin.surefire.SurefirePlugin.handleSummary(SurefirePlugin.java:615)\n    at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:137)\n    at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:98)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:106)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\n    ... 19 more\n[ERROR] \n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn <goals> -rf :imageio-jpeg\n", "closed": "2015-01-07 14:34:52", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/33", "ttf": 344.0002777777778, "commits": {}, "labels": ["Bug"], "title": "mvn package - test failure - testGetTypeSpecifiers - OpenJDK/LCMS"}, {"created": "2013-12-30 16:42:23", "user": "ankon", "body": "```\nDec 30, 2013 4:39:01 PM org.apache.catalina.core.ApplicationContext log\nINFO: Unregistered locally installed provider class: class com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageWriterSpi\nDec 30, 2013 4:39:01 PM org.apache.catalina.core.ApplicationContext log\nINFO: Unregistered locally installed provider class: class com.twelvemonkeys.imageio.plugins.psd.PSDImageReaderSpi\nDec 30, 2013 4:39:01 PM org.apache.catalina.core.StandardContext listenerStop\nSEVERE: Exception sending context destroyed event to listener instance of class com.twelvemonkeys.servlet.image.IIOProviderContextListener\njava.util.ConcurrentModificationException\n    at java.util.HashMap$HashIterator.nextEntry(HashMap.java:806)\n    at java.util.HashMap$ValueIterator.next(HashMap.java:835)\n    at javax.imageio.spi.FilterIterator.advance(ServiceRegistry.java:809)\n    at javax.imageio.spi.FilterIterator.next(ServiceRegistry.java:828)\n    at com.twelvemonkeys.servlet.image.IIOProviderContextListener.contextDestroyed(Unknown Source)\n    at org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:4763)\n    at org.apache.catalina.core.StandardContext$4.run(StandardContext.java:5472)\n    at java.lang.Thread.run(Thread.java:722)\n```\n\nSeen when hot-deploying a war file in tomcat 7.0.47, didn't yet check out the specific place in the code.\n", "closed": "2014-01-02 12:29:21", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/29", "ttf": 2.000277777777778, "commits": {}, "labels": ["Bug"], "title": "ConcurrentModificationException in IIOProviderContextListener#contextDestroyed()"}, {"created": "2013-12-10 20:02:21", "user": "marcuslinke", "body": "Hi Harald,\n\njust found another image that can't be read with the JPEGImageReader. Maybe you will find some time to take a look. Not able to upload it here. Seems github has some problems with it also.\n\nhttps://dl.dropboxusercontent.com/u/13086504/content.jpg\n\nCheers\n", "closed": "2013-12-16 17:09:24", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/22", "ttf": 5.000277777777778, "commits": {}, "labels": ["Bug"], "title": "Problematic JPEG image"}, {"created": "2013-11-28 20:18:29", "user": "mercutiodesign", "body": "Based on the latest version of this github repository (running java 1.6.0_16 and Debian 4.1.2-25). I build the project with maven and then added \n\n```\ntwelvemonkeys-common-lang-3.0-SNAPSHOT.jar\ntwelvemonkeys-common-io-3.0-SNAPSHOT.jar\ntwelvemonkeys-common-image-3.0-SNAPSHOT.jar\ntwelvemonkeys-imageio-core-3.0-SNAPSHOT.jar\ntwelvemonkeys-imageio-metadata-3.0-SNAPSHOT.jar\ntwelvemonkeys-imageio-jpeg-3.0-SNAPSHOT.jar\ntwelvemonkeys-imageio-tiff-3.0-SNAPSHOT.jar\ntwelvemonkeys-servlet-3.0-SNAPSHOT.jar\n```\n\nto my servlet libs. I'm trying to read any CMYK image, for example:\n\n![Channel digital image CMYK color](http://upload.wikimedia.org/wikipedia/en/2/25/Channel_digital_image_CMYK_color.jpg)\n\n[From Wikipedia](http://en.wikipedia.org/wiki/File:Channel_digital_image_CMYK_color.jpg). The same image is loaded if I just run a test locally.\nAs a servlet, I get the following NullPointerException:\n\n```\njava.lang.NullPointerException\n    at com.twelvemonkeys.imageio.color.ColorSpaces.getColorSpace(ColorSpaces.java:265)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.getImageTypes(JPEGImageReader.java:232)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.readImageAsRasterAndReplaceColorProfile(JPEGImageReader.java:351)\n    at com.twelvemonkeys.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:337)\n    at javax.imageio.ImageIO.read(ImageIO.java:1422)\n    ...\n```\n\nIt seems really odd, that this line would cause a NPE, as the code in com.twelvemonkeys.imageio.color.ColorSpaces just reads:\n\n```\nprofile = genericCMYK.get();\n```\n\nand the genericCMYK is a static variable:\n\n```\nprivate static WeakReference<ICC_Profile> genericCMYK = new WeakReference<ICC_Profile>(null);\n```\n\nthat does not seem to be nulled anywhere.\n", "closed": "2013-11-28 20:40:00", "commitsDetails": [], "url": "https://github.com/haraldk/TwelveMonkeys/issues/21", "ttf": 0.0002777777777777778, "commits": {}, "labels": ["Bug"], "title": "Nullpointer Exception when reading CMYK (Servlet)"}]}