{"projectName": "graphhopper/graphhopper", "bugLabels": ["bug", "critical bug"], "captureTime": "Sat Jul  4 20:37:56 2020", "issues": [{"title": "Bug for turn relations on bridges or tunnels if elevation is enabled", "body": "See [this route](https://graphhopper.com/maps/?point=45.501538%2C-122.660401&point=45.499527%2C-122.660133&vehicle=car&turn_costs=true). A left turn should not be allowed due to this only_straight_on turn relation https://www.openstreetmap.org/relation/2338199\r\n\r\nWe also have a test for this so I it must have been something special ... and indeed as it was on a bridge ...\r\n\r\nThe reason is that we set the node data again in the elevation interpolation (GHNodeAccess.set) and while we do that we reset (clear) all turn cost data:\r\n\r\n> baseGraph.nodes.setInt(tmp + baseGraph.N_TC, TurnCostStorage.NO_TURN_ENTRY);\r\n\r\nThis is likely just not necessary as we initialize the turn cost data already in BaseGraph.initNodeRefs", "url": "https://github.com/graphhopper/graphhopper/issues/2070", "user": "karussell", "labels": ["bug", "osm"], "created": "2020-06-23 16:58:45", "closed": "2020-06-23 17:26:24", "commits": {"a1cc59d7cee40ed0d4353226ccd64abc81dd5edb": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a1cc59d7cee40ed0d4353226ccd64abc81dd5edb", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["414e95fe6d16155ff981cafdbc6926dc40cb8a7c"], "nameRev": "a1cc59d7cee40ed0d4353226ccd64abc81dd5edb remotes/origin/gh_navigation_merge~6", "commitMessage": "bug fix for turn restriction on bridges / tunnels #2070\n", "commitDateTime": "2020-06-23 19:26:10", "authoredDateTime": "2020-06-23 19:21:18", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/storage/GHNodeAccess.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageWithTurnCostsTest.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "reader-osm/src/test/resources/com/graphhopper/reader/osm/test-conditional-turn-restrictions.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "reader-osm/src/test/resources/com/graphhopper/reader/osm/test-restrictions.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GHNodeAccess.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GHNodeAccess.setNode(int,double,double,double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GraphHopperStorageWithTurnCostsTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInitializeTurnCost()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a1cc59d7cee40ed0d4353226ccd64abc81dd5edb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 3, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.storage.GHNodeAccess.setNode(int,double,double,double)"]}, {"title": "Codespell report for \"GraphHopper\" (on fossies.org)", "body": "The FOSS server [fossies.org](https://fossies.org) - now supporting also \"[GraphHopper](https://fossies.org/linux/graphhopper)\" - offers a feature \"[Source code misspelling reports](https://fossies.org/features.html#codespell)\". Such reports are normally only generated on request, but as Fossies administrator I have just created for testing purposes such a [codespell](https://github.com/codespell-project/codespell) based analysis for the new GraphHopper release 1.0:\r\n\r\n&nbsp;https://fossies.org/linux/misc/graphhopper/codespell.html\r\n\r\nThat version-independent (not linked) URL should redirect always to the last report (if available).\r\n\r\nAlthough after a first review some obviously wrong matches (\"False Positives\" = FPs) are already filtered out (ignored) please inform me if you find more of them so that I can force a new improved check if applicable. Just for information there are also two supplemental pages showing some used \"codespell\" [configuration details](https://fossies.org/linux/misc/graphhopper/codespell_conf.html) and all obvious [False Positives](https://fossies.org/linux/misc/graphhopper/codespell_fps.html).\r\n\r\nOk, most errors are \"only\" in comments and are therefore not directly visible or relevant for users, but some are found in output strings and one error regards the source code itself (\"lenght\" instead of \"length\" in the file web/src/main/resources/assets/js/graphhopper/GHRoute.jsrc/shared/sysctl-util.h at line [79](https://fossies.org/linux/misc/graphhopper-1.0.tar.gz/graphhopper-1.0/web/src/main/resources/assets/js/graphhopper/GHRoute.js?M=79#l_79) and [91](https://fossies.org/linux/misc/graphhopper-1.0.tar.gz/graphhopper-1.0/web/src/main/resources/assets/js/graphhopper/GHRoute.js?M=91#l_91) but I'm not sure if it's a real bug since I'm not a JavaScript expert).\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/2045", "user": "jschleus", "labels": ["bug", "documentation", "web"], "created": "2020-05-26 09:28:45", "closed": "2020-06-15 19:37:52", "commits": {"856f7aeff7f0e21c613fde7f7712f2fa847ecdeb": {"commitGHEventType": "closed", "commitUser": "karussell"}, "fd3cfeacc394c201438caed47b7c2ad1e4961a8e": {"commitGHEventType": "closed", "commitUser": "easbar"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "856f7aeff7f0e21c613fde7f7712f2fa847ecdeb", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["a1f64507f2078fadea528ea82f30cdaae0524fd0"], "nameRev": "856f7aeff7f0e21c613fde7f7712f2fa847ecdeb remotes/origin/github_pck~8", "commitMessage": "GHRoute.js: bug fix #2045\n", "commitDateTime": "2020-05-26 12:13:35", "authoredDateTime": "2020-05-26 12:13:35", "commitGitStats": [{"filePath": "web/src/main/resources/assets/js/graphhopper/GHRoute.js", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fd3cfeacc394c201438caed47b7c2ad1e4961a8e", "commitGHEventType": "closed", "commitUser": "easbar", "commitParents": ["54705c62204982f41a00f80b9c779308d64d32bf"], "nameRev": "fd3cfeacc394c201438caed47b7c2ad1e4961a8e remotes/origin/failing_test_edge_based_ch~10", "commitMessage": "Fix some typos, close #2045\n", "commitDateTime": "2020-06-15 21:37:31", "authoredDateTime": "2020-06-15 21:37:31", "commitGitStats": [{"filePath": "android/app/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "api/src/main/java/com/graphhopper/GHRequest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "client-hc/src/main/java/com/graphhopper/api/MatrixResponse.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/files/changelog.txt", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/coll/CompressedArray.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/reader/dem/GraphElevationSmoothing.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/reader/osm/conditional/DateRangeParser.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/AlternativeRoute.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/InstructionsFromEdges.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/lm/LandmarkStorage.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/Bike2WeightFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/PrepareContractionHierarchiesTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/WheelchairFlagEncoderTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupJTSTest.java", "insertions": 3, "deletions": 10, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/storage/AbstractGraphStorageTester.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/util/AngleCalcTest.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "docs/android/index.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/core/create-new-flagencoder.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/core/eclipse-setup.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/core/edge-based-ch.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "docs/core/landmarks.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/core/low-level-api.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/index.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/isochrone/java.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/web/api-doc.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "reader-osm/src/main/java/com/graphhopper/reader/osm/OSMInputFile.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "reader-osm/src/main/java/com/graphhopper/reader/osm/OSMReader.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "reader-osm/src/main/java/com/graphhopper/reader/osm/pbf/PbfBlobDecoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "reader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "reader-osm/src/test/java/com/graphhopper/routing/RoutingAlgorithmWithOSMTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web-api/src/main/java/com/graphhopper/http/WebHelper.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["856f7aeff7f0e21c613fde7f7712f2fa847ecdeb", "fd3cfeacc394c201438caed47b7c2ad1e4961a8e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 20, "lines": 39, "gitFilesChange": 14}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["api/src/main/java/com/graphhopper", "core/src/main/java/com/graphhopper/coll", "core/src/main/java/com/graphhopper/reader/dem", "core/src/main/java/com/graphhopper/routing", "core/src/main/java/com/graphhopper/routing/lm", "web-bundle/src/main/java/com/graphhopper/resources", "web-api/src/main/java/com/graphhopper/http", "reader-osm/src/main/java/com/graphhopper/reader/osm", "client-hc/src/main/java/com/graphhopper/api", "core/src/main/java/com/graphhopper/routing/util", "reader-osm/src/main/java/com/graphhopper/reader/osm/pbf", "core/src/main/java/com/graphhopper/reader/osm/conditional"]}, {"title": "exception in landmark preparation", "body": "The problem is since we allowed multiple rules. See https://github.com/graphhopper/graphhopper/pull/1903#discussion_r414630805\r\n\r\nThe stacktrace is:\r\n\r\n```\r\nCaused by: java.lang.IndexOutOfBoundsException: Index: 0\r\n        at java.util.Collections$EmptyList.get(Collections.java:4456)\r\n        at java.util.Collections$UnmodifiableList.get(Collections.java:1311)\r\n        at com.graphhopper.routing.lm.LandmarkStorage.findBorderEdgeIds(LandmarkStorage.java:467)\r\n        at com.graphhopper.routing.lm.LandmarkStorage.createLandmarks(LandmarkStorage.java:263)\r\n```\r\n\r\nSo, we probably need some test code to cover this scenario too. @otbutz do you have an idea what could go wrong and why we expected this not to happen for landmarks? Should we just do:\r\n\r\n```java\r\nSpatialRuleSet set = ruleLookup.lookupRules(nodeAccess.getLatitude(adjNode), nodeAccess.getLongitude(adjNode));\r\nSpatialRule ruleAdj = set.getRules().isEmpty() ? null : set.getRules().get(0);\r\n\r\nint baseNode = allEdgesIterator.getBaseNode();\r\nset = ruleLookup.lookupRules(nodeAccess.getLatitude(baseNode), nodeAccess.getLongitude(baseNode));\r\nSpatialRule ruleBase = set.getRules().isEmpty() ? null : set.getRules().get(0);\r\n...\r\n```\r\n?", "url": "https://github.com/graphhopper/graphhopper/issues/2020", "user": "karussell", "labels": ["bug"], "created": "2020-04-27 14:18:53", "closed": "2020-04-27 16:22:48", "commits": {"fd8862df3cc70cc44f3af53ce00eb6ab617be5b8": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fd8862df3cc70cc44f3af53ce00eb6ab617be5b8", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["95d252abefa95e9c1374cd678b6a6bc1bb549b99"], "nameRev": "fd8862df3cc70cc44f3af53ce00eb6ab617be5b8 tags/1.0-pre38", "commitMessage": "add a test for landmark area-splitting, fixes #2020\n", "commitDateTime": "2020-04-27 18:14:51", "authoredDateTime": "2020-04-27 18:14:51", "commitGitStats": [{"filePath": "core/files/split.geo.json", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "core/src/main/java/com/graphhopper/routing/lm/LandmarkStorage.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "web/src/test/java/com/graphhopper/http/resources/RouteResourceIssue2020Test.java", "insertions": 61, "deletions": 0, "lines": 61}, {"filePath": "web/src/test/java/com/graphhopper/http/resources/RouteResourceTest.java", "insertions": 8, "deletions": 4, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LandmarkStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorage.findBorderEdgeIds(com.graphhopper.routing.util.spatialrules.SpatialRuleLookup)", "TOT": 11, "UPD": 2, "INS": 4, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "RouteResourceIssue2020Test.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.resources.RouteResourceIssue2020Test", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteResourceTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testGraphHopperWeb()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testPathDetailsRoadClass()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testPathDetails()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testPathDetailsSamePoint()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testPathDetailsNoConnection()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testInitInstructionsWithTurnDescription()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testSnapPreventions()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testSnapPreventionsAndPointHints()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testGraphHopperWebRealExceptions(boolean)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testGPXExport()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTest.testExportWithoutTrack()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fd8862df3cc70cc44f3af53ce00eb6ab617be5b8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 49, "deletions": 2, "lines": 51, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 11, "UPD": 2, "INS": 4, "MOV": 4, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/lm", "core/files/split.geo.json"], "changesInPackagesSPOON": ["com.graphhopper.routing.lm.LandmarkStorage.findBorderEdgeIds(com.graphhopper.routing.util.spatialrules.SpatialRuleLookup)"]}, {"title": "Internal Server Error when sending POST request to /route without specifying points", "body": "```shell\r\ncurl -X POST -H \"Content-type: application/json\" -d \"{}\" http://localhost:8989/route\r\n\r\nError handling a request: 17a5bee0823f74d0\r\njava.lang.IndexOutOfBoundsException: Index 0 out of bounds for length 0\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1995", "user": "easbar", "labels": ["bug"], "created": "2020-04-17 11:57:55", "closed": "2020-04-23 12:08:48", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "exception for Accept=xml and default type parameter", "body": "The following request\r\n\r\n```\r\ncurl -H \"Accept: application/xml\" \"http://localhost:8989/route?point=42.507145%2C1.537174&point=42.511368%2C1.539116&vehicle=car\"\r\n```\r\n\r\ncauses\r\n\r\n```\r\nInvalidDefinitionException: Direct self-reference leading to cycle (through reference chain: com.graphhopper.util.shapes.BBox[\"bounds\"])\r\n```\r\n\r\nWe should remove the \"produce xml\" annotation as we rely only on the type parameter.", "url": "https://github.com/graphhopper/graphhopper/issues/1982", "user": "karussell", "labels": ["bug", "web"], "created": "2020-04-07 16:44:56", "closed": "2020-04-17 17:29:34", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "Isochrone issue with distance_limit compared to actual route when not using ShortestWeighting", "body": "I just saw an issue with the Isochrone calculation. When I pass a time_limit, the resulting isoline surrounds more or less exactly the area that I can reach within the given time. When I pass a distance_limit, the resulting isoline seems to differ significantly from the give distance.\r\n\r\nHere is one example with 10km, but this seems to be the case for every example I have checked so far:\r\n`/isochrone?point=48.692958,9.461932&distance_limit=10000&vehicle=car`\r\n\r\nThe resulting polygon looks like this:\r\n![Screenshot from 2020-03-31 17-14-22](https://user-images.githubusercontent.com/1553525/78043144-425c4d00-7373-11ea-9d69-d866208de0c3.png)\r\n\r\nIf I pick any point at random at the border of the polygon, for example [this one](https://graphhopper.com/maps/?point=48.692958%2C9.461932&point=48.670219%2C9.529438&locale=de-DE&vehicle=car&weighting=shortest&turn_costs=true&use_miles=false&layer=Omniscale). The resulting route is < 7km. I would have expected the resulting route to be close to the requested 10km.", "url": "https://github.com/graphhopper/graphhopper/issues/1979", "user": "boldtrn", "labels": ["bug"], "created": "2020-03-31 15:19:14", "closed": "2020-04-07 19:32:19", "commits": {"5309761c22c24965ecad47b72f4a42fc5ae89f51": {"commitGHEventType": "closed", "commitUser": "michaz"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "5309761c22c24965ecad47b72f4a42fc5ae89f51", "commitGHEventType": "closed", "commitUser": "michaz", "commitParents": ["ad16a9016d89dde69dcb9aaba0450a47c225eb37"], "nameRev": "5309761c22c24965ecad47b72f4a42fc5ae89f51 tags/1.0-pre33.4~12", "commitMessage": "Stopping criterion for Isochrones/SPT; fixes #1979\n", "commitDateTime": "2020-04-07 12:27:55", "authoredDateTime": "2020-04-07 12:27:55", "commitGitStats": [{"filePath": "isochrone/src/main/java/com/graphhopper/isochrone/algorithm/ShortestPathTree.java", "insertions": 28, "deletions": 26, "lines": 54}, {"filePath": "isochrone/src/test/java/com/graphhopper/isochrone/algorithm/ShortestPathTreeTest.java", "insertions": 32, "deletions": 14, "lines": 46}, {"filePath": "web/src/test/java/com/graphhopper/http/resources/IsochroneResourceTest.java", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ShortestPathTree.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.isochrone.algorithm.ShortestPathTree", "TOT": 5, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.isochrone.algorithm.ShortestPathTree.search(int,java.util.function.Consumer)", "TOT": 53, "UPD": 6, "INS": 19, "MOV": 11, "DEL": 17}, {"spoonMethodName": "com.graphhopper.isochrone.algorithm.ShortestPathTree.finished()", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.isochrone.algorithm.ShortestPathTree.extractPath()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.graphhopper.isochrone.algorithm.ShortestPathTree.setTimeLimit(double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.isochrone.algorithm.ShortestPathTree.setDistanceLimit(double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShortestPathTreeTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.isochrone.algorithm.ShortestPathTreeTest.testSearch60Seconds()", "TOT": 27, "UPD": 9, "INS": 1, "MOV": 17, "DEL": 0}, {"spoonMethodName": "com.graphhopper.isochrone.algorithm.ShortestPathTreeTest.testSearch25Seconds()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.isochrone.algorithm.ShortestPathTreeTest.testSearchByDistance()", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IsochroneResourceTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.resources.IsochroneResourceTest.requestWithShortest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5309761c22c24965ecad47b72f4a42fc5ae89f51"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 26, "lines": 54, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 71, "UPD": 11, "INS": 25, "MOV": 15, "DEL": 20, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["isochrone/src/main/java/com/graphhopper/isochrone/algorithm"], "changesInPackagesSPOON": ["com.graphhopper.isochrone.algorithm.ShortestPathTree", "com.graphhopper.isochrone.algorithm.ShortestPathTree.finished()", "com.graphhopper.isochrone.algorithm.ShortestPathTree.setTimeLimit(double)", "com.graphhopper.isochrone.algorithm.ShortestPathTree.search(int,java.util.function.Consumer)", "com.graphhopper.isochrone.algorithm.ShortestPathTree.setDistanceLimit(double)", "com.graphhopper.isochrone.algorithm.ShortestPathTree.extractPath()"]}, {"title": "problem for GTFS", "body": "Hello Graphhopper Team\r\n\r\nI follow all below step: \r\nwget -O gtfs-vbb.zip http://transitfeeds.com/p/verkehrsverbund-berlin brandenburg/213/latest/download\r\nwget http://download.geofabrik.de/europe/germany/brandenburg-latest.osm.pbf\r\n./graphhopper.sh build\r\n\r\njava -Xmx8g -Xms8g \\\r\n  -Ddw.graphhopper.datareader.file=brandenburg-latest.osm.pbf \\\r\n  -Ddw.graphhopper.gtfs.file=gtfs-vbb.zip \\\r\n  -Ddw.graphhopper.graph.flag_encoders=pt \\\r\n  -Ddw.graphhopper.graph.location=./graph-cache \\\r\n  -jar web/target/graphhopper-web-*.jar server config.yml\r\n\r\nThen i get problem:\r\njava.lang.IllegalArgumentException: entry in encoder list not supported pt\r\n\tat com.graphhopper.routing.util.DefaultFlagEncoderFactory.createFlagEncoder(DefaultFlagEncoderFactory.java:60)\r\n\tat com.graphhopper.routing.util.EncodingManager.parseEncoderString(EncodingManager.java:393)\r\n\tat com.graphhopper.routing.util.EncodingManager$Builder.addAll(EncodingManager.java:190)\r\n\tat com.graphhopper.GraphHopper.createEncodingManager(GraphHopper.java:572)\r\n\tat com.graphhopper.GraphHopper.init(GraphHopper.java:517)\r\n\tat com.graphhopper.http.GraphHopperManaged.<init>(GraphHopperManaged.java:90)\r\n\tat com.graphhopper.http.GraphHopperBundle.run(GraphHopperBundle.java:201)\r\n\tat com.graphhopper.http.GraphHopperBundle.run(GraphHopperBundle.java:55)\r\n\tat io.dropwizard.setup.Bootstrap.run(Bootstrap.java:200)\r\n\tat io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:42)\r\n\tat io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:87)\r\n\tat io.dropwizard.cli.Cli.run(Cli.java:78)\r\n\tat io.dropwizard.Application.run(Application.java:93)\r\n\tat com.graphhopper.http.GraphHopperApplication.main(GraphHopperApplication.java:36)\r\n\r\n\r\nPls help me", "url": "https://github.com/graphhopper/graphhopper/issues/1973", "user": "Datn1298", "labels": ["bug", "public transport"], "created": "2020-03-29 03:43:39", "closed": "2020-06-02 13:33:18", "commits": {"01a0cbe82e5a71c8ec1db3c318040ad37ce6b57a": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "c4bc99bea068ed6996e1ce440127c27afd2eb903": {"commitGHEventType": "closed", "commitUser": "michaz"}}, "ttf": 65.00027777777778, "commitsDetails": [{"commitHash": "01a0cbe82e5a71c8ec1db3c318040ad37ce6b57a", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["856f7aeff7f0e21c613fde7f7712f2fa847ecdeb"], "nameRev": "01a0cbe82e5a71c8ec1db3c318040ad37ce6b57a remotes/origin/github_pck~7", "commitMessage": "add gtfs.file to config-example.yml, #1973\n", "commitDateTime": "2020-05-26 12:14:24", "authoredDateTime": "2020-05-26 12:13:54", "commitGitStats": [{"filePath": "config-example.yml", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c4bc99bea068ed6996e1ce440127c27afd2eb903", "commitGHEventType": "closed", "commitUser": "michaz", "commitParents": ["9bf262578a8dee4a2a0cb46cc4e4f90fb5ec7f82"], "nameRev": "c4bc99bea068ed6996e1ce440127c27afd2eb903 remotes/origin/jmh_experiment~6", "commitMessage": "Update transit README.md; fixes #1973\n", "commitDateTime": "2020-06-02 15:33:12", "authoredDateTime": "2020-06-02 15:33:05", "commitGitStats": [{"filePath": "reader-gtfs/README.md", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "reader-gtfs/config-example-pt.yml", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperGtfs.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GraphHopperGtfs.insertTransfersBetweenFeeds(java.util.HashMap)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.reader.gtfs.GraphHopperGtfs.importPublicTransit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["01a0cbe82e5a71c8ec1db3c318040ad37ce6b57a", "c4bc99bea068ed6996e1ce440127c27afd2eb903"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 18, "deletions": 1, "lines": 19, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 1.0, "MOV": 0.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["reader-gtfs/src/main/java/com/graphhopper/reader/gtfs", "config-example.yml", "reader-gtfs/config-example-pt.yml"], "changesInPackagesSPOON": ["com.graphhopper.reader.gtfs.GraphHopperGtfs.insertTransfersBetweenFeeds(java.util.HashMap)", "com.graphhopper.reader.gtfs.GraphHopperGtfs.importPublicTransit()"]}, {"title": "turn_costs handling in /isochrone", "body": "Recently we fixed the handling of turn_costs for the /isochrone endpoint on the 1.0-pre32-fixes, but these changes also need to be ported to current master. \r\n\r\n* [x] proper handling of turn costs parameter for /isochrone and /spt \r\n* [x] The other thing we are missing is the turn_costs<->edge_based conversion we are already doing for /route (at least for GET requests, see #1966). The same holds for /spt as well! -> done here: 8a24e31eb772e5989c4e3eb1fc09068986a608a5", "url": "https://github.com/graphhopper/graphhopper/issues/1967", "user": "easbar", "labels": ["bug"], "created": "2020-03-26 11:11:37", "closed": "2020-03-31 15:03:00", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "POST /route does not convert between `turn_costs` and `edge_based`", "body": "Currently we only do this for GET but not for POST. We are also not enabling `edge_based` in case there are curbsides as we do for GET.", "url": "https://github.com/graphhopper/graphhopper/issues/1966", "user": "easbar", "labels": ["bug"], "created": "2020-03-26 11:06:07", "closed": "2020-03-29 13:40:08", "commits": {"f88307df2577ec26c9054bf87227adc662105036": {"commitGHEventType": "closed", "commitUser": "easbar"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "f88307df2577ec26c9054bf87227adc662105036", "commitGHEventType": "closed", "commitUser": "easbar", "commitParents": ["fb3eed814b567cfebde3bed20c3c273e7344c913"], "nameRev": "f88307df2577ec26c9054bf87227adc662105036 tags/1.0-pre33.2~9", "commitMessage": "Convert turn_costs parameter to edge_based also for POST /route, fix #1966\n", "commitDateTime": "2020-03-29 15:38:43", "authoredDateTime": "2020-03-29 12:46:01", "commitGitStats": [{"filePath": "web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "web/src/test/java/com/graphhopper/http/resources/RouteResourceTurnCostsTest.java", "insertions": 45, "deletions": 15, "lines": 60}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RouteResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.RouteResource.doPost(com.graphhopper.GHRequest,javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteResourceTurnCostsTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTurnCostsTest.getQuery_canToggleTurnCostsOnOff(java.lang.String)", "TOT": 10, "UPD": 10, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTurnCostsTest.assertDistanceGet(java.lang.String,double)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTurnCostsTest.assertDistance(java.lang.String,java.lang.Boolean,java.lang.Boolean,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTurnCostsTest.assertDistanceGet(java.lang.String,java.lang.Boolean,java.lang.Boolean,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTurnCostsTest.assertDistancePost(java.lang.String,java.lang.Boolean,java.lang.Boolean,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceTurnCostsTest.assertDistance(javax.ws.rs.core.Response,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f88307df2577ec26c9054bf87227adc662105036"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["web-bundle/src/main/java/com/graphhopper/resources"], "changesInPackagesSPOON": ["com.graphhopper.resources.RouteResource.doPost(com.graphhopper.GHRequest,javax.servlet.http.HttpServletRequest)"]}, {"title": "LM preparation might run with turn costs even though its node-based", "body": "Here: https://github.com/graphhopper/graphhopper/pull/1949#discussion_r390257047 we decided to run the LM preparation with node-based graph traversal to make sure there are no turn costs. However, this is not sufficient to disable turn costs. Since the LM preparation runs node-based we cannot include turn costs, but therefore we also have to make sure that the weighting does not return any turn weights (or we have to make the `calcWeight` method in the algorithm(s)(at least the one for LM preparation) aware of the traversal mode (do not include turn costs for node-based)).\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1960", "user": "easbar", "labels": ["bug"], "created": "2020-03-18 23:27:13", "closed": "2020-03-19 13:51:08", "commits": {"7f332492c8eff051f9ae06783aae656ac4e7e6fc": {"commitGHEventType": "referenced", "commitUser": "easbar"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7f332492c8eff051f9ae06783aae656ac4e7e6fc", "commitGHEventType": "referenced", "commitUser": "easbar", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "isochrone returns 2d and 3d coordinates mixed", "body": "config enables elevation (CGIAR) then this request:\r\n\r\n> /isochrone?point=24.982444,55.133875&time_limit=900&buckets=3&vehicle=bike2\r\n\r\nreturns response with 2D coordinates in last bucket.\r\n\r\nAlso the parameter elevation=false/true does not seem to work for /isochrone", "url": "https://github.com/graphhopper/graphhopper/issues/1957", "user": "karussell", "labels": ["bug"], "created": "2020-03-17 16:59:05", "closed": "2020-04-07 20:43:48", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "Command line arguments in graphhopper.sh not working with current config-example.yml", "body": "when i first run `./graphhopper.sh -a web -i europe_germany_berlin.pbf` on my windows10 ,it is come out.\r\n\r\n`io.dropwizard.configuration.ConfigurationParsingException: config.yml has an error:\r\n  * Failed to parse configuration at: graphhopper.graph; Cannot deserialize instance of `java.lang.String` out of START_OBJECT token\r\n at [Source: UNKNOWN; line: -1, column: -1] (through reference chain: com.graphhopper.http.GraphHopperServerConfiguration[\"graphhopper\"]->java.util.LinkedHashMap[\"graph\"])\r\n\r\n        at io.dropwizard.configuration.ConfigurationParsingException$Builder.build(ConfigurationParsingException.java:279)\r\n        at io.dropwizard.configuration.BaseConfigurationFactory.build(BaseConfigurationFactory.java:156)\r\n        at io.dropwizard.configuration.BaseConfigurationFactory.build(BaseConfigurationFactory.java:89)\r\n        at io.dropwizard.cli.ConfiguredCommand.parseConfiguration(ConfiguredCommand.java:126)\r\n        at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:74)\r\n        at io.dropwizard.cli.Cli.run(Cli.java:78)\r\n        at io.dropwizard.Application.run(Application.java:93)\r\n        at com.graphhopper.http.GraphHopperApplication.main(GraphHopperApplication.java:34)\r\nCaused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.String` out of START_OBJECT token\r\n at [Source: UNKNOWN; line: -1, column: -1] (through reference chain: com.graphhopper.http.GraphHopperServerConfiguration[\"graphhopper\"]->java.util.LinkedHashMap[\"graph\"])\r\n        at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1343)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1139)\r\n        at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1093)\r\n        at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:63)\r\n        at com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:10)\r\n        at com.fasterxml.jackson.databind.deser.std.MapDeserializer._readAndBindStringKeyMap(MapDeserializer.java:527)\r\n        at com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:364)\r\n        at com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(MapDeserializer.java:29)\r\n        at com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:3984)\r\n        at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2300)\r\n        at com.fasterxml.jackson.core.JsonParser.readValueAs(JsonParser.java:1752)\r\n        at com.graphhopper.jackson.CmdArgsDeserializer.deserialize(CmdArgsDeserializer.java:21)\r\n        at com.graphhopper.jackson.CmdArgsDeserializer.deserialize(CmdArgsDeserializer.java:13)\r\n        at com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(FieldProperty.java:138)\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:288)\r\n        at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:151)\r\n        at com.fasterxml.jackson.databind.ObjectMapper._readValue(ObjectMapper.java:3984)\r\n        at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2276)\r\n        at io.dropwizard.configuration.BaseConfigurationFactory.build(BaseConfigurationFactory.java:127)\r\n        ... 6 more`", "url": "https://github.com/graphhopper/graphhopper/issues/1921", "user": "VoidK2", "labels": ["bug"], "created": "2020-02-19 04:05:00", "closed": "2020-02-21 11:06:11", "commits": {"c3845226230a67de41d3e7dff3fd6203167567b8": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "a369212341d84f494a27432842177fdd2d073da7": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "c3845226230a67de41d3e7dff3fd6203167567b8", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["505ee53f37cafe246c6893d1a0615a7ffbfe0e86"], "nameRev": "c3845226230a67de41d3e7dff3fd6203167567b8 remotes/origin/snake_case~2", "commitMessage": "use snake_case globally, also fix #1921\n", "commitDateTime": "2020-02-21 09:41:36", "authoredDateTime": "2020-02-21 09:41:36", "commitGitStats": [{"filePath": "client-hc/src/main/java/com/graphhopper/api/GraphHopperWeb.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "config-example.yml", "insertions": 18, "deletions": 16, "lines": 34}, {"filePath": "core/files/changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/GHRequestMixIn.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/Jackson.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GraphHopperBundle.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperWeb.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.api.GraphHopperWeb", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHRequestMixIn.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.jackson", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Jackson.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.jackson.Jackson.initObjectMapperWithSnake(com.fasterxml.jackson.databind.ObjectMapper)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "GraphHopperBundle.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperBundle.initialize(io.dropwizard.setup.Bootstrap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a369212341d84f494a27432842177fdd2d073da7", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["2136ec322bd8469f789c11d444c92606315e75b7"], "nameRev": "a369212341d84f494a27432842177fdd2d073da7 tags/1.0-pre25~11", "commitMessage": "no need to explicitely list the snake case methods (#1918)\n\n* no need to explicitely list the snake case methods of GHRequest in GHRequestMixIn\r\n\r\n* use snake_case globally, also fix #1921\r\n\r\n* remove imports\r\n\r\n* add node js tool to changelog\r\n", "commitDateTime": "2020-02-21 12:06:09", "authoredDateTime": "2020-02-21 12:06:09", "commitGitStats": [{"filePath": "config-example.yml", "insertions": 18, "deletions": 16, "lines": 34}, {"filePath": "core/files/changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/GHRequestMixIn.java", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/Jackson.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GraphHopperBundle.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GHRequestMixIn.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.jackson.setPointHints(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.jackson.setSnapPreventions(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.jackson.setCurbsides(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "Jackson.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.jackson.Jackson.initObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperBundle.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperBundle.initialize(io.dropwizard.setup.Bootstrap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 1, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "strange hike route", "body": "The tour is 9min vs. 1min and still being picked: https://graphhopper.com/maps/?point=59.912966%2C10.866337&point=59.913536%2C10.867946&locale=nb&vehicle=hike\r\n\r\nMaybe some bug in our tagging processing for [this way](https://www.openstreetmap.org/way/113662058)?", "url": "https://github.com/graphhopper/graphhopper/issues/1919", "user": "karussell", "labels": ["bug"], "created": "2020-02-18 14:30:03", "closed": "2020-04-17 17:32:42", "commits": {}, "ttf": 59.000277777777775, "commitsDetails": []}, {"title": "PathDetails Country, DEU / AUT switched", "body": "I just tried the new SpatilRule PR #1853\r\n\r\nI am not yet sure if it's related to the PR or not.\r\n\r\nIf I set the config to:\r\n\r\n```\r\ngraph.encoded_values: country\r\n```\r\n\r\nAnd request a route, the resulting PathDetails are switched. Germany is AUT and Austria is DEU.\r\n\r\n![Screenshot from 2020-01-28 14-57-19](https://user-images.githubusercontent.com/1553525/73270276-a1b8a800-41de-11ea-8e98-96ab11f7b29a.png)\r\n![Screenshot from 2020-01-28 14-57-14](https://user-images.githubusercontent.com/1553525/73270277-a1b8a800-41de-11ea-9d4d-05fe01fb5563.png)", "url": "https://github.com/graphhopper/graphhopper/issues/1875", "user": "boldtrn", "labels": ["bug"], "created": "2020-01-28 13:58:37", "closed": "2020-02-21 12:02:00", "commits": {"d82691d56d49b6730158034a7fbd3a259acd72e4": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "b57a55e3ae9e7a12b76a3ff15eeebd68f4c43e00": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "d82691d56d49b6730158034a7fbd3a259acd72e4", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["1299b3b08a0810f842df4ff37a8e877a9189eab2"], "nameRev": "d82691d56d49b6730158034a7fbd3a259acd72e4 remotes/origin/issue_1875~2", "commitMessage": "trying to fix #1875\n", "commitDateTime": "2020-02-14 18:09:12", "authoredDateTime": "2020-02-14 18:09:12", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/profiles/Country.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/DefaultTagParserFactory.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/SpatialRuleParser.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/CountriesSpatialRuleFactory.java", "insertions": 18, "deletions": 10, "lines": 28}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupBuilder.java", "insertions": 8, "deletions": 21, "lines": 29}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupHelper.java", "insertions": 42, "deletions": 7, "lines": 49}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupJTS.java", "insertions": 15, "deletions": 25, "lines": 40}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/SpatialRuleParserTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupBuilderTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupHelperTest.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "reader-osm/src/main/java/com/graphhopper/reader/osm/GraphHopperOSM.java", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GraphHopperManaged.java", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "web/src/test/java/com/graphhopper/http/SpatialRulesTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Country.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.profiles.Country.create()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultTagParserFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.parsers.DefaultTagParserFactory.create(java.lang.String,com.graphhopper.util.PMap)", "TOT": 39, "UPD": 0, "INS": 3, "MOV": 35, "DEL": 1}]}, {"spoonFilePath": "SpatialRuleParser.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.parsers.SpatialRuleParser", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CountriesSpatialRuleFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.CountriesSpatialRuleFactory.createSpatialRule(java.lang.String,java.util.List)", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "SpatialRuleLookupBuilder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilder", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilder.buildIndex(java.util.List,java.lang.String,com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilder$SpatialRuleFactory,org.locationtech.jts.geom.Envelope)", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SpatialRuleLookupHelper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.buildAndInjectSpatialRuleIntoGH(com.graphhopper.GraphHopper,org.locationtech.jts.geom.Envelope,java.util.List)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.reorder(java.util.List,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.buildAndInjectCountrySpatialRules(com.graphhopper.GraphHopper,org.locationtech.jts.geom.Envelope,java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.buildAndInjectCountrySpatialRules(com.graphhopper.GraphHopper,org.locationtech.jts.geom.Envelope,java.util.List).1.create(java.lang.String,com.graphhopper.util.PMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpatialRuleLookupJTS.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupJTS", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupJTS.getBounds()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupJTS.lookupRule(double,double)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpatialRuleParserTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.parsers.SpatialRuleParserTest.testMixParserAdding()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpatialRuleLookupBuilderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilderTest.testSpatialId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpatialRuleLookupHelperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelperTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperOSM.java", "spoonMethods": []}, {"spoonFilePath": "GraphHopperManaged.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperManaged", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpatialRulesTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.SpatialRulesTest", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b57a55e3ae9e7a12b76a3ff15eeebd68f4c43e00", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["a369212341d84f494a27432842177fdd2d073da7"], "nameRev": "b57a55e3ae9e7a12b76a3ff15eeebd68f4c43e00 tags/1.0-pre25~10", "commitMessage": "fix country rule ordering (#1911)\n\n* trying to fix #1875\r\n\r\n* revert to spatial_rules.* names\r\n\r\n* forgot one occurance\r\n", "commitDateTime": "2020-02-21 13:01:59", "authoredDateTime": "2020-02-21 13:01:59", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/profiles/Country.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/DefaultTagParserFactory.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/SpatialRuleParser.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/CountriesSpatialRuleFactory.java", "insertions": 18, "deletions": 10, "lines": 28}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupBuilder.java", "insertions": 8, "deletions": 21, "lines": 29}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupHelper.java", "insertions": 42, "deletions": 7, "lines": 49}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupJTS.java", "insertions": 15, "deletions": 25, "lines": 40}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/SpatialRuleParserTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupBuilderTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupHelperTest.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "reader-osm/src/main/java/com/graphhopper/reader/osm/GraphHopperOSM.java", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GraphHopperManaged.java", "insertions": 5, "deletions": 4, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Country.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.profiles.Country.create()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultTagParserFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.parsers.DefaultTagParserFactory.create(java.lang.String,com.graphhopper.util.PMap)", "TOT": 39, "UPD": 0, "INS": 3, "MOV": 35, "DEL": 1}]}, {"spoonFilePath": "SpatialRuleParser.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.parsers.SpatialRuleParser", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CountriesSpatialRuleFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.CountriesSpatialRuleFactory.createSpatialRule(java.lang.String,java.util.List)", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "SpatialRuleLookupBuilder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilder", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilder.buildIndex(java.util.List,java.lang.String,com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilder$SpatialRuleFactory,org.locationtech.jts.geom.Envelope)", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "SpatialRuleLookupHelper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.buildAndInjectSpatialRuleIntoGH(com.graphhopper.GraphHopper,org.locationtech.jts.geom.Envelope,java.util.List)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.reorder(java.util.List,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.buildAndInjectCountrySpatialRules(com.graphhopper.GraphHopper,org.locationtech.jts.geom.Envelope,java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.buildAndInjectCountrySpatialRules(com.graphhopper.GraphHopper,org.locationtech.jts.geom.Envelope,java.util.List).1.create(java.lang.String,com.graphhopper.util.PMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpatialRuleLookupJTS.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupJTS", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupJTS.getBounds()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupJTS.lookupRule(double,double)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpatialRuleParserTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.parsers.SpatialRuleParserTest.testMixParserAdding()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpatialRuleLookupBuilderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilderTest.testSpatialId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpatialRuleLookupHelperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelperTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperOSM.java", "spoonMethods": []}, {"spoonFilePath": "GraphHopperManaged.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperManaged", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d82691d56d49b6730158034a7fbd3a259acd72e4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 108, "deletions": 83, "lines": 191, "gitFilesChange": 9}, "spoonStatsSummary": {"TOT": 78, "UPD": 17, "INS": 16, "MOV": 38, "DEL": 7, "spoonFilesChanged": 8, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util/parsers", "core/src/main/java/com/graphhopper/routing/util/spatialrules", "web-bundle/src/main/java/com/graphhopper/http", "core/src/main/java/com/graphhopper/routing/profiles", "reader-osm/src/main/java/com/graphhopper/reader/osm"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.spatialrules.SpatialRuleLookupJTS", "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper", "com.graphhopper.routing.profiles.Country.create()", "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupJTS.getBounds()", "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilder", "com.graphhopper.routing.util.spatialrules.CountriesSpatialRuleFactory.createSpatialRule(java.lang.String,java.util.List)", "com.graphhopper.http.GraphHopperManaged", "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.reorder(java.util.List,java.util.List)", "com.graphhopper.routing.util.parsers.DefaultTagParserFactory.create(java.lang.String,com.graphhopper.util.PMap)", "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilder.buildIndex(java.util.List,java.lang.String,com.graphhopper.routing.util.spatialrules.SpatialRuleLookupBuilder$SpatialRuleFactory,org.locationtech.jts.geom.Envelope)", "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupJTS.lookupRule(double,double)", "com.graphhopper.routing.util.parsers.SpatialRuleParser", "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.buildAndInjectCountrySpatialRules(com.graphhopper.GraphHopper,org.locationtech.jts.geom.Envelope,java.util.List).1.create(java.lang.String,com.graphhopper.util.PMap)", "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.buildAndInjectSpatialRuleIntoGH(com.graphhopper.GraphHopper,org.locationtech.jts.geom.Envelope,java.util.List)", "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupHelper.buildAndInjectCountrySpatialRules(com.graphhopper.GraphHopper,org.locationtech.jts.geom.Envelope,java.util.List)"]}, {"title": "Initialization with example config should work like the default Java settings", "body": "I am author of https://graphhopper.develar.org/ and contributor of [locus-addon-graphhopper](https://github.com/asamm/locus-addon-graphhopper).\r\n\r\nI working on updating to `1.0-pre18`, as latest release 0.13 version is not usable (see https://github.com/asamm/locus-addon-graphhopper/pull/4#issuecomment-577033241)\r\n\r\nI regenerated all maps, but now I get error  \"\"Encoded values do not match:\"\" \r\n![image](https://user-images.githubusercontent.com/350686/72975013-595d4c80-3dd0-11ea-8cc1-9184e092d91c.png)\r\n\r\nproblem is that last shift `24` (config) is not equal to `27` (27).\r\n\r\nI do not understand the error and what I should do to fix it. Looks like that check is too strict.\r\n\r\nAndroid version: 8.1.0\r\nJava version to generate routing data: 13.0.1+9-jre\r\ngh config to build routing data: https://github.com/develar/gh-routing-data/blob/c0fe3f5a396c5a03a47bd8268c2691460291f56c/internal/builder/builder.go#L158\r\n\r\nAndroid java code to create is very simple  (and it worked for 0.11):\r\n\r\n```\r\nGraphHopper gh = new GraphHopper().forMobile();\r\ngh.setAllowWrites(false);\r\ngh.setCHEnabled(true);\r\ngh.setElevation(true);\r\nboolean load = gh.load(routingItem.getAbsolutePath());\r\n```\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1862", "user": "develar", "labels": ["bug"], "created": "2020-01-23 10:13:04", "closed": "2020-01-30 13:33:56", "commits": {"0fc2e284c7a02a1c24d481d8a955b42d337ec4f1": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "2b06bd28083c11746ba63ee0dd60622832391ae8": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "0fc2e284c7a02a1c24d481d8a955b42d337ec4f1", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["a155832261ff56e0e71e796174931784ebe4fb8a"], "nameRev": "0fc2e284c7a02a1c24d481d8a955b42d337ec4f1 remotes/origin/issue_1862~4", "commitMessage": "found improvement for bit range calculation; fix issue with configured EncodingManager to make #1862 easier\n", "commitDateTime": "2020-01-28 15:32:54", "authoredDateTime": "2020-01-28 15:32:54", "commitGitStats": [{"filePath": "config-example.yml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/routing/profiles/EnumEncodedValue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/EncodingManager.java", "insertions": 21, "deletions": 16, "lines": 37}, {"filePath": "core/src/test/java/com/graphhopper/reader/dem/BridgeElevationInterpolatorTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/test/java/com/graphhopper/routing/PathTest.java", "insertions": 5, "deletions": 15, "lines": 20}, {"filePath": "core/src/test/java/com/graphhopper/routing/profiles/EnumEncodedValueTest.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/storage/AbstractGraphStorageTester.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageTest.java", "insertions": 41, "deletions": 1, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EnumEncodedValue.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.profiles.EnumEncodedValue", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EncodingManager.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.EncodingManager.addEncodedValue(com.graphhopper.routing.util.EncodedValue,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.EncodingManager.Builder.build()", "TOT": 35, "UPD": 25, "INS": 2, "MOV": 7, "DEL": 1}]}, {"spoonFilePath": "BridgeElevationInterpolatorTest.java", "spoonMethods": []}, {"spoonFilePath": "PathTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.PathTest.testCalcInstructionsEnterMotoway()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.PathTest.testCalcInstructionsMotowayJunction()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.PathTest.testFound()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.PathTest.testWayList()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnumEncodedValueTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.profiles.EnumEncodedValueTest.testInit()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.profiles.EnumEncodedValueTest.testSize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractGraphStorageTester.java", "spoonMethods": []}, {"spoonFilePath": "GraphHopperStorageTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageTest.testLoadGraph_implicitEncodedValues_issue1862()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "2b06bd28083c11746ba63ee0dd60622832391ae8", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["7c52b8ab54c5dde19902d4d37daa26f65a0b699a"], "nameRev": "2b06bd28083c11746ba63ee0dd60622832391ae8 tags/1.0-pre21~16", "commitMessage": "Improve picking up default graph (#1876)\n\n* found improvement for bit range calculation; fix issue with configured EncodingManager to make #1862 easier\r\n\r\n* made all tests pass\r\n\r\n* Fixes test\r\n\r\n* test fix regarding TurnCost.key\r\n\r\nCo-authored-by: Andi <easbar.mail@posteo.net>\r\n", "commitDateTime": "2020-01-30 14:33:55", "authoredDateTime": "2020-01-30 14:33:55", "commitGitStats": [{"filePath": "config-example.yml", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/routing/InstructionsFromEdges.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/Path.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/routing/profiles/DefaultEncodedValueFactory.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/profiles/EnumEncodedValue.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/profiles/RouteNetwork.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "core/src/main/java/com/graphhopper/routing/profiles/TurnCost.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/EncodingManager.java", "insertions": 26, "deletions": 21, "lines": 47}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMBikeNetworkTagParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMFootNetworkTagParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/weighting/DefaultTurnCostProvider.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/storage/TurnCostStorage.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/util/GHUtility.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/reader/dem/BridgeElevationInterpolatorTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/test/java/com/graphhopper/routing/BidirPathExtractorTest.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/routing/DirectedBidirectionalDijkstraTest.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/routing/PathTest.java", "insertions": 13, "deletions": 24, "lines": 37}, {"filePath": "core/src/test/java/com/graphhopper/routing/profiles/EnumEncodedValueTest.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/routing/querygraph/QueryGraphTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/AbstractBikeFlagEncoderTester.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/EncodingManagerTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java", "insertions": 12, "deletions": 6, "lines": 18}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageTest.java", "insertions": 42, "deletions": 1, "lines": 43}, {"filePath": "reader-osm/src/test/java/com/graphhopper/reader/osm/OSMReaderTest.java", "insertions": 9, "deletions": 11, "lines": 20}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["0fc2e284c7a02a1c24d481d8a955b42d337ec4f1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 26, "deletions": 21, "lines": 47, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 38.0, "UPD": 26.0, "INS": 3.0, "MOV": 8.0, "DEL": 1.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util", "core/src/main/java/com/graphhopper/routing/profiles", "config-example.yml"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.EncodingManager.addEncodedValue(com.graphhopper.routing.util.EncodedValue,boolean)", "com.graphhopper.routing.profiles.EnumEncodedValue", "com.graphhopper.routing.util.EncodingManager.Builder.build()"]}, {"title": "average_speed was infinite error in PathDetail calculation", "body": "I am running into this error:\r\n\r\nhttps://github.com/graphhopper/graphhopper/blob/e72c67d7fdad39c5cd1b3ecaeb91ec65ae5d9eb2/core/src/main/java/com/graphhopper/util/details/AverageSpeedDetails.java#L37-L41\r\n\r\nI think the error is thrown whenever the edge distance is below a certain threshold (because then `calcMillis` will return zero). What mechanism is supposed to prevent this error ? We'd have to exclude edges below a certain distance or something (which as far as I know we do not) ?.\r\n\r\nAnd another question: Why are we calculating speed=distance/time here ? Can we not just use the `averageSpeedEnc` to obtain the speed directly from the edge ?", "url": "https://github.com/graphhopper/graphhopper/issues/1848", "user": "easbar", "labels": ["bug"], "created": "2020-01-09 14:44:08", "closed": "2020-01-28 11:50:07", "commits": {"0ec1163ff57b401b6698ce2bc7d99cfae042a726": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "9791b3fae4b60726bf1e8ea7a3efff080a1dab87": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "0ec1163ff57b401b6698ce2bc7d99cfae042a726", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9791b3fae4b60726bf1e8ea7a3efff080a1dab87", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["4582ee033819474b5a6ecbde8fe352d40722c274"], "nameRev": "9791b3fae4b60726bf1e8ea7a3efff080a1dab87 tags/1.0-pre19~2", "commitMessage": "AverageSpeedDetails: avoid exception for short edges (#1871)\n\n* AverageSpeedDetails: avoid exception for short edges, fixes #1848\r\n\r\n* add comment for this limitation\r\n\r\nCo-authored-by: Andi <easbar.mail@posteo.net>\r\n", "commitDateTime": "2020-01-28 12:50:06", "authoredDateTime": "2020-01-28 12:50:06", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/storage/BaseGraph.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/util/details/AverageSpeedDetails.java", "insertions": 14, "deletions": 5, "lines": 19}, {"filePath": "core/src/test/java/com/graphhopper/routing/PathTest.java", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "reader-osm/src/main/java/com/graphhopper/reader/osm/OSMReader.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BaseGraph.java", "spoonMethods": []}, {"spoonFilePath": "AverageSpeedDetails.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.details.AverageSpeedDetails", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.details.AverageSpeedDetails.isEdgeDifferentToLastEdge(com.graphhopper.util.EdgeIteratorState)", "TOT": 14, "UPD": 1, "INS": 7, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "PathTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.PathTest.testCalcAverageSpeedDetailsWithShortDistances_issue1848()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.PathTest.generatePathDetailsGraph()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "OSMReader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.OSMReader.addEdge(int,int,com.graphhopper.reader.osm.PointList,com.graphhopper.reader.osm.IntsRef,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Problem with bicycle=yes and vehicle=destination", "body": "Following route https://graphhopper.com/maps/?point=48.179737%2C16.115484&point=48.175072%2C16.122608&locale=de&vehicle=bike&weighting=fastest&elevation=true&use_miles=false&layer=Omniscale results in a big unexpected de-tour. I found out that one needs to remove the tags `vehicle=destination` and `motor_vehicle=destination` from way https://www.openstreetmap.org/way/155156339 in order to get an expected result.\r\nTo me it looks to be a problem outside of the bicycle specific routing because I couldn't create a bicycle specific test to nail down this problem.", "url": "https://github.com/graphhopper/graphhopper/issues/1831", "user": "ratrun", "labels": ["bug"], "created": "2019-12-19 17:25:57", "closed": "2020-02-27 16:05:10", "commits": {"1f2084fde36c9250d7fea59b609234145a226792": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 69.00027777777778, "commitsDetails": [{"commitHash": "1f2084fde36c9250d7fea59b609234145a226792", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["3a163c150cbab060a97e849a5608d908a2b774a4"], "nameRev": "1f2084fde36c9250d7fea59b609234145a226792 tags/1.0-pre26~7", "commitMessage": "avoidance of destination only for car, fixes #1831, bug introduced in #1752\n", "commitDateTime": "2020-02-27 17:02:03", "authoredDateTime": "2020-02-27 17:02:03", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FlagEncoder.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/TransportationMode.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/weighting/FastestWeighting.java", "insertions": 14, "deletions": 12, "lines": 26}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/EncodingManagerTest.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BikeCommonFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder.getTransportationMode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CarFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoder.getTransportationMode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.getTransportationMode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.getTransportationMode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TransportationMode.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.TransportationMode", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FastestWeighting.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.FastestWeighting", "TOT": 16, "UPD": 4, "INS": 5, "MOV": 5, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.weighting.FastestWeighting.calcEdgeWeight(com.graphhopper.util.EdgeIteratorState,boolean)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "CarFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest.testDestinationTag()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncodingManagerTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber().1.getTransportationMode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "point_hint not precise enough", "body": "See discussion: https://discuss.graphhopper.com/t/5039\r\n\r\nSee link with currently wrong snapping start location https://graphhopper.com/maps/?point=33.657637%2C-112.149891&point=33.657629%2C-112.148266&point_hint=North%2042nd%20Lane&point_hint=\r\n\r\nRelated #1406 and #1718", "url": "https://github.com/graphhopper/graphhopper/issues/1828", "user": "karussell", "labels": ["bug"], "created": "2019-12-18 12:35:45", "closed": "2020-02-28 14:57:10", "commits": {}, "ttf": 72.00027777777778, "commitsDetails": []}, {"title": "GHGeocodingEntry uses wrong JsonProperty", "body": "**Describe the bug**\r\nThe class `GHGeocodingEntry` uses \"`house_number`\" as JsonProperty:\r\n```\r\n@JsonProperty(\"house_number\")\r\npublic void setHouseNumber(String houseNumber) {\r\n    this.houseNumber = houseNumber;\r\n}\r\n```\r\nThe geocoding API response (https://graphhopper.com/api/1/geocode) sends property as \"`housenumber`\". Therefore all hits contain `houseNumber = null`.\r\n\r\n**To Reproduce**\r\nMake an API call as follows:\r\n```\r\n...\r\nGraphHopperGeocoding graphHopperGeocoding = new GraphHopperGeocoding();\r\nboolean reverse = true;\r\nGHPoint point = new GHPoint(location.getLatitude(), location.getLongitude());\r\nGHGeocodingRequest req = new GHGeocodingRequest(point, \"de\", 20);\r\ngraphHopperGeocoding.setKey(KEY);\r\nGHGeocodingResponse resp = graphHopperGeocoding.geocode(req);\r\nfor (GHGeocodingEntry hit : resp.getHits()) {\r\n    hit.getHouseNumber(); // always null!\r\n}\r\n```\r\n`hit.getHouseNumber()` will always be `null`, no matter what location you put in.\r\n\r\n**Expected behavior**\r\n`hit.getHouseNumber()` should return the actual housenumber ;-)\r\n\r\n**System Information**\r\nJAVA 1.8, directions-api-client-hc-0.10.0.jar (Code of `GHGeocodingEntry` is the same on master).\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1825", "user": "calvinkehl", "labels": ["bug"], "created": "2019-12-13 11:35:01", "closed": "2019-12-13 13:08:33", "commits": {"7796f466f992e9e8a8d5f5dd97fa31cc4b8e3d86": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7796f466f992e9e8a8d5f5dd97fa31cc4b8e3d86", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["543da4b1404c82f90031a258f68f19e3eac93e99"], "nameRev": "7796f466f992e9e8a8d5f5dd97fa31cc4b8e3d86 tags/1.0-pre13~3", "commitMessage": "fix geocoding client bug #1825\n", "commitDateTime": "2019-12-13 14:08:19", "authoredDateTime": "2019-12-13 14:06:41", "commitGitStats": [{"filePath": "client-hc/src/main/java/com/graphhopper/api/model/GHGeocodingEntry.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "client-hc/src/test/java/com/graphhopper/api/GraphHopperGeocodingIT.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GHGeocodingEntry.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.api.model.GHGeocodingEntry.getHouseNumber()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.api.model.GHGeocodingEntry.setHouseNumber(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperGeocodingIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.api.GraphHopperGeocodingIT.testForwardGeocodingHouseNumber()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7796f466f992e9e8a8d5f5dd97fa31cc4b8e3d86"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["client-hc/src/main/java/com/graphhopper/api/model"], "changesInPackagesSPOON": ["com.graphhopper.api.GraphHopperGeocodingIT.testForwardGeocodingHouseNumber()", "com.graphhopper.api.model.GHGeocodingEntry.setHouseNumber(java.lang.String)", "com.graphhopper.api.model.GHGeocodingEntry.getHouseNumber()"]}, {"title": "Consider \"edge based\"-only subnetworks", "body": "It is possible to create \"edge based\"-only subnetworks so we should likely make the subnetwork removal edge-based or rework the mechanism. E.g. [this turn relation](https://www.openstreetmap.org/relation/5882938) disallows the access of cars into the subnetwork from North and [this oneway](https://www.openstreetmap.org/way/31814405) blocks access from West (which is probably a mapping error).\r\n\r\nLeading to \"Connection between locations not found\" - [link](https://graphhopper.com/maps/?point=51.433411%2C7.00939&point=51.433036%2C7.010147&ch.disable=true).\r\n\r\nHere is a screenshot of the situation: There is a 'straight-only' turn relation at the junction between Franziskastra\u00dfe and Gudulastra\u00dfe which restricts access to Gudulastra\u00dfe, but at the same time its not accessible from the West/South, because it is a one-way:\r\n\r\n![image](https://user-images.githubusercontent.com/17603532/82427920-09df1280-9a8a-11ea-9745-6d8bed1b31b0.png)\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1807", "user": "karussell", "labels": ["bug"], "created": "2019-11-27 08:51:15", "closed": "2020-05-22 06:13:31", "commits": {}, "ttf": 176.00027777777777, "commitsDetails": []}, {"title": "Request fails when not setting the weighting and/or the vehicle with CH and finite u-turn costs", "body": "If we specify something like `prepare.ch.weightings=fastest|u_turn_costs=40` in the configuration and then do not specify a weighting in `GHRequest`, GH tries to determine the weighting by looking at the `CHProfile(s)`. This leads to:\r\n\r\n```\r\njava.lang.IllegalArgumentException: Cannot find CH profile for weighting map {edge_based=true, weighting=fastest|u_turn_costs=40, vehicle=car} in entries: [fastest|car|edge_based=true|u_turn_costs=40.\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1788", "user": "easbar", "labels": ["bug"], "created": "2019-11-12 08:03:26", "closed": "2019-11-12 21:50:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Several matched keys found for keyPrefix", "body": "Ran into an error when creating new graph:\r\n\r\n```\r\n## using java  from C:/Program Files/Java/jdk1.8.0_152\r\n./graphhopper.sh: line 138: mvn: command not found\r\n## using existing osm file netherlands-latest.osm.pbf\r\n## building graphhopper jar: web/target/graphhopper-web-0.14-SNAPSHOT.jar\r\n## using maven at ./maven\r\n## now web. JAVA_OPTS=-Xmx14G -Xms2G\r\n2019-09-20 14:47:44.878 [main] INFO  i.d.server.DefaultServerFactory - Registering jersey handler with root path prefix: /\r\n2019-09-20 14:47:44.880 [main] INFO  i.d.server.DefaultServerFactory - Registering admin handler with root path prefix: /\r\n2019-09-20 14:47:45.284 [main] INFO  i.d.b.assets.ConfiguredAssetsBundle - Registering ConfiguredAssetBundle with name: assets for path /maps/*\r\n2019-09-20 14:47:45.291 [main] INFO  io.dropwizard.server.ServerFactory - Starting GraphHopperApplication\r\n                        _     _\r\n   __ _ _ __ __ _ _ __ | |__ | |__   ___  _ __  _ __   ___ _ __\r\n  / _` | '__/ _` | '_ \\| '_ \\| '_ \\ / _ \\| '_ \\| '_ \\ / _ \\ '__|\r\n | (_| | | | (_| | |_) | | | | | | | (_) | |_) | |_) |  __/ |\r\n  \\__, |_|  \\__,_| .__/|_| |_|_| |_|\\___/| .__/| .__/ \\___|_|\r\n  |___/          |_|                     |_|   |_|\r\n\r\n2019-09-20 14:47:45.329 [main] INFO  o.e.jetty.setuid.SetUIDListener - Opened application@ea52184{HTTP/1.1,[http/1.1]}{localhost:8989}\r\n2019-09-20 14:47:45.329 [main] INFO  o.e.jetty.setuid.SetUIDListener - Opened admin@3e7b65d7{HTTP/1.1,[http/1.1]}{localhost:8990}\r\n2019-09-20 14:47:45.330 [main] INFO  org.eclipse.jetty.server.Server - jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_152-b16\r\n2019-09-20 14:47:45.345 [main] INFO  c.g.reader.osm.GraphHopperOSM - version 0.14|2019-09-20T12:47:24Z (5,15,4,3,3,5)\r\n2019-09-20 14:47:45.348 [main] INFO  c.g.reader.osm.GraphHopperOSM - graph CH|car|RAM_STORE|2D|NoExt|,,,,, details:edges:0(0MB), nodes:0(0MB), name:(0MB), geo:0(0MB), bounds:1.7976931348623157E308,-1.7976931348623157E308,1.7976931348623157E308,-1.7976931348623157E308, CHGraph|fastest|car|edge_based=false|u_turn_costs=-1, shortcuts:0, nodesCH:(0MB)\r\n2019-09-20 14:47:45.360 [main] INFO  c.g.reader.osm.GraphHopperOSM - start creating graph from netherlands-latest.osm.pbf\r\n2019-09-20 14:47:45.360 [main] INFO  c.g.reader.osm.GraphHopperOSM - using CH|car|RAM_STORE|2D|NoExt|,,,,, memory:totalMB:1963, usedMB:91\r\nException in thread \"PBF Reader\" java.lang.RuntimeException: Unable to read PBF file.\r\n        at com.graphhopper.reader.osm.pbf.PbfReader.run(PbfReader.java:50)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.RuntimeException: Thread was interrupted.\r\n        at com.graphhopper.reader.osm.pbf.PbfDecoder.waitForUpdate(PbfDecoder.java:64)\r\n        at com.graphhopper.reader.osm.pbf.PbfDecoder.sendResultsToSink(PbfDecoder.java:83)\r\n        at com.graphhopper.reader.osm.pbf.PbfDecoder.processBlobs(PbfDecoder.java:151)\r\n2019-09-20 14:48:14.922 [main] ERROR io.dropwizard.cli.ServerCommand - Unable to start server, shutting down\r\njava.lang.RuntimeException: Problem while parsing file\r\n        at com.graphhopper.reader.osm.OSMReader.preProcess(OSMReader.java:199)\r\n        at com.graphhopper.reader.osm.OSMReader.readGraph(OSMReader.java:142)\r\n        at com.graphhopper.GraphHopper.importData(GraphHopper.java:667)\r\n        at com.graphhopper.GraphHopper.process(GraphHopper.java:638)\r\n        at com.graphhopper.GraphHopper.importOrLoad(GraphHopper.java:616)\r\n        at com.graphhopper.http.GraphHopperManaged.start(GraphHopperManaged.java:74)\r\n        at io.dropwizard.lifecycle.JettyManaged.doStart(JettyManaged.java:27)\r\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\r\n        at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:167)\r\n        at org.eclipse.jetty.server.Server.start(Server.java:418)\r\n        at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:119)\r\n        at org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)\r\n        at org.eclipse.jetty.server.Server.doStart(Server.java:382)\r\n        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\r\n        at io.dropwizard.cli.ServerCommand.run(ServerCommand.java:53)\r\n        at io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:44)\r\n        at io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:87)\r\n        at io.dropwizard.cli.Cli.run(Cli.java:78)\r\n        at io.dropwizard.Application.run(Application.java:93)\r\n        at com.graphhopper.http.GraphHopperApplication.main(GraphHopperApplication.java:34)\r\nCaused by: java.lang.IllegalArgumentException: Several matched keys found for keyPrefix restriction:\r\n        at com.graphhopper.reader.ReaderElement.getKeyStartsWith(ReaderElement.java:108)\r\n        at com.graphhopper.reader.osm.OSMReader.createTurnRelation(OSMReader.java:871)\r\n        at com.graphhopper.reader.osm.OSMReader.prepareRestrictionRelation(OSMReader.java:204)\r\n        at com.graphhopper.reader.osm.OSMReader.preProcess(OSMReader.java:185)\r\n        ... 19 common frames omitted\r\n```\r\nGot it to work with this in ReaderElement.java:\r\n\r\n```\r\npublic String getKeyStartsWith(String keyPrefix) {\r\n        int nbMatchedKeys = 0;\r\n        String matchedKey = null;\r\n        for (String key : properties.keySet()) {\r\n            if (key.startsWith(keyPrefix)) {\r\n                nbMatchedKeys++;\r\n                matchedKey = key;\r\n            }\r\n        }\r\n        return matchedKey;\r\n    }\r\n```\r\nBut that's probably not the correct way to do it.", "url": "https://github.com/graphhopper/graphhopper/issues/1735", "user": "routexl", "labels": ["bug"], "created": "2019-09-20 13:33:10", "closed": "2019-09-21 10:05:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "point_hint too slow for certain cases", "body": "The newly introduced number handling caused an issue. If I just remove\r\n\r\n```\r\ntry {\r\n    if (Integer.parseInt(rewrite) > 0)\r\n        isNumber = true;\r\n} catch (NumberFormatException ex) {\r\n}\r\n```\r\n\r\nrouting requests like /maps/?point=1.346528%2C103.753174&point=1.348105%2C103.747788&point_hint=&point_hint=Singapore are already much faster. Will see what else can be done.", "url": "https://github.com/graphhopper/graphhopper/issues/1717", "user": "karussell", "labels": ["bug"], "created": "2019-09-09 10:23:32", "closed": "2019-09-10 12:12:53", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Route request fails if edge_based is not set to false and there is a turn cost encoder", "body": "If we use multiple encoders out of which one has `turn_costs=true`, e.g. `foot,car|turn_costs=true`,  we have `EncodingManager#needsTurnCostsSupport()===true` and the `GraphHopper#traversalMode` field will be `EDGE_BASED` (see `GraphHopper#setEncodingManager`). This `traversalMode` field is then used to determine the traversal mode in `GraphHopper#calcPaths`.\r\n\r\nIt *can* be overwritten using the `edge_based` or the `traversal_mode` parameters, but since these are optional it might remain `EDGE_BASED` even when using a vehicle without turn costs (like `foot`). So we use edge-based routing for foot, just because there is *another* encoder with `turn_costs=true`. \r\n\r\nThis used to be odd behavior, but with #1696 this is now even more problematic because we now get an exception in this case.\r\n\r\nI think we should remove the `GraphHopper#traversalMode` field entirely, because it seems very counter-intuitive to determine the 'default' traversal mode based on the presence of *some* encoder that supports turn costs.\r\n\r\nRelated: #1637 ", "url": "https://github.com/graphhopper/graphhopper/issues/1698", "user": "easbar", "labels": ["bug"], "created": "2019-08-27 10:42:12", "closed": "2019-08-30 05:55:42", "commits": {"49b9e1d6a85aef5c358ee92a2058201d920a1a44": {"commitGHEventType": "referenced", "commitUser": "easbar"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "49b9e1d6a85aef5c358ee92a2058201d920a1a44", "commitGHEventType": "referenced", "commitUser": "easbar", "commitParents": ["34b0d48a78061c9dae9f3f1e9ff956a9b448849d"], "nameRev": "49b9e1d6a85aef5c358ee92a2058201d920a1a44 tags/0.13.0-pre16~4", "commitMessage": "Do not consider turn cost support of other encoders when selecting traversal mode (#1705)\n\n* Fixes #1698\r\n* Remove GraphHopper#traversalMode\r\n* Remove 'traversal_mode' parameter\r\n ", "commitDateTime": "2019-08-30 07:55:41", "authoredDateTime": "2019-08-30 07:55:41", "commitGitStats": [{"filePath": "core/files/changelog.txt", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 5, "deletions": 20, "lines": 25}, {"filePath": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 52, "deletions": 6, "lines": 58}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.calcPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "TOT": 9, "UPD": 5, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.setEncodingManager(com.graphhopper.EncodingManager)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.getTraversalMode()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.setTraversalMode(com.graphhopper.TraversalMode)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GraphHopperIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperIT.assertMoscow(com.graphhopper.GraphHopper,java.lang.String,boolean,boolean)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperIT.assertMoscowNodeBased(com.graphhopper.GraphHopper,java.lang.String,boolean)", "TOT": 11, "UPD": 0, "INS": 2, "MOV": 8, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopperIT.assertMoscowEdgeBased(com.graphhopper.GraphHopper,java.lang.String,boolean)", "TOT": 12, "UPD": 0, "INS": 3, "MOV": 8, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopperIT.testNodeBasedCHOnlyButTurnCostForNonCH()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperIT.testEncoderWithTurnCostSupport_stillAllows_nodeBasedRouting()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Routing issues with Landmarks", "body": "As noticed in #1665 I found some cases where A-Star with LM does not find the shortest path. I tried to figure out why and here: https://github.com/graphhopper/graphhopper/tree/lm_issue (*Update*: branch got deleted, but the tests were added with #1745 and  76d37e3f15d9de1c1647b8efc3c57d4e152c2fe7). I created a similar test that does not use the new feature of restricted source/target edges as in #1665 (and so far does not use edge-based routing either) and the tests still fail in some cases.\r\n\r\nThere might be different issues at play:\r\n\r\nThis test: https://github.com/graphhopper/graphhopper/blob/bfc6878df50bef8d3b0c732f0493723ac341de6d/core/src/test/java/com/graphhopper/routing/BidirectionalRoutingTest.java#L128 seems to fail, because the `LMApproximator` uses its `fallBackApproximator`, but the `toNode` of the `fallBackApproximator` is never set leading to an overestimation of the minimum distance. This might be easy to fix and we should do first.\r\n\r\nThis one: https://github.com/graphhopper/graphhopper/blob/bfc6878df50bef8d3b0c732f0493723ac341de6d/core/src/test/java/com/graphhopper/routing/BidirectionalRoutingTest.java#L181 also fails with a very large weight difference compared to Dijkstra, but I do not know why yet (have not really looked into it).\r\n\r\nNot sure if this is related to #1557.\r\n\r\nTODOs:\r\n\r\n - [ ] fix bug(s)\r\n - [ ] include tests for LM that were introduced in #1665", "url": "https://github.com/graphhopper/graphhopper/issues/1687", "user": "easbar", "labels": ["algorithm", "bug"], "created": "2019-08-18 08:06:08", "closed": "2019-10-08 12:33:24", "commits": {"8086cb8a59d0bec1af1294492e64bdf43631c9d9": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "e1d54525c5dc92bfee69dbaa1ce111f6f6687c40": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 51.000277777777775, "commitsDetails": [{"commitHash": "8086cb8a59d0bec1af1294492e64bdf43631c9d9", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e1d54525c5dc92bfee69dbaa1ce111f6f6687c40", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["0faf680b72efe01a05d6dc57113c38b4fcd9c2dd"], "nameRev": "e1d54525c5dc92bfee69dbaa1ce111f6f6687c40 tags/1.0-pre3~29", "commitMessage": "Landmark bugs (#1745)\n\n* Fix first test with andis fix\r\n\r\n* Fixes landmark issue; fixes #1687\r\n\r\n* Fixes test so that it tests the relevant thing\r\n\r\n* Omg, the setter takes the scaled value, but the getter returns the unscaled value\r\n\r\n* Add the test\r\n\r\n* for approximation use query node\r\n\r\n* fixed auto refactoring\r\n", "commitDateTime": "2019-10-08 14:33:21", "authoredDateTime": "2019-10-08 05:33:21", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/lm/LMApproximator.java", "insertions": 12, "deletions": 15, "lines": 27}, {"filePath": "core/src/main/java/com/graphhopper/routing/lm/LandmarkStorage.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/test/java/com/graphhopper/routing/lm/LandmarkStorageTest.java", "insertions": 6, "deletions": 11, "lines": 17}, {"filePath": "core/src/test/java/com/graphhopper/routing/weighting/BidirectionalRoutingTest.java", "insertions": 225, "deletions": 0, "lines": 225}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LMApproximator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LMApproximator", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.lm.LMApproximator.getNode(int)", "TOT": 9, "UPD": 6, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.lm.LMApproximator.VirtEntry", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.lm.LMApproximator.approximate(int)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.lm.LMApproximator.setTo(int)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.lm.LMApproximator.VirtEntry.toString()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LandmarkStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorage.getToWeight(int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LandmarkStorageTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest.testSetGetWeight()", "TOT": 9, "UPD": 7, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest.testDeltaWarning()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BidirectionalRoutingTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.BidirectionalRoutingTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SpatialRuleLookup issue with Polygons with holes", "body": "When creating Polygons from geojson in the `SpatialRuleLookupBuilder`, we call the method `Polygon#create(org.locationtech.jts.geom.Polygon polygon)`.\r\n\r\nThe create method uses the method `org.locationtech.jts.geom.Polygon#getNumPoints`, which returns all points of the Polygon, including the points for the holes. Therefore, the holes and the connection to the whole become part of the Polygon, which can lead false positive contain results, even for points outside of the polygon.\r\n\r\nA quick-fix could be to only use the shell:\r\n```\r\nCoordinate[] shell = polygon.getExteriorRing().getCoordinates();\r\n\r\n        double[] lats = new double[shell.length];\r\n        double[] lons = new double[shell.length];\r\n\r\n        for(int i = 0; i < shell.length; ++i) {\r\n            lats[i] = polygon.getCoordinates()[i].y;\r\n            lons[i] = polygon.getCoordinates()[i].x;\r\n        }\r\n\r\n        return new Polygon(lats, lons);\r\n``` \r\n\r\nThe proper solution would be to correctly read holes as holes and use them in the contains lookup.", "url": "https://github.com/graphhopper/graphhopper/issues/1680", "user": "boldtrn", "labels": ["bug"], "created": "2019-08-05 15:18:15", "closed": "2020-06-16 08:56:44", "commits": {}, "ttf": 315.0002777777778, "commitsDetails": []}, {"title": "Reading Spatial Rule Json fails for unknown property", "body": "When reading a spatial rule geojson, the import fails if there are unknown attributes. For example qgis will add a name to the feature collection.\r\n\r\n`java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field \"name\" (class com.graphhopper.json.geo.JsonFeatureCollection), not marked as ignorable (2 known properties: \"type\", \"features\"])`\r\n\r\nMaybe we could tell the `ObjectMapper` to ignore unknown properties, like:\r\n```\r\nObjectMapper mapper = new ObjectMapper().configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\r\n``` \r\n\r\nSince the geojson is valid, but GH fails, I added the bug label, I hope that's ok :).", "url": "https://github.com/graphhopper/graphhopper/issues/1655", "user": "boldtrn", "labels": ["bug"], "created": "2019-07-01 13:58:30", "closed": "2019-07-17 10:59:23", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "Remove Google Distance Matrix option from client-hc", "body": "Either because they changed something in their policies or we use too many credits above their free limit. Will for now ignore this test and later we should remove the entire class.", "url": "https://github.com/graphhopper/graphhopper/issues/1653", "user": "karussell", "labels": ["architecture", "bug"], "created": "2019-07-01 10:03:52", "closed": "2019-07-01 11:16:43", "commits": {"db9a46860d6976846526748b8e8c515bea6c65d6": {"commitGHEventType": "closed", "commitUser": "easbar"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "db9a46860d6976846526748b8e8c515bea6c65d6", "commitGHEventType": "closed", "commitUser": "easbar", "commitParents": ["33e2736885cadfc5483ffa19922b6910d6a4443a"], "nameRev": "db9a46860d6976846526748b8e8c515bea6c65d6 tags/0.13.0-pre10~3", "commitMessage": "Removes GoogleMatrixSyncRequester, fixes #1653.\n", "commitDateTime": "2019-07-01 13:16:31", "authoredDateTime": "2019-07-01 13:16:31", "commitGitStats": [{"filePath": "client-hc/src/main/java/com/graphhopper/api/GoogleMatrixSyncRequester.java", "insertions": 0, "deletions": 131, "lines": 131}, {"filePath": "client-hc/src/test/java/com/graphhopper/api/GoogleMatrixSyncRequesterTest.java", "insertions": 0, "deletions": 68, "lines": 68}, {"filePath": "client-hc/src/test/java/com/graphhopper/api/GraphHopperMatrixGoogleIT.java", "insertions": 0, "deletions": 42, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GoogleMatrixSyncRequester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.api.GoogleMatrixSyncRequester", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GoogleMatrixSyncRequesterTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.api.GoogleMatrixSyncRequesterTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GraphHopperMatrixGoogleIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.api.GraphHopperMatrixGoogleIT", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["db9a46860d6976846526748b8e8c515bea6c65d6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 131, "lines": 131, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["client-hc/src/main/java/com/graphhopper/api"], "changesInPackagesSPOON": ["com.graphhopper.api.GoogleMatrixSyncRequester", "com.graphhopper.api.GraphHopperMatrixGoogleIT"]}, {"title": "Cannot load graph on Android due to mismatching version for road_class EncodedValue", "body": "See the error report [here](https://discuss.graphhopper.com/t/android-v-0-13-cannot-find-encodedvalue-roundabout-in-collection-null/4483/3):\r\n\r\n```\r\nAn error happened while creating graph:Version of EncodedValue road_class|version=1237974758|bits=5|index=0|shift=1|store_both_directions=false does not match road_class|version=-2100336611|bits=5|index=0|shift=1|store_both_directions=false. Stored 1237974758 vs. in code -2100336611\r\n```\r\n\r\nThe likely reason is that we currently use hashcode as version identifier but it is not intended for that (can change in different JVMs or even different runs).\r\n\r\nThe question is why this worked in the past e.g. in BaseGraph:\r\n\r\nedges.setHeader(2 * 4, encodingManager.hashCode());\r\n\r\nReproducable via\r\n\r\n * do import via config-example.yml\r\n * load with `new GraphHopper().load(ghLocation)` where we create the EncodingManager via `EncodingManager.create(encodedValueFactory, flagEncoderFactory, ghLocation)`\r\n\r\nUpdate: Potential fix available at https://github.com/graphhopper/graphhopper/tree/issue_1650", "url": "https://github.com/graphhopper/graphhopper/issues/1650", "user": "karussell", "labels": ["bug"], "created": "2019-06-28 13:33:25", "closed": "2019-07-19 11:06:46", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "EdgeElevationInterpolator takes too long for large graphs", "body": "There is an ugly bug here that makes the interpolation extremely slow. Good news is that it is easy to fix (times for this goes down from 40minutes to under 40 seconds ;)). Still we also need to change more to avoid this in the future.", "url": "https://github.com/graphhopper/graphhopper/issues/1648", "user": "karussell", "labels": ["bug"], "created": "2019-06-27 20:51:42", "closed": "2019-06-27 21:13:48", "commits": {"5cc93e663b4d0fe1c7841b35f25c13d9486868f7": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "19401c4f90753a567f73e30ad213f61d021c7d5b": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "653b108dfab2eed33483f6520b0f4ca1b1a5bc59": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5cc93e663b4d0fe1c7841b35f25c13d9486868f7", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "19401c4f90753a567f73e30ad213f61d021c7d5b", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "653b108dfab2eed33483f6520b0f4ca1b1a5bc59", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["4591d8d737e581214ba1c9897e767490e07630f3"], "nameRev": "653b108dfab2eed33483f6520b0f4ca1b1a5bc59 tags/0.13.0-pre9", "commitMessage": "remove default method in XFirstSearch to force thinking about the bitset implementation, fixes #1648 (#1649)\n\n", "commitDateTime": "2019-06-27 23:13:44", "authoredDateTime": "2019-06-27 23:13:44", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/dem/EdgeElevationInterpolator.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "core/src/main/java/com/graphhopper/reader/dem/ElevationInterpolator.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/reader/dem/NodeElevationInterpolator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphEdgeIdFinder.java", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "core/src/main/java/com/graphhopper/util/BreadthFirstSearch.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/util/DepthFirstSearch.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/util/EngineWarmUp.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "core/src/main/java/com/graphhopper/util/GHUtility.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/util/XFirstSearch.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/test/java/com/graphhopper/util/BreadthFirstSearchTest.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "core/src/test/java/com/graphhopper/util/DepthFirstSearchTest.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "reader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java", "insertions": 8, "deletions": 1, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EdgeElevationInterpolator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.dem.EdgeElevationInterpolator.gatherOuterAndInnerNodeIds(com.graphhopper.reader.dem.EdgeExplorer,com.graphhopper.reader.dem.EdgeIteratorState,com.graphhopper.coll.GHBitSet,com.carrotsearch.hppc.IntSet,com.graphhopper.coll.GHIntHashSet).1.createBitSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ElevationInterpolator.java", "spoonMethods": []}, {"spoonFilePath": "NodeElevationInterpolator.java", "spoonMethods": []}, {"spoonFilePath": "GraphEdgeIdFinder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findClosestEdgeToPoint(com.graphhopper.coll.GHIntHashSet,com.graphhopper.util.shapes.GHPoint,com.graphhopper.routing.util.EdgeFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.util.shapes.Shape,com.graphhopper.routing.util.EdgeFilter)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.add(com.graphhopper.util.shapes.Shape)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.fillEdgeIDs(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Geometry,com.graphhopper.routing.util.EdgeFilter)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.util.shapes.Shape,com.graphhopper.routing.util.EdgeFilter).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.util.shapes.Shape,com.graphhopper.routing.util.EdgeFilter).1.isInsideBBox(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.contains(com.graphhopper.util.EdgeIteratorState)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter,double)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1.createBitSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BreadthFirstSearch.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.BreadthFirstSearch", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DepthFirstSearch.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.DepthFirstSearch", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EngineWarmUp.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.EngineWarmUp.warmUpNonCHSubNetwork(com.graphhopper.GraphHopper,int).1.createBitSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHUtility.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.GHUtility.printInfo(com.graphhopper.util.Graph,int,int,com.graphhopper.util.EdgeFilter).1.createBitSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XFirstSearch.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.XFirstSearch.createBitSet()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BreadthFirstSearchTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.BreadthFirstSearchTest.testBFS().1.createBitSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.BreadthFirstSearchTest.testBFS2().2.createBitSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DepthFirstSearchTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.DepthFirstSearchTest.testDFS1().1.createBitSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.DepthFirstSearchTest.testDFS2().2.createBitSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperOSMTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testQueryLocationIndexWithBBox()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testQueryLocationIndexWithBBox().2.createBitSet()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Do not interpolate tunnel and bridge elevation if already done", "body": "GraphHopper.postProcessing always calls interpolateBridgesAndOrTunnels (even if the graph is already imported)", "url": "https://github.com/graphhopper/graphhopper/issues/1645", "user": "karussell", "labels": ["bug"], "created": "2019-06-27 08:34:58", "closed": "2019-06-27 09:11:29", "commits": {"ad3ce243dc1eeba1efd49a28124cf42dcc95d9a9": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ad3ce243dc1eeba1efd49a28124cf42dcc95d9a9", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["0f7ed2bd287535c2ba79fe0511ee1ab763abfab4"], "nameRev": "ad3ce243dc1eeba1efd49a28124cf42dcc95d9a9 tags/0.13.0-pre8", "commitMessage": "don't do interpolation twice, fixes #1645\n", "commitDateTime": "2019-06-27 11:08:37", "authoredDateTime": "2019-06-27 11:08:37", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperAPITest.java", "insertions": 55, "deletions": 0, "lines": 55}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.hasInterpolated()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.postProcessing()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.interpolateBridgesAndOrTunnels()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GraphHopperAPITest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperAPITest.testConcurrentGraphChange()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperAPITest.testConcurrentGraphChange().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperAPITest.testConcurrentGraphChange().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperAPITest.testDoNotInterpolateTwice1645()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ad3ce243dc1eeba1efd49a28124cf42dcc95d9a9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 2, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper"], "changesInPackagesSPOON": ["com.graphhopper.GraphHopper.postProcessing()", "com.graphhopper.GraphHopper", "com.graphhopper.GraphHopper.hasInterpolated()", "com.graphhopper.GraphHopper.interpolateBridgesAndOrTunnels()"]}, {"title": "Set distance after setWayGeometry in EdgeElevationInterpolator", "body": "As we update the elevation the \"cached\" distance will change and needs an update. Especially important after #1548 as then the elevation interpolator is applied as soon as RoadEnvironment is activated (which is easy then).", "url": "https://github.com/graphhopper/graphhopper/issues/1634", "user": "karussell", "labels": ["bug"], "created": "2019-06-07 19:16:53", "closed": "2019-06-09 08:25:09", "commits": {"ef91bc6aeeae6cdfd5194bf5b99abb9cac3ee8da": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "ef91bc6aeeae6cdfd5194bf5b99abb9cac3ee8da", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["9ef119416ee329c7e0260552227a0397e2c05245"], "nameRev": "ef91bc6aeeae6cdfd5194bf5b99abb9cac3ee8da tags/0.13.0-pre5~6", "commitMessage": "fixed bug when interpolating tunnel or bridge elevation, fixes #1634\n", "commitDateTime": "2019-06-08 08:36:48", "authoredDateTime": "2019-06-08 08:36:48", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/dem/AbstractEdgeElevationInterpolator.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/util/EdgeIteratorState.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractEdgeElevationInterpolator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.dem.AbstractEdgeElevationInterpolator.interpolateElevationsOfPillarNodes()", "TOT": 9, "UPD": 2, "INS": 4, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "QueryGraph.java", "spoonMethods": []}, {"spoonFilePath": "EdgeIteratorState.java", "spoonMethods": []}, {"spoonFilePath": "GraphHopperIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperIT.testSRTMWithTunnelInterpolation()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ef91bc6aeeae6cdfd5194bf5b99abb9cac3ee8da"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 6, "lines": 14, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 10, "UPD": 3, "INS": 4, "MOV": 3, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util", "core/src/main/java/com/graphhopper/reader/dem", "core/src/main/java/com/graphhopper/routing"], "changesInPackagesSPOON": ["com.graphhopper.GraphHopperIT.testSRTMWithTunnelInterpolation()", "com.graphhopper.reader.dem.AbstractEdgeElevationInterpolator.interpolateElevationsOfPillarNodes()"]}, {"title": "Zip Path Traversal ", "body": "Getting the following warning from Google play store.\r\nZip Path Traversal\r\nYour app contains an unsafe unzipping pattern that may lead to a Path Traversal vulnerability. Please see this Google Help Center article to learn how to fix the issue.\r\nhttps://support.google.com/faqs/answer/9294009\r\n\r\nVulnerable locations:\r\ncom.graphhopper.util.Unzipper.unzip\r\n\r\nHere is the dependency in may app.build\r\n  implementation(group: 'com.graphhopper', name: 'graphhopper-core', version: '0.13-SNAPSHOT') {\r\n        exclude group: 'com.google.protobuf', module: 'protobuf-java'\r\n        exclude group: 'org.openstreetmap.osmosis', module: 'osmosis-osm-binary'\r\n        exclude group: 'org.apache.xmlgraphics', module: 'xmlgraphics-commons'\r\n    }\r\n\r\nI have tried graphhoper 010-SNAPSHOT, 012-SNAPSHOT, and even 013-SNAPSHOT versions but facing the same issue. \r\nI am using pocketmaps project for offline maps. I also tried to upgrade and downgrade the pocket maps dependencies to see if the error removes but no luck.\r\nCan you please guide me regarding this. I have been trying to understand the issue but so far no luck.\r\nThank you ", "url": "https://github.com/graphhopper/graphhopper/issues/1628", "user": "akyzi007", "labels": ["android", "bug"], "created": "2019-05-30 12:00:33", "closed": "2019-05-31 11:11:17", "commits": {"b2a5574b02288b7cc1144c7cadfc67804190db30": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b2a5574b02288b7cc1144c7cadfc67804190db30", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["566f7d7deb2dba4f0a2b8a8d48792d516d54764c"], "nameRev": "b2a5574b02288b7cc1144c7cadfc67804190db30 tags/0.13.0-pre5~13", "commitMessage": "verify zip file before unzipping, fixes #1628\n", "commitDateTime": "2019-05-31 13:11:08", "authoredDateTime": "2019-05-31 13:07:38", "commitGitStats": [{"filePath": "android/app/src/main/java/com/graphhopper/android/MainActivity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/util/Unzipper.java", "insertions": 10, "deletions": 2, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainActivity.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.MainActivity.isReady()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Unzipper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Unzipper.unzip(java.io.InputStream,java.io.File,com.graphhopper.util.ProgressListener)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.graphhopper.util.Unzipper.getVerifiedFile(java.io.File,java.util.zip.ZipEntry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b2a5574b02288b7cc1144c7cadfc67804190db30"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 3, "lines": 14, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util", "android/app/src/main/java/com/graphhopper/android"], "changesInPackagesSPOON": ["com.graphhopper.android.MainActivity.isReady()", "com.graphhopper.util.Unzipper.unzip(java.io.InputStream,java.io.File,com.graphhopper.util.ProgressListener)", "com.graphhopper.util.Unzipper.getVerifiedFile(java.io.File,java.util.zip.ZipEntry)"]}, {"title": "QueryGraph edge-explorer cache does not work for edge-based CH.", "body": "We can do \r\n```java\r\nqueryGraph.setUseEdgeExplorerCache(true);\r\n```\r\nand \r\n```java\r\nqueryGraph.createEdgeExplorer(edgeFilter)\r\n```\r\nwill return the same edge-explorer instance for all subsequent calls of `DefaultEdgeFilter.inEdges`, `DefaultEdgeFilter.outEdges`, `DefaultEdgeFilter.allEdges` and `EdgeFilter.ALL_EDGES` (for each of these filters there will be a separate edge-explorer instance).\r\n\r\nThe problem is that in some cases we explicitly need to create two different instances for the same filter. This is not needed very often, but for example here: \r\n\r\nhttps://github.com/graphhopper/graphhopper/blob/d24173a188f4574b6eb9e7c6ff641eaec9029208/core/src/main/java/com/graphhopper/routing/AbstractBidirectionEdgeCHNoSOD.java#L46-L48\r\n\r\nthere is a nested loop over edge iterators where the 'inner' explorer must be different to the 'outer' one.\r\n\r\nBecause of this using the edge-explorer cache with edge-based CH fails at the moment.\r\n\r\nI started adding a test for the query graph behavior here: https://github.com/graphhopper/graphhopper/commit/58e7ac1777c2382d5a42dd7c9153c2de65e31a28, but so far it does not show much, obviously if we use the same instance of the edge explorer within an inner loop the outer loop will be messed up.\r\n\r\n\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1623", "user": "easbar", "labels": ["bug"], "created": "2019-05-27 09:44:48", "closed": "2019-05-29 14:45:05", "commits": {"2f8072dd866018fe0ee5e3a36ac3ef2e72cf06f1": {"commitGHEventType": "closed", "commitUser": "easbar"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "2f8072dd866018fe0ee5e3a36ac3ef2e72cf06f1", "commitGHEventType": "closed", "commitUser": "easbar", "commitParents": ["ac5326bed2d012e3584f82f9b84908253a794728"], "nameRev": "2f8072dd866018fe0ee5e3a36ac3ef2e72cf06f1 tags/0.13.0-pre4", "commitMessage": "Makes QueryGraph's edge-explorer cache work for all EdgeFilters, fixes #1623. (#1624)\n\n* Adjusts query graph's edge explorer caching behavior.\r\n* Adds filter id to DefaultEdgeFilter\r\n* Removes acceptsFwd/Bwd from DefaultEdgeFilter.\r\n* Replaces PrepEdgeFilter in PrepareRoutingSubnetworks with DefaultEdgeFilter", "commitDateTime": "2019-05-29 16:44:59", "authoredDateTime": "2019-05-29 16:44:59", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/AbstractBidirectionEdgeCHNoSOD.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 13, "deletions": 31, "lines": 44}, {"filePath": "core/src/main/java/com/graphhopper/routing/subnetwork/PrepareRoutingSubnetworks.java", "insertions": 5, "deletions": 16, "lines": 21}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/DefaultEdgeFilter.java", "insertions": 53, "deletions": 16, "lines": 69}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 50, "deletions": 4, "lines": 54}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/CHTurnCostTest.java", "insertions": 37, "deletions": 0, "lines": 37}, {"filePath": "core/src/test/java/com/graphhopper/routing/subnetwork/PrepareRoutingSubnetworksTest.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphEdgeIdFinderTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractBidirectionEdgeCHNoSOD.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractBidirectionEdgeCHNoSOD", "TOT": 6, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter)", "TOT": 9, "UPD": 2, "INS": 1, "MOV": 5, "DEL": 1}]}, {"spoonFilePath": "PrepareRoutingSubnetworks.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks.findSubnetworks(com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks$PrepEdgeFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks.keepLargeNetworks(com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks$PrepEdgeFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks.doWork()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks.PrepEdgeFilter", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DefaultEdgeFilter.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter.outEdges(com.graphhopper.routing.util.FlagEncoder)", "TOT": 8, "UPD": 4, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter.inEdges(com.graphhopper.routing.util.FlagEncoder)", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter.acceptsBackward()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter.acceptsForward()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter", "TOT": 6, "UPD": 2, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter.outEdges(com.graphhopper.routing.profiles.BooleanEncodedValue)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter.allEdges(com.graphhopper.routing.util.FlagEncoder)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter.setFilterId(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter.hashCode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter.getAccessEnc()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.DefaultEdgeFilter.accept(com.graphhopper.util.EdgeIteratorState)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.useEECache()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.useEECache_nestedLoop()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CHTurnCostTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.test_issue_1623_query_graph_cache()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareRoutingSubnetworksTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworksTest.testFindSubnetworks()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworksTest.testKeepLargestNetworks()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworksTest.testAddEdgesAfterwards()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworksTest.testNodeOrderingRegression()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworksTest.test481()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "GraphEdgeIdFinderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinderTest.testBlockAreasWithPolygon()", "TOT": 10, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Edge-based CH does not handle u-turns with virtual edges correctly", "body": "This test fails with an exception: abf35b0a7443f2f131c912abd98776d370ee6881\r\n\r\n```java\r\n    @Test\r\n    public void test_Issue1592() {\r\n        //      6   5\r\n        //   1<-x-4-x-3\r\n        //  ||    |\r\n        //  |x7   x8\r\n        //  ||   /\r\n        //   2---\r\n        NodeAccess na = graph.getNodeAccess();\r\n        na.setNode(0, 49.407117, 9.701306);\r\n        na.setNode(1, 49.406914, 9.703393);\r\n        na.setNode(2, 49.404004, 9.709110);\r\n        na.setNode(3, 49.400160, 9.708787);\r\n        na.setNode(4, 49.400883, 9.706347);\r\n        EdgeIteratorState edge0 = graph.edge(4, 3, 194.063000, true);\r\n        EdgeIteratorState edge1 = graph.edge(1, 2, 525.106000, true);\r\n        EdgeIteratorState edge2 = graph.edge(1, 2, 525.106000, true);\r\n        EdgeIteratorState edge3 = graph.edge(4, 1, 703.778000, false);\r\n        EdgeIteratorState edge4 = graph.edge(2, 4, 400.509000, true);\r\n        // cannot go 4-2-1 and 1-2-4 (at least when using edge1, there is still edge2!)\r\n        addRestriction(edge4, edge1, 2);\r\n        addRestriction(edge1, edge4, 2);\r\n        // cannot go 3-4-1\r\n        addRestriction(edge0, edge3, 4);\r\n        graph.freeze();\r\n        LocationIndexTree index = new LocationIndexTree(graph, new RAMDirectory());\r\n        index.prepareIndex();\r\n        List<GHPoint> points = Arrays.asList(\r\n                // 8 (on edge4)\r\n                new GHPoint(49.401669187194116, 9.706821649608745),\r\n                // 5 (on edge0)\r\n                new GHPoint(49.40056349818417, 9.70767186472369),\r\n                // 7 (on edge2)\r\n                new GHPoint(49.406580835146556, 9.704665738628218),\r\n                // 6 (on edge3)\r\n                new GHPoint(49.40107534698834, 9.702248694088528)\r\n        );\r\n\r\n\r\n        List<QueryResult> queryResults = new ArrayList<>(points.size());\r\n        for (GHPoint point : points) {\r\n            queryResults.add(index.findClosest(point.getLat(), point.getLon(), EdgeFilter.ALL_EDGES));\r\n        }\r\n\r\n        RoutingAlgorithmFactory pch = automaticPrepareCH();\r\n        QueryGraph queryGraph = new QueryGraph(chGraph);\r\n        queryGraph.lookup(queryResults);\r\n        RoutingAlgorithm chAlgo = pch.createAlgo(queryGraph, AlgorithmOptions.start()\r\n                .traversalMode(TraversalMode.EDGE_BASED_2DIR)\r\n                .build());\r\n        Path path = chAlgo.calcPath(5, 6);\r\n        // there should not be a path from 5 to 6, because first we cannot go directly 5-4-6, so we need to go left\r\n        // to 8. then at 2 we cannot go on edge 1 because of another turn restriction, but we can go on edge 2 so we\r\n        // travel via the virtual node 7 to node 1. From there we cannot go to 6 because of the one-way so we go back\r\n        // to node 2 (no u-turn because of the duplicate edge) on edge1. And this is were the journey ends: we cannot\r\n        // go to 8 because of the turn restriction from edge1 to edge4 -> there should not be a path!\r\n        assertFalse(\"there should not be a path, but found: \" + path.calcNodes(), path.isFound());\r\n    }\r\n```\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1593", "user": "easbar", "labels": ["algorithm", "bug"], "created": "2019-04-03 10:15:41", "closed": "2019-04-11 08:37:08", "commits": {"7b71a24919ab6f043942b89303c7dbb1bb6e4bfe": {"commitGHEventType": "referenced", "commitUser": "easbar"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "7b71a24919ab6f043942b89303c7dbb1bb6e4bfe", "commitGHEventType": "referenced", "commitUser": "easbar", "commitParents": ["f748ab209819b65bb290d0bceec6cf53dcbc4792"], "nameRev": "7b71a24919ab6f043942b89303c7dbb1bb6e4bfe tags/0.13.0-pre2~6", "commitMessage": "Fixes edge-based CH problem with u-turns at virtual edges, fixes #1593 (#1596)\n\n* Uses improved random graph and makes random ch routing test check seeds that failed in the pass.\r\n* Makes random ch routing test also run for edge-based -> reproduces issue.\r\n* Adds random speeds to GHUtility#buildRandomGraph.\r\n* Fixes the issue by adding TurnCostExtension#isUTurn\r\n", "commitDateTime": "2019-04-11 10:37:07", "authoredDateTime": "2019-04-11 10:37:07", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/AbstractBidirectionEdgeCHNoSOD.java", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "core/src/main/java/com/graphhopper/routing/ch/EdgeBasedNodeContractor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/weighting/TurnWeighting.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/storage/TurnCostExtension.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/util/GHUtility.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "core/src/test/java/com/graphhopper/routing/RandomCHRoutingTest.java", "insertions": 91, "deletions": 22, "lines": 113}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/CHTurnCostTest.java", "insertions": 166, "deletions": 14, "lines": 180}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/NodeBasedNodeContractorTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/PrepareContractionHierarchiesTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractBidirectionEdgeCHNoSOD.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractBidirectionEdgeCHNoSOD.accept(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.SPTEntry,boolean)", "TOT": 6, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.AbstractBidirectionEdgeCHNoSOD.updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.SPTEntry,int,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.AbstractBidirectionEdgeCHNoSOD", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.QueryGraphTurnExt.getTurnCostFlags(int,int,int)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.QueryGraphTurnExt.isUTurn(int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.QueryGraphTurnExt.getOriginalEdge(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EdgeBasedNodeContractor.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.EdgeBasedNodeContractor.calculatePriority(int)", "TOT": 11, "UPD": 0, "INS": 1, "MOV": 10, "DEL": 0}]}, {"spoonFilePath": "TurnWeighting.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.TurnWeighting.setDefaultUTurnCost(double)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TurnCostExtension.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.TurnCostExtension.isUTurn(int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHUtility.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.GHUtility.buildRandomGraph(com.graphhopper.util.Graph,long,int,double,boolean,boolean,double,double)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.graphhopper.util.GHUtility.printGraphForUnitTest(com.graphhopper.util.Graph,com.graphhopper.util.FlagEncoder,com.graphhopper.util.shapes.BBox)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.GHUtility.buildRandomGraph(com.graphhopper.util.Graph,java.util.Random,int,double,boolean,boolean,com.graphhopper.routing.profiles.DecimalEncodedValue,double,double,double)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RandomCHRoutingTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.issues1574_1581_random()", "TOT": 15, "UPD": 7, "INS": 0, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.buildRandomGraph(java.util.Random,int,double,boolean,boolean,double)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.init()", "TOT": 5, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.params()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.random()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.issue1574_1()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.issue1574_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.issue1583()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.issue1593()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.addVirtualNodesAndEdges(java.util.Random,com.graphhopper.routing.QueryGraph,com.graphhopper.routing.QueryGraph,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.runRandomTest(java.util.Random)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.addVirtualNodesAndEdges(java.util.Random,com.graphhopper.routing.QueryGraph,com.graphhopper.routing.QueryGraph)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CHTurnCostTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.init()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.testFindPath_random_compareWithDijkstra()", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.automaticPrepareCH()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.testFindPath_highlyConnectedGraph_compareWithDijkstra()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.findPathUsingDijkstra(int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.prepareCH(java.util.List)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.testFindPath_heuristic_compareWithDijkstra()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.test_issue1593_full()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.test_issue_1593_simple()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.testRouteViaVirtualNode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHTurnCostTest.testRouteViaVirtualNode_withAlternative()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NodeBasedNodeContractorTest.java", "spoonMethods": []}, {"spoonFilePath": "PrepareContractionHierarchiesTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testReusingNodeOrdering()", "TOT": 6, "UPD": 3, "INS": 2, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Edge-based bidirectional algorithms do not agree with Dijkstra when there is a loop and turn restrictions.", "body": "Here is a graph involving a loop and some turn restrictions for which the edge-based bidirectional algorithms do not agree with Dijkstra / do not find the optimal path:\r\n\r\nhttps://github.com/graphhopper/graphhopper/blob/fe8df1d7e56ac6052571eaf2bfc675ba1cd6415e/core/src/test/java/com/graphhopper/routing/EdgeBasedRoutingAlgorithmTest.java#L162-L185", "url": "https://github.com/graphhopper/graphhopper/issues/1592", "user": "easbar", "labels": ["algorithm", "bug"], "created": "2019-04-02 22:06:41", "closed": "2019-05-06 20:28:52", "commits": {"57a4bc674aa033d451054fd8cacb36415ced6efc": {"commitGHEventType": "referenced", "commitUser": "easbar"}}, "ttf": 33.000277777777775, "commitsDetails": [{"commitHash": "57a4bc674aa033d451054fd8cacb36415ced6efc", "commitGHEventType": "referenced", "commitUser": "easbar", "commitParents": ["bd13d3e25e5ec6620e15a0dada6ff8e9a7db072c"], "nameRev": "57a4bc674aa033d451054fd8cacb36415ced6efc tags/0.13.0-pre3~3", "commitMessage": "Fixes missing best path update for bidir algos when there is a loop at the meeting point (#1592) (#1606)\n\n* Fixes edge key for loops.\r\n* Stops rejecting best path if fwd and bwd searches meet at loop.\r\n* Removes TraversalMode.EDGE_BASED_1DIR.\r\n", "commitDateTime": "2019-05-06 22:28:51", "authoredDateTime": "2019-05-06 22:28:51", "commitGitStats": [{"filePath": "core/files/changelog.txt", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/AbstractBidirAlgo.java", "insertions": 5, "deletions": 9, "lines": 14}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/TraversalMode.java", "insertions": 7, "deletions": 34, "lines": 41}, {"filePath": "core/src/main/java/com/graphhopper/util/GHUtility.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/AStarBidirectionTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/AStarTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/DijkstraBidirectionRefTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/DijkstraTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/EdgeBasedRoutingAlgorithmTest.java", "insertions": 29, "deletions": 5, "lines": 34}, {"filePath": "core/src/test/java/com/graphhopper/util/GHUtilityTest.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "reader-gtfs/pom.xml", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractBidirAlgo.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractBidirAlgo.updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.SPTEntry,int,boolean)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "TraversalMode.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.TraversalMode", "TOT": 12, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 6}, {"spoonMethodName": "com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIteratorState,boolean)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.util.TraversalMode.createTraversalId(int,int,int,boolean)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.util.TraversalMode.reverseEdgeKey(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.TraversalMode.getNoOfStates()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GHUtility.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.GHUtility.createEdgeKey(int,int,int,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AStarBidirectionTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AStarBidirectionTest.configs()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AStarTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AStarTest.configs()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DijkstraBidirectionRefTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRefTest.configs()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DijkstraTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraTest.configs()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "EdgeBasedRoutingAlgorithmTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.testBasicTurnCosts()", "TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.testBasicTurnRestriction()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.testLoop_issue1592()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHUtilityTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.GHUtilityTest.testEdgeStuff()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Issues with time calculation.", "body": "I think the routing algorithms do not properly calculate the times when turn costs are involved. I identified three problems:\r\n\r\n- [x] The turn cost time is not contributing enough to the traveling time, for example for a 100m edge setting the turncosts to 2 increases the weight from 18s to 20s while the time is only increased from 18s to 18.002s. Fixed in #1586.\r\n\r\n- [x] edge-based CH does not include the turn cost times in the calculated time at all. Everything is fine for the weight calculation and when using the fastest weighting the fastest route will be found with respect to turn costs, but `Path.getTime()` will not include the turn cost times. This has to be adjusted in `Path4CH`. Fixed in #1611.\r\n\r\n- [x] The bidirectional algorithms (dijkstra&astar, probably also ALT) do not pay attention to turn costs at the meeting point of fwd&bwd search (the turn costs are properly included for the weight calculation, but the turn cost *time* is not added when unpacking the path. Fixed in #1586.\r\n\r\n- [x] `TurnWeighting` does not include default u-turn cost in `calcMillis`. Fixed in #1635.\r\n\r\nFor turn *restrictions* (infinite not finite turn costs) the first three issues are not important, because restricted turns will not be used anyway. The 4th issue only plays a role when `TraversalMode.EDGE_BASED_2DIR_UTURN` is used.\r\n\r\nSee this test: 44f5c068d4e672dd905ee0b55bc5bd5095c30991\r\n\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1585", "user": "easbar", "labels": ["bug"], "created": "2019-03-28 17:29:49", "closed": "2019-06-12 14:57:41", "commits": {"05a7fb1a74bbf85cc1b22d1a6beabc3648a6c75f": {"commitGHEventType": "closed", "commitUser": "easbar"}}, "ttf": 75.00027777777778, "commitsDetails": [{"commitHash": "05a7fb1a74bbf85cc1b22d1a6beabc3648a6c75f", "commitGHEventType": "closed", "commitUser": "easbar", "commitParents": ["ef91bc6aeeae6cdfd5194bf5b99abb9cac3ee8da"], "nameRev": "05a7fb1a74bbf85cc1b22d1a6beabc3648a6c75f tags/0.13.0-pre5~5", "commitMessage": "Includes default u-turn cost in time calculation, fixes #1585. (#1635)\n\nPreviously defaut u-turn times were not included in route times", "commitDateTime": "2019-06-12 16:57:34", "authoredDateTime": "2019-06-12 16:57:34", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/PathBidirRef.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/weighting/TurnWeighting.java", "insertions": 21, "deletions": 8, "lines": 29}, {"filePath": "core/src/test/java/com/graphhopper/routing/EdgeBasedRoutingAlgorithmTest.java", "insertions": 132, "deletions": 129, "lines": 261}, {"filePath": "core/src/test/java/com/graphhopper/routing/weighting/TurnWeightingTest.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "'Comparison method violates general contract' error in QueryGraph#lookup.", "body": "When running random tests for #1581 the following error came up, see the modified test here: \r\n eb37e7c5ee9c3c2000e2bfbb2448341cb24e446b\r\n\r\n```\r\njava.lang.IllegalArgumentException: Comparison method violates its general contract!\r\n\r\n\tat java.util.TimSort.mergeHi(TimSort.java:899)\r\n\tat java.util.TimSort.mergeAt(TimSort.java:516)\r\n\tat java.util.TimSort.mergeForceCollapse(TimSort.java:457)\r\n\tat java.util.TimSort.sort(TimSort.java:254)\r\n\tat java.util.Arrays.sort(Arrays.java:1512)\r\n\tat java.util.ArrayList.sort(ArrayList.java:1462)\r\n\tat java.util.Collections.sort(Collections.java:175)\r\n\tat com.graphhopper.routing.QueryGraph$3.apply(QueryGraph.java:277)\r\n\tat com.graphhopper.routing.QueryGraph$3.apply(QueryGraph.java:269)\r\n\tat com.carrotsearch.hppc.IntObjectHashMap.forEach(IntObjectHashMap.java:717)\r\n\tat com.graphhopper.routing.QueryGraph.lookup(QueryGraph.java:269)\r\n\tat com.graphhopper.routing.RandomCHRoutingTest.addVirtualNodesAndEdges(RandomCHRoutingTest.java:126)\r\n\tat com.graphhopper.routing.RandomCHRoutingTest.issue1574_random(RandomCHRoutingTest.java:78)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n\r\n\r\n```\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1582", "user": "easbar", "labels": ["bug"], "created": "2019-03-28 06:49:29", "closed": "2019-04-11 17:45:30", "commits": {"470e06b8c82e2d7024af97dbd930783c78d53a8b": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "fcb74043a3415ba06b5e758dee262989430fb7b5": {"commitGHEventType": "closed", "commitUser": "michaz"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "470e06b8c82e2d7024af97dbd930783c78d53a8b", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fcb74043a3415ba06b5e758dee262989430fb7b5", "commitGHEventType": "closed", "commitUser": "michaz", "commitParents": ["7f2b0c596e513b216bd8c139e9f0a1a4699548dd"], "nameRev": "fcb74043a3415ba06b5e758dee262989430fb7b5 tags/0.13.0-pre2~3", "commitMessage": "Fixes #1582\n", "commitDateTime": "2019-04-11 19:42:55", "authoredDateTime": "2019-04-09 14:18:33", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 11, "deletions": 20, "lines": 31}, {"filePath": "core/src/test/java/com/graphhopper/routing/RandomCHRoutingTest.java", "insertions": 14, "deletions": 7, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.lookup(java.util.List).3.apply(int,java.util.List)", "TOT": 18, "UPD": 1, "INS": 1, "MOV": 15, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.lookup(java.util.List).3.apply(int,java.util.List).1.compare(com.graphhopper.storage.index.QueryResult,com.graphhopper.storage.index.QueryResult)", "TOT": 31, "UPD": 5, "INS": 2, "MOV": 22, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.lookup(java.util.List).3.apply(int,java.util.List).1.distanceOfSnappedPointToPillarNode(com.graphhopper.storage.index.QueryResult)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RandomCHRoutingTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.runRandomTest(java.util.Random)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.issue1582()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.runRandomTest(java.util.Random,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.random()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.issue1574_1()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.issue1574_2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.issue1583()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RandomCHRoutingTest.issue1593()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fcb74043a3415ba06b5e758dee262989430fb7b5"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11.0, "deletions": 20.0, "lines": 31.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 50.0, "UPD": 6.0, "INS": 4.0, "MOV": 37.0, "DEL": 3.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing"], "changesInPackagesSPOON": ["com.graphhopper.routing.QueryGraph.lookup(java.util.List).3.apply(int,java.util.List)", "com.graphhopper.routing.QueryGraph.lookup(java.util.List).3.apply(int,java.util.List).1.compare(com.graphhopper.storage.index.QueryResult,com.graphhopper.storage.index.QueryResult)", "com.graphhopper.routing.QueryGraph.lookup(java.util.List).3.apply(int,java.util.List).1.distanceOfSnappedPointToPillarNode(com.graphhopper.storage.index.QueryResult)"]}, {"title": "Rare bug for stall on demand", "body": "Currently I'm facing an issue when stall_on_demand=true (if false it disappears). It is very rare and hard to reproduce in a unit test.\r\n\r\nThe reason is likely in DijkstraBidirectionCH.entryIsStallable:\r\n```\r\nadjNode.weight + weighting.calcWeight(iter, !reverse, getIncomingEdge(entry)) < entry.weight\r\n```\r\n\r\nIt returns true although it should return false. In my case it is the 4th decimal place: `35.643+50.2975 < 50.297522`\r\n\r\nSo, when I round to the precision we currently use in CHGraphImpl:\r\n`Math.round(entry.weight / 1000f) * 1000f`\r\nthe problem disappears. But maybe it is related to virtual nodes because the special case is a QueryGraph with 3 locations where the fastest route B->C crosses point A.", "url": "https://github.com/graphhopper/graphhopper/issues/1574", "user": "karussell", "labels": ["bug"], "created": "2019-03-22 16:29:26", "closed": "2019-03-28 11:25:35", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Elevation polyline bug on the maps page", "body": "When you manipulate elevation control at [maps page](https://graphhopper.com/maps) red polyline is not removed after route change:\r\n![image](https://user-images.githubusercontent.com/17334466/54673571-ccd06680-4afa-11e9-92dd-b265f9264ce0.png). \r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1573", "user": "Azbesciak", "labels": ["bug", "web"], "created": "2019-03-20 09:29:44", "closed": "2019-03-26 08:42:36", "commits": {"b15536c69abfdf8a1dfd082b80560c05154c4f88": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "b15536c69abfdf8a1dfd082b80560c05154c4f88", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["4edf5ec398dfa7d89a182775a88f257404d0f037"], "nameRev": "b15536c69abfdf8a1dfd082b80560c05154c4f88 tags/0.13.0-pre1~6", "commitMessage": "Use Leaflet.Heightgraph to show PathDetails (#1569)\n\n* Use Leaflet.Heightgraph to show PathDetails\r\n\r\n* Show height of speed for average_speed instead of elevation\r\n\r\n* Revert height as speed\r\n\r\n* use light green if no path details\r\n\r\n* Remove jQuery empty\r\n\r\n* Use the hosted version on npm and remove the old elevation library\r\n\r\n* Remove red lines from the map, #1573\r\n", "commitDateTime": "2019-03-25 20:53:50", "authoredDateTime": "2019-03-25 20:53:50", "commitGitStats": [{"filePath": "web/package.json", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "web/src/main/resources/assets/css/L.Control.Heightgraph.css", "insertions": 146, "deletions": 0, "lines": 146}, {"filePath": "web/src/main/resources/assets/css/images/area-chart.svg", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "web/src/main/resources/assets/css/images/remove.svg", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "web/src/main/resources/assets/css/leaflet.elevation-0.0.4.css", "insertions": 0, "deletions": 64, "lines": 64}, {"filePath": "web/src/main/resources/assets/index.html", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/src/main/resources/assets/js/lib/leaflet.elevation-0.0.4.min.js", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "web/src/main/resources/assets/js/main-template.js", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "web/src/main/resources/assets/js/main.js", "insertions": 126, "deletions": 46238, "lines": 46364}, {"filePath": "web/src/main/resources/assets/js/map.js", "insertions": 87, "deletions": 27, "lines": 114}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "0.13-SNAPSHOT build errors", "body": "Hello, having updated the 0.13-SNAPSHOT, and making build I get errors. Can someone look at it and review what's wrong. I'm using exactly same approach as when building 0.12-SNAPSHOT (maven, JDK are present at paths)\r\n\r\n```\r\nE:\\xfer\\graphhopper>bash ./graphhopper.sh --action build \r\n## using java 11.0.2 (64bit) from D:\\develop\\Java\\JDK64\r\n## building graphhopper jar: \r\n## using maven at ./maven\r\n## compilation of parent failed\r\n[INFO] Scanning for projects...\r\n[ERROR] [ERROR] Some problems were encountered while processing the POMs:\r\n[FATAL] Non-resolvable parent POM for com.graphhopper:graphhopper-core:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 15, column 13\r\n[FATAL] Non-resolvable parent POM for com.graphhopper:graphhopper-reader-osm:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 12, column 13\r\n[FATAL] Non-resolvable parent POM for com.graphhopper:graphhopper-isochrone:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 13, column 13\r\n[FATAL] Non-resolvable parent POM for com.graphhopper:graphhopper-reader-gtfs:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 12, column 13\r\n[FATAL] Non-resolvable parent POM for com.graphhopper:graphhopper-tools:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 12, column 13\r\n[FATAL] Non-resolvable parent POM for com.graphhopper:graphhopper-web-bundle:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 13, column 13\r\n[FATAL] Non-resolvable parent POM for com.graphhopper:graphhopper-api:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 13, column 13\r\n[FATAL] Non-resolvable parent POM for com.graphhopper:graphhopper-web-api:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 13, column 13\r\n[FATAL] Non-resolvable parent POM for com.graphhopper:graphhopper-web:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 13, column 13\r\n[FATAL] Non-resolvable parent POM for com.graphhopper:directions-api-client-hc:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 30, column 13\r\n @ \r\n[ERROR] The build could not read 10 projects -> [Help 1]\r\n[ERROR]   \r\n[ERROR]   The project com.graphhopper:graphhopper-core:0.12-SNAPSHOT (E:\\xfer\\graphhopper\\core\\pom.xml) has 1 error\r\n[ERROR]     Non-resolvable parent POM for com.graphhopper:graphhopper-core:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 15, column 13 -> [Help 2]\r\n[ERROR]   \r\n[ERROR]   The project com.graphhopper:graphhopper-reader-osm:0.12-SNAPSHOT (E:\\xfer\\graphhopper\\reader-osm\\pom.xml) has 1 error\r\n[ERROR]     Non-resolvable parent POM for com.graphhopper:graphhopper-reader-osm:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 12, column 13 -> [Help 2]\r\n[ERROR]   \r\n[ERROR]   The project com.graphhopper:graphhopper-isochrone:0.12-SNAPSHOT (E:\\xfer\\graphhopper\\isochrone\\pom.xml) has 1 error\r\n[ERROR]     Non-resolvable parent POM for com.graphhopper:graphhopper-isochrone:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 13, column 13 -> [Help 2]\r\n[ERROR]   \r\n[ERROR]   The project com.graphhopper:graphhopper-reader-gtfs:0.12-SNAPSHOT (E:\\xfer\\graphhopper\\reader-gtfs\\pom.xml) has 1 error\r\n[ERROR]     Non-resolvable parent POM for com.graphhopper:graphhopper-reader-gtfs:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 12, column 13 -> [Help 2]\r\n[ERROR]   \r\n[ERROR]   The project com.graphhopper:graphhopper-tools:0.12-SNAPSHOT (E:\\xfer\\graphhopper\\tools\\pom.xml) has 1 error\r\n[ERROR]     Non-resolvable parent POM for com.graphhopper:graphhopper-tools:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 12, column 13 -> [Help 2]\r\n[ERROR]   \r\n[ERROR]   The project com.graphhopper:graphhopper-web-bundle:0.12-SNAPSHOT (E:\\xfer\\graphhopper\\web-bundle\\pom.xml) has 1 error\r\n[ERROR]     Non-resolvable parent POM for com.graphhopper:graphhopper-web-bundle:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 13, column 13 -> [Help 2]\r\n[ERROR]   \r\n[ERROR]   The project com.graphhopper:graphhopper-api:0.12-SNAPSHOT (E:\\xfer\\graphhopper\\api\\pom.xml) has 1 error\r\n[ERROR]     Non-resolvable parent POM for com.graphhopper:graphhopper-api:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 13, column 13 -> [Help 2]\r\n[ERROR]   \r\n[ERROR]   The project com.graphhopper:graphhopper-web-api:0.12-SNAPSHOT (E:\\xfer\\graphhopper\\web-api\\pom.xml) has 1 error\r\n[ERROR]     Non-resolvable parent POM for com.graphhopper:graphhopper-web-api:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 13, column 13 -> [Help 2]\r\n[ERROR]   \r\n[ERROR]   The project com.graphhopper:graphhopper-web:0.12-SNAPSHOT (E:\\xfer\\graphhopper\\web\\pom.xml) has 1 error\r\n[ERROR]     Non-resolvable parent POM for com.graphhopper:graphhopper-web:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 13, column 13 -> [Help 2]\r\n[ERROR]   \r\n[ERROR]   The project com.graphhopper:directions-api-client-hc:0.12-SNAPSHOT (E:\\xfer\\graphhopper\\client-hc\\pom.xml) has 1 error\r\n[ERROR]     Non-resolvable parent POM for com.graphhopper:directions-api-client-hc:0.12-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.12-SNAPSHOT and 'parent.relativePath' points at wrong local POM @ line 30, column 13 -> [Help 2]\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR] \r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException\r\n[ERROR] [Help 2] http://cwiki.apache.org/confluence/display/MAVEN/UnresolvableModelException\r\n\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1571", "user": "trumpeta", "labels": ["architecture", "bug"], "created": "2019-03-11 17:47:25", "closed": "2019-03-11 17:56:45", "commits": {"b505c90d743a445d1030971e530052bf43a2651f": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b505c90d743a445d1030971e530052bf43a2651f", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["4b645729252c4834f67c2ad145254c9ab1d9e6fd"], "nameRev": "b505c90d743a445d1030971e530052bf43a2651f tags/0.12.0~4^2~8", "commitMessage": "properly use 0.13-SNAPSHOT for all subprojects fixes #1571\n", "commitDateTime": "2019-03-11 18:56:32", "authoredDateTime": "2019-03-11 18:56:32", "commitGitStats": [{"filePath": "android/app/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "android/app/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "client-hc/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "isochrone/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "reader-gtfs/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "reader-osm/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "tools/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web-api/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web-bundle/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b505c90d743a445d1030971e530052bf43a2651f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["android/app"]}, {"title": "VirtualEdge includes 'base' node when fetching way geometry.", "body": "Is this a bug ? \r\nhttps://github.com/graphhopper/graphhopper/commit/b72842df57f1b496032283c07f196c0a956719bb", "url": "https://github.com/graphhopper/graphhopper/issues/1552", "user": "easbar", "labels": ["bug"], "created": "2019-02-23 09:06:21", "closed": "2019-02-28 11:55:33", "commits": {"99780adc56febc736fbac029ef5e83394aa4cade": {"commitGHEventType": "referenced", "commitUser": "easbar"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "99780adc56febc736fbac029ef5e83394aa4cade", "commitGHEventType": "referenced", "commitUser": "easbar", "commitParents": ["c51a8b9fb9eba03d0cc98eb9cf7db779cade8ef0", "4209ba326344b3457e810de66b63a998f16b6873"], "nameRev": "99780adc56febc736fbac029ef5e83394aa4cade tags/0.12.0-pre6~9", "commitMessage": "Fixes virtual edge way geometry in case of Position.PILLAR (#1556).\n\nFixes #1552.", "commitDateTime": "2019-02-28 12:55:33", "authoredDateTime": "2019-02-28 12:55:33", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 9, "deletions": 5, "lines": 14}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 87, "deletions": 4, "lines": 91}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdges(int,int,com.graphhopper.util.shapes.GHPoint3D,int,boolean,com.graphhopper.util.shapes.GHPoint3D,int,com.graphhopper.routing.PointList,com.graphhopper.routing.EdgeIteratorState,int,int)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.lookup(java.util.List).3.apply(int,java.util.List)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdges(int,int,com.graphhopper.util.shapes.GHPoint3D,int,com.graphhopper.util.shapes.GHPoint3D,int,com.graphhopper.routing.PointList,com.graphhopper.routing.EdgeIteratorState,int,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testOneVirtualNode()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testWayGeometry_edge()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testWayGeometry_pillar()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Speed for AverageSpeedDetails should depend on Weighting", "body": "Currently the average speed stored in the edge is used, but when flexible mode is used the speed is calculated on the fly.\r\n\r\nSo we should somehow get rid of `encoder.getAccessEnc()` (weighting-dependent too!) and `encoder.getAverageSpeed()`.\r\n\r\nFor AverageSpeedDetails we must use Weighting.calcMillis and the edge distance to calculate the more precise weighting-dependent speed. (change FlagEncoder to Weighting in PathDetailsBuilderFactory)\r\n\r\n~~In InstructionsOutgoingEdges we should get rid of the speed dependency. With #1548 this should be doable using the EncodedValues `RoadEnvironment` and `RoadClass`.~~ The refactoring of InstructionsOutgoingEdges should be done in #990.", "url": "https://github.com/graphhopper/graphhopper/issues/1551", "user": "karussell", "labels": ["bug"], "created": "2019-02-22 12:53:49", "closed": "2019-11-22 16:37:07", "commits": {}, "ttf": 273.0002777777778, "commitsDetails": []}, {"title": "Config without prepare.ch.edge_based:off leads to exception", "body": "See [discussion](https://discuss.graphhopper.com/t/error-when-importing-map/4085).", "url": "https://github.com/graphhopper/graphhopper/issues/1538", "user": "karussell", "labels": ["bug"], "created": "2019-02-08 13:06:21", "closed": "2019-02-08 13:06:58", "commits": {"c89186f856aaa84dc1af8bd3252d1887191b67a6": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c89186f856aaa84dc1af8bd3252d1887191b67a6", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["f00960cdd795427c819fcb6981d035500659186c"], "nameRev": "c89186f856aaa84dc1af8bd3252d1887191b67a6 tags/0.12.0-pre3~9", "commitMessage": "avoid exception for disabling edge based CH config, fixes #1538\n", "commitDateTime": "2019-02-08 14:06:46", "authoredDateTime": "2019-02-08 14:06:46", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/ch/CHAlgoFactoryDecorator.java", "insertions": 7, "deletions": 4, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CHAlgoFactoryDecorator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.CHAlgoFactoryDecorator.prepare(com.graphhopper.routing.ch.StorableProperties)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHAlgoFactoryDecorator.createPreparations(com.graphhopper.routing.ch.GraphHopperStorage)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHAlgoFactoryDecorator.createCHPreparation(com.graphhopper.routing.ch.GraphHopperStorage,com.graphhopper.routing.weighting.Weighting,com.graphhopper.routing.util.TraversalMode)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.CHAlgoFactoryDecorator.init(com.graphhopper.util.CmdArgs)", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c89186f856aaa84dc1af8bd3252d1887191b67a6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 4, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 3, "INS": 2, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/ch"], "changesInPackagesSPOON": ["com.graphhopper.routing.ch.CHAlgoFactoryDecorator.init(com.graphhopper.util.CmdArgs)", "com.graphhopper.routing.ch.CHAlgoFactoryDecorator.createCHPreparation(com.graphhopper.routing.ch.GraphHopperStorage,com.graphhopper.routing.weighting.Weighting,com.graphhopper.routing.util.TraversalMode)", "com.graphhopper.routing.ch.CHAlgoFactoryDecorator.prepare(com.graphhopper.routing.ch.StorableProperties)", "com.graphhopper.routing.ch.CHAlgoFactoryDecorator.createPreparations(com.graphhopper.routing.ch.GraphHopperStorage)"]}, {"title": "Building graph from OSM in case of loop edge fails.", "body": "I am getting this error when trying to import this map: https://download.geofabrik.de/europe/germany-140101.osm.pbf. The error occurs due to the recent changes in #1531.\r\n```\r\nException in thread \"PBF Reader\" java.lang.RuntimeException: Unable to read PBF file.\r\n\tat com.graphhopper.reader.osm.pbf.PbfReader.run(PbfReader.java:50)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.RuntimeException: java.lang.InterruptedException\r\n\tat com.graphhopper.reader.osm.OSMInputFile.process(OSMInputFile.java:253)\r\n\tat com.graphhopper.reader.osm.pbf.PbfDecoder.sendResultsToSink(PbfDecoder.java:96)\r\n\tat com.graphhopper.reader.osm.pbf.PbfDecoder.processBlobs(PbfDecoder.java:151)\r\n\tat com.graphhopper.reader.osm.pbf.PbfDecoder.run(PbfDecoder.java:162)\r\n\tat com.graphhopper.reader.osm.pbf.PbfReader.run(PbfReader.java:47)\r\n\t... 1 more\r\nCaused by: java.lang.InterruptedException\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2014)\r\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2048)\r\n\tat java.util.concurrent.LinkedBlockingQueue.put(LinkedBlockingQueue.java:350)\r\n\tat com.graphhopper.reader.osm.OSMInputFile.process(OSMInputFile.java:251)\r\n\t... 5 more\r\nERROR [2019-02-04 07:38:59,164] com.graphhopper.reader.osm.OSMReader: Couldn't properly add edge with osm ids:[2603643788, 2603643788, 2569371457, 2517174531]\r\n! java.lang.ArrayIndexOutOfBoundsException: -43\r\n! at com.graphhopper.storage.RAMDataAccess.getInt(RAMDataAccess.java:207)\r\n! at com.graphhopper.reader.PillarInfo.getLatitude(PillarInfo.java:83)\r\n! at com.graphhopper.reader.osm.OSMReader.handlePillarNode(OSMReader.java:768)\r\n! at com.graphhopper.reader.osm.OSMReader.addOSMWay(OSMReader.java:659)\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1533", "user": "easbar", "labels": ["bug"], "created": "2019-02-04 07:47:37", "closed": "2019-02-06 12:08:42", "commits": {"666a52dddb4b72f8f3ec5b762a360dd795536f97": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "f00960cdd795427c819fcb6981d035500659186c": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "666a52dddb4b72f8f3ec5b762a360dd795536f97", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f00960cdd795427c819fcb6981d035500659186c", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["396873c284f4230788112205b38d2b07ef8195df"], "nameRev": "f00960cdd795427c819fcb6981d035500659186c tags/0.12.0-pre3~10", "commitMessage": "trying to fix problems with incorrectly mapped loop edges (#1535)\n\n* trying to fix #1533\r\n* Adds visualization of OSM loop.\r\n* minor fix in test data\r\nCo-authored-by: easbar <easbar.mail@posteo.net>", "commitDateTime": "2019-02-06 13:08:41", "authoredDateTime": "2019-02-06 13:08:41", "commitGitStats": [{"filePath": "reader-osm/src/main/java/com/graphhopper/reader/osm/OSMReader.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "reader-osm/src/test/java/com/graphhopper/reader/osm/OSMReaderTest.java", "insertions": 30, "deletions": 10, "lines": 40}, {"filePath": "reader-osm/src/test/resources/com/graphhopper/reader/osm/test-avoid-loops2.xml", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "reader-osm/src/test/resources/com/graphhopper/reader/osm/test-avoid-loops3.xml", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "reader-osm/src/test/resources/com/graphhopper/reader/osm/test-avoid-loops4.xml", "insertions": 46, "deletions": 0, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMReader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.OSMReader.addOSMWay(com.graphhopper.reader.osm.LongIndexedContainer,long,long)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "OSMReaderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.OSMReaderTest.avoidsLoopEdges()", "TOT": 23, "UPD": 10, "INS": 0, "MOV": 12, "DEL": 1}, {"spoonMethodName": "com.graphhopper.reader.osm.OSMReaderTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.reader.osm.OSMReaderTest.avoidsLoopEdges_1525()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.OSMReaderTest.checkLoop(com.graphhopper.GraphHopper)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.OSMReaderTest.avoidsLoopEdgesIdenticalLatLon_1533()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.OSMReaderTest.avoidsLoopEdgesIdenticalNodeIds_1533()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Landmark routing issue if QueryGraph splits longer edge", "body": "Likely a very seldom bug. Occurs only if [there are more than 3 points](https://graphhopper.com/maps/?point=50.016923%2C11.514187&point=50.019129%2C11.500325&point=50.023623%2C11.56929&vehicle=bike) and SPT is crossing a virtual node that is on a longer edge. The weight difference is minimal but still it results in a suboptimal route for \"bidirectional A* with landmarks\" only.\r\n\r\nThere is likely a problem due to our approximations for the weight of the landmark for virtual nodes [here](https://github.com/graphhopper/graphhopper/blob/0.11/core/src/main/java/com/graphhopper/routing/lm/LMApproximator.java#L124).\r\n\r\nSee [this test case](https://github.com/graphhopper/graphhopper/blob/master/reader-osm/src/test/java/com/graphhopper/routing/RoutingAlgorithmWithOSMIT.java#L306) that shows the issue:\r\n\r\n```java\r\n@Test\r\npublic void testLandmarkBug() {\r\n    List<OneRun> list = new ArrayList<>();\r\n    OneRun run = new OneRun();\r\n    run.add(50.016923, 11.514187, 0, 0);\r\n    run.add(50.019129, 11.500325, 0, 0);\r\n    run.add(50.023623, 11.56929, 7069, 178);\r\n    list.add(run);\r\n\r\n    runAlgo(testCollector, DIR + \"/north-bayreuth.osm.gz\", \"target/north-bayreuth-gh\",\r\n            list, \"bike\", true, \"bike\", \"fastest\", false);\r\n    assertEquals(testCollector.toString(), 0, testCollector.errors.size());\r\n}\r\n```\r\n\r\nError (bidir A*|landmarks is the only algorithm that fails):\r\n\r\n```\r\njava.lang.AssertionError: FOUND 2 ERRORS.\r\nalgoEntry(astarbi|landmarks) returns path not matching the expected distance of 7069.0\t Returned was 7325.930538837292\t (expected points 178, was 175) [435-436  50.0164164977881,11.514396175880014,NaN, 425-1869  50.01912750378136,11.500335196386084,NaN, 28-233  50.0235468735199,11.568922110014084,NaN].\r\nalgoEntry(astarbi|landmarks) returns path not matching the expected points of 178\t Returned was 175\t (expected distance 7069.0, was 7325.930538837292) [435-436  50.0164164977881,11.514396175880014,NaN, 425-1869  50.01912750378136,11.500335196386084,NaN, 28-233  50.0235468735199,11.568922110014084,NaN].\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1532", "user": "karussell", "labels": ["algorithm", "bug"], "created": "2019-02-01 11:41:53", "closed": "2020-01-20 10:48:29", "commits": {"1f93a9d8b16729252b41b0252b8db08013fd9a40": {"commitGHEventType": "referenced", "commitUser": "michaz"}}, "ttf": 352.0002777777778, "commitsDetails": [{"commitHash": "1f93a9d8b16729252b41b0252b8db08013fd9a40", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "Gtfs reader fails if agency is null", "body": "The reason is that in `Route$Loader.loadOneRow` the map `feed.agency` is empty. See forum post: https://discuss.graphhopper.com/t/issues-setting-up-gtfs-routing/3978\r\n\r\nWhen I run this the first time I get:\r\n\r\n```\r\nINFO  [2019-01-10 08:49:48,492] com.conveyal.gtfs.model.Entity$Loader: Table feed_info was missing but it is not required.\r\nINFO  [2019-01-10 08:49:48,492] com.conveyal.gtfs.GTFSFeed: Feed ID is undefined, pester maintainers to include a feed ID. Using file name gtfs.\r\nINFO  [2019-01-10 08:49:48,493] com.conveyal.gtfs.model.Entity$Loader: Loading GTFS table agency from agency.txt\r\nINFO  [2019-01-10 08:49:48,496] com.conveyal.gtfs.model.Entity$Loader: Loading GTFS table calendar from calendar.txt\r\nINFO  [2019-01-10 08:49:48,514] com.conveyal.gtfs.model.Entity$Loader: Loading GTFS table calendar_dates from calendar_dates.txt\r\nINFO  [2019-01-10 08:49:48,602] com.conveyal.gtfs.model.Entity$Loader: Table fare_attributes was missing but it is not required.\r\nINFO  [2019-01-10 08:49:48,603] com.conveyal.gtfs.model.Entity$Loader: Table fare_rules was missing but it is not required.\r\nINFO  [2019-01-10 08:49:48,604] com.conveyal.gtfs.model.Entity$Loader: Loading GTFS table routes from routes.txt\r\njava.lang.RuntimeException: java.lang.NullPointerException\r\n\tat com.graphhopper.reader.gtfs.GtfsStorage.loadGtfsFromFile(GtfsStorage.java:203)\r\n\tat com.graphhopper.reader.gtfs.GraphHopperGtfs.createOrLoad(GraphHopperGtfs.java:347)\r\n\tat com.graphhopper.http.GraphHopperBundle.runPtGraphHopper(GraphHopperBundle.java:213)\r\n\tat com.graphhopper.http.GraphHopperBundle.run(GraphHopperBundle.java:202)\r\n\tat com.graphhopper.http.GraphHopperBundle.run(GraphHopperBundle.java:64)\r\n\tat io.dropwizard.setup.Bootstrap.run(Bootstrap.java:200)\r\n\tat io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:42)\r\n\tat io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:87)\r\n\tat io.dropwizard.cli.Cli.run(Cli.java:78)\r\n\tat io.dropwizard.Application.run(Application.java:93)\r\n\tat com.graphhopper.http.GraphHopperApplication.main(GraphHopperApplication.java:33)\r\nCaused by: java.lang.NullPointerException\r\n\tat com.conveyal.gtfs.model.Route$Loader.loadOneRow(Route.java:83)\r\n\tat com.conveyal.gtfs.model.Entity$Loader.loadTable(Entity.java:269)\r\n\tat com.conveyal.gtfs.GTFSFeed.loadFromFile(GTFSFeed.java:163)\r\n\tat com.conveyal.gtfs.GTFSFeed.loadFromFile(GTFSFeed.java:174)\r\n\tat com.graphhopper.reader.gtfs.GtfsStorage.loadGtfsFromFile(GtfsStorage.java:199)\r\n\t... 10 more\r\n```\r\n\r\nIf we cannot properly handle this we should throw a better error message and what might be wrong with the data :)\r\n\r\nAnd when I execute this again I get #1513, which should not be.", "url": "https://github.com/graphhopper/graphhopper/issues/1514", "user": "karussell", "labels": ["bug", "public transport"], "created": "2019-01-10 08:58:40", "closed": "2019-01-17 09:14:20", "commits": {"287011c09d2d2902cd2750878e12c6672f5594fe": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "eabd8181e6b193e7ca7229ffa5cfbd7e8e654f53": {"commitGHEventType": "referenced", "commitUser": "michaz"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "287011c09d2d2902cd2750878e12c6672f5594fe", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": ["833d1a0e2286cdb615f32684d8a6247e0cec673b"], "nameRev": "287011c09d2d2902cd2750878e12c6672f5594fe tags/0.12.0-pre3~19^2~1", "commitMessage": "Store a missing agency as an error rather than throwing. #1514\n", "commitDateTime": "2019-01-16 13:18:02", "authoredDateTime": "2019-01-16 13:17:41", "commitGitStats": [{"filePath": "reader-gtfs/src/main/java/com/conveyal/gtfs/GTFSFeed.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "reader-gtfs/src/main/java/com/conveyal/gtfs/error/GeneralError.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GTFSFeed.java", "spoonMethods": [{"spoonMethodName": "com.conveyal.gtfs.GTFSFeed.loadFromFile(java.util.zip.ZipFile,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GeneralError.java", "spoonMethods": [{"spoonMethodName": "com.conveyal.gtfs.error.GeneralError", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GtfsStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GtfsStorage.loadGtfsFromFile(java.lang.String,java.util.zip.ZipFile)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "eabd8181e6b193e7ca7229ffa5cfbd7e8e654f53", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": ["287011c09d2d2902cd2750878e12c6672f5594fe"], "nameRev": "eabd8181e6b193e7ca7229ffa5cfbd7e8e654f53 tags/0.12.0-pre3~19^2", "commitMessage": "Better error logging. #1514\n", "commitDateTime": "2019-01-16 13:30:31", "authoredDateTime": "2019-01-16 13:30:31", "commitGitStats": [{"filePath": "reader-gtfs/src/main/java/com/conveyal/gtfs/GTFSFeed.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "reader-gtfs/src/main/java/com/conveyal/gtfs/model/Route.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java", "insertions": 1, "deletions": 5, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GTFSFeed.java", "spoonMethods": [{"spoonMethodName": "com.conveyal.gtfs.GTFSFeed.loadFromFile(java.util.zip.ZipFile)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Route.java", "spoonMethods": [{"spoonMethodName": "com.conveyal.gtfs.model.Route.Loader.loadOneRow()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GraphHopperGtfs.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GraphHopperGtfs.createOrLoad(com.graphhopper.reader.gtfs.GHDirectory,com.graphhopper.routing.util.EncodingManager,com.graphhopper.reader.gtfs.PtFlagEncoder,com.graphhopper.reader.gtfs.GtfsStorage,java.util.Collection,java.util.Collection)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GtfsStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GtfsStorage.loadGtfsFromFile(java.lang.String,java.util.zip.ZipFile)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["287011c09d2d2902cd2750878e12c6672f5594fe", "eabd8181e6b193e7ca7229ffa5cfbd7e8e654f53"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 25, "deletions": 10, "lines": 35, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 11, "UPD": 2, "INS": 5, "MOV": 3, "DEL": 1, "spoonFilesChanged": 5, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["reader-gtfs/src/main/java/com/graphhopper/reader/gtfs", "reader-gtfs/src/main/java/com/conveyal/gtfs", "reader-gtfs/src/main/java/com/conveyal/gtfs/model", "reader-gtfs/src/main/java/com/conveyal/gtfs/error"], "changesInPackagesSPOON": ["com.graphhopper.reader.gtfs.GtfsStorage.loadGtfsFromFile(java.lang.String,java.util.zip.ZipFile)", "com.graphhopper.reader.gtfs.GraphHopperGtfs.createOrLoad(com.graphhopper.reader.gtfs.GHDirectory,com.graphhopper.routing.util.EncodingManager,com.graphhopper.reader.gtfs.PtFlagEncoder,com.graphhopper.reader.gtfs.GtfsStorage,java.util.Collection,java.util.Collection)", "com.conveyal.gtfs.GTFSFeed.loadFromFile(java.util.zip.ZipFile)", "com.conveyal.gtfs.error.GeneralError", "com.conveyal.gtfs.model.Route.Loader.loadOneRow()", "com.conveyal.gtfs.GTFSFeed.loadFromFile(java.util.zip.ZipFile,java.lang.String)"]}, {"title": "Instruction \"get off the bike\" is missing", "body": "Please look at this route: https://www.openstreetmap.org/directions?engine=graphhopper_bicycle&route=51.25745%2C7.14858%3B51.25727%2C7.14617\r\n\r\nThe cyclists are routed over a pedestrians way here, which has no bicycle=yes or any allowing value (I mean this: https://www.openstreetmap.org/way/180247410). But the default bicycle-Value for highway=pedestrian is \"no\", isn't it?", "url": "https://github.com/graphhopper/graphhopper/issues/1498", "user": "Lukas458", "labels": ["bug", "good first issue"], "created": "2018-11-26 20:28:07", "closed": "2020-05-29 08:34:02", "commits": {}, "ttf": 549.0002777777778, "commitsDetails": []}, {"title": "Even short distance landmark route uses too many nodes", "body": "This [route](https://graphhopper.com/maps/?point=51.220647%2C0.109863&point=47.960502%2C3.493652&vehicle=car&ch.disable=true) is not even 600km but uses more than 1.5 mio nodes with the landmark algo even after #1376. Which is strange as a west-to-east route can get [be much longer](https://graphhopper.com/maps/?point=37.230328%2C-5.932617&point=58.652123%2C24.873047&vehicle=car) (>4000km) and still crosses Paris. \r\n\r\nAgain the splitting seems not to work.", "url": "https://github.com/graphhopper/graphhopper/issues/1471", "user": "karussell", "labels": ["bug"], "created": "2018-09-29 15:05:49", "closed": "2018-09-29 15:36:46", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "main method with handcrafted client does not exit", "body": "The following class starts and runs everything fine but won't exit:\r\n\r\n```\r\npublic class Test {\r\n    public static void main(String[] args) {\r\n        GraphHopperWeb graphHopperWeb = new GraphHopperWeb().setKey(KEY);// even without setKey the issue is reproducable\r\n        GHResponse resp = graphHopperWeb.route(new GHRequest(48.180739, 3.80127, 52.509535, 13.271484));\r\n        if (resp.hasErrors())\r\n            throw new RuntimeException(resp.getErrors().toString());\r\n        System.out.println(resp.getBest().getTime());\r\n    }\r\n}\r\n```\r\n\r\nA workaround is to run\r\n```java\r\ngraphHopperWeb.getDownloader().connectionPool().evictAll();\r\n```\r\nThe following does not help:\r\n\r\n```java\r\ngraphHopperWeb.getDownloader().dispatcher().executorService().shutdown();\r\n```\r\n\r\nAlso a shutdown hook does not help!?\r\n\r\n```java\r\nRuntime.getRuntime().addShutdownHook(new Thread(() -> graphHopperWeb.getDownloader().connectionPool().evictAll()));\r\n```\r\n\r\nUpdate: the shutdown hook is called if I do System.exit but then I do not need the workaround anymore.\r\n\r\nFound a couple of issues with HTTP/2 like https://github.com/square/okhttp/issues/2575", "url": "https://github.com/graphhopper/graphhopper/issues/1466", "user": "karussell", "labels": ["bug"], "created": "2018-09-25 13:36:42", "closed": "2018-09-25 14:34:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "weighting unused for /isochrone", "body": "See https://github.com/graphhopper/graphhopper/pull/1303#issuecomment-400806846", "url": "https://github.com/graphhopper/graphhopper/issues/1416", "user": "karussell", "labels": ["bug"], "created": "2018-06-28 06:34:51", "closed": "2018-06-28 11:20:40", "commits": {"9260d4229108140e21196889595befd5544545ad": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9260d4229108140e21196889595befd5544545ad", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["ffaee332a3932aae98b95b284144182ab7d45749"], "nameRev": "9260d4229108140e21196889595befd5544545ad tags/0.11.0-pre4~4", "commitMessage": "corrected usage for weighting parameter, fixes #1416\n", "commitDateTime": "2018-06-28 13:20:30", "authoredDateTime": "2018-06-28 13:20:30", "commitGitStats": [{"filePath": "web-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "web/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/src/test/java/com/graphhopper/http/isochrone/IsochroneResourceIT.java", "insertions": 21, "deletions": 3, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IsochroneResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.IsochroneResource.doGet(javax.servlet.http.HttpServletRequest,javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,int,boolean,com.graphhopper.util.shapes.GHPoint,java.lang.String,long,double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "IsochroneResourceIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.isochrone.IsochroneResourceIT.requestWithShortest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.isochrone.IsochroneResourceIT.requestByTimeLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.isochrone.IsochroneResourceIT.requestByDistanceLimit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.isochrone.IsochroneResourceIT.requestReverseFlow()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9260d4229108140e21196889595befd5544545ad"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 1, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["web-bundle/src/main/java/com/graphhopper/resources"], "changesInPackagesSPOON": ["com.graphhopper.http.isochrone.IsochroneResourceIT.requestWithShortest()", "com.graphhopper.resources.IsochroneResource.doGet(javax.servlet.http.HttpServletRequest,javax.ws.rs.core.UriInfo,java.lang.String,java.lang.String,int,boolean,com.graphhopper.util.shapes.GHPoint,java.lang.String,long,double)", "com.graphhopper.http.isochrone.IsochroneResourceIT.requestByDistanceLimit()", "com.graphhopper.http.isochrone.IsochroneResourceIT.requestReverseFlow()", "com.graphhopper.http.isochrone.IsochroneResourceIT.requestByTimeLimit()"]}, {"title": "Problem in master if start = destination and points_encoded=false", "body": "```\r\ncurl \"localhost:8989/route?points_encoded=false&point=37.332112%2C-122.0308637&point=37.332112%2C-122.0308637\"\r\n{\"message\":\"Invalid number of points in LineString (found 1 - must be 0 or >= 2)...\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1412", "user": "karussell", "labels": ["bug"], "created": "2018-06-22 16:34:50", "closed": "2018-06-28 11:59:10", "commits": {"259bb3ba6e36908544a6220df1dfc04b79e28975": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "259bb3ba6e36908544a6220df1dfc04b79e28975", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["9260d4229108140e21196889595befd5544545ad"], "nameRev": "259bb3ba6e36908544a6220df1dfc04b79e28975 tags/0.11.0-pre4~3", "commitMessage": "fixes #1412, force 2 points for LineString\n", "commitDateTime": "2018-06-28 13:56:31", "authoredDateTime": "2018-06-28 13:56:31", "commitGitStats": [{"filePath": "api/src/main/java/com/graphhopper/util/PointList.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "api/src/test/java/com/graphhopper/util/PointListTest.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PointList.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PointList.toLineString(boolean)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PointListTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PointListTest.testToGeoJson()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["259bb3ba6e36908544a6220df1dfc04b79e28975"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["api/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.util.PointList.toLineString(boolean)"]}, {"title": "Isochrone bad request due to bucketing approach", "body": "Currently the isochrone component has this bucketing approach which makes problems e.g. for this:\r\n\r\n/isochrone?point=48.58792,2.44357&time_limit=900&buckets=3&vehicle=foot\r\n\r\nor here\r\n\r\n/isochrone?point=45.74087770,4.81895470&time_limit=120&vehicle=foot\r\n\r\nWhere the bucket 0 has too few entries to calculate the polygon. \r\n\r\n> message: Too few points found for bucket 0. Please try a different 'point', a smaller 'buckets' count or a larger 'time_limit'. And let us know if you think this is a bug!\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1411", "user": "karussell", "labels": ["bug"], "created": "2018-06-22 16:07:01", "closed": "2019-10-12 20:33:22", "commits": {"927a95e06fe369335b1244e096780aae089ce5fc": {"commitGHEventType": "closed", "commitUser": "michaz"}}, "ttf": 477.0002777777778, "commitsDetails": [{"commitHash": "927a95e06fe369335b1244e096780aae089ce5fc", "commitGHEventType": "closed", "commitUser": "michaz", "commitParents": ["adf6f7c7abe7e796c6d4ad36438ce2754f72dd1c"], "nameRev": "927a95e06fe369335b1244e096780aae089ce5fc tags/1.0-pre3~15", "commitMessage": "Fixes #1411; still occurs, but only in the extreme case. documented.\n", "commitDateTime": "2019-10-12 13:33:13", "authoredDateTime": "2019-10-12 13:33:13", "commitGitStats": [{"filePath": "web-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java", "insertions": 19, "deletions": 9, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "IsochroneResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.IsochroneResource.doGet(javax.ws.rs.core.UriInfo,java.lang.String,int,boolean,com.graphhopper.util.shapes.GHPoint,long,double,java.lang.String)", "TOT": 13, "UPD": 4, "INS": 3, "MOV": 4, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["927a95e06fe369335b1244e096780aae089ce5fc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 9, "lines": 28, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 13, "UPD": 4, "INS": 3, "MOV": 4, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["web-bundle/src/main/java/com/graphhopper/resources"], "changesInPackagesSPOON": ["com.graphhopper.resources.IsochroneResource.doGet(javax.ws.rs.core.UriInfo,java.lang.String,int,boolean,com.graphhopper.util.shapes.GHPoint,long,double,java.lang.String)"]}, {"title": "Isochrone bug if invalid coordinate", "body": "If you use e.g. point=-1.81671943805717%2C51.557147756587 you get the following exception:\r\n```\r\njava.lang.IllegalStateException: Do not call QueryGraph.lookup with invalid QueryResult -1, -1.81671943805717,51.557147756587, -1\r\n        at com.graphhopper.routing.QueryGraph.lookup(QueryGraph.java:230)\r\n        at com.graphhopper.resources.IsochroneResource.doGet(IsochroneResource.java:81)\r\n```\r\n\r\nIt should be an IllegalArgumentException", "url": "https://github.com/graphhopper/graphhopper/issues/1410", "user": "karussell", "labels": ["bug"], "created": "2018-06-22 13:38:42", "closed": "2018-06-22 14:37:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "NPE for /i18n", "body": "if you do curl localhost:8989/i18n you get\r\n\r\n{\"code\":500,\"message\":\"There was an error processing your request. It has been logged \r\n\r\ndue to\r\n\r\n```\r\njava.lang.NullPointerException: null\r\n\tat com.graphhopper.resources.I18NResource.getFromHeader(I18NResource.java:52)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1409", "user": "karussell", "labels": ["bug"], "created": "2018-06-22 10:59:39", "closed": "2018-06-22 13:35:01", "commits": {"8a019b684a14f64eccfdbf4c3288c089959e1a30": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "5c980b4627578626268873f9424de35188187441": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "53f42a134007c2e5189f1bc52fa96d02ed8046ea": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8a019b684a14f64eccfdbf4c3288c089959e1a30", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5c980b4627578626268873f9424de35188187441", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["923c53e4a8cf53f7e7a3920825c89501b0bcccee"], "nameRev": "5c980b4627578626268873f9424de35188187441 tags/0.11.0-pre4~11", "commitMessage": "fixed i18n bug #1409\n", "commitDateTime": "2018-06-22 15:35:22", "authoredDateTime": "2018-06-22 15:34:41", "commitGitStats": [{"filePath": "web-bundle/src/main/java/com/graphhopper/resources/I18NResource.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "web/src/test/java/com/graphhopper/http/resources/I18nResourceIT.java", "insertions": 52, "deletions": 0, "lines": 52}], "commitSpoonAstDiffStats": [{"spoonFilePath": "I18NResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.I18NResource.getFromHeader(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "I18nResourceIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.resources.I18nResourceIT", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "53f42a134007c2e5189f1bc52fa96d02ed8046ea", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["e46526569013b7153b83c0c6961366917916c67a"], "nameRev": "53f42a134007c2e5189f1bc52fa96d02ed8046ea tags/0.11.0-pre4", "commitMessage": "a new IllegalArgumentException mapper (#1407)\n\n* a new IllegalArgumentException mapper, EncodingManager no longer necessary in RouteResource\r\n\r\n* avoid toLowerCase, wasn't there before\r\n\r\n* findbugs needs one bug exclusion\r\n\r\n* corrected error response for wrong point format\r\n\r\n* include supported list again\r\n\r\n* fixed i18n bug #1409\r\n\r\n* avoid passing through\r\n\r\n* include suggestion from @michaz and catch NumberFormatException\r\n", "commitDateTime": "2018-07-02 16:05:17", "authoredDateTime": "2018-07-02 16:05:17", "commitGitStats": [{"filePath": "api/src/main/java/com/graphhopper/util/shapes/GHPoint.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "core/files/findbugs-exclude.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GHPointConverterProvider.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GraphHopperBundle.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/IllegalArgumentExceptionMapper.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/MultiExceptionMapper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java", "insertions": 11, "deletions": 42, "lines": 53}, {"filePath": "web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java", "insertions": 20, "deletions": 24, "lines": 44}, {"filePath": "web/src/test/java/com/graphhopper/http/isochrone/IsochroneResourceIT.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "web/src/test/java/com/graphhopper/http/resources/RouteResourceIT.java", "insertions": 20, "deletions": 7, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GHPoint.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.shapes.GHPoint.fromString(java.lang.String,boolean)", "TOT": 13, "UPD": 1, "INS": 4, "MOV": 6, "DEL": 2}]}, {"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.calcPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "GHPointConverterProvider.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GHPointConverterProvider", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperBundle.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperBundle.run(com.graphhopper.http.GraphHopperBundleConfiguration,io.dropwizard.setup.Environment)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IllegalArgumentExceptionMapper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.IllegalArgumentExceptionMapper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MultiExceptionMapper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.MultiExceptionMapper.toResponse(com.graphhopper.MultiException)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "IsochroneResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.IsochroneResource.doGet(javax.servlet.http.HttpServletRequest,javax.ws.rs.core.UriInfo,java.lang.String,int,boolean,com.graphhopper.util.shapes.GHPoint,java.lang.String,long,double)", "TOT": 28, "UPD": 0, "INS": 10, "MOV": 7, "DEL": 11}, {"spoonMethodName": "com.graphhopper.resources.IsochroneResource.throwArgExc(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.resources.IsochroneResource.jsonErrorResponse(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.resources.IsochroneResource.getMessage(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RouteResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.RouteResource", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.graphhopper.resources.RouteResource.doGet(javax.servlet.http.HttpServletRequest,com.graphhopper.resources.UriInfo,javax.ws.rs.container.ContainerRequestContext,double,java.util.List,java.lang.String,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,boolean,boolean,java.lang.String,java.lang.String)", "TOT": 15, "UPD": 0, "INS": 1, "MOV": 8, "DEL": 6}, {"spoonMethodName": "com.graphhopper.resources.RouteResource.gpxSuccessResponseBuilder(com.graphhopper.GHResponse,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "IsochroneResourceIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.isochrone.IsochroneResourceIT.requestWithShortest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.isochrone.IsochroneResourceIT.requestBadRequest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteResourceIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.resources.RouteResourceIT.testBasicQuery()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceIT.testGPX()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceIT.testGPXWithError()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceIT.testWrongPointFormat()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.resources.RouteResourceIT.testGraphHopperWebRealExceptions()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5c980b4627578626268873f9424de35188187441"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5.0, "deletions": 2.0, "lines": 7.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["web-bundle/src/main/java/com/graphhopper/resources"], "changesInPackagesSPOON": ["com.graphhopper.resources.I18NResource.getFromHeader(java.lang.String)", "com.graphhopper.http.resources.I18nResourceIT"]}, {"title": "point_hint not appended in client-hc", "body": "Related to #1404", "url": "https://github.com/graphhopper/graphhopper/issues/1405", "user": "karussell", "labels": ["bug"], "created": "2018-06-20 06:25:44", "closed": "2018-06-20 06:31:39", "commits": {"853a1cb898a1ec957049f38aeea8e7e16ba424e8": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "853a1cb898a1ec957049f38aeea8e7e16ba424e8", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["b8d80199f969429962dd487932e74a415890244b"], "nameRev": "853a1cb898a1ec957049f38aeea8e7e16ba424e8 tags/0.11.0-pre3", "commitMessage": "append point hints for client-hc, #1405\n", "commitDateTime": "2018-06-20 08:30:18", "authoredDateTime": "2018-06-20 08:30:18", "commitGitStats": [{"filePath": "client-hc/src/main/java/com/graphhopper/api/GraphHopperWeb.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java", "insertions": 11, "deletions": 1, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperWeb.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.api.GraphHopperWeb.createRequest(com.graphhopper.GHRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperWebIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.api.GraphHopperWebIT.testPointHints()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["853a1cb898a1ec957049f38aeea8e7e16ba424e8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 1, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["client-hc/src/main/java/com/graphhopper/api"], "changesInPackagesSPOON": ["com.graphhopper.api.GraphHopperWebIT.testPointHints()", "com.graphhopper.api.GraphHopperWeb.createRequest(com.graphhopper.GHRequest)"]}, {"title": "point hint problem", "body": "The snapping due to the point hint with [this original request](https://graphhopper.com/maps/?point=52.50977,13.371971&point=52.509842,13.369761&point_hint=Ben%20Gurion&point_hint=)  does not work, but without white spaces [it works](https://graphhopper.com/maps/?point=52.50977,13.371971&point=52.509842,13.369761&point_hint=BenGurion&point_hint=)\r\n\r\nIf there is a space the too short name \"ben\" will be removed. If it is a dash, the dash will be removed resulting in the necessary \"bengurion\".", "url": "https://github.com/graphhopper/graphhopper/issues/1404", "user": "karussell", "labels": ["bug"], "created": "2018-06-19 20:25:15", "closed": "2018-06-20 12:05:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "error \"The turn cost storage must be initialized only once.\"", "body": "Version: 0.11.0-pre1\r\n\r\nIn my config: `graph.flag_encoders: car|turn_costs=true,bike2,racingbike,mtb,hike`\r\n\r\n```\r\n+ ./graphhopper.sh -a import -i /Volumes/Pegasus/maps/australia-latest.osm.pbf -c /Users/develar/Documents/gh-routing-data/config.yml\r\n## using java 1.8.0_172 (64bit) from \r\n## using existing osm file /Volumes/Pegasus/maps/australia-latest.osm.pbf\r\n## existing jar found web/target/graphhopper-web-0.11-SNAPSHOT.jar\r\n## now import. JAVA_OPTS=-Xmx15g -Xms10g -XX:+UseG1GC\r\nINFO  [2018-06-16 06:13:58,777] com.graphhopper.reader.osm.GraphHopperOSM: version 0.11|2018-06-07T15:12:38Z (5,14,4,3,3,2)\r\nINFO  [2018-06-16 06:13:58,782] com.graphhopper.reader.osm.GraphHopperOSM: graph CH|car,bike2,racingbike,mtb,hike|RAM_STORE|3D|turn_cost|,,,,, details:edges:0(0MB), nodes:0(0MB), name:(0MB), geo:0(0MB), bounds:1.7976931348623157E308,-1.7976931348623157E308,1.7976931348623157E308,-1.7976931348623157E308,1.7976931348623157E308,-1.7976931348623157E308, CHGraph|fastest|car, shortcuts:0, nodesCH:(0MB), CHGraph|fastest|bike2, shortcuts:0, nodesCH:(0MB), CHGraph|fastest|racingbike, shortcuts:0, nodesCH:(0MB), CHGraph|fastest|mtb, shortcuts:0, nodesCH:(0MB), CHGraph|fastest|hike, shortcuts:0, nodesCH:(0MB)\r\nINFO  [2018-06-16 06:13:58,825] com.graphhopper.reader.osm.GraphHopperOSM: start creating graph from /Volumes/Pegasus/maps/australia-latest.osm.pbf\r\nINFO  [2018-06-16 06:13:58,826] com.graphhopper.reader.osm.GraphHopperOSM: using CH|car,bike2,racingbike,mtb,hike|RAM_STORE|3D|turn_cost|,,,,, memory:totalMB:10240, usedMB:19\r\nINFO  [2018-06-16 06:14:13,529] com.graphhopper.reader.osm.OSMReader: creating graph. Found nodes (pillar+tower):14\u00a0388\u00a0392, totalMB:10240, usedMB:294\r\nINFO  [2018-06-16 06:14:13,541] com.graphhopper.reader.dem.CGIARProvider: cgiar Elevation Provider, from: http://srtm.csi.cgiar.org/SRT-ZIP/SRTM_V41/SRTM_Data_GeoTiff, to: /Users/develar/graphhopper-master/cgiar, as: MMAP_STORE using calcmean: false\r\nINFO  [2018-06-16 06:17:37,511] com.graphhopper.reader.osm.OSMReader: 42\u00a0917\u00a0671, now parsing ways\r\nINFO  [2018-06-16 06:18:03,549] com.graphhopper.reader.osm.OSMReader: 46\u00a0281\u00a0931, now parsing relations\r\nINFO  [2018-06-16 06:18:03,667] com.graphhopper.reader.osm.OSMReader: finished way processing. nodes: 2314621, osmIdMap.size:14409849, osmIdMap:180MB, nodeFlagsMap.size:26378, relFlagsMap.size:36001, zeroCounter:21023 totalMB:10240, usedMB:3541\r\nINFO  [2018-06-16 06:18:06,226] com.graphhopper.reader.osm.OSMReader: time pass1:14s, pass2:232s, total:247s\r\nINFO  [2018-06-16 06:18:06,228] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: start finding subnetworks (min:200, min one way:200) totalMB:10240, usedMB:494\r\nINFO  [2018-06-16 06:18:07,238] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: car findComponents time:1.0101064, size:20883\r\nINFO  [2018-06-16 06:18:07,923] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: 381449 subnetworks found for car, totalMB:10240, usedMB:1095\r\nINFO  [2018-06-16 06:18:08,982] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: bike2 findComponents time:1.0588369, size:31280\r\nINFO  [2018-06-16 06:18:09,682] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: 120789 subnetworks found for bike2, totalMB:10240, usedMB:1573\r\nINFO  [2018-06-16 06:18:10,720] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: racingbike findComponents time:1.0376482, size:31403\r\nINFO  [2018-06-16 06:18:11,289] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: 123286 subnetworks found for racingbike, totalMB:10240, usedMB:2050\r\nINFO  [2018-06-16 06:18:12,281] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: mtb findComponents time:0.99158376, size:31207\r\nINFO  [2018-06-16 06:18:12,864] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: 119960 subnetworks found for mtb, totalMB:10240, usedMB:2526\r\nINFO  [2018-06-16 06:18:13,801] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: hike findComponents time:0.9365595, size:20454\r\nINFO  [2018-06-16 06:18:14,393] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: 80641 subnetworks found for hike, totalMB:10240, usedMB:2980\r\nINFO  [2018-06-16 06:18:14,612] com.graphhopper.routing.subnetwork.PrepareRoutingSubnetworks: optimize to remove subnetworks (381449), unvisited-dead-end-nodes (364429), maxEdges/node (9)\r\nINFO  [2018-06-16 06:18:14,955] com.graphhopper.reader.osm.GraphHopperOSM: edges: 3\u00a0049\u00a0022, nodes 2\u00a0253\u00a0040, there were 381\u00a0449 subnetworks. removed them => 61\u00a0581 less nodes\r\njava.lang.AssertionError: The turn cost storage must be initialized only once.\r\n\tat com.graphhopper.storage.TurnCostExtension.init(TurnCostExtension.java:60)\r\n\tat com.graphhopper.storage.BaseGraph.<init>(BaseGraph.java:143)\r\n\tat com.graphhopper.storage.GraphHopperStorage.<init>(GraphHopperStorage.java:83)\r\n\tat com.graphhopper.util.GHUtility.newStorage(GHUtility.java:306)\r\n\tat com.graphhopper.GraphHopper.postProcessing(GraphHopper.java:854)\r\n\tat com.graphhopper.GraphHopper.process(GraphHopper.java:671)\r\n\tat com.graphhopper.GraphHopper.importOrLoad(GraphHopper.java:640)\r\n\tat com.graphhopper.http.GraphHopperManaged.start(GraphHopperManaged.java:71)\r\n\tat com.graphhopper.http.cli.ImportCommand.run(ImportCommand.java:40)\r\n\tat com.graphhopper.http.cli.ImportCommand.run(ImportCommand.java:28)\r\n\tat io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:87)\r\n\tat io.dropwizard.cli.Cli.run(Cli.java:78)\r\n\tat io.dropwizard.Application.run(Application.java:93)\r\n\tat com.graphhopper.http.GraphHopperApplication.main(GraphHopperApplication.java:46)\r\n```\r\n\r\nHow do I can enable turn costs for car?", "url": "https://github.com/graphhopper/graphhopper/issues/1398", "user": "develar", "labels": ["bug"], "created": "2018-06-16 06:29:57", "closed": "2020-01-27 09:24:17", "commits": {}, "ttf": 590.0002777777778, "commitsDetails": []}, {"title": "When starting web service many warnings occur with JDK 10", "body": "See log https://travis-ci.org/graphhopper/graphhopper/jobs/386197200\r\n\r\n```\r\nWARN  [2018-05-31 14:16:05,672] org.glassfish.jersey.internal.Errors: The following warnings have been detected: WARNING: HK2 service reification failed for [org.glassfish.jersey.message.internal.DataSourceProvider] with an exception:\r\nMultiException stack 1 of 2\r\njava.lang.NoClassDefFoundError: javax/activation/DataSource\r\n\tat java.base/java.lang.Class.getDeclaredConstructors0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3090)\r\n\tat java.base/java.lang.Class.getDeclaredConstructors(Class.java:2316)\r\n\tat org.jvnet.hk2.internal.Utilities$3.run(Utilities.java:1308)\r\n\tat org.jvnet.hk2.internal.Utilities$3.run(Utilities.java:1304)\r\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\r\n...\r\n\tat org.eclipse.jetty.server.handler.AbstractHandler.doStart(AbstractHandler.java:113)\r\n\tat org.eclipse.jetty.server.Server.doStart(Server.java:386)\r\n\tat org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:68)\r\n\tat io.dropwizard.cli.ServerCommand.run(ServerCommand.java:53)\r\n\tat io.dropwizard.cli.EnvironmentCommand.run(EnvironmentCommand.java:44)\r\n\tat io.dropwizard.cli.ConfiguredCommand.run(ConfiguredCommand.java:87)\r\n\tat io.dropwizard.testing.DropwizardTestSupport.startIfRequired(DropwizardTestSupport.java:237)\r\n\tat io.dropwizard.testing.DropwizardTestSupport.before(DropwizardTestSupport.java:151)\r\n\tat io.dropwizard.testing.junit.DropwizardAppRule.before(DropwizardAppRule.java:159)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:46)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\r\nCaused by: java.lang.ClassNotFoundException: javax.activation.DataSource\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:582)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:190)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:499)\r\n\t... 111 more\r\n```\r\n\r\nThey did not occur before the API split PR #1378: https://travis-ci.org/graphhopper/graphhopper/jobs/382524178", "url": "https://github.com/graphhopper/graphhopper/issues/1388", "user": "karussell", "labels": ["architecture", "bug"], "created": "2018-06-01 11:43:26", "closed": "2018-06-20 08:30:48", "commits": {"c62e39b16492176d7c020fc102faa26b83f67dbf": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "e954f0085f4ce489dc6dc91e0cf24ce05b3e6cba": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "c62e39b16492176d7c020fc102faa26b83f67dbf", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e954f0085f4ce489dc6dc91e0cf24ce05b3e6cba", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["8ca3ccd84e7404c149c027672ed0987588df7b80"], "nameRev": "e954f0085f4ce489dc6dc91e0cf24ce05b3e6cba tags/0.11.0-pre4~20", "commitMessage": "Exception Mapping (#1390)\n\n* Exception Mapping\r\n\r\n* Don't even need to create the Writer myself, even better.\r\n\r\n* Put \"activation\" back in. fixes #1388\r\n\r\n* Rename filter so it resembles the actual query param\r\n\r\n* ...and the code comment\r\n\r\n* License headers\r\n", "commitDateTime": "2018-06-20 10:30:43", "authoredDateTime": "2018-06-20 10:30:43", "commitGitStats": [{"filePath": "web-api/src/main/java/com/graphhopper/MultiException.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/GraphHopperModule.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/MultiExceptionSerializer.java", "insertions": 59, "deletions": 0, "lines": 59}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GraphHopperBundle.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/MultiExceptionGPXMessageBodyWriter.java", "insertions": 99, "deletions": 0, "lines": 99}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/MultiExceptionMapper.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/TypeGPXFilter.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "web-bundle/src/main/java/com/graphhopper/resources/RouteResource.java", "insertions": 13, "deletions": 91, "lines": 104}, {"filePath": "web/pom.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperApplication.java", "insertions": 0, "deletions": 14, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MultiException.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.MultiException", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperModule.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.jackson.GraphHopperModule", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MultiExceptionSerializer.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.jackson.MultiExceptionSerializer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperBundle.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperBundle.run(com.graphhopper.http.GraphHopperBundleConfiguration,io.dropwizard.setup.Environment)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MultiExceptionGPXMessageBodyWriter.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.MultiExceptionGPXMessageBodyWriter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MultiExceptionMapper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.MultiExceptionMapper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeGPXFilter.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.TypeGPXFilter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RouteResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.RouteResource.doGet(javax.servlet.http.HttpServletRequest,com.graphhopper.resources.UriInfo,double,java.util.List,java.lang.String,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,boolean,boolean,java.lang.String,java.lang.String)", "TOT": 12, "UPD": 5, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.graphhopper.resources.RouteResource.gpxSuccessResponseBuilder(com.graphhopper.GHResponse,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.resources.RouteResource.xmlErrorResponse(java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.resources.RouteResource.errorResponse(java.util.List,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.resources.RouteResource.errorResponse(java.lang.Throwable,boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.resources.RouteResource.jsonErrorResponse(java.util.List)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.resources.RouteResource.initHints(com.graphhopper.routing.util.HintsMap,com.graphhopper.resources.MultivaluedMap)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.resources.RouteResource.getMessage(java.lang.Throwable)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.resources.RouteResource.doGet(javax.servlet.http.HttpServletRequest,com.graphhopper.resources.UriInfo,javax.ws.rs.container.ContainerRequestContext,double,java.util.List,java.lang.String,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,boolean,boolean,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperApplication.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "android build broken", "body": "There is a problem because of #1378. After https://github.com/graphhopper/graphhopper/commit/04514f24ba479538dc6a0de8c072fd108eb1a557 the Android apk fails to build.\r\n\r\nThere are two new dependencies jaxws-api and javax.ws.rs-api in `android` now and IMO this results in problems. With:\r\n\r\n```\r\ncd android/app\r\nmvn package android:deploy\r\n```\r\n\r\nyou will get:\r\n\r\n```\r\n...\r\n[INFO] --- android-maven-plugin:4.5.0:dex (default-dex) @ graphhopper-android ---\r\n[INFO] Convert classes to Dex : /home/peter/Documents/quell/graphhopper/android/app/target/classes.dex\r\n[INFO] \r\n[INFO] PARSE ERROR:\r\n[INFO] unsupported class file version 53.0\r\n[INFO] ...while parsing META-INF/versions/9/javax/xml/bind/ModuleUtil.class\r\n[INFO] trouble processing \"javax/xml/soap/AttachmentPart.class\":\r\n....\r\n```\r\n\r\nIt seems that these dependencies are compiled with JDK 9 [which is not possible when using Android](https://stackoverflow.com/a/47627603/194609) at the moment. Android does [not even support all 8 features](https://developer.android.com/studio/write/java8-support).\r\n\r\nbtw: I wonder what [this openjdk Android port](http://openjdk.java.net/projects/mobile/android.html) is about.", "url": "https://github.com/graphhopper/graphhopper/issues/1385", "user": "karussell", "labels": ["android", "architecture", "bug"], "created": "2018-05-30 08:58:32", "closed": "2018-05-30 15:43:43", "commits": {"fa46df163e875c5e632af14e8e8e5dada0adc432": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "edb276a14e5f50c224ea002ec19e7fe84edffecd": {"commitGHEventType": "referenced", "commitUser": "michaz"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fa46df163e875c5e632af14e8e8e5dada0adc432", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": ["ba6a8cafd714e0d012d0807dede62e5f7406b4b1"], "nameRev": "fa46df163e875c5e632af14e8e8e5dada0adc432 tags/0.11.0-pre1~8", "commitMessage": "api is now 'pure', i.e. without dependencies except jts-core, which is also a pure datatype, #1385\n", "commitDateTime": "2018-05-30 16:17:55", "authoredDateTime": "2018-05-30 16:17:55", "commitGitStats": [{"filePath": "api/pom.xml", "insertions": 0, "deletions": 26, "lines": 26}, {"filePath": "{core => api}/src/main/java/com/graphhopper/json/geo/JsonFeature.java", "insertions": 30, "deletions": 10, "lines": 40}, {"filePath": "{core => api}/src/main/java/com/graphhopper/json/geo/JsonFeatureCollection.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "api/src/main/java/com/graphhopper/util/InstructionList.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "api/src/main/java/com/graphhopper/util/details/PathDetail.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "api/src/main/java/com/graphhopper/util/shapes/BBox.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "api/src/main/java/com/graphhopper/util/shapes/GHPoint.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "client-hc/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "client-hc/src/main/java/com/graphhopper/api/GHMatrixBatchRequester.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "client-hc/src/main/java/com/graphhopper/api/GraphHopperWeb.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "core/pom.xml", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/storage/change/ChangeGraphResponse.java", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "core/src/main/java/com/graphhopper/util/CmdArgs.java", "insertions": 1, "deletions": 9, "lines": 10}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupBuilderTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/test/java/com/graphhopper/storage/change/ChangeGraphHelperTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/util/InstructionListTest.java", "insertions": 0, "deletions": 58, "lines": 58}, {"filePath": "pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "{api => web-api}/src/main/java/com/graphhopper/http/WebHelper.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/BBoxDeserializer.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/BBoxSerializer.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/GHPointDeserializer.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/GHPointSerializer.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/GraphHopperModule.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "web-api/src/main/java/com/graphhopper/jackson/InstructionListSerializer.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "api/src/main/java/com/graphhopper/util/ObjectMapperFactory.java => web-api/src/main/java/com/graphhopper/jackson/Jackson.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "{api/src/main/java/com/graphhopper/util/details => web-api/src/main/java/com/graphhopper/jackson}/PathDetailDeserializer.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "{api/src/main/java/com/graphhopper/util/details => web-api/src/main/java/com/graphhopper/jackson}/PathDetailSerializer.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "{api => web-api}/src/test/java/com/graphhopper/http/WebHelperTest.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "{core => web-api}/src/test/java/com/graphhopper/json/geo/JsonFeatureCollectionTest.java", "insertions": 13, "deletions": 15, "lines": 28}, {"filePath": "web-api/src/test/java/com/graphhopper/util/InstructionListRepresentationTest.java", "insertions": 85, "deletions": 0, "lines": 85}, {"filePath": "{core/src/test/resources/com/graphhopper/json/geo => web-api/src/test/resources/fixtures}/geojson1.json", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web-bundle/pom.xml", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GraphHopperBundle.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GraphHopperManaged.java", "insertions": 4, "deletions": 8, "lines": 12}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperApplication.java", "insertions": 14, "deletions": 11, "lines": 25}, {"filePath": "web/src/main/java/com/graphhopper/http/cli/ImportCommand.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "edb276a14e5f50c224ea002ec19e7fe84edffecd", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": ["fa46df163e875c5e632af14e8e8e5dada0adc432"], "nameRev": "edb276a14e5f50c224ea002ec19e7fe84edffecd tags/0.11.0-pre1~7", "commitMessage": "api is now 'pure', i.e. without dependencies except jts-core, which is also a pure datatype, #1385\n", "commitDateTime": "2018-05-30 16:26:17", "authoredDateTime": "2018-05-30 16:26:17", "commitGitStats": [{"filePath": "web-api/pom.xml", "insertions": 84, "deletions": 0, "lines": 84}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fa46df163e875c5e632af14e8e8e5dada0adc432"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 186, "deletions": 74, "lines": 260, "gitFilesChange": 24}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["web-api/src/main/java/com/graphhopper/jackson", "api/src/main/java/com/graphhopper/util", "client-hc/src/main/java/com/graphhopper/api", "{api => web-api}/src/main/java/com/graphhopper/http", "web/src/main/java/com/graphhopper/http/cli", "core/src/main/java/com/graphhopper/storage/change", "web-bundle/src/main/java/com/graphhopper/http", "api/src/main/java/com/graphhopper/util/shapes", "{api/src/main/java/com/graphhopper/util/details => web-api/src/main", "web/src/main/java/com/graphhopper/http", "{core => api}/src/main/java/com/graphhopper/json/geo", "api/src/main/java/com/graphhopper/util/details", "core/src/main/java/com/graphhopper/util", "api/src/main/java/com/graphhopper/util/ObjectMapperFactory.java => web-api/src/main"]}, {"title": "Cannot add point in UI via + button", "body": "Furthermore the points cannot be swapped via mouse or dragged in the input list. (Adding is only possible via right clicking on the map)\r\n\r\nCause was: 'r.locale is undefined'", "url": "https://github.com/graphhopper/graphhopper/issues/1383", "user": "karussell", "labels": ["bug", "web"], "created": "2018-05-29 09:17:29", "closed": "2018-06-11 05:58:37", "commits": {"1265b11d6eb4758be9f3c98331dcdf045764e4fb": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "1265b11d6eb4758be9f3c98331dcdf045764e4fb", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["01d2bc10d80a33e1cb2d2ea9635e36232e86ce3f"], "nameRev": "1265b11d6eb4758be9f3c98331dcdf045764e4fb tags/0.11.0-pre2~5", "commitMessage": "UI: fixed #1383\n", "commitDateTime": "2018-06-11 07:57:59", "authoredDateTime": "2018-06-11 07:57:59", "commitGitStats": [{"filePath": "web/src/main/resources/assets/index.html", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/src/main/resources/assets/js/main-template.js", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/src/main/resources/assets/js/main.js", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1265b11d6eb4758be9f3c98331dcdf045764e4fb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Import Issue", "body": "I recently ran into an issue with the import command in graphhopper.  I have a version I've been poking around in to work with local elevation data, and ran into this issue first there.  I reproduced it on a fresh clone pulled down ~4:30 EST, 5/15/2018, command history and output reproduced below: \r\n\r\n```\r\n[## test]$ rm -Rf graphhopper/\r\n[## test]$ git clone https://github.com/graphhopper/graphhopper.git\r\nCloning into 'graphhopper'...\r\nremote: Counting objects: 74059, done.\r\nremote: Compressing objects: 100% (149/149), done.\r\nremote: Total 74059 (delta 53), reused 177 (delta 35), pack-reused 73790\r\nReceiving objects: 100% (74059/74059), 72.91 MiB | 21.59 MiB/s, done.\r\nResolving deltas: 100% (39336/39336), done.\r\n[## test]$ cd graphhopper/\r\n[## graphhopper]$ ./graphhopper.sh import europe_germany_berlin.pbf\r\n## using java 1.8.0_161 (64bit) from\r\nFile not found 'europe_germany_berlin.pbf'. Press ENTER to get it from: https://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf\r\nPress CTRL+C if you do not have enough disc space or you don't want to download several MB.\r\n\r\n## now downloading OSM file from https://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf and extracting to europe_germany_berlin.pbf\r\n  HTTP/1.1 200 OK\r\n  Date: Tue, 15 May 2018 20:52:25 GMT\r\n  Server: Apache/2.4.18 (Ubuntu)\r\n  Last-Modified: Mon, 14 May 2018 23:07:35 GMT\r\n  ETag: \"3164627-56c328d19dbc0\"\r\n  Accept-Ranges: bytes\r\n  Content-Length: 51791399\r\n  Content-Type: application/octet-stream\r\n  Keep-Alive: timeout=5, max=100\r\n  Connection: Keep-Alive\r\n2018-05-15 20:52:27 URL:https://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf [51791399/51791399] -> \"europe_germany_berlin.pbf\" [1]\r\n## building graphhopper jar: web/target/graphhopper-web-0.11-SNAPSHOT.jar\r\n## using maven at /usr/local/maven\r\n## now import. JAVA_OPTS=-Xmx1000m -Xms1000m\r\nError: Could not find or load main class\r\n./graphhopper.sh: line 259: -jar: command not found\r\n[## graphhopper]$\r\n```\r\n\r\nThe import command worked fine on older versions (from mid-April) and I'm wondering if this is an issue that was introduced with a recent update, or if I broke something local in my JAVA environment.\r\n\r\nWhen I echo $GH_IMPORT_OPTS, it returns an empty line, but I can't seem to find anywhere this is set.\r\n\r\nFor Reference:\r\n```\r\n[## bin]$ java -version\r\nopenjdk version \"1.8.0_161\"\r\nOpenJDK Runtime Environment (build 1.8.0_161-b14)\r\nOpenJDK 64-Bit Server VM (build 25.161-b14, mixed mode)\r\n\r\n[## bin]$ cat /etc/*release\r\nCentOS Linux release 7.4.1708 (Core)\r\nNAME=\"CentOS Linux\"\r\nVERSION=\"7 (Core)\"\r\nID=\"centos\"\r\nID_LIKE=\"rhel fedora\"\r\nVERSION_ID=\"7\"\r\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\r\nANSI_COLOR=\"0;31\"\r\nCPE_NAME=\"cpe:/o:centos:centos:7\"\r\nHOME_URL=\"https://www.centos.org/\"\r\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\r\n\r\nCENTOS_MANTISBT_PROJECT=\"CentOS-7\"\r\nCENTOS_MANTISBT_PROJECT_VERSION=\"7\"\r\nREDHAT_SUPPORT_PRODUCT=\"centos\"\r\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7\"\r\n\r\nCentOS Linux release 7.4.1708 (Core)\r\nCentOS Linux release 7.4.1708 (Core)\r\n```\r\n\r\nThank you,\r\n\r\nTim", "url": "https://github.com/graphhopper/graphhopper/issues/1371", "user": "tstreett", "labels": ["bug"], "created": "2018-05-15 21:07:51", "closed": "2018-05-16 07:25:07", "commits": {"59c00d8e0d3f84c94d14e042889b02bebd91cc6e": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "59c00d8e0d3f84c94d14e042889b02bebd91cc6e", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["e5d56cfb9dafcbd893711e8a72e48f68f839f338"], "nameRev": "59c00d8e0d3f84c94d14e042889b02bebd91cc6e tags/0.11.0-pre1~40", "commitMessage": "whitespace fixes to graphhopper.sh and avoid reading old properties file, fixes #1371\n", "commitDateTime": "2018-05-16 09:24:43", "authoredDateTime": "2018-05-16 09:24:21", "commitGitStats": [{"filePath": "core/files/changelog.txt", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/util/CmdArgs.java", "insertions": 1, "deletions": 77, "lines": 78}, {"filePath": "graphhopper.sh", "insertions": 12, "deletions": 6, "lines": 18}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperBundle.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "CmdArgs.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.CmdArgs.argsFromSystemProperties()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.CmdArgs.readFromConfig(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.CmdArgs.readFromConfigAndMerge(com.graphhopper.util.CmdArgs,java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.CmdArgs.readFromConfigAndMerge(com.graphhopper.util.CmdArgs)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.CmdArgs.argsFromPropertiesFile(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GraphHopperBundle.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperBundle.run(com.graphhopper.http.GraphHopperBundleConfiguration,io.dropwizard.setup.Environment)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["59c00d8e0d3f84c94d14e042889b02bebd91cc6e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 86, "lines": 102, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 11, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 6, "spoonFilesChanged": 3, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["graphhopper.sh", "web/src/main/java/com/graphhopper/http", "core/src/main/java/com/graphhopper/util", "core/src/main/java/com/graphhopper"], "changesInPackagesSPOON": ["com.graphhopper.util.CmdArgs.readFromConfigAndMerge(com.graphhopper.util.CmdArgs)", "com.graphhopper.util.CmdArgs.argsFromPropertiesFile(java.lang.String)", "com.graphhopper.util.CmdArgs.readFromConfig(java.lang.String,java.lang.String)", "com.graphhopper.http.GraphHopperBundle.run(com.graphhopper.http.GraphHopperBundleConfiguration,io.dropwizard.setup.Environment)", "com.graphhopper.util.CmdArgs.readFromConfigAndMerge(com.graphhopper.util.CmdArgs,java.lang.String,java.lang.String)", "com.graphhopper.util.CmdArgs.argsFromSystemProperties()", "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)"]}, {"title": "GraphHopperGtfs.findPaths throws 500er error", "body": "We get:\r\n\r\ncode=500\r\nmessage=There was an error processing your request. It has been logged (ID ...)\r\n\r\nAlthough the underlying error is just an IllegalArgumentException and should be reported as code=400:\r\n```\r\n! java.lang.IllegalArgumentException: No path found - maximum number of nodes exceeded: 1000000\r\n! at com.graphhopper.reader.gtfs.GraphHopperGtfs$RequestHandler.findPaths(GraphHopperGtfs.java:275)\r\n```\r\n\r\nThe error should be added like it is done for \"route not found\":\r\n\r\nresponse.addError(new RuntimeException(\"No route found\"));", "url": "https://github.com/graphhopper/graphhopper/issues/1364", "user": "karussell", "labels": ["bug", "good first issue"], "created": "2018-05-08 09:24:35", "closed": "2019-03-11 10:42:55", "commits": {"4b645729252c4834f67c2ad145254c9ab1d9e6fd": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 307.0002777777778, "commitsDetails": [{"commitHash": "4b645729252c4834f67c2ad145254c9ab1d9e6fd", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["ceb32a700c007e9500daf31ef23423b29cd20e0b"], "nameRev": "4b645729252c4834f67c2ad145254c9ab1d9e6fd tags/0.12.0~4^2~9", "commitMessage": "minor fix for wrong http error #1364\n", "commitDateTime": "2019-03-11 11:42:29", "authoredDateTime": "2019-03-11 11:25:15", "commitGitStats": [{"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperGtfs.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GraphHopperGtfs.RequestHandler.findPaths(int,int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4b645729252c4834f67c2ad145254c9ab1d9e6fd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["reader-gtfs/src/main/java/com/graphhopper/reader/gtfs"], "changesInPackagesSPOON": ["com.graphhopper.reader.gtfs.GraphHopperGtfs.RequestHandler.findPaths(int,int)"]}, {"title": "how to change graphhopper logging level for dropwizard", "body": "As discussed in #1330 it is important to know how to configure logging for com.graphhopper package. When I use:\r\n\r\n```yml\r\nlogging:\r\n  level: DEBUG\r\n  loggers:\r\n    com.graphhopper: DEBUG\r\n```\r\n\r\nin the config.yml and add the following to GraphHopperDebugApplication.initialize:\r\n\r\n```java\r\nLogger logger = LoggerFactory.getLogger(getClass());\r\nlogger.warn(\"test warn\");\r\nlogger.info(\"test info\");\r\nlogger.debug(\"test debug\");\r\n```\r\n\r\nand then grep starting the server against \"test\" via \r\n`./graphhopper.sh webdebug ~/Downloads/berlin-latest.osm.pbf | grep test`\r\n\r\nI'm just getting the same which I get for the unchanged config:\r\n\r\nWARN  [2018-04-13 08:26:37,700] com.graphhopper.http.GraphHopperDebugApplication: test warn\r\n\r\nI would have expected an output for info and debug too.", "url": "https://github.com/graphhopper/graphhopper/issues/1342", "user": "karussell", "labels": ["bug"], "created": "2018-04-14 17:41:32", "closed": "2018-04-20 10:04:37", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Disabling CH does not work after dropwizard changes.", "body": "Uncommenting the `prepare.ch.weightings: no` line in `config.yml` should disable CH preparation, but somewhere during the parsing of the file the 'no' gets turned into a 'false' string (in the configuration passed to the `GraphHopperManaged` constructor) causing an `IllegalArgumentException` `weighting false is not supported` in `GraphHopper#createWeighting`.", "url": "https://github.com/graphhopper/graphhopper/issues/1337", "user": "easbar", "labels": ["bug"], "created": "2018-04-12 20:28:35", "closed": "2018-04-14 17:38:07", "commits": {"4031738c41474084ce8eceb82153c754c614c00b": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "f151f2decd013bf6a50443be0d6252966c705ce3": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "4031738c41474084ce8eceb82153c754c614c00b", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f151f2decd013bf6a50443be0d6252966c705ce3", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["2c10f76a4dac00b82ad9ed68d1b57ad411d9a58f"], "nameRev": "f151f2decd013bf6a50443be0d6252966c705ce3 tags/0.11.0-pre1~85", "commitMessage": "allow \"false\" in addition to \"no\" fixes #1337 (#1340)\n\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>", "commitDateTime": "2018-04-14 19:38:00", "authoredDateTime": "2018-04-14 10:38:00", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/ch/CHAlgoFactoryDecorator.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CHAlgoFactoryDecorator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.CHAlgoFactoryDecorator.init(com.graphhopper.util.CmdArgs)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Review dropwizard merge more detailed", "body": "It looks like there were some errors due to automatic git merging #1314. \r\n\r\n - [x] this https://github.com/graphhopper/graphhopper/commit/96250b4b0f21cc5eb11d08e2c1d36ac981897085 \r\n - [x] missing icons like img/keep_right.png (weren't moved to assets folder)\r\n - [x] this revert was not done: https://github.com/graphhopper/graphhopper/commit/506489399629519804b44ff1cf5058b79db46cf5\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1329", "user": "karussell", "labels": ["bug"], "created": "2018-04-09 10:20:01", "closed": "2018-04-10 20:34:13", "commits": {"3b5093ea91de909868f8851febfb50e3dd8737ab": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "4d0d3745764168a2db278bf9a3e6b871811bacf5": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "3b5093ea91de909868f8851febfb50e3dd8737ab", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["96250b4b0f21cc5eb11d08e2c1d36ac981897085"], "nameRev": "3b5093ea91de909868f8851febfb50e3dd8737ab tags/0.11.0-pre1~93", "commitMessage": "move images into assets #1329\n", "commitDateTime": "2018-04-09 22:32:06", "authoredDateTime": "2018-04-09 22:32:06", "commitGitStats": [{"filePath": "web/src/main/{webapp/img => resources/assets}/direction-icons.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp/img => resources/assets}/keep_left.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp/img => resources/assets}/keep_right.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp/img => resources/assets}/scooter.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp/img => resources/assets}/scooter.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp/img => resources/assets}/u_turn.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp/img => resources/assets}/u_turn_left.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp/img => resources/assets}/u_turn_right.png", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4d0d3745764168a2db278bf9a3e6b871811bacf5", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["3b5093ea91de909868f8851febfb50e3dd8737ab"], "nameRev": "4d0d3745764168a2db278bf9a3e6b871811bacf5 tags/0.11.0-pre1~92", "commitMessage": "Revert \"Remove disconnected subnetworks _after_ adding transit.\" since the root problem is now fixed. #1311 #1329\n", "commitDateTime": "2018-04-09 22:33:24", "authoredDateTime": "2018-03-25 11:58:28", "commitGitStats": [{"filePath": "reader-gtfs/src/test/java/com/graphhopper/GraphHopperGtfsIT.java", "insertions": 2, "deletions": 8, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperGtfsIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.assertNoRoute(com.graphhopper.reader.gtfs.GraphHopperGtfs,double,double,double,double)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3b5093ea91de909868f8851febfb50e3dd8737ab"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/{webapp/img => resources/assets}/scooter.svg", "web/src/main/{webapp/img => resources/assets}/direction-icons.svg"], "changesInPackagesSPOON": []}, {"title": "Reimplement block_area with LocationIndexTree instead of graph traversal", "body": "There are several limitations with the current approach and so we should use a better node search\r\n\r\nDiscussed partially in https://github.com/graphhopper/graphhopper/pull/1306#discussion_r177076643\r\n\r\nFailing examples likely caused by this bug: https://discuss.graphhopper.com/t/4747 and https://discuss.graphhopper.com/t/3415 and https://discuss.graphhopper.com/t/3680\r\n\r\nAlso what should happen if the area is outside of the graph - should we silently ignore this, because the area does just not contain any graph or is this a \"bad request\"?", "url": "https://github.com/graphhopper/graphhopper/issues/1324", "user": "karussell", "labels": ["algorithm", "bug"], "created": "2018-03-31 10:38:05", "closed": "2020-02-22 17:11:17", "commits": {"d2458ef51850d91e6e27dc0e05464a87a39f3236": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "fa782988777c0ec9d180bd1c154e818c5650ced0": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "3b9c0335aed6ade2aa74cb88fe8cdd98974bd145": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "853661d907df102ecebcdad2709b3f577c775c00": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "55408cedb40b6eac59d04b21b45095042d538fe7": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 693.0002777777778, "commitsDetails": [{"commitHash": "d2458ef51850d91e6e27dc0e05464a87a39f3236", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fa782988777c0ec9d180bd1c154e818c5650ced0", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": ["e1c8d2278646a8ce92551d976804f166b6f646bb"], "nameRev": "fa782988777c0ec9d180bd1c154e818c5650ced0 tags/0.13.0-pre3~11", "commitMessage": "add LocationIndexTree.query(BBox) (#1485)\n\n* use 4 or 16 cells only for LocationIndexTree\r\n\r\n* make it possible to visualize boundaries of Quadtree and add few notes what's different to usual implementation\r\n\r\n* implement query(BBox), #1324\r\n\r\n* test and show how to properly user query(BBox)\r\n\r\n* make it clear what we can expect from the Visitor functionality; added EdgeVisitor\r\n\r\n* use query(Shape) instead of query(BBox)\r\n\r\n* further refinements\r\n\r\n* minor fix\r\n\r\n* intersect was overloaded, fix that too\r\n\r\n* more fixes necessary\r\n\r\n* ensure it does not load previously created indices\r\n\r\n* Use bounding box query to finish PtIsochroneResource\r\n\r\n* minor test fix\r\n", "commitDateTime": "2019-04-17 09:28:51", "authoredDateTime": "2019-04-17 09:28:51", "commitGitStats": [{"filePath": "api/src/main/java/com/graphhopper/util/shapes/BBox.java", "insertions": 24, "deletions": 9, "lines": 33}, {"filePath": "api/src/main/java/com/graphhopper/util/shapes/Circle.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "api/src/main/java/com/graphhopper/util/shapes/Polygon.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "api/src/main/java/com/graphhopper/util/shapes/Shape.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "api/src/test/java/com/graphhopper/util/shapes/BBoxTest.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "api/src/test/java/com/graphhopper/util/shapes/CircleTest.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "client-hc/src/test/java/com/graphhopper/api/GraphHopperWebIT.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/Location2IDFullIndex.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/Location2IDFullWithEdgesIndex.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/Location2IDQuadtree.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/LocationIndex.java", "insertions": 57, "deletions": 0, "lines": 57}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/LocationIndexTree.java", "insertions": 124, "deletions": 50, "lines": 174}, {"filePath": "core/src/test/java/com/graphhopper/routing/PathTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/storage/index/LocationIndexTreeTest.java", "insertions": 24, "deletions": 7, "lines": 31}, {"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/EmptyLocationIndex.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "reader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java", "insertions": 58, "deletions": 8, "lines": 66}, {"filePath": "tools/src/main/java/com/graphhopper/ui/MiniGraphUI.java", "insertions": 30, "deletions": 5, "lines": 35}, {"filePath": "web-bundle/src/main/java/com/graphhopper/resources/PtIsochroneResource.java", "insertions": 11, "deletions": 21, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BBox.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.shapes.BBox.intersect(com.graphhopper.util.shapes.Shape)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBox.intersect(com.graphhopper.util.shapes.Circle)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBox.intersect(com.graphhopper.util.shapes.BBox)", "TOT": 11, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 4}, {"spoonMethodName": "com.graphhopper.util.shapes.BBox.calculateIntersection(com.graphhopper.util.shapes.BBox)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBox.intersects(com.graphhopper.util.shapes.BBox)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBox.fromEnvelope(org.locationtech.jts.geom.Envelope)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBox.intersects(double,double,double,double)", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Circle.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.shapes.Circle.intersect(com.graphhopper.util.shapes.Shape)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.Circle.intersect(com.graphhopper.util.shapes.BBox)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.Circle.intersect(com.graphhopper.util.shapes.Circle)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Polygon.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.shapes.Polygon.intersect(com.graphhopper.util.shapes.Shape)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Shape.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.shapes.intersect(com.graphhopper.util.shapes.Shape)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BBoxTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.shapes.BBoxTest.testBasicJavaOverload()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBoxTest.testIntersect()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBoxTest.testBasicJavaOverload().1.intersect(com.graphhopper.util.shapes.Circle)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBoxTest.testBasicJavaOverload().1.intersect(com.graphhopper.util.shapes.Shape)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBoxTest.testBasicJavaOverload().1.intersect(com.graphhopper.util.shapes.BBox)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBoxTest.testBasicJavaOverload().2.intersect(com.graphhopper.util.shapes.Circle)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBoxTest.testBasicJavaOverload().2.intersect(com.graphhopper.util.shapes.Shape)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.BBoxTest.testBasicJavaOverload().2.intersect(com.graphhopper.util.shapes.BBox)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CircleTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.shapes.CircleTest.testIntersectCircleCircle()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.CircleTest.testIntersectCircleBBox()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperWebIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.api.GraphHopperWebIT.testAlternativeRoute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Location2IDFullIndex.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.Location2IDFullIndex.query(com.graphhopper.util.shapes.BBox,com.graphhopper.storage.index.Visitor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Location2IDFullWithEdgesIndex.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.Location2IDFullWithEdgesIndex.query(com.graphhopper.util.shapes.BBox,com.graphhopper.storage.index.Visitor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Location2IDQuadtree.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.Location2IDQuadtree.query(com.graphhopper.util.shapes.BBox,com.graphhopper.storage.index.Visitor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocationIndex.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.query(com.graphhopper.util.shapes.BBox,com.graphhopper.storage.index.LocationIndex$Visitor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.Visitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.EdgeVisitor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocationIndexTree.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.getCenter(double,double)", "TOT": 15, "UPD": 9, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.fillIDs(long,int,com.graphhopper.coll.GHIntHashSet,int)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.store(com.graphhopper.storage.index.LocationIndexTree$InMemEntry,int)", "TOT": 28, "UPD": 24, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.findNClosest(double,double,com.graphhopper.routing.util.EdgeFilter,double).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.findNClosest(double,double,com.graphhopper.routing.util.EdgeFilter,double).3.apply(int).1.check(int,double,int,com.graphhopper.storage.index.EdgeIteratorState,com.graphhopper.storage.index.QueryResult$Position)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.findNetworkEntries(double,double,com.graphhopper.coll.GHIntHashSet,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(com.graphhopper.coll.GHIntHashSet,double,double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.SortedIntSet", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.query(com.graphhopper.util.shapes.BBox,com.graphhopper.storage.index.Visitor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PathTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.PathTest.testWayList()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "LocationIndexTreeTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3()", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey()", "TOT": 6, "UPD": 3, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTreeTest.testQuery()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EmptyLocationIndex.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.EmptyLocationIndex.query(com.graphhopper.util.shapes.BBox,com.graphhopper.reader.gtfs.Visitor)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperOSMTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.setUp()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.tearDown()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testLoadingWithDifferentCHConfig_issue471()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testDoNotAllowWritingAndLoadingAtTheSameTime()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testDoNotAllowWritingAndLoadingAtTheSameTime().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testPrepare()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testFootOnly()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testCustomFactoryForNoneCH().3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testCustomFactoryForNoneCH().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testLoadOSMNoCH()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testCustomFactoryForNoneCH().3.init(com.graphhopper.util.CmdArgs)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testCustomFactoryForNoneCH().4.init(com.graphhopper.util.CmdArgs)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testDoNotAllowWritingAndLoadingAtTheSameTime().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testVia()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testFailsForWrongConfig()", "TOT": 16, "UPD": 4, "INS": 0, "MOV": 12, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testCustomFactoryForNoneCH().4.getDecoratedAlgorithmFactory(com.graphhopper.reader.osm.RoutingAlgorithmFactory,com.graphhopper.reader.osm.HintsMap).1.createAlgo(com.graphhopper.reader.osm.Graph,com.graphhopper.reader.osm.AlgorithmOptions)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testQueryLocationIndexWithBBox()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MiniGraphUI.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.ui.MiniGraphUI.4.paintComponent(java.awt.Graphics2D)", "TOT": 30, "UPD": 4, "INS": 12, "MOV": 9, "DEL": 5}]}, {"spoonFilePath": "PtIsochroneResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.PtIsochroneResource.doGet(com.graphhopper.util.shapes.GHPoint,long,boolean,java.lang.String,int,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3b9c0335aed6ade2aa74cb88fe8cdd98974bd145", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["8744f0ee4c7422bea943013ae86d674227267160"], "nameRev": "3b9c0335aed6ade2aa74cb88fe8cdd98974bd145 tags/0.13.0-pre5", "commitMessage": "Render vector tiles from graph storage (#1572)\n\n* use 4 or 16 cells only for LocationIndexTree\r\n\r\n* make it possible to visualize boundaries of Quadtree and add few notes what's different to usual implementation\r\n\r\n* implement query(BBox), #1324\r\n\r\n* test and show how to properly user query(BBox)\r\n\r\n* make it clear what we can expect from the Visitor functionality; added EdgeVisitor\r\n\r\n* use query(Shape) instead of query(BBox)\r\n\r\n* example log: avoid immediateFlush config as it is confusing\r\n\r\n* make current maximum precision clear in javadoc\r\n\r\n* show tiles via graph exploration\r\n\r\n* made vector tiles much faster via loc_index branch\r\n\r\n* show less details for small zoom numbers and full geometry details for big zoom\r\n\r\n* make it possible to use speed in JavaScript and use Leaflet > 1.0; see https://gist.github.com/karussell/0720b3d3b297621c8bb10cf8c86b2906\r\n\r\n* store name and filter based on speed not edge length\r\n\r\n* use separate MVTResource\r\n\r\n* try to fix openjdk12 download URL\r\n\r\n* Adds alternative z/x/y endpoint.\r\n\r\nSigned-off-by: easbar <easbar.mail@posteo.net>\r\n\r\n* fix response application type\r\n\r\n* remove unnecessary isochrone stuff\r\n\r\n* integrate local mvt into GH maps demo\r\n\r\n* switch localhost to 127.0.0.1\r\n\r\n* do remove roads from omniscale layer\r\n\r\n* updated main.js\r\n\r\n* fixed merge conflict for LocationIndexTree\r\n\r\n* include mvt test that reads tile from /mvt endpoint\r\n\r\n* revert changes in travis config\r\n\r\n* include various EncodedValues in response\r\n\r\n* advertise /mvt endpoint\r\n", "commitDateTime": "2019-06-17 13:48:33", "authoredDateTime": "2019-06-17 13:48:33", "commitGitStats": [{"filePath": "README.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/EncodingManager.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/LocationIndexTree.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/storage/index/LocationIndexTreeTest.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "isochrone/pom.xml", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GraphHopperBundle.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "web-bundle/src/main/java/com/graphhopper/http/GraphHopperManaged.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web-bundle/src/main/java/com/graphhopper/resources/MVTResource.java", "insertions": 167, "deletions": 0, "lines": 167}, {"filePath": "web/package.json", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "web/src/main/resources/assets/js/config/tileLayers.js", "insertions": 55, "deletions": 1, "lines": 56}, {"filePath": "web/src/main/resources/assets/js/main.js", "insertions": 34, "deletions": 31, "lines": 65}, {"filePath": "web/src/main/resources/assets/js/map.js", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "web/src/test/java/com/graphhopper/http/resources/MvtResourceTest.java", "insertions": 116, "deletions": 0, "lines": 116}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncodingManager.java", "spoonMethods": []}, {"spoonFilePath": "LocationIndexTree.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.fillIDs(long,int,com.graphhopper.coll.GHIntHashSet,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.SortedIntSet", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LocationIndexTreeTest.java", "spoonMethods": []}, {"spoonFilePath": "GraphHopperBundle.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperBundle.runRegularGraphHopper(com.graphhopper.util.CmdArgs,io.dropwizard.setup.Environment)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperManaged.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperManaged.start()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "IsochroneResource.java", "spoonMethods": []}, {"spoonFilePath": "MVTResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.MVTResource", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MvtResourceTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.resources.MvtResourceTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "853661d907df102ecebcdad2709b3f577c775c00", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["ba19bb9311ccc27e1c690fa2588fb9989170e9d7"], "nameRev": "853661d907df102ecebcdad2709b3f577c775c00 remotes/origin/issue_1324_2~2", "commitMessage": "replaced BFS with locationIndex query; speed up: return immediately if edgeIds are known; proper cached edgeId handling if multiple shapes, fixes #1324\n", "commitDateTime": "2020-02-17 15:07:50", "authoredDateTime": "2020-02-17 15:07:50", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/storage/GraphEdgeIdFinder.java", "insertions": 60, "deletions": 97, "lines": 157}, {"filePath": "core/src/test/java/com/graphhopper/routing/weighting/BlockAreaWeightingTest.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphEdgeIdFinderTest.java", "insertions": 8, "deletions": 9, "lines": 17}, {"filePath": "core/src/test/java/com/graphhopper/storage/change/ChangeGraphHelperTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/resources/com/graphhopper/storage/change/overlaydata1.json", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 3, "deletions": 6, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphEdgeIdFinder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1.goFurther(int)", "TOT": 10, "UPD": 7, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1.checkAdjacent(com.graphhopper.util.EdgeIteratorState)", "TOT": 18, "UPD": 9, "INS": 0, "MOV": 7, "DEL": 2}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1.isInsideBBox(int)", "TOT": 11, "UPD": 7, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.fillEdgeIDs(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Geometry,com.graphhopper.routing.util.EdgeFilter)", "TOT": 33, "UPD": 12, "INS": 2, "MOV": 19, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.add(int)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findClosestEdge(com.graphhopper.coll.GHIntHashSet,double,double,com.graphhopper.routing.util.EdgeFilter)", "TOT": 14, "UPD": 10, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter)", "TOT": 25, "UPD": 6, "INS": 1, "MOV": 16, "DEL": 2}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter,double).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter,double)", "TOT": 16, "UPD": 2, "INS": 8, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findClosestEdgeToPoint(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.GHPoint,com.graphhopper.routing.util.EdgeFilter)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.intersects(com.graphhopper.util.EdgeIteratorState)", "TOT": 14, "UPD": 0, "INS": 0, "MOV": 11, "DEL": 3}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.createBBox(com.graphhopper.storage.NodeAccess,com.graphhopper.util.EdgeIteratorState)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.hasCachedEdgeIds(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.toString(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.add(com.graphhopper.storage.Shape)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.contains(com.graphhopper.storage.GHPoint)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.setGraph(com.graphhopper.storage.Graph)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BlockAreaWeightingTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.BlockAreaWeightingTest.testBlockVirtualEdges_QueryGraph()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.weighting.BlockAreaWeightingTest.testBlockedById()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "GraphEdgeIdFinderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinderTest.testBlockAreasWithPolygon()", "TOT": 15, "UPD": 5, "INS": 4, "MOV": 4, "DEL": 2}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinderTest.testParseStringHints()", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "ChangeGraphHelperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.change.ChangeGraphHelperTest.testApplyChanges()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperIT.testNorthBayreuthBlockedEdges()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "55408cedb40b6eac59d04b21b45095042d538fe7", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["b57a55e3ae9e7a12b76a3ff15eeebd68f4c43e00"], "nameRev": "55408cedb40b6eac59d04b21b45095042d538fe7 tags/1.0-pre25~9", "commitMessage": "Fix problems with block_area (#1917)\n\n* do not use edgeId cache for virtual edges, #1127\r\n\r\n* replaced BFS with locationIndex query; speed up: return immediately if edgeIds are known; proper cached edgeId handling if multiple shapes, fixes #1324\r\n\r\n* re-enable block_area for /spt and /isochrone, fixes #1905\r\n", "commitDateTime": "2020-02-22 18:11:16", "authoredDateTime": "2020-02-22 18:11:16", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 8, "deletions": 12, "lines": 20}, {"filePath": "core/src/main/java/com/graphhopper/routing/weighting/BlockAreaWeighting.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphEdgeIdFinder.java", "insertions": 89, "deletions": 96, "lines": 185}, {"filePath": "core/src/test/java/com/graphhopper/routing/weighting/BlockAreaWeightingTest.java", "insertions": 32, "deletions": 7, "lines": 39}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphEdgeIdFinderTest.java", "insertions": 8, "deletions": 9, "lines": 17}, {"filePath": "core/src/test/java/com/graphhopper/storage/change/ChangeGraphHelperTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/resources/com/graphhopper/storage/change/overlaydata1.json", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "web-bundle/src/main/java/com/graphhopper/resources/IsochroneResource.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "web-bundle/src/main/java/com/graphhopper/resources/SPTResource.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "web/src/test/java/com/graphhopper/http/resources/IsochroneResourceTest.java", "insertions": 33, "deletions": 9, "lines": 42}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.calcPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.createBlockArea(java.util.List,com.graphhopper.HintsMap,com.graphhopper.EdgeFilter)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "BlockAreaWeighting.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.BlockAreaWeighting.setQueryGraph(com.graphhopper.routing.querygraph.QueryGraph)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphEdgeIdFinder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findClosestEdgeToPoint(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.GHPoint,com.graphhopper.routing.util.EdgeFilter)", "TOT": 19, "UPD": 12, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findClosestEdge(com.graphhopper.coll.GHIntHashSet,double,double,com.graphhopper.routing.util.EdgeFilter)", "TOT": 20, "UPD": 9, "INS": 0, "MOV": 10, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter)", "TOT": 34, "UPD": 16, "INS": 0, "MOV": 15, "DEL": 3}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1", "TOT": 7, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1.goFurther(int)", "TOT": 10, "UPD": 7, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1.checkAdjacent(com.graphhopper.util.EdgeIteratorState)", "TOT": 19, "UPD": 10, "INS": 0, "MOV": 7, "DEL": 2}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1.isInsideBBox(int)", "TOT": 22, "UPD": 14, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.fillEdgeIDs(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Geometry,com.graphhopper.routing.util.EdgeFilter)", "TOT": 26, "UPD": 6, "INS": 2, "MOV": 14, "DEL": 4}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.add(int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter,double).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter,double)", "TOT": 16, "UPD": 2, "INS": 8, "MOV": 3, "DEL": 3}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.intersects(com.graphhopper.util.EdgeIteratorState)", "TOT": 15, "UPD": 0, "INS": 0, "MOV": 12, "DEL": 3}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.createBlockArea(com.graphhopper.storage.Graph,com.graphhopper.storage.index.LocationIndex,java.util.List,com.graphhopper.routing.util.HintsMap,com.graphhopper.routing.util.EdgeFilter)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.createBBox(com.graphhopper.storage.NodeAccess,com.graphhopper.util.EdgeIteratorState)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.hasCachedEdgeIds(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.toString(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.setQueryGraph(com.graphhopper.routing.querygraph.QueryGraph)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.contains(com.graphhopper.storage.GHPoint)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.add(com.graphhopper.storage.Shape)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "BlockAreaWeightingTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.BlockAreaWeightingTest.testNullGraph()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.weighting.BlockAreaWeightingTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.weighting.BlockAreaWeightingTest.testBlockedById()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "GraphEdgeIdFinderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinderTest.testBlockAreasWithPolygon()", "TOT": 15, "UPD": 5, "INS": 4, "MOV": 4, "DEL": 2}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinderTest.testParseStringHints()", "TOT": 7, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "ChangeGraphHelperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.change.ChangeGraphHelperTest.testApplyChanges()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperIT.testNorthBayreuthBlockedEdges()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IsochroneResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.IsochroneResource.doGet(javax.ws.rs.core.UriInfo,java.lang.String,int,boolean,com.graphhopper.util.shapes.GHPoint,long,double,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SPTResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.resources.SPTResource.doGet(javax.ws.rs.core.UriInfo,java.lang.String,boolean,com.graphhopper.util.shapes.GHPoint,java.lang.String,long,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IsochroneResourceTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.resources.IsochroneResourceTest.requestWithBlockArea()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["853661d907df102ecebcdad2709b3f577c775c00"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 3, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 60.0, "deletions": 97.0, "lines": 157.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 177.0, "UPD": 62.0, "INS": 22.0, "MOV": 78.0, "DEL": 15.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 21}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.toString(int)", "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.setGraph(com.graphhopper.storage.Graph)", "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1", "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1.isInsideBBox(int)", "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea", "com.graphhopper.storage.GraphEdgeIdFinder.createBBox(com.graphhopper.storage.NodeAccess,com.graphhopper.util.EdgeIteratorState)", "com.graphhopper.storage.GraphEdgeIdFinder.findClosestEdgeToPoint(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.GHPoint,com.graphhopper.routing.util.EdgeFilter)", "com.graphhopper.storage.GraphEdgeIdFinder.fillEdgeIDs(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Geometry,com.graphhopper.routing.util.EdgeFilter)", "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.add(int)", "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter)", "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.intersects(com.graphhopper.util.EdgeIteratorState)", "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.add(com.graphhopper.storage.Shape)", "com.graphhopper.storage.GraphEdgeIdFinder.findClosestEdge(com.graphhopper.coll.GHIntHashSet,double,double,com.graphhopper.routing.util.EdgeFilter)", "com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter,double)", "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1.goFurther(int)", "com.graphhopper.storage.GraphEdgeIdFinder", "com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter,double).2", "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.contains(com.graphhopper.storage.GHPoint)", "com.graphhopper.storage.GraphEdgeIdFinder.findEdgesInShape(com.graphhopper.coll.GHIntHashSet,com.graphhopper.storage.Shape,com.graphhopper.routing.util.EdgeFilter).1.checkAdjacent(com.graphhopper.util.EdgeIteratorState)", "com.graphhopper.GraphHopperIT.testNorthBayreuthBlockedEdges()", "com.graphhopper.storage.GraphEdgeIdFinder.BlockArea.hasCachedEdgeIds(int)"]}, {"title": "Broken graph after removing subnetworks, then adding nodes", "body": "Adding edges (or, at least, adding edges to new nodes) to a graph after having removed disconnected subnetworks results in a corrupted graph:\r\n\r\nhttps://github.com/graphhopper/graphhopper/commit/7f82541a3d391d53d7992df3333e48cb6d0a7a4a", "url": "https://github.com/graphhopper/graphhopper/issues/1313", "user": "michaz", "labels": ["bug"], "created": "2018-03-18 16:05:07", "closed": "2018-03-24 00:30:14", "commits": {"506489399629519804b44ff1cf5058b79db46cf5": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "1092576d7b4b811c4d5676d9207932e91238797d": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "d6f14bc7b42e647d7402f3551a03c38f50fe539d": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "f32db3845a8f799f6dbe7dbc2b50b7f333af33ee": {"commitGHEventType": "referenced", "commitUser": "michaz"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "506489399629519804b44ff1cf5058b79db46cf5", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": ["8599fbdfddfe06ffa8c9b528d5f6f6d4d46fe794"], "nameRev": "506489399629519804b44ff1cf5058b79db46cf5 tags/0.10.1~1^2~3", "commitMessage": "Revert \"Remove disconnected subnetworks _after_ adding transit.\" since the root problem is now fixed. #1311 #1313\n\nThis reverts commit 24bf137\n\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\n", "commitDateTime": "2018-03-26 17:32:01", "authoredDateTime": "2018-03-25 11:58:28", "commitGitStats": [{"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "reader-gtfs/src/test/java/com/graphhopper/GraphHopperGtfsIT.java", "insertions": 2, "deletions": 8, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperGtfs.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GraphHopperGtfs.createOrLoad(com.graphhopper.reader.gtfs.GHDirectory,com.graphhopper.routing.util.EncodingManager,com.graphhopper.reader.gtfs.PtFlagEncoder,com.graphhopper.reader.gtfs.GtfsStorage,boolean,java.util.Collection,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GraphHopperGtfsIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.assertNoRoute(com.graphhopper.reader.gtfs.GraphHopperGtfs,double,double,double,double)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1092576d7b4b811c4d5676d9207932e91238797d", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d6f14bc7b42e647d7402f3551a03c38f50fe539d", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["0ee9da77550fe7a9d9568f0408acd49ecf6365e9"], "nameRev": "d6f14bc7b42e647d7402f3551a03c38f50fe539d tags/0.11.0-pre1~98", "commitMessage": "Dropwizardify - really now (#1314)\n\n* Initial attempt at dropwizardifying\r\n\r\n* Remove CmdArgsModule\r\n\r\n* For example: ChangeGraph\r\n\r\n* For example: Nearest\r\n\r\n* No more Guice, no more Servlets\r\n\r\n* Bundle configuration; mergin of system properties\r\n\r\n* config-example.yml\r\n\r\n* Add OSM file name to example\r\n\r\n* Add port number to example config\r\n\r\n* Dropwizard import command\r\n\r\n* ChangeGraphResource is disabled by default\r\n\r\n* rename hk2 factories to *Factory\r\n\r\n* redirect to webapp from root\r\n\r\n* dropwizard 1.1.2\r\n\r\n* Add banner.txt\r\n\r\n* Restore tests for http error status codes, and fix it.\r\n\r\n* Insert separate fields for planned/predicted departure/arrival time\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Set the expected times fields only when there is an update.\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Insert separate fields for planned/predicted departure/arrival time\r\n\r\n* Bump Dropwizard version; declare J2EE dependencies (for Java 9)\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Use the same Jackson version in the client.\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Remove client-duplicate, as in master\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Adapt to refactoring\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Use shade plug-in as per Dropwizard doc\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Disable Dropwizard admin port in default config\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Remove empty files\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Fix banner\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Move webapp from /webapp to /maps\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Disable request log\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Add a (not very strong) Dropwizard health check to each of the two API variants.\r\n\r\nI think this is okay for now -- they are thinking more of testing the health of external services such as databases.\r\n\r\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\r\n\r\n* Adapt graphhopper script for dropwizard branch (#1319)\r\n\r\n* adapt graphhopper.sh script for dropwizard\r\n\r\n* now variable JETTY_PORT works (empty would result in random so no parameter is required if empty); avoid starting admin connector\r\n\r\n* minor fix\r\n\r\n* improve security and bind to private localhost instead of public 0.0.0.0, then we can start admin panel and remove IPFilter\r\n\r\n* improve script and include some shortcut to specifiy vehicle profiles and the gtfs input file\r\n\r\n* remove logging echo statement\r\n\r\n* 'detaching' does not need a value\r\n\r\n* minor improvements\r\n\r\n* forward parameters as there won't be compatibility issues due to the '-' prefix; use -- for parameters longer than 2 characters; added possibility to print version\r\n\r\n* minor cleanup\r\n\r\n* sort alphabetically\r\n\r\n* added author when adapting graphhopper.sh script for dropwizard #1319\r\n\r\n* avoid unnecessary dependency like commons logging\r\n\r\n* merged master\r\n\r\n* use WebApplicationException\r\n\r\n* no tools jar possible, use web jar via ImportCommand\r\n\r\n* updated docs\r\n\r\n* revert change explicitely #1313\r\n", "commitDateTime": "2018-04-07 18:54:25", "authoredDateTime": "2018-04-07 09:54:25", "commitGitStats": [{"filePath": ".gitignore", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "client-hc/pom.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "config-example.properties", "insertions": 0, "deletions": 127, "lines": 127}, {"filePath": "config-example.yml", "insertions": 145, "deletions": 0, "lines": 145}, {"filePath": "core/pom.xml", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "core/src/main/java/com/graphhopper/PathWrapper.java", "insertions": 5, "deletions": 16, "lines": 21}, {"filePath": "core/src/main/java/com/graphhopper/routing/lm/LandmarkSuggestion.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphEdgeIdFinder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/change/ChangeGraphResponse.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/util/CmdArgs.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "core/src/main/java/com/graphhopper/util/PointList.java", "insertions": 24, "deletions": 21, "lines": 45}, {"filePath": "core/src/main/java/com/graphhopper/util/shapes/BBox.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/util/shapes/GHPoint.java", "insertions": 12, "deletions": 13, "lines": 25}, {"filePath": "core/src/test/java/com/graphhopper/util/PointListTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "docs/android/index.md", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "docs/core/deploy.md", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "docs/core/landmarks.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/core/quickstart-from-source.md", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "docs/core/routing.md", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "docs/core/spatial-rules.md", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "docs/core/technical.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "docs/core/translations.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "docs/core/windows-setup.md", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "docs/index.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "docs/web/api-doc.md", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "docs/web/quickstart.md", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "graphhopper.sh", "insertions": 100, "deletions": 101, "lines": 201}, {"filePath": "pom.xml", "insertions": 1, "deletions": 10, "lines": 11}, {"filePath": "reader-gtfs/pom.xml", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/RealtimeFeed.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "reader-gtfs/src/test/java/com/graphhopper/GraphHopperGtfsIT.java", "insertions": 8, "deletions": 2, "lines": 10}, {"filePath": "reader-json/pom.xml", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "reader-json/src/test/java/com/graphhopper/json/geo/JsonFeatureCollectionTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "reader-osm/pom.xml", "insertions": 6, "deletions": 21, "lines": 27}, {"filePath": "reader-shp/pom.xml", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "tools/pom.xml", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "tools/src/main/java/com/graphhopper/tools/QueryTorture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/package.json", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "web/pom.xml", "insertions": 40, "deletions": 70, "lines": 110}, {"filePath": "web/src/main/java/com/graphhopper/http/ChangeGraphServlet.java", "insertions": 0, "deletions": 87, "lines": 87}, {"filePath": "web/src/main/java/com/graphhopper/http/CmdArgsModule.java", "insertions": 0, "deletions": 41, "lines": 41}, {"filePath": "web/src/main/java/com/graphhopper/http/GHBaseServlet.java", "insertions": 0, "deletions": 174, "lines": 174}, {"filePath": "web/src/main/java/com/graphhopper/http/GHErrorHandler.java", "insertions": 0, "deletions": 59, "lines": 59}, {"filePath": "web/src/main/java/com/graphhopper/http/GHServer.java", "insertions": 0, "deletions": 176, "lines": 176}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperApplication.java", "insertions": 78, "deletions": 0, "lines": 78}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperBundle.java", "insertions": 285, "deletions": 0, "lines": 285}, {"filePath": "tools/src/main/java/com/graphhopper/tools/Import.java => web/src/main/java/com/graphhopper/http/GraphHopperManaged.java", "insertions": 44, "deletions": 30, "lines": 74}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperModule.java", "insertions": 0, "deletions": 137, "lines": 137}, {"filePath": "web/src/main/java/com/graphhopper/http/{HeadFilter.java => GraphHopperServerConfiguration.java}", "insertions": 14, "deletions": 27, "lines": 41}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperServlet.java", "insertions": 0, "deletions": 272, "lines": 272}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperServletModule.java", "insertions": 0, "deletions": 185, "lines": 185}, {"filePath": "web/src/main/java/com/graphhopper/http/{GraphHopperService.java => HasGraphHopperConfiguration.java}", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "web/src/main/java/com/graphhopper/http/I18NServlet.java", "insertions": 0, "deletions": 62, "lines": 62}, {"filePath": "web/src/main/java/com/graphhopper/http/InfoServlet.java", "insertions": 0, "deletions": 86, "lines": 86}, {"filePath": "web/src/main/java/com/graphhopper/http/InvalidRequestServlet.java", "insertions": 0, "deletions": 32, "lines": 32}, {"filePath": "web/src/main/java/com/graphhopper/http/NearestServlet.java", "insertions": 0, "deletions": 80, "lines": 80}, {"filePath": "web/src/main/java/com/graphhopper/http/PtModule.java", "insertions": 0, "deletions": 118, "lines": 118}, {"filePath": "web/src/main/java/com/graphhopper/http/RouteSerializer.java", "insertions": 0, "deletions": 44, "lines": 44}, {"filePath": "web/src/main/java/com/graphhopper/http/SimpleRouteSerializer.java", "insertions": 0, "deletions": 131, "lines": 131}, {"filePath": "web/src/main/java/com/graphhopper/http/WebHelper.java", "insertions": 3, "deletions": 22, "lines": 25}, {"filePath": "web/src/main/java/com/graphhopper/http/cli/ImportCommand.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "web/src/main/java/com/graphhopper/http/health/GraphHopperHealthCheck.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "web/src/main/java/com/graphhopper/http/health/GraphHopperStorageHealthCheck.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "web/src/main/java/com/graphhopper/http/resources/ChangeGraphResource.java", "insertions": 60, "deletions": 0, "lines": 60}, {"filePath": "web/src/main/java/com/graphhopper/http/resources/I18NResource.java", "insertions": 68, "deletions": 0, "lines": 68}, {"filePath": "web/src/main/java/com/graphhopper/http/resources/InfoResource.java", "insertions": 81, "deletions": 0, "lines": 81}, {"filePath": "web/src/main/java/com/graphhopper/http/resources/NearestResource.java", "insertions": 77, "deletions": 0, "lines": 77}, {"filePath": "web/src/main/java/com/graphhopper/http/resources/RootResource.java", "insertions": 34, "deletions": 0, "lines": 34}, {"filePath": "web/src/main/java/com/graphhopper/http/resources/RouteResource.java", "insertions": 320, "deletions": 0, "lines": 320}, {"filePath": "web/src/main/{webapp => resources/assets}/css/flatpickr.min.css", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/images/elevation.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/images/layers-2x.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/images/layers.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/images/marker-icon-2x.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/images/marker-icon.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/images/marker-shadow.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/leaflet.contextmenu.css", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/leaflet.css", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/leaflet.elevation-0.0.4.css", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/leaflet.loading.css", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/leaflet_numbered_markers.css", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/style.css", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/LICENSE.txt", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-bg_diagonals-thick_18_b81900_40x40.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-bg_diagonals-thick_20_666666_40x40.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-bg_glass_100_f6f6f6_1x400.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-bg_glass_100_fdf5ce_1x400.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-bg_glass_65_ffffff_1x400.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-bg_gloss-wave_35_f6a828_500x100.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-bg_highlight-soft_100_eeeeee_1x100.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-bg_highlight-soft_75_ffe45c_1x100.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-icons_222222_256x240.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-icons_228ef1_256x240.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-icons_ef8c08_256x240.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-icons_ffd27a_256x240.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/images/ui-icons_ffffff_256x240.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/jquery-ui.min.css", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/css/ui-lightness/jquery-ui.theme.min.css", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/alt_route.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/bike.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/bike2.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/bus.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/bus.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/car.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/continue.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/delete.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/foot.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/foot.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/gpx.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/header.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/hike.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/hike.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/icon.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/indicator-bar.gif", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/indicator.gif", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/left.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/link.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/loading.gif", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/marker-from.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/marker-icon-blue.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/marker-icon-green.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/marker-icon-red.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/marker-small-blue.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/marker-small-green.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/marker-small-red.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/marker-to.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/marker_hole.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/motorcycle.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/motorcycle.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/mtb-bicycle.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/mtb.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/point_add.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/point_delete.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/pt.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/pt.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/pt_end_trip.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/pt_start_trip.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/pt_transfer_to.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/racingbike.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/racingbike.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/right.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/roundabout.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/sharp_left.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/sharp_right.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/slight_left.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/slight_right.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/small_truck.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/small_truck.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/truck.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/truck.svg", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/img/unknown.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/index.html", "insertions": 21, "deletions": 3, "lines": 24}, {"filePath": "web/src/main/{webapp => resources/assets}/js/autocomplete.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/config/options.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/config/tileLayers.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/gpxexport.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/graphhopper/GHInput.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/graphhopper/GHRequest.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/graphhopper/GHRoute.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/graphhopper/tools.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/instructions.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/lib/jquery-ui-custom-1.12.0.min.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/lib/jquery.autocomplete.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/lib/jquery.history.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/lib/leaflet.elevation-0.0.4.min.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/lib/leaflet_numbered_markers.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/main-template.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/main.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/map.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/messages.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/nominatim.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/routeManipulation.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/tools/format.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/tools/math.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/tools/url.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/tools/vehicle.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/js/translate.js", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/{webapp => resources/assets}/opensearch.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/resources/banner.txt", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "web/src/main/resources/log4j.xml", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "web/src/test/java/com/graphhopper/http/BaseServletTester.java", "insertions": 0, "deletions": 179, "lines": 179}, {"filePath": "web/src/test/java/com/graphhopper/http/{ChangeGraphServletIT.java => ChangeGraphResourceIT.java}", "insertions": 34, "deletions": 30, "lines": 64}, {"filePath": "web/src/test/java/com/graphhopper/http/GraphHopperDataflagEncoderSpatialRulesIT.java", "insertions": 23, "deletions": 18, "lines": 41}, {"filePath": "web/src/test/java/com/graphhopper/http/GraphHopperLandmarksIT.java", "insertions": 31, "deletions": 34, "lines": 65}, {"filePath": "web/src/test/java/com/graphhopper/http/{NearestServletIT.java => NearestResourceIT.java}", "insertions": 26, "deletions": 23, "lines": 49}, {"filePath": "web/src/test/java/com/graphhopper/http/{NearestServletWithEleIT.java => NearestResourceWithEleIT.java}", "insertions": 20, "deletions": 16, "lines": 36}, {"filePath": "web/src/test/java/com/graphhopper/http/{GraphHopperServletIT.java => RouteResourceIT.java}", "insertions": 73, "deletions": 35, "lines": 108}, {"filePath": "web/src/test/java/com/graphhopper/http/{GraphHopperServletWithEleIT.java => RouteResourceWithEleIT.java}", "insertions": 28, "deletions": 16, "lines": 44}, {"filePath": "web/src/test/java/log4j.xml", "insertions": 0, "deletions": 25, "lines": 25}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "f32db3845a8f799f6dbe7dbc2b50b7f333af33ee", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "NPE for public transit", "body": "See discussion here: https://discuss.graphhopper.com/t/2913\r\n\r\n`{\"vehicle\":\"pt\",\"weighting\":\"short_fastest\",\"point\":[\"42.4448765,-76.4808143\",\"42.4301429,-76.5082167\"],\"points_encoded\":false,\"pt.arrive_by\":false,\"ch.disable\":true,\"pt.walk_speed\":3,\"pt.earliest_departure_time\":\"2018-03-15T14:49:15.303Z\",\"pt.profile\":true,\"pt.limit_solutions\":6}`\r\n\r\n```\r\njava.lang.NullPointerException\\n\\tat com.graphhopper.reader.gtfs.Label$1$1.next(Label.java:120)\\n\\tat \r\ncom.graphhopper.reader.gtfs.Label$1$1.next(Label.java:105)\\n\\tat \r\njava.lang.Iterable.forEach(Iterable.java:74)\\n\\tat \r\ncom.graphhopper.reader.gtfs.TripFromLabel.getTrip(TripFromLabel.java:130)\\n\\tat \r\ncom.graphhopper.reader.gtfs.GraphHopperGtfs$RequestHandler.parseSolutionsAndAddToResponse(GraphHopperGtfs.java:219)\\n\\tat \r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1311", "user": "karussell", "labels": ["bug"], "created": "2018-03-16 10:15:47", "closed": "2018-03-17 22:57:49", "commits": {"24bf137c466f82ade9a65571e5d07e765d6fc6fe": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "506489399629519804b44ff1cf5058b79db46cf5": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "4d0d3745764168a2db278bf9a3e6b871811bacf5": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "f32db3845a8f799f6dbe7dbc2b50b7f333af33ee": {"commitGHEventType": "referenced", "commitUser": "michaz"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "24bf137c466f82ade9a65571e5d07e765d6fc6fe", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": ["13b67a736fbd9eb0170c59ee1bf095c170965cea"], "nameRev": "24bf137c466f82ade9a65571e5d07e765d6fc6fe tags/0.10.1~1^2~16", "commitMessage": "Remove disconnected subnetworks _after_ adding transit. #1311\n\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\n", "commitDateTime": "2018-03-17 15:48:02", "authoredDateTime": "2018-03-17 15:42:32", "commitGitStats": [{"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "reader-gtfs/src/test/java/com/graphhopper/GraphHopperGtfsIT.java", "insertions": 8, "deletions": 2, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperGtfs.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GraphHopperGtfs.createOrLoad(com.graphhopper.reader.gtfs.GHDirectory,com.graphhopper.routing.util.EncodingManager,com.graphhopper.reader.gtfs.PtFlagEncoder,com.graphhopper.reader.gtfs.GtfsStorage,boolean,java.util.Collection,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GraphHopperGtfsIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.assertNoRoute(com.graphhopper.reader.gtfs.GraphHopperGtfs,double,double,double,double)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "506489399629519804b44ff1cf5058b79db46cf5", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": ["8599fbdfddfe06ffa8c9b528d5f6f6d4d46fe794"], "nameRev": "506489399629519804b44ff1cf5058b79db46cf5 tags/0.10.1~1^2~3", "commitMessage": "Revert \"Remove disconnected subnetworks _after_ adding transit.\" since the root problem is now fixed. #1311 #1313\n\nThis reverts commit 24bf137\n\nSigned-off-by: Michael Zilske <michael.zilske@tu-berlin.de>\n", "commitDateTime": "2018-03-26 17:32:01", "authoredDateTime": "2018-03-25 11:58:28", "commitGitStats": [{"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "reader-gtfs/src/test/java/com/graphhopper/GraphHopperGtfsIT.java", "insertions": 2, "deletions": 8, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperGtfs.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GraphHopperGtfs.createOrLoad(com.graphhopper.reader.gtfs.GHDirectory,com.graphhopper.routing.util.EncodingManager,com.graphhopper.reader.gtfs.PtFlagEncoder,com.graphhopper.reader.gtfs.GtfsStorage,boolean,java.util.Collection,java.util.Collection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GraphHopperGtfsIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.assertNoRoute(com.graphhopper.reader.gtfs.GraphHopperGtfs,double,double,double,double)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4d0d3745764168a2db278bf9a3e6b871811bacf5", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["3b5093ea91de909868f8851febfb50e3dd8737ab"], "nameRev": "4d0d3745764168a2db278bf9a3e6b871811bacf5 tags/0.11.0-pre1~92", "commitMessage": "Revert \"Remove disconnected subnetworks _after_ adding transit.\" since the root problem is now fixed. #1311 #1329\n", "commitDateTime": "2018-04-09 22:33:24", "authoredDateTime": "2018-03-25 11:58:28", "commitGitStats": [{"filePath": "reader-gtfs/src/test/java/com/graphhopper/GraphHopperGtfsIT.java", "insertions": 2, "deletions": 8, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperGtfsIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.assertNoRoute(com.graphhopper.reader.gtfs.GraphHopperGtfs,double,double,double,double)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f32db3845a8f799f6dbe7dbc2b50b7f333af33ee", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["24bf137c466f82ade9a65571e5d07e765d6fc6fe"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4.0, "deletions": 2.0, "lines": 6.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4.0, "UPD": 0.0, "INS": 1.0, "MOV": 3.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["reader-gtfs/src/main/java/com/graphhopper/reader/gtfs"], "changesInPackagesSPOON": ["com.graphhopper.reader.gtfs.GraphHopperGtfs.createOrLoad(com.graphhopper.reader.gtfs.GHDirectory,com.graphhopper.routing.util.EncodingManager,com.graphhopper.reader.gtfs.PtFlagEncoder,com.graphhopper.reader.gtfs.GtfsStorage,boolean,java.util.Collection,java.util.Collection)", "com.graphhopper.GraphHopperGtfsIT.assertNoRoute(com.graphhopper.reader.gtfs.GraphHopperGtfs,double,double,double,double)"]}, {"title": "Cannot run builds via graphhopper.sh", "body": "I am seeing an issue with the new release management and graphhopper.sh. \r\n\r\nRunning `mvn clean test verify` works as usual. \r\nRunning `./graphhopper.sh build` or `mvn --projects tools -am -DskipTests=true package`.\r\nRunning `mvn DskipTests=true package` works.\r\n\r\nThe error message is:\r\n```\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-assembly-plugin:3.0.0:single (make-assembly) on project graphhopper-tools: Failed to create assembly: Unable to resolve dependencies for assembly 'jar-with-dependencies': Failed to resolve dependencies for assembly: Unable to get dependency information for com.graphhopper:graphhopper-tools:jar:0.11-SNAPSHOT: Failed to process POM for com.graphhopper:graphhopper-tools:jar:0.11-SNAPSHOT: Non-resolvable parent POM for com.graphhopper:graphhopper-tools:0.11-SNAPSHOT: Could not find artifact com.graphhopper:graphhopper-parent:pom:0.11-SNAPSHOT and 'parent.relativePath' points at wrong local POM\r\n```\r\n\r\nI guess we cannot just change the ./graphhopper.sh to just use mvn package without selecting projects?", "url": "https://github.com/graphhopper/graphhopper/issues/1299", "user": "boldtrn", "labels": ["bug"], "created": "2018-02-26 04:18:55", "closed": "2018-03-05 16:14:16", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Deployment issues for SNAPSHOT", "body": "Very likely due to maven 3.5.0, see [discussion](https://discuss.graphhopper.com/t/gradle-project-sync-failed-in-android-studio-3-0-1/2845)", "url": "https://github.com/graphhopper/graphhopper/issues/1292", "user": "karussell", "labels": ["architecture", "bug"], "created": "2018-02-21 10:59:07", "closed": "2018-02-21 12:03:28", "commits": {"2b834e5490384d730ab84f7d7018b19529566e8b": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "c70327eee33bf19ee75c83c1925f5d4c44e2f649": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2b834e5490384d730ab84f7d7018b19529566e8b", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["3033b56456ba45d1526969f4fdb795f3b645fe4a"], "nameRev": "2b834e5490384d730ab84f7d7018b19529566e8b remotes/origin/issue_1292~1", "commitMessage": "try to downgrade maven #1292\n", "commitDateTime": "2018-02-21 12:02:22", "authoredDateTime": "2018-02-21 12:02:22", "commitGitStats": [{"filePath": ".travis.yml", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c70327eee33bf19ee75c83c1925f5d4c44e2f649", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["b5ad072a73f5b67bf39e178d5b866a13065942b7"], "nameRev": "c70327eee33bf19ee75c83c1925f5d4c44e2f649 tags/0.10.0-RC1~3", "commitMessage": "Rollback maven version for now (#1295)\n\n* try to downgrade maven #1292\r\n\r\n* wget silent\r\n", "commitDateTime": "2018-02-21 13:03:27", "authoredDateTime": "2018-02-21 13:03:27", "commitGitStats": [{"filePath": ".travis.yml", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2b834e5490384d730ab84f7d7018b19529566e8b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 1, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": [".travis.yml"]}, {"title": "Cannot use dependency due to new release management", "body": "Introduced in #1286\r\n\r\nWe now get:\r\n\r\n```\r\nFailed to collect dependencies at com.graphhopper:graphhopper-reader-osm:jar:0.10-SNAPSHOT: Failed to read artifact descriptor for com.graphhopper:graphhopper-reader-osm:jar:0.10-SNAPSHOT: Failure to find com.graphhopper:graphhopper-parent:pom:${revision} in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -> [Help 1]\r\n```\r\n\r\nfor all projects trying to use the dependencies at e.g. maven central. Which is ugly and could be fixed with a 'flat' pom: https://maven.apache.org/maven-ci-friendly.html\r\n\r\nRelated: http://blog.kiwitype.com/2017/maven-versioning-in-a-continuous-delivery-pipeline/", "url": "https://github.com/graphhopper/graphhopper/issues/1288", "user": "karussell", "labels": ["architecture", "bug"], "created": "2018-02-15 16:06:57", "closed": "2018-02-15 21:59:32", "commits": {"f6a64ed3c02c11bd23532b36a9f49f44e9b4650a": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "905676567391876d4b263f5258ddfc0c4b6ae50b": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "2c4f04d7dd344e40aa97c96959447b2bd655fcb8": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "3033b56456ba45d1526969f4fdb795f3b645fe4a": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f6a64ed3c02c11bd23532b36a9f49f44e9b4650a", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["94a5972a983b3d888127030719ba161b595eb6ff"], "nameRev": "f6a64ed3c02c11bd23532b36a9f49f44e9b4650a tags/0.10.alpha5", "commitMessage": "avoid error when downstream dependencies are using it #1288\n", "commitDateTime": "2018-02-15 17:26:58", "authoredDateTime": "2018-02-15 17:26:58", "commitGitStats": [{"filePath": "pom.xml", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "905676567391876d4b263f5258ddfc0c4b6ae50b", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["f6a64ed3c02c11bd23532b36a9f49f44e9b4650a"], "nameRev": "905676567391876d4b263f5258ddfc0c4b6ae50b tags/0.10.alpha6", "commitMessage": "make test and checkstyle working with new plugin #1288\n", "commitDateTime": "2018-02-15 18:31:12", "authoredDateTime": "2018-02-15 18:31:12", "commitGitStats": [{"filePath": ".travis.yml", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "checkstyle.xml => core/files/checkstyle.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "findbugs-exclude.xml => core/files/findbugs-exclude.xml", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "pom.xml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2c4f04d7dd344e40aa97c96959447b2bd655fcb8", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["6350d148c8d9feb01976bb25e65d2ebaad464b92"], "nameRev": "2c4f04d7dd344e40aa97c96959447b2bd655fcb8 remotes/origin/json_refactoring~3", "commitMessage": "trying suggestion in https://github.com/hbakkum/resolve-parent-version-maven-plugin/issues/1 to fix #1288\n", "commitDateTime": "2018-02-18 12:42:59", "authoredDateTime": "2018-02-18 12:42:59", "commitGitStats": [{"filePath": ".travis.yml", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "pom.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3033b56456ba45d1526969f4fdb795f3b645fe4a", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["6580714dd9a1686092a898e5275978417815da74"], "nameRev": "3033b56456ba45d1526969f4fdb795f3b645fe4a tags/0.10.alpha7", "commitMessage": "trying suggestion in https://github.com/hbakkum/resolve-parent-version-maven-plugin/issues/1 to fix #1288\n", "commitDateTime": "2018-02-18 12:55:53", "authoredDateTime": "2018-02-18 12:42:59", "commitGitStats": [{"filePath": ".travis.yml", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "pom.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f6a64ed3c02c11bd23532b36a9f49f44e9b4650a", "905676567391876d4b263f5258ddfc0c4b6ae50b", "2c4f04d7dd344e40aa97c96959447b2bd655fcb8"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": [".travis.yml"]}, {"title": "SRTM import is broken", "body": "Currently we are unable to build graphs with height profiles for the whole world and for North America.\r\n\r\nThe srtm height profile file names at http://srtm.kurviger.de/SRTM3/North_America/index.html sometimes do have the format:\r\nN56W071hgt.zip\r\nand not\r\nN56W071.hgt.zip\r\nThe last format is assumed in com.graphhopper.reader.dem.SRTMProvider. \r\n\r\nThis line fails:\r\ndownloader.downloadFile(zippedURL, file.getAbsolutePath());\r\nwith zippedURL being: \r\nhttp://srtm.kurviger.de/SRTM3//North_America/N56W071.hgt.zip\r\nwhich should be:\r\nhttp://srtm.kurviger.de/SRTM3/North_America/N56W071hgt.zip\r\n\r\nI have tried to update core/src/main/resources/com/graphhopper/reader/dem/North_America_names.txt with the correct names but this does not solve the problem. The filenames are parsed at the init routine of the SRTMProvider and converted to coordinates. For downloading the coordinates are converted to an url.\r\n\r\nIt might be a temporary problem at srtm.kurviger.de.", "url": "https://github.com/graphhopper/graphhopper/issues/1274", "user": "g3rb3n", "labels": ["bug"], "created": "2018-01-19 15:54:27", "closed": "2018-05-05 14:58:04", "commits": {}, "ttf": 105.00027777777778, "commitsDetails": []}, {"title": "Invalid routing choices for both pedestrian and biking", "body": "I'm getting an odd route choice when using GraphHopper, both on openstreetmap.org and graphhopper.com/maps (same results for both).\r\n\r\nFor pedestrian, an extra loop is added:\r\n- [GraphHopper for pedestrian on openstreetmap.org](http://www.openstreetmap.org/directions?engine=graphhopper_foot&route=45.10281%2C5.01784%3B45.10385%2C5.01740#map=17/45.10321/5.01443)\r\n- [GraphHopper for pedestrian on official website](https://graphhopper.com/maps/?point=45.10281%2C5.01784&point=45.10385%2C5.0174&locale=fr&vehicle=foot&weighting=fastest&elevation=true&use_miles=false&layer=Omniscale)\r\n![image](https://user-images.githubusercontent.com/1451988/35000537-f69792b6-fae4-11e7-8ead-b74fad00b3f1.png)\r\n\r\nFor biking, another route choice but still not the expected one:\r\n- [GraphHopper for biking on openstreetmap.org](http://www.openstreetmap.org/directions?engine=graphhopper_bicycle&route=45.10281%2C5.01784%3B45.10385%2C5.01740#map=17/45.10115/5.01975)\r\n- [GraphHopper for biking on official website](https://graphhopper.com/maps/?point=45.10281%2C5.01784&point=45.10385%2C5.0174&locale=fr&vehicle=bike&weighting=fastest&elevation=true&use_miles=false&layer=Omniscale)\r\n![image](https://user-images.githubusercontent.com/1451988/35000526-ef6fcd5a-fae4-11e7-9c15-9df25ede9705.png)\r\n\r\nIn the mean time the correct route choice is proposed on [mapcat.com](https://www.mapcat.com/directions/bicycle#map=19.2/45.10338/5.01719&route=45.10328,5.01749;45.10341,5.01745). \r\n\r\n![image](https://user-images.githubusercontent.com/1451988/35000516-e7ec7e7a-fae4-11e7-9204-35947360f04f.png)\r\n\r\nI could not find anything obvious on OSM data but something must be wrong I guess?", "url": "https://github.com/graphhopper/graphhopper/issues/1270", "user": "bagage", "labels": ["bug"], "created": "2018-01-16 16:45:03", "closed": "2018-01-17 20:28:20", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Strange behavior for bicycle routing on one way streets", "body": "I have an open forum thread to correctly tag one way streets which are open for bicycles in both directions.\r\nhttps://forum.openstreetmap.org/viewtopic.php?pid=679382#p679382\r\nThe tagging is now clarified. \r\n\r\nI wanted to check navigation for cycling the street in the **opposite direction** and saw this strange behavior of graphhopper:\r\n**OSM** http://www.openstreetmap.org/directions?engine=graphhopper_bicycle&route=47.36370%2C8.53172%3B47.36006%2C8.53396#map=17/47.36202/8.53262\r\nand\r\n**graphhopper** https://graphhopper.com/maps/?point=Sportsbar%201904%2C%208002%2C%20Z%C3%BCrich%2C%20Schweiz&point=L%27Altro%2C%208002%2C%20Z%C3%BCrich%2C%20Schweiz&locale=de&vehicle=bike&weighting=fastest&elevation=true&use_miles=false&layer=Omniscale\r\n\r\n**Mapzen** navigates correctly: http://www.openstreetmap.org/directions?engine=mapzen_bicycle&route=47.36370%2C8.53172%3B47.36006%2C8.53396#map=17/47.36196/8.53284\r\n\r\n**Graphhopper** navigation **following** the one way is correct as well: http://www.openstreetmap.org/directions?engine=graphhopper_bicycle&route=47.36006%2C8.53396%3B47.36370%2C8.53172\r\n\r\n\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1255", "user": "sandsturm", "labels": ["bug", "osm"], "created": "2018-01-02 17:20:53", "closed": "2018-09-10 21:32:50", "commits": {}, "ttf": 251.00027777777777, "commitsDetails": []}, {"title": "Special turn restriction not considered", "body": "Only bike should be ignored in the restrictions but car turns left too:\r\n\r\nhttps://graphhopper.com/maps/?point=52.529074%2C13.375382&point=52.528696%2C13.376756&ch.disabled=true\r\n\r\nThis is the relation: https://www.openstreetmap.org/relation/6594521", "url": "https://github.com/graphhopper/graphhopper/issues/1254", "user": "karussell", "labels": ["bug"], "created": "2017-12-29 20:58:03", "closed": "2017-12-29 21:02:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Missing turn instructions where improvement already expected", "body": "With the improved instructions I would have expected instructions at the red circles in [this route](https://graphhopper.com/maps/?point=42.507034%2C1.531906&point=42.509581%2C1.532421&layer=OpenStreetMap) in Andorra:\r\n\r\n 1. left\r\n 2. right\r\n 3. keep right\r\n\r\n![missing-instructions](https://user-images.githubusercontent.com/129644/34416877-e382327e-ebf5-11e7-999c-300be3398f6b.png)\r\n\r\nMaybe related to #1048 or only partially fixable or even not fixable at all without further road information (that will be added with #1112). If so, please close for now.", "url": "https://github.com/graphhopper/graphhopper/issues/1252", "user": "karussell", "labels": ["bug"], "created": "2017-12-28 16:40:11", "closed": "2017-12-29 22:05:09", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Web demo UI should use u_turn.png instead of u_turn_unknown.png", "body": "We should not need two different icons here IMO", "url": "https://github.com/graphhopper/graphhopper/issues/1251", "user": "karussell", "labels": ["bug", "web"], "created": "2017-12-28 15:57:31", "closed": "2018-01-16 13:37:38", "commits": {"bbf974388e4c40155222b2d766320194d5c786b5": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "bbf974388e4c40155222b2d766320194d5c786b5", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["560431f4df8ad463f6bd03f831768038cae7dc9f"], "nameRev": "bbf974388e4c40155222b2d766320194d5c786b5 tags/0.10.alpha2~42", "commitMessage": "fixed demo u_turn image problem #1251\n", "commitDateTime": "2018-01-16 14:24:47", "authoredDateTime": "2018-01-16 14:22:29", "commitGitStats": [{"filePath": "web/src/main/webapp/img/u_turn-right.png", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "web/src/main/webapp/js/main.js", "insertions": 39, "deletions": 39, "lines": 78}, {"filePath": "web/src/main/webapp/js/messages.js", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bbf974388e4c40155222b2d766320194d5c786b5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 40, "deletions": 40, "lines": 80, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/webapp/js/messages.js", "web/src/main/webapp/js/main.js"]}, {"title": "ascent is not available when using GraphHopperWeb", "body": "There is something like\r\n\r\npathWrapper.setAscend(path.get(\"ascend\").asDouble());\r\n\r\nmissing. And also for other properties like descend", "url": "https://github.com/graphhopper/graphhopper/issues/1233", "user": "karussell", "labels": ["bug", "web-api-client"], "created": "2017-11-23 12:35:16", "closed": "2018-01-31 07:19:43", "commits": {}, "ttf": 68.00027777777778, "commitsDetails": []}, {"title": "Path Details produces ArrayIndexOutOfBoundsException", "body": "There is a minor problem when reducing the size and if size is 0\r\n\r\n```\r\n /route\r\njava.lang.ArrayIndexOutOfBoundsException: -1\r\n        at com.graphhopper.util.PointList.add(PointList.java:260)\r\n        at com.graphhopper.util.PathMerger.doWork(PathMerger.java:119)\r\n        at com.graphhopper.routing.template.ViaRoutingTemplate.isReady(ViaRoutingTemplate.java:155)\r\n        at com.graphhopper.GraphHopper.calcPaths(GraphHopper.java:1072)\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1223", "user": "karussell", "labels": ["bug"], "created": "2017-11-17 16:34:04", "closed": "2017-11-21 05:51:06", "commits": {"77cf5139650d326e6835a8ab638d3d4d93d0f0dc": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "77cf5139650d326e6835a8ab638d3d4d93d0f0dc", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["157ce0ce798b4f7c0b6fd24147e4930a6e72d4c2"], "nameRev": "77cf5139650d326e6835a8ab638d3d4d93d0f0dc tags/0.10.alpha3~4^2", "commitMessage": "avoid problem with via point and disconnected area, fixes #1223\n", "commitDateTime": "2017-11-18 19:08:26", "authoredDateTime": "2017-11-18 19:08:26", "commitGitStats": [{"filePath": "core/files/krautsand.osm.gz", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/src/main/java/com/graphhopper/util/PathMerger.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/util/PointList.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "core/src/test/java/com/graphhopper/util/PointListTest.java", "insertions": 13, "deletions": 7, "lines": 20}, {"filePath": "reader-osm/src/test/java/com/graphhopper/routing/RoutingAlgorithmWithOSMIT.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PathMerger.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PathMerger.doWork(com.graphhopper.PathWrapper,java.util.List,com.graphhopper.util.Translation)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PointList.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PointList.removeLastPoint()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PointListTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PointListTest.testRemoveLast()", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmWithOSMIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmWithOSMIT.testDisconnectedAreaAndMultiplePoints()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmWithOSMIT.runAlgo(com.graphhopper.routing.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["77cf5139650d326e6835a8ab638d3d4d93d0f0dc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 1, "lines": 9, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/files/krautsand.osm.gz", "core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.routing.RoutingAlgorithmWithOSMIT.runAlgo(com.graphhopper.routing.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)", "com.graphhopper.util.PathMerger.doWork(com.graphhopper.PathWrapper,java.util.List,com.graphhopper.util.Translation)", "com.graphhopper.routing.RoutingAlgorithmWithOSMIT.testDisconnectedAreaAndMultiplePoints()", "com.graphhopper.util.PointList.removeLastPoint()"]}, {"title": "path details with 'time' returns server error", "body": "Example query is [this](https://graphhopper.com/maps/?point=46.796534%2C-71.277752&point=46.820737%2C-71.300411&point=46.807345%2C-71.302643&details=time) and if you move the second point (the only via point) then it starts to get valid.\r\n\r\n```\r\n2017-11-09 20:12:27,793 [qtp1373419525-173] WARN  org.eclipse.jetty.server.HttpChannel - /route\r\njava.lang.IllegalStateException: PathDetail list time is inconsistent due to entries 61566 [237, 244] vs. 12510 [245, 249]\r\n        at com.graphhopper.util.PathSimplification.simplify(PathSimplification.java:137)\r\n        at com.graphhopper.util.PathMerger.doWork(PathMerger.java:144)\r\n        at com.graphhopper.routing.template.ViaRoutingTemplate.isReady(ViaRoutingTemplate.java:155)\r\n        at com.graphhopper.GraphHopper.calcPaths(GraphHopper.java:1072)\r\n```\r\n\r\nI.e. 245 is one too much or 244 is one too small.", "url": "https://github.com/graphhopper/graphhopper/issues/1216", "user": "karussell", "labels": ["bug"], "created": "2017-11-09 19:16:03", "closed": "2017-11-17 06:50:02", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "Blocking motorways fails", "body": "When using a rather small block_area this blocks only one of the directions as the ID search stops when going outside of the boundary and just adds one edgeId. We could either make the current 1km\u00b2 setting changable or properly find all edgeIds in this bounding box.\r\n\r\nThe shape method has additionally the disadvantage that if the junction nodes are outside of the bounding box (but the edge is still crossing the bbox that happens frequently with motorways or tunnels) the edge is **not** skipped. But fetching the edge geometry could be too expensive.", "url": "https://github.com/graphhopper/graphhopper/issues/1214", "user": "karussell", "labels": ["bug"], "created": "2017-11-08 16:47:06", "closed": "2018-03-31 10:39:09", "commits": {"b1bac3d24e3c52341ebaa062e09aec8bfa91ab2c": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 142.00027777777777, "commitsDetails": [{"commitHash": "b1bac3d24e3c52341ebaa062e09aec8bfa91ab2c", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["4e81b9a0f86ef455d87309bc40be03b11268bfbf"], "nameRev": "b1bac3d24e3c52341ebaa062e09aec8bfa91ab2c tags/0.10.alpha3~11", "commitMessage": "make size to use shape vs. edgeId configurable, improves #1214\n", "commitDateTime": "2017-11-08 18:23:55", "authoredDateTime": "2017-11-08 18:19:25", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphEdgeIdFinder.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphEdgeIdFinderTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.createWeighting(com.graphhopper.HintsMap,com.graphhopper.FlagEncoder,com.graphhopper.Graph)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphEdgeIdFinder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphEdgeIdFinderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphEdgeIdFinderTest.testParseStringHints()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b1bac3d24e3c52341ebaa062e09aec8bfa91ab2c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 6, "lines": 11, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 2, "INS": 2, "MOV": 0, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/storage", "core/src/main/java/com/graphhopper"], "changesInPackagesSPOON": ["com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter)", "com.graphhopper.storage.GraphEdgeIdFinder.parseBlockArea(java.lang.String,com.graphhopper.routing.util.EdgeFilter,double)", "com.graphhopper.GraphHopper.createWeighting(com.graphhopper.HintsMap,com.graphhopper.FlagEncoder,com.graphhopper.Graph)"]}, {"title": "RealtimeIt#testExtraTrip fails for some local time zones", "body": "I just ran the tests for the current master using the time one `UTC+10:00` and the test `RealtimeIt#testExtraTrip` failed. If I change my time zone to Shanghai `UTC+08:00` it works. If I change my time zone to Perth `AWST` (same time as `UTC+08:00` right now), it fails.\r\n\r\nMaybe @michaz you have an idea what might be happening here? In the test we define the time zone, but maybe the server itself runs on a different time zone?", "url": "https://github.com/graphhopper/graphhopper/issues/1210", "user": "boldtrn", "labels": ["bug", "public transport"], "created": "2017-11-04 05:04:49", "closed": "2017-12-08 20:17:14", "commits": {"fb307e13ba94f2d36f1fdbb55152e02fa6ef76a2": {"commitGHEventType": "closed", "commitUser": "michaz"}}, "ttf": 34.000277777777775, "commitsDetails": [{"commitHash": "fb307e13ba94f2d36f1fdbb55152e02fa6ef76a2", "commitGHEventType": "closed", "commitUser": "michaz", "commitParents": ["b625e4858c4566efe6fb0a906a9a3758afe264aa"], "nameRev": "fb307e13ba94f2d36f1fdbb55152e02fa6ef76a2 tags/0.10.alpha2~64", "commitMessage": "Use agency time zone for extra trips. fixes #1210\n", "commitDateTime": "2017-12-09 04:16:46", "authoredDateTime": "2017-12-08 12:03:12", "commitGitStats": [{"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/RealtimeFeed.java", "insertions": 8, "deletions": 5, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RealtimeFeed.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.RealtimeFeed.fromProtobuf(com.graphhopper.storage.Graph,com.graphhopper.reader.gtfs.GtfsStorage,com.graphhopper.reader.gtfs.PtFlagEncoder,com.google.transit.realtime.GtfsRealtime$FeedMessage)", "TOT": 8, "UPD": 1, "INS": 4, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fb307e13ba94f2d36f1fdbb55152e02fa6ef76a2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 5, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 1, "INS": 4, "MOV": 1, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["reader-gtfs/src/main/java/com/graphhopper/reader/gtfs"], "changesInPackagesSPOON": ["com.graphhopper.reader.gtfs.RealtimeFeed.fromProtobuf(com.graphhopper.storage.Graph,com.graphhopper.reader.gtfs.GtfsStorage,com.graphhopper.reader.gtfs.PtFlagEncoder,com.google.transit.realtime.GtfsRealtime$FeedMessage)"]}, {"title": "Method calling itself causing stackoverflow (tools/ui)", "body": "https://github.com/graphhopper/graphhopper/blob/c3505fd1bed046819ccf25079a01933fae4504eb/tools/src/main/java/com/graphhopper/ui/GraphicsWrapper.java#L128\r\n\r\nProbably should be `plotNode(g2, loc, c, size, \"\");`\r\n\r\nAlso, https://github.com/graphhopper/graphhopper/blob/c3505fd1bed046819ccf25079a01933fae4504eb/tools/src/main/java/com/graphhopper/ui/GraphicsWrapper.java#L131\r\n\r\nis weird. Forcing the size to 4. But no idea if that's WAI.", "url": "https://github.com/graphhopper/graphhopper/issues/1197", "user": "JoseAlcerreca", "labels": ["bug"], "created": "2017-10-22 10:32:16", "closed": "2017-10-22 11:46:37", "commits": {"f15abc2f7f96eb25f7ee1abeb3329335fd27513a": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f15abc2f7f96eb25f7ee1abeb3329335fd27513a", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["c3505fd1bed046819ccf25079a01933fae4504eb"], "nameRev": "f15abc2f7f96eb25f7ee1abeb3329335fd27513a tags/0.10.alpha3~30", "commitMessage": "MiniGraphUI problems. Fixes #1197\n", "commitDateTime": "2017-10-22 13:46:22", "authoredDateTime": "2017-10-22 13:46:22", "commitGitStats": [{"filePath": "tools/src/main/java/com/graphhopper/ui/GraphicsWrapper.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphicsWrapper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.ui.GraphicsWrapper.plotNode(java.awt.Graphics2D,int,java.awt.Color,int,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.ui.GraphicsWrapper.plotNode(java.awt.Graphics2D,int,java.awt.Color,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f15abc2f7f96eb25f7ee1abeb3329335fd27513a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["tools/src/main/java/com/graphhopper/ui"], "changesInPackagesSPOON": ["com.graphhopper.ui.GraphicsWrapper.plotNode(java.awt.Graphics2D,int,java.awt.Color,int)", "com.graphhopper.ui.GraphicsWrapper.plotNode(java.awt.Graphics2D,int,java.awt.Color,int,java.lang.String)"]}, {"title": "Connections Not Found - Turn Restrictions", "body": "I have just seen [this](https://graphhopper.com/maps/?point=52.378615%2C13.539491&point=52.378399%2C13.54007&ch.disable=true) route. For some reason it creates a connections not found error. It works with ch, but does not with `ch.disabled=true`. That's why I expect that the issue is created by turn restrictions. The issue is the start point, if you [slightly move](https://graphhopper.com/maps/?point=52.378615%2C13.539501&point=52.378399%2C13.54007&ch.disable=true) the start it works.\r\n\r\nI am not 100% sure if this is due to incorrect OSM tags or maybe that GH evaluates them in an unexpected way?\r\n\r\nHere are the tagged turn restrictions: [1](http://www.openstreetmap.org/relation/2473380), [2](http://www.openstreetmap.org/relation/5254535), [3](http://www.openstreetmap.org/relation/5254536). Here is the [corresponding overpass query](http://overpass-turbo.eu/s/skK).", "url": "https://github.com/graphhopper/graphhopper/issues/1187", "user": "boldtrn", "labels": ["bug", "osm"], "created": "2017-10-14 02:10:15", "closed": "2017-10-15 16:38:48", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "If landmark is possible and CH is used, the bidirectional A* is picked as default", "body": "The currently faster default should be dijkstrabi+ch instead of astarbi+ch\r\n\r\nlog:\r\n```\r\npoint=52.534602%2C13.382721&point=52.537944%2C13.61618&  ... astarbi|ch-routing:0.010271477s ...\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1154", "user": "karussell", "labels": ["bug"], "created": "2017-09-14 09:30:38", "closed": "2017-09-14 10:00:51", "commits": {"4684fb5be7f207ec906a1eb918fdb9952dc1eb3b": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4684fb5be7f207ec906a1eb918fdb9952dc1eb3b", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["4786c1281d34cd56ba4223b7210ad467a251a954"], "nameRev": "4684fb5be7f207ec906a1eb918fdb9952dc1eb3b tags/0.10.alpha1~25", "commitMessage": "use dijkstrabi with CH as default, fixes #1154\n", "commitDateTime": "2017-09-14 11:57:17", "authoredDateTime": "2017-09-14 11:57:17", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "web/src/test/java/com/graphhopper/http/GraphHopperLandmarksIT.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.calcPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "GraphHopperLandmarksIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperLandmarksIT.testSimpleQuery()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4684fb5be7f207ec906a1eb918fdb9952dc1eb3b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper"], "changesInPackagesSPOON": ["com.graphhopper.GraphHopper.calcPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "com.graphhopper.http.GraphHopperLandmarksIT.testSimpleQuery()"]}, {"title": "Cannot enable change graph feature from config.properties", "body": "Per default, the change graph feature is disabled.\r\n\r\nYou can enable it by passing `web.change_graph.enabled=true`. The problem is that we call the method `CmdArgs.readFromConfigAndMerge(args, \"config\", \"graphhopper.config\");` in the `GraphHopperModule` after the servlets have been set up.\r\n\r\nMoving this earlier, breaks the WebTests as they rely on the args. I tried moving the method `CmdArgs.readFromConfigAndMerge(args, \"config\", \"graphhopper.config\");` in the `GHServer` class, however the tests failed, as this method probably breaks the references to the args and we cannot specify the port anymore. (Currently we do this after initializing the GHServer in the BaseServletTester).", "url": "https://github.com/graphhopper/graphhopper/issues/1132", "user": "boldtrn", "labels": ["bug"], "created": "2017-08-07 06:45:30", "closed": "2018-09-20 14:42:19", "commits": {}, "ttf": 409.0002777777778, "commitsDetails": []}, {"title": "issue with private=access on ferries", "body": "We got a bug report via email:\r\n\r\n> I'm curious how access=private is handled in Graphhopper because when\r\ntrying to use your engine on OpenStreetMap I was routed via a ferry\r\n(which at that time was unspecified). However, after adding a tag saying\r\nit is access=private I am still routed over it.\r\n> See: https://www.openstreetmap.org/directions?engine=graphhopper_bicycle&route=64.4893%2C19.3299%3B64.5037%2C19.2600#map=13/64.4941/19.2954\r\n> and the ferry way: https://www.openstreetmap.org/way/221099681\r\n", "url": "https://github.com/graphhopper/graphhopper/issues/1122", "user": "karussell", "labels": ["bug", "osm"], "created": "2017-07-31 10:59:41", "closed": "2017-08-03 09:17:08", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Jetty bug when calling httpReq.getLocale()", "body": "There is some reproducable problem in jetty for a certain locale setting which I do not know :(\r\n\r\n```\r\n2017-07-28 03:15:28,143 [qtp464064894-1142] WARN  org.eclipse.jetty.server.HttpChannel - /route\r\njava.lang.StringIndexOutOfBoundsException: String index out of range: -1\r\n        at java.lang.StringBuffer.charAt(StringBuffer.java:204)\r\n        at org.eclipse.jetty.http.QuotedQualityCSV.parsedParam(QuotedQualityCSV.java:104)\r\n        at org.eclipse.jetty.http.QuotedCSV.addValue(QuotedCSV.java:156)\r\n        at org.eclipse.jetty.http.QuotedQualityCSV.addValue(QuotedQualityCSV.java:88)\r\n        at org.eclipse.jetty.http.HttpFields.getQualityCSV(HttpFields.java:441)\r\n        at org.eclipse.jetty.server.Request.getLocale(Request.java:857)\r\n        at javax.servlet.ServletRequestWrapper.getLocale(ServletRequestWrapper.java:311)\r\n        at javax.servlet.ServletRequestWrapper.getLocale(ServletRequestWrapper.java:311)\r\n        at com.graphhopper.http.GraphHopperServlet.doGet(GraphHopperServlet.java:149)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)\r\n```\r\n\r\nThis might be [this code line](https://github.com/eclipse/jetty.project/blob/jetty-9.4.x/jetty-http/src/main/java/org/eclipse/jetty/http/QuotedQualityCSV.java#L113) in jetty for an empty buffer:\r\n\r\n```java\r\n   protected void parsedParam(StringBuffer buffer, int valueLength, int paramName, int paramValue)\r\n    {\r\n        if (paramName<0)\r\n        {\r\n            if (buffer.charAt(buffer.length()-1)==';')\r\n                buffer.setLength(buffer.length()-1);\r\n}\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1118", "user": "karussell", "labels": ["bug", "web"], "created": "2017-07-28 06:53:34", "closed": "2018-06-26 20:19:58", "commits": {}, "ttf": 333.0002777777778, "commitsDetails": []}, {"title": "Ferry Duration Times Inconsistent for Cars, Bicycles and Pedestrian", "body": "I've been adding in ferry duration times in OSM for ferry routes in Washington State. Testing out the results on Graphhopper, I noticed that the router gives different times on the same ferry route for cars, bicycles and pedestrians. For example the Mukilteo-Clinton Ferry (5901929)1 shows the following results using the graphhopper.com/maps:\r\n\r\n* Car 4.42km will take 44min\r\n* Bicycle 4.42km will take 26min\r\n* Pedestrian 4.42km will take 29min\r\n\r\nThe actual duration of the ferry route is 20 minutes which should be the same for all modes of transportation.", "url": "https://github.com/graphhopper/graphhopper/issues/1116", "user": "cliffordsnow", "labels": ["bug", "osm"], "created": "2017-07-19 16:31:58", "closed": "2017-08-04 08:11:25", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "calling \"addTurnInfo()\" twice won't update turn costs", "body": "When using the function [addTurnInfo(int fromEdge, int viaNode, int toEdge, long turnFlags)](https://github.com/graphhopper/graphhopper/blob/0a2ae97c087d8152b78430885fd52cc427b5b6c7/core/src/main/java/com/graphhopper/storage/TurnCostExtension.java#L113)  a second time on the same edges, it doesn't update the turn costs.\r\nWhen trying to receive them by calling [getTurnCostFlags(int edgeFrom, int nodeVia, int edgeTo)](https://github.com/graphhopper/graphhopper/blob/0a2ae97c087d8152b78430885fd52cc427b5b6c7/core/src/main/java/com/graphhopper/storage/TurnCostExtension.java#L153) you'll get the first cost entry - not the 'updated' one.\r\n\r\nAdd the following test to EdgeBasedRoutingAlgorithmTest shows that effect.\r\n\r\n```\r\n@Test\r\npublic void testTurnCostsUpdateBug() {\r\n    final GraphHopperStorage g = createStorage(createEncodingManager(false));\r\n    initGraph(g);\r\n    TurnCostExtension tcs = (TurnCostExtension) g.getExtension();\r\n    long tflags = carEncoder.getTurnFlags(false, 1);\r\n    tcs.addTurnInfo(getEdge(g, 5, 2).getEdge(), 2, getEdge(g, 2, 3).getEdge(), tflags);\r\n\r\n    tflags = carEncoder.getTurnFlags(false, 2);\r\n    tcs.addTurnInfo(getEdge(g, 5, 2).getEdge(), 2, getEdge(g, 2, 3).getEdge(), tflags);\r\n\r\n    assertEquals(tflags, tcs.getTurnCostFlags(getEdge(g, 5, 2).getEdge(), 2, getEdge(g, 2, 3).getEdge()));\r\n}\r\n```\r\n\r\ni know this problem could be solved by simply using the correct turnCosts in the first place, but in some cases this might be the easier way.\r\n\r\n\r\nThis hack is fixing the problem by iterating all turnCostEntries and using the maximum.\r\n```\r\n     private long nextCostFlags(int edgeFrom, int nodeVia, int edgeTo) {\r\n         int turnCostIndex = nodeAccess.getAdditionalNodeField(nodeVia);\r\n+        int cost = -1;\r\n         int i = 0;\r\n         for (; i < 1000; i++) {\r\n             if (turnCostIndex == NO_TURN_ENTRY)\r\n@@ -168,7 +168,8 @@ public class TurnCostExtension implements GraphExtension {\r\n             long turnCostPtr = (long) turnCostIndex * turnCostsEntryBytes;\r\n             if (edgeFrom == turnCosts.getInt(turnCostPtr + TC_FROM)) {\r\n                 if (edgeTo == turnCosts.getInt(turnCostPtr + TC_TO))\r\n-                    return turnCosts.getInt(turnCostPtr + TC_FLAGS);\r\n+                    if (cost < turnCosts.getInt(turnCostPtr + TC_FLAGS))\r\n+                       cost = turnCosts.getInt(turnCostPtr + TC_FLAGS);\r\n             }\r\n \r\n             int nextTurnCostIndex = turnCosts.getInt(turnCostPtr + TC_NEXT);\r\n@@ -177,6 +178,9 @@ public class TurnCostExtension implements GraphExtension {\r\n \r\n             turnCostIndex = nextTurnCostIndex;\r\n         }\r\n+               if (cost >= 0)\r\n+                       return cost;\r\n+        \r\n         // so many turn restrictions on one node? here is something wrong\r\n         if (i >= 1000)\r\n             throw new IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\r\n        return EMPTY_FLAGS;\r\n    }\r\n```\r\n\r\nI guess the clean solution would be an update mechanism when adding the turnCosts.", "url": "https://github.com/graphhopper/graphhopper/issues/1107", "user": "knowname", "labels": ["bug"], "created": "2017-07-03 16:37:51", "closed": "2018-02-16 16:54:02", "commits": {"bc91215a0b3314482b7dda310f703c84f20d6d36": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "d327bfbe8b6b18396ef05afed0efa001b302ab1a": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 228.00027777777777, "commitsDetails": [{"commitHash": "bc91215a0b3314482b7dda310f703c84f20d6d36", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["b8574f1caef42709983b2cb46bff44fb75282a96"], "nameRev": "bc91215a0b3314482b7dda310f703c84f20d6d36 remotes/origin/issue_1276", "commitMessage": "update turn info if called multiple times, fixes #1107\n\nAdd a new method to TurnCostExtension which enables users to define\ntheir preferred merge strategy (overwrite vs. bitwise OR vs. \u2026).\nThese changes require JDK 8.\n\nreplace java.util.function by a JDK7 compatible solution\n\noptimisation for simple writing of turn flags\n\nUsers can circumvent the check if turn flags of a specific turn have\nalready been saved.\n\ndrop FlagMergeStrategy interface and replace it by simple ifs\n\nsee\nhttps://github.com/graphhopper/graphhopper/pull/1276#issuecomment-361256037\n\nless parameters, slightly more tests but avoid bit-based tests, include clearing turn infos\n", "commitDateTime": "2018-02-16 12:44:36", "authoredDateTime": "2018-01-23 18:45:11", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/storage/TurnCostExtension.java", "insertions": 59, "deletions": 20, "lines": 79}, {"filePath": "core/src/test/java/com/graphhopper/storage/TurnCostExtensionTest.java", "insertions": 118, "deletions": 0, "lines": 118}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TurnCostExtension.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.TurnCostExtension.addTurnInfo(int,int,int,long)", "TOT": 25, "UPD": 6, "INS": 1, "MOV": 14, "DEL": 4}, {"spoonMethodName": "com.graphhopper.storage.TurnCostExtension.mergeOrOverwriteTurnInfo(int,int,int,long,boolean)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TurnCostExtensionTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.TurnCostExtensionTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d327bfbe8b6b18396ef05afed0efa001b302ab1a", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["b8574f1caef42709983b2cb46bff44fb75282a96"], "nameRev": "d327bfbe8b6b18396ef05afed0efa001b302ab1a tags/0.10.alpha7~7", "commitMessage": "update turn info if called multiple times, fixes #1107\n\nAdd a new method to TurnCostExtension which enables users to define\ntheir preferred merge strategy (overwrite vs. bitwise OR vs. \u2026).\nThese changes require JDK 8.\n\nreplace java.util.function by a JDK7 compatible solution\n\noptimisation for simple writing of turn flags\n\nUsers can circumvent the check if turn flags of a specific turn have\nalready been saved.\n\ndrop FlagMergeStrategy interface and replace it by simple ifs\n\nsee\nhttps://github.com/graphhopper/graphhopper/pull/1276#issuecomment-361256037\n\nless parameters, slightly more tests but avoid bit-based tests, include clearing turn infos\n", "commitDateTime": "2018-02-16 17:53:50", "authoredDateTime": "2018-01-23 18:45:11", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/storage/TurnCostExtension.java", "insertions": 59, "deletions": 20, "lines": 79}, {"filePath": "core/src/test/java/com/graphhopper/storage/TurnCostExtensionTest.java", "insertions": 118, "deletions": 0, "lines": 118}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TurnCostExtension.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.TurnCostExtension.addTurnInfo(int,int,int,long)", "TOT": 25, "UPD": 6, "INS": 1, "MOV": 14, "DEL": 4}, {"spoonMethodName": "com.graphhopper.storage.TurnCostExtension.mergeOrOverwriteTurnInfo(int,int,int,long,boolean)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TurnCostExtensionTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.TurnCostExtensionTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bc91215a0b3314482b7dda310f703c84f20d6d36"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 59, "deletions": 20, "lines": 79, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 32, "UPD": 6, "INS": 8, "MOV": 14, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.storage.TurnCostExtension.mergeOrOverwriteTurnInfo(int,int,int,long,boolean)", "com.graphhopper.storage.TurnCostExtension.addTurnInfo(int,int,int,long)"]}, {"title": "build for jdk8 is not triggered", "body": "", "url": "https://github.com/graphhopper/graphhopper/issues/1103", "user": "karussell", "labels": ["architecture", "bug"], "created": "2017-06-29 19:46:29", "closed": "2017-06-29 19:47:08", "commits": {"b011ec172740112e824959c288f0ed149b13d782": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b011ec172740112e824959c288f0ed149b13d782", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["4ecb38417fc5481a2d6bdc9f007656f1c9ed985d"], "nameRev": "b011ec172740112e824959c288f0ed149b13d782 tags/0.10.alpha1~64", "commitMessage": "added openjdk8 explicitely, fixes #1103\n", "commitDateTime": "2017-06-29 21:46:58", "authoredDateTime": "2017-06-29 21:36:54", "commitGitStats": [{"filePath": ".travis.yml", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b011ec172740112e824959c288f0ed149b13d782"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": [".travis.yml"]}, {"title": "Problems with JDK9 build", "body": "We have some new problems:\r\n```\r\nRunning com.graphhopper.storage.MMapDirectoryTest\r\nWARNING: An illegal reflective access operation has occurred\r\nWARNING: Illegal reflective access by com.graphhopper.util.Helper$1 (file:/home/travis/build/graphhopper/graphhopper/core/target/classes/) to method java.nio.DirectByteBuffer.cleaner()\r\nWARNING: Please consider reporting this to the maintainers of com.graphhopper.util.Helper$1\r\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\r\nWARNING: All illegal access operations will be denied in a future release\r\nTests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.085 sec <<< FAILURE! - in com.graphhopper.storage.MMapDirectoryTest\r\ntestNoErrorForDACreate(com.graphhopper.storage.MMapDirectoryTest)  Time elapsed: 0.021 sec  <<< ERROR!\r\njava.lang.reflect.InaccessibleObjectException: Unable to make public void jdk.internal.ref.Cleaner.clean() accessible: module java.base does not \"exports jdk.internal.ref\" to unnamed module @33065d67\r\n```\r\n\r\nSee also #851 #852 ", "url": "https://github.com/graphhopper/graphhopper/issues/1102", "user": "karussell", "labels": ["architecture", "bug"], "created": "2017-06-29 11:41:46", "closed": "2017-06-29 19:43:53", "commits": {"4ecb38417fc5481a2d6bdc9f007656f1c9ed985d": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4ecb38417fc5481a2d6bdc9f007656f1c9ed985d", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["1a1d2409c8ca0edf649d52f90499da5f46c62b37"], "nameRev": "4ecb38417fc5481a2d6bdc9f007656f1c9ed985d tags/0.10.alpha1~65", "commitMessage": "more robust JDK9 mmap cleaner code, should also work for later JVMs, #1102\n", "commitDateTime": "2017-06-29 21:15:54", "authoredDateTime": "2017-06-29 21:15:40", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/Constants.java", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "core/src/main/java/com/graphhopper/util/Helper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pom.xml", "insertions": 3, "deletions": 24, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Constants.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Constants", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Helper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Helper.cleanMappedByteBuffer(java.nio.ByteBuffer).1.run()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4ecb38417fc5481a2d6bdc9f007656f1c9ed985d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 1, "lines": 19, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 9, "MOV": 0, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.util.Constants", "com.graphhopper.util.Helper.cleanMappedByteBuffer(java.nio.ByteBuffer).1.run()"]}, {"title": "SpatialIndex not created on Import", "body": "I just saw that the SpatialIndex is not created when using the import function instead of the web function.\r\n\r\nObviously the reason for this is that the SpatialIndex creation part is in the web module but Import does not use the web module.\r\n\r\nA reasonable solution could be to move the package `com.graphhopper.spatialrules` to the tools. We would further need to create a dependency from web to tools.\r\n\r\nAnother solution could be to move the package `com.graphhopper.spatialrules` to the core, which would result in no additional dependencies.\r\n\r\nWDYT?", "url": "https://github.com/graphhopper/graphhopper/issues/1099", "user": "boldtrn", "labels": ["bug"], "created": "2017-06-28 10:11:56", "closed": "2017-06-29 08:06:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "test case vehicule access restriction seems not to be taken into account", "body": "For this [routing](https://graphhopper.com/maps/?point=Rue%20du%20G%C3%A9n%C3%A9ral%20Leclerc%2C%2076960%2C%20Notre-Dame-de-Bondeville%2C%20France&point=49.434377%2C1.092957&locale=en-us&vehicle=car&weighting=fastest&elevation=true&use_miles=false&layer=OpenStreetMap) event though cars are not allowed through [Avenue Champlain](http://www.openstreetmap.org/way/81568424#map=18/49.43401/1.09244) graphhopper advise me to take it.\r\nThanks", "url": "https://github.com/graphhopper/graphhopper/issues/1097", "user": "serpico", "labels": ["bug"], "created": "2017-06-24 10:47:22", "closed": "2017-06-24 13:51:51", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Bug in LMApproximator?", "body": "[This example](https://graphhopper.com/maps/?point=45.57928%2C9.15844&point=45.580471379265035%2C9.16833400748146&vehicle=racingbike&ch.disable=true) results in a server error: \r\n\r\n```\r\njava.lang.IllegalStateException: At least one direction of edge (213228906 129526659-130331358) should be accessible but wasn't!\r\n        at com.graphhopper.routing.lm.LMApproximator.<init>(LMApproximator.java:99)\r\n        at com.graphhopper.routing.lm.PrepareLandmarks.getDecoratedAlgorithm(PrepareLandmarks.java:160)\r\n        at com.graphhopper.routing.lm.LMAlgoFactoryDecorator$LMRAFactory.createAlgo(LMAlgoFactoryDecorator.java:263)\r\n        at com.graphhopper.routing.template.ViaRoutingTemplate.calcPaths(ViaRoutingTemplate.java:111)\r\n        at com.graphhopper.GraphHopper.calcPaths(GraphHopper.java:1048)\r\n```\r\n\r\nThis route fails for `mtb` and `racingbike` but strange enough it works for `bike`!? (If the opposite I would have a hint what goes on ;))\r\n\r\nSomehow the location index selects an edge which is not allowed being used for graph traversal or something.", "url": "https://github.com/graphhopper/graphhopper/issues/1083", "user": "karussell", "labels": ["bug"], "created": "2017-05-31 22:35:31", "closed": "2018-09-10 21:52:46", "commits": {}, "ttf": 466.0002777777778, "commitsDetails": []}, {"title": "Mixing of CH and LM should be avoided", "body": "If LM and CH are enabled but LM is not allowed being disabled per request then LMAlgoFactoryDecorator.getDecoratedAlgorithmFactory does not return the defaultFactory even for CH routing requests. This means that we use the currently slower LM+CH combination for this configuration.", "url": "https://github.com/graphhopper/graphhopper/issues/1082", "user": "karussell", "labels": ["bug", "improvement"], "created": "2017-05-31 22:32:09", "closed": "2017-06-02 09:34:56", "commits": {"ab12ff2d3989ec053a3b16b481a506bfaacbd6cd": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "799a1d57696ee3f30a9970028c3f2e4a1189dccc": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "ab12ff2d3989ec053a3b16b481a506bfaacbd6cd", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "799a1d57696ee3f30a9970028c3f2e4a1189dccc", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["da8e08c6662867328e86eaf5c22aeca14ad22e7d"], "nameRev": "799a1d57696ee3f30a9970028c3f2e4a1189dccc tags/0.10.alpha1~79", "commitMessage": "avoid mixing CH & LM for now, fixes #1082 (#1085)\n\n", "commitDateTime": "2017-06-02 11:34:55", "authoredDateTime": "2017-06-02 11:34:55", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/lm/LMAlgoFactoryDecorator.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 1, "deletions": 12, "lines": 13}, {"filePath": "web/src/main/java/com/graphhopper/http/GHServer.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "web/src/test/java/com/graphhopper/http/BaseServletTester.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "web/src/test/java/com/graphhopper/http/GraphHopperLandmarksIT.java", "insertions": 12, "deletions": 10, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LMAlgoFactoryDecorator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LMAlgoFactoryDecorator.getDecoratedAlgorithmFactory(com.graphhopper.routing.RoutingAlgorithmFactory,com.graphhopper.routing.util.HintsMap)", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GraphHopperIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperIT.testFlexMode_631()", "TOT": 9, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 9}]}, {"spoonFilePath": "GHServer.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GHServer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GHServer.getInjector()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GHServer.start(com.google.inject.Injector)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseServletTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.BaseServletTester", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.BaseServletTester.setUpJetty(com.graphhopper.util.CmdArgs)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.BaseServletTester.getInstance(java.lang.Class)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperLandmarksIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperLandmarksIT.testLandmarkDisconnect()", "TOT": 6, "UPD": 4, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GraphHopperLandmarksIT.setUp()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "SpatialRuleLookupArray.lookupRule throws exception", "body": "if exact == true and isBorderTile then the empty rule container passes  [this if clause](https://github.com/graphhopper/graphhopper/blob/master/core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupArray.java#L108-L113) and we throw an exception for rule.getBorders() [here](https://github.com/graphhopper/graphhopper/blob/master/core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupArray.java#L116)\r\n\r\nIs there a `return SpatialRule.EMPTY;` missing in the mentioned if clause?", "url": "https://github.com/graphhopper/graphhopper/issues/1077", "user": "karussell", "labels": ["bug"], "created": "2017-05-29 11:06:11", "closed": "2017-05-31 06:29:46", "commits": {"2ade606ead5a1785ea101934c02351db37d6f96e": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "ca678ace8605a34ed86a53ead01b5da992dbd798": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "2ade606ead5a1785ea101934c02351db37d6f96e", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ca678ace8605a34ed86a53ead01b5da992dbd798", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["ab9da2b96d4225033f091568bad4d9ccbf76693b"], "nameRev": "ca678ace8605a34ed86a53ead01b5da992dbd798 tags/0.9.0~2^2~2", "commitMessage": "Improve SpatialRuleLookup (#1079)\n\n* improve behaviour for custom geojson and spatial index, #1077\r\n* Added test for border tile that is an empty rule\r\n* added test for disconnected networks due to LM preprocessing\r\n", "commitDateTime": "2017-05-31 08:29:45", "authoredDateTime": "2017-05-31 16:29:45", "commitGitStats": [{"filePath": "core/files/belarus-east.osm.gz", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/lm/LMAlgoFactoryDecorator.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "core/src/main/java/com/graphhopper/routing/lm/LandmarkStorage.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "core/src/main/java/com/graphhopper/routing/lm/PrepareLandmarks.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleContainer.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupArray.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/src/main/resources/com/graphhopper/routing/lm/map.geo.json", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/lm/LMAlgoFactoryDecoratorTest.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/test/java/com/graphhopper/routing/lm/LandmarkStorageTest.java", "insertions": 15, "deletions": 14, "lines": 29}, {"filePath": "core/src/test/java/com/graphhopper/routing/lm/PrepareLandmarksTest.java", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/spatialrules/SpatialRuleLookupArrayTest.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "reader-json/src/main/java/com/graphhopper/json/GHJsonFactory.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "reader-json/src/main/java/com/graphhopper/json/GHJsonJackson.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "reader-json/src/test/resources/com/graphhopper/json/geo/geojson1.json", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "reader-json/src/test/resources/com/graphhopper/storage/change/overlaydata1.json", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "web/src/main/java/com/graphhopper/http/ChangeGraphServlet.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperModule.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "web/src/main/java/com/graphhopper/spatialrules/SpatialRuleLookupBuilder.java", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "web/src/test/java/com/graphhopper/http/GraphHopperLandmarksIT.java", "insertions": 88, "deletions": 0, "lines": 88}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.postProcessing()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LMAlgoFactoryDecorator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LMAlgoFactoryDecorator.init(com.graphhopper.util.CmdArgs)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.lm.LMAlgoFactoryDecorator.createPreparations(com.graphhopper.storage.GraphHopperStorage,com.graphhopper.routing.util.TraversalMode,com.graphhopper.storage.index.LocationIndex)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.lm.LMAlgoFactoryDecorator", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.lm.LMAlgoFactoryDecorator.createPreparations(com.graphhopper.storage.GraphHopperStorage,com.graphhopper.storage.index.LocationIndex)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LandmarkStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorage.createLandmarks()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorage", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "PrepareLandmarks.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.PrepareLandmarks", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "SpatialRuleContainer.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleContainer.first()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SpatialRuleLookupArray.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupArray.lookupRule(double,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LMAlgoFactoryDecoratorTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LMAlgoFactoryDecoratorTest.addWeighting()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LandmarkStorageTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest.setUp()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest.testInfinitWeight()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest.testSetGetWeight()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest.testWithSubnetworks()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest.testWithSubnetworks2()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest.testWithOnewaySubnetworks()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest.testWeightingConsistence()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.lm.LandmarkStorageTest.testWithBorderBlocking()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "PrepareLandmarksTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.PrepareLandmarksTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.lm.PrepareLandmarksTest.setUp()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.lm.PrepareLandmarksTest.testLandmarkStorageAndRouting()", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.lm.PrepareLandmarksTest.testStoreAndLoad()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "SpatialRuleLookupArrayTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.spatialrules.SpatialRuleLookupArrayTest.testExact()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GHJsonFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.json.GHJsonFactory.create()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHJsonJackson.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.json.GHJsonJackson", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.json.GHJsonJackson.fromJson(java.io.Reader,java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ChangeGraphServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.ChangeGraphServlet", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.ChangeGraphServlet.doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperModule.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperModule.createGraphHopper(com.graphhopper.util.CmdArgs).1.loadOrPrepareLM()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GraphHopperModule.createGraphHopper(com.graphhopper.util.CmdArgs).1.loadOrPrepareLM().1.createSpatialRule(java.lang.String,java.util.List)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SpatialRuleLookupBuilder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.spatialrules.SpatialRuleLookupBuilder.buildIndex(com.graphhopper.json.geo.JsonFeatureCollection,java.lang.String,com.graphhopper.spatialrules.SpatialRuleLookupBuilder$SpatialRuleFactory,double,com.graphhopper.util.shapes.BBox)", "TOT": 16, "UPD": 0, "INS": 2, "MOV": 13, "DEL": 1}]}, {"spoonFilePath": "GraphHopperLandmarksIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperLandmarksIT", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "explicit lm weightings disabling not working as intended", "body": "For CH the following config works:\r\n\r\nprepare.ch.weightings=no \r\n\r\nbut this fails (and should not!) for\r\n\r\nprepare.lm.weightings=no ", "url": "https://github.com/graphhopper/graphhopper/issues/1076", "user": "karussell", "labels": ["bug"], "created": "2017-05-29 10:11:13", "closed": "2019-07-10 11:00:30", "commits": {"42dc6d8edee79a03bedf66401af0a2c6902264c5": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 772.0002777777778, "commitsDetails": [{"commitHash": "42dc6d8edee79a03bedf66401af0a2c6902264c5", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["111eb44c373da6c2fe37c66d307ffb00daafc267"], "nameRev": "42dc6d8edee79a03bedf66401af0a2c6902264c5 tags/0.13.0-pre13~8", "commitMessage": "it should be possible to disable LM, fixes #1076\n", "commitDateTime": "2019-07-10 13:00:18", "authoredDateTime": "2019-07-10 13:00:18", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/lm/LMAlgoFactoryDecorator.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/test/java/com/graphhopper/routing/lm/LMAlgoFactoryDecoratorTest.java", "insertions": 6, "deletions": 4, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LMAlgoFactoryDecorator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LMAlgoFactoryDecorator.init(com.graphhopper.util.CmdArgs)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LMAlgoFactoryDecoratorTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LMAlgoFactoryDecoratorTest.testPrepareWeightingNo()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["42dc6d8edee79a03bedf66401af0a2c6902264c5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/lm"], "changesInPackagesSPOON": ["com.graphhopper.routing.lm.LMAlgoFactoryDecorator.init(com.graphhopper.util.CmdArgs)"]}, {"title": "Issue with Parameter Flatting and Heading", "body": "Currently, there is a bug in JS. If you pass a heading, it is converted to an array in the `url.js#mergeParamIntoObject`. In `GHRequest#flatParameter` we recognize this as array but we run into an infinite loop, because we always pass an array into the flatParameter method again. When fixing this, the parameter gets flatted in the form `heading.0=123`. Which is not recognized by the server. \r\n\r\nI am not entirely sure what we should do about this. Obviously the issue was introduced due to the flattening. We could create a special rule to flat the heading differently or we could try to change the handling of the heading parameter on the server side.\r\n\r\nThe bug was introduced here: https://github.com/graphhopper/graphhopper/commit/02a10a96493b0a3918fea28cbc5efd6c3e043b8d#diff-fc1dc9e1722e4b003037f95e5f87921aR223\r\n\r\nI think the line should be:\r\n`url += this.flatParameter(key + \".\"+ keyIndex, objKey);`\r\n\r\nBut then we would pass `heading.0=123` to the server, which is not recognized.", "url": "https://github.com/graphhopper/graphhopper/issues/1072", "user": "boldtrn", "labels": ["bug", "web"], "created": "2017-05-26 05:27:13", "closed": "2017-05-29 02:44:29", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Consider vehicle=yes for ferries", "body": "Currently we ignore this tag in the CarFlagEncoder. Discussion [here](https://discuss.graphhopper.com/t/ferry-access-again/1892).", "url": "https://github.com/graphhopper/graphhopper/issues/1063", "user": "karussell", "labels": ["bug"], "created": "2017-05-14 18:02:25", "closed": "2017-05-15 15:36:15", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "landmark preparation still not interrupted if failed", "body": "Related to #107 and #980\r\n\r\nIt happily does the preprocessing further for the other profiles. Is this due to the error and not just an exception?\r\n\r\n```\r\n2017-05-11 06:42:48,403 [fastest_racingbike] ERROR com.graphhopper.routing.lm.LMAlgoFactoryDecorator - Problem while LM preparation fastest_racingbike\r\ncom.carrotsearch.hppc.BufferAllocationException: Not enough memory to allocate buffers for rehashing: 134,217,728 -> 268,435,456\r\n        at com.carrotsearch.hppc.IntObjectHashMap.allocateBuffers(IntObjectHashMap.java:1109)\r\n        at com.carrotsearch.hppc.IntObjectHashMap.allocateThenInsertThenRehash(IntObjectHashMap.java:1134)\r\n        at com.carrotsearch.hppc.IntObjectHashMap.put(IntObjectHashMap.java:179)\r\n        at com.graphhopper.routing.DijkstraBidirectionRef.fillEdges(DijkstraBidirectionRef.java:175)\r\n        at com.graphhopper.routing.DijkstraBidirectionRef.fillEdgesFrom(DijkstraBidirectionRef.java:132)\r\n        at com.graphhopper.routing.AbstractBidirAlgo.runAlgo(AbstractBidirAlgo.java:68)\r\n        at com.graphhopper.routing.lm.LandmarkStorage$LandmarkExplorer.runAlgo(LandmarkStorage.java:748)\r\n        at com.graphhopper.routing.lm.LandmarkStorage.createLandmarksForSubnetwork(LandmarkStorage.java:364)\r\n        at com.graphhopper.routing.lm.LandmarkStorage.createLandmarks(LandmarkStorage.java:278)\r\n        at com.graphhopper.routing.lm.PrepareLandmarks.doWork(PrepareLandmarks.java:130)\r\n        at com.graphhopper.routing.lm.LMAlgoFactoryDecorator$1.run(LMAlgoFactoryDecorator.java:286)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.OutOfMemoryError: Java heap space\r\n        at com.carrotsearch.hppc.IntObjectHashMap.allocateBuffers(IntObjectHashMap.java:1100)\r\n        ... 17 more\r\n2017-05-11 06:44:46,161 [fastest_foot] ERROR com.graphhopper.routing.lm.LMAlgoFactoryDecorator - Problem while LM preparation fastest_foot\r\ncom.carrotsearch.hppc.BufferAllocationException: Not enough memory to allocate buffers for rehashing: 134,217,728 -> 268,435,456\r\n        at com.carrotsearch.hppc.IntObjectHashMap.allocateBuffers(IntObjectHashMap.java:1109)\r\n        at com.carrotsearch.hppc.IntObjectHashMap.allocateThenInsertThenRehash(IntObjectHashMap.java:1134)\r\n        at com.carrotsearch.hppc.IntObjectHashMap.put(IntObjectHashMap.java:179)\r\n        at com.graphhopper.routing.DijkstraBidirectionRef.fillEdges(DijkstraBidirectionRef.java:175)\r\n        at com.graphhopper.routing.DijkstraBidirectionRef.fillEdgesFrom(DijkstraBidirectionRef.java:132)\r\n        at com.graphhopper.routing.AbstractBidirAlgo.runAlgo(AbstractBidirAlgo.java:68)\r\n        at com.graphhopper.routing.lm.LandmarkStorage$LandmarkExplorer.runAlgo(LandmarkStorage.java:748)\r\n        at com.graphhopper.routing.lm.LandmarkStorage.createLandmarksForSubnetwork(LandmarkStorage.java:364)\r\n        at com.graphhopper.routing.lm.LandmarkStorage.createLandmarks(LandmarkStorage.java:278)\r\n        at com.graphhopper.routing.lm.PrepareLandmarks.doWork(PrepareLandmarks.java:130)\r\n        at com.graphhopper.routing.lm.LMAlgoFactoryDecorator$1.run(LMAlgoFactoryDecorator.java:286)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.OutOfMemoryError: Java heap space\r\n        at com.carrotsearch.hppc.IntObjectHashMap.allocateBuffers(IntObjectHashMap.java:1101)\r\n        ... 17 more\r\n2017-05-11 06:47:51,418 [fastest_bike2] INFO  com.graphhopper.routing.lm.LandmarkStorage - Finding landmarks [fastest|bike2] in network [106422030]. Progress 0%, totalMB:163840, usedMB:13387\r\n2017-05-11 06:47:54,283 [fastest_hike] INFO  com.graphhopper.routing.lm.LandmarkStorage - Finding la...\r\n```\r\n\r\nFurthermore the required RAM seems to be too high for the prepratation (25-35GB RAM per profile). Investigate this.", "url": "https://github.com/graphhopper/graphhopper/issues/1060", "user": "karussell", "labels": ["bug"], "created": "2017-05-11 07:15:13", "closed": "2017-05-12 17:36:59", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Instructions: Missing instruction when turning onto road with separated one way lanes", "body": "We do not show turn instructions if the turn we are currently performing is the only valid turn. This is very useful in a lot of situations to remove unnecessary and misleading instructions. In rare cases this leads to missing instructions. Here is an example:\r\n\r\nhttps://graphhopper.com/maps/?point=52.508392%2C13.326287&point=52.509456%2C13.325692", "url": "https://github.com/graphhopper/graphhopper/issues/1048", "user": "boldtrn", "labels": ["bug", "improvement"], "created": "2017-04-29 23:01:08", "closed": "2018-03-02 07:07:49", "commits": {}, "ttf": 306.0002777777778, "commitsDetails": []}, {"title": "Upgrade jetty", "body": "Upgrade of jetty from 9.3 to 9.4 resulted in broken image files as it now somehow automatically redirects to /index.html ... will revert https://github.com/graphhopper/graphhopper/commit/e8ff9a9398973cba6e03a65efcc1af5e4fa62bbd", "url": "https://github.com/graphhopper/graphhopper/issues/1041", "user": "karussell", "labels": ["bug", "improvement", "web"], "created": "2017-04-26 13:01:49", "closed": "2017-05-03 17:27:44", "commits": {"ac78691034c6ae567780163090f3fce70743f6a9": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "d1626729431ceaa501e9b6593dd34bcfc03f5410": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "e3a6d8df4e985d0bf380034756aa99c1ee780ca0": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "618224926b8abf9ec7513eeabd9874b3b89b716e": {"commitGHEventType": "referenced", "commitUser": "michaz"}, "5fa89c19d3067ebd9ae5a963ef87795e80013718": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "ac78691034c6ae567780163090f3fce70743f6a9", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["83ea5e58c7c0eb8bb2aedb01eac0d10613eb772a"], "nameRev": "ac78691034c6ae567780163090f3fce70743f6a9 tags/0.9.0~52", "commitMessage": "revert jetty upgrade to 9.3, #1041\n", "commitDateTime": "2017-04-26 15:12:41", "authoredDateTime": "2017-04-26 15:05:14", "commitGitStats": [{"filePath": "web/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d1626729431ceaa501e9b6593dd34bcfc03f5410", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": ["05c393dc793ad1060c313a60f9d243cf7f8d96b3"], "nameRev": "d1626729431ceaa501e9b6593dd34bcfc03f5410 tags/0.9.0~35", "commitMessage": "Inject InvalidRequestServlet, like all the others. #1041\n", "commitDateTime": "2017-05-03 16:05:02", "authoredDateTime": "2017-05-03 16:05:02", "commitGitStats": [{"filePath": "web/src/main/java/com/graphhopper/http/ChangeGraphServlet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/src/main/java/com/graphhopper/http/GHBaseServlet.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "web/src/main/java/com/graphhopper/http/GHServer.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperServlet.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperServletModule.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "web/src/main/java/com/graphhopper/http/I18NServlet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/src/main/java/com/graphhopper/http/InvalidRequestServlet.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/src/main/java/com/graphhopper/http/NearestServlet.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ChangeGraphServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.ChangeGraphServlet.doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHBaseServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GHBaseServlet.writeError(javax.servlet.http.HttpServletResponse,int,java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GHBaseServlet", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GHServer.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GHServer.start(com.graphhopper.http.Injector)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GraphHopperServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "GraphHopperServletModule.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperServletModule.configureServlets()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "I18NServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.I18NServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InvalidRequestServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.InvalidRequestServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NearestServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.NearestServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e3a6d8df4e985d0bf380034756aa99c1ee780ca0", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": ["b96044bbf6744d8f3e3c0b45ca617c4d74868a7f"], "nameRev": "e3a6d8df4e985d0bf380034756aa99c1ee780ca0 tags/0.9.0~33", "commitMessage": "Inject InvalidRequestServlet, almost like all the others. #1041\n", "commitDateTime": "2017-05-03 16:32:33", "authoredDateTime": "2017-05-03 16:32:33", "commitGitStats": [{"filePath": "web/src/main/java/com/graphhopper/http/GHServer.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperServletModule.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GHServer.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GHServer.start(com.graphhopper.http.Injector)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperServletModule.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperServletModule.configureServlets()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "618224926b8abf9ec7513eeabd9874b3b89b716e", "commitGHEventType": "referenced", "commitUser": "michaz", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5fa89c19d3067ebd9ae5a963ef87795e80013718", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["e3a6d8df4e985d0bf380034756aa99c1ee780ca0"], "nameRev": "5fa89c19d3067ebd9ae5a963ef87795e80013718 tags/0.9.0~32", "commitMessage": "Upgrade Jetty. Fixes #1041 (#1055)\n\n", "commitDateTime": "2017-05-03 19:27:40", "authoredDateTime": "2017-05-03 19:27:40", "commitGitStats": [{"filePath": "web/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/src/main/java/com/graphhopper/http/GHServer.java", "insertions": 9, "deletions": 2, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GHServer.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GHServer.start(com.graphhopper.http.Injector)", "TOT": 8, "UPD": 2, "INS": 5, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ac78691034c6ae567780163090f3fce70743f6a9", "d1626729431ceaa501e9b6593dd34bcfc03f5410", "e3a6d8df4e985d0bf380034756aa99c1ee780ca0"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 19.0, "deletions": 11.0, "lines": 30.0, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 22.0, "UPD": 12.0, "INS": 5.0, "MOV": 2.0, "DEL": 3.0, "spoonFilesChanged": 8, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/java/com/graphhopper/http"], "changesInPackagesSPOON": ["com.graphhopper.http.GraphHopperServletModule.configureServlets()", "com.graphhopper.http.GHServer.start(com.graphhopper.http.Injector)", "com.graphhopper.http.I18NServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.GraphHopperServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.InvalidRequestServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.ChangeGraphServlet.doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.GHBaseServlet.writeError(javax.servlet.http.HttpServletResponse,int,java.lang.String)", "com.graphhopper.http.NearestServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.GHBaseServlet"]}, {"title": "Do not start with corrupted shortcuts", "body": "We observed that it was possible that the import failed to complete the CH preparation (using a version before #980) and import these corrupted (?) shortcuts to successfully start. It then served the results as if there was no CH preparation (all edges had the same unprepared level)", "url": "https://github.com/graphhopper/graphhopper/issues/1038", "user": "karussell", "labels": ["bug"], "created": "2017-04-23 11:14:08", "closed": "2017-04-25 10:24:42", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Webclient can't handle '.' in parameter names, so pt parameter names remain without '.'", "body": "Following up on #1018 - the attempted fix didn't work. It would only work _once_, but just moving one of the markers would break it. I reverted the parameter renaming and the change in the web client.\r\n\r\nIf we still want to rename the parameters to 'pt.*', we have to try again.", "url": "https://github.com/graphhopper/graphhopper/issues/1034", "user": "michaz", "labels": ["bug"], "created": "2017-04-21 08:15:25", "closed": "2017-05-12 17:37:26", "commits": {"22814a688482399cdf14719227cd447426644c52": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "02a10a96493b0a3918fea28cbc5efd6c3e043b8d": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "22814a688482399cdf14719227cd447426644c52", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "02a10a96493b0a3918fea28cbc5efd6c3e043b8d", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["9e042ba7c445d728dcf56a86e855a63357518bc1"], "nameRev": "02a10a96493b0a3918fea28cbc5efd6c3e043b8d tags/0.9.0~19", "commitMessage": "flat url parameters fixes #1034 (#1057)\n\n", "commitDateTime": "2017-05-12 19:37:26", "authoredDateTime": "2017-05-12 19:37:26", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/Parameters.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java", "insertions": 17, "deletions": 24, "lines": 41}, {"filePath": "reader-gtfs/src/test/java/com/graphhopper/GraphHopperGtfsIT.java", "insertions": 30, "deletions": 27, "lines": 57}, {"filePath": "reader-gtfs/src/test/java/com/graphhopper/RealtimeIT.java", "insertions": 13, "deletions": 12, "lines": 25}, {"filePath": "web/src/main/webapp/js/graphhopper/GHRequest.js", "insertions": 34, "deletions": 18, "lines": 52}, {"filePath": "web/src/main/webapp/js/graphhopper/GHRoute.js", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "web/src/main/webapp/js/main.js", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "web/src/main/webapp/js/tools/url.js", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "web/src/test/webapp/spec/graphhopper/GHRequestSpec.js", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "web/src/test/webapp/spec/tools/urlSpec.js", "insertions": 21, "deletions": 0, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Parameters.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Parameters.PT", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperGtfs.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GraphHopperGtfs", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 7}, {"spoonMethodName": "com.graphhopper.reader.gtfs.GraphHopperGtfs.RequestHandler", "TOT": 28, "UPD": 0, "INS": 9, "MOV": 10, "DEL": 9}]}, {"spoonFilePath": "GraphHopperGtfsIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.testRoute1()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.testRoute1DoesNotGoAt654()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.testRoute1GoesAt744()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.testRoute1ArriveBy()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.testRoute1ProfileEarliestArrival()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.testRoute1ProfileLatestDeparture()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.testRoute5()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.testWeekendRouteWorksOnlyOnWeekend()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.testBlockTrips()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.testTransferRules()", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.assertTravelTimeIs(com.graphhopper.reader.gtfs.GraphHopperGtfs,double,double,java.time.Instant,double,double,int)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperGtfsIT.assertNoRoute(com.graphhopper.reader.gtfs.GraphHopperGtfs,double,double,double,double)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RealtimeIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.RealtimeIT.testSkipDepartureStop()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.RealtimeIT.testSkipArrivalStop()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.RealtimeIT.testSkipTransferStop()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.RealtimeIT.testBlockTrips()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "IllegalStateException: Cannot create location index of empty graph", "body": "There is a problem in the `pt` import, because if the import fails (e.g. problem with gtfs data) then GH does not exit. \r\n\r\nThen if you kill this and restart (as graph cache folder is not clean) is says:\r\n```\r\nIllegalStateException: Cannot create location index of empty graph!\r\n  at com.graphhopper.http.GraphHopperGtfsModule.createLocationIndex(GraphHopperGtfsModule.java:46)\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1028", "user": "karussell", "labels": ["bug", "public transport"], "created": "2017-04-10 14:12:39", "closed": "2017-04-21 09:28:50", "commits": {"9a9510b2e9fbae54033d121175ffa61857170467": {"commitGHEventType": "closed", "commitUser": "michaz"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "9a9510b2e9fbae54033d121175ffa61857170467", "commitGHEventType": "closed", "commitUser": "michaz", "commitParents": ["581d4330b382fee2ecb619fda8741a8606971c26"], "nameRev": "9a9510b2e9fbae54033d121175ffa61857170467 tags/0.9.0~58", "commitMessage": "Pt can recover from incomplete inputs; fixes #1028\n", "commitDateTime": "2017-04-21 11:27:32", "authoredDateTime": "2017-04-21 10:31:12", "commitGitStats": [{"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GraphHopperGtfs.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/GtfsStorage.java", "insertions": 8, "deletions": 1, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperGtfs.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GraphHopperGtfs.createOrLoad(com.graphhopper.reader.gtfs.GHDirectory,com.graphhopper.routing.util.EncodingManager,com.graphhopper.reader.gtfs.PtFlagEncoder,com.graphhopper.reader.gtfs.GtfsStorage,boolean,java.util.Collection,java.util.Collection)", "TOT": 13, "UPD": 0, "INS": 1, "MOV": 11, "DEL": 1}]}, {"spoonFilePath": "GtfsStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.GtfsStorage.create(long)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a9510b2e9fbae54033d121175ffa61857170467"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 5, "lines": 17, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 17, "UPD": 0, "INS": 4, "MOV": 12, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["reader-gtfs/src/main/java/com/graphhopper/reader/gtfs"], "changesInPackagesSPOON": ["com.graphhopper.reader.gtfs.GraphHopperGtfs.createOrLoad(com.graphhopper.reader.gtfs.GHDirectory,com.graphhopper.routing.util.EncodingManager,com.graphhopper.reader.gtfs.PtFlagEncoder,com.graphhopper.reader.gtfs.GtfsStorage,boolean,java.util.Collection,java.util.Collection)", "com.graphhopper.reader.gtfs.GtfsStorage.create(long)"]}, {"title": "Potential problem for private access", "body": "See discussion [here](https://discuss.graphhopper.com/t/pedestrian-routing-through-private-ways/1689) and the osm way [here](http://www.openstreetmap.org/way/467642849)", "url": "https://github.com/graphhopper/graphhopper/issues/1012", "user": "karussell", "labels": ["bug", "osm"], "created": "2017-03-26 16:13:57", "closed": "2017-04-19 06:42:42", "commits": {"8815f1276b359984636e9da3c9731d9da0276524": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "66230a93e54b2395648a1014ec6a858e0c522029": {"commitGHEventType": "referenced", "commitUser": "boldtrn"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "8815f1276b359984636e9da3c9731d9da0276524", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "66230a93e54b2395648a1014ec6a858e0c522029", "commitGHEventType": "referenced", "commitUser": "boldtrn", "commitParents": ["91ca93d8520480f3d103a79962ecabad35f72c78"], "nameRev": "66230a93e54b2395648a1014ec6a858e0c522029 tags/0.9.0~60", "commitMessage": "fixes problem for private highways with sidewalk, #1012 (#1015)\n\n", "commitDateTime": "2017-04-19 16:42:42", "authoredDateTime": "2017-04-19 08:42:42", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 9, "deletions": 9, "lines": 18}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/FootFlagEncoderTest.java", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.acceptWay(com.graphhopper.reader.ReaderWay)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "FootFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoderTest.testAccess()", "TOT": 39, "UPD": 0, "INS": 5, "MOV": 34, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Instructions Exception \"Couldn't find the edges for...\"", "body": "We throw an exception when we cannot find the other edges. It happens for some routes that these cannot be found.\r\n\r\nWe should make the code more robust and maybe just return the calculated sign?", "url": "https://github.com/graphhopper/graphhopper/issues/1010", "user": "boldtrn", "labels": ["bug"], "created": "2017-03-26 06:54:15", "closed": "2017-04-25 08:23:49", "commits": {}, "ttf": 30.00027777777778, "commitsDetails": []}, {"title": "The Android apks are no longer accessible", "body": "The website changed and the links are no longer available. Workaround, use these links:\r\n\r\nhttps://graphhopper.com/public/releases/graphhopper-android-0.8.2.apk", "url": "https://github.com/graphhopper/graphhopper/issues/985", "user": "karussell", "labels": ["bug", "documentation"], "created": "2017-03-10 16:38:47", "closed": "2017-03-10 21:01:15", "commits": {"66ec8d0be09f60cbe34f2eaf1e059179d8072a62": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "66ec8d0be09f60cbe34f2eaf1e059179d8072a62", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["c486feac0d3955f635efc22ddb43f91e47df8824"], "nameRev": "66ec8d0be09f60cbe34f2eaf1e059179d8072a62 tags/0.9.0~84", "commitMessage": "add link to apk in user doc, #985\n", "commitDateTime": "2017-03-10 21:59:51", "authoredDateTime": "2017-03-10 21:59:51", "commitGitStats": [{"filePath": "docs/index.md", "insertions": 9, "deletions": 8, "lines": 17}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["66ec8d0be09f60cbe34f2eaf1e059179d8072a62"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Performance Problem for Android", "body": "Have not tested performance on Android for a long time, but this is definitely too slow on my current device with Android 5.1.1. Nearly 60s for just 120km with CH routing. I think on my old device a 500km query was possible in under 30s.", "url": "https://github.com/graphhopper/graphhopper/issues/984", "user": "karussell", "labels": ["android", "bug"], "created": "2017-03-10 16:27:18", "closed": "2017-03-10 20:02:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "In very rare cases a shortcut is not added", "body": "The problematic code is in PrepareContractionHierarchies.addShortcuts and there in `if() continue NEXT_SC`.\r\n\r\nA unit test and a fix will follow soon. Cost me a bunch of hours to figure this out but was definitely worth it.\r\n\r\nThe bug is rare. I had to use a special combination of encoders, areas and subnetwork config to reproduce it. The problematic network is [here](https://graphhopper.com/maps/?point=52.71237%2C-1.77382&point=52.711746%2C-1.772763) where probably the [one southern road](http://www.openstreetmap.org/way/323870729) has a missing oneway tag.", "url": "https://github.com/graphhopper/graphhopper/issues/976", "user": "karussell", "labels": ["bug"], "created": "2017-02-28 17:12:51", "closed": "2017-03-01 14:06:05", "commits": {"2af83a555a1683b03661d4f30327ea7d2889337e": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "f8ea4c508b2a57f3e476c1aee1ed285e9f2c34f6": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2af83a555a1683b03661d4f30327ea7d2889337e", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["9bef6d511b66412a0e4882bc652f0b58ee17bcc9"], "nameRev": "2af83a555a1683b03661d4f30327ea7d2889337e tags/0.9.0~94^2~2", "commitMessage": "fix CH preparation bug, #976\n", "commitDateTime": "2017-02-28 21:38:18", "authoredDateTime": "2017-02-28 21:38:18", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/VirtualEdgeIterator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/VirtualEdgeIteratorState.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java", "insertions": 25, "deletions": 14, "lines": 39}, {"filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareEncoder.java", "insertions": 19, "deletions": 12, "lines": 31}, {"filePath": "core/src/main/java/com/graphhopper/storage/CHGraphImpl.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/main/java/com/graphhopper/util/CHEdgeIteratorState.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/util/GHUtility.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/PrepareContractionHierarchiesTest.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/PrepareEncoderTest.java", "insertions": 10, "deletions": 9, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VirtualEdgeIterator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.VirtualEdgeIterator.canBeOverwritten(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VirtualEdgeIteratorState.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.VirtualEdgeIteratorState.canBeOverwritten(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareContractionHierarchies.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(int)", "TOT": 11, "UPD": 2, "INS": 0, "MOV": 7, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.contractNodes()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(java.util.Collection)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.AddShortcutHandler.foundShortcut(int,int,double,double,com.graphhopper.routing.ch.EdgeIterator,int,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PrepareEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareEncoder.canBeOverwritten(long,long)", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "CHGraphImpl.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.canBeOverwritten(long)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.CHGraphImpl.AllCHEdgesIteratorImpl.canBeOverwritten(long)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.getFlags()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CHEdgeIteratorState.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.canBeOverwritten(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHUtility.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.GHUtility.DisabledEdgeIterator.canBeOverwritten(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareContractionHierarchiesTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortcutMergeBug()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareEncoderTest.testOverwrite()", "TOT": 18, "UPD": 18, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f8ea4c508b2a57f3e476c1aee1ed285e9f2c34f6", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["9bef6d511b66412a0e4882bc652f0b58ee17bcc9", "35358056c8b731b93fa62dbc40c3d5b69446ee32"], "nameRev": "f8ea4c508b2a57f3e476c1aee1ed285e9f2c34f6 tags/0.9.0~94", "commitMessage": "Merge pull request #977 from graphhopper/issue_976\n\nFix CH preparation bug #976", "commitDateTime": "2017-03-01 15:06:05", "authoredDateTime": "2017-03-01 15:06:05", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/VirtualEdgeIterator.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/VirtualEdgeIteratorState.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java", "insertions": 24, "deletions": 13, "lines": 37}, {"filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareEncoder.java", "insertions": 31, "deletions": 15, "lines": 46}, {"filePath": "core/src/main/java/com/graphhopper/storage/CHGraphImpl.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/util/CHEdgeIteratorState.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/util/GHUtility.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/PrepareContractionHierarchiesTest.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/PrepareEncoderTest.java", "insertions": 10, "deletions": 9, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "VirtualEdgeIterator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.VirtualEdgeIterator.canBeOverwritten(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VirtualEdgeIteratorState.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.VirtualEdgeIteratorState.canBeOverwritten(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareContractionHierarchies.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(int)", "TOT": 11, "UPD": 2, "INS": 0, "MOV": 7, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.contractNodes()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(java.util.Collection)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.AddShortcutHandler.foundShortcut(int,int,double,double,com.graphhopper.routing.ch.EdgeIterator,int,int)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PrepareEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareEncoder.canBeOverwritten(long,long)", "TOT": 10, "UPD": 6, "INS": 0, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "CHGraphImpl.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.canBeOverwritten(long)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.CHGraphImpl.AllCHEdgesIteratorImpl.canBeOverwritten(long)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CHEdgeIteratorState.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.canBeOverwritten(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHUtility.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.GHUtility.DisabledEdgeIterator.canBeOverwritten(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareContractionHierarchiesTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortcutMergeBug()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareEncoderTest.testOverwrite()", "TOT": 18, "UPD": 18, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2af83a555a1683b03661d4f30327ea7d2889337e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 54, "deletions": 37, "lines": 91, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 51, "UPD": 22, "INS": 9, "MOV": 15, "DEL": 5, "spoonFilesChanged": 7, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing", "core/src/main/java/com/graphhopper/routing/ch", "core/src/main/java/com/graphhopper/util", "core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.canBeOverwritten(long)", "com.graphhopper.util.canBeOverwritten(long)", "com.graphhopper.routing.ch.PrepareContractionHierarchies.AddShortcutHandler.foundShortcut(int,int,double,double,com.graphhopper.routing.ch.EdgeIterator,int,int)", "com.graphhopper.routing.VirtualEdgeIteratorState.canBeOverwritten(long)", "com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.getFlags()", "com.graphhopper.routing.ch.PrepareEncoder.canBeOverwritten(long,long)", "com.graphhopper.routing.ch.PrepareContractionHierarchies", "com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(int)", "com.graphhopper.routing.ch.PrepareContractionHierarchies.addShortcuts(java.util.Collection)", "com.graphhopper.routing.VirtualEdgeIterator.canBeOverwritten(long)", "com.graphhopper.storage.CHGraphImpl.AllCHEdgesIteratorImpl.canBeOverwritten(long)", "com.graphhopper.routing.ch.PrepareContractionHierarchies.contractNodes()", "com.graphhopper.util.GHUtility.DisabledEdgeIterator.canBeOverwritten(long)"]}, {"title": "prepare.lm.done overwritten on load graph", "body": "The `prepare.lm.done` property appears to be overwritten in [GraphHopper.loadOrPrepareLM](https://github.com/graphhopper/graphhopper/blob/master/core/src/main/java/com/graphhopper/GraphHopper.java#L1181) during loading a landmark graph.\r\n\r\nThe graph properties file has the correct entry `prepare.lm.done=true`.\r\nLoading the graph and using the `getProperties()`, the property comes `false`.\r\n\r\nThis is probably due to `tmpPrepare` being `false`.", "url": "https://github.com/graphhopper/graphhopper/issues/968", "user": "devemux86", "labels": ["bug"], "created": "2017-02-24 21:10:04", "closed": "2017-02-24 21:47:59", "commits": {"68b99e2cd9162bed94243a1f9b678e99c2172790": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "4075984b77f54b8448230d4e854c71111f881c6b": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "68b99e2cd9162bed94243a1f9b678e99c2172790", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4075984b77f54b8448230d4e854c71111f881c6b", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["b065b4f3cc13fd4f0e16c060c7ad68e19df375e4"], "nameRev": "4075984b77f54b8448230d4e854c71111f881c6b tags/0.9.0~99", "commitMessage": "do not revert prepare.lm.done=true to false, #968\n", "commitDateTime": "2017-02-24 22:52:42", "authoredDateTime": "2017-02-24 22:47:39", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 9, "deletions": 14, "lines": 23}, {"filePath": "core/src/main/java/com/graphhopper/routing/lm/LMAlgoFactoryDecorator.java", "insertions": 10, "deletions": 5, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.getElevationProvider()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.setElevationProvider(com.graphhopper.reader.dem.ElevationProvider)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.prepareCH()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.loadOrPrepareLM()", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "LMAlgoFactoryDecorator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.lm.LMAlgoFactoryDecorator.loadOrDoWork(com.graphhopper.storage.StorableProperties)", "TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4075984b77f54b8448230d4e854c71111f881c6b"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19.0, "deletions": 19.0, "lines": 38.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 25.0, "UPD": 11.0, "INS": 6.0, "MOV": 6.0, "DEL": 2.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/lm", "core/src/main/java/com/graphhopper"], "changesInPackagesSPOON": ["com.graphhopper.GraphHopper.prepareCH()", "com.graphhopper.routing.lm.LMAlgoFactoryDecorator.loadOrDoWork(com.graphhopper.storage.StorableProperties)", "com.graphhopper.GraphHopper.loadOrPrepareLM()", "com.graphhopper.GraphHopper.getElevationProvider()", "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)", "com.graphhopper.GraphHopper", "com.graphhopper.GraphHopper.setElevationProvider(com.graphhopper.reader.dem.ElevationProvider)"]}, {"title": "CH preparation is done on Android although existent.", "body": "Fix was here: https://github.com/graphhopper/graphhopper/commit/b065b4f3cc13fd4f0e16c060c7ad68e19df375e4", "url": "https://github.com/graphhopper/graphhopper/issues/967", "user": "karussell", "labels": ["bug"], "created": "2017-02-24 13:25:21", "closed": "2017-02-24 13:25:24", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Cannot correctly build SpatialRuleIndex", "body": "I just found an ugly bug with the way we [initialize the SpatialRuleLookupBuilder in the DefaultModule](https://github.com/graphhopper/graphhopper/blob/e085c0b3f3b1e8a3b5942d0938218bec40a357f3/web/src/main/java/com/graphhopper/http/DefaultModule.java#L109). The problem is that at this point the graph is not loaded, therefore we cannot get it. Getting the bounds in advance is probably not possible.\r\n\r\nFor a quick fix, we could simply define the bbox in the config.\r\n\r\nThe usage itself is a bit inconvenient as well.\r\nYou have to define the location of the json file, the number of spatial rules the encoder contains, (and the BBox).\r\n\r\nMaybe it would make more sense, to define the names of the SpatialRules by hand? This would remove the need to define the BBox and the number of SpatialRules.\r\n\r\nCurrently, the usage SpatialRuleIndex is not documented. When fixing this issue and testing if it works, we should document the process, as well.\r\n\r\nWDYT?", "url": "https://github.com/graphhopper/graphhopper/issues/965", "user": "boldtrn", "labels": ["bug", "documentation"], "created": "2017-02-24 05:23:10", "closed": "2017-05-22 11:43:50", "commits": {}, "ttf": 87.00027777777778, "commitsDetails": []}, {"title": "SpatialRuleLookup fails for small areas", "body": "If the area is rather small like core/files/monaco.osm.gz we get:\r\n```\r\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 1\r\n\tat com.graphhopper.routing.util.spatialrules.SpatialRuleLookupArray.getRuleContainerIndex(SpatialRuleLookupArray.java:125)\r\n\tat com.graphhopper.routing.util.spatialrules.SpatialRuleLookupArray.isBorderTile(SpatialRuleLookupArray.java:135)\r\n\tat com.graphhopper.routing.util.spatialrules.SpatialRuleLookupArray.lookupRule(SpatialRuleLookupArray.java:103)\r\n```\r\n\r\nMaybe the loop in isBorderTile should pick the min(2, lookupArray[0].length) somehow?", "url": "https://github.com/graphhopper/graphhopper/issues/957", "user": "karussell", "labels": ["bug"], "created": "2017-02-21 17:35:21", "closed": "2017-02-24 10:57:35", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Replace currently defect Sorbian layer", "body": "[As suggested](https://twitter.com/realgiggls/status/833003513047371777) on Twitter [now here](http://tile.openstreetmap.de/#map=10/51.2146/14.539/1) is a working alternative.\r\n\r\nAlso heidelberg mapsurfer seems to be broken, [here](http://korona.geog.uni-heidelberg.de/contact.html) is the setup", "url": "https://github.com/graphhopper/graphhopper/issues/953", "user": "karussell", "labels": ["bug", "web"], "created": "2017-02-19 20:36:11", "closed": "2017-05-04 15:36:19", "commits": {"fe9b5600c9b4b21c37d2ad4e13f18756f637faba": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 73.00027777777778, "commitsDetails": [{"commitHash": "fe9b5600c9b4b21c37d2ad4e13f18756f637faba", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["a757e19364e67e49b27f62186e47c4a7e708c630"], "nameRev": "fe9b5600c9b4b21c37d2ad4e13f18756f637faba tags/0.9.0~30", "commitMessage": "fixed sorbian map tiles layer and added new for thunderforest, fixes #953\n", "commitDateTime": "2017-05-04 17:35:14", "authoredDateTime": "2017-05-04 17:35:14", "commitGitStats": [{"filePath": "web/src/main/webapp/js/config/tileLayers.js", "insertions": 11, "deletions": 4, "lines": 15}, {"filePath": "web/src/main/webapp/js/main.js", "insertions": 39, "deletions": 39, "lines": 78}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fe9b5600c9b4b21c37d2ad4e13f18756f637faba"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 50, "deletions": 43, "lines": 93, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/webapp/js/main.js", "web/src/main/webapp/js/config/tileLayers.js"]}, {"title": "encoded value: rounding leads to max value violation", "body": "[This code](https://github.com/graphhopper/graphhopper/blob/master/core/src/main/java/com/graphhopper/routing/util/EncodedDoubleValue.java#L56) in EncodedDoubleValue is ugly and we should probably avoid the first 'rounding'. Also it works differently than in EncodedValue.\r\n\r\nThis leads to an exception when with a precision of 4 the 110km/h is rounded upwards to 112 and violates the maximum allowed value:\r\n\r\n```java\r\n   public void testMaxSpeed2() {\r\n       CarFlagEncoder limitedCar = new CarFlagEncoder(5, 4, 0) {\r\n           {\r\n               maxPossibleSpeed = 110;\r\n           }\r\n       };\r\n       EncodingManager em = new EncodingManager(limitedCar);\r\n       ReaderWay way = new ReaderWay(1);\r\n       way.setTag(\"highway\", \"motorway\");\r\n       way.setTag(\"maxspeed\", \"none\");\r\n       long flags = limitedCar.handleWayTags(way, 1, 0);\r\n       assertEquals(110, limitedCar.getSpeed(flags), 0.01);\r\n   }\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/947", "user": "karussell", "labels": ["bug"], "created": "2017-02-04 14:29:10", "closed": "2017-03-07 21:26:10", "commits": {"6d770f8a864ec89509d696276da42936f1f92592": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 31.00027777777778, "commitsDetails": [{"commitHash": "6d770f8a864ec89509d696276da42936f1f92592", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["b4ff6279bdd6ff4ebfae8b385181868c55468382"], "nameRev": "6d770f8a864ec89509d696276da42936f1f92592 tags/0.9.0~97", "commitMessage": "Fix encoded value issue #947 (#954)\n\n", "commitDateTime": "2017-02-24 23:59:00", "authoredDateTime": "2017-02-25 09:59:00", "commitGitStats": [{"filePath": "core/files/changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/EncodedDoubleValue.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/EncodedDoubleValueTest.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EncodedDoubleValue.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long,double)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.EncodedDoubleValue", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EncodedDoubleValueTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.EncodedDoubleValueTest.testIllegalFactorMaxValueCombination()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Wrong preparation for integration tests ", "body": "introduced with https://github.com/graphhopper/graphhopper/commit/442e032766f4456bf27db2b8fd1c91c7ea9887ca\r\n\r\nNot the routing factory of the GraphHopper class is called but instead the create always AlgoHelperEntry.createAlgo which is wrong for the two prepared algos", "url": "https://github.com/graphhopper/graphhopper/issues/942", "user": "karussell", "labels": ["architecture", "bug"], "created": "2017-01-23 14:42:08", "closed": "2017-01-23 16:20:39", "commits": {"dee1adfc5276b1d024490138bab1cde18fb61427": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "a4ebf88f99444ec2a4746bfd440258f880008140": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "bde658379125dedcb17bad13e8fc49e7590da922": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "dee1adfc5276b1d024490138bab1cde18fb61427", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a4ebf88f99444ec2a4746bfd440258f880008140", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["768c036ebfcbc61d6e7dc5a9f2ed207605aa1e26"], "nameRev": "a4ebf88f99444ec2a4746bfd440258f880008140 tags/0.9.0~126", "commitMessage": "fixed issues regarding integration tests of CH, #942\n", "commitDateTime": "2017-01-23 17:12:07", "authoredDateTime": "2017-01-23 15:56:25", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/AStar.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/AStarBidirection.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/HintsMap.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/TestAlgoCollector.java", "insertions": 33, "deletions": 23, "lines": 56}, {"filePath": "core/src/main/java/com/graphhopper/routing/weighting/BeelineWeightApproximator.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/weighting/ConsistentWeightApproximator.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/weighting/TurnWeighting.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "core/src/main/java/com/graphhopper/util/PMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 76, "deletions": 28, "lines": 104}, {"filePath": "reader-osm/src/test/java/com/graphhopper/routing/RoutingAlgorithmWithOSMIT.java", "insertions": 15, "deletions": 11, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AStar.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AStar.getName()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AStarBidirection.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AStarBidirection.getName()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "PrepareContractionHierarchies.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.createAStarBidirection(com.graphhopper.routing.ch.Graph).2.getName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.createDijkstraBidirection(com.graphhopper.routing.ch.Graph).3.getName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HintsMap.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.HintsMap", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestAlgoCollector.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry", "TOT": 12, "UPD": 9, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry.getQueryGraph()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry.setQueryGraph(com.graphhopper.storage.Graph)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry.getBaseGraph()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry.createAlgo(com.graphhopper.storage.Graph)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.assertDistance(com.graphhopper.routing.util.TestAlgoCollector$AlgoHelperEntry,java.util.List,com.graphhopper.routing.util.TestAlgoCollector$OneRun)", "TOT": 17, "UPD": 4, "INS": 7, "MOV": 4, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry.toString()", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry.getExpectedAlgo()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry.setAlgorithmOptions(com.graphhopper.routing.util.AlgorithmOptions)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BeelineWeightApproximator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.BeelineWeightApproximator.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConsistentWeightApproximator.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.ConsistentWeightApproximator.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TurnWeighting.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.TurnWeighting.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PMap.java", "spoonMethods": []}, {"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.createAlgos(com.graphhopper.routing.GraphHopperStorage,com.graphhopper.storage.index.LocationIndex,boolean,com.graphhopper.routing.util.TraversalMode,com.graphhopper.routing.weighting.Weighting)", "TOT": 44, "UPD": 13, "INS": 0, "MOV": 12, "DEL": 19}, {"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testPerformance()", "TOT": 18, "UPD": 4, "INS": 5, "MOV": 6, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.createAlgos(com.graphhopper.GraphHopper,com.graphhopper.routing.util.HintsMap,com.graphhopper.routing.util.TraversalMode)", "TOT": 22, "UPD": 0, "INS": 22, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmWithOSMIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmWithOSMIT.runAlgo(com.graphhopper.routing.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)", "TOT": 22, "UPD": 10, "INS": 2, "MOV": 5, "DEL": 5}, {"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmWithOSMIT.testMonacoParallel().1.run()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmWithOSMIT.testMonacoParallel()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "bde658379125dedcb17bad13e8fc49e7590da922", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["ed3de15180d80a92f0a83102ef1bc0139e84be12", "a4ebf88f99444ec2a4746bfd440258f880008140"], "nameRev": "bde658379125dedcb17bad13e8fc49e7590da922 remotes/origin/travis~5", "commitMessage": "fixed integration test bug for landmarks too, #942\n", "commitDateTime": "2017-01-23 17:19:40", "authoredDateTime": "2017-01-23 17:19:40", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/HintsMap.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/TestAlgoCollector.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "core/src/main/java/com/graphhopper/util/PMap.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 16, "deletions": 12, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HintsMap.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.HintsMap", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestAlgoCollector.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.assertDistance(com.graphhopper.routing.util.TestAlgoCollector$AlgoHelperEntry,java.util.List,com.graphhopper.routing.util.TestAlgoCollector$OneRun)", "TOT": 12, "UPD": 1, "INS": 5, "MOV": 4, "DEL": 2}]}, {"spoonFilePath": "PMap.java", "spoonMethods": []}, {"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testPerformance().4.loadGraph(com.graphhopper.storage.GraphHopperStorage)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.createAlgos(com.graphhopper.GraphHopper,com.graphhopper.routing.util.HintsMap,com.graphhopper.routing.util.TraversalMode)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testPerformance()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testPerformance().4", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a4ebf88f99444ec2a4746bfd440258f880008140"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 25.0, "deletions": 6.0, "lines": 31.0, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 120.0, "UPD": 29.0, "INS": 38.0, "MOV": 25.0, "DEL": 28.0, "spoonFilesChanged": 9, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/weighting", "core/src/main/java/com/graphhopper/util", "core/src/main/java/com/graphhopper/routing/ch", "core/src/main/java/com/graphhopper/routing", "core/src/main/java/com/graphhopper/routing/util"], "changesInPackagesSPOON": ["com.graphhopper.routing.RoutingAlgorithmIT.createAlgos(com.graphhopper.GraphHopper,com.graphhopper.routing.util.HintsMap,com.graphhopper.routing.util.TraversalMode)", "com.graphhopper.routing.RoutingAlgorithmWithOSMIT.runAlgo(com.graphhopper.routing.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)", "com.graphhopper.routing.RoutingAlgorithmIT.testPerformance()", "com.graphhopper.routing.weighting.TurnWeighting.toString()", "com.graphhopper.routing.RoutingAlgorithmWithOSMIT.testMonacoParallel()", "com.graphhopper.routing.RoutingAlgorithmIT.createAlgos(com.graphhopper.routing.GraphHopperStorage,com.graphhopper.storage.index.LocationIndex,boolean,com.graphhopper.routing.util.TraversalMode,com.graphhopper.routing.weighting.Weighting)", "com.graphhopper.routing.RoutingAlgorithmWithOSMIT.testMonacoParallel().1.run()", "com.graphhopper.routing.util.HintsMap", "com.graphhopper.routing.ch.PrepareContractionHierarchies.createAStarBidirection(com.graphhopper.routing.ch.Graph).2.getName()", "com.graphhopper.routing.ch.PrepareContractionHierarchies.createDijkstraBidirection(com.graphhopper.routing.ch.Graph).3.getName()", "com.graphhopper.routing.AStarBidirection.getName()", "com.graphhopper.routing.weighting.BeelineWeightApproximator.toString()", "com.graphhopper.routing.weighting.ConsistentWeightApproximator.toString()", "com.graphhopper.routing.AStar.getName()"]}, {"title": "GraphHopper crash on Android 4.1", "body": "Sample crashes on Android 4.1 at application exit with the following exception:\r\n\r\n```java\r\nCaused by: java.lang.IllegalArgumentException: expected receiver of type java.nio.DirectByteBuffer, but got java.nio.MappedByteBufferAdapter\r\n   at java.lang.reflect.Method.invokeNative(Native Method)\r\n   at java.lang.reflect.Method.invoke(Method.java:511)\r\n   at com.graphhopper.util.Helper$1.run(Helper.java:377)\r\n   at java.security.AccessController.doPrivileged(AccessController.java:60)\r\n   at com.graphhopper.util.Helper.cleanMappedByteBuffer(Helper.java:366)\r\n   at com.graphhopper.storage.MMapDataAccess.clean(MMapDataAccess.java:356)\r\n   at com.graphhopper.storage.MMapDataAccess.close(MMapDataAccess.java:257)\r\n   at com.graphhopper.storage.MMapDataAccess.close(MMapDataAccess.java:249)\r\n   at com.graphhopper.storage.StorableProperties.close(StorableProperties.java:113)\r\n   at com.graphhopper.storage.GraphHopperStorage.close(GraphHopperStorage.java:277)\r\n   at com.graphhopper.GraphHopper.close(GraphHopper.java:1222)\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/914", "user": "devemux86", "labels": ["android", "bug"], "created": "2016-12-19 10:57:12", "closed": "2016-12-19 14:59:01", "commits": {"33d3d103db7cff5135ec4e9c9141c19f292d5559": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "c65fb9b04928b961198d4452f5de88ea04fb9ab9": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "33d3d103db7cff5135ec4e9c9141c19f292d5559", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c65fb9b04928b961198d4452f5de88ea04fb9ab9", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["637132044837ca6d525df5ea6d96a197bb8bedc7"], "nameRev": "c65fb9b04928b961198d4452f5de88ea04fb9ab9 tags/0.9.0~150", "commitMessage": "fix for exception on Android #914\n", "commitDateTime": "2016-12-19 15:58:34", "authoredDateTime": "2016-12-19 13:03:26", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/Helper.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Helper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Helper.cleanMappedByteBuffer(java.nio.ByteBuffer).1.run()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c65fb9b04928b961198d4452f5de88ea04fb9ab9"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4.0, "deletions": 1.0, "lines": 5.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 1.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.util.Helper.cleanMappedByteBuffer(java.nio.ByteBuffer).1.run()"]}, {"title": "bug in enforceHeadingByEdgeId ?", "body": "```\r\n@param incoming if true, incoming edge is unfavored, else outgoing edge\r\n```\r\n\r\nAm I correct in that this is not true? As far as I can see, `incoming` is not used, and both the incoming and outgoing edge are unfavoured.\r\n\r\nUse is for [map-matching issue 70](https://github.com/graphhopper/map-matching/issues/70)", "url": "https://github.com/graphhopper/graphhopper/issues/885", "user": "kodonnell", "labels": ["bug"], "created": "2016-11-23 17:54:11", "closed": "2016-12-16 23:26:24", "commits": {"ab8cdeb77c78d18e792da30850c8f1036df44bdb": {"commitGHEventType": "closed", "commitUser": "boldtrn"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "ab8cdeb77c78d18e792da30850c8f1036df44bdb", "commitGHEventType": "closed", "commitUser": "boldtrn", "commitParents": ["9d44c48980ba14650ce6cef0de4e054e8cf67dbf"], "nameRev": "ab8cdeb77c78d18e792da30850c8f1036df44bdb tags/0.9.0~153", "commitMessage": "Refactor unfavoring of virtual edges (#885) (#909)\n\n* Add/change test to show the issue described in #885\r\n\r\n* Refactor unfavoring of virtual edges (#885)\r\n\r\nAlso needed for graphhopper/map-matching#70\r\n\r\nFixes #885 ", "commitDateTime": "2016-12-17 10:26:21", "authoredDateTime": "2016-12-17 00:26:21", "commitGitStats": [{"filePath": "CONTRIBUTORS.md", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 36, "deletions": 19, "lines": 55}, {"filePath": "core/src/main/java/com/graphhopper/routing/template/ViaRoutingTemplate.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 9, "deletions": 8, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(int,int,boolean)", "TOT": 24, "UPD": 9, "INS": 0, "MOV": 12, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.clearUnfavoredStatus()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.enforceHeading(int,double,boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.unfavorVirtualEdgePair(int,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.getUnfavoredVirtualEdges()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ViaRoutingTemplate.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.template.ViaRoutingTemplate.calcPaths(com.graphhopper.routing.template.QueryGraph,com.graphhopper.routing.template.RoutingAlgorithmFactory,com.graphhopper.routing.template.AlgorithmOptions)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Android sample: Quick scale vs Long press", "body": "In Android sample (with [VTM](https://github.com/mapsforge/vtm)) performing the quick scale (double tap + swipe) gesture activates also the long press event on map events receiver, which we use for setting the waypoints.\r\n\r\nIt's a VTM issue, see https://github.com/mapsforge/vtm/issues/250, I just pushed the fix.\r\nLet's record it for Android sample too in case users wonder (don't know if it's fixable outside).\r\n\r\nSorry @karussell for the after release fix.. :slightly_frowning_face: ", "url": "https://github.com/graphhopper/graphhopper/issues/882", "user": "devemux86", "labels": ["android", "bug"], "created": "2016-11-22 18:46:30", "closed": "2017-02-26 13:18:03", "commits": {}, "ttf": 95.00027777777778, "commitsDetails": []}, {"title": "DataFlagEncoder Exception for maxSpeeds>140", "body": "I just tried importing an osm.pbf using the DataFlagEncoder. The pbf had an incorrect tagged way (already fixed in OSM):\r\n```\r\nError while parsing way Way id:33621384, nodes:8, tags:{estimated_distance=126.38279415810503, ref=L 75, maxspeed=5030, name=Hauptstra\u00dfe, width=6, highway=primary, estimated_center=48.431582248171765,7.811589713653692}\r\n```\r\n\r\nWe do not correct max speed values in the DataFlagEncoder if they are greater than 140.", "url": "https://github.com/graphhopper/graphhopper/issues/860", "user": "boldtrn", "labels": ["bug", "good first issue"], "created": "2016-11-09 02:35:08", "closed": "2016-11-11 11:17:05", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "mvn test & verify fails for web with strange error", "body": "Everytime I run this \r\n\r\n`mvn clean install test failsafe:integration-test verify`\r\n\r\nanother class was not found:\r\n\r\n```\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-assembly-plugin:2.4.1:single (make-assembly) on project graphhopper-web: Failed to create assembly: Error creating assembly archive with-dep: Problem creating jar: jar:file:/path/graphhopper/web/target/graphhopper-web-0.9-SNAPSHOT.jar!/com/graphhopper/http/HeadFilter.class: JAR entry com/graphhopper/http/HeadFilter.class not found in /path/graphhopper/web/target/graphhopper-web-0.9-SNAPSHOT.jar -> [Help 1]\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/859", "user": "karussell", "labels": ["architecture", "bug"], "created": "2016-11-08 11:43:17", "closed": "2016-11-08 12:43:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Route API returns 'null' when two points with same coordinates are given", "body": "The following URL returns a `null` on my graphhopper installation (tested with 0.7 and 0.8 snapshot (graphhopper-web-0.8-20161004.180136-82-bin.zip)):\n\n```\n/route?point=51.716819%2C8.745117&point=51.716819%2C8.745117&point=52.008555%2C8.513031&type=json&key=&locale=de-DE&vehicle=car&weighting=fastest&elevation=false&use_miles=false\n```\n\n[see my 0.8 installation here](http://dev02.loom-technologies.com:8991/route?point=51.730591%2C8.703121&point=51.730591%2C8.703121&point=51.869232%2C8.655377&type=json&key=&locale=de-DE&vehicle=car&weighting=fastest&elevation=false)\n\nThis workes fine on the official [graphhopper demo](https://graphhopper.com/maps/?point=51.716819%2C8.745117&point=51.716819%2C8.745117&point=52.008555%2C8.513031&locale=de-DE&vehicle=car&weighting=fastest&elevation=true&use_miles=false&layer=Omniscale) too.\n\nLog:\n\n```\n2016-10-18 15:06:36,142 [qtp910091170-15] INFO  com.graphhopper.http.GHBaseServlet - point=51.716819%2C8.745117&point=51.716819%2C8.745117&point=52.008555%2C8.513031&type=json&key=&locale=de-DE&vehicle=car&weighting=fastest&elevation=false&use_miles=false 172.17.0.1 de_DE Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.59 Safari/537.36 [51.716819,8.745117, 51.716819,8.745117, 52.008555,8.513031], took:0.00431475, , fastest, car, alternatives: 1, distance0: 45218.74921401323, time0: 30min, points0: 418, debugInfo: tmode:NODE_BASED; idLookup:0.002189374s; , algoInit:1.9797E-5s, dijkstrabiCH-routing:9.966E-6s, extract time:5.13E-7;, algoInit:9.69E-6s, dijkstrabiCH-routing:7.82693E-4s, extract time:6.3767E-5;, algoInit:1.9797E-5s, dijkstrabiCH-routing:9.966E-6s, extract time:5.13E-7;, algoInit:9.69E-6s, dijkstrabiCH-routing:7.82693E-4s, extract time:6.3767E-5, simplify (593->418)\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/840", "user": "edy", "labels": ["bug"], "created": "2016-10-18 15:09:24", "closed": "2016-10-18 19:33:18", "commits": {"c8c5d5c4841ff9bcd2f9fa9d97ec4888b13953d4": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c8c5d5c4841ff9bcd2f9fa9d97ec4888b13953d4", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["cdbece582de040206a9b12f17ef235fe72989ad2"], "nameRev": "c8c5d5c4841ff9bcd2f9fa9d97ec4888b13953d4 tags/0.8.2~2^2~1", "commitMessage": "bug in FinishCondition leading to descend=NaN and final 'null' serialization, fixed #840\n", "commitDateTime": "2016-10-18 21:27:15", "authoredDateTime": "2016-10-18 21:27:15", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/PathWrapper.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/util/FinishInstruction.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/test/java/com/graphhopper/util/FinishInstructionTest.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "web/src/main/java/com/graphhopper/http/GHBaseServlet.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperServlet.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PathWrapper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.PathWrapper.setAscend(double)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.PathWrapper.setDescend(double)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FinishInstruction.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.FinishInstruction", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 4}]}, {"spoonFilePath": "FinishInstructionTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.FinishInstructionTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHBaseServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GHBaseServlet.writeJsonError(javax.servlet.http.HttpServletResponse,int,org.json.JSONObject)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.GHBaseServlet.writeJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.json.JSONObject)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperServlet.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c8c5d5c4841ff9bcd2f9fa9d97ec4888b13953d4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 12, "lines": 25, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 20, "UPD": 3, "INS": 9, "MOV": 3, "DEL": 5, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util", "core/src/main/java/com/graphhopper", "web/src/main/java/com/graphhopper/http"], "changesInPackagesSPOON": ["com.graphhopper.PathWrapper.setDescend(double)", "com.graphhopper.http.GHBaseServlet.writeJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.json.JSONObject)", "com.graphhopper.http.GHBaseServlet.writeJsonError(javax.servlet.http.HttpServletResponse,int,org.json.JSONObject)", "com.graphhopper.util.FinishInstruction", "com.graphhopper.PathWrapper.setAscend(double)"]}, {"title": "GPX export no longer working", "body": "Probably the leaflet update or something else broke the GPX export. The dialog does no longer pop up nor an error message is printed in the console.\n", "url": "https://github.com/graphhopper/graphhopper/issues/820", "user": "karussell", "labels": ["bug", "web"], "created": "2016-10-05 16:23:52", "closed": "2016-10-06 06:16:16", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Right-Clicking multiple times on a marker creates duplicate menu entries", "body": "Minor UI glitch\n", "url": "https://github.com/graphhopper/graphhopper/issues/818", "user": "karussell", "labels": ["bug", "good first issue", "web"], "created": "2016-10-03 12:36:32", "closed": "2016-10-05 18:32:58", "commits": {"8bd2cb5a0702c8bf22f6903d57336de0daf66257": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "8bd2cb5a0702c8bf22f6903d57336de0daf66257", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["23d60d80bc1806ef9f8020c63a69ef09013e2b86"], "nameRev": "8bd2cb5a0702c8bf22f6903d57336de0daf66257 tags/0.8.0~16", "commitMessage": "Upgrade Leaflet.contextmenu to v1.0.1 #821, fixes #818\n\n", "commitDateTime": "2016-10-05 20:32:58", "authoredDateTime": "2016-10-05 20:32:58", "commitGitStats": [{"filePath": "web/src/main/webapp/css/leaflet.contextmenu.css", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "web/src/main/webapp/js/lib/leaflet.contextmenu.js", "insertions": 544, "deletions": 597, "lines": 1141}, {"filePath": "web/src/main/webapp/js/main-template.js", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "web/src/main/webapp/js/main.js", "insertions": 35, "deletions": 31, "lines": 66}, {"filePath": "web/src/main/webapp/js/map.js", "insertions": 45, "deletions": 68, "lines": 113}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Helper method wrong?", "body": "hey, i try to play with max turn costs in car flag encoder and when i chaged value to 2, get error message from EncodedValue class that say me that value 2 can't be writen by 1 bit, okaaaay lets see where it did...\nthat's AbstractFlagEncoder's method\n\n``` java\npublic int defineTurnBits( int index, int shift )\n    {\n        if (maxTurnCosts == 0)\n            return shift;\n        // optimization for turn restrictions only\n        else if (maxTurnCosts == 1)\n        {\n            turnRestrictionBit = 1L << shift;\n            return shift + 1;\n        }\n        int turnBits = Helper.countBitValue(maxTurnCosts);\n        turnCostEncoder = new EncodedValue(\"TurnCost\", shift, turnBits, 1, 0, maxTurnCosts)\n        ...\n```\n\nand this Helper's method\n\n``` java\npublic static int countBitValue( int maxTurnCosts )\n    {\n        double val = Math.log(maxTurnCosts) / Math.log(2);\n        int intVal = (int) val;\n        if (val == intVal)\n            return intVal;\n        return intVal + 1;\n    }\n```\n\nand now only example ;)\nlog(2)/log(2)=1\n(int) 1 = 1\n1 = 1 => return 1\nright?\nbut \"2\" is 10 in bit form and has 2 bits, not 1 \u00af_(\u30c4)_/\u00af\n", "url": "https://github.com/graphhopper/graphhopper/issues/809", "user": "FallenKain", "labels": ["bug"], "created": "2016-09-27 12:48:26", "closed": "2016-09-27 18:52:57", "commits": {"4c2bc177f9b1a6a74eadb8696a772ab07679b696": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4c2bc177f9b1a6a74eadb8696a772ab07679b696", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["9da912f559ab325e7442fbd1867468b3637260a8"], "nameRev": "4c2bc177f9b1a6a74eadb8696a772ab07679b696 tags/0.8.0~33", "commitMessage": "fix bug in bitcount helper, fixes #809\n", "commitDateTime": "2016-09-27 20:52:39", "authoredDateTime": "2016-09-27 20:52:39", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/Helper.java", "insertions": 9, "deletions": 5, "lines": 14}, {"filePath": "core/src/test/java/com/graphhopper/util/HelperTest.java", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Helper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Helper.countBitValue(int)", "TOT": 9, "UPD": 2, "INS": 3, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "HelperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.HelperTest.testCountBitValue()", "TOT": 7, "UPD": 0, "INS": 6, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4c2bc177f9b1a6a74eadb8696a772ab07679b696"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 5, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 2, "INS": 3, "MOV": 1, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.util.Helper.countBitValue(int)"]}, {"title": "ArrayIndexOutOfBoundsException for empty route", "body": "See the following route where start is identical to the first via point resulting in an empty route https://graphhopper.com/maps/?heading=297.130554&pass_through=true&heading_penalty=60&point=51.241141%2C6.789565&point=51.241141%2C6.789565&point=51.192537%2C6.797074&vehicle=bike&ch.disable=true\n\nwhich results in\n\n```\njava.lang.ArrayIndexOutOfBoundsException: -1\n        at gnu.trove.list.array.TIntArrayList.get(TIntArrayList.java:283)\n        at com.graphhopper.routing.Path.getFinalEdge(Path.java:216)\n        at com.graphhopper.routing.template.ViaRoutingTemplate.calcPaths(ViaRoutingTemplate.java:97)\n        at com.graphhopper.GraphHopper.calcPaths(GraphHopper.java:1119)\n        at com.graphhopper.GraphHopper.route(GraphHopper.java:1022)\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/788", "user": "karussell", "labels": ["bug"], "created": "2016-09-09 14:51:05", "closed": "2016-09-14 07:46:53", "commits": {"de2703820870fa30fb1bb1a514cb26d781464022": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "de2703820870fa30fb1bb1a514cb26d781464022", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["c9a9adad70c1ae0830387eed4da02d4c40e03ecd"], "nameRev": "de2703820870fa30fb1bb1a514cb26d781464022 tags/0.8.0~46", "commitMessage": "avoid ArrayIndexOutOfBoundsException for empty route #788\n", "commitDateTime": "2016-09-14 09:40:01", "authoredDateTime": "2016-09-14 09:40:01", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/Path.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/template/ViaRoutingTemplate.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Path.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.Path.getEdgeCount()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ViaRoutingTemplate.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.template.ViaRoutingTemplate.calcPaths(com.graphhopper.routing.template.QueryGraph,com.graphhopper.routing.template.RoutingAlgorithmFactory,com.graphhopper.routing.template.AlgorithmOptions)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "GraphHopperIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperIT.testMonacoStraightVia()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["de2703820870fa30fb1bb1a514cb26d781464022"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 2, "lines": 10, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 6, "MOV": 2, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/template", "core/src/main/java/com/graphhopper/routing"], "changesInPackagesSPOON": ["com.graphhopper.GraphHopperIT.testMonacoStraightVia()", "com.graphhopper.routing.Path.getEdgeCount()", "com.graphhopper.routing.template.ViaRoutingTemplate.calcPaths(com.graphhopper.routing.template.QueryGraph,com.graphhopper.routing.template.RoutingAlgorithmFactory,com.graphhopper.routing.template.AlgorithmOptions)"]}, {"title": "Wrong access for bike routing or just wrong osm tagging?", "body": "See [this route](https://graphhopper.com/maps/?point=51.167844%2C10.336702&point=51.166508%2C10.342619&vehicle=bike&layer=TF%20Cycle) where the cycleway is not used\n", "url": "https://github.com/graphhopper/graphhopper/issues/765", "user": "karussell", "labels": ["bug", "osm"], "created": "2016-08-09 17:06:01", "closed": "2016-08-09 17:07:34", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Throw proper exception if elevation provider is not available", "body": "See discussion [here](https://discuss.graphhopper.com/t/arrayindexoutofboundsexception-when-creating-graph-with-elevation/903)\n", "url": "https://github.com/graphhopper/graphhopper/issues/763", "user": "karussell", "labels": ["bug"], "created": "2016-08-07 10:10:13", "closed": "2016-08-08 12:30:52", "commits": {"33a268811aaae53358263503ad850506e1488669": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "c83ab2cffe4e409110577ca2ece6d687e106e6a1": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "33a268811aaae53358263503ad850506e1488669", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["95984b0c026063f8cdd8061e6b65a91e430f9f47"], "nameRev": "33a268811aaae53358263503ad850506e1488669 tags/0.8.0~82", "commitMessage": "switch srtm provider from http to https, related #763\n", "commitDateTime": "2016-08-07 17:55:42", "authoredDateTime": "2016-08-07 17:55:42", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/dem/SRTMProvider.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SRTMProvider.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.dem.SRTMProvider", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c83ab2cffe4e409110577ca2ece6d687e106e6a1", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["33a268811aaae53358263503ad850506e1488669"], "nameRev": "c83ab2cffe4e409110577ca2ece6d687e106e6a1 tags/0.8.0~81", "commitMessage": "for SRTM we can have more strict failing (unlike CGIAR) as we know the allowed areas up front, fixes #763\n", "commitDateTime": "2016-08-08 14:29:58", "authoredDateTime": "2016-08-08 14:29:58", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/dem/SRTMProvider.java", "insertions": 2, "deletions": 7, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SRTMProvider.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.dem.SRTMProvider.getByteArrayFromZipFile(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.reader.dem.SRTMProvider.getEle(double,double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["33a268811aaae53358263503ad850506e1488669", "c83ab2cffe4e409110577ca2ece6d687e106e6a1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 3, "deletions": 8, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/reader/dem"], "changesInPackagesSPOON": ["com.graphhopper.reader.dem.SRTMProvider.getByteArrayFromZipFile(java.lang.String)", "com.graphhopper.reader.dem.SRTMProvider", "com.graphhopper.reader.dem.SRTMProvider.getEle(double,double)"]}, {"title": "Wrong subnetwork detections&removal leads to a more disconnected graph", "body": "There is a problem (for motor vehicles only) [here](https://graphhopper.com/maps/?point=-22.230613%2C166.531019&point=-22.229183%2C166.533455) and [here](https://graphhopper.com/maps/?point=-22.229123%2C166.533959&point=-22.229704%2C166.536518), screenshots:\n\n![routing-bug](https://cloud.githubusercontent.com/assets/129644/17360994/71ec9a48-596e-11e6-8df9-3f2a1b92f15d.png)\n\nNo connection found although no access restriction nor barrier node was found which could causing this. I can also not reproduce this when downloading the whole island (works as expected) so it could be some subnetwork-removal bug or a data issue which is now already cleaned up. Does someone know how to get the OSM of a certain time? For now closing here, as [the specific road](http://www.openstreetmap.org/way/414570614) also contained a oneway bug which is [now removed](http://www.openstreetmap.org/changeset/41209955) and will very likely fix the problem\n", "url": "https://github.com/graphhopper/graphhopper/issues/761", "user": "karussell", "labels": ["bug"], "created": "2016-08-03 09:32:50", "closed": "2020-05-14 18:11:35", "commits": {"fefa7cecfce3b978cc5fb30cf2042fe21eb7b999": {"commitGHEventType": "referenced", "commitUser": "easbar"}}, "ttf": 1380.0002777777777, "commitsDetails": [{"commitHash": "fefa7cecfce3b978cc5fb30cf2042fe21eb7b999", "commitGHEventType": "referenced", "commitUser": "easbar", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "spoonStatsSummary": {}, "statsSkippedReason": ""}, {"title": "GraphHopper interprets OSM vehicle=private as foot=no", "body": "GraphHopper interprets OSM vehicle=private as foot=no.\nExample: OSM Residential [Road #37707545](http://www.openstreetmap.org/way/37707545) (you cannot walk through).\n\nSuggested fix: Restore the old code of FootFlagEncoder.java shown in the attached difference of \n23effe6b47da4a631f47640a99675fbff181efc2 (Apr 17, 2016) and 489b977e5799ff1e0f60011f92fcf6942114e4d9 (Apr 30, 2016).\n![footflagencoder_diff](https://cloud.githubusercontent.com/assets/20322922/16656862/916adaf6-4460-11e6-9dd9-2c3457d8e4fe.jpg)\n", "url": "https://github.com/graphhopper/graphhopper/issues/752", "user": "wschenke", "labels": ["bug", "osm"], "created": "2016-07-07 14:41:55", "closed": "2016-07-07 16:23:24", "commits": {"ffc255c9639aea8c9cc8808b8de183bd460b99b6": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ffc255c9639aea8c9cc8808b8de183bd460b99b6", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["0528dc3958f0d14407c4e96fe681a0a8b42eba36"], "nameRev": "ffc255c9639aea8c9cc8808b8de183bd460b99b6 tags/0.8.0~112", "commitMessage": "fixing problem with foot access, fixes #752\n", "commitDateTime": "2016-07-07 18:23:18", "authoredDateTime": "2016-07-07 18:23:18", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/FootFlagEncoderTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "FootFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoderTest.testAccess()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ffc255c9639aea8c9cc8808b8de183bd460b99b6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.FootFlagEncoder"]}, {"title": "CH Preparation sometimes not complete for tests", "body": "I've stumbled over this problem only in the tests so far and it happens very rarely (maybe only on slow virtual computers?):\n\n```\njava.lang.AssertionError: Properties for fastest_mtb should NOT contain error CH preparation incomplete [5]\n    at com.graphhopper.GraphHopperTest.testMultipleCHPreparationsInParallel(GraphHopperTest.java:894)\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/743", "user": "karussell", "labels": ["bug"], "created": "2016-06-15 12:19:18", "closed": "2016-09-15 11:06:56", "commits": {"933de657986080e857436b10e22f5df3e8436790": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 91.00027777777778, "commitsDetails": [{"commitHash": "933de657986080e857436b10e22f5df3e8436790", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["5b2662ec6e22af337518872d292bbfb69c67f20c"], "nameRev": "933de657986080e857436b10e22f5df3e8436790 tags/0.8.0~44", "commitMessage": "make StorableProperties thread safe, fixes #743\n", "commitDateTime": "2016-09-15 12:57:56", "authoredDateTime": "2016-09-15 12:57:56", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/storage/StorableProperties.java", "insertions": 21, "deletions": 23, "lines": 44}], "commitSpoonAstDiffStats": [{"spoonFilePath": "StorableProperties.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.StorableProperties.copyTo(com.graphhopper.storage.StorableProperties)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.putAll(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.loadExisting()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.flush()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.remove(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.put(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.put(java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.get(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.isClosed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.create(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.getCapacity()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.putCurrentVersions()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.versionsToString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.checkVersions(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.StorableProperties.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["933de657986080e857436b10e22f5df3e8436790"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 23, "lines": 44, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 17, "UPD": 0, "INS": 15, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 16}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.storage.StorableProperties.create(long)", "com.graphhopper.storage.StorableProperties.versionsToString()", "com.graphhopper.storage.StorableProperties.checkVersions(boolean)", "com.graphhopper.storage.StorableProperties.toString()", "com.graphhopper.storage.StorableProperties.remove(java.lang.String)", "com.graphhopper.storage.StorableProperties.putAll(java.util.Map)", "com.graphhopper.storage.StorableProperties.flush()", "com.graphhopper.storage.StorableProperties.isClosed()", "com.graphhopper.storage.StorableProperties.put(java.lang.String,java.lang.Object)", "com.graphhopper.storage.StorableProperties.copyTo(com.graphhopper.storage.StorableProperties)", "com.graphhopper.storage.StorableProperties.putCurrentVersions()", "com.graphhopper.storage.StorableProperties.get(java.lang.String)", "com.graphhopper.storage.StorableProperties.put(java.lang.String,java.lang.String)", "com.graphhopper.storage.StorableProperties.getCapacity()", "com.graphhopper.storage.StorableProperties.close()", "com.graphhopper.storage.StorableProperties.loadExisting()"]}, {"title": "CH-routing speed regression after merge", "body": "After [this merge](https://github.com/graphhopper/graphhopper/compare/e7804a6...1ad1391) the CH routing speed dropped from ~3.3ms to >5ms (Germany, car, mean value). Either this is a measurement bug or a real perf problem. \n\nAnd something more is wrong: the speed for \"no instructions\" (CH routing) is slower than \"with instructions\".\n\nBoth issues can be reproduced independent on the used area when comparing repo at commit 'e7804a6' (before merge) vs. '1ad1391' (after merge) and that although the same node count is visited.\n", "url": "https://github.com/graphhopper/graphhopper/issues/715", "user": "karussell", "labels": ["bug"], "created": "2016-05-06 09:12:34", "closed": "2016-05-06 14:11:26", "commits": {"64b09e5ed4fcb9ad46f4b54bcd5747715552fe85": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "64b09e5ed4fcb9ad46f4b54bcd5747715552fe85", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["c54e570055598eea3e05a8799b349f813774cd3a"], "nameRev": "64b09e5ed4fcb9ad46f4b54bcd5747715552fe85 tags/0.7.0~86", "commitMessage": "make performance align with old measurement #715\n", "commitDateTime": "2016-05-06 15:06:31", "authoredDateTime": "2016-05-06 15:06:15", "commitGitStats": [{"filePath": "tools/src/main/java/com/graphhopper/tools/Measurement.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Measurement.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.tools.Measurement.start(com.graphhopper.tools.CmdArgs)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["64b09e5ed4fcb9ad46f4b54bcd5747715552fe85"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["tools/src/main/java/com/graphhopper/tools"], "changesInPackagesSPOON": ["com.graphhopper.tools.Measurement.start(com.graphhopper.tools.CmdArgs)"]}, {"title": "Android demo on master has problems to access local storage", "body": "I was using Graphhopper android project in my project. it was working super fine before the recent updation in the graphhopper.java file of GitGub repository. i posted this issue on stackoverflow but didn't get answer. here is the link. [http://stackoverflow.com/questions/36679112/an-error-happened-while-creating-graph-path-storage-emulated-0-graphhopper-maps].\n\n> directory is present in phone memory.. the app downloads maps and when it comes to open maps it start giving the error shown in figure.\n> i am using the demo android project of GitHub repository.\n> and by apk version, if you are asking about graphhopper then it is 0.7\n", "url": "https://github.com/graphhopper/graphhopper/issues/704", "user": "basitobaid", "labels": ["android", "bug"], "created": "2016-04-18 15:01:29", "closed": "2016-04-24 15:01:25", "commits": {"910af2f0d52da9f496e15ba8e92230fe3aa49df2": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "910af2f0d52da9f496e15ba8e92230fe3aa49df2", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["b788925335650b2139e14ced5a99440580a50432"], "nameRev": "910af2f0d52da9f496e15ba8e92230fe3aa49df2 tags/0.7.0~97^2~1", "commitMessage": "no automatic fallback to 'folder-gh' is happening anymore, see #704\n", "commitDateTime": "2016-04-19 13:07:15", "authoredDateTime": "2016-04-19 13:06:52", "commitGitStats": [{"filePath": "android/app/src/main/java/com/graphhopper/android/MainActivity.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/files/changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainActivity.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.MainActivity.loadGraphStorage().7.saveDoInBackground(java.lang.Void[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["910af2f0d52da9f496e15ba8e92230fe3aa49df2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["android/app/src/main/java/com/graphhopper/android"], "changesInPackagesSPOON": ["com.graphhopper.android.MainActivity.loadGraphStorage().7.saveDoInBackground(java.lang.Void[])"]}, {"title": "UI: if street and housenumber no street name is displayed for completion", "body": "", "url": "https://github.com/graphhopper/graphhopper/issues/685", "user": "karussell", "labels": ["bug", "web"], "created": "2016-03-14 07:42:16", "closed": "2016-03-14 07:43:21", "commits": {"c6d1d7dc8bad82280f79ea7da9a45385b4fbd91f": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c6d1d7dc8bad82280f79ea7da9a45385b4fbd91f", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["ffd0ae5325b2e04b6737cc68ceffdfad772215e6"], "nameRev": "c6d1d7dc8bad82280f79ea7da9a45385b4fbd91f tags/0.7.0~92^2~12", "commitMessage": "UI: display street name if no entry name, #685\n", "commitDateTime": "2016-03-14 08:43:11", "authoredDateTime": "2016-03-14 08:42:38", "commitGitStats": [{"filePath": "web/src/main/webapp/js/autocomplete.js", "insertions": 16, "deletions": 3, "lines": 19}, {"filePath": "web/src/main/webapp/js/main.js", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c6d1d7dc8bad82280f79ea7da9a45385b4fbd91f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 5, "lines": 23, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/webapp/js/main.js", "web/src/main/webapp/js/autocomplete.js"]}, {"title": "lookup bug for edges crossing the +-180\u00b0 boundary", "body": "Very special case. Not really interesting for road networks but important [for waterways](https://discuss.graphhopper.com/t/finding-the-closest-point-in-a-map-points-and-highways/501). See discussion [here](https://discuss.graphhopper.com/t/finding-the-closest-point-in-a-map-points-and-highways/501).\n\nThe problem is that we cannot really detect when an edge is intended to cross the boundary. So we use a simple heuristic `Math.abs(longitude1 - longitude2) > 300` which should work for rather distant edges crossing the boundary (up to `60\u00b0`, but see recommendation of just `0\u00b0`) and it should not be enabled unintentionally for long non-crossing edges (`<300\u00b0`). But you should be able to inject your own `DistanceCalc` implementation.\n\nFor the solution three minor adjustments are necessary:\n1. while creating the location index we ignore the edge (or edge part) which are \"cross boundary\" otherwise many cells are filled from -180 to +180\u00b0 mixing elsewhere into search results \n2. when querying the index we have to ignore the edge parts which are \"cross boundary\" otherwise they could be very close to longitudes where they are not crossing.\n3. all distance calculations involving the cross boundary edge are wrong and need special handling\n4. adjust your import so that edges or edge parts crossing the boundary are of length 0 and can be ignored in step 2 and 3 without approximations\n\nStep 1 until 3 are implemented through this issue still adjustment of your import is necessary (step 4). Although we could have implemented splitting the edges while indexing and querying we have decided for a minimal invasive solution, requiring the adjustment of your import.\n## Recommendation how to adjust your import\n\nAssume you have an `edgeIterator` going \"cross boundary\" from `5,-179.5` to `6,179.5` without any pillar nodes ([see here for the docs](https://github.com/graphhopper/graphhopper/blob/master/docs/core/low-level-api.md#what-are-pillar-and-tower-nodes)). Then everything will work, if you insert two pillar nodes to make the edge part of length 0, the first and 3rd edge parts are not crossing boundaries only the 2nd:\n\n``` java\npointList = new PointList();\npointList.add(5.5, -180);\npointList.add(5.5, 180);\nedgeIterator.setWayGeometry(pointList);\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/667", "user": "karussell", "labels": ["bug"], "created": "2016-02-19 15:34:25", "closed": "2016-02-23 12:19:44", "commits": {"551faf94b3f81f60bceae24b9d5e75fd9ead8734": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "551faf94b3f81f60bceae24b9d5e75fd9ead8734", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["4092e13b1b69c17f065446ea7c702c2bf7651b04"], "nameRev": "551faf94b3f81f60bceae24b9d5e75fd9ead8734 tags/0.7.0~92^2~24", "commitMessage": "fixing cross boundary edge case #667\n", "commitDateTime": "2016-02-23 13:19:33", "authoredDateTime": "2016-02-23 13:19:17", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/OSMReader.java", "insertions": 21, "deletions": 28, "lines": 49}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/BresenhamLine.java", "insertions": 5, "deletions": 181, "lines": 186}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/LocationIndexTree.java", "insertions": 14, "deletions": 3, "lines": 17}, {"filePath": "core/src/main/java/com/graphhopper/util/DistanceCalc.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/util/DistanceCalcEarth.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "core/src/test/java/com/graphhopper/reader/OSMReaderTest.java", "insertions": 19, "deletions": 1, "lines": 20}, {"filePath": "core/src/test/java/com/graphhopper/storage/index/BresenhamLineTest.java", "insertions": 0, "deletions": 8, "lines": 8}, {"filePath": "core/src/test/java/com/graphhopper/storage/index/LocationIndexTreeTest.java", "insertions": 46, "deletions": 0, "lines": 46}, {"filePath": "core/src/test/resources/com/graphhopper/reader/test-osm-waterway.xml", "insertions": 32, "deletions": 0, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMReader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReader.addEdge(int,int,com.graphhopper.reader.PointList,long,long)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "BresenhamLine.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.BresenhamLine.voxelTraversal(double,double,double,double,com.graphhopper.storage.index.PointEmitter)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.index.BresenhamLine.fix(double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.index.BresenhamLine.frac(double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.index.BresenhamLine.xiaolinWu(double,double,double,double,com.graphhopper.storage.index.PointEmitter)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LocationIndexTree.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.addNode(int,int,double,double,double,double)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.XFirstSearchCheck.checkAdjacent(com.graphhopper.storage.index.EdgeIteratorState)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DistanceCalc.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.isCrossBoundary(double,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DistanceCalcEarth.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.DistanceCalcEarth.isCrossBoundary(double,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OSMReaderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testCrossBoundary_issue667()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BresenhamLineTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LocationIndexTreeTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTreeTest.testCrossBoundaryNetwork_issue667()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["551faf94b3f81f60bceae24b9d5e75fd9ead8734"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 55, "deletions": 214, "lines": 269, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 13, "UPD": 0, "INS": 6, "MOV": 3, "DEL": 4, "spoonFilesChanged": 5, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/reader", "core/src/main/java/com/graphhopper/storage/index", "core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.storage.index.BresenhamLine.xiaolinWu(double,double,double,double,com.graphhopper.storage.index.PointEmitter)", "com.graphhopper.storage.index.BresenhamLine.frac(double)", "com.graphhopper.storage.index.LocationIndexTree.XFirstSearchCheck.checkAdjacent(com.graphhopper.storage.index.EdgeIteratorState)", "com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.addNode(int,int,double,double,double,double)", "com.graphhopper.storage.index.BresenhamLine.fix(double)", "com.graphhopper.util.DistanceCalcEarth.isCrossBoundary(double,double)", "com.graphhopper.reader.OSMReader.addEdge(int,int,com.graphhopper.reader.PointList,long,long)", "com.graphhopper.storage.index.BresenhamLine.voxelTraversal(double,double,double,double,com.graphhopper.storage.index.PointEmitter)", "com.graphhopper.util.isCrossBoundary(double,double)"]}, {"title": "Curvature Weighting produces Exception for Path#calcMillis", "body": "As discussed [here](https://discuss.graphhopper.com/t/calculating-time-should-not-require-to-read-speed-from-edge-in-wrong-direction/509/9), there are cases that result in an Exception using the CurvatureWeighting.\n\nInteresting is that in these cases the speed for that edge is 0, but we never set an edge to speed 0 using the getSpeed() method in the CarEncoder.\n\nThe weighting returns 0. And we get the following Exception:\n\n```\njava.lang.IllegalStateException: Calculating time should not require to read speed from edge in wrong direction. Reverse:false, fwd:false, bwd:true\n    at com.graphhopper.routing.Path.calcMillis(Path.java:266)\n    at com.graphhopper.routing.Path.processEdge(Path.java:238)\n    at com.graphhopper.routing.PathBidirRef.extract(PathBidirRef.java:95)\n    at com.graphhopper.routing.DijkstraBidirectionRef.extractPath(DijkstraBidirectionRef.java:132)\n    at com.graphhopper.routing.AbstractBidirAlgo.calcPath(AbstractBidirAlgo.java:64)\n    at com.graphhopper.routing.AbstractRoutingAlgorithm.calcPaths(AbstractRoutingAlgorithm.java:121)\n    at com.graphhopper.GraphHopper.calcPaths(GraphHopper.java:1327)\n```\n\nTo reproduce this Exception, load the current germany.osm.pbf. And visit this URL: http://localhost:8989/?point=48.873748%2C8.412781&point=49.099864%2C7.993197&locale=de-DE&vehicle=motorcycle&weighting=curvature&elevation=false&layer=Omniscale\n", "url": "https://github.com/graphhopper/graphhopper/issues/665", "user": "boldtrn", "labels": ["bug"], "created": "2016-02-17 15:51:50", "closed": "2016-04-30 14:47:10", "commits": {"beb756f40270b819bcdc1763bebcc6eddd14a882": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "23effe6b47da4a631f47640a99675fbff181efc2": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 72.00027777777778, "commitsDetails": [{"commitHash": "beb756f40270b819bcdc1763bebcc6eddd14a882", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "23effe6b47da4a631f47640a99675fbff181efc2", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["3561f052f6ca2f10af106e051a551b338f390d1b"], "nameRev": "23effe6b47da4a631f47640a99675fbff181efc2 tags/0.7.0~91^2", "commitMessage": "reproducing & fixing the error in #665\n", "commitDateTime": "2016-04-29 17:42:10", "authoredDateTime": "2016-04-17 23:19:26", "commitGitStats": [{"filePath": "CONTRIBUTORS.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/files/changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java", "insertions": 8, "deletions": 12, "lines": 20}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java", "insertions": 9, "deletions": 8, "lines": 17}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 11, "deletions": 10, "lines": 21}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java", "insertions": 16, "deletions": 14, "lines": 30}, {"filePath": "core/src/test/java/com/graphhopper/reader/OSMReaderTest.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/Bike2WeightFlagEncoderTest.java", "insertions": 40, "deletions": 3, "lines": 43}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/test/resources/com/graphhopper/reader/test-osm7.xml", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "docs/core/create-new-flagencoder.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay,double,double,double)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.util.AbstractFlagEncoder.getFerrySpeed(com.graphhopper.reader.OSMWay,double,double,double)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BikeCommonFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "TOT": 16, "UPD": 13, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CarFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "TOT": 16, "UPD": 11, "INS": 3, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "TOT": 22, "UPD": 14, "INS": 2, "MOV": 5, "DEL": 1}]}, {"spoonFilePath": "MotorcycleFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.MotorcycleFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "TOT": 25, "UPD": 21, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "OSMReaderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReaderTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testRoutingRequestFails_issue665()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Bike2WeightFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.initExampleGraph()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testRoutingFailsWithInvalidGraph_issue665()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.isGraphValid(com.graphhopper.routing.util.Graph,com.graphhopper.routing.util.FlagEncoder)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CarFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest.testRailway()", "TOT": 21, "UPD": 5, "INS": 1, "MOV": 15, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["23effe6b47da4a631f47640a99675fbff181efc2"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 54.0, "deletions": 53.0, "lines": 107.0, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 87.0, "UPD": 61.0, "INS": 13.0, "MOV": 8.0, "DEL": 5.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.CarFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay,double,double,double)", "com.graphhopper.routing.util.BikeCommonFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "com.graphhopper.routing.util.AbstractFlagEncoder.getFerrySpeed(com.graphhopper.reader.OSMWay,double,double,double)", "com.graphhopper.routing.util.MotorcycleFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "com.graphhopper.routing.util.FootFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)"]}, {"title": "DateRangeParserTest fails", "body": "Compiling the current master on windows using jdk1.8.0_66 creates following error\n\n```\n-------------------------------------------------------------------------------\nTest set: com.graphhopper.reader.osm.conditional.DateRangeParserTest\n-------------------------------------------------------------------------------\nTests run: 17, Failures: 1, Errors: 4, Skipped: 0, Time elapsed: 0.031 sec <<< FAILURE! - in com.graphhopper.reader.osm.conditional.DateRangeParserTest\ntestParseSimpleDateRangeWithoutYearAndDay2(com.graphhopper.reader.osm.conditional.DateRangeParserTest)  Time elapsed: 0 sec  <<< ERROR!\njava.text.ParseException: Unparseable date: \"Mar\"\n    at com.graphhopper.reader.osm.conditional.DateRangeParser.parseDateString(DateRangeParser.java:84)\n    at com.graphhopper.reader.osm.conditional.DateRangeParser.parseDateRange(DateRangeParser.java:107)\n    at com.graphhopper.reader.osm.conditional.DateRangeParserTest.testParseSimpleDateRangeWithoutYearAndDay2(DateRangeParserTest.java:78)\n\ntestParseConditional(com.graphhopper.reader.osm.conditional.DateRangeParserTest)  Time elapsed: 0 sec  <<< ERROR!\njava.text.ParseException: Unparseable date: \"2014 Dec 15\"\n    at com.graphhopper.reader.osm.conditional.DateRangeParser.parseDateString(DateRangeParser.java:84)\n    at com.graphhopper.reader.osm.conditional.DateRangeParserTest.assertSameDate(DateRangeParserTest.java:214)\n    at com.graphhopper.reader.osm.conditional.DateRangeParserTest.testParseConditional(DateRangeParserTest.java:36)\n\ntestParseReverseDateRangeDayOnly(com.graphhopper.reader.osm.conditional.DateRangeParserTest)  Time elapsed: 0 sec  <<< FAILURE!\njava.lang.AssertionError: null\n    at org.junit.Assert.fail(Assert.java:86)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.junit.Assert.assertTrue(Assert.java:52)\n    at com.graphhopper.reader.osm.conditional.DateRangeParserTest.testParseReverseDateRangeDayOnly(DateRangeParserTest.java:199)\n\ntestParseReverseDateRange(com.graphhopper.reader.osm.conditional.DateRangeParserTest)  Time elapsed: 0 sec  <<< ERROR!\njava.text.ParseException: Unparseable date: \"2015 Mar 10\"\n    at com.graphhopper.reader.osm.conditional.DateRangeParser.parseDateString(DateRangeParser.java:84)\n    at com.graphhopper.reader.osm.conditional.DateRangeParser.parseDateRange(DateRangeParser.java:110)\n    at com.graphhopper.reader.osm.conditional.DateRangeParserTest.testParseReverseDateRange(DateRangeParserTest.java:88)\n\ntestParseReverseDateRangeWithoutYearAndDay(com.graphhopper.reader.osm.conditional.DateRangeParserTest)  Time elapsed: 0 sec  <<< ERROR!\njava.text.ParseException: Unparseable date: \"Mar\"\n    at com.graphhopper.reader.osm.conditional.DateRangeParser.parseDateString(DateRangeParser.java:84)\n    at com.graphhopper.reader.osm.conditional.DateRangeParser.parseDateRange(DateRangeParser.java:110)\n    at com.graphhopper.reader.osm.conditional.DateRangeParserTest.testParseReverseDateRangeWithoutYearAndDay(DateRangeParserTest.java:111)\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/647", "user": "ratrun", "labels": ["architecture", "bug"], "created": "2016-01-22 17:50:26", "closed": "2016-01-23 11:57:39", "commits": {"63893721020d85be835143490ff62b7deec0ec16": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "63893721020d85be835143490ff62b7deec0ec16", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["7fb728d10fc42bce21ae1a0093ecdae5efa53211"], "nameRev": "63893721020d85be835143490ff62b7deec0ec16 tags/0.6.0-RC1~5", "commitMessage": "init Calendar and SimpleDateFormat with locale and TimeZone, fixes #647\n", "commitDateTime": "2016-01-23 12:55:31", "authoredDateTime": "2016-01-23 12:52:12", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/osm/{ => conditional}/ConditionalTagsInspector.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "core/src/main/java/com/graphhopper/reader/osm/conditional/DateRange.java", "insertions": 27, "deletions": 7, "lines": 34}, {"filePath": "core/src/main/java/com/graphhopper/reader/osm/conditional/DateRangeParser.java", "insertions": 23, "deletions": 14, "lines": 37}, {"filePath": "core/src/main/java/com/graphhopper/reader/osm/conditional/ParsedCalendar.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/reader/pbf/PbfBlobDecoder.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/util/Helper.java", "insertions": 12, "deletions": 3, "lines": 15}, {"filePath": "core/src/test/java/com/graphhopper/reader/osm/{ => conditional}/CalendarBasedTest.java", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "core/src/test/java/com/graphhopper/reader/osm/conditional/ConditionalParserTest.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/reader/osm/{ => conditional}/ConditionalTagsInspectorTest.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "core/src/test/java/com/graphhopper/reader/osm/conditional/DateRangeParserTest.java", "insertions": 15, "deletions": 3, "lines": 18}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/AbstractBikeFlagEncoderTester.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/FootFlagEncoderTest.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/MotorcycleFlagEncoderTest.java", "insertions": 5, "deletions": 6, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ConditionalTagsInspector.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspector", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspector.isRestrictedWayConditionallyPermitted(com.graphhopper.reader.OSMWay)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspector.isPermittedWayConditionallyRestricted(com.graphhopper.reader.OSMWay)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspector.applies(com.graphhopper.reader.OSMWay,boolean)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DateRange.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRange.toString()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRange", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRange.isInRange(java.util.Calendar)", "TOT": 9, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "DateRangeParser.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRangeParser", "TOT": 31, "UPD": 7, "INS": 17, "MOV": 1, "DEL": 6}, {"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRangeParser.parseDateString(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRangeParser.createCalendar()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ParsedCalendar.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.conditional.ParsedCalendar.toString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "PbfBlobDecoder.java", "spoonMethods": []}, {"spoonFilePath": "AbstractFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.AbstractFlagEncoder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BikeCommonFlagEncoder.java", "spoonMethods": []}, {"spoonFilePath": "CarFlagEncoder.java", "spoonMethods": []}, {"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": []}, {"spoonFilePath": "MotorcycleFlagEncoder.java", "spoonMethods": []}, {"spoonFilePath": "Helper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Helper.createFormatter()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.Helper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.Helper.createFormatter(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CalendarBasedTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.CalendarBasedTest.getCalendar(int,int,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConditionalParserTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.conditional.ConditionalParserTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConditionalTagsInspectorTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspectorTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspectorTest.testConditionalAccept()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspectorTest.testConditionalAcceptNextYear()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspectorTest.testConditionalReject()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspectorTest.testConditionalAllowance()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspectorTest.testConditionalAllowanceReject()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspectorTest.testConditionalSingleDay()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.ConditionalTagsInspectorTest.testConditionalAllowanceSingleDay()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DateRangeParserTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRangeParserTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRangeParserTest.testToString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRangeParserTest.testParseSingleDateRangeDayOnly()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRangeParserTest.testParseReverseDateRangeDayOnly()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractBikeFlagEncoderTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.AbstractBikeFlagEncoderTester.testAccess()", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 4}]}, {"spoonFilePath": "CarFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest.testAccess()", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 4}]}, {"spoonFilePath": "FootFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoderTest.testAccess()", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 4}]}, {"spoonFilePath": "MotorcycleFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testAccess()", "TOT": 8, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["63893721020d85be835143490ff62b7deec0ec16"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 74, "deletions": 36, "lines": 110, "gitFilesChange": 11}, "spoonStatsSummary": {"TOT": 79, "UPD": 30, "INS": 32, "MOV": 5, "DEL": 12, "spoonFilesChanged": 6, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util", "core/src/main/java/com/graphhopper/reader/osm/conditional", "core/src/main/java/com/graphhopper/reader/pbf", "core/src/main/java/com/graphhopper/reader/osm/{ => conditional}", "core/src/main/java/com/graphhopper/routing/util"], "changesInPackagesSPOON": ["com.graphhopper.reader.osm.ConditionalTagsInspector.applies(com.graphhopper.reader.OSMWay,boolean)", "com.graphhopper.reader.osm.conditional.DateRangeParser.createCalendar()", "com.graphhopper.reader.osm.conditional.DateRangeParser", "com.graphhopper.reader.osm.conditional.DateRange.isInRange(java.util.Calendar)", "com.graphhopper.reader.osm.ConditionalTagsInspector.isPermittedWayConditionallyRestricted(com.graphhopper.reader.OSMWay)", "com.graphhopper.util.Helper", "com.graphhopper.reader.osm.ConditionalTagsInspector", "com.graphhopper.reader.osm.conditional.DateRange", "com.graphhopper.routing.util.AbstractFlagEncoder", "com.graphhopper.reader.osm.ConditionalTagsInspector.isRestrictedWayConditionallyPermitted(com.graphhopper.reader.OSMWay)", "com.graphhopper.util.Helper.createFormatter()", "com.graphhopper.util.Helper.createFormatter(java.lang.String)", "com.graphhopper.reader.osm.conditional.DateRangeParser.parseDateString(java.lang.String)", "com.graphhopper.reader.osm.conditional.ParsedCalendar.toString()", "com.graphhopper.reader.osm.conditional.DateRange.toString()"]}, {"title": "Conditional access intervals should recognize the full month or just the start for the end?", "body": "If 'Aug 10-Dec' is used then currently all days in December do not lay inside this interval. Is this according to the wiki or do we need to fix this?\n\nExample http://www.openstreetmap.org/way/44158212\n", "url": "https://github.com/graphhopper/graphhopper/issues/645", "user": "karussell", "labels": ["bug"], "created": "2016-01-20 12:30:13", "closed": "2016-01-20 15:37:45", "commits": {"dedd6492afadc35441f6b8715feda903078b1447": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "dedd6492afadc35441f6b8715feda903078b1447", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["b08aa793442542c7467259ac4624ac0942fa67e9"], "nameRev": "dedd6492afadc35441f6b8715feda903078b1447 tags/0.6.0-RC1~10", "commitMessage": "minor fix in comparison of DateRange.isInRangeYearlessReverse, fixes #645\n", "commitDateTime": "2016-01-20 16:37:04", "authoredDateTime": "2016-01-20 16:37:04", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/osm/conditional/DateRange.java", "insertions": 23, "deletions": 12, "lines": 35}, {"filePath": "core/src/main/java/com/graphhopper/reader/osm/conditional/ParsedCalendar.java", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "core/src/test/java/com/graphhopper/reader/osm/conditional/DateRangeParserTest.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DateRange.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRange.isInRangeYearlessReverse(java.util.Calendar)", "TOT": 14, "UPD": 1, "INS": 7, "MOV": 1, "DEL": 5}, {"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRange.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ParsedCalendar.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.conditional.ParsedCalendar.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DateRangeParserTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.conditional.DateRangeParserTest.testParseReverseDateRangeWithoutYearAndDay_645()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dedd6492afadc35441f6b8715feda903078b1447"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 31, "deletions": 13, "lines": 44, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 16, "UPD": 1, "INS": 9, "MOV": 1, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/reader/osm/conditional"], "changesInPackagesSPOON": ["com.graphhopper.reader.osm.conditional.ParsedCalendar.toString()", "com.graphhopper.reader.osm.conditional.DateRange.isInRangeYearlessReverse(java.util.Calendar)", "com.graphhopper.reader.osm.conditional.DateRange.toString()"]}, {"title": "JS calculates route when deleting point", "body": "I just saw that we cannot add points anymore (this is fixed in #612).\n\nWhen you add one point and delete one point, a route request with two undefined points is sent.\n", "url": "https://github.com/graphhopper/graphhopper/issues/613", "user": "boldtrn", "labels": ["bug", "web"], "created": "2015-12-17 17:01:44", "closed": "2015-12-28 09:44:37", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "JS Autocomplete - mapLayer is not defined", "body": "Due to the modularization of the JS we introduced a bug.\n\nIn the autocomplete.js we call `mapLayer.focus(req, 15, index);`\n\nHowever the mapLayer is not defined. If we'd define the mapLayer and call the focus method. The focus method cannot find the method `setFlag` which is defined int the main-template.js.\n\nI am not sure\n", "url": "https://github.com/graphhopper/graphhopper/issues/609", "user": "boldtrn", "labels": ["bug", "web"], "created": "2015-12-17 08:35:55", "closed": "2015-12-21 10:31:30", "commits": {"b54f684cebdba8bec583a46f9c9642639c2be881": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "b54f684cebdba8bec583a46f9c9642639c2be881", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["ddc2f49087ecde74b833a9a5372efaf3ff931f88"], "nameRev": "b54f684cebdba8bec583a46f9c9642639c2be881 tags/0.6.0-RC1~35", "commitMessage": "web ui: fixing layer parameter bug mentioned in #609\n", "commitDateTime": "2015-12-21 12:29:14", "authoredDateTime": "2015-12-21 12:29:14", "commitGitStats": [{"filePath": "web/src/main/webapp/js/config/tileLayers.js", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "web/src/main/webapp/js/main-template.js", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "web/src/main/webapp/js/main.js", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "web/src/main/webapp/js/map.js", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b54f684cebdba8bec583a46f9c9642639c2be881"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 10, "lines": 23, "gitFilesChange": 4}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/webapp/js/map.js", "web/src/main/webapp/js/main-template.js", "web/src/main/webapp/js/main.js", "web/src/main/webapp/js/config/tileLayers.js"]}, {"title": "Duration parsing dependent from current time", "body": "Currently the parsing of two month is not a fixed amount of days (and a bit too strict), therefor it fails as of today ;)\n\n``` java\nassertTrue(87840 * 60 <= OSMTagParser.parseDuration(\"P2M\"));\nassertTrue(87900 * 60 >= OSMTagParser.parseDuration(\"P2M\"));\n```\n\nShould/can we avoid this somehow and always use the same start date?\n\nOtherwise the span can be a bit broader:\n\n``` java\n// 28+31\nassertTrue(2*28*24*60* 60 <= OSMTagParser.parseDuration(\"P2M\"));\n// 2*31 (dez+jan!)\nassertTrue(2*31*24*60* 60 >= OSMTagParser.parseDuration(\"P2M\"));\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/588", "user": "karussell", "labels": ["bug"], "created": "2015-12-01 09:25:02", "closed": "2016-01-19 20:36:51", "commits": {"2f2df86b6446b8b1a62588d0d60447d2df46818d": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "7157f5a1ed71f79b75a20fec69aae3c6fb70c6a4": {"commitGHEventType": "closed", "commitUser": "karussell"}, "9fa56f3aa54b0187d6eb7ce4922a87e6e9d2b635": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 49.000277777777775, "commitsDetails": [{"commitHash": "2f2df86b6446b8b1a62588d0d60447d2df46818d", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["a6af52831cd0de1a24b2368899681034dc483b7a"], "nameRev": "2f2df86b6446b8b1a62588d0d60447d2df46818d tags/0.6.0-RC1~55", "commitMessage": "improve duration parsing test, #588\n", "commitDateTime": "2015-12-01 10:36:14", "authoredDateTime": "2015-12-01 10:33:06", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/OSMTagParser.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "core/src/test/java/com/graphhopper/reader/OSMTagParserTest.java", "insertions": 10, "deletions": 3, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMTagParser.java", "spoonMethods": []}, {"spoonFilePath": "OSMTagParserTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMTagParserTest.testParseDuration()", "TOT": 8, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "7157f5a1ed71f79b75a20fec69aae3c6fb70c6a4", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["6629569cb4e3692ac487757a83472d77badfae94"], "nameRev": "7157f5a1ed71f79b75a20fec69aae3c6fb70c6a4 tags/0.6.0-RC1~15", "commitMessage": "Duration parsing dependent from current time, fix #588\n", "commitDateTime": "2016-01-19 20:40:35", "authoredDateTime": "2016-01-19 20:40:35", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/OSMTagParser.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "core/src/test/java/com/graphhopper/reader/OSMTagParserTest.java", "insertions": 3, "deletions": 6, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMTagParser.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMTagParser.parseDuration(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.reader.OSMTagParser", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OSMTagParserTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMTagParserTest.testParseDuration()", "TOT": 12, "UPD": 3, "INS": 1, "MOV": 5, "DEL": 3}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9fa56f3aa54b0187d6eb7ce4922a87e6e9d2b635", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["7157f5a1ed71f79b75a20fec69aae3c6fb70c6a4"], "nameRev": "9fa56f3aa54b0187d6eb7ce4922a87e6e9d2b635 tags/0.6.0-RC1~14", "commitMessage": "trying to improve #588 with an earlier fixed date in July 1970\n", "commitDateTime": "2016-01-19 21:29:50", "authoredDateTime": "2016-01-19 21:29:50", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/OSMTagParser.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMTagParser.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMTagParser", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2f2df86b6446b8b1a62588d0d60447d2df46818d", "7157f5a1ed71f79b75a20fec69aae3c6fb70c6a4", "9fa56f3aa54b0187d6eb7ce4922a87e6e9d2b635"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 9, "deletions": 5, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/reader"], "changesInPackagesSPOON": ["com.graphhopper.reader.OSMTagParser", "com.graphhopper.reader.OSMTagParser.parseDuration(java.lang.String)"]}, {"title": "Escape street names for GPX properly", "body": "Streets can contain chars like `<` (intended or not) and therefor we should escape them properly when creating xml turn instructions.\n\n[GH maps link](https://graphhopper.com/maps/?point=49.428547%2C11.061087&point=49.427947%2C11.064906)\n\nThe ref is tagged as `<`!? http://www.openstreetmap.org/way/251217044\n", "url": "https://github.com/graphhopper/graphhopper/issues/572", "user": "karussell", "labels": ["bug"], "created": "2015-11-24 13:18:06", "closed": "2015-11-24 14:15:18", "commits": {"ad85ac5f11bb2603891ec1f5e0716472a7a7726c": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "ad85ac5f11bb2603891ec1f5e0716472a7a7726c", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["4b93290cdd35745b8fd96d464211ff58f31de1c0"], "nameRev": "ad85ac5f11bb2603891ec1f5e0716472a7a7726c tags/0.6.0-RC1~66", "commitMessage": "fixing xml escaping problem, #572\n", "commitDateTime": "2015-11-24 15:15:08", "authoredDateTime": "2015-11-24 15:14:56", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/InstructionList.java", "insertions": 25, "deletions": 14, "lines": 39}, {"filePath": "core/src/test/java/com/graphhopper/util/InstructionListTest.java", "insertions": 7, "deletions": 0, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InstructionList.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.InstructionList.createWayPointBlock(java.lang.StringBuilder,com.graphhopper.util.Instruction)", "TOT": 24, "UPD": 7, "INS": 1, "MOV": 15, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.InstructionList.createGPX(java.lang.String,long,boolean,boolean,boolean,boolean)", "TOT": 11, "UPD": 9, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.InstructionList.simpleXMLEscape(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder,com.graphhopper.util.Instruction,com.graphhopper.util.Instruction)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "InstructionListTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.InstructionListTest.testXMLEscape_issue572()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ad85ac5f11bb2603891ec1f5e0716472a7a7726c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 25, "deletions": 14, "lines": 39, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 38, "UPD": 16, "INS": 3, "MOV": 17, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder,com.graphhopper.util.Instruction,com.graphhopper.util.Instruction)", "com.graphhopper.util.InstructionList.simpleXMLEscape(java.lang.String)", "com.graphhopper.util.InstructionList.createWayPointBlock(java.lang.StringBuilder,com.graphhopper.util.Instruction)", "com.graphhopper.util.InstructionList.createGPX(java.lang.String,long,boolean,boolean,boolean,boolean)"]}, {"title": "Cannot execute changes using graphhopper.sh", "body": "Hi,\n\nI just checked out the current stat from the repository.\n\nWhen I change something in the graphhopper core it run:\n\n```\n./graphhopper.sh clean\n./graphhopper.sh web europe_germany_berlin.pbf\n```\n\nBut my changes do not show up. I have the feeling that maven uses the snapshot from the repository and not my local version. Is this a known issue? I think this worked on my machine before I checked out the sources again.\n", "url": "https://github.com/graphhopper/graphhopper/issues/568", "user": "boldtrn", "labels": ["architecture", "bug"], "created": "2015-11-23 12:25:08", "closed": "2015-11-25 20:14:22", "commits": {"9226248ca3b5842a6aff908228df79cef43fdcc3": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "d8cd438d612bd8ab3a8d1257d7078fbfc76751fc": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "9226248ca3b5842a6aff908228df79cef43fdcc3", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["cc000d726247fafbffa6f1fcc98508d1fef07cf1"], "nameRev": "9226248ca3b5842a6aff908228df79cef43fdcc3 tags/0.6.0-RC1~63", "commitMessage": "fixing graphhopper.sh script, #568\n", "commitDateTime": "2015-11-25 21:14:29", "authoredDateTime": "2015-11-25 21:14:09", "commitGitStats": [{"filePath": "graphhopper.sh", "insertions": 18, "deletions": 23, "lines": 41}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "d8cd438d612bd8ab3a8d1257d7078fbfc76751fc", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["9226248ca3b5842a6aff908228df79cef43fdcc3"], "nameRev": "d8cd438d612bd8ab3a8d1257d7078fbfc76751fc tags/0.6.0-RC1~62", "commitMessage": "fixing android exec for graphhopper.sh, no need for -am and wrong position in command, #568\n", "commitDateTime": "2015-11-25 21:17:55", "authoredDateTime": "2015-11-25 21:17:55", "commitGitStats": [{"filePath": "graphhopper.sh", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9226248ca3b5842a6aff908228df79cef43fdcc3", "d8cd438d612bd8ab3a8d1257d7078fbfc76751fc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 19, "deletions": 24, "lines": 43, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["graphhopper.sh"]}, {"title": "Trim lines during import of config.properties", "body": "Hi,\n\nthanks for the great work on this Java routing library!\n\nI just realised that lines in the `config.properties` containing a leading blank are silently ignored by the library. It seems the lines are not being trimmed within the custom import of the config.properties file in `Helper.java:loadProperties()`.\n\nHowever, the example config is apt to contain invalid properties if you just uncomment some example properties (e.g. `prepare.chWeighting=no`). A leading blank will remain and the property will not be taken into account. It just took me some debugging to realise that :-)\n\nI think either trimming the lines or reporting to the user in some way that there is a invalid property should be added.\n\nJava 7 also has built-in support for reading properties from properties-files, cf. http://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load(java.io.InputStream)\nMaybe it could be used instead of the custom implementation?\n\nMany thanks,\nMatthias\n", "url": "https://github.com/graphhopper/graphhopper/issues/551", "user": "mloeks", "labels": ["bug"], "created": "2015-10-20 13:22:56", "closed": "2015-10-20 13:31:00", "commits": {"63834d59119000b41e1def3366c348a93a7741c3": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "63834d59119000b41e1def3366c348a93a7741c3", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["2e7b9ca2d104512f5a872b6d3bc20375fc04a386"], "nameRev": "63834d59119000b41e1def3366c348a93a7741c3 tags/0.6.0-RC1~92", "commitMessage": "fixing config reader. fixes #551\n", "commitDateTime": "2015-10-20 15:30:46", "authoredDateTime": "2015-10-20 15:30:46", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/Helper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/util/HelperTest.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Helper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Helper.loadProperties(java.util.Map,java.io.Reader)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "HelperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.HelperTest.testLoadProperties()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["63834d59119000b41e1def3366c348a93a7741c3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.util.Helper.loadProperties(java.util.Map,java.io.Reader)"]}, {"title": "Disallow routing on access=emergency", "body": "motor_vehicle=emergency, etc.\n\nRouting on ways specified for emergency vehicles can be illegal and/or dangerous.\n", "url": "https://github.com/graphhopper/graphhopper/issues/539", "user": "ghost", "labels": ["bug", "osm"], "created": "2015-10-08 22:08:49", "closed": "2015-10-23 14:43:59", "commits": {"66b0eeacf5c93c809a50ba93599f75b77782a64e": {"commitGHEventType": "closed", "commitUser": "karussell"}, "20f24f84e57e944f2a81efc63041fe4736905907": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "66b0eeacf5c93c809a50ba93599f75b77782a64e", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["30055340cf55cc0da23641d87a19a3ee27880bf4"], "nameRev": "66b0eeacf5c93c809a50ba93599f75b77782a64e tags/0.6.0-RC1~106", "commitMessage": "disallow routing if emergency access, fixes #539\n", "commitDateTime": "2015-10-09 10:31:08", "authoredDateTime": "2015-10-09 10:31:08", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java", "insertions": 10, "deletions": 6, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": []}, {"spoonFilePath": "CarFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CarFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest.testAccess()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "20f24f84e57e944f2a81efc63041fe4736905907", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["66b0eeacf5c93c809a50ba93599f75b77782a64e"], "nameRev": "20f24f84e57e944f2a81efc63041fe4736905907 tags/0.6.0-RC1~105", "commitMessage": "improving emergency handling for none motor vehicles, improves #539\n", "commitDateTime": "2015-10-09 17:24:41", "authoredDateTime": "2015-10-09 17:24:41", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/DijkstraBidirectionRef.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DijkstraBidirectionRef.java", "spoonMethods": []}, {"spoonFilePath": "BikeCommonFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CarFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest.testAccess()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["66b0eeacf5c93c809a50ba93599f75b77782a64e", "20f24f84e57e944f2a81efc63041fe4736905907"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util", "core/src/main/java/com/graphhopper", "core/src/main/java/com/graphhopper/routing"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.BikeCommonFlagEncoder", "com.graphhopper.routing.util.CarFlagEncoder", "com.graphhopper.routing.util.FootFlagEncoder"]}, {"title": "bug for ServletTest", "body": "Wrong issue tracker and we cannot delete it\n", "url": "https://github.com/graphhopper/graphhopper/issues/538", "user": "karussell", "labels": ["bug"], "created": "2015-10-08 14:18:54", "closed": "2015-10-08 14:19:04", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "MotorcycleFlagEncoder: Copy&Paste Issue in defineWayBits()", "body": "Hi,\n\nI just found a minor Copy Paste Issue (https://github.com/graphhopper/graphhopper/blob/master/core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java#L131)\n\nShould be probably: `shift += priorityWayEncoder.getBits();`\n\nThis changed the priorities for motorcycle routes and therefore the defined prefer/avoid sets were probably not calculated correctly.\n", "url": "https://github.com/graphhopper/graphhopper/issues/527", "user": "boldtrn", "labels": ["bug"], "created": "2015-09-26 11:01:07", "closed": "2015-09-28 09:30:28", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Loading of graph should fail if different bytesForFlags configured than stored", "body": "Currently we silently accept any value BUT this is highly problematic as the reading is then incorrectly done\n\nIn my case this leads to exceptions like (but similar are possible)\n\n```\njava.lang.ArrayIndexOutOfBoundsException: 1148\n            at com.graphhopper.storage.RAMDataAccess.getBytes(RAMDataAccess.java:286)\n            at com.graphhopper.search.NameIndex.get(NameIndex.java:129)\n            at com.graphhopper.storage.BaseGraph$CommonEdgeIterator.getName(BaseGraph.java:1279)\n            at com.graphhopper.routing.QueryGraph.createEdges(QueryGraph.java:355)\n            at com.graphhopper.routing.QueryGraph.access$300(QueryGraph.java:45)\n            at com.graphhopper.routing.QueryGraph$1.execute(QueryGraph.java:247)\n            at com.graphhopper.routing.QueryGraph$1.execute(QueryGraph.java:184)\n            at gnu.trove.map.hash.TIntObjectHashMap.forEachValue(TIntObjectHashMap.java:402)\n            at com.graphhopper.routing.QueryGraph.lookup(QueryGraph.java:183)\n            at com.graphhopper.GraphHopper.getPaths(GraphHopper.java:1016)\n            at com.graphhopper.GraphHopper.route(GraphHopper.java:924)\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/526", "user": "karussell", "labels": ["bug"], "created": "2015-09-25 08:50:52", "closed": "2015-09-25 08:53:53", "commits": {"e0f3b0add1732e3efd3ad10b42bdcd6f97414ca8": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e0f3b0add1732e3efd3ad10b42bdcd6f97414ca8", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["92eb6fe5ba07cf1cb2b882c8229abbf180b6d340"], "nameRev": "e0f3b0add1732e3efd3ad10b42bdcd6f97414ca8 tags/0.6.0-RC1~121", "commitMessage": "ensure same bytesForFlags are configured and loaded, fixes #526\n", "commitDateTime": "2015-09-25 10:51:31", "authoredDateTime": "2015-09-25 10:51:31", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 14, "deletions": 11, "lines": 25}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperTest.java", "insertions": 20, "deletions": 0, "lines": 20}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "GraphHopperStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.loadExisting()", "TOT": 8, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "GraphHopperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperTest.testFailsForWrongConfig()", "TOT": 6, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e0f3b0add1732e3efd3ad10b42bdcd6f97414ca8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 12, "lines": 31, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 10, "UPD": 3, "INS": 3, "MOV": 3, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper", "core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.storage.GraphHopperStorage.loadExisting()", "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)"]}, {"title": "Insufficient memory for the Java Runtime when using MMAP option on 64bit linux", "body": "The JVM crashed on import. Reported on the [mailing list](https://lists.openstreetmap.org/pipermail/graphhopper/2015-August/002330.html):\n\n```\nimporting a relatively small pbf file (oberbayern.pbf from geofabrik) fails with GH 0.5:\n\n# There is insufficient memory for the Java Runtime Environment to continue.\n# Native memory allocation (malloc) failed to allocate 1073741840 bytes for Chunk::new\n\nUsing the same box/environment and the same JAVA_OPTS=-Xmx2000m -Xms2000m \nI can import that file with 0.4.1 just fine. In addition, 0.4.1 is much faster, \nit reaches the \"now parsing ways\" stage within 12 seconds while 0.5 needs > 2 minutes to get there...\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/509", "user": "karussell", "labels": ["bug"], "created": "2015-08-25 13:24:35", "closed": "2015-08-25 13:26:13", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Ferry issue for foot routing", "body": "Reported [here](https://lists.openstreetmap.org/pipermail/graphhopper/2015-August/002323.html) and works for biking, so it should work for foot too.\n\nThat it does not work for car is okayish as ferries are not preferred due to costs and uncertain duration.\n", "url": "https://github.com/graphhopper/graphhopper/issues/501", "user": "karussell", "labels": ["bug"], "created": "2015-08-22 17:00:47", "closed": "2015-09-14 06:42:55", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "hints from AlgorithmOptions are empty even if request hints are changed", "body": "", "url": "https://github.com/graphhopper/graphhopper/issues/497", "user": "karussell", "labels": ["bug"], "created": "2015-08-14 13:16:37", "closed": "2015-08-14 13:19:47", "commits": {"bb5de58608dca0b49631cb0a5003d8568f35d3b9": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "bb5de58608dca0b49631cb0a5003d8568f35d3b9", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["35d660c2f5f55ca13c3b8fda33ff467f1b6292c3"], "nameRev": "bb5de58608dca0b49631cb0a5003d8568f35d3b9 tags/0.6.0-RC1~145", "commitMessage": "hints needs to be passed into algorithm hints from request hints, fixes #497\n", "commitDateTime": "2015-08-14 15:17:34", "authoredDateTime": "2015-08-14 15:17:34", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/routing/AlgorithmOptions.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/util/PMap.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperTest.java", "insertions": 19, "deletions": 4, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AlgorithmOptions.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AlgorithmOptions.Builder.hints(com.graphhopper.util.PMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PMap.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PMap.put(com.graphhopper.util.PMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH()", "TOT": 8, "UPD": 2, "INS": 6, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bb5de58608dca0b49631cb0a5003d8568f35d3b9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 0, "lines": 13, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 5, "UPD": 1, "INS": 3, "MOV": 1, "DEL": 0, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing", "core/src/main/java/com/graphhopper", "core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.routing.AlgorithmOptions.Builder.hints(com.graphhopper.util.PMap)", "com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "com.graphhopper.util.PMap.put(com.graphhopper.util.PMap)"]}, {"title": "Encoder case sensitivity bug in GraphHopper.getWeightingForCH", "body": "The first line of GraphHopper.getWeightingForCH method is missing a toLowerCase() call. In case of one or more upper case letters, the matching fails as the resulting variable encoderStr is compared to a string representation of Weighting that is converted to lower case:\n\n```\npublic Weighting getWeightingForCH( WeightingMap weightingMap, FlagEncoder encoder )\n{\n    String encoderStr = encoder.toString(); <-- MISSING toLowerCase()\n    String weightingStr = weightingMap.getWeighting().toLowerCase();\n    for (Weighting w : algoFactories.keySet())\n    {\n        // TODO too loose matching? see #490\n        String str = w.toString().toLowerCase();\n        if (str.contains(weightingStr) && str.contains(encoderStr))\n            return w;\n    }\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/496", "user": "linasm", "labels": ["bug"], "created": "2015-08-14 12:33:24", "closed": "2015-08-24 07:42:15", "commits": {"4c049a9f9708bfb56afa0235dec94a5c1a014279": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "4c049a9f9708bfb56afa0235dec94a5c1a014279", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["8d1f909bba6878527d025a6aff046ef6749e5e3f"], "nameRev": "4c049a9f9708bfb56afa0235dec94a5c1a014279 tags/0.6.0-RC1~142", "commitMessage": "fixing #496, proper fix later with #490\n", "commitDateTime": "2015-08-24 09:41:58", "authoredDateTime": "2015-08-24 09:41:58", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.getWeightingForCH(com.graphhopper.WeightingMap,com.graphhopper.FlagEncoder)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Problem in UI due to array vs. none-array of URL parameter", "body": "Due to #448\n", "url": "https://github.com/graphhopper/graphhopper/issues/482", "user": "karussell", "labels": ["bug", "web"], "created": "2015-07-30 06:59:40", "closed": "2015-07-30 07:53:15", "commits": {"8009563b0f7638459006fe6c306dcb579ad5203c": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8009563b0f7638459006fe6c306dcb579ad5203c", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["abedf7468bd2f79ffa0b7bd6b018361fe854079d"], "nameRev": "8009563b0f7638459006fe6c306dcb579ad5203c tags/0.5.0~20", "commitMessage": "UI: make responsibility of URL param management more clear, moved some more variables into api_params and made it a hash instead of a list, fixes #482\n", "commitDateTime": "2015-07-30 09:53:03", "authoredDateTime": "2015-07-30 09:53:03", "commitGitStats": [{"filePath": "web/src/main/webapp/js/ghrequest.js", "insertions": 20, "deletions": 65, "lines": 85}, {"filePath": "web/src/main/webapp/js/main.js", "insertions": 8, "deletions": 9, "lines": 17}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8009563b0f7638459006fe6c306dcb579ad5203c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 74, "lines": 102, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/webapp/js/ghrequest.js", "web/src/main/webapp/js/main.js"]}, {"title": "Windows test failures for MMap config", "body": "in  GraphStorageViaMMapTest.testPropertiesWithNoInit \n\n```\njava.lang.AssertionError: expected:<0> but was:<11107>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:834)\n    at org.junit.Assert.assertEquals(Assert.java:645)\n    at org.junit.Assert.assertEquals(Assert.java:631)\n    at com.graphhopper.storage.AbstractGraphStorageTester.testPropertiesWithNoInit(AbstractGraphStorageTester.java:114)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n```\n\nin GraphStorageViaMMapTest.testSimpleDelete2\n\n```\njava.lang.AssertionError: expected:<-1> but was:<0>\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.failNotEquals(Assert.java:834)\n    at org.junit.Assert.assertEquals(Assert.java:645)\n    at org.junit.Assert.assertEquals(Assert.java:631)\n    at com.graphhopper.storage.AbstractGraphStorageTester.testSimpleDelete2(AbstractGraphStorageTester.java:601)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n...\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/477", "user": "karussell", "labels": ["bug", "windows"], "created": "2015-07-27 19:11:24", "closed": "2015-07-28 07:43:02", "commits": {"92df95c7be8a05918b95b7d5a819f797a0b22126": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "92df95c7be8a05918b95b7d5a819f797a0b22126", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["639b3c495402efd5d428cef4edf67c7ad41e26cc"], "nameRev": "92df95c7be8a05918b95b7d5a819f797a0b22126 tags/0.5.0~28", "commitMessage": "added missing close calls in order to fix #477\n", "commitDateTime": "2015-07-28 09:42:33", "authoredDateTime": "2015-07-28 09:42:33", "commitGitStats": [{"filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java", "insertions": 30, "deletions": 29, "lines": 59}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperStorageCHTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass()", "TOT": 17, "UPD": 0, "INS": 8, "MOV": 1, "DEL": 8}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageCHTest.testPrios()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge()", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 4}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder()", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 4}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["92df95c7be8a05918b95b7d5a819f797a0b22126"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Make maximum visited nodes configurable", "body": "To ensure that one can run none-CH in production we need an option to avoid full graph exploration\n", "url": "https://github.com/graphhopper/graphhopper/issues/473", "user": "karussell", "labels": ["bug", "good first issue"], "created": "2015-07-23 16:46:26", "closed": "2016-03-10 09:48:50", "commits": {"bc0e0f854d5364bcfbe945c384abc7ab448f88da": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "2b34274419bb336f7f7e5195308ed7b5c5eff5fa": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 230.00027777777777, "commitsDetails": [{"commitHash": "bc0e0f854d5364bcfbe945c384abc7ab448f88da", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2b34274419bb336f7f7e5195308ed7b5c5eff5fa", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["9856a69990b6b73fc23ba87a89c1b04bbef031c4", "c5b6b7ff58e9c0e39261d5c2428d5066da7b4f86"], "nameRev": "2b34274419bb336f7f7e5195308ed7b5c5eff5fa tags/0.7.0~92^2~19", "commitMessage": "Merge pull request #681 from boldtrn/feature_maximum_visited_nodes\n\nLimit search via maximum visited nodes. Fixes #473 ", "commitDateTime": "2016-03-10 10:48:50", "authoredDateTime": "2016-03-10 10:48:50", "commitGitStats": [{"filePath": "config-example.properties", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "core/src/main/java/com/graphhopper/routing/AStar.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/AStarBidirection.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/AbstractBidirAlgo.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/AbstractRoutingAlgorithm.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "core/src/main/java/com/graphhopper/routing/AlgorithmOptions.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "core/src/main/java/com/graphhopper/routing/AlternativeRoute.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "core/src/main/java/com/graphhopper/routing/Dijkstra.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/DijkstraOneToMany.java", "insertions": 2, "deletions": 9, "lines": 11}, {"filePath": "core/src/main/java/com/graphhopper/routing/RoundTripAltAlgorithm.java", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "core/src/main/java/com/graphhopper/routing/RoutingAlgorithm.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/RoutingAlgorithmFactorySimple.java", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "core/src/test/java/com/graphhopper/routing/AbstractRoutingAlgorithmTester.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/PrepareContractionHierarchiesTest.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.calcPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AStar.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AStar.runAlgo()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AStarBidirection.java", "spoonMethods": []}, {"spoonFilePath": "AbstractBidirAlgo.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractBidirAlgo.runAlgo()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AbstractRoutingAlgorithm.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithm", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithm.setMaxVisitedNodes(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithm.isMaxVisitedNodesExceeded()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AlgorithmOptions.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AlgorithmOptions", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AlgorithmOptions.getMaxVisitedNodes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AlgorithmOptions.start(com.graphhopper.routing.AlgorithmOptions)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AlgorithmOptions.Builder.maxVisitedNodes(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AlternativeRoute.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AlternativeRoute", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AlternativeRoute.setMaxVisitedNodes(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AlternativeRoute.AlternativeBidirSearch.finished()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Dijkstra.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.Dijkstra.runAlgo()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DijkstraOneToMany.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.findEndNode(int,int)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "RoundTripAltAlgorithm.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoundTripAltAlgorithm", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RoundTripAltAlgorithm.setMaxVisitedNodes(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RoundTripAltAlgorithm.calcRoundTrips(int,double,double)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithm.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.setMaxVisitedNodes(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmFactorySimple.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmFactorySimple.createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.AlgorithmOptions)", "TOT": 16, "UPD": 0, "INS": 13, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "PrepareContractionHierarchies.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.findShortcuts(com.graphhopper.routing.ch.PrepareContractionHierarchies$ShortcutHandler)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GraphHopperIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperIT.testMonacoMaxVisitedNodes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractRoutingAlgorithmTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testMaxVisitedNodes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": []}, {"spoonFilePath": "PrepareContractionHierarchiesTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "GraphHopper.setCHEnable vs graph CH state", "body": "After #447 the `setCHEnable(true)` works also with non CH graphs, that could be a problem.\n\nWe should either configure CH automatically or notify the user about the wrong setting.\n\nSee also [here](https://github.com/graphhopper/graphhopper/pull/447#issuecomment-123821614) for the conversation.\n", "url": "https://github.com/graphhopper/graphhopper/issues/471", "user": "devemux86", "labels": ["bug"], "created": "2015-07-22 18:51:59", "closed": "2015-08-10 10:06:14", "commits": {"e61171a95b32fafb579ca22b2452ddd12a9e2cd1": {"commitGHEventType": "closed", "commitUser": "karussell"}, "76f768c68bf2cbd43e665480c23db2406adfdcdf": {"commitGHEventType": "referenced", "commitUser": "easbar"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "e61171a95b32fafb579ca22b2452ddd12a9e2cd1", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["8a7f6720ff7055378e48dac09bcfe12e9ab284c6"], "nameRev": "e61171a95b32fafb579ca22b2452ddd12a9e2cd1 tags/0.5.0~1^2~11", "commitMessage": "prevent loading CH graph when no CH is configured and vice versa, fixes #471\n", "commitDateTime": "2015-08-10 12:05:12", "authoredDateTime": "2015-08-10 12:05:12", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperTest.java", "insertions": 52, "deletions": 0, "lines": 52}, {"filePath": "core/src/test/java/com/graphhopper/routing/AbstractRoutingAlgorithmTester.java", "insertions": 5, "deletions": 9, "lines": 14}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/DijkstraBidirectionCHTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageCHTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/storage/index/LocationIndexTreeCHTest.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.load(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GraphHopperStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.getCHWeightings()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.create(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.loadExisting()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractRoutingAlgorithmTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.createGHStorage(com.graphhopper.routing.EncodingManager,java.util.Collection,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.createGHStorage(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testTwoWeightsPerEdge2()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DijkstraBidirectionCHTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.DijkstraBidirectionCHTest.createGHStorage(com.graphhopper.routing.ch.EncodingManager,java.util.Collection,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperStorageCHTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageCHTest.newGHStorage(com.graphhopper.storage.Directory,boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocationIndexTreeCHTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTreeCHTest.createGHStorage(com.graphhopper.storage.index.Directory,com.graphhopper.routing.util.EncodingManager,boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "76f768c68bf2cbd43e665480c23db2406adfdcdf", "commitGHEventType": "referenced", "commitUser": "easbar", "commitParents": ["0a43887654d1b1786fa93a111d6862942d89a176"], "nameRev": "76f768c68bf2cbd43e665480c23db2406adfdcdf tags/1.0-pre21", "commitMessage": "Adjust test of #471\n", "commitDateTime": "2020-02-10 19:16:51", "authoredDateTime": "2020-02-10 19:16:51", "commitGitStats": [{"filePath": "reader-osm/src/test/java/com/graphhopper/reader/osm/GraphHopperOSMTest.java", "insertions": 5, "deletions": 8, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperOSMTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.GraphHopperOSMTest.testLoadingWithDifferentCHConfig_issue471()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e61171a95b32fafb579ca22b2452ddd12a9e2cd1", "76f768c68bf2cbd43e665480c23db2406adfdcdf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 6, "lines": 17, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 9, "UPD": 3, "INS": 5, "MOV": 1, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper", "core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.storage.GraphHopperStorage", "com.graphhopper.storage.GraphHopperStorage.getCHWeightings()", "com.graphhopper.storage.GraphHopperStorage.loadExisting()", "com.graphhopper.GraphHopper.load(java.lang.String)", "com.graphhopper.storage.GraphHopperStorage.create(long)"]}, {"title": "Make Android demo build with hardwareAccelerated=\"false\"", "body": "this is necessary for mapsforge but failed for API level 10 ... I need to try that compilation against the latest API (22) works\n", "url": "https://github.com/graphhopper/graphhopper/issues/458", "user": "karussell", "labels": ["android", "bug"], "created": "2015-07-01 12:16:12", "closed": "2015-07-01 14:46:45", "commits": {"10ef1bc7331e0f48975d9a00b1b4a54cfb63dadc": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "f064fae0e5af83bc7c9f7ee34b9abe71549f646a": {"commitGHEventType": "closed", "commitUser": "karussell"}, "21f524a94b715641164413b09143d0d4262e3bab": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "10ef1bc7331e0f48975d9a00b1b4a54cfb63dadc", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["04fb3990eb6604db2689a4ae6685cd83464e5951"], "nameRev": "10ef1bc7331e0f48975d9a00b1b4a54cfb63dadc tags/0.5.0~56", "commitMessage": "updated several dependencies, including guice* from 3.0 to 4.0 for web module, and fixing dep for gradle build\n", "commitDateTime": "2015-07-01 12:12:53", "authoredDateTime": "2015-07-01 12:12:53", "commitGitStats": [{"filePath": "android/app/build.gradle", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "android/app/pom.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "android/app/src/main/AndroidManifest.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "pom.xml", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "web/pom.xml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f064fae0e5af83bc7c9f7ee34b9abe71549f646a", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["10ef1bc7331e0f48975d9a00b1b4a54cfb63dadc"], "nameRev": "f064fae0e5af83bc7c9f7ee34b9abe71549f646a tags/0.5.0~55", "commitMessage": "force higher level of API, fixes #458\n", "commitDateTime": "2015-07-01 16:46:38", "authoredDateTime": "2015-07-01 16:46:38", "commitGitStats": [{"filePath": "android/app/pom.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "android/app/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "21f524a94b715641164413b09143d0d4262e3bab", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["f064fae0e5af83bc7c9f7ee34b9abe71549f646a", "0d3dc7c562fa6a7299c0050df998a4c1a91518c5"], "nameRev": "21f524a94b715641164413b09143d0d4262e3bab tags/0.5.0~54", "commitMessage": "Merge pull request #459 from devemux86/issue_458\n\nUpdate Android docs, #458", "commitDateTime": "2015-07-01 20:33:30", "authoredDateTime": "2015-07-01 20:33:30", "commitGitStats": [{"filePath": "docs/android/index.md", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["10ef1bc7331e0f48975d9a00b1b4a54cfb63dadc", "f064fae0e5af83bc7c9f7ee34b9abe71549f646a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["android/app"]}, {"title": "RoutingAlgorithmFactory always overwritten in GraphHopper.postProcessing", "body": "Due to this custom factories have no effect\n", "url": "https://github.com/graphhopper/graphhopper/issues/452", "user": "karussell", "labels": ["bug"], "created": "2015-06-29 08:57:18", "closed": "2015-06-29 11:00:50", "commits": {"d250a46442d6dad7978f2ac4ce0bf71a6f9af73c": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d250a46442d6dad7978f2ac4ce0bf71a6f9af73c", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["94ab0f1f3d7dc46918c8efa13a1caeded7d911b5"], "nameRev": "d250a46442d6dad7978f2ac4ce0bf71a6f9af73c tags/0.5.0~67", "commitMessage": "allow custom routing factories for none CH, fixes #452\n", "commitDateTime": "2015-06-29 12:29:33", "authoredDateTime": "2015-06-29 12:29:33", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperTest.java", "insertions": 70, "deletions": 23, "lines": 93}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.postProcessing()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.prepare()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.setGraph(com.graphhopper.GraphStorage)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperTest.initSquareGraphInstance(boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d250a46442d6dad7978f2ac4ce0bf71a6f9af73c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 9, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper"], "changesInPackagesSPOON": ["com.graphhopper.GraphHopper.postProcessing()", "com.graphhopper.GraphHopper.prepare()", "com.graphhopper.GraphHopper.setGraph(com.graphhopper.GraphStorage)"]}, {"title": "SRTM elevation data provider not working", "body": "Current URL http://dds.cr.usgs.gov/srtm/version2_1/SRTM3/ is gone. Similar to #346 our default URL is not longer working, switching to another for now. (until we host this ourself)\n", "url": "https://github.com/graphhopper/graphhopper/issues/451", "user": "karussell", "labels": ["bug"], "created": "2015-06-25 13:52:04", "closed": "2015-06-29 22:34:50", "commits": {"f5c40c1f6781a5d980451df4534517bbf719fbf3": {"commitGHEventType": "closed", "commitUser": "karussell"}, "0259d12b51ec924f397cdcbf4d6f2f49cec6e562": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "49396099960063d81873460157c2359ad295ee44": {"commitGHEventType": "closed", "commitUser": "karussell"}, "8384dcfe8e268aba1b6a306299c8df0b72e6057d": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "667f740793b632c90245a6596968457012cbc6c5": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "f5c40c1f6781a5d980451df4534517bbf719fbf3", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["9a9900ed31995caf3441d852d37e1da988a5fa75"], "nameRev": "f5c40c1f6781a5d980451df4534517bbf719fbf3 tags/0.5.0~70", "commitMessage": "SRTM elevation data provider not working, fix #451\n", "commitDateTime": "2015-06-25 16:03:24", "authoredDateTime": "2015-06-25 15:52:55", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/dem/SRTMProvider.java", "insertions": 6, "deletions": 5, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SRTMProvider.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.dem.SRTMProvider.getEle(double,double)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0259d12b51ec924f397cdcbf4d6f2f49cec6e562", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["2315acdf726af46ff5b0941391b3eb1c0f525ee7"], "nameRev": "0259d12b51ec924f397cdcbf4d6f2f49cec6e562 tags/0.5.0~65", "commitMessage": "avoid downloading of SRTM elevation data in tests due to renaming/fixing of #451\n", "commitDateTime": "2015-06-29 13:00:21", "authoredDateTime": "2015-06-29 13:00:21", "commitGitStats": [{"filePath": "core/files/{N43E007hgt.zip => N43E007.hgt.zip}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/files/{N49E011hgt.zip => N49E011.hgt.zip}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/files/{N50E011hgt.zip => N50E011.hgt.zip}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/files/N52E008.hgt.zip", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/files/N52E008hgt.zip", "insertions": 0, "deletions": 7, "lines": 7}, {"filePath": "core/files/{N55W003hgt.zip => N55W003.hgt.zip}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/files/N55W004hgt.zip", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/files/{S29W072hgt.zip => S29W072.hgt.zip}", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "49396099960063d81873460157c2359ad295ee44", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["284e89e1d36c3d5bec2c3ef721ec6c225027f366"], "nameRev": "49396099960063d81873460157c2359ad295ee44 tags/0.5.0~63", "commitMessage": "use error stream reading only for web and test not for elevation provider download, fixes #451\n", "commitDateTime": "2015-06-30 00:34:42", "authoredDateTime": "2015-06-30 00:34:42", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/dem/CGIARProvider.java", "insertions": 9, "deletions": 1, "lines": 10}, {"filePath": "core/src/main/java/com/graphhopper/util/Downloader.java", "insertions": 8, "deletions": 8, "lines": 16}, {"filePath": "core/src/test/java/com/graphhopper/reader/dem/CGIARProviderTest.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "tools/src/main/java/com/graphhopper/tools/QueryTorture.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperWeb.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "web/src/test/java/com/graphhopper/http/BaseServletTester.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "web/src/test/java/com/graphhopper/http/GraphHopperWebTest.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CGIARProvider.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.dem.CGIARProvider.getCacheDir()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.dem.CGIARProvider.main(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Downloader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Downloader.fetch(java.net.HttpURLConnection,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.Downloader.downloadAsString(java.lang.String,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.Downloader.fetch(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.Downloader.downloadFile(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.Downloader.downloadAndUnzip(java.lang.String,java.lang.String,com.graphhopper.util.ProgressListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.Downloader.fetch(java.net.HttpURLConnection)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.Downloader.downloadAsString(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CGIARProviderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.dem.CGIARProviderTest.testFileNotFound()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryTorture.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.tools.QueryTorture.execute(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperWeb.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperWeb.route(com.graphhopper.GHRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BaseServletTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.BaseServletTester.queryString(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.BaseServletTester.nearestQuery(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperWebTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperWebTest.testReadEncoded().1.fetch(java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GraphHopperWebTest.testReadEncoded().1.fetch(java.net.HttpURLConnection,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8384dcfe8e268aba1b6a306299c8df0b72e6057d", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["49396099960063d81873460157c2359ad295ee44"], "nameRev": "8384dcfe8e268aba1b6a306299c8df0b72e6057d tags/0.5.0~62", "commitMessage": "fixing overwritten method for AndroidDownloader, #451\n", "commitDateTime": "2015-06-30 10:10:25", "authoredDateTime": "2015-06-30 10:10:25", "commitGitStats": [{"filePath": "android/app/src/main/java/com/graphhopper/android/AndroidDownloader.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidDownloader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.AndroidDownloader.downloadAndUnzip(java.lang.String,java.lang.String,com.graphhopper.util.ProgressListener)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.android.AndroidDownloader.downloadAsString(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "667f740793b632c90245a6596968457012cbc6c5", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["dd82e2d2e4e274745af04c0fa886cb3a9c2b4766", "7457662ed2d8f854b8147b8912acf79f5392bcd4"], "nameRev": "667f740793b632c90245a6596968457012cbc6c5 tags/0.5.0~60", "commitMessage": "Merge pull request #453 from devemux86/issue_451\n\nAndroid Sample: fix compile error, #451", "commitDateTime": "2015-06-30 18:01:46", "authoredDateTime": "2015-06-30 18:01:46", "commitGitStats": [{"filePath": "android/app/src/main/java/com/graphhopper/android/MainActivity.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainActivity.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.MainActivity.chooseAreaFromRemote().3.saveDoInBackground(java.lang.Void[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f5c40c1f6781a5d980451df4534517bbf719fbf3", "0259d12b51ec924f397cdcbf4d6f2f49cec6e562", "49396099960063d81873460157c2359ad295ee44", "8384dcfe8e268aba1b6a306299c8df0b72e6057d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 4, "gitStatsSummary": {"insertions": 27, "deletions": 25, "lines": 52, "gitFilesChange": 14}, "spoonStatsSummary": {"TOT": 18.0, "UPD": 0.0, "INS": 14.0, "MOV": 4.0, "DEL": 0.0, "spoonFilesChanged": 6, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/java/com/graphhopper/http", "core/files/N52E008hgt.zip", "tools/src/main/java/com/graphhopper/tools", "core/files/{N50E011hgt.zip => N50E011.hgt.zip}", "core/files/{N55W003hgt.zip => N55W003.hgt.zip}", "core/files/{S29W072hgt.zip => S29W072.hgt.zip}", "core/src/main/java/com/graphhopper/reader/dem", "core/files/{N43E007hgt.zip => N43E007.hgt.zip}", "core/files/N52E008.hgt.zip", "core/files/{N49E011hgt.zip => N49E011.hgt.zip}", "core/files/N55W004hgt.zip", "core/src/main/java/com/graphhopper/util", "android/app/src/main/java/com/graphhopper/android"], "changesInPackagesSPOON": ["com.graphhopper.util.Downloader.fetch(java.net.HttpURLConnection,boolean)", "com.graphhopper.util.Downloader.fetch(java.lang.String)", "com.graphhopper.reader.dem.CGIARProvider.main(java.lang.String[])", "com.graphhopper.reader.dem.CGIARProvider.getCacheDir()", "com.graphhopper.tools.QueryTorture.execute(int)", "com.graphhopper.util.Downloader.downloadAndUnzip(java.lang.String,java.lang.String,com.graphhopper.util.ProgressListener)", "com.graphhopper.http.GraphHopperWeb.route(com.graphhopper.GHRequest)", "com.graphhopper.android.AndroidDownloader.downloadAndUnzip(java.lang.String,java.lang.String,com.graphhopper.util.ProgressListener)", "com.graphhopper.reader.dem.SRTMProvider.getEle(double,double)", "com.graphhopper.util.Downloader.downloadFile(java.lang.String,java.lang.String)", "com.graphhopper.util.Downloader.fetch(java.net.HttpURLConnection)", "com.graphhopper.util.Downloader.downloadAsString(java.lang.String,boolean)", "com.graphhopper.util.Downloader.downloadAsString(java.lang.String)", "com.graphhopper.android.AndroidDownloader.downloadAsString(java.lang.String,boolean)"]}, {"title": "Access on bus-only-street ignored", "body": "I have a bus passage nearby at which the access is ignored by graphhopper.\n\nCheck out the diff between an openstreet.org link and a graphhopper link:\nhttps://www.openstreetmap.org/directions?engine=osrm_car&route=57.0417%2C9.9341%3B57.0371%2C9.9387#map=16/57.0392/9.9350\n\nhttps://graphhopper.com/maps/?point=Bornholmsgade%2C%209000%2C%20Aalborg%2C%20Denmark&point=Karnersvej%2C%209000%2C%20Aalborg%2C%20Denmark&locale=da&layer=Lyrk\n\nGraphhopper directions go directly through the access restricted bus passage even though the it has `motor_vehicle=no`set.\n\n![skaermbillede 2015-06-06 kl 09 53 25](https://cloud.githubusercontent.com/assets/681472/8018884/f54524c2-0c31-11e5-8b7a-698c31630881.png)\n", "url": "https://github.com/graphhopper/graphhopper/issues/436", "user": "michaelkrog", "labels": ["bug"], "created": "2015-06-06 07:51:28", "closed": "2015-06-06 17:25:17", "commits": {"52c538d969d4aec07553c65b3443f7aef63ad158": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "52c538d969d4aec07553c65b3443f7aef63ad158", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["b6ef534503addef422e21da53392bbc0fe7628f4"], "nameRev": "52c538d969d4aec07553c65b3443f7aef63ad158 tags/0.5.0~83", "commitMessage": "fixed wrong access handling for car and motorcycling, fixes #436\n", "commitDateTime": "2015-06-06 19:25:11", "authoredDateTime": "2015-06-06 19:25:11", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/OSMElement.java", "insertions": 16, "deletions": 3, "lines": 19}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java", "insertions": 11, "deletions": 7, "lines": 18}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java", "insertions": 48, "deletions": 42, "lines": 90}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/FootFlagEncoderTest.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMElement.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMElement.hasTag(java.lang.String,java.lang.Object)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMElement.hasTag(java.lang.String,java.util.Set)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMElement.hasTag(java.util.List,java.util.Set)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMElement.getFirstPriorityTag(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.AbstractFlagEncoder", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CarFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)", "TOT": 15, "UPD": 6, "INS": 2, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "MotorcycleFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.MotorcycleFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)", "TOT": 15, "UPD": 6, "INS": 2, "MOV": 5, "DEL": 2}]}, {"spoonFilePath": "CarFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest.testAccess()", "TOT": 19, "UPD": 0, "INS": 5, "MOV": 14, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest.testOneway()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "FootFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoderTest.testAccess()", "TOT": 12, "UPD": 0, "INS": 7, "MOV": 5, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["52c538d969d4aec07553c65b3443f7aef63ad158"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 45, "deletions": 23, "lines": 68, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 41, "UPD": 22, "INS": 5, "MOV": 10, "DEL": 4, "spoonFilesChanged": 4, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util", "core/src/main/java/com/graphhopper/reader"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.CarFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)", "com.graphhopper.reader.OSMElement.hasTag(java.lang.String,java.lang.Object)", "com.graphhopper.reader.OSMElement.hasTag(java.lang.String,java.util.Set)", "com.graphhopper.reader.OSMElement.getFirstPriorityTag(java.util.List)", "com.graphhopper.routing.util.MotorcycleFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)", "com.graphhopper.routing.util.AbstractFlagEncoder", "com.graphhopper.reader.OSMElement.hasTag(java.util.List,java.util.Set)"]}, {"title": "Subnetwork removal broken in master for bike2", "body": "E.g. for world wide import the nodes are reduced from 129.561.300 to 4.433.882, also for deactivated **oneway**-subnetwork removal. Occurs only with the setLowSpeed change introduced in #367 and only for bike2\n", "url": "https://github.com/graphhopper/graphhopper/issues/432", "user": "karussell", "labels": ["bug"], "created": "2015-06-02 08:10:22", "closed": "2015-06-02 16:02:47", "commits": {"fc0d8e1f6c096e38507d7d868d4b1cbf049b86ac": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "83aa9a3e8c852922a5d7ed25b4d48bea0985edd0": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "32a291d5c2d31cf88792fac9c5471c9c760cd850": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "b6ef534503addef422e21da53392bbc0fe7628f4": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "fc0d8e1f6c096e38507d7d868d4b1cbf049b86ac", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["0610fefaa498a223f941d5131b7ba80b9b202b1e"], "nameRev": "fc0d8e1f6c096e38507d7d868d4b1cbf049b86ac tags/0.5.0~89", "commitMessage": "make several methods more robust and include a fix and test for #432\n", "commitDateTime": "2015-06-02 17:54:15", "authoredDateTime": "2015-06-02 17:54:15", "commitGitStats": [{"filePath": "core/files/N52E008hgt.zip", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "core/files/map-bug432.osm.gz", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/src/main/java/com/graphhopper/reader/OSMReader.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/Bike2WeightFlagEncoder.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/EncodedDoubleValue.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/PrepareRoutingSubnetworks.java", "insertions": 6, "deletions": 5, "lines": 11}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/PrepareRoutingSubnetworksTest.java", "insertions": 26, "deletions": 0, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMReader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReader.printInfo(java.lang.String)", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList,long,long)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long,double)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Bike2WeightFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.Bike2WeightFlagEncoder.applyWayTags(com.graphhopper.reader.OSMWay,com.graphhopper.util.EdgeIteratorState)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "EncodedDoubleValue.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareRoutingSubnetworks.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.PrepareRoutingSubnetworks.toString(com.graphhopper.routing.util.EdgeIterator)", "TOT": 5, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int,int,com.graphhopper.coll.GHBitSet)", "TOT": 10, "UPD": 2, "INS": 4, "MOV": 2, "DEL": 2}]}, {"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testBike2_issue432()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareRoutingSubnetworksTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testIssue432()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "83aa9a3e8c852922a5d7ed25b4d48bea0985edd0", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["80bc227289660209839ffe98a546ec894597924f"], "nameRev": "83aa9a3e8c852922a5d7ed25b4d48bea0985edd0 tags/0.5.0~87", "commitMessage": "removing test method which did not show the issue, #432\n", "commitDateTime": "2015-06-02 18:07:04", "authoredDateTime": "2015-06-02 18:06:53", "commitGitStats": [{"filePath": "core/src/test/java/com/graphhopper/routing/util/PrepareRoutingSubnetworksTest.java", "insertions": 0, "deletions": 26, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PrepareRoutingSubnetworksTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testIssue432()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "32a291d5c2d31cf88792fac9c5471c9c760cd850", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["0c77e1d8a4337b8c3e649957dd4f1f6ef377a377"], "nameRev": "32a291d5c2d31cf88792fac9c5471c9c760cd850 tags/0.5.0~85", "commitMessage": "minor tweak to find out when speed is NaN, related to #432\n", "commitDateTime": "2015-06-04 12:21:12", "authoredDateTime": "2015-06-04 12:21:12", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/Bike2WeightFlagEncoder.java", "insertions": 31, "deletions": 20, "lines": 51}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Bike2WeightFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.Bike2WeightFlagEncoder.applyWayTags(com.graphhopper.reader.OSMWay,com.graphhopper.util.EdgeIteratorState)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b6ef534503addef422e21da53392bbc0fe7628f4", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["32a291d5c2d31cf88792fac9c5471c9c760cd850"], "nameRev": "b6ef534503addef422e21da53392bbc0fe7628f4 tags/0.5.0~84", "commitMessage": "avoid and report NaN or Infinity distance, related to #432\n", "commitDateTime": "2015-06-04 19:04:52", "authoredDateTime": "2015-06-04 19:04:52", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/OSMReader.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/Bike2WeightFlagEncoder.java", "insertions": 24, "deletions": 30, "lines": 54}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMReader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReader.addEdge(int,int,com.graphhopper.reader.PointList,long,long)", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Bike2WeightFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.Bike2WeightFlagEncoder.applyWayTags(com.graphhopper.reader.OSMWay,com.graphhopper.util.EdgeIteratorState)", "TOT": 10, "UPD": 3, "INS": 1, "MOV": 5, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fc0d8e1f6c096e38507d7d868d4b1cbf049b86ac", "83aa9a3e8c852922a5d7ed25b4d48bea0985edd0", "32a291d5c2d31cf88792fac9c5471c9c760cd850", "b6ef534503addef422e21da53392bbc0fe7628f4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 93, "deletions": 67, "lines": 160, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 50, "UPD": 13, "INS": 18, "MOV": 13, "DEL": 6, "spoonFilesChanged": 6, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util", "core/src/main/java/com/graphhopper/reader", "core/files/map-bug432.osm.gz", "core/files/N52E008hgt.zip"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.Bike2WeightFlagEncoder.applyWayTags(com.graphhopper.reader.OSMWay,com.graphhopper.util.EdgeIteratorState)", "com.graphhopper.routing.RoutingAlgorithmIT.testBike2_issue432()", "com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList,long,long)", "com.graphhopper.routing.util.PrepareRoutingSubnetworks.toString(com.graphhopper.routing.util.EdgeIterator)", "com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long,double)", "com.graphhopper.reader.OSMReader.printInfo(java.lang.String)", "com.graphhopper.reader.OSMReader.addEdge(int,int,com.graphhopper.reader.PointList,long,long)", "com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int,int,com.graphhopper.coll.GHBitSet)", "com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long,double)"]}, {"title": "Improve error handling of web API", "body": "Current error handling in the web module is weak:\n- spread in every servlet, instead use a custom error handler\n- default error handler prints html, not json\n- many errors do not influence http error code\n- weak error JSON format as it is under info\n- if type=gpx an error in xml format should be printed\n- Downloader class throws exceptions for http error codes >= 400\n\nThis change will cause a breaking change for every clients reading (uncarefully) the error message under info.errors[0].message\n", "url": "https://github.com/graphhopper/graphhopper/issues/426", "user": "karussell", "labels": ["bug", "web"], "created": "2015-05-28 14:10:38", "closed": "2015-05-28 19:16:48", "commits": {"bf2b6872c9d422a5bd0cd95a32f0e55f2fa1d4a3": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "bf2b6872c9d422a5bd0cd95a32f0e55f2fa1d4a3", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["776f4bf0baf02d7515703afc729f40deaee9a81e"], "nameRev": "bf2b6872c9d422a5bd0cd95a32f0e55f2fa1d4a3 tags/0.5.0~100", "commitMessage": "cleaner error handling, breaking change for API but only in error JSON format, fixes #426\n", "commitDateTime": "2015-05-28 16:22:58", "authoredDateTime": "2015-05-28 16:07:55", "commitGitStats": [{"filePath": "core/files/changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/GHResponse.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/util/Downloader.java", "insertions": 18, "deletions": 6, "lines": 24}, {"filePath": "core/src/test/java/com/graphhopper/GHResponseTest.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "docs/web/api-doc.md", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "web/src/main/java/com/graphhopper/http/GHBaseServlet.java", "insertions": 35, "deletions": 33, "lines": 68}, {"filePath": "web/src/main/java/com/graphhopper/http/GHErrorHandler.java", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "web/src/main/java/com/graphhopper/http/GHServer.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperServlet.java", "insertions": 71, "deletions": 66, "lines": 137}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperWeb.java", "insertions": 45, "deletions": 33, "lines": 78}, {"filePath": "web/src/main/java/com/graphhopper/http/I18NServlet.java", "insertions": 18, "deletions": 25, "lines": 43}, {"filePath": "web/src/main/java/com/graphhopper/http/InfoServlet.java", "insertions": 0, "deletions": 15, "lines": 15}, {"filePath": "web/src/main/java/com/graphhopper/http/InvalidRequestServlet.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "web/src/main/java/com/graphhopper/http/NearestServlet.java", "insertions": 7, "deletions": 26, "lines": 33}, {"filePath": "web/src/main/webapp/js/ghrequest.js", "insertions": 11, "deletions": 13, "lines": 24}, {"filePath": "web/src/main/webapp/js/main.js", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "web/src/test/java/com/graphhopper/http/BaseServletTester.java", "insertions": 16, "deletions": 3, "lines": 19}, {"filePath": "web/src/test/java/com/graphhopper/http/GraphHopperServletIT.java", "insertions": 26, "deletions": 11, "lines": 37}, {"filePath": "web/src/test/java/com/graphhopper/http/GraphHopperServletWithEleIT.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GHResponse.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GHResponse.toString()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Downloader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Downloader.fetch(java.net.HttpURLConnection)", "TOT": 12, "UPD": 0, "INS": 4, "MOV": 5, "DEL": 3}, {"spoonMethodName": "com.graphhopper.util.Downloader.downloadAsString(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHResponseTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GHResponseTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHBaseServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GHBaseServlet.returnError(javax.servlet.http.HttpServletResponse,java.lang.String)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GHBaseServlet.writeError(javax.servlet.http.HttpServletResponse,int,java.lang.String)", "TOT": 10, "UPD": 5, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.graphhopper.http.GHBaseServlet.writeJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.json.JSONObject)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GHBaseServlet", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.GHBaseServlet.writeResponse(javax.servlet.http.HttpServletResponse,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.GHBaseServlet.writeJsonError(javax.servlet.http.HttpServletResponse,int,org.json.JSONObject)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHErrorHandler.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GHErrorHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHServer.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GHServer.start(com.google.inject.Injector)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperServlet.writePath(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 13, "UPD": 7, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServlet.errorsToXML(java.util.List)", "TOT": 24, "UPD": 3, "INS": 1, "MOV": 18, "DEL": 2}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServlet.createPoints(com.graphhopper.http.PointList,boolean,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServlet.createJson(com.graphhopper.GHResponse,boolean,boolean,boolean,boolean)", "TOT": 8, "UPD": 4, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServlet.createGPXString(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.graphhopper.GHResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GraphHopperWeb.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperWeb.readErrors(java.util.List,org.json.JSONArray)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GraphHopperWeb.route(com.graphhopper.GHRequest)", "TOT": 18, "UPD": 2, "INS": 1, "MOV": 11, "DEL": 4}, {"spoonMethodName": "com.graphhopper.http.GraphHopperWeb.readErrors(java.util.List,org.json.JSONObject)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "I18NServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.I18NServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 11, "UPD": 0, "INS": 0, "MOV": 10, "DEL": 1}]}, {"spoonFilePath": "InfoServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.InfoServlet.writeInfos(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.InfoServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "InvalidRequestServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.InvalidRequestServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 3}]}, {"spoonFilePath": "NearestServlet.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.NearestServlet.writeNearest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.NearestServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "BaseServletTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.BaseServletTester.query(java.lang.String)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.BaseServletTester.query(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.BaseServletTester.queryString(java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperServletIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperServletIT.testFailIfElevationRequestedButNotIncluded()", "TOT": 12, "UPD": 7, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServletIT.testGraphHopperWebRealExceptions()", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 3}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServletIT.testGPX()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServletIT.testGPXWithError()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServletIT.testBasicQuery()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServletIT.testJsonRounding()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperServletWithEleIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperServletWithEleIT.testElevation()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.http.GraphHopperServletWithEleIT.testNoElevation()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bf2b6872c9d422a5bd0cd95a32f0e55f2fa1d4a3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 279, "deletions": 242, "lines": 521, "gitFilesChange": 13}, "spoonStatsSummary": {"TOT": 179, "UPD": 53, "INS": 34, "MOV": 65, "DEL": 27, "spoonFilesChanged": 13, "spoonMethodsChanged": 34}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/java/com/graphhopper/http", "core/src/main/java/com/graphhopper/util", "web/src/main/webapp/js/main.js", "core/src/main/java/com/graphhopper", "web/src/main/webapp/js/ghrequest.js"], "changesInPackagesSPOON": ["com.graphhopper.http.GHBaseServlet.writeJsonError(javax.servlet.http.HttpServletResponse,int,org.json.JSONObject)", "com.graphhopper.http.GraphHopperServletIT.testJsonRounding()", "com.graphhopper.http.GraphHopperWeb.readErrors(java.util.List,org.json.JSONObject)", "com.graphhopper.GHResponse.toString()", "com.graphhopper.http.InfoServlet.writeInfos(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.GraphHopperWeb.route(com.graphhopper.GHRequest)", "com.graphhopper.http.GraphHopperServletWithEleIT.testElevation()", "com.graphhopper.http.GraphHopperServletIT.testFailIfElevationRequestedButNotIncluded()", "com.graphhopper.http.InfoServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.GraphHopperServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.GraphHopperServlet.createGPXString(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,com.graphhopper.GHResponse)", "com.graphhopper.http.InvalidRequestServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.GHBaseServlet.writeJson(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.json.JSONObject)", "com.graphhopper.http.GHErrorHandler", "com.graphhopper.http.GraphHopperServlet.errorsToXML(java.util.List)", "com.graphhopper.util.Downloader.fetch(java.net.HttpURLConnection)", "com.graphhopper.http.GHBaseServlet.returnError(javax.servlet.http.HttpServletResponse,java.lang.String)", "com.graphhopper.http.GraphHopperServletWithEleIT.testNoElevation()", "com.graphhopper.http.GraphHopperServletIT.testGraphHopperWebRealExceptions()", "com.graphhopper.http.GHBaseServlet.writeResponse(javax.servlet.http.HttpServletResponse,java.lang.String)", "com.graphhopper.http.I18NServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.GraphHopperServletIT.testGPX()", "com.graphhopper.http.GHBaseServlet", "com.graphhopper.http.GraphHopperServletIT.testGPXWithError()", "com.graphhopper.http.GraphHopperWeb.readErrors(java.util.List,org.json.JSONArray)", "com.graphhopper.http.GraphHopperServlet.createPoints(com.graphhopper.http.PointList,boolean,boolean)", "com.graphhopper.http.GHBaseServlet.writeError(javax.servlet.http.HttpServletResponse,int,java.lang.String)", "com.graphhopper.http.GHServer.start(com.google.inject.Injector)", "com.graphhopper.http.NearestServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.GraphHopperServletIT.testBasicQuery()", "com.graphhopper.http.GraphHopperServlet.writePath(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.NearestServlet.writeNearest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "com.graphhopper.http.GraphHopperServlet.createJson(com.graphhopper.GHResponse,boolean,boolean,boolean,boolean)", "com.graphhopper.util.Downloader.downloadAsString(java.lang.String)"]}, {"title": "Strange error when using pt locale", "body": "See [this link](https://graphhopper.com/maps/?point=40.036027%2C-8.514404&point=39.215231%2C-8.85498&locale=pt) which produces an error message `Conversion = s, Flags =` which does not occur for locale=en\n", "url": "https://github.com/graphhopper/graphhopper/issues/400", "user": "karussell", "labels": ["bug"], "created": "2015-04-28 19:54:26", "closed": "2015-04-28 20:28:52", "commits": {"f36d42a1a146364b65482295005b27aee473e29d": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f36d42a1a146364b65482295005b27aee473e29d", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["e829cf09c3eb49eb7d5cc35b054a18c1e59becfe"], "nameRev": "f36d42a1a146364b65482295005b27aee473e29d tags/0.5.0~132", "commitMessage": "adding cz and fixing #400 including check while import for every TR key\n", "commitDateTime": "2015-04-28 22:28:29", "authoredDateTime": "2015-04-28 22:24:39", "commitGitStats": [{"filePath": "core/files/update-translations.sh", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/util/TranslationMap.java", "insertions": 17, "deletions": 2, "lines": 19}, {"filePath": "core/src/main/resources/com/graphhopper/util/cz.txt", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "core/src/main/resources/com/graphhopper/util/nl.txt", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "core/src/main/resources/com/graphhopper/util/pt_BR.txt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/resources/com/graphhopper/util/pt_PT.txt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/resources/com/graphhopper/util/ro.txt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/resources/com/graphhopper/util/sk.txt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/util/TranslationMapTest.java", "insertions": 8, "deletions": 1, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "TranslationMap.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.TranslationMap", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.TranslationMap.postImportHook()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TranslationMapTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.TranslationMapTest.testToRoundaboutString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f36d42a1a146364b65482295005b27aee473e29d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 3, "lines": 21, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/files/update-translations.sh", "core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.util.TranslationMap", "com.graphhopper.util.TranslationMap.postImportHook()"]}, {"title": "Priority bug for WORST value", "body": "I got an email with:\n\n_I think there may be a bug in the priority weighting (we\u2019ve copied the motorcycle flag encoder) as if the GetDouble method uses the UNCHANGED value if the priority weighting returns zero which is also the weighting value for WORST.  This would mean that WORST roadtypes are treated the same as UNCHANGED._\n", "url": "https://github.com/graphhopper/graphhopper/issues/399", "user": "karussell", "labels": ["bug"], "created": "2015-04-28 15:45:54", "closed": "2015-08-11 14:40:12", "commits": {"b88979c69169b87b41c14b9f5a79fe4bf6026e33": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "29dc23ad9b88f3f23bc430d6b18cca8837a02a0d": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 104.00027777777778, "commitsDetails": [{"commitHash": "b88979c69169b87b41c14b9f5a79fe4bf6026e33", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["6d7b0fd68ecb50570e48f86c0b632a23db200b95"], "nameRev": "b88979c69169b87b41c14b9f5a79fe4bf6026e33 tags/0.5.0~26", "commitMessage": "remove WORST==0 option from priorities, reason #399\n", "commitDateTime": "2015-07-28 14:28:31", "authoredDateTime": "2015-07-28 14:28:31", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/PriorityCode.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PriorityCode.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.PriorityCode", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "29dc23ad9b88f3f23bc430d6b18cca8837a02a0d", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["a8c973a99a7d3fb1a9adcbb925bddc7b028b4a11"], "nameRev": "29dc23ad9b88f3f23bc430d6b18cca8837a02a0d tags/0.5.0~1^2~7", "commitMessage": "always store a prio code, fixes #399, reverting b88979c\n", "commitDateTime": "2015-08-11 16:35:54", "authoredDateTime": "2015-08-11 16:35:54", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java", "insertions": 9, "deletions": 37, "lines": 46}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 17, "deletions": 50, "lines": 67}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/MotorcycleFlagEncoder.java", "insertions": 7, "deletions": 35, "lines": 42}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/PriorityCode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/AbstractBikeFlagEncoderTester.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "BikeCommonFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder.getLong(long,int)", "TOT": 8, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder.defineWayBits(int,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder.getDouble(long,int)", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long,int,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.getLong(long,int)", "TOT": 8, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.defineWayBits(int,int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "TOT": 24, "UPD": 1, "INS": 7, "MOV": 12, "DEL": 4}, {"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.getDouble(long,int)", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.setLong(long,int,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "MotorcycleFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.MotorcycleFlagEncoder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.MotorcycleFlagEncoder.getLong(long,int)", "TOT": 8, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.util.MotorcycleFlagEncoder.calcPriority(com.graphhopper.reader.OSMWay,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.MotorcycleFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.MotorcycleFlagEncoder.defineWayBits(int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.MotorcycleFlagEncoder.getDouble(long,int)", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.MotorcycleFlagEncoder.setLong(long,int,long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "PriorityCode.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.PriorityCode", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractBikeFlagEncoderTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.AbstractBikeFlagEncoderTester.testPriority()", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b88979c69169b87b41c14b9f5a79fe4bf6026e33", "29dc23ad9b88f3f23bc430d6b18cca8837a02a0d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 34, "deletions": 123, "lines": 157, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 94, "UPD": 20, "INS": 13, "MOV": 39, "DEL": 22, "spoonFilesChanged": 4, "spoonMethodsChanged": 20}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.PriorityCode", "com.graphhopper.routing.util.BikeCommonFlagEncoder.getDouble(long,int)", "com.graphhopper.routing.util.FootFlagEncoder.setLong(long,int,long)", "com.graphhopper.routing.util.BikeCommonFlagEncoder.setLong(long,int,long)", "com.graphhopper.routing.util.MotorcycleFlagEncoder", "com.graphhopper.routing.util.BikeCommonFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "com.graphhopper.routing.util.BikeCommonFlagEncoder.defineWayBits(int,int)", "com.graphhopper.routing.util.MotorcycleFlagEncoder.calcPriority(com.graphhopper.reader.OSMWay,long)", "com.graphhopper.routing.util.BikeCommonFlagEncoder.getLong(long,int)", "com.graphhopper.routing.util.FootFlagEncoder.defineWayBits(int,int)", "com.graphhopper.routing.util.FootFlagEncoder.getDouble(long,int)", "com.graphhopper.routing.util.MotorcycleFlagEncoder.defineWayBits(int,int)", "com.graphhopper.routing.util.FootFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "com.graphhopper.routing.util.MotorcycleFlagEncoder.getDouble(long,int)", "com.graphhopper.routing.util.FootFlagEncoder.getLong(long,int)", "com.graphhopper.routing.util.MotorcycleFlagEncoder.getLong(long,int)", "com.graphhopper.routing.util.MotorcycleFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay,long,long)", "com.graphhopper.routing.util.MotorcycleFlagEncoder.setLong(long,int,long)", "com.graphhopper.routing.util.BikeCommonFlagEncoder", "com.graphhopper.routing.util.FootFlagEncoder"]}, {"title": "Error in Dijkstra-One-To-Many cache", "body": "As mentioned in issue #239, there was an error in the cache of the Dijkstra-One-To-Many. However, the new version wrongly returns NOT_FOUND when to == currNode (i.e. searching the same path twice in a row). The inequality\n`weights[to] < weights[currNode]`\nshould maybe not be strict?\n", "url": "https://github.com/graphhopper/graphhopper/issues/362", "user": "emiwar", "labels": ["bug"], "created": "2015-03-11 17:15:23", "closed": "2015-03-11 19:29:33", "commits": {"7bd6ad5fb195ad7263e485f17d288a85dc418d3b": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7bd6ad5fb195ad7263e485f17d288a85dc418d3b", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["d479c6bff6d4d3c7eb185aaee27de177fd61756b"], "nameRev": "7bd6ad5fb195ad7263e485f17d288a85dc418d3b tags/0.4.1~2^2~7", "commitMessage": "fix bug in DijkstraOneToMany, #362\n", "commitDateTime": "2015-03-11 20:29:13", "authoredDateTime": "2015-03-11 20:29:13", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/DijkstraOneToMany.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/DijkstraOneToManyTest.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DijkstraOneToMany.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.findEndNode(int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DijkstraOneToManyTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraOneToManyTest.testIssue239()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7bd6ad5fb195ad7263e485f17d288a85dc418d3b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing"], "changesInPackagesSPOON": ["com.graphhopper.routing.DijkstraOneToMany.findEndNode(int,int)"]}, {"title": "[BUG] com.graphhopper.util.Instruction cannot be cast to com.graphhopper.util.FinishInstruction", "body": "Hello there, @karussell  I have a question for you.\n\nI'm using the plain java API, but sometimes a call on Instruction.getTurnDescription(Translation tr) throws an exception on line https://github.com/graphhopper/graphhopper/blob/master/core/src/main/java/com/graphhopper/util/Instruction.java#L255 \n\n\"java.lang.ClassCastException: com.graphhopper.util.Instruction cannot be cast to com.graphhopper.util.FinishInstruction\". \n\nIt just happens with results with \"Stopover X\" route (Instruction.REACHED_VIA), the strange thing is that on the REST service, with the same points, everything works fine. Any idea? Thanks.\n\n**This throws:**\n\n``` java\n        GHRequest hopperRequest = new GHRequest();\n        hopperRequest.setVehicle(\"FOOT\");\n        hopperRequest.addPoint(new GHPoint(41.89387,12.493069));\n        hopperRequest.addPoint(new GHPoint(41.89493,12.4868));\n        hopperRequest.addPoint(new GHPoint(41.8946,12.483092));\n        GHResponse hopperResponse = hopper.route(hopperRequest);\n\n/**\n(0,Continue onto Via delle Sette Sale,23.81,17143)\n(0,Continue onto Piazza di San Pietro in Vincoli,27.999,20159)\n(2,Turn right onto Via di San Francesco di Paola,63.577,45773)\n(-2,Turn left onto Via Cavour,223.221,160717)\n(2,Turn right onto Via dell'Agnello,47.903,34489)\n(-1,Turn slight left onto Via del Garofano,54.77,39434)\n(-2,Turn left onto Via Baccina,102.302,73657)\n(2,Turn right onto Via degli Ibernesi,88.153,63469)\n(0,Continue onto Piazza del Grillo,12.274,8837)\n(0,Continue onto Via Campo Carleo,12.91,9295)\n(5,Stopover 1,0.0,0)\n(0,Continue onto Via Campo Carleo,18.565,13366)\n(-2,Turn left,71.852,51733)\n(2,Turn right onto Via Alessandrina,108.581,78178)\n(0,Continue onto Foro Traiano,63.596,45787)\n(0,Continue,95.786,68964)\n(3,Turn sharp right onto Via di San Pietro in Carcere,64.101,46150)\n(2,Turn right onto Scala dell'Arce Capitolina,98.727,71081)\n(2,Turn right onto Via di San Pietro in Carcere,6.153,4430)\n(2,Turn right,226.545,163108)\n(4,Finish!,0.0,0)\n**/\n        hopperResponse.getInstructions().createJson();\n\n/**\njava.lang.ClassCastException: com.graphhopper.util.Instruction cannot be cast to com.graphhopper.util.FinishInstruction\n    com.graphhopper.util.Instruction.getTurnDescription(Instruction.java:255)\n    com.graphhopper.util.InstructionList.createJson(InstructionList.java:75)\n**/\n```\n\n**This works**\n\n``` java\n\n/route?point=41.89387,12.493069&point=41.89493,12.4868&point=41.8946,12.483092&&type=json&points_encoded=true&way_point_max_distance=1.0&algo=&locale=en_US&elevation=false&vehicle=FOOT&debug=true\n\n/**\n{\n  \"paths\": [{\n    \"points_encoded\": true,\n    \"time\": 1015770,\n    \"distance\": 1410.826,\n    \"instructions\": [\n      {\n        \"sign\": 0,\n        \"text\": \"Continue onto Via delle Sette Sale\",\n        \"time\": 17143,\n        \"distance\": 23.81,\n        \"interval\": [\n          0,\n          1\n        ]\n      },\n      {\n        \"sign\": 0,\n        \"text\": \"Continue onto Piazza di San Pietro in Vincoli\",\n        \"time\": 20159,\n        \"distance\": 27.999,\n        \"interval\": [\n          1,\n          2\n        ]\n      },\n      {\n        \"sign\": 2,\n        \"text\": \"Turn right onto Via di San Francesco di Paola\",\n        \"time\": 45773,\n        \"distance\": 63.577,\n        \"interval\": [\n          2,\n          4\n        ]\n      },\n      {\n        \"sign\": -2,\n        \"text\": \"Turn left onto Via Cavour\",\n        \"time\": 160717,\n        \"distance\": 223.221,\n        \"interval\": [\n          4,\n          9\n        ]\n      },\n      {\n        \"sign\": 2,\n        \"text\": \"Turn right onto Via dell'Agnello\",\n        \"time\": 34489,\n        \"distance\": 47.903,\n        \"interval\": [\n          9,\n          11\n        ]\n      },\n      {\n        \"sign\": -1,\n        \"text\": \"Turn slight left onto Via del Garofano\",\n        \"time\": 39434,\n        \"distance\": 54.77,\n        \"interval\": [\n          11,\n          12\n        ]\n      },\n      {\n        \"sign\": -2,\n        \"text\": \"Turn left onto Via Baccina\",\n        \"time\": 73657,\n        \"distance\": 102.302,\n        \"interval\": [\n          12,\n          13\n        ]\n      },\n      {\n        \"sign\": 2,\n        \"text\": \"Turn right onto Via degli Ibernesi\",\n        \"time\": 63469,\n        \"distance\": 88.153,\n        \"interval\": [\n          13,\n          15\n        ]\n      },\n      {\n        \"sign\": 0,\n        \"text\": \"Continue onto Piazza del Grillo\",\n        \"time\": 8837,\n        \"distance\": 12.274,\n        \"interval\": [\n          15,\n          16\n        ]\n      },\n      {\n        \"sign\": 0,\n        \"text\": \"Continue onto Via Campo Carleo\",\n        \"time\": 9295,\n        \"distance\": 12.91,\n        \"interval\": [\n          16,\n          18\n        ]\n      },\n      {\n        \"sign\": 5,\n        \"text\": \"Stopover 1\",\n        \"time\": 0,\n        \"distance\": 0,\n        \"interval\": [\n          18,\n          19\n        ]\n      },\n      {\n        \"sign\": 0,\n        \"text\": \"Continue onto Via Campo Carleo\",\n        \"time\": 13366,\n        \"distance\": 18.565,\n        \"interval\": [\n          19,\n          21\n        ]\n      },\n      {\n        \"sign\": -2,\n        \"text\": \"Turn left\",\n        \"time\": 51733,\n        \"distance\": 71.852,\n        \"interval\": [\n          21,\n          26\n        ]\n      },\n      {\n        \"sign\": 2,\n        \"text\": \"Turn right onto Via Alessandrina\",\n        \"time\": 78178,\n        \"distance\": 108.581,\n        \"interval\": [\n          26,\n          28\n        ]\n      },\n      {\n        \"sign\": 0,\n        \"text\": \"Continue onto Foro Traiano\",\n        \"time\": 45787,\n        \"distance\": 63.596,\n        \"interval\": [\n          28,\n          31\n        ]\n      },\n      {\n        \"sign\": 0,\n        \"text\": \"Continue\",\n        \"time\": 68964,\n        \"distance\": 95.786,\n        \"interval\": [\n          31,\n          35\n        ]\n      },\n      {\n        \"sign\": 3,\n        \"text\": \"Turn sharp right onto Via di San Pietro in Carcere\",\n        \"time\": 46150,\n        \"distance\": 64.101,\n        \"interval\": [\n          35,\n          39\n        ]\n      },\n      {\n        \"sign\": 2,\n        \"text\": \"Turn right onto Scala dell'Arce Capitolina\",\n        \"time\": 71081,\n        \"distance\": 98.727,\n        \"interval\": [\n          39,\n          44\n        ]\n      },\n      {\n        \"sign\": 2,\n        \"text\": \"Turn right onto Via di San Pietro in Carcere\",\n        \"time\": 4430,\n        \"distance\": 6.153,\n        \"interval\": [\n          44,\n          45\n        ]\n      },\n      {\n        \"sign\": 2,\n        \"text\": \"Turn right\",\n        \"time\": 163108,\n        \"distance\": 226.545,\n        \"interval\": [\n          45,\n          55\n        ]\n      },\n      {\n        \"sign\": 4,\n        \"text\": \"Finish!\",\n        \"time\": 0,\n        \"distance\": 0,\n        \"interval\": [\n          55,\n          55\n        ]\n      }\n    ],\n    \"bbox\": [\n      12.483158,\n      41.893391,\n      12.492984,\n      41.895368\n    ],\n    \"points\": \"qlu~Fc`gkANt@R|@aA\\\\i@Vt@`FJRD\\\\@Rt@tEOF_A`@sAbAb@pFoAz@IxACZARAJ??Eh@??Gl@P\\\\JK\\\\PLNmBfBo@l@ABr@nAR^RbAf@b@Tg@Rc@b@t@PRZHH?Br@n@DJBn@l@NLCJI?o@]MUKEa@?YHGo@wBr@Fb@PnA\"\n  }],\n  \"info\": {\"took\": 10}\n}\n**/\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/359", "user": "dewos", "labels": ["bug"], "created": "2015-03-08 14:53:21", "closed": "2015-03-12 09:10:23", "commits": {"e0955f56743028520a16566154c0a154907d753f": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "e0955f56743028520a16566154c0a154907d753f", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["f8287d41232312a9f8cb1e325f33aaafd36766cc"], "nameRev": "e0955f56743028520a16566154c0a154907d753f tags/0.4.1~2^2~9", "commitMessage": "fixing GraphHopperWeb bug #359 and improving this interface, minor refactoring necessary\n", "commitDateTime": "2015-03-11 16:48:33", "authoredDateTime": "2015-03-11 16:48:33", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/FinishInstruction.java", "insertions": 8, "deletions": 14, "lines": 22}, {"filePath": "core/src/main/java/com/graphhopper/util/Instruction.java", "insertions": 18, "deletions": 12, "lines": 30}, {"filePath": "core/src/main/java/com/graphhopper/util/InstructionList.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/util/PathMerger.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/util/RoundaboutInstruction.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/util/ViaInstruction.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperWeb.java", "insertions": 33, "deletions": 5, "lines": 38}, {"filePath": "web/src/test/java/com/graphhopper/http/GraphHopperServletIT.java", "insertions": 17, "deletions": 1, "lines": 18}, {"filePath": "web/src/test/java/com/graphhopper/http/GraphHopperWebTest.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FinishInstruction.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.FinishInstruction.setVia(int)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.FinishInstruction", "TOT": 7, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.FinishInstruction.getViaPosition()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "Instruction.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Instruction.getTurnDescription(com.graphhopper.util.Translation)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 3, "DEL": 2}, {"spoonMethodName": "com.graphhopper.util.Instruction", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.Instruction.setUseRawName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InstructionList.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.Instruction)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PathMerger.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PathMerger.doWork(com.graphhopper.GHResponse,java.util.List,com.graphhopper.util.Translation)", "TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RoundaboutInstruction.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.RoundaboutInstruction.getTurnDescription(com.graphhopper.util.Translation)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ViaInstruction.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.ViaInstruction", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperWeb.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperWeb.route(com.graphhopper.GHRequest)", "TOT": 18, "UPD": 1, "INS": 8, "MOV": 8, "DEL": 1}]}, {"spoonFilePath": "GraphHopperServletIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.http.GraphHopperServletIT.testGraphHopperWeb()", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperWebTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e0955f56743028520a16566154c0a154907d753f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 131, "deletions": 34, "lines": 165, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 57, "UPD": 15, "INS": 24, "MOV": 13, "DEL": 5, "spoonFilesChanged": 8, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util", "web/src/main/java/com/graphhopper/http"], "changesInPackagesSPOON": ["com.graphhopper.util.Instruction.getTurnDescription(com.graphhopper.util.Translation)", "com.graphhopper.util.RoundaboutInstruction.getTurnDescription(com.graphhopper.util.Translation)", "com.graphhopper.http.GraphHopperWeb.route(com.graphhopper.GHRequest)", "com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.Instruction)", "com.graphhopper.util.FinishInstruction.getViaPosition()", "com.graphhopper.util.ViaInstruction", "com.graphhopper.util.PathMerger.doWork(com.graphhopper.GHResponse,java.util.List,com.graphhopper.util.Translation)", "com.graphhopper.util.FinishInstruction.setVia(int)", "com.graphhopper.util.Instruction", "com.graphhopper.util.Instruction.setUseRawName()", "com.graphhopper.util.FinishInstruction", "com.graphhopper.http.GraphHopperServletIT.testGraphHopperWeb()"]}, {"title": "Rare situations let roundabout exit number calculation fail", "body": "See [here](https://graphhopper.com/maps/?point=54.236042%2C-2.717909&point=54.236779%2C-2.718177) where it says 'Problem occured:RoundaboutInstruction must contain exitNumber>0'\n\nMaybe this is a tagging issue or related to some CH stuff (?)\n", "url": "https://github.com/graphhopper/graphhopper/issues/353", "user": "karussell", "labels": ["bug"], "created": "2015-03-04 14:29:17", "closed": "2015-03-04 17:49:52", "commits": {"1d938c41d85eb9fbbb47d0fb0acc18c1f480be98": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1d938c41d85eb9fbbb47d0fb0acc18c1f480be98", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["0f31a37b79872a4ab15abaa6f98f15ccd634ed8e", "ffcab65c1e7369e187374cc7d9a9ba2e491a8d24"], "nameRev": "1d938c41d85eb9fbbb47d0fb0acc18c1f480be98 tags/0.4.1~5^2~4", "commitMessage": "Merge pull request #354 from jansoe/RoundaboutFix\n\nRoundabout improvements, fixes #352 and #353", "commitDateTime": "2015-03-04 18:46:57", "authoredDateTime": "2015-03-04 18:46:57", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/Path.java", "insertions": 23, "deletions": 6, "lines": 29}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/util/Constants.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "core/src/test/java/com/graphhopper/routing/PathTest.java", "insertions": 206, "deletions": 60, "lines": 266}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/BikeFlagEncoderTest.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/FootFlagEncoderTest.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Graph build fail in rare situations with sac_scale due to BikeFlagEncoder bug", "body": "I try to build a graph with GH 0.4-rc1 for the Germany region: baden-wuerttemberg-latest.osm.pbf downloaded from Geofabrik today.\n(This file was last modified 4 hours ago and contains all OSM data up to 2015-03-03T21:21:02Z.)\n\nI use the options CH off and (car, foot, bike).\nBut the build fails with:\n\n``` java\nException in thread \"PBF Reader\" Exception in thread \"main\" java.lang.RuntimeException: Couldn't process file baden-wuerttemberg-latest.osm.pbf, error: car, no speed found for:cycleway\n    at com.graphhopper.reader.OSMReader.writeOsm2Graph(OSMReader.java:319)\n    at com.graphhopper.reader.OSMReader.readGraph(OSMReader.java:150)\n    at com.graphhopper.GraphHopper.importData(GraphHopper.java:663)\n    at com.graphhopper.GraphHopper.process(GraphHopper.java:632)\n    at com.graphhopper.GraphHopper.importOrLoad(GraphHopper.java:605)\n    at com.graphhopper.tools.Import.main(Import.java:15)\nCaused by: java.lang.IllegalStateException: car, no speed found for:cycleway\n    at com.graphhopper.routing.util.CarFlagEncoder.getSpeed(CarFlagEncoder.java:148)\n    at com.graphhopper.routing.util.CarFlagEncoder.handleWayTags(CarFlagEncoder.java:227)\n    at com.graphhopper.routing.util.EncodingManager.handleWayTags(EncodingManager.java:263)\n    at com.graphhopper.reader.OSMReader.processWay(OSMReader.java:367)\n    at com.graphhopper.reader.OSMReader.writeOsm2Graph(OSMReader.java:299)\n    ... 5 more\njava.lang.RuntimeException: Unable to read PBF file.\n    at com.graphhopper.reader.pbf.PbfReader.run(PbfReader.java:53)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.RuntimeException: java.lang.InterruptedException\n    at com.graphhopper.reader.OSMInputFile.process(OSMInputFile.java:265)\n    at com.graphhopper.reader.pbf.PbfDecoder.sendResultsToSink(PbfDecoder.java:106)\n    at com.graphhopper.reader.pbf.PbfDecoder.processBlobs(PbfDecoder.java:171)\n    at com.graphhopper.reader.pbf.PbfDecoder.run(PbfDecoder.java:184)\n    at com.graphhopper.reader.pbf.PbfReader.run(PbfReader.java:49)\n    ... 1 more\nCaused by: java.lang.InterruptedException\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.reportInterruptAfterWait(AbstractQueuedSynchronizer.java:2017)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2052)\n    at java.util.concurrent.LinkedBlockingQueue.put(LinkedBlockingQueue.java:349)\n    at com.graphhopper.reader.OSMInputFile.process(OSMInputFile.java:262)\n    ... 5 more\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/351", "user": "devemux86", "labels": ["bug"], "created": "2015-03-04 10:09:34", "closed": "2015-03-04 12:31:02", "commits": {"40e5b253a3cd1fa3bb6f79335af1f5c1e838af15": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "40e5b253a3cd1fa3bb6f79335af1f5c1e838af15", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["0f4bb92b3db31e808404c776871248b5798a29eb"], "nameRev": "40e5b253a3cd1fa3bb6f79335af1f5c1e838af15 tags/0.4.1~5^2~7", "commitMessage": "fixed #351, Graph build fail in rare situations with sac_scale due to BikeFlagEncoder bug\n", "commitDateTime": "2015-03-04 13:27:41", "authoredDateTime": "2015-03-04 13:27:41", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/OSMElement.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/reader/OSMWay.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/EncodingManager.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java", "insertions": 14, "deletions": 0, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMElement.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMElement.toString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OSMWay.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMWay.toString()", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "BikeCommonFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CarFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "EncodingManager.java", "spoonMethods": []}, {"spoonFilePath": "CarFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest.testCombination()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["40e5b253a3cd1fa3bb6f79335af1f5c1e838af15"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 4, "lines": 14, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 15, "UPD": 4, "INS": 4, "MOV": 4, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util", "core/src/main/java/com/graphhopper/reader"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)", "com.graphhopper.reader.OSMElement.toString()", "com.graphhopper.routing.util.BikeCommonFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)", "com.graphhopper.reader.OSMWay.toString()"]}, {"title": "Problem after #116 merge with multiple vehicles and CH", "body": "As commented [here](https://github.com/graphhopper/graphhopper/pull/338#issuecomment-76231325):\n\nWith more than 1 vehicles the build fails with \"Currently only one vehicle is supported if you enable CH\".\n", "url": "https://github.com/graphhopper/graphhopper/issues/350", "user": "karussell", "labels": ["bug"], "created": "2015-03-02 09:00:06", "closed": "2015-03-02 10:55:14", "commits": {"cd37193a99a38a529fb2da33c0e3f1405fe36605": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cd37193a99a38a529fb2da33c0e3f1405fe36605", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["f1098325b85914201a54f1412c292452f34b9552"], "nameRev": "cd37193a99a38a529fb2da33c0e3f1405fe36605 tags/0.4.1~20", "commitMessage": "no lexicographically sorted encoder list, fixes #350\n", "commitDateTime": "2015-03-02 11:55:08", "authoredDateTime": "2015-03-02 11:55:08", "commitGitStats": [{"filePath": "core/files/changelog.txt", "insertions": 6, "deletions": 9, "lines": 15}, {"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 4, "deletions": 53, "lines": 57}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/EncodingManager.java", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperTest.java", "insertions": 24, "deletions": 19, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.getFirstVehicle()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.loadGraph(com.graphhopper.GraphStorage)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.setDefaultVehicle(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.getDefaultVehicle()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.load(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.createPrepare()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "com.graphhopper.GraphHopper.initDefaultVehicleIfNecessary()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "EncodingManager.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.EncodingManager", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GraphHopperIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperIT.testMultipleVehiclesAndCH()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperIT.testRoundaboutInstructionsWithCH()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GraphHopperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperTest.testFailsForWrongConfig()", "TOT": 14, "UPD": 1, "INS": 3, "MOV": 5, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cd37193a99a38a529fb2da33c0e3f1405fe36605"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 62, "lines": 66, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 19, "UPD": 4, "INS": 2, "MOV": 4, "DEL": 9, "spoonFilesChanged": 3, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util", "core/src/main/java/com/graphhopper"], "changesInPackagesSPOON": ["com.graphhopper.GraphHopper.getFirstVehicle()", "com.graphhopper.GraphHopper.loadGraph(com.graphhopper.GraphStorage)", "com.graphhopper.routing.util.EncodingManager", "com.graphhopper.GraphHopper.createPrepare()", "com.graphhopper.GraphHopperIT.testMultipleVehiclesAndCH()", "com.graphhopper.GraphHopper.getDefaultVehicle()", "com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "com.graphhopper.GraphHopper.setDefaultVehicle(java.lang.String)", "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)", "com.graphhopper.GraphHopper.initDefaultVehicleIfNecessary()", "com.graphhopper.GraphHopper.load(java.lang.String)", "com.graphhopper.GraphHopperIT.testRoundaboutInstructionsWithCH()"]}, {"title": "Performance issue after merging #116", "body": "For Android routing there was observed a strong performance degradation. See this [comment](https://github.com/graphhopper/graphhopper/pull/338#issuecomment-76204808). As it turned out it could be reproduced on the Desktop too and was due to a wrong initialization of LevelEdgeFilter in PrepareContractionHierarchies.createAlgo\n", "url": "https://github.com/graphhopper/graphhopper/issues/349", "user": "karussell", "labels": ["bug"], "created": "2015-03-02 08:30:58", "closed": "2015-03-02 08:31:45", "commits": {"0ebce65424195d6ee29df1262fa586987e50f919": {"commitGHEventType": "closed", "commitUser": "karussell"}, "529dbc35124f0f226883b2822de7ac6a7f25b1cc": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0ebce65424195d6ee29df1262fa586987e50f919", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["2782ed146bc7bca1d63716448152969ab4fbed91"], "nameRev": "0ebce65424195d6ee29df1262fa586987e50f919 tags/0.4.1~26", "commitMessage": "fixed #349, performance issue after merging #116\n", "commitDateTime": "2015-03-02 09:31:36", "authoredDateTime": "2015-03-02 09:31:36", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "core/src/test/java/com/graphhopper/{routing => }/GraphHopperIT.java", "insertions": 41, "deletions": 6, "lines": 47}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.getVisitedSum()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "PrepareContractionHierarchies.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.initFromGraph()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "GraphHopperIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.GraphHopperIT.setUp()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.GraphHopperIT.tearDown()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.GraphHopperIT.beforeClass()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.GraphHopperIT.afterClass()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.GraphHopperIT.testMonacoWithInstructions()", "TOT": 23, "UPD": 23, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.GraphHopperIT.testMonacoVia()", "TOT": 40, "UPD": 40, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.GraphHopperIT.testSRTMWithInstructions()", "TOT": 18, "UPD": 18, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.GraphHopperIT.testKremsCyclewayInstructionsWithWayTypeInfo()", "TOT": 21, "UPD": 21, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.GraphHopperIT.testRoundaboutInstructionsWithCH()", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.GraphHopperIT.testMultipleVehiclesAndCH()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperIT.testIfCHIsUsed()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperIT.executeCHFootRoute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperIT.testMonacoWithInstructions()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "529dbc35124f0f226883b2822de7ac6a7f25b1cc", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["0ebce65424195d6ee29df1262fa586987e50f919"], "nameRev": "529dbc35124f0f226883b2822de7ac6a7f25b1cc tags/0.4.1~25", "commitMessage": "for #349: jdk8 visits more nodes (hashmap/priorityqueue differences?)\n", "commitDateTime": "2015-03-02 09:48:24", "authoredDateTime": "2015-03-02 09:48:24", "commitGitStats": [{"filePath": "core/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopperIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperIT.executeCHFootRoute()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["529dbc35124f0f226883b2822de7ac6a7f25b1cc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": ["com.graphhopper.GraphHopperIT.executeCHFootRoute()"]}, {"title": "Problem to find nearest nodes with a custom filter for LocationIndex", "body": "I have written custom filters for use with finding the nearest node.   This can cause the search to have to be broadened significantly.  As such I had written a workaround for expanding the search to find the nearest node. Recently, something similar (for expanding the search) was built into the system. In upgrading my code, I've refactored to allow the use of this new system. However, it is a broken as far as I can tell. In particular, the part that returns early if a result was found.  This is currently line 742 of LocationIndexTree.\n\n```\n        if (iteration % 2 == 1)\n        {\n            // Check if something was found already...\n            if (foundEntries.size() > 0)\n            {\n                double rMin = calculateRMin(queryLat, queryLon, iteration);\n                double minDistance = calcMinDistance(queryLat, queryLon, foundEntries);\n\n                if (minDistance < rMin)\n                {   // resultEntries contains a nearest node for sure\n                    break;\n                } // else: continue an undetected nearer node may sit in a neighbouring tile.\n                // Now calculate how far we have to look outside to find any hidden nearest nodes\n                // and repeat whole process with wider search area until this distance is covered.\n            }\n        }\n```\n\nIf I comment this out, it works fine again. It is always finding the same set of entries, but my filter is rejecting them over and over again. What I am doing is checking for nearest node which passes my filter. If none, I expand the search, which now means incrementing _maxRegionSearch_ and trying again. And repeating this until I find something or I my search area becomes too large to manage (which doesn't happen but I still have a limit in case).\n\nCan someone explain what this check and early exit from the iteration is doing?\n\nCheers,\n\nKen\n", "url": "https://github.com/graphhopper/graphhopper/issues/317", "user": "crowmagnumb", "labels": ["bug", "improvement"], "created": "2015-02-03 23:37:21", "closed": "2015-08-10 10:29:57", "commits": {}, "ttf": 187.00027777777777, "commitsDetails": []}, {"title": "Wrong \"Next instruction\" found while traveling", "body": "The InstructionList.find(double lat, double lon) method sometimes cannot find the correct Next Instruction. Here is a simple route where the blue marker is my current position and the find() method tells me that the next instruction is the \"Finish!\" The next instruction should be the \"Turn right onto DJ108G\".\n\nhttps://graphhopper.com/maps/?point=47.161277%2C22.870413&point=47.161098%2C22.869664&point=47.162368%2C22.870402&layer=Lyrk\n", "url": "https://github.com/graphhopper/graphhopper/issues/295", "user": "gyorfiavarlehel", "labels": ["bug"], "created": "2014-12-18 18:34:28", "closed": "2014-12-19 21:16:41", "commits": {"344782e96f4aff117e2ec18dbed074408cdffa51": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "344782e96f4aff117e2ec18dbed074408cdffa51", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["6b3a562db6f048d83885fbbe91974c56230562bf"], "nameRev": "344782e96f4aff117e2ec18dbed074408cdffa51 tags/0.4.1~67", "commitMessage": "fixed #295, Wrong next instruction found while traveling\n", "commitDateTime": "2014-12-19 22:16:32", "authoredDateTime": "2014-12-19 22:16:32", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/InstructionList.java", "insertions": 59, "deletions": 20, "lines": 79}, {"filePath": "core/src/test/java/com/graphhopper/routing/PathTest.java", "insertions": 15, "deletions": 6, "lines": 21}], "commitSpoonAstDiffStats": [{"spoonFilePath": "InstructionList.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.InstructionList.find(double,double)", "TOT": 49, "UPD": 17, "INS": 0, "MOV": 26, "DEL": 6}, {"spoonMethodName": "com.graphhopper.util.InstructionList.find(double,double,double)", "TOT": 14, "UPD": 0, "INS": 14, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PathTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.PathTest.testFindInstruction()", "TOT": 16, "UPD": 6, "INS": 7, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["344782e96f4aff117e2ec18dbed074408cdffa51"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 59, "deletions": 20, "lines": 79, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 63, "UPD": 17, "INS": 14, "MOV": 26, "DEL": 6, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.util.InstructionList.find(double,double)", "com.graphhopper.util.InstructionList.find(double,double,double)"]}, {"title": "Via instruction is wrong", "body": "The first instruction after a via point has to be recalculated in PathMerger. Otherwise we could get e.g. 'continue' when we need 'turn around' like [here](https://graphhopper.com/maps/?point=49.870245%2C11.892602&point=49.870628%2C11.892828&point=49.870245%2C11.892602&layer=Lyrk). Or fix this via merging all edges into one Path object and creating instructions out of that.\n\nAnd not sure if the following is a bug: the via point should not insert a duplicate point in the pointlist, instead we need an explicit skip of FinishInstructions when adding to the point list. BUT keep in mind that we will have to tweak the code in Instruction.createJson\n", "url": "https://github.com/graphhopper/graphhopper/issues/289", "user": "karussell", "labels": ["bug"], "created": "2014-11-27 19:54:41", "closed": "2017-10-17 00:53:29", "commits": {}, "ttf": 1054.0002777777777, "commitsDetails": []}, {"title": "Bug in LevelEdgeFilter", "body": "LevelEdgeFilter uses the prepared graph but should use the query graph in order to mock the getLevel calls. We'll implement a simple workaround so that levelGraph.ensureNodeIndex is not called (via levelGraph.getLevel) from multiple threads and we wait until #116 is finished and see if we can avoid the workaround.\n", "url": "https://github.com/graphhopper/graphhopper/issues/288", "user": "karussell", "labels": ["bug"], "created": "2014-11-26 12:19:52", "closed": "2015-02-05 14:20:50", "commits": {"0a7b7c115db21f73f4b485f1ec4c0992512ae909": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "be4dd6b1748596dc9ad97726544f8bc030e73da0": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 71.00027777777778, "commitsDetails": [{"commitHash": "0a7b7c115db21f73f4b485f1ec4c0992512ae909", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["1e059f0ffb42435eb4dc51aec6eb52047a3a070f"], "nameRev": "0a7b7c115db21f73f4b485f1ec4c0992512ae909 tags/0.4.1~93", "commitMessage": "workaround for #288\n", "commitDateTime": "2014-11-26 13:22:26", "authoredDateTime": "2014-11-26 13:22:26", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/LevelEdgeFilter.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PrepareContractionHierarchies.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.ch.AlgorithmOptions)", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "LevelEdgeFilter.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.LevelEdgeFilter", "TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.LevelEdgeFilter.accept(com.graphhopper.util.EdgeIteratorState)", "TOT": 9, "UPD": 0, "INS": 5, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "GraphHopperStorage.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}, {"commitHash": "be4dd6b1748596dc9ad97726544f8bc030e73da0", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["a80ea425b6e5d1190ca7d268dbe9e745a2860404"], "nameRev": "be4dd6b1748596dc9ad97726544f8bc030e73da0 tags/0.4.1~35^2~9", "commitMessage": "fix #288, Bug in LevelEdgeFilter\n", "commitDateTime": "2015-01-23 12:05:35", "authoredDateTime": "2015-01-23 12:05:35", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/LevelEdgeFilter.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/storage/LevelGraphStorage.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.getLevel(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LevelEdgeFilter.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.LevelEdgeFilter", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.LevelEdgeFilter.accept(com.graphhopper.util.EdgeIteratorState)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LevelGraphStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.LevelGraphStorage.getLevel(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0a7b7c115db21f73f4b485f1ec4c0992512ae909", "be4dd6b1748596dc9ad97726544f8bc030e73da0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 19, "deletions": 14, "lines": 33, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 26, "UPD": 7, "INS": 11, "MOV": 4, "DEL": 4, "spoonFilesChanged": 4, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util", "core/src/main/java/com/graphhopper/routing", "core/src/main/java/com/graphhopper/routing/ch", "core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.LevelEdgeFilter.accept(com.graphhopper.util.EdgeIteratorState)", "com.graphhopper.routing.util.LevelEdgeFilter", "com.graphhopper.storage.LevelGraphStorage.getLevel(int)", "com.graphhopper.routing.QueryGraph.getLevel(int)", "com.graphhopper.routing.ch.PrepareContractionHierarchies.createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.ch.AlgorithmOptions)"]}, {"title": "Turn Costs improvements necessary", "body": "As reported [here](https://lists.openstreetmap.org/pipermail/graphhopper/2014-November/001342.html) there is a problem with turn cost weighting.\n- [x] virtual edges should have the same turn costs associated as the original edge! keep in mind that there could be multiple points on one edge => more than 2 virtual edges per original edge\n- [x] In RoutingAlgorithmIT.testMoscowTurnCosts we should do some minor work to finally resolve the TODOs -> we can include this once we have fixed the previous issue\n- [x] u-turn restrictions do not seem to work, probably due to the if 'edgeId != edgeIdFrom'\n", "url": "https://github.com/graphhopper/graphhopper/issues/282", "user": "karussell", "labels": ["bug"], "created": "2014-11-06 21:01:35", "closed": "2015-01-14 15:36:19", "commits": {"57d4b7775601df55f44c752c8bb7e671456574e6": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "40855ec1d97fdeb60baecd5c9ebcccab0ba3bc05": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "6fa2557f1b581c438352a9e1b94ee5011a8d70ca": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 68.00027777777778, "commitsDetails": [{"commitHash": "57d4b7775601df55f44c752c8bb7e671456574e6", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["a731fbfca4109819d654c05ab1b2b5c5727e2959"], "nameRev": "57d4b7775601df55f44c752c8bb7e671456574e6 tags/0.4.1~96", "commitMessage": "fixing u-turn bug found in #282\n", "commitDateTime": "2014-11-20 12:09:14", "authoredDateTime": "2014-11-20 12:09:14", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/OSMTurnRelation.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "core/src/test/java/com/graphhopper/reader/OSMReaderTest.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "core/src/test/resources/com/graphhopper/reader/test-restrictions.xml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMTurnRelation.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMTurnRelation.getRestrictionAsEntries(com.graphhopper.routing.util.TurnCostEncoder,com.graphhopper.util.EdgeExplorer,com.graphhopper.util.EdgeExplorer,com.graphhopper.reader.OSMReader)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "OSMReaderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testTurnRestrictions()", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 5, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "40855ec1d97fdeb60baecd5c9ebcccab0ba3bc05", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["75a6b9c9c915224c1643ea4f29d800cc6659cfe7"], "nameRev": "40855ec1d97fdeb60baecd5c9ebcccab0ba3bc05 tags/0.4.1~82", "commitMessage": "preparation for #282\n", "commitDateTime": "2014-12-03 11:57:52", "authoredDateTime": "2014-12-03 11:57:52", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 23, "deletions": 14, "lines": 37}, {"filePath": "core/src/main/java/com/graphhopper/reader/OSMReader.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/routing/AlgorithmOptions.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 10, "deletions": 3, "lines": 13}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/TestAlgoCollector.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/TurnWeighting.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "core/src/main/java/com/graphhopper/storage/Graph.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphBuilder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/{ExtendedStorage.java => GraphExtension.java}", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphStorage.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/storage/{TurnCostStorage.java => TurnCostExtension.java}", "insertions": 8, "deletions": 7, "lines": 15}, {"filePath": "core/src/test/java/com/graphhopper/reader/OSMReaderTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/test/java/com/graphhopper/routing/EdgeBasedRoutingAlgorithmTest.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageWithTurnCostsTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "TOT": 11, "UPD": 4, "INS": 3, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.load(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.createWeighting(com.graphhopper.WeightingMap,com.graphhopper.FlagEncoder)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.GraphHopper.createTurnWeighting(com.graphhopper.Weighting,com.graphhopper.Graph,com.graphhopper.FlagEncoder)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OSMReader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReader.processRelation(com.graphhopper.reader.OSMRelation)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AlgorithmOptions.java", "spoonMethods": []}, {"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.getExtension()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestAlgoCollector.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.TestAlgoCollector.assertDistance(com.graphhopper.routing.util.TestAlgoCollector$AlgoHelperEntry,java.util.List,com.graphhopper.routing.util.TestAlgoCollector$OneRun)", "TOT": 6, "UPD": 3, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TurnWeighting.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.TurnWeighting", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int,int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Graph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.getExtension()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphBuilder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphBuilder.build()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphExtension.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.copyTo(com.graphhopper.storage.ExtendedStorage)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.NoExtendedStorage.copyTo(com.graphhopper.storage.ExtendedStorage)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.getExtendedStorage()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.getExtendedStorage()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TurnCostExtension.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.TurnCostStorage", "TOT": 12, "UPD": 12, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.copyTo(com.graphhopper.storage.ExtendedStorage)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.addTurnInfo(int,int,int,long)", "TOT": 24, "UPD": 24, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.nextTurnCostEntryIndex()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.setSegmentSize(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.create(long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.flush()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.close()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.loadExisting()", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.getTurnCostFlags(int,int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.nextCostFlags(int,int,int)", "TOT": 12, "UPD": 12, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.ensureTurnCostIndex(int)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.getDefaultNodeFieldValue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.init(com.graphhopper.storage.GraphStorage)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.getCapacity()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OSMReaderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testTurnRestrictions()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.newGraph(java.lang.String,com.graphhopper.reader.EncodingManager,boolean,boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EdgeBasedRoutingAlgorithmTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.initTurnRestrictions(com.graphhopper.storage.Graph,com.graphhopper.storage.TurnCostStorage,com.graphhopper.routing.TurnCostEncoder)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.createWeighting(com.graphhopper.routing.FlagEncoder,com.graphhopper.storage.TurnCostStorage)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.testBasicTurnRestriction()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.testUTurns()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.testBasicTurnCosts()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.runAlgo(com.graphhopper.routing.util.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperStorageWithTurnCostsTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.newGraph(com.graphhopper.storage.Directory,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6fa2557f1b581c438352a9e1b94ee5011a8d70ca", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["83705c23a4c58d5755428e2b095adb739b6b76e2"], "nameRev": "6fa2557f1b581c438352a9e1b94ee5011a8d70ca tags/0.4.1~50", "commitMessage": "fixed #282, issues with turn restrictions, also important refactoring: using nodeVia always as second parameter\n", "commitDateTime": "2015-01-14 16:36:12", "authoredDateTime": "2015-01-14 16:36:12", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 58, "deletions": 359, "lines": 417}, {"filePath": "core/src/main/java/com/graphhopper/routing/VirtualEdgeIState.java", "insertions": 195, "deletions": 0, "lines": 195}, {"filePath": "core/src/main/java/com/graphhopper/routing/VirtualEdgeIterator.java", "insertions": 198, "deletions": 0, "lines": 198}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/TurnWeighting.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/TurnCostExtension.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/test/java/com/graphhopper/reader/OSMReaderTest.java", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 43, "deletions": 3, "lines": 46}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "core/src/test/java/com/graphhopper/storage/GraphHopperStorageWithTurnCostsTest.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["57d4b7775601df55f44c752c8bb7e671456574e6", "40855ec1d97fdeb60baecd5c9ebcccab0ba3bc05", "6fa2557f1b581c438352a9e1b94ee5011a8d70ca"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 527, "deletions": 419, "lines": 946, "gitFilesChange": 15}, "spoonStatsSummary": {"TOT": 128.0, "UPD": 110.0, "INS": 7.0, "MOV": 7.0, "DEL": 4.0, "spoonFilesChanged": 12, "spoonMethodsChanged": 33}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util", "core/src/main/java/com/graphhopper/routing", "core/src/main/java/com/graphhopper/reader", "core/src/main/java/com/graphhopper/storage", "core/src/main/java/com/graphhopper"], "changesInPackagesSPOON": ["com.graphhopper.GraphHopper.createTurnWeighting(com.graphhopper.Weighting,com.graphhopper.Graph,com.graphhopper.FlagEncoder)", "com.graphhopper.routing.QueryGraph.getExtension()", "com.graphhopper.storage.TurnCostStorage.addTurnInfo(int,int,int,long)", "com.graphhopper.storage.TurnCostStorage.ensureTurnCostIndex(int)", "com.graphhopper.routing.util.TurnWeighting.calcTurnWeight(int,int,int)", "com.graphhopper.GraphHopper.createWeighting(com.graphhopper.WeightingMap,com.graphhopper.FlagEncoder)", "com.graphhopper.storage.GraphHopperStorage.getExtendedStorage()", "com.graphhopper.storage", "com.graphhopper.reader.OSMTurnRelation.getRestrictionAsEntries(com.graphhopper.routing.util.TurnCostEncoder,com.graphhopper.util.EdgeExplorer,com.graphhopper.util.EdgeExplorer,com.graphhopper.reader.OSMReader)", "com.graphhopper.storage.TurnCostStorage.copyTo(com.graphhopper.storage.ExtendedStorage)", "com.graphhopper.storage.TurnCostStorage.flush()", "com.graphhopper.routing.RoutingAlgorithmIT.runAlgo(com.graphhopper.routing.util.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String,boolean)", "com.graphhopper.storage.TurnCostStorage.init(com.graphhopper.storage.GraphStorage)", "com.graphhopper.GraphHopper.getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse)", "com.graphhopper.storage.TurnCostStorage.getCapacity()", "com.graphhopper.storage.getExtension()", "com.graphhopper.storage.NoExtendedStorage.copyTo(com.graphhopper.storage.ExtendedStorage)", "com.graphhopper.storage.TurnCostStorage.create(long)", "com.graphhopper.reader.OSMReader.processRelation(com.graphhopper.reader.OSMRelation)", "com.graphhopper.storage.TurnCostStorage", "com.graphhopper.storage.GraphHopperStorage", "com.graphhopper.GraphHopper.load(java.lang.String)", "com.graphhopper.routing.util.TurnWeighting", "com.graphhopper.storage.TurnCostStorage.loadExisting()", "com.graphhopper.storage.copyTo(com.graphhopper.storage.ExtendedStorage)", "com.graphhopper.storage.TurnCostStorage.nextCostFlags(int,int,int)", "com.graphhopper.storage.getExtendedStorage()", "com.graphhopper.storage.TurnCostStorage.getTurnCostFlags(int,int,int)", "com.graphhopper.storage.GraphBuilder.build()", "com.graphhopper.storage.TurnCostStorage.setSegmentSize(int)", "com.graphhopper.storage.TurnCostStorage.getDefaultNodeFieldValue()", "com.graphhopper.storage.TurnCostStorage.close()", "com.graphhopper.storage.TurnCostStorage.nextTurnCostEntryIndex()"]}, {"title": "Download problem and route create problem", "body": "Hi\n\nI get 2 problems with Grapphopper.\n\nWhen i start app, does not display a list of maps that can be download, it show a toast ask me if i am connected to internet. Second, if i try to create a route, it crash after red flag has been add to the map. the Logcat display \"Call load or importOrLoad before routing\" \n", "url": "https://github.com/graphhopper/graphhopper/issues/251", "user": "ghost", "labels": ["android", "bug"], "created": "2014-09-01 11:26:06", "closed": "2015-02-04 09:14:27", "commits": {"afe0ae33d48e471fce521bbbcce9a4fbb2186188": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "c950c8eff0dcfcfb5264725f139d00ac6640b9c2": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 155.00027777777777, "commitsDetails": [{"commitHash": "afe0ae33d48e471fce521bbbcce9a4fbb2186188", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["11e92f16d6d9d9e85fb7348cb0488719750753bf"], "nameRev": "afe0ae33d48e471fce521bbbcce9a4fbb2186188 tags/0.4.1~43", "commitMessage": "trying to fix #251\n", "commitDateTime": "2015-01-19 14:40:34", "authoredDateTime": "2015-01-19 14:40:34", "commitGitStats": [{"filePath": "android/src/com/graphhopper/android/AndroidDownloader.java", "insertions": 69, "deletions": 0, "lines": 69}, {"filePath": "android/src/com/graphhopper/android/MainActivity.java", "insertions": 5, "deletions": 8, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidDownloader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.AndroidDownloader", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MainActivity.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.MainActivity.downloadingFiles().5.saveDoInBackground(java.lang.Void[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.android.MainActivity.chooseAreaFromRemote().3.saveDoInBackground(java.lang.Void[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.android.MainActivity.chooseAreaFromRemote().3.onPostExecute(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c950c8eff0dcfcfb5264725f139d00ac6640b9c2", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["1a94d47cd99fa0cdc00f72db7a61fc30f8036c39"], "nameRev": "c950c8eff0dcfcfb5264725f139d00ac6640b9c2 tags/0.4.1~38^2~29", "commitMessage": "trying to fix #251\n", "commitDateTime": "2015-02-04 10:14:19", "authoredDateTime": "2015-01-19 14:40:34", "commitGitStats": [{"filePath": "android/src/com/graphhopper/android/AndroidDownloader.java", "insertions": 69, "deletions": 0, "lines": 69}, {"filePath": "android/src/com/graphhopper/android/MainActivity.java", "insertions": 5, "deletions": 8, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidDownloader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.AndroidDownloader", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MainActivity.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.MainActivity.downloadingFiles().5.saveDoInBackground(java.lang.Void[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.android.MainActivity.chooseAreaFromRemote().3.saveDoInBackground(java.lang.Void[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.android.MainActivity.chooseAreaFromRemote().3.onPostExecute(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["afe0ae33d48e471fce521bbbcce9a4fbb2186188"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 74, "deletions": 8, "lines": 82, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 5, "UPD": 3, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["android/src/com/graphhopper/android"], "changesInPackagesSPOON": ["com.graphhopper.android.MainActivity.chooseAreaFromRemote().3.onPostExecute(java.util.List)", "com.graphhopper.android.AndroidDownloader", "com.graphhopper.android.MainActivity.chooseAreaFromRemote().3.saveDoInBackground(java.lang.Void[])", "com.graphhopper.android.MainActivity.downloadingFiles().5.saveDoInBackground(java.lang.Void[])"]}, {"title": "Exception if speed is 0 but valid access flags and using shortest path algo.", "body": "If a speed of 0 is assigned without setting the proper access flags to the edge, then a shortest path is still taken through this edge (although 'blocked') and leading to negativ millis variable in Path object which causes an exception.\n\njava.lang.RuntimeException: Time was negative. Please report as bug and include:...\n    at com.graphhopper.GraphHopper.getPaths(GraphHopper.java:885)\n", "url": "https://github.com/graphhopper/graphhopper/issues/242", "user": "karussell", "labels": ["bug"], "created": "2014-07-31 15:16:54", "closed": "2015-01-14 16:39:41", "commits": {"22466f0c81113479c78d185a100f356fc1623b43": {"commitGHEventType": "closed", "commitUser": "karussell"}, "877e75a1b1558ee020030844a0e17d6dc2b92401": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 167.00027777777777, "commitsDetails": [{"commitHash": "22466f0c81113479c78d185a100f356fc1623b43", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["6fa2557f1b581c438352a9e1b94ee5011a8d70ca"], "nameRev": "22466f0c81113479c78d185a100f356fc1623b43 tags/0.4.1~49", "commitMessage": "fixed #242, Exception if speed is 0 but valid access flags and using shortest path algo.\n", "commitDateTime": "2015-01-14 17:38:41", "authoredDateTime": "2015-01-14 17:38:41", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/Path.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/src/test/java/com/graphhopper/routing/AbstractRoutingAlgorithmTester.java", "insertions": 21, "deletions": 1, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Path.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.Path.calcMillis(double,long,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractRoutingAlgorithmTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.test0SpeedButUnblocked_Issue242()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "877e75a1b1558ee020030844a0e17d6dc2b92401", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["b794b01e4acc914b1f1fe01df6b9a27789470838"], "nameRev": "877e75a1b1558ee020030844a0e17d6dc2b92401 remotes/origin/pt-singleObjProfile~5", "commitMessage": "We get some edges with speed 0.0.\n", "commitDateTime": "2017-02-03 13:39:40", "authoredDateTime": "2017-02-03 13:39:40", "commitGitStats": [{"filePath": "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs/PtTravelTimeWeighting.java", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PtTravelTimeWeighting.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.gtfs.PtTravelTimeWeighting.calcTravelTimeSeconds(com.graphhopper.util.EdgeIteratorState,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["22466f0c81113479c78d185a100f356fc1623b43", "877e75a1b1558ee020030844a0e17d6dc2b92401"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 7, "deletions": 0, "lines": 7, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing", "reader-gtfs/src/main/java/com/graphhopper/reader/gtfs"], "changesInPackagesSPOON": ["com.graphhopper.routing.Path.calcMillis(double,long,boolean)", "com.graphhopper.reader.gtfs.PtTravelTimeWeighting.calcTravelTimeSeconds(com.graphhopper.util.EdgeIteratorState,long)"]}, {"title": "Cache Bug in DijkstraOneToMany", "body": "When heap is empty it does not imply that the 'to' node is found. So remove that condition as it should be included in the weight comparison.\n", "url": "https://github.com/graphhopper/graphhopper/issues/239", "user": "karussell", "labels": ["bug"], "created": "2014-07-24 10:44:36", "closed": "2014-07-24 10:50:36", "commits": {"eb4a64220c36f348ffb93b39bc49956d419a24b5": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "eb4a64220c36f348ffb93b39bc49956d419a24b5", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["c2011d2a2e493212d612c4610632b09bf891b6ef"], "nameRev": "eb4a64220c36f348ffb93b39bc49956d419a24b5 tags/0.4.1~209", "commitMessage": "bug in DijkstraOneToMany fixed #239\n", "commitDateTime": "2014-07-24 12:48:42", "authoredDateTime": "2014-07-24 12:48:42", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/DijkstraOneToMany.java", "insertions": 10, "deletions": 5, "lines": 15}, {"filePath": "core/src/test/java/com/graphhopper/routing/DijkstraOneToManyTest.java", "insertions": 18, "deletions": 0, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DijkstraOneToMany.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.findEndNode(int,int)", "TOT": 10, "UPD": 1, "INS": 4, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DijkstraOneToManyTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraOneToManyTest.testIssueXY()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["eb4a64220c36f348ffb93b39bc49956d419a24b5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 5, "lines": 15, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 14, "UPD": 1, "INS": 7, "MOV": 3, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing"], "changesInPackagesSPOON": ["com.graphhopper.routing.DijkstraOneToMany.findEndNode(int,int)", "com.graphhopper.routing.DijkstraOneToMany"]}, {"title": "bug in DFS", "body": "Order of emitted nodes via DFS is wrong (in XFirstSearch with depthFirst=true)\n", "url": "https://github.com/graphhopper/graphhopper/issues/233", "user": "karussell", "labels": ["bug", "good first issue"], "created": "2014-07-11 12:28:07", "closed": "2014-10-15 19:26:25", "commits": {"0b76dbf26f6423fbcf98ae091e068469fe510987": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 96.00027777777778, "commitsDetails": [{"commitHash": "0b76dbf26f6423fbcf98ae091e068469fe510987", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["8ffdd335c125a021a2260c03e7efd5dae51b8831", "21f267f06255f560c294a4616b3cc88f8fc7acac"], "nameRev": "0b76dbf26f6423fbcf98ae091e068469fe510987 tags/0.4.1~155", "commitMessage": "Merge pull request #265 from jansoe/fixDFS\n\nFix DFS (issue #233) ", "commitDateTime": "2014-10-15 21:26:05", "authoredDateTime": "2014-10-15 21:26:05", "commitGitStats": [{"filePath": ".gitignore", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/PrepareRoutingSubnetworks.java", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/Location2IDQuadtree.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/LocationIndexTree.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/util/BreadthFirstSearch.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "core/src/main/java/com/graphhopper/util/DepthFirstSearch.java", "insertions": 62, "deletions": 0, "lines": 62}, {"filePath": "core/src/main/java/com/graphhopper/util/GHUtility.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "core/src/main/java/com/graphhopper/util/XFirstSearch.java", "insertions": 5, "deletions": 63, "lines": 68}, {"filePath": "core/src/test/java/com/graphhopper/util/{XFirstSearchTest.java => BreadthFirstSearchTest.java}", "insertions": 14, "deletions": 11, "lines": 25}, {"filePath": "core/src/test/java/com/graphhopper/util/DepthFirstSearchTest.java", "insertions": 110, "deletions": 0, "lines": 110}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PrepareRoutingSubnetworks.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks(com.graphhopper.util.EdgeExplorer)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int,int,com.graphhopper.coll.GHBitSet)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeZeroDegreeNodes()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeNetwork(int,int,com.graphhopper.coll.GHBitSet).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks(com.graphhopper.util.EdgeExplorer).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks(com.graphhopper.util.EdgeExplorer).1.checkAdjacent(com.graphhopper.util.EdgeIteratorState)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Location2IDQuadtree.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.Location2IDQuadtree.findClosest(double,double,com.graphhopper.routing.util.EdgeFilter)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.index.Location2IDQuadtree.findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocationIndexTree.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.XFirstSearchCheck", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).1.execute(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "BreadthFirstSearch.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.BreadthFirstSearch", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DepthFirstSearch.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.DepthFirstSearch", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHUtility.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.GHUtility.printInfo(com.graphhopper.util.Graph,int,int,com.graphhopper.routing.util.EdgeFilter)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.GHUtility.sortDFS(com.graphhopper.util.Graph,com.graphhopper.util.Graph)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.GHUtility.printInfo(com.graphhopper.util.Graph,int,int,com.graphhopper.routing.util.EdgeFilter).1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.GHUtility.sortDFS(com.graphhopper.util.Graph,com.graphhopper.util.Graph).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XFirstSearch.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.XFirstSearch", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.graphhopper.util.XFirstSearch.start(com.graphhopper.util.EdgeExplorer,int,boolean)", "TOT": 9, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 9}, {"spoonMethodName": "com.graphhopper.util.XFirstSearch.MyIntStack", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.XFirstSearch.MyHelperIntQueue", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.XFirstSearch.pop()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "BreadthFirstSearchTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.XFirstSearchTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.XFirstSearchTest.testDFS()", "TOT": 14, "UPD": 11, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.graphhopper.util.XFirstSearchTest.testBFS()", "TOT": 9, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.XFirstSearchTest.setup()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.XFirstSearchTest.testBFS().1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.XFirstSearchTest.testDFS().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.XFirstSearchTest.testBFS().1.goFurther(int)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.XFirstSearchTest.testDFS().2.goFurther(int)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.BreadthFirstSearchTest.testBFS2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DepthFirstSearchTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.DepthFirstSearchTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Some encoders and and other classes still not fully use long and instead use int", "body": "E.g. foot encoder uses a bit of type int as well as an integer for bit shifting ala '1 << shift' instead '1L << shift' which makes problems if 'osmreader.bytesForFlags=8' is enabled\n", "url": "https://github.com/graphhopper/graphhopper/issues/229", "user": "karussell", "labels": ["bug"], "created": "2014-06-30 14:24:27", "closed": "2014-06-30 14:41:44", "commits": {"07921dca5c71a4b838d2b7b9db36f2617af962b4": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "07921dca5c71a4b838d2b7b9db36f2617af962b4", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["50fbf0e3e1cf8bdd113956a67968c9fb52b3cfd7"], "nameRev": "07921dca5c71a4b838d2b7b9db36f2617af962b4 tags/0.4.1~239", "commitMessage": "found and fixed #229\n", "commitDateTime": "2014-06-30 16:37:41", "authoredDateTime": "2014-06-30 16:37:41", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeCommonFlagEncoder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/LocationIndexTree.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/util/BitUtilBig.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/Bike2WeightFlagEncoderTest.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/EncodingManagerTest.java", "insertions": 30, "deletions": 4, "lines": 34}, {"filePath": "core/src/test/java/com/graphhopper/storage/AbstractGraphStorageTester.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int,int)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BikeCommonFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.BikeCommonFlagEncoder.defineWayBits(int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.defineWayBits(int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocationIndexTree.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.getBitmask(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BitUtilBig.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.BitUtilBig.reversePart(long,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Bike2WeightFlagEncoderTest.java", "spoonMethods": []}, {"spoonFilePath": "EncodingManagerTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractGraphStorageTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.AbstractGraphStorageTester.test8BytesFlags()", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["07921dca5c71a4b838d2b7b9db36f2617af962b4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 12, "lines": 24, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 12, "UPD": 12, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 5, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/storage/index", "core/src/main/java/com/graphhopper/routing/util", "core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.FootFlagEncoder.defineWayBits(int,int)", "com.graphhopper.routing.util.BikeCommonFlagEncoder", "com.graphhopper.routing.util.BikeCommonFlagEncoder.defineWayBits(int,int)", "com.graphhopper.storage.index.LocationIndexTree.getBitmask(int)", "com.graphhopper.util.BitUtilBig.reversePart(long,int)", "com.graphhopper.routing.util.FootFlagEncoder", "com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int,int)"]}, {"title": "JVM crash due to compiler thread: \"insufficient memory\" is reported after import and server start", "body": "Currently if the disk is busy and GH wants to log it can't and blocks the request which is sad as the used logging framework does no async by default. But it is easy to enable in log4j:\n\nhttps://github.com/graphhopper/graphhopper/commit/25505ee5e8d97a9657314939a4f45660a4fd2fcb\n\nThe problem is now that this commit makes huge problems when we start the web server and import data (both in one go). It then terminates after some seconds with a JVM crash saying too few memory**. Looks like it only occurs in one specific map, and only if elevation enabled and only with async logger. Maybe we should use logback or log4j 2.x. The further curious thing about this issue is that yourkit cannot do a CPU report - blank screen. \n\nOr could it even be a JVM bug, hmmh I can reproduce it on jdk7_51, jdk7_55 and jdk8_5 but I cannot reproduce in jdk1.6.0_45! There further are indications as it only occurs with this particular map and the current thread is a compiler one although bigger maps which requires more RAM run without a problem. Cannot be reproduced on command line, only in NetBeans 7.2, 7.4 and 8. I can also reproduce this on a Mac 10.6.8 with NetBeans 7.2.1 and jdk8 (don't ask how I installed jdk8 there though ;)). I reported this today on the Oracle Bug database. Another strange sign is that if I uncomment some entries in the array of SRTMProvider.init (\"North_America\", \"South_America\") then it works again.\n\nReverted for now:\n\nhttps://github.com/graphhopper/graphhopper/commit/db8067362a3880278419b6c70f1d6818c6aa65b0\n\n**\nhs error log:\n\n```\nStack: [0x68c9a000,0x68d1b000]\n[error occurred during error reporting (printing stack bounds), id 0xb]\n\n\nCurrent CompileTask:\nC2: 179173  171             com.graphhopper.coll.GHLongIntBTree::put (115 bytes)\n\n\n---------------  P R O C E S S  ---------------\n\nJava Threads: ( => current thread )\n  0xb6408800 JavaThread \"DestroyJavaVM\" [_thread_blocked, id=28942, stack(0xb65a4000,0xb65f5000)]\n  0x63e44400 JavaThread \"qtp10808795-19\" [_thread_blocked, id=28969, stack(0x63c1a000,0x63c6b000)]\n  0x63e42c00 JavaThread \"qtp10808795-18\" [_thread_blocked, id=28968, stack(0x63c6b000,0x63cbc000)]\n  0x63e41400 JavaThread \"qtp10808795-17\" [_thread_blocked, id=28967, stack(0x63cbc000,0x63d0d000)]\n  0x63e3f800 JavaThread \"qtp10808795-16\" [_thread_blocked, id=28966, stack(0x63d0d000,0x63d5e000)]\n  0x63e3e000 JavaThread \"qtp10808795-15\" [_thread_blocked, id=28965, stack(0x63d5e000,0x63daf000)]\n  0x63e3cc00 JavaThread \"qtp10808795-14\" [_thread_blocked, id=28964, stack(0x63daf000,0x63e00000)]\n  0x63e33000 JavaThread \"qtp10808795-13 Acceptor0 SelectChannelConnector@0.0.0.0:8900\" [_thread_in_native, id=28963, stack(0x67eae000,0x67eff000)]\n  0x63e34c00 JavaThread \"qtp10808795-12 Selector0\" [_thread_in_native, id=28962, stack(0x6852e000,0x6857f000)]\n  0x68676000 JavaThread \"com.google.inject.internal.util.$Finalizer\" daemon [_thread_blocked, id=28961, stack(0x63f27000,0x63f78000)]   \n  0x68a7d000 JavaThread \"AsyncAppender-Dispatcher-Thread-0\" daemon [_thread_blocked, id=28953, stack(0x68b77000,0x68bc8000)]\n  0x6922c000 JavaThread \"Service Thread\" daemon [_thread_blocked, id=28951, stack(0x68c49000,0x68c9a000)]\n=>0x6922a400 JavaThread \"C2 CompilerThread1\" daemon [_thread_in_native, id=28950, stack(0x68c9a000,0x68d1b000)]\n  0x69228400 JavaThread \"C2 CompilerThread0\" daemon [_thread_in_native, id=28949, stack(0x68d1b000,0x68d9c000)]\n  0x69226c00 JavaThread \"Signal Dispatcher\" daemon [_thread_blocked, id=28948, stack(0x68d9c000,0x68ded000)]\n  0x69215000 JavaThread \"Finalizer\" daemon [_thread_blocked, id=28947, stack(0x6915e000,0x691af000)]\n  0x69213800 JavaThread \"Reference Handler\" daemon [_thread_blocked, id=28946, stack(0x691af000,0x69200000)]\n\nOther Threads:\n  0x69210c00 VMThread [stack: 0x6be24000,0x6bea5000] [id=28945]\n  0x6922dc00 WatcherThread [stack: 0x68bc8000,0x68c49000] [id=28952]\n\nVM state:not at safepoint (normal execution)\n\nVM Mutex/Monitor currently owned by a thread: None\n```\n", "url": "https://github.com/graphhopper/graphhopper/issues/187", "user": "karussell", "labels": ["bug"], "created": "2014-04-24 15:53:16", "closed": "2015-08-27 13:44:49", "commits": {}, "ttf": 489.0002777777778, "commitsDetails": []}, {"title": "Bug in DijkstraOneToMany", "body": "Hi,\nthere's a minor bug in dijkstraOneToMany.java line 144:\nIf 'to' has a parent this does not necessarily imply that the shortest path has been calculated.\nAdditionally it should check that 'to' is not contained in the heap.\nBut I guess it's probably faster to add another TIntList containing all processed nodes than searching the heap..\n", "url": "https://github.com/graphhopper/graphhopper/issues/182", "user": "PhilHa", "labels": ["bug"], "created": "2014-04-16 10:22:39", "closed": "2014-04-22 08:46:47", "commits": {"ef8fbedca6e9d7d1fd12fded36e9ed3a18c51598": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "ef8fbedca6e9d7d1fd12fded36e9ed3a18c51598", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["fc5f25e03073be6912d647af414eea0b368556fc"], "nameRev": "ef8fbedca6e9d7d1fd12fded36e9ed3a18c51598 tags/0.4.1~351", "commitMessage": "trying to fix bug in One2Many Dijkstra, #182\n", "commitDateTime": "2014-04-17 21:58:43", "authoredDateTime": "2014-04-17 21:58:43", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/DijkstraOneToMany.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/DijkstraOneToManyTest.java", "insertions": 31, "deletions": 0, "lines": 31}, {"filePath": "core/src/test/resources/com/graphhopper/routing/test-graph.svg", "insertions": 334, "deletions": 180, "lines": 514}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DijkstraOneToMany.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.findEndNode(int,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DijkstraOneToManyTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraOneToManyTest.testIssue182()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToManyTest.initGraph(com.graphhopper.storage.Graph)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ef8fbedca6e9d7d1fd12fded36e9ed3a18c51598"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing"], "changesInPackagesSPOON": ["com.graphhopper.routing.DijkstraOneToMany.findEndNode(int,int)"]}, {"title": "Incorrect direction instruction", "body": "Try to use GraphHopper 0.3 from [here](http://oss.sonatype.org/content/groups/public/com/graphhopper/graphhopper-web/0.3-SNAPSHOT/). Using [this](http://oss.sonatype.org/content/groups/public/com/graphhopper/graphhopper-web/0.3-SNAPSHOT/graphhopper-web-0.3-20140318.170133-13.war) *.war file I get incorrect direction (left instead right) in instruction.\n\n```\nhttp://localhost:8085/?point=52.41541%2C13.244802&point=52.415378%2C13.243675&vehicle=foot&locale=en-US\n```\n\n![screenshot from 2014-03-21 16 39 49](https://f.cloud.github.com/assets/866124/2481587/d6f6c586-b0dc-11e3-9aa5-3b8d779310fb.png)\n\nGraphHopper v0.2 works fine.\n", "url": "https://github.com/graphhopper/graphhopper/issues/171", "user": "drnextgis", "labels": ["bug"], "created": "2014-03-21 09:41:23", "closed": "2014-03-26 08:34:01", "commits": {"c6d9e440b647c15d40628e66df46e5f4b14ef8f1": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "c6d9e440b647c15d40628e66df46e5f4b14ef8f1", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["fdeacc688b9baad50ebf86967d349434f5a0a64c"], "nameRev": "c6d9e440b647c15d40628e66df46e5f4b14ef8f1 tags/0.4.1~431", "commitMessage": "fixed #171, Incorrect direction instruction\n", "commitDateTime": "2014-03-26 09:31:46", "authoredDateTime": "2014-03-26 09:31:46", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/Path.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/util/AngleCalc2D.java", "insertions": 2, "deletions": 45, "lines": 47}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "core/src/test/java/com/graphhopper/util/AngleCalcTest.java", "insertions": 7, "deletions": 37, "lines": 44}, {"filePath": "core/src/test/java/com/graphhopper/util/InstructionListTest.java", "insertions": 6, "deletions": 3, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Path.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.Path.calcInstructions().4.next(com.graphhopper.routing.EdgeIteratorState,int)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.Path.calcInstructions().4", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.lookup(java.util.List).1.execute(java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AngleCalc2D.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.AngleCalc2D.isLeftTurn(double,double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.AngleCalc2D.calcTurnAngleRad(double,double,double,double,double,double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.AngleCalc2D.calcTurnAngleDeg(double,double,double,double,double,double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.AngleCalc2D.calcAzimuthDeg(double,double,double,double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.AngleCalc2D.calcOrientation(double,double,double,double)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testOneVirtualNode()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testOneWay()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AngleCalcTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.AngleCalcTest.testIsLeftTurn()", "TOT": 13, "UPD": 5, "INS": 0, "MOV": 6, "DEL": 2}, {"spoonMethodName": "com.graphhopper.util.AngleCalcTest.testOrientation()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.AngleCalcTest.testCalcAzimuth()", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.AngleCalcTest.testCalcTurnAngleDeg()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.AngleCalcTest.testCombined()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.AngleCalcTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InstructionListTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c6d9e440b647c15d40628e66df46e5f4b14ef8f1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 51, "lines": 59, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 13, "UPD": 3, "INS": 1, "MOV": 5, "DEL": 4, "spoonFilesChanged": 3, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing", "core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.util.AngleCalc2D.calcAzimuthDeg(double,double,double,double)", "com.graphhopper.util.AngleCalc2D.calcOrientation(double,double,double,double)", "com.graphhopper.routing.Path.calcInstructions().4", "com.graphhopper.util.AngleCalc2D.calcTurnAngleRad(double,double,double,double,double,double)", "com.graphhopper.util.AngleCalc2D.calcTurnAngleDeg(double,double,double,double,double,double)", "com.graphhopper.util.AngleCalc2D.isLeftTurn(double,double)", "com.graphhopper.routing.Path.calcInstructions().4.next(com.graphhopper.routing.EdgeIteratorState,int)", "com.graphhopper.routing.QueryGraph.lookup(java.util.List).1.execute(java.util.List)"]}, {"title": "Exploring edges differs in QueryGraph", "body": "I think there's a bug in QueryGraph. Until now it is not critical, since it would be only a problem for edge-based algorithms (see #158). \n\nConsider one directional edge A->B. If I want to get all outgoing edges of A, I would use an EdgeExplorer with an EdgeFilter and would get (edgeId: 0, baseNode: A, adjNode: B). If I would like to obtain all incoming edges of B, I would retrieve the same edge with inverted nodes: (edgeId: 0, baseNode: B, adjNode: A). Note, the edge ID remains the same which is from crucial importance for edge-based routing algorithms!\n\nHowever, using a QueryGraph and its VirtualEdgeIterator results in a different behavior. Consider two virtual nodes C and D which are directly on edge 0 (A--C-D-->B). When I request all outgoing edges from node C, I get (edgeId: x, baseNode: C, adjNode: D), however, when I request all incoming edges from node D I get (edgeId: **y**, baseNode: D, adjNode C), which is in my eyes wrong since the edgeId differs.\n\nI think the problem is, that QueryGraph stores to much additional edges. In this specific examples, eight additional edges have been added for both virtual nodes:\nfour edges for C: (A-C, C-A, C-D, D-C) and for edges for D: (C-D,D-C,D-B,B-D), which not only have irrelevant edges for backward direction (A-C vs. C-A), but also duplicate edges (C-D and D-C).\n\nIMHO, the following (new) test should pass: (to be added to QueryGraphTest)\n\n```\n    @Test\n    public void testIterationBug()\n    {\n        //setup\n        EncodingManager encodingManager = new EncodingManager(\"CAR\");\n        Graph g = new GraphHopperStorage(new RAMDirectory(), encodingManager).create(100);\n\n        EdgeFilter outEdgeFilter = new DefaultEdgeFilter(encodingManager.getEncoder(\"CAR\"), false, true);\n        EdgeFilter inEdgeFilter = new DefaultEdgeFilter(encodingManager.getEncoder(\"CAR\"), true, false);\n        EdgeExplorer inExplorer = g.createEdgeExplorer(inEdgeFilter);\n        EdgeExplorer outExplorer = g.createEdgeExplorer(outEdgeFilter);\n\n        int nodeA = 0;\n        int nodeB = 1;\n\n        /* \n         * init test graph: one directional edge going from A to B, via virtual nodes C and D\n         * \n         *   (C)-(D)\n         *  /       \\\n         * A         B\n         * \n         */\n        g.setNode(nodeA, 1, 0);\n        g.setNode(nodeB, 1, 10);\n        g.edge(nodeA, nodeB, 10, false).setWayGeometry(Helper.createPointList(1.5, 3, 1.5, 7));\n\n        //assert the behavior for classic edgeIterator        \n        assertEdgeIdsStayingEqual(inExplorer, outExplorer, nodeA, nodeB);\n\n        //setup query results\n        EdgeIterator it = outExplorer.setBaseNode(0);\n        it.next();\n        QueryResult res1 = createLocationResult(1.5, 3, it, 0, Position.EDGE);\n        QueryResult res2 = createLocationResult(1.5, 7, it, 0, Position.EDGE);\n\n        QueryGraph q = new QueryGraph(g);\n        q.lookup(Arrays.asList(res1, res2));\n        int nodeC = res1.getClosestNode();\n        int nodeD = res2.getClosestNode();\n\n        inExplorer = q.createEdgeExplorer(inEdgeFilter);\n        outExplorer = q.createEdgeExplorer(outEdgeFilter);\n\n        //assert the same behavior for queryGraph\n        assertEdgeIdsStayingEqual(inExplorer, outExplorer, nodeA, nodeC);\n        assertEdgeIdsStayingEqual(inExplorer, outExplorer, nodeC, nodeD);\n        assertEdgeIdsStayingEqual(inExplorer, outExplorer, nodeC, nodeB);\n    }\n\n    private void assertEdgeIdsStayingEqual( EdgeExplorer inExplorer, EdgeExplorer outExplorer, int startNode, int endNode )\n    {\n        EdgeIterator it = outExplorer.setBaseNode(startNode);\n        it.next();\n        assertEquals(startNode, it.getBaseNode());\n        assertEquals(endNode, it.getAdjNode());\n        int expectedEdgeId = it.getEdge(); //we expect the edge id to be the same when exploring in backward direction\n        assertFalse(it.next());\n\n        //backward iteration, edge id should remain the same!!\n        it = inExplorer.setBaseNode(endNode);\n        it.next();\n        assertEquals(endNode, it.getBaseNode());\n        assertEquals(startNode, it.getAdjNode());\n        assertEquals(\"The edge id is not the same,\", expectedEdgeId, it.getEdge());\n        assertFalse(it.next());\n    }\n```\n\n<bountysource-plugin>\n\n---\n\nWant to back this issue? **[Place a bounty on it!](https://www.bountysource.com/issues/1440935-exploring-edges-differs-in-querygraph?utm_campaign=plugin&utm_content=tracker%2F90869&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F90869&utm_medium=issues&utm_source=github).\n</bountysource-plugin>\n", "url": "https://github.com/graphhopper/graphhopper/issues/163", "user": "kschrab", "labels": ["bug"], "created": "2014-03-17 11:16:33", "closed": "2014-07-18 14:33:43", "commits": {"6fc81c9c784a8495aa8ab138b120c89c416bbba1": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 123.00027777777778, "commitsDetails": [{"commitHash": "6fc81c9c784a8495aa8ab138b120c89c416bbba1", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["898595a369cb9fc3732eb0bb8d070f78c42de302"], "nameRev": "6fc81c9c784a8495aa8ab138b120c89c416bbba1 tags/0.4.1~122^2~6", "commitMessage": "fixed #163,  Exploring edges differs in QueryGraph\n", "commitDateTime": "2014-07-18 16:31:09", "authoredDateTime": "2014-07-18 16:31:09", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "core/src/test/java/com/graphhopper/routing/AStarBidirectionTest.java", "insertions": 15, "deletions": 44, "lines": 59}, {"filePath": "core/src/test/java/com/graphhopper/routing/DijkstraBidirectionRefTest.java", "insertions": 6, "deletions": 38, "lines": 44}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 67, "deletions": 2, "lines": 69}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdges(com.graphhopper.util.shapes.GHPoint3D,int,com.graphhopper.util.shapes.GHPoint3D,int,com.graphhopper.routing.PointList,com.graphhopper.routing.EdgeIteratorState,int,int,long)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "AStarBidirectionTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AStarBidirectionTest.testViaEdges_FromEqualsTo()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirectionTest.testViaEdges_SpecialCases()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DijkstraBidirectionRefTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRefTest.testViaEdges_FromEqualsTo()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRefTest.testViaEdges_SpecialCases()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testIterationBug_163()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.assertEdgeIdsStayingEqual(com.graphhopper.routing.EdgeExplorer,com.graphhopper.routing.EdgeExplorer,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6fc81c9c784a8495aa8ab138b120c89c416bbba1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing"], "changesInPackagesSPOON": ["com.graphhopper.routing.QueryGraph.createEdges(com.graphhopper.util.shapes.GHPoint3D,int,com.graphhopper.util.shapes.GHPoint3D,int,com.graphhopper.routing.PointList,com.graphhopper.routing.EdgeIteratorState,int,int,long)"]}, {"title": "Bugs for oneway 'circles'", "body": "Two bugs for oneway circles. It only appears for circles with one tower node so very rare.\n- [one way violated](http://graphhopper.com/maps/?point=51.376197%2C-0.531576&point=51.376535%2C-0.530659&locale=de)\n- [route not found](http://graphhopper.com/maps/?point=51.376395%2C-0.530777&point=51.376328%2C-0.531485&locale=de) - this does not occur for [normal circles](http://graphhopper.com/maps/?point=51.438417%2C-0.346531&point=51.438002%2C-0.348296&locale=de)\n\n[Here](http://graphhopper.com/maps/?point=51.516451%2C-0.251393&point=51.516421%2C-0.252117&locale=de) is exactly the same issue.\n\nThe reason is in QueryGraph. There are two places where we reverse an edge via graph.getEdgeProps which can be wrong for edges where base node is identical to adjacent node\n", "url": "https://github.com/graphhopper/graphhopper/issues/162", "user": "karussell", "labels": ["bug"], "created": "2014-03-13 13:55:23", "closed": "2014-03-17 13:07:04", "commits": {"f39dc86c57cd85a5533d410f951e4eed935812ff": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "f39dc86c57cd85a5533d410f951e4eed935812ff", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["2bb51de4e0a3dbbc31fe3a9fa52a75d773c5e23f"], "nameRev": "f39dc86c57cd85a5533d410f951e4eed935812ff tags/0.4.1~460", "commitMessage": "fixed #162, therefor bug fix necessary in GHUtility.copyTo and QueryGraph which needs new method detach(false)\n", "commitDateTime": "2014-03-17 12:35:47", "authoredDateTime": "2014-03-17 12:35:47", "commitGitStats": [{"filePath": "core/files/changelog.txt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "core/files/circle-bug.osm.gz", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 36, "deletions": 38, "lines": 74}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/RoutingAlgorithmSpecialAreaTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/GraphHopperStorage.java", "insertions": 68, "deletions": 56, "lines": 124}, {"filePath": "core/src/main/java/com/graphhopper/storage/LevelGraphStorage.java", "insertions": 17, "deletions": 21, "lines": 38}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/Location2IDFullIndex.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/Location2IDFullWithEdgesIndex.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/LocationIndexTree.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/LocationIndexTreeSC.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "core/src/main/java/com/graphhopper/util/EdgeIteratorState.java", "insertions": 7, "deletions": 17, "lines": 24}, {"filePath": "core/src/main/java/com/graphhopper/util/GHUtility.java", "insertions": 43, "deletions": 52, "lines": 95}, {"filePath": "core/src/test/java/com/graphhopper/routing/AbstractRoutingAlgorithmTester.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 68, "deletions": 17, "lines": 85}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 21, "deletions": 3, "lines": 24}, {"filePath": "core/src/test/java/com/graphhopper/storage/AbstractGraphStorageTester.java", "insertions": 42, "deletions": 7, "lines": 49}, {"filePath": "core/src/test/java/com/graphhopper/util/GHUtilityTest.java", "insertions": 14, "deletions": 2, "lines": 16}, {"filePath": "web/nbactions.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": []}, {"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdges(com.graphhopper.util.shapes.GHPoint,int,com.graphhopper.util.shapes.GHPoint,int,boolean,com.graphhopper.routing.PointList,com.graphhopper.routing.EdgeIteratorState,int,int,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.lookup(java.util.List)", "TOT": 19, "UPD": 4, "INS": 6, "MOV": 5, "DEL": 4}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.lookup(java.util.List).1.execute(java.util.List)", "TOT": 7, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.VirtualEdgeIterator.detach(boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.VirtualEdgeIState.detach(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.routing.EdgeExplorer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmSpecialAreaTests.java", "spoonMethods": []}, {"spoonFilePath": "GraphHopperStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.swapFlags(long,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.getFlags(long,boolean)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.setFlags(long,int,int,long)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.EdgeIterable", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.getAdjNode()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setFlags(long)", "TOT": 12, "UPD": 4, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.getEdgeProps(int,int)", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.next()", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.getFlags()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.setWayGeometry(com.graphhopper.storage.PointList)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.SingleEdge", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.SingleEdge.getFlags()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.getFlags()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setWayGeometry(com.graphhopper.storage.PointList)", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.fetchWayGeometry(int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.inPlaceNodeRemove(int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.detach(boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.setFlags(long,boolean,long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.detach(boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.next()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.getAdjNode()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.fetchWayGeometry(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.detach()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.detach()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "LevelGraphStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.LevelGraphStorage.swapFlags(long,long)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.copyProperties(com.graphhopper.util.EdgeIteratorState)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.LevelGraphStorage.setWeight(com.graphhopper.util.EdgeSkipIterState,double)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.detach(boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Location2IDFullIndex.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.Location2IDFullIndex.findClosest(double,double,com.graphhopper.routing.util.EdgeFilter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Location2IDFullWithEdgesIndex.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.Location2IDFullWithEdgesIndex.findClosest(double,double,com.graphhopper.routing.util.EdgeFilter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocationIndexTree.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTree.findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).1.execute(int).1.check(int,double,int,com.graphhopper.storage.index.EdgeIteratorState,com.graphhopper.storage.index.QueryResult$Position)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocationIndexTreeSC.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTreeSC.getAllEdges().2.detach(boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTreeSC.getAllEdges().2.detach()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EdgeIteratorState.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.detach(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHUtility.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.GHUtility.createSortedGraph(com.graphhopper.util.Graph,com.graphhopper.util.Graph,gnu.trove.list.TIntList)", "TOT": 50, "UPD": 26, "INS": 5, "MOV": 14, "DEL": 5}, {"spoonMethodName": "com.graphhopper.util.GHUtility.copyTo(com.graphhopper.util.Graph,com.graphhopper.util.Graph)", "TOT": 41, "UPD": 22, "INS": 3, "MOV": 13, "DEL": 3}, {"spoonMethodName": "com.graphhopper.util.GHUtility.DisabledEdgeIterator.detach()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.GHUtility.DisabledEdgeIterator.detach(boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractRoutingAlgorithmTester.java", "spoonMethods": []}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode()", "TOT": 35, "UPD": 5, "INS": 6, "MOV": 18, "DEL": 6}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testOneVirtualNode()", "TOT": 21, "UPD": 0, "INS": 9, "MOV": 1, "DEL": 11}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges()", "TOT": 15, "UPD": 0, "INS": 6, "MOV": 2, "DEL": 7}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes()", "TOT": 17, "UPD": 0, "INS": 7, "MOV": 2, "DEL": 8}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testOneWay()", "TOT": 17, "UPD": 0, "INS": 7, "MOV": 2, "DEL": 8}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testVirtEdges()", "TOT": 12, "UPD": 0, "INS": 5, "MOV": 2, "DEL": 5}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151()", "TOT": 25, "UPD": 0, "INS": 11, "MOV": 2, "DEL": 12}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.setUp()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.tearDown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.runAlgo(com.graphhopper.routing.util.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testOneWayCircleBug()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractGraphStorageTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.AbstractGraphStorageTester.testDetachEdge()", "TOT": 26, "UPD": 3, "INS": 22, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.AbstractGraphStorageTester.testGetAllEdgesWithDelete()", "TOT": 10, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHUtilityTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.GHUtilityTest.testCopy()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f39dc86c57cd85a5533d410f951e4eed935812ff"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 183, "deletions": 196, "lines": 379, "gitFilesChange": 11}, "spoonStatsSummary": {"TOT": 215, "UPD": 79, "INS": 52, "MOV": 55, "DEL": 29, "spoonFilesChanged": 10, "spoonMethodsChanged": 47}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util", "core/src/main/java/com/graphhopper/storage/index", "core/src/main/java/com/graphhopper", "core/src/main/java/com/graphhopper/storage", "core/files/circle-bug.osm.gz", "core/src/main/java/com/graphhopper/routing"], "changesInPackagesSPOON": ["com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setWayGeometry(com.graphhopper.storage.PointList)", "com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.copyProperties(com.graphhopper.util.EdgeIteratorState)", "com.graphhopper.storage.GraphHopperStorage.setFlags(long,int,int,long)", "com.graphhopper.storage.GraphHopperStorage.inPlaceNodeRemove(int)", "com.graphhopper.routing.QueryGraph.lookup(java.util.List)", "com.graphhopper.util.GHUtility.copyTo(com.graphhopper.util.Graph,com.graphhopper.util.Graph)", "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.detach()", "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.getFlags()", "com.graphhopper.util.GHUtility.createSortedGraph(com.graphhopper.util.Graph,com.graphhopper.util.Graph,gnu.trove.list.TIntList)", "com.graphhopper.util.detach(boolean)", "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.setFlags(long)", "com.graphhopper.routing.QueryGraph.createEdges(com.graphhopper.util.shapes.GHPoint,int,com.graphhopper.util.shapes.GHPoint,int,boolean,com.graphhopper.routing.PointList,com.graphhopper.routing.EdgeIteratorState,int,int,long)", "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.getFlags()", "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.detach(boolean)", "com.graphhopper.storage.GraphHopperStorage.EdgeIterable", "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator", "com.graphhopper.routing.QueryGraph.lookup(java.util.List).1.execute(java.util.List)", "com.graphhopper.routing.QueryGraph.VirtualEdgeIState.detach(boolean)", "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.getAdjNode()", "com.graphhopper.routing.RoutingAlgorithmIT.testOneWayCircleBug()", "com.graphhopper.storage.index.LocationIndexTree.findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).1.execute(int).1.check(int,double,int,com.graphhopper.storage.index.EdgeIteratorState,com.graphhopper.storage.index.QueryResult$Position)", "com.graphhopper.storage.GraphHopperStorage.setFlags(long,boolean,long)", "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.fetchWayGeometry(int)", "com.graphhopper.storage.index.Location2IDFullWithEdgesIndex.findClosest(double,double,com.graphhopper.routing.util.EdgeFilter)", "com.graphhopper.storage.GraphHopperStorage.swapFlags(long,long)", "com.graphhopper.routing.RoutingAlgorithmIT.runAlgo(com.graphhopper.routing.util.TestAlgoCollector,java.lang.String,java.lang.String,java.util.List,java.lang.String,boolean,java.lang.String,java.lang.String)", "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.detach(boolean)", "com.graphhopper.storage.LevelGraphStorage.setWeight(com.graphhopper.util.EdgeSkipIterState,double)", "com.graphhopper.storage.LevelGraphStorage.swapFlags(long,long)", "com.graphhopper.storage.index.LocationIndexTreeSC.getAllEdges().2.detach()", "com.graphhopper.storage.GraphHopperStorage.SingleEdge.getFlags()", "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.next()", "com.graphhopper.storage.GraphHopperStorage.SingleEdge", "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.setWayGeometry(com.graphhopper.storage.PointList)", "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.getAdjNode()", "com.graphhopper.storage.GraphHopperStorage.getEdgeProps(int,int)", "com.graphhopper.storage.GraphHopperStorage.getFlags(long,boolean)", "com.graphhopper.routing.QueryGraph.VirtualEdgeIterator.detach(boolean)", "com.graphhopper.storage.index.Location2IDFullIndex.findClosest(double,double,com.graphhopper.routing.util.EdgeFilter)", "com.graphhopper.util.GHUtility.DisabledEdgeIterator.detach(boolean)", "com.graphhopper.storage.index.LocationIndexTreeSC.getAllEdges().2.detach(boolean)", "com.graphhopper.storage.GraphHopperStorage.EdgeIterable.detach()", "com.graphhopper.routing.QueryGraph.fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.routing.EdgeExplorer)", "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.fetchWayGeometry(int)", "com.graphhopper.storage.LevelGraphStorage.EdgeSkipIteratorImpl.detach(boolean)", "com.graphhopper.util.GHUtility.DisabledEdgeIterator.detach()", "com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator.next()"]}, {"title": "Bug for identical locations", "body": "Problem occured:Tried to access PointList with too big index! index:0, size:0\n\nhttp://graphhopper.com/maps/?point=51.334789%2C12.30869&point=51.334789%2C12.30869&locale=de\n\n```\njava.lang.ArrayIndexOutOfBoundsException: Tried to access PointList with too big index! index:0, size:0\n    at com.graphhopper.util.PointList.getLatitude(PointList.java:93)\n    at com.graphhopper.util.Instruction.getFirstLat(Instruction.java:111)\n    at com.graphhopper.util.InstructionList.createLatLngs(InstructionList.java:144)\n    at com.graphhopper.http.GraphHopperServlet.writeJson(GraphHopperServlet.java:200)\n    at com.graphhopper.http.GraphHopperServlet.writePath(GraphHopperServlet.java:144)\n    at com.graphhopper.http.GraphHopperServlet.doGet(GraphHopperServlet.java:69)\n```\n\nwhere QueryGraph.fetchWayGeometry(3) returns a list of 1 only, where we expect at least 2 nodes\n", "url": "https://github.com/graphhopper/graphhopper/issues/161", "user": "karussell", "labels": ["bug"], "created": "2014-03-13 13:45:16", "closed": "2014-03-17 13:07:04", "commits": {"6bd59af99dd6e774c780e6ea0335aa8340f9cd2d": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "6bd59af99dd6e774c780e6ea0335aa8340f9cd2d", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["0ee0bfcc9b07e0f6f6ad11aa2ad0418184035d02"], "nameRev": "6bd59af99dd6e774c780e6ea0335aa8340f9cd2d tags/0.4.1~458", "commitMessage": "fixed #161\n", "commitDateTime": "2014-03-17 14:02:49", "authoredDateTime": "2014-03-17 13:59:20", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 8, "deletions": 11, "lines": 19}, {"filePath": "core/src/main/java/com/graphhopper/util/FinishInstruction.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 19, "deletions": 13, "lines": 32}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/util/InstructionListTest.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.lookup(java.util.List).1.execute(java.util.List)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdges(com.graphhopper.util.shapes.GHPoint,int,com.graphhopper.util.shapes.GHPoint,int,boolean,com.graphhopper.routing.PointList,com.graphhopper.routing.EdgeIteratorState,int,int,long)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "FinishInstruction.java", "spoonMethods": []}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testOneVirtualNode()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testOneWay()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges()", "TOT": 6, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testMonacoMixed()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.createMonacoCar()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InstructionListTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.InstructionListTest.testEmptyList()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6bd59af99dd6e774c780e6ea0335aa8340f9cd2d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 13, "lines": 22, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 9, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util", "core/src/main/java/com/graphhopper/routing"], "changesInPackagesSPOON": ["com.graphhopper.routing.QueryGraph.lookup(java.util.List).1.execute(java.util.List)", "com.graphhopper.routing.RoutingAlgorithmIT.testMonacoMixed()", "com.graphhopper.routing.RoutingAlgorithmIT.createMonacoCar()", "com.graphhopper.routing.QueryGraph.createEdges(com.graphhopper.util.shapes.GHPoint,int,com.graphhopper.util.shapes.GHPoint,int,boolean,com.graphhopper.routing.PointList,com.graphhopper.routing.EdgeIteratorState,int,int,long)"]}, {"title": "double != Double.NaN is always true", "body": "In OsmReader:358  (dim3 branch):\n\n```\nif (firstLat != Double.NaN && firstLon != Double.NaN && lastLat != Double.NaN && lastLon != Double.NaN)\n```\n\nfrom http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.21.1 \n\"If either operand is NaN, then the result of == is false but the result of != is true.\"\n", "url": "https://github.com/graphhopper/graphhopper/issues/156", "user": "jtheuer", "labels": ["bug"], "created": "2014-02-28 10:30:02", "closed": "2014-02-28 16:43:43", "commits": {"73ab4955eb9d3b3b5809180fbd49f62ad0f4f19e": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "73ab4955eb9d3b3b5809180fbd49f62ad0f4f19e", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["3844e375b085d56cb1435d12e75ed6d43fd98f51"], "nameRev": "73ab4955eb9d3b3b5809180fbd49f62ad0f4f19e tags/0.4.1~480", "commitMessage": "fixed #156\n", "commitDateTime": "2014-02-28 17:43:32", "authoredDateTime": "2014-02-28 17:43:32", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/OSMReader.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMReader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReader.processWay(com.graphhopper.reader.OSMWay)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 4}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["73ab4955eb9d3b3b5809180fbd49f62ad0f4f19e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/reader"], "changesInPackagesSPOON": ["com.graphhopper.reader.OSMReader.processWay(com.graphhopper.reader.OSMWay)"]}, {"title": "Bugs using bidirectional algorithms", "body": "for some routes there are suboptimal results for all bidirectional algorithms:\n![1](https://f.cloud.github.com/assets/5525659/2171288/88a0865a-9580-11e3-963a-255c278bad62.PNG)\n![2](https://f.cloud.github.com/assets/5525659/2171290/8fb1ecea-9580-11e3-801e-3284aa6a8b79.PNG)\n\nNote: to replicate this use these URLs and disabled contraction hierarchies:\nhttp://localhost:8989/?point=48.983206%2C12.140568&point=48.983438%2C12.136411&weighting=shortest&algorithm=dijkstra\nhttp://localhost:8989/?point=48.983206%2C12.140568&point=48.983438%2C12.136411&weighting=shortest&algorithm=dijkstraNative\nhttp://localhost:8989/?point=48.984428%2C12.144517&point=48.983146%2C12.136631&algorithm=dijkstra\nhttp://localhost:8989/?point=48.984428%2C12.144517&point=48.983146%2C12.136631&algorithm=dijkstrabi\n\nBut with contraction hierarchies there's something wrong too:\nhttp://graphhopper.com/maps/?point=48.983206%2C12.140568&point=48.983213%2C12.136266&locale=de\n\nI've checked that it's probably not the algorithms fault, as the inEdgeExplorer does not even get the edge next to the destination point (the edge which is obviously the right one for best path)\nBut the outEdgeExplorer is able to get this edge if moving the start point in a westward direction.\nSo the bug may be caused by a wrong (directed) connection of destination querypoint with the neighbor nodes somewhere in QueryGraph.java\n", "url": "https://github.com/graphhopper/graphhopper/issues/151", "user": "PhilHa", "labels": ["bug", "critical bug"], "created": "2014-02-14 14:34:50", "closed": "2014-02-17 22:13:42", "commits": {"198c0aa411ba5dfbc5c40096f7eff58bde20715d": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "02d32a0d67f7c1c1712ddfe8e42ad7605b37ea2f": {"commitGHEventType": "closed", "commitUser": "karussell"}, "025812615e812123183f4e9de3c15594c8be0200": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "198c0aa411ba5dfbc5c40096f7eff58bde20715d", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["623f86cf36efbeaf1b2ba7eb720498aa07ff079f"], "nameRev": "198c0aa411ba5dfbc5c40096f7eff58bde20715d tags/0.4.1~484^2~9", "commitMessage": "bug fix towards #151\n", "commitDateTime": "2014-02-17 22:21:02", "authoredDateTime": "2014-02-17 22:21:02", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GHRequest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 14, "deletions": 10, "lines": 24}, {"filePath": "core/src/main/java/com/graphhopper/routing/RoutingAlgorithmFactory.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/NoOpAlgorithmPreparation.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/RoutingAlgorithmSpecialAreaTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 34, "deletions": 3, "lines": 37}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 23, "deletions": 8, "lines": 31}, {"filePath": "pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tools/src/main/java/com/graphhopper/ui/MiniGraphUI.java", "insertions": 128, "deletions": 87, "lines": 215}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GHRequest.java", "spoonMethods": []}, {"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap,com.graphhopper.routing.util.EdgeFilter,boolean,int,int)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).2.execute(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).3.setBaseNode(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.routing.EdgeExplorer)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmFactory.createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder,com.graphhopper.routing.util.Weighting)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NoOpAlgorithmPreparation.java", "spoonMethods": []}, {"spoonFilePath": "RoutingAlgorithmSpecialAreaTests.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests.createAlgos(com.graphhopper.storage.Graph,com.graphhopper.storage.index.LocationIndex,com.graphhopper.routing.util.FlagEncoder,boolean,com.graphhopper.routing.util.Weighting,com.graphhopper.routing.util.EncodingManager)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.createLocationResult(double,double,com.graphhopper.routing.EdgeIteratorState,int,com.graphhopper.storage.index.QueryResult$Position)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testRegensburg_issue151()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MiniGraphUI.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.ui.MiniGraphUI", "TOT": 15, "UPD": 6, "INS": 5, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.ui.MiniGraphUI.3.paintComponent(java.awt.Graphics2D)", "TOT": 12, "UPD": 10, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.ui.MiniGraphUI.visualize().4.run().2.mouseClicked(java.awt.event.MouseEvent)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.ui.MiniGraphUI.2.paintComponent(java.awt.Graphics2D)", "TOT": 15, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 13}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "02d32a0d67f7c1c1712ddfe8e42ad7605b37ea2f", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["198c0aa411ba5dfbc5c40096f7eff58bde20715d"], "nameRev": "02d32a0d67f7c1c1712ddfe8e42ad7605b37ea2f tags/0.4.1~484^2~8", "commitMessage": "fixed #151\n", "commitDateTime": "2014-02-17 23:13:31", "authoredDateTime": "2014-02-17 23:13:31", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "core/src/test/java/com/graphhopper/routing/AbstractRoutingAlgorithmTester.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 40, "deletions": 6, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.routing.EdgeExplorer)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "AbstractRoutingAlgorithmTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.updateDistancesFor(com.graphhopper.routing.Graph,int,double,double)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "025812615e812123183f4e9de3c15594c8be0200", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["cdf543dbab9cf978be6102eeba27695353adf570"], "nameRev": "025812615e812123183f4e9de3c15594c8be0200 tags/0.4.1~484^2~4", "commitMessage": "no need for ITest of #151 for now\n", "commitDateTime": "2014-02-17 23:44:46", "authoredDateTime": "2014-02-17 23:44:46", "commitGitStats": [{"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 0, "deletions": 15, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testRegensburg_issue151()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["198c0aa411ba5dfbc5c40096f7eff58bde20715d", "02d32a0d67f7c1c1712ddfe8e42ad7605b37ea2f", "025812615e812123183f4e9de3c15594c8be0200"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 149, "deletions": 107, "lines": 256, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 73, "UPD": 36, "INS": 12, "MOV": 7, "DEL": 18, "spoonFilesChanged": 4, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing", "core/src/main/java/com/graphhopper", "core/src/main/java/com/graphhopper/routing/util", "tools/src/main/java/com/graphhopper/ui"], "changesInPackagesSPOON": ["com.graphhopper.routing.QueryGraph.fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.routing.EdgeExplorer)", "com.graphhopper.routing.RoutingAlgorithmIT.testRegensburg_issue151()", "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter)", "com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap,com.graphhopper.routing.util.EdgeFilter,boolean,int,int)", "com.graphhopper.ui.MiniGraphUI", "com.graphhopper.ui.MiniGraphUI.3.paintComponent(java.awt.Graphics2D)", "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).2.execute(int)", "com.graphhopper.ui.MiniGraphUI.2.paintComponent(java.awt.Graphics2D)", "com.graphhopper.routing.RoutingAlgorithmFactory.createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder,com.graphhopper.routing.util.Weighting)", "com.graphhopper.ui.MiniGraphUI.visualize().4.run().2.mouseClicked(java.awt.event.MouseEvent)", "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).3.setBaseNode(int)"]}, {"title": "Android Demo Apk", "body": "I'm running the demo apk on my device. I hev created in my desktop the graphhopper folder with berlin.ghz insde, when I run the apk, the first spinner shows berlin and when I click ok jumps a toast saying: \"file does not exists: /storage/sdcard0/graphhopper/maps/berlin-gh/berlin.map\"\nBut when i search in a file explorer the file is in that location. I don\u00b4t know what to do. \n", "url": "https://github.com/graphhopper/graphhopper/issues/127", "user": "sebasgrgl", "labels": ["android", "bug"], "created": "2013-12-03 16:33:22", "closed": "2014-03-31 10:26:27", "commits": {"36f8aa03bfb3143810c9d4c2e12d14a834f676bd": {"commitGHEventType": "closed", "commitUser": "karussell"}, "aa67225ff1397cb9d1bff3c31e55f6db97c3f1b1": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "c1c0498a9173217bce34cbc6f01327954f2bfbb3": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 117.00027777777778, "commitsDetails": [{"commitHash": "36f8aa03bfb3143810c9d4c2e12d14a834f676bd", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["bff9ec06361299b56885a9f970564bafc0d59f71"], "nameRev": "36f8aa03bfb3143810c9d4c2e12d14a834f676bd tags/0.4.1~484^2~6", "commitMessage": "trying to fix #127\n", "commitDateTime": "2014-02-17 23:39:35", "authoredDateTime": "2014-02-17 23:39:35", "commitGitStats": [{"filePath": "android/src/com/graphhopper/android/MainActivity.java", "insertions": 15, "deletions": 8, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainActivity.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.MainActivity", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.android.MainActivity.onCreate(android.os.Bundle)", "TOT": 9, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.graphhopper.android.MainActivity.chooseAreaFromRemote().5.onPostExecute(java.util.List).1.onSelect(java.lang.String,java.lang.String)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "aa67225ff1397cb9d1bff3c31e55f6db97c3f1b1", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["e0f80e565549232894934524ab053ca1bf1a5fc4"], "nameRev": "aa67225ff1397cb9d1bff3c31e55f6db97c3f1b1 remotes/origin/0.2~2", "commitMessage": "trying to fix #127\n", "commitDateTime": "2014-02-17 23:48:03", "authoredDateTime": "2014-02-17 23:39:35", "commitGitStats": [{"filePath": "android/src/com/graphhopper/android/MainActivity.java", "insertions": 15, "deletions": 8, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainActivity.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.MainActivity", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.android.MainActivity.onCreate(android.os.Bundle)", "TOT": 9, "UPD": 2, "INS": 2, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.graphhopper.android.MainActivity.chooseAreaFromRemote().5.onPostExecute(java.util.List).1.onSelect(java.lang.String,java.lang.String)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c1c0498a9173217bce34cbc6f01327954f2bfbb3", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["c353ffa8f17ab0168016181c3b634dc346acbfbe"], "nameRev": "c1c0498a9173217bce34cbc6f01327954f2bfbb3 tags/0.4.1~407", "commitMessage": "fixing #127, android 4.4 cannot download/fetch data\n", "commitDateTime": "2014-03-28 21:19:20", "authoredDateTime": "2014-03-28 21:05:16", "commitGitStats": [{"filePath": "android/.classpath", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "android/.project", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "android/AndroidManifest.xml", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "android/project.properties", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "android/src/com/graphhopper/android/MainActivity.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/util/Downloader.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MainActivity.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.android.MainActivity.onCreate(android.os.Bundle)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "Downloader.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.Downloader.createConnection(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["36f8aa03bfb3143810c9d4c2e12d14a834f676bd", "c1c0498a9173217bce34cbc6f01327954f2bfbb3"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 23, "deletions": 19, "lines": 42, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 25, "UPD": 6, "INS": 5, "MOV": 9, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["android/src/com/graphhopper/android", "android/.project", "android/.classpath", "android/project.properties", "core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.android.MainActivity.onCreate(android.os.Bundle)", "com.graphhopper.android.MainActivity.chooseAreaFromRemote().5.onPostExecute(java.util.List).1.onSelect(java.lang.String,java.lang.String)", "com.graphhopper.android.MainActivity", "com.graphhopper.util.Downloader.createConnection(java.lang.String)"]}, {"title": "Failed to execute goal on project graphhopper-web", "body": "Got an error when executing `./graphhopper.sh web europe_germany_berlin.pbf`:\n\n```\nFailed to execute goal on project graphhopper-web: \n\nCould not resolve dependencies for project com.graphhopper:graphhopper-web:war:0.3-SNAPSHOT: \n\nFailed to collect dependencies for [com.graphhopper:graphhopper:jar:0.3-SNAPSHOT (compile), \n    org.json:json:jar:20090211 (compile), \n    com.google.inject:guice:jar:3.0 (compile), \n    com.google.inject.extensions:guice-servlet:jar:3.0 (compile), \n    javax.servlet:javax.servlet-api:jar:3.0.1 (provided), \n    org.slf4j:slf4j-api:jar:1.7.5 (compile), \n    org.slf4j:slf4j-log4j12:jar:1.7.5 (runtime), \n    log4j:log4j:jar:1.2.17 (compile), \n    org.eclipse.jetty:jetty-servlets:jar:8.1.10.v20130312 (compile), \n    org.eclipse.jetty:jetty-webapp:jar:8.1.10.v20130312 (test), \n    junit:junit:jar:4.11 (test)]: \n\nFailed to read artifact descriptor for com.graphhopper:graphhopper:jar:0.3-SNAPSHOT: \n\nCould not find artifact com.graphhopper:graphhopper-parent:pom:0.3-SNAPSHOT in sonatype-nexus-snapshots (https://oss.sonatype.org/content/repositories/snapshots) -> [Help 1]\n```\n\nHope, there is an easy fix for that!\n", "url": "https://github.com/graphhopper/graphhopper/issues/125", "user": "aemkei", "labels": ["bug"], "created": "2013-11-27 10:59:18", "closed": "2013-11-27 21:51:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "No route found where it should be possible", "body": "This route should be possible:\n\nhttp://graphhopper.com/maps/?point=55.818066%2C37.607542&point=55.819995%2C37.59499&locale=en-US\n\nif one drags the end flag a bit around routes are easily possible.\n\nAdditionally this looks strange:\n\nhttp://graphhopper.com/maps/?point=55.817993%2C37.60721&point=55.819392%2C37.59573&locale=en-US\n", "url": "https://github.com/graphhopper/graphhopper/issues/114", "user": "karussell", "labels": ["bug"], "created": "2013-10-23 11:51:06", "closed": "2013-10-28 22:02:19", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "Safe Usage from multiple GraphHopper instances (or JVMs)", "body": "At the moment graphhopper fails silently (BAD!) if two processes are concurrently writing to the folder, or one process is writing and another is reading partial information.\n\nFix: Create a lock file in the graphhopper folder if an GH instance is writing to it - e.g. for RAM_STORE. For MMAP all the time. And then check for this lock file on load (regardless of the DAType) and throw an exception if it exists. Additionally if it is RAM_STORE and the directory contains at least ONE MMAP dataacess object use the MMAP variant!\n\nBut make sure two RAM_STORE instances can still read the folder (loadExisting)!\n\nProblems:\n- removing the lock file even if the process was interrupted or ended via CTRL+C. But there could be an option -forceLockFileRemoval or similar to workaround this.\n- FileChange.lock is probably not appropriated as we need to block access to a file also for multiple instances in one JVM and it does not really work for NFS as noted [here](http://lucene.apache.org/core/4_5_0/core/org/apache/lucene/store/NativeFSLockFactory.html)\n", "url": "https://github.com/graphhopper/graphhopper/issues/112", "user": "karussell", "labels": ["bug"], "created": "2013-10-18 08:31:46", "closed": "2014-06-16 21:45:49", "commits": {"9dd22e400f98f9ae99f9be70f9fc245cad144c45": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "6d53cbc17f151bea6d1221b4f5c35ee8034efce9": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 241.00027777777777, "commitsDetails": [{"commitHash": "9dd22e400f98f9ae99f9be70f9fc245cad144c45", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["2a21fadd1e32d2551de866712599b85db9141576"], "nameRev": "9dd22e400f98f9ae99f9be70f9fc245cad144c45 tags/0.4.1~253", "commitMessage": "fixed the main problem in #112\n", "commitDateTime": "2014-06-16 18:15:43", "authoredDateTime": "2014-06-16 18:15:43", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 69, "deletions": 30, "lines": 99}, {"filePath": "core/src/main/java/com/graphhopper/storage/Lock.java", "insertions": 35, "deletions": 0, "lines": 35}, {"filePath": "core/src/main/java/com/graphhopper/storage/LockFactory.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "core/src/main/java/com/graphhopper/storage/NativeFSLockFactory.java", "insertions": 228, "deletions": 0, "lines": 228}, {"filePath": "core/src/main/java/com/graphhopper/storage/SimpleFSLockFactory.java", "insertions": 136, "deletions": 0, "lines": 136}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperTest.java", "insertions": 94, "deletions": 0, "lines": 94}, {"filePath": "core/src/test/java/com/graphhopper/storage/NativeFSLockFactoryTest.java", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "core/src/test/java/com/graphhopper/storage/SimpleFSLockFactoryTest.java", "insertions": 73, "deletions": 0, "lines": 73}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)", "TOT": 11, "UPD": 0, "INS": 1, "MOV": 10, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.process(java.lang.String)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.load(java.lang.String)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "Lock.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LockFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NativeFSLockFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleFSLockFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactory", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GraphHopperTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NativeFSLockFactoryTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactoryTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleFSLockFactoryTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactoryTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6d53cbc17f151bea6d1221b4f5c35ee8034efce9", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["51fbb7a979c0729d47b3ed26e4ac840b22f462cb"], "nameRev": "6d53cbc17f151bea6d1221b4f5c35ee8034efce9 tags/0.4.1~245", "commitMessage": "Improvement for #112 to allow read only filesystems AND allow multiple loadExisting calls at the same time\n", "commitDateTime": "2014-06-23 17:30:42", "authoredDateTime": "2014-06-23 16:48:51", "commitGitStats": [{"filePath": "core/files/changelog.txt", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 63, "deletions": 12, "lines": 75}, {"filePath": "core/src/main/java/com/graphhopper/storage/Lock.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/storage/LockFactory.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "core/src/main/java/com/graphhopper/storage/NativeFSLockFactory.java", "insertions": 37, "deletions": 12, "lines": 49}, {"filePath": "core/src/main/java/com/graphhopper/storage/SimpleFSLockFactory.java", "insertions": 9, "deletions": 7, "lines": 16}, {"filePath": "core/src/test/java/com/graphhopper/storage/AbstractLockFactoryTester.java", "insertions": 86, "deletions": 0, "lines": 86}, {"filePath": "core/src/test/java/com/graphhopper/storage/NativeFSLockFactoryTest.java", "insertions": 33, "deletions": 36, "lines": 69}, {"filePath": "core/src/test/java/com/graphhopper/storage/SimpleFSLockFactoryTest.java", "insertions": 4, "deletions": 45, "lines": 49}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphHopper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.GraphHopper", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.process(java.lang.String)", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.load(java.lang.String)", "TOT": 8, "UPD": 3, "INS": 2, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.setAllowWrites(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.isAllowWrites()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.clean()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.ensureWriteAccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.importData()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.createLocationIndex(com.graphhopper.Directory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.prepare()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.GraphHopper.ensureNotLoaded()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Lock.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.obtain()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.getObtainFailedReason()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LockFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.create(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.forceRemove(java.lang.String,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NativeFSLockFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory.NativeLock.obtain()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory.NativeLock.getFailedReason()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory.create(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory.NativeLock.isLocked()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory.main(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory.create(java.lang.String,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory.forceRemove(java.lang.String,boolean)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory.NativeLock", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory.NativeLock.tryLock()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactory.NativeLock.release()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleFSLockFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.obtain()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.getFailedReason()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.release()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactory.create(java.lang.String,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactory.forceRemove(java.lang.String,boolean)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.tryLock()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.isLocked()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.getObtainFailedReason()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractLockFactoryTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.AbstractLockFactoryTester", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NativeFSLockFactoryTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactoryTest.tearDown()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactoryTest.testObtain()", "TOT": 23, "UPD": 10, "INS": 0, "MOV": 10, "DEL": 3}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactoryTest.testForceDelete()", "TOT": 18, "UPD": 11, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactoryTest", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactoryTest.setUp()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.NativeFSLockFactoryTest.testMultiReadObtain()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleFSLockFactoryTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactoryTest.setUp()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactoryTest", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactoryTest.tearDown()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactoryTest.testObtain()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.SimpleFSLockFactoryTest.testForceDelete()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9dd22e400f98f9ae99f9be70f9fc245cad144c45", "6d53cbc17f151bea6d1221b4f5c35ee8034efce9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 623, "deletions": 64, "lines": 687, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 91, "UPD": 16, "INS": 50, "MOV": 23, "DEL": 2, "spoonFilesChanged": 5, "spoonMethodsChanged": 38}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/storage", "core/src/main/java/com/graphhopper"], "changesInPackagesSPOON": ["com.graphhopper.GraphHopper.load(java.lang.String)", "com.graphhopper.GraphHopper.process(java.lang.String)", "com.graphhopper.GraphHopper", "com.graphhopper.storage", "com.graphhopper.storage.NativeFSLockFactory.forceRemove(java.lang.String,boolean)", "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.getFailedReason()", "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.tryLock()", "com.graphhopper.storage.getObtainFailedReason()", "com.graphhopper.GraphHopper.importData()", "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.release()", "com.graphhopper.storage.NativeFSLockFactory.NativeLock.getFailedReason()", "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.getObtainFailedReason()", "com.graphhopper.GraphHopper.isAllowWrites()", "com.graphhopper.storage.NativeFSLockFactory", "com.graphhopper.storage.forceRemove(java.lang.String,boolean)", "com.graphhopper.storage.SimpleFSLockFactory", "com.graphhopper.GraphHopper.ensureWriteAccess()", "com.graphhopper.GraphHopper.setAllowWrites(boolean)", "com.graphhopper.GraphHopper.ensureNotLoaded()", "com.graphhopper.storage.SimpleFSLockFactory.create(java.lang.String,boolean)", "com.graphhopper.storage.NativeFSLockFactory.NativeLock.release()", "com.graphhopper.storage.create(java.lang.String,boolean)", "com.graphhopper.storage.NativeFSLockFactory.create(java.lang.String)", "com.graphhopper.GraphHopper.prepare()", "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.obtain()", "com.graphhopper.storage.NativeFSLockFactory.NativeLock.isLocked()", "com.graphhopper.storage.NativeFSLockFactory.NativeLock.obtain()", "com.graphhopper.GraphHopper.clean()", "com.graphhopper.storage.NativeFSLockFactory.NativeLock", "com.graphhopper.storage.SimpleFSLockFactory.SimpleLock.isLocked()", "com.graphhopper.storage.NativeFSLockFactory.main(java.lang.String[])", "com.graphhopper.GraphHopper.createLocationIndex(com.graphhopper.Directory)", "com.graphhopper.storage.SimpleFSLockFactory.forceRemove(java.lang.String,boolean)", "com.graphhopper.storage.obtain()", "com.graphhopper.GraphHopper.init(com.graphhopper.CmdArgs)", "com.graphhopper.GraphHopper.close()", "com.graphhopper.storage.NativeFSLockFactory.NativeLock.tryLock()", "com.graphhopper.storage.NativeFSLockFactory.create(java.lang.String,boolean)"]}, {"title": "web should recognize longitudes bigger than 180 and smaller than -180", "body": "Leaflet can produce out of bounce lons. The JS should correct this.\n", "url": "https://github.com/graphhopper/graphhopper/issues/109", "user": "karussell", "labels": ["bug", "web"], "created": "2013-10-01 06:21:08", "closed": "2013-11-13 11:37:58", "commits": {"14199aff6c80efd8da006ee0fbf071f8580e879b": {"commitGHEventType": "closed", "commitUser": "karussell"}, "78bcaec4b2989c2833c805d3cc57eed949b8ef99": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "14199aff6c80efd8da006ee0fbf071f8580e879b", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["c34a842f3c57eaec8a17df536237eaccaf13268f"], "nameRev": "14199aff6c80efd8da006ee0fbf071f8580e879b tags/0.4.1~628", "commitMessage": "fixed #109\n", "commitDateTime": "2013-11-13 12:37:50", "authoredDateTime": "2013-11-13 11:43:42", "commitGitStats": [{"filePath": "core/files/changelog.txt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/util/shapes/GHPlace.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/util/shapes/GHPoint.java", "insertions": 20, "deletions": 1, "lines": 21}, {"filePath": "web/src/main/webapp/js/main.js", "insertions": 291, "deletions": 282, "lines": 573}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GHPlace.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.shapes.GHPlace", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "GHPoint.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.shapes.GHPoint.makeValidLon(double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.GHPoint.makeValidLat(double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.shapes.GHPoint", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "78bcaec4b2989c2833c805d3cc57eed949b8ef99", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["14199aff6c80efd8da006ee0fbf071f8580e879b"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 313.0, "deletions": 285.0, "lines": 598.0, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 10.0, "UPD": 0.0, "INS": 6.0, "MOV": 2.0, "DEL": 2.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/webapp/js/main.js", "core/src/main/java/com/graphhopper/util/shapes"], "changesInPackagesSPOON": ["com.graphhopper.util.shapes.GHPlace", "com.graphhopper.util.shapes.GHPoint.makeValidLat(double)", "com.graphhopper.util.shapes.GHPoint", "com.graphhopper.util.shapes.GHPoint.makeValidLon(double)"]}, {"title": "If no RAM available on import it should not successfully finish", "body": "```\r\nException in thread \"PBF Reader\" java.lang.OutOfMemoryError: GC overhead limit exceeded\r\n    at java.util.concurrent.LinkedBlockingQueue.put(LinkedBlockingQueue.java:335)\r\n    at com.graphhopper.reader.OSMInputFile.process(OSMInputFile.java:253)\r\n    at com.graphhopper.reader.pbf.PbfDecoder.sendResultsToSink(PbfDecoder.java:106)\r\n    at com.graphhopper.reader.pbf.PbfDecoder.processBlobs(PbfDecoder.java:171)\r\n    at com.graphhopper.reader.pbf.PbfDecoder.run(PbfDecoder.java:184)\r\n    at com.graphhopper.reader.pbf.PbfReader.run(PbfReader.java:49)\r\n    at java.lang.Thread.run(Thread.java:724)\r\n2013-09-17 08:26:08,866 [main] INFO  graphhopper.reader.OSMReaderHelper - finished way processing. nodes: 6359398, osmIdMap.size:32437443, osmIdMap:381MB, osmIdMap.toString:Height:4, entries:247803 totalMB:968, usedMB:931\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/107", "user": "karussell", "labels": ["bug"], "created": "2013-09-17 06:30:16", "closed": "2017-03-23 09:55:44", "commits": {}, "ttf": 1283.0002777777777, "commitsDetails": []}, {"title": "Terminate bidirectional search when one side is exhausted", "body": "When one side of a bidirectional search has exhausted all reachable nodes, the search can be terminated because there is no connection between the points.\n\nCurrent implementation continuous the search on the other side, which will always fail after excessive resource consumption or a server crash.\n\nFor CH both sides must continue as they may see different levels.\n", "url": "https://github.com/graphhopper/graphhopper/issues/105", "user": "NopMap", "labels": ["bug"], "created": "2013-09-04 16:59:43", "closed": "2013-11-12 13:11:32", "commits": {"ade2e9ef4dd1c4a26564079bd360af98878a6d79": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 68.00027777777778, "commitsDetails": [{"commitHash": "ade2e9ef4dd1c4a26564079bd360af98878a6d79", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["f40d64b30120292fdf4d904b9859848fbc76b686"], "nameRev": "ade2e9ef4dd1c4a26564079bd360af98878a6d79 tags/0.4.1~647^2~16", "commitMessage": "more common methods for (bidir) algos; towards #27 -> new method taking edges, additional tests for that in AbstractRoutingAlgorithmTester; repairs #105\n", "commitDateTime": "2013-10-03 23:26:44", "authoredDateTime": "2013-10-03 22:58:26", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/AStar.java", "insertions": 82, "deletions": 41, "lines": 123}, {"filePath": "core/src/main/java/com/graphhopper/routing/AStarBidirection.java", "insertions": 61, "deletions": 127, "lines": 188}, {"filePath": "core/src/main/java/com/graphhopper/routing/AbstractBidirAlgo.java", "insertions": 106, "deletions": 0, "lines": 106}, {"filePath": "core/src/main/java/com/graphhopper/routing/AbstractRoutingAlgorithm.java", "insertions": 39, "deletions": 4, "lines": 43}, {"filePath": "core/src/main/java/com/graphhopper/routing/Dijkstra.java", "insertions": 62, "deletions": 31, "lines": 93}, {"filePath": "core/src/main/java/com/graphhopper/routing/DijkstraBidirection.java", "insertions": 79, "deletions": 114, "lines": 193}, {"filePath": "core/src/main/java/com/graphhopper/routing/DijkstraBidirectionRef.java", "insertions": 78, "deletions": 155, "lines": 233}, {"filePath": "core/src/main/java/com/graphhopper/routing/DijkstraOneToMany.java", "insertions": 36, "deletions": 19, "lines": 55}, {"filePath": "core/src/main/java/com/graphhopper/routing/PathBidir.java", "insertions": 5, "deletions": 10, "lines": 15}, {"filePath": "core/src/main/java/com/graphhopper/routing/RoutingAlgorithm.java", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java", "insertions": 21, "deletions": 28, "lines": 49}, {"filePath": "core/src/main/java/com/graphhopper/util/EdgeWrapper.java", "insertions": 10, "deletions": 9, "lines": 19}, {"filePath": "core/src/main/java/com/graphhopper/util/GHUtility.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/util/Helper.java", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "core/src/test/java/com/graphhopper/routing/AbstractRoutingAlgorithmTester.java", "insertions": 91, "deletions": 19, "lines": 110}, {"filePath": "core/src/test/java/com/graphhopper/routing/DijkstraBidirectionRefTest.java", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "core/src/test/java/com/graphhopper/routing/DijkstraBidirectionTest.java", "insertions": 0, "deletions": 12, "lines": 12}, {"filePath": "core/src/test/java/com/graphhopper/routing/DijkstraOneToManyTest.java", "insertions": 19, "deletions": 1, "lines": 20}, {"filePath": "core/src/test/java/com/graphhopper/routing/ch/DijkstraBidirectionCHTest.java", "insertions": 2, "deletions": 4, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AStar.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AStar", "TOT": 14, "UPD": 3, "INS": 8, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.AStar.finished(com.graphhopper.storage.EdgeEntry,int)", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.AStar.extractPath(com.graphhopper.storage.EdgeEntry)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.AStar.calcPath(int,int)", "TOT": 53, "UPD": 9, "INS": 1, "MOV": 22, "DEL": 21}, {"spoonMethodName": "com.graphhopper.routing.AStar.setApproximation(boolean)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStar.initCollections(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStar.calcPath(com.graphhopper.routing.EdgeIteratorState,com.graphhopper.routing.EdgeIteratorState)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStar.runAlgo()", "TOT": 15, "UPD": 0, "INS": 15, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStar.finished()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStar.extractPath()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStar.createEmptyEdgeEntry(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStar.getVisitedNodes()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "AStarBidirection.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AStarBidirection", "TOT": 16, "UPD": 6, "INS": 0, "MOV": 5, "DEL": 5}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.initTo(int)", "TOT": 12, "UPD": 2, "INS": 2, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.calcPath(int,int)", "TOT": 16, "UPD": 4, "INS": 0, "MOV": 8, "DEL": 4}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.initCollections(int)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.initPath()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.fillEdgesFrom()", "TOT": 24, "UPD": 3, "INS": 5, "MOV": 13, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.fillEdgesTo()", "TOT": 23, "UPD": 3, "INS": 5, "MOV": 12, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.updateShortest(com.graphhopper.routing.AStar.AStarEdge,int)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.initFrom(int)", "TOT": 10, "UPD": 1, "INS": 4, "MOV": 3, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.checkFinishCondition()", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.checkIndenticalFromAndTo()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.createPath()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.getVisitedNodes()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.extractPath()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.checkState(int,int,int,int)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AStarBidirection.finished()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractBidirAlgo.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractBidirAlgo", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractRoutingAlgorithm.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithm", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyEdgeEntry(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithm.finished()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithm.toString()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Dijkstra.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.Dijkstra", "TOT": 12, "UPD": 9, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.Dijkstra.calcEdgeEntry(com.graphhopper.storage.EdgeEntry,int)", "TOT": 23, "UPD": 10, "INS": 0, "MOV": 3, "DEL": 10}, {"spoonMethodName": "com.graphhopper.routing.Dijkstra.calcPath(int,int)", "TOT": 29, "UPD": 10, "INS": 1, "MOV": 15, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.Dijkstra.extractPath(com.graphhopper.storage.EdgeEntry)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.graphhopper.routing.Dijkstra.finished(com.graphhopper.storage.EdgeEntry,int)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 4}, {"spoonMethodName": "com.graphhopper.routing.Dijkstra.initCollections(int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.Dijkstra.calcPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.util.EdgeIteratorState)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.Dijkstra.finished()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.Dijkstra.extractPath()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.Dijkstra.runAlgo()", "TOT": 8, "UPD": 0, "INS": 8, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DijkstraBidirection.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection", "TOT": 49, "UPD": 13, "INS": 1, "MOV": 22, "DEL": 13}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.checkFinishCondition()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.initFrom(int)", "TOT": 9, "UPD": 2, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.fillEdges(int,double,int,com.graphhopper.coll.IntDoubleBinHeap,com.graphhopper.util.EdgeWrapper,com.graphhopper.util.EdgeExplorer)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.initPath()", "TOT": 5, "UPD": 3, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.fillEdgesTo()", "TOT": 23, "UPD": 7, "INS": 1, "MOV": 14, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.initTo(int)", "TOT": 9, "UPD": 2, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.updateShortest(int,int,double)", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.fillEdgesFrom()", "TOT": 12, "UPD": 2, "INS": 1, "MOV": 8, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.calcPath(int,int)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.getVisitedNodes()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.checkIndenticalFromAndTo()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.initCollections(int)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.extractPath()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirection.checkState(int,int,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DijkstraBidirectionRef.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef", "TOT": 17, "UPD": 6, "INS": 0, "MOV": 5, "DEL": 6}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.checkFinishCondition()", "TOT": 13, "UPD": 3, "INS": 0, "MOV": 6, "DEL": 4}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.initFrom(int)", "TOT": 17, "UPD": 4, "INS": 4, "MOV": 3, "DEL": 6}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.initTo(int)", "TOT": 17, "UPD": 4, "INS": 4, "MOV": 3, "DEL": 6}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.calcPath(int,int)", "TOT": 15, "UPD": 3, "INS": 0, "MOV": 8, "DEL": 4}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.initCollections(int)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.extractPath()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.updateShortest(com.graphhopper.storage.EdgeEntry,int)", "TOT": 8, "UPD": 8, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.shortestWeightFrom(int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.shortestWeightTo(int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.fillEdgesFrom()", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.fillEdgesTo()", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.checkIndenticalFromAndTo()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.createPath()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.initPath()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.getVisitedNodes()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.checkState(int,int,int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRef.finished()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DijkstraOneToMany.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.calcPath(int,int)", "TOT": 10, "UPD": 1, "INS": 1, "MOV": 5, "DEL": 3}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.findEndNode(int,int)", "TOT": 33, "UPD": 1, "INS": 13, "MOV": 4, "DEL": 15}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.finished(int,int)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.calcPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.util.EdgeIteratorState)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.finished()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToMany.extractPath()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PathBidir.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.PathBidir.extract()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithm.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.calcPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.util.EdgeIteratorState)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PrepareContractionHierarchies.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.createAlgo().1.checkFinishCondition()", "TOT": 16, "UPD": 5, "INS": 0, "MOV": 5, "DEL": 6}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.createAlgo().1.createPath()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.createAStar().2.checkFinishCondition()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.createAStar().2.createPath()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.ch.PrepareContractionHierarchies.createAlgo().1.finished()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EdgeWrapper.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.EdgeWrapper.isEmpty()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GHUtility.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.GHUtility.getEdge(com.graphhopper.util.GraphStorage,int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Helper.java", "spoonMethods": []}, {"spoonFilePath": "AbstractRoutingAlgorithmTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.initFastVsShort(com.graphhopper.storage.Graph)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testCalcFastestPath()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testCalcFootPath()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testCalcIf1EdgeAway()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testBidirectional()", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testBidirectional2()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testBug1()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testCorrectWeight()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testDirectedGraphBug1()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testDirectedGraphBug2()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testWithCoordinates()", "TOT": 15, "UPD": 9, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testRekeyBugOfIntBinHeap()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testViaEdges()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testViaEdges2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testDirectedGraphViaEdges()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testNoPathFound()", "TOT": 12, "UPD": 0, "INS": 12, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.testCalcIfEmptyWay()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "DijkstraBidirectionRefTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionRefTest.testCannotCalculateSP2()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DijkstraBidirectionTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraBidirectionTest.testCannotCalculateSP2()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "DijkstraOneToManyTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.DijkstraOneToManyTest.testViaEdges()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToManyTest.testViaEdges2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.DijkstraOneToManyTest.testDirectedGraphViaEdges()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DijkstraBidirectionCHTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Bug in GraphStorage.optimize", "body": "http://lists.openstreetmap.org/pipermail/graphhopper/2013-August/000400.html\n\n``` text\n\nI've isolated the error in a small subset of\ndata, that I've uploaded to http://waarisdetrein.nl/download/sph.osm .\nThe error occurs when you click from any point on the left-most leg\n(identified as 4 in my graph) to anywhere else - anything from about\nhalfway onwards.\n\n```\n\n![image](http://i.imgur.com/R90taGf.png)\n\nReported from Joel - Thanks!\n", "url": "https://github.com/graphhopper/graphhopper/issues/102", "user": "karussell", "labels": ["bug", "critical bug"], "created": "2013-09-01 05:12:27", "closed": "2013-10-01 19:16:45", "commits": {"3e2f71094e08b1b0fb63ccbee85bacc7684361b2": {"commitGHEventType": "closed", "commitUser": "karussell"}, "b050739a781b830f276a0fe16d2543eb31f79ad3": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 30.00027777777778, "commitsDetails": [{"commitHash": "3e2f71094e08b1b0fb63ccbee85bacc7684361b2", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["0eee66f6228582211a54edc0e0c133613c4cbe2c"], "nameRev": "3e2f71094e08b1b0fb63ccbee85bacc7684361b2 tags/0.4.1~679", "commitMessage": "trying to fix #102\n", "commitDateTime": "2013-09-09 11:09:33", "authoredDateTime": "2013-09-09 11:09:33", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/storage/GraphStorage.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "core/src/test/java/com/graphhopper/storage/AbstractGraphTester.java", "insertions": 15, "deletions": 3, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphStorage.inPlaceNodeRemove(int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "AbstractGraphTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.AbstractGraphTester.testSimpleDelete2()", "TOT": 16, "UPD": 0, "INS": 12, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b050739a781b830f276a0fe16d2543eb31f79ad3", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3e2f71094e08b1b0fb63ccbee85bacc7684361b2"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5.0, "deletions": 3.0, "lines": 8.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3.0, "UPD": 0.0, "INS": 1.0, "MOV": 2.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.storage.GraphStorage.inPlaceNodeRemove(int)"]}, {"title": "Wrong and missing turn instruction", "body": "in this situation:\n\nhttp://graphhopper.com/maps/?point=52.006528%2C4.372382&point=52.006908%2C4.369898\n\nGraphhopper is not showing a 'sharp left turn', possibly because the from and to ways are the same (Poortlandplein, since that's the name of the square)\n\nHere are other examples of missing instructions: \n- http://graphhopper.com/maps/?point=49.76661%2C43.648478&point=49.765854%2C43.658381&vehicle=FOOT\n- http://graphhopper.com/maps/?point=48.614598%2C8.033752&point=48.61664%2C8.021629&vehicle=bike&elevation=true\n\nAnother improvement would be (create another issue?) to use a 10 or 20 meter tolerance to calculate the instructions. E.g. then the 'slight left turn' will be a 'left turn' [here](https://graphhopper.com/maps/?point=49.237356%2C8.091838&point=49.238273%2C8.092965&vehicle=bike&elevation=true&layer=Lyrk)\n\nA further improvement is to add a name from the relation if no street name exists. E.g. [this route](https://graphhopper.com/maps/?point=51.231451%2C-0.503225&point=51.232419%2C-0.487347&vehicle=foot&locale=en-US&elevation=true&layer=OpenStreetMap.de) should show 'North Downs Way'\n\nAn other simpler idea (instead of junction analysis) would be to use changing OSM way ID to detect when to print instructions\n\nWe should attach names of the main road if there is a parallel cycle or foot path without a name.\n\nQuestion:  I noticed that any time there is a fork in the road, the direction given is simply \"Continue onto [highway name]\". Would it be possible to specify whether to take the right or left side of the fork? (Also this is especially problematic at exits, which have no street name; the direction given is simply \"Continue\" and one must know that that means \"Take the exit\".) \n", "url": "https://github.com/graphhopper/graphhopper/issues/94", "user": "karussell", "labels": ["bug"], "created": "2013-07-25 06:17:33", "closed": "2019-08-24 14:09:58", "commits": {}, "ttf": 2221.0002777777777, "commitsDetails": []}, {"title": "data import fails for .osm.pbf files with replication header fields", "body": "This is a followup from the discussion on https://github.com/graphhopper/graphhopper/pull/64 - I found out why my local europe.osm.pbf couldn't be imported. It contains the new replication header fields introduced to the PBF format in late 2012 and supported in OSM-Binary 1.3 as per https://github.com/scrosby/OSM-binary/commit/9db1087b541a469ef77e90bbdd552dcae88e6571 but for some reason the import code barfs on encountering these fields.\n\nThe PBF files on geofabrik.de do not currently contain these header fields but they will contain them soon so it would be good to at least silently ignore them instead of aborting when they are present.\n\nA test file with the header files present is available here:\nhttp://www.remote.org/frederik/tmp/luxembourg.osm.pbf\n", "url": "https://github.com/graphhopper/graphhopper/issues/91", "user": "woodpeck", "labels": ["bug"], "created": "2013-07-23 14:02:12", "closed": "2013-07-23 15:07:59", "commits": {"c43e06e9007f00172c12435665700648a29549c4": {"commitGHEventType": "closed", "commitUser": "karussell"}, "746b1e754693b7a5e8025f21d6c7e9e9644e780f": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "10117c769b0c329708071a6c440005ee1669d6ad": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "bcbb7d203fbc83f30e17fbf19f35d3a3110e978b": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c43e06e9007f00172c12435665700648a29549c4", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["b9428b4a034376a383e29ca915b27ced0c2d7feb"], "nameRev": "c43e06e9007f00172c12435665700648a29549c4 tags/0.4.1~731", "commitMessage": "fixed #91\n", "commitDateTime": "2013-07-23 17:07:22", "authoredDateTime": "2013-07-23 17:07:22", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/reader/OSMInputFile.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMInputFile.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMInputFile.decode(java.io.File)", "TOT": 11, "UPD": 2, "INS": 3, "MOV": 5, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "746b1e754693b7a5e8025f21d6c7e9e9644e780f", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "10117c769b0c329708071a6c440005ee1669d6ad", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bcbb7d203fbc83f30e17fbf19f35d3a3110e978b", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c43e06e9007f00172c12435665700648a29549c4"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2.0, "deletions": 1.0, "lines": 3.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11.0, "UPD": 2.0, "INS": 3.0, "MOV": 5.0, "DEL": 1.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/reader"], "changesInPackagesSPOON": ["com.graphhopper.reader.OSMInputFile.decode(java.io.File)"]}, {"title": "java.lang.NegativeArraySizeException", "body": "ERROR graphhopper.http.GraphHopperServlet - Error while query:55.875311, 37.617188->35.675147, -0.571289\njava.lang.NegativeArraySizeException\n        at com.graphhopper.search.NameIndex.get(NameIndex.java:142)\n        at com.graphhopper.storage.GraphStorage$EdgeIterable.getName(GraphStorage.java:843) \n        at com.graphhopper.routing.Path$3.next(Path.java:396)\n        at com.graphhopper.routing.Path.forEveryEdge(Path.java:238)\n        at com.graphhopper.routing.Path.calcInstructions(Path.java:316)\n        at com.graphhopper.GraphHopper.route(GraphHopper.java:584)\n        at com.graphhopper.http.GraphHopperServlet.writePath(GraphHopperServlet.java:134)\n        at com.graphhopper.http.GraphHopperServlet.doGet(GraphHopperServlet.java:82)\n\nIt is reproducable! http://graphhopper.com/maps/?point=55.875311%2C37.617188&point=35.675147%2C-0.571289\n", "url": "https://github.com/graphhopper/graphhopper/issues/90", "user": "karussell", "labels": ["bug"], "created": "2013-07-23 13:46:32", "closed": "2013-07-29 07:33:38", "commits": {"555d8f00cefe255b29087eb264b6c6fb00b711e1": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "555d8f00cefe255b29087eb264b6c6fb00b711e1", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["218036b96096ac316e079f84b5176afcfbbfc58b"], "nameRev": "555d8f00cefe255b29087eb264b6c6fb00b711e1 tags/0.4.1~729", "commitMessage": "fixed #90\n", "commitDateTime": "2013-07-29 08:33:59", "authoredDateTime": "2013-07-29 08:33:59", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/search/NameIndex.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/search/NameIndexTest.java", "insertions": 28, "deletions": 9, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "NameIndex.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.search.NameIndex.get(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "NameIndexTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["555d8f00cefe255b29087eb264b6c6fb00b711e1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/search"], "changesInPackagesSPOON": ["com.graphhopper.search.NameIndex.get(int)"]}, {"title": "Route through railway=tram should be possible", "body": "We need to investigate if acceptedRailways is enough for all vehicles. @NopMap would you have a short look into it?\n\nExample from OSM dev: http://graphhopper.com/maps/?point=56.949813%2C24.120387&point=56.951791%2C24.120387&vehicle=CAR\n\nthanks to Viesturs\n", "url": "https://github.com/graphhopper/graphhopper/issues/89", "user": "karussell", "labels": ["bug"], "created": "2013-07-23 13:26:06", "closed": "2013-07-29 07:33:38", "commits": {"380e462177b23fb252ce7a8cffeb33c5b78dbd51": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "380e462177b23fb252ce7a8cffeb33c5b78dbd51", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["555d8f00cefe255b29087eb264b6c6fb00b711e1"], "nameRev": "380e462177b23fb252ce7a8cffeb33c5b78dbd51 tags/0.4.1~728", "commitMessage": "allow tram, remove all node related tags, should fix #89\n", "commitDateTime": "2013-07-29 09:10:45", "authoredDateTime": "2013-07-29 08:59:53", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeFlagEncoder.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 0, "deletions": 6, "lines": 6}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/BikeFlagEncoderTest.java", "insertions": 31, "deletions": 1, "lines": 32}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/FootFlagEncoderTest.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.AbstractFlagEncoder", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "BikeFlagEncoder.java", "spoonMethods": []}, {"spoonFilePath": "CarFlagEncoder.java", "spoonMethods": []}, {"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 6}]}, {"spoonFilePath": "BikeFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CarFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest.testNoRailway()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FootFlagEncoderTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["380e462177b23fb252ce7a8cffeb33c5b78dbd51"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 12, "lines": 18, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 7, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 6, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.FootFlagEncoder", "com.graphhopper.routing.util.AbstractFlagEncoder"]}, {"title": "Demo map website don't work on firefox", "body": "http://graphhopper.com/maps/ does not have a visible sidebar on firefox, while it is there in chromium. I was surprised that it's possible to search to simply typing it instead of inserting in the url manually. :-/\n\nFF nightly 25.0a1 (2013-07-18) but possibly on most versions as well.\n", "url": "https://github.com/graphhopper/graphhopper/issues/87", "user": "grinapo", "labels": ["bug", "web"], "created": "2013-07-23 08:58:37", "closed": "2013-07-23 09:43:23", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Repair MiniUI", "body": "MiniUI is crashing. I had fixed the preparation to use the first encoder by default, but this fix was commented out. Putting it in does not work as the signature has changed and requires and additional parameter.\n\nPlease repair the MiniUI, it is the fastest way to verify that a modified import has generally worked out.\n", "url": "https://github.com/graphhopper/graphhopper/issues/74", "user": "NopMap", "labels": ["bug"], "created": "2013-06-10 11:00:24", "closed": "2013-06-10 14:21:01", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Roundabout issue", "body": "The roundabout has no `oneway=yes` tag but it still should get the proper direction like OSRM.\n\nhttp://graphhopper.com/maps/?point=49.950602,11.576656&point=49.951085,11.576859\n\nvs. OSRM\n\nhttp://osrm.at/3nI\n", "url": "https://github.com/graphhopper/graphhopper/issues/58", "user": "karussell", "labels": ["bug", "osm"], "created": "2013-05-29 11:56:35", "closed": "2013-05-30 13:05:21", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Handling key:access for ways", "body": "I just found out that there is no support of the access-property of ways. At least the CarFlagEncoder should pay attention to ways which have the property `access=no|private|agricultural|forestry` and should restrict/avoid routing over such ways. \nmore details here: http://wiki.openstreetmap.org/wiki/Key:access\n\nExample: Shortest way from (13.481249,52.538691) to (13.471243,52.538893). There are several ways trough \"Sportforum Hohensch\u00f6nhausen\" which are marked as private but which are taken into the shortest path. \nMapQuest and OSRM do not route over those ways, but OpenRouteService also seems not to be able to handle this property.\n", "url": "https://github.com/graphhopper/graphhopper/issues/41", "user": "kschrab", "labels": ["bug"], "created": "2013-05-08 14:00:32", "closed": "2013-05-09 20:57:25", "commits": {"8d876d421bb77de291e4c2b45dcd48e3db32bf4a": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "194b22c137efe3aa23bb3abea61dabaf3b85c306": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "8d876d421bb77de291e4c2b45dcd48e3db32bf4a", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["6b0a09352a1805cd9ebc971467e56eecf3e3dd63"], "nameRev": "8d876d421bb77de291e4c2b45dcd48e3db32bf4a tags/0.4.1~937^2~1", "commitMessage": "added service tag to FOOT. via #41\n", "commitDateTime": "2013-05-09 12:58:07", "authoredDateTime": "2013-05-09 12:58:07", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "194b22c137efe3aa23bb3abea61dabaf3b85c306", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["8d876d421bb77de291e4c2b45dcd48e3db32bf4a"], "nameRev": "194b22c137efe3aa23bb3abea61dabaf3b85c306 tags/0.4.1~937^2", "commitMessage": "introducing car restriction which fixes #41\n", "commitDateTime": "2013-05-09 22:57:02", "authoredDateTime": "2013-05-09 22:57:02", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/AbstractFlagEncoder.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/AcceptWay.java", "insertions": 26, "deletions": 33, "lines": 59}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/BikeFlagEncoder.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/CarFlagEncoder.java", "insertions": 21, "deletions": 1, "lines": 22}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/FootFlagEncoder.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/CarFlagEncoderTest.java", "insertions": 47, "deletions": 0, "lines": 47}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/FootFlagEncoderTest.java", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.AbstractFlagEncoder.isAllowed(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.AbstractFlagEncoder.isAllowed(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.AbstractFlagEncoder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AcceptWay.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.AcceptWay.handleTags(java.util.Map,java.util.Map,gnu.trove.list.array.TLongArrayList)", "TOT": 21, "UPD": 4, "INS": 2, "MOV": 10, "DEL": 5}]}, {"spoonFilePath": "BikeFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.BikeFlagEncoder.isAllowedHighway(java.lang.String)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.BikeFlagEncoder.1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CarFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoder", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoder.isAllowed(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FootFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.isAllowedHighway(java.lang.String)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoder.2", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CarFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.CarFlagEncoderTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FootFlagEncoderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.FootFlagEncoderTest.testAccess()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8d876d421bb77de291e4c2b45dcd48e3db32bf4a", "194b22c137efe3aa23bb3abea61dabaf3b85c306"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 78, "deletions": 39, "lines": 117, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 40, "UPD": 10, "INS": 13, "MOV": 12, "DEL": 5, "spoonFilesChanged": 5, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.FootFlagEncoder.2", "com.graphhopper.routing.util.BikeFlagEncoder.isAllowedHighway(java.lang.String)", "com.graphhopper.routing.util.CarFlagEncoder.isAllowed(java.util.Map)", "com.graphhopper.routing.util.BikeFlagEncoder.1", "com.graphhopper.routing.util.AcceptWay.handleTags(java.util.Map,java.util.Map,gnu.trove.list.array.TLongArrayList)", "com.graphhopper.routing.util.AbstractFlagEncoder.isAllowed(java.lang.String)", "com.graphhopper.routing.util.AbstractFlagEncoder", "com.graphhopper.routing.util.AbstractFlagEncoder.isAllowed(java.util.Map)", "com.graphhopper.routing.util.CarFlagEncoder", "com.graphhopper.routing.util.FootFlagEncoder.isAllowedHighway(java.lang.String)"]}, {"title": "Handling of foot encoder", "body": "Hi,\n\nIt isn't possible to switch to the foot encoder. There are two issues, the first is from the web service, the value passed in the http request doesn't get passed through. I didn't track this one down because I won't be using the web service for my application. \n\nThe next issue is that there are so many places where the vehicle/encoder could be specified. Firstly I specified it on the request: \n\n``` java\nVehicleEncoder algoVehicle = new FootFlagEncoder();\n.\n.\n.\nGHResponse rsp = hopper.route(new GHRequest(start, end).\n                    vehicle(algoVehicle).type(algoType).\n                    algorithm(algoStr).\n                    putHint(\"douglas.minprecision\", minPathPrecision));\n```\n\nand before the load:\n\n``` java\nhopper.forServer();\nhopper.acceptWay().car(false).bike(false).foot(true);\nhopper.load(osmFile);\n```\n\nThis still resulted in car like times being calculated for the route...\n\nI then specified it in the route method:\n\n``` java\nif (chUsage) {\n            prepare.graph(graph);\n            ((PrepareContractionHierarchies) prepare).vehicle(request.vehicle());\n            if (request.algorithm().equals(\"dijkstrabi\"))\n                algo = prepare.createAlgo();\n```\n\nAt this point I can see that the correct encoder arrives in the Path instance (where the time gets calculated), but the distance then evaluates to 0, and therefore so does the time. At which point I decided to discuss this with you.\n\nThere seems to be a few concepts mixed, first there is acceptWay, then there is encoder, then there is vehicle. They seem to be used semi interchangeably. My suggestion is to use one, and then stick with it. \n\nThen it needs to be clear at which point in time such a setting should be supplied by the API user. Is it at load time? In which case I would assume from this that it effect the graph gen/load/contraction in some way (which doesn't seem to be the case from the code). Or is it at request time, in which case the value needs to be taken into account during the route request. \n\nPart of the problem also seems to the preparation abstraction which creates the algorithm instances, because it is also created in different ways, and so the encoder sometimes doesn't get passed along, or does in a way that is hidden by the preparation interface (in the case of the `PrepareContractionHierarchies`) .\n\nSo, like I said, when I got to this many variables I decided to log an issue before I make a mess of your code or having to fork it away completely, either of which is obviously bad. \n", "url": "https://github.com/graphhopper/graphhopper/issues/39", "user": "quintona", "labels": ["bug"], "created": "2013-05-06 12:36:46", "closed": "2013-05-17 14:58:06", "commits": {"1322e3805e919cd72780e2d59e91f746a2d86141": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "8df89c4346c74fe2834ba27e299aa614ed23eefc": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "8ae60feb4ffbf01da97ad7876193efe79b67f833": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "1322e3805e919cd72780e2d59e91f746a2d86141", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["c0f92142a0e4f98c8f491fa36360d10bb24304c4"], "nameRev": "1322e3805e919cd72780e2d59e91f746a2d86141 tags/0.4.1~928^2", "commitMessage": "major refactoring relates to #39; now OSMReader is clean: moved logic to GraphHopper; less code duplication\n", "commitDateTime": "2013-05-16 14:24:13", "authoredDateTime": "2013-05-16 11:49:12", "commitGitStats": [{"filePath": ".gitignore", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/GraphHopper.java", "insertions": 280, "deletions": 91, "lines": 371}, {"filePath": "core/src/main/java/com/graphhopper/GraphHopperAPI.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/reader/OSMReader.java", "insertions": 12, "deletions": 278, "lines": 290}, {"filePath": "core/src/main/java/com/graphhopper/reader/OSMReaderHelper.java", "insertions": 7, "deletions": 8, "lines": 15}, {"filePath": "core/src/main/java/com/graphhopper/reader/OSMReaderHelperDoubleParse.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/ch/PrepareContractionHierarchies.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/RoutingAlgorithmSpecialAreaTests.java", "insertions": 4, "deletions": 7, "lines": 11}, {"filePath": "core/src/main/java/com/graphhopper/storage/index/Location2NodesNtree.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/util/CmdArgs.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperAPITest.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/GraphHopperTest.java", "insertions": 69, "deletions": 0, "lines": 69}, {"filePath": "core/src/test/java/com/graphhopper/reader/OSMReaderTest.java", "insertions": 65, "deletions": 51, "lines": 116}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIntegrationTest.java", "insertions": 13, "deletions": 9, "lines": 22}, {"filePath": "graphhopper.sh", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "tools/src/main/java/com/graphhopper/ui/MiniGraphUI.java", "insertions": 10, "deletions": 8, "lines": 18}, {"filePath": "web/src/main/java/com/graphhopper/http/DefaultModule.java", "insertions": 8, "deletions": 24, "lines": 32}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperServlet.java", "insertions": 0, "deletions": 3, "lines": 3}, {"filePath": "web/src/main/java/com/graphhopper/http/GraphHopperWeb.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "8df89c4346c74fe2834ba27e299aa614ed23eefc", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "8ae60feb4ffbf01da97ad7876193efe79b67f833", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1322e3805e919cd72780e2d59e91f746a2d86141"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 333.0, "deletions": 423.0, "lines": 756.0, "gitFilesChange": 14}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["graphhopper.sh", "core/src/main/java/com/graphhopper/storage/index", "core/src/main/java/com/graphhopper/routing/ch", "core/src/main/java/com/graphhopper/reader", "core/src/main/java/com/graphhopper/util", "core/src/main/java/com/graphhopper", "web/src/main/java/com/graphhopper/http", "tools/src/main/java/com/graphhopper/ui", ".gitignore"]}, {"title": "Problems importing OSM data", "body": "I'm having trouble digesting a cloudmade OSM download of Berlin.\n\nhttp://downloads.cloudmade.com/europe/western_europe/germany/berlin#downloads_breadcrumbs\n\nException in thread \"main\" java.lang.AssertionError: Conversation pillarNode to towerNode already happended!? osmId:99128942 pillarIndex:13589\n", "url": "https://github.com/graphhopper/graphhopper/issues/19", "user": "sweco-semtne", "labels": ["bug"], "created": "2013-03-04 15:18:43", "closed": "2013-04-03 11:32:45", "commits": {"24188ea8bbd6a60ab79a56a4fd73691a752ded35": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "61837bf661a2c76d30081976b3bff9bb3b68ebdf": {"commitGHEventType": "closed", "commitUser": "karussell"}, "ef13b9ab0397b4e6d557e1ccd1b8be1667a80cdb": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "24188ea8bbd6a60ab79a56a4fd73691a752ded35", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "61837bf661a2c76d30081976b3bff9bb3b68ebdf", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["d87a6e1101439dea8f5033342132fdef8c847f04"], "nameRev": "61837bf661a2c76d30081976b3bff9bb3b68ebdf tags/0.4.1~1023", "commitMessage": "fixed #19\n", "commitDateTime": "2013-03-28 23:38:14", "authoredDateTime": "2013-03-28 17:28:51", "commitGitStats": [{"filePath": "src/main/java/com/graphhopper/reader/OSMReaderHelperDoubleParse.java", "insertions": 17, "deletions": 11, "lines": 28}, {"filePath": "src/test/java/com/graphhopper/reader/OSMReaderTest.java", "insertions": 71, "deletions": 57, "lines": 128}, {"filePath": "src/test/resources/com/graphhopper/reader/test-osm4.xml", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OSMReaderHelperDoubleParse.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReaderHelperDoubleParse.addEdge(gnu.trove.list.TLongList,int)", "TOT": 13, "UPD": 6, "INS": 4, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "OSMReaderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.OSMReaderTest", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testMain()", "TOT": 17, "UPD": 15, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testWithBounds()", "TOT": 17, "UPD": 15, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testOneWay()", "TOT": 12, "UPD": 10, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testFerry()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testMaxspeed()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testFoot()", "TOT": 35, "UPD": 27, "INS": 2, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingadjNode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ef13b9ab0397b4e6d557e1ccd1b8be1667a80cdb", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["b094c2cb2290cb0a02e247d0d2c21e42c25f5892"], "nameRev": "ef13b9ab0397b4e6d557e1ccd1b8be1667a80cdb remotes/origin/gh_navigation_merge~5^2~100", "commitMessage": "Add then voice and banner instruction (#19)\n\nAdd comment and minor rename", "commitDateTime": "2018-10-31 15:19:59", "authoredDateTime": "2018-10-31 15:19:59", "commitGitStats": [{"filePath": "mapbox/src/main/java/com/graphhopper/navigation/mapbox/MapboxResponseConverter.java", "insertions": 58, "deletions": 20, "lines": 78}, {"filePath": "mapbox/src/main/resources/com/graphhopper/navigation/mapbox/de_DE.txt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "mapbox/src/main/resources/com/graphhopper/navigation/mapbox/en_US.txt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "mapbox/src/test/java/com/graphhopper/navigation/mapbox/MapboxResponseConverterTest.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MapboxResponseConverter.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResponseConverter.putBannerInstruction(com.graphhopper.navigation.mapbox.InstructionList,double,int,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.fasterxml.jackson.databind.node.ArrayNode)", "TOT": 41, "UPD": 14, "INS": 0, "MOV": 26, "DEL": 1}, {"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResponseConverter.putInstruction(com.graphhopper.navigation.mapbox.InstructionList,int,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.graphhopper.navigation.mapbox.TranslationMap,com.fasterxml.jackson.databind.node.ObjectNode,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResponseConverter.putVoiceInstructions(com.graphhopper.navigation.mapbox.InstructionList,double,int,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.graphhopper.navigation.mapbox.TranslationMap,com.fasterxml.jackson.databind.node.ArrayNode)", "TOT": 7, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResponseConverter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResponseConverter.getThenVoiceInstructionpart(com.graphhopper.navigation.mapbox.InstructionList,int,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.graphhopper.navigation.mapbox.TranslationMap)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResponseConverter.putBannerInstructions(com.graphhopper.navigation.mapbox.InstructionList,double,int,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.fasterxml.jackson.databind.node.ArrayNode)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResponseConverter.putSingleBannerInstruction(com.graphhopper.navigation.mapbox.Instruction,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.fasterxml.jackson.databind.node.ObjectNode)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapboxResponseConverterTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResponseConverterTest.basicTest()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResponseConverterTest.voiceInstructionsTest()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["61837bf661a2c76d30081976b3bff9bb3b68ebdf", "ef13b9ab0397b4e6d557e1ccd1b8be1667a80cdb"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 75.0, "deletions": 31.0, "lines": 106.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 67.0, "UPD": 21.0, "INS": 13.0, "MOV": 31.0, "DEL": 2.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["src/main/java/com/graphhopper/reader", "mapbox/src/main/java/com/graphhopper/navigation/mapbox"], "changesInPackagesSPOON": ["com.graphhopper.navigation.mapbox.MapboxResponseConverter.putBannerInstructions(com.graphhopper.navigation.mapbox.InstructionList,double,int,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.fasterxml.jackson.databind.node.ArrayNode)", "com.graphhopper.navigation.mapbox.MapboxResponseConverter.putInstruction(com.graphhopper.navigation.mapbox.InstructionList,int,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.graphhopper.navigation.mapbox.TranslationMap,com.fasterxml.jackson.databind.node.ObjectNode,boolean)", "com.graphhopper.reader.OSMReaderHelperDoubleParse.addEdge(gnu.trove.list.TLongList,int)", "com.graphhopper.navigation.mapbox.MapboxResponseConverter.putBannerInstruction(com.graphhopper.navigation.mapbox.InstructionList,double,int,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.fasterxml.jackson.databind.node.ArrayNode)", "com.graphhopper.navigation.mapbox.MapboxResponseConverter.putSingleBannerInstruction(com.graphhopper.navigation.mapbox.Instruction,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.fasterxml.jackson.databind.node.ObjectNode)", "com.graphhopper.navigation.mapbox.MapboxResponseConverter.getThenVoiceInstructionpart(com.graphhopper.navigation.mapbox.InstructionList,int,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.graphhopper.navigation.mapbox.TranslationMap)", "com.graphhopper.navigation.mapbox.MapboxResponseConverter.putVoiceInstructions(com.graphhopper.navigation.mapbox.InstructionList,double,int,java.util.Locale,com.graphhopper.navigation.mapbox.TranslationMap,com.graphhopper.navigation.mapbox.TranslationMap,com.fasterxml.jackson.databind.node.ArrayNode)", "com.graphhopper.navigation.mapbox.MapboxResponseConverter"]}, {"title": "RuntimeException: Time was negative", "body": "Error:\r\n```\r\n2020-02-28 15:25:52.374 [dw-4182 - GET /route?turn_costs=true&type=json&locale=en_US&weighting=fastest&<redacted>&vehicle=car] ERROR i.d.j.errors.LoggingExceptionMapper - Error handling a request: fec09cafb194a822\r\njava.lang.RuntimeException: Time was negative -9223372036852055154 for index 0. Please report as bug and include:<redacted> (Hints:{turn_costs=true, instructions=true, edge_based=true, way_point_max_distance=1.0, calc_points=true, type=json, locale=en_US, weighting=fastest, vehicle=car})\r\n        at com.graphhopper.routing.template.ViaRoutingTemplate.calcPaths(ViaRoutingTemplate.java:182)\r\n        at com.graphhopper.GraphHopper.calcPaths(GraphHopper.java:1087)\r\n        at com.graphhopper.GraphHopper.route(GraphHopper.java:962)\r\n        at com.graphhopper.resources.RouteResource.doGet(RouteResource.java:143)\r\n```\r\n\r\nUnfortunately I cannot reproduce this problem on the server using the still running same version and the exact same request parameters (14 via points in the Netherlands, point 3 == point 4)\r\n\r\nThere are more of these bugs in the last days but none of them is reproducible. The smallest one still had 2 via points. But it only occurred for the edged based CH it seems.", "url": "https://github.com/graphhopper/graphhopper/issues/1938", "user": "karussell", "labels": ["critical bug"], "created": "2020-02-28 15:16:22", "closed": "2020-02-29 20:07:54", "commits": {"8d1570839c9547ab11f2e4c5fd068f29473a3631": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "a14e7a96c7117b2b9397500168c4552ae04bb3cb": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "8d1570839c9547ab11f2e4c5fd068f29473a3631", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["7d1f8c855945f93a38f587a1bdbb4b1982e138f7"], "nameRev": "8d1570839c9547ab11f2e4c5fd068f29473a3631 tags/1.0-pre26~4", "commitMessage": "make readFlags private, remove unnecessary int set and remove QueryGraph.getOriginalEdgeFromVirtNode, #1938\n", "commitDateTime": "2020-02-29 15:23:08", "authoredDateTime": "2020-02-29 15:22:57", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/querygraph/QueryGraph.java", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/storage/TurnCostStorage.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "reader-osm/src/test/java/com/graphhopper/reader/osm/OSMReaderTest.java", "insertions": 61, "deletions": 57, "lines": 118}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.querygraph.QueryGraph.getOriginalEdgeFromVirtNode(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "TurnCostStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.readFlags(com.graphhopper.storage.IntsRef,int,int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.TurnCostStorage.get(com.graphhopper.routing.profiles.DecimalEncodedValue,com.graphhopper.storage.IntsRef,int,int,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "OSMReaderTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.reader.osm.OSMReaderTest.testTurnFlagCombination()", "TOT": 24, "UPD": 9, "INS": 6, "MOV": 6, "DEL": 3}, {"spoonMethodName": "com.graphhopper.reader.osm.OSMReaderTest.testConditionalTurnRestriction()", "TOT": 110, "UPD": 22, "INS": 0, "MOV": 88, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.OSMReaderTest.testMultipleTurnRestrictions()", "TOT": 40, "UPD": 8, "INS": 0, "MOV": 32, "DEL": 0}, {"spoonMethodName": "com.graphhopper.reader.osm.OSMReaderTest.testTurnRestrictions()", "TOT": 78, "UPD": 14, "INS": 2, "MOV": 61, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a14e7a96c7117b2b9397500168c4552ae04bb3cb", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["9129481617879637aac338b6f530f9ac2268ec6f"], "nameRev": "a14e7a96c7117b2b9397500168c4552ae04bb3cb tags/1.0-pre26~2", "commitMessage": "make DefaultTurnCostProvider thread-safe, fixes #1938\n", "commitDateTime": "2020-02-29 20:53:50", "authoredDateTime": "2020-02-29 20:53:12", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/weighting/DefaultTurnCostProvider.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultTurnCostProvider.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.DefaultTurnCostProvider", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.routing.weighting.DefaultTurnCostProvider.calcTurnWeight(int,int,int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8d1570839c9547ab11f2e4c5fd068f29473a3631", "a14e7a96c7117b2b9397500168c4552ae04bb3cb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 2, "deletions": 9, "lines": 11, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 4, "spoonFilesChanged": 3, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/storage", "core/src/main/java/com/graphhopper/routing/weighting", "core/src/main/java/com/graphhopper/routing/querygraph"], "changesInPackagesSPOON": ["com.graphhopper.routing.querygraph.QueryGraph.getOriginalEdgeFromVirtNode(int)", "com.graphhopper.routing.weighting.DefaultTurnCostProvider", "com.graphhopper.routing.weighting.DefaultTurnCostProvider.calcTurnWeight(int,int,int)", "com.graphhopper.storage.TurnCostStorage.readFlags(com.graphhopper.storage.IntsRef,int,int,int)", "com.graphhopper.storage.TurnCostStorage.get(com.graphhopper.routing.profiles.DecimalEncodedValue,com.graphhopper.storage.IntsRef,int,int,int)"]}, {"title": "Issue RoadClassEncoder via EncodedValueLookup when using mtb and motorway", "body": "When I set multiple vehicles in the config, including mtb, for example: \r\n```\r\ngraph.flag_encoders: car, mtb\r\n```\r\n\r\nMy config looks like this:\r\n```\r\ngraph.encoded_values: road_class,road_class_link,road_environment,max_speed,road_access\r\ngraph.bytes_for_flags: 8\r\n```\r\n\r\nIf I lookup an encoded value in `InstructionsFromEdges` via `evLookup.getEnumEncodedValue(RoadClass.KEY, RoadClass.class);` I get an EncodedValue as expected.\r\n\r\nFor motorways this seems returns \"other\" instead of \"motorway\". Other road classes seem to be fine. If I only use car it works fine. \r\n\r\nI cross tested with `graph.flag_encoders: car, bike` and this particular issue did not exist. I don't think it's necessarily related to the EncodedValueLookup, but that's how I discovered this.\r\n\r\nAn example route where this happens is this (I think it happens for all motorways): http://localhost:8989/maps/?point=49.303926%2C8.627148&point=49.302688%2C8.626859\r\n\r\nMaybe something is wrong with the number of bits reserved by the mtb encoder?", "url": "https://github.com/graphhopper/graphhopper/issues/1843", "user": "boldtrn", "labels": ["critical bug"], "created": "2019-12-31 15:07:22", "closed": "2020-01-02 15:40:08", "commits": {"b58cbc4f6254f2dc1582e109ebbfa9399b9a050c": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "9e05cf36d2fa75ec9a5bbac5cedd57d033f1d53e": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "b58cbc4f6254f2dc1582e109ebbfa9399b9a050c", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["dcf43891f6f2c8a3938865d87318025420d420fa"], "nameRev": "b58cbc4f6254f2dc1582e109ebbfa9399b9a050c remotes/origin/issue_1843~2", "commitMessage": "fixes #1843\n", "commitDateTime": "2019-12-31 17:19:49", "authoredDateTime": "2019-12-31 17:19:49", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/EncodingManager.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMBikeNetworkTagParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMFootNetworkTagParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMGetOffBikeParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMHazmatParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMHazmatTunnelParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMHazmatWaterParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxAxleLoadParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxHeightParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxLengthParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxSpeedParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxWeightParser.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxWidthParser.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoadAccessParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoadClassLinkParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoadClassParser.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoadEnvironmentParser.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoundaboutParser.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMSurfaceParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMTollParser.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMTrackTypeParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/SpatialRuleParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/TagParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMHazmatParserTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMHazmatTunnelParserTest.java", "insertions": 20, "deletions": 20, "lines": 40}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMHazmatWaterParserTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMMaxAxleLoadParserTest.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMMaxWeightParserTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMRoadClassParserTest.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMSurfaceParserTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMTollParserTest.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMTrackTypeParserTest.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "reader-osm/src/test/java/com/graphhopper/reader/osm/OSMReaderTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}, {"commitHash": "9e05cf36d2fa75ec9a5bbac5cedd57d033f1d53e", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["f815c6c6b69111197b753a959fd9b8c9c4f83277"], "nameRev": "9e05cf36d2fa75ec9a5bbac5cedd57d033f1d53e tags/1.0-pre15~4", "commitMessage": "avoid skipping ways if mixing encoders in OSMRoadClassParser (#1845)\n\n* fixes #1843\r\n\r\n* remove ugly method AcceptWay.getAccess\r\n", "commitDateTime": "2020-01-02 16:40:07", "authoredDateTime": "2020-01-02 16:40:07", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/EncodingManager.java", "insertions": 12, "deletions": 7, "lines": 19}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMBikeNetworkTagParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMFootNetworkTagParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMGetOffBikeParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMHazmatParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMHazmatTunnelParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMHazmatWaterParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxAxleLoadParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxHeightParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxLengthParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxSpeedParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxWeightParser.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMMaxWidthParser.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoadAccessParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoadClassLinkParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoadClassParser.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoadEnvironmentParser.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMRoundaboutParser.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMSurfaceParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMTollParser.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/OSMTrackTypeParser.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/SpatialRuleParser.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/parsers/TagParser.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMHazmatParserTest.java", "insertions": 5, "deletions": 6, "lines": 11}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMHazmatTunnelParserTest.java", "insertions": 20, "deletions": 20, "lines": 40}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMHazmatWaterParserTest.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMMaxAxleLoadParserTest.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMMaxWeightParserTest.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMRoadClassParserTest.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMSurfaceParserTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMTollParserTest.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "core/src/test/java/com/graphhopper/routing/util/parsers/OSMTrackTypeParserTest.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "reader-osm/src/test/java/com/graphhopper/GraphHopperIT.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "reader-osm/src/test/java/com/graphhopper/reader/osm/OSMReaderTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["b58cbc4f6254f2dc1582e109ebbfa9399b9a050c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 29, "deletions": 46, "lines": 75, "gitFilesChange": 23}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util/parsers", "core/src/main/java/com/graphhopper/routing/util"]}, {"title": " Completely wrong route for car", "body": "https://graphhopper.com/maps/?point=48.643033%2C8.901672&point=48.640204%2C8.893186&\r\n\r\n * living_street speed not considered\r\n * routing through parking!\r\n\r\nDoes appear with car & foot. Disappears for only car.", "url": "https://github.com/graphhopper/graphhopper/issues/1323", "user": "karussell", "labels": ["critical bug"], "created": "2018-03-30 21:19:40", "closed": "2018-03-30 22:28:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "High memory usage in latest master due to new instruction creation (PointList.copy)", "body": "There is something wrong with the new instruction creation - probably the reduceLength method. We saw for a normal CH request the following OOM, and this was after a 10GB memory increase.\r\n\r\n```\r\njava.lang.OutOfMemoryError: Java heap space\r\n        at com.graphhopper.util.PointList.<init>(PointList.java:154)\r\n        at com.graphhopper.util.PointList.copy(PointList.java:433)\r\n        at com.graphhopper.util.PathSimplification.reduceLength(PathSimplification.java:158)\r\n        at com.graphhopper.util.PathSimplification.simplify(PathSimplification.java:102)\r\n        at com.graphhopper.util.PathMerger.doWork(PathMerger.java:142)\r\n```", "url": "https://github.com/graphhopper/graphhopper/issues/1166", "user": "karussell", "labels": ["critical bug"], "created": "2017-09-27 12:45:46", "closed": "2017-09-30 08:42:44", "commits": {"3051eca5683ed9bf1446419fd9e0c4052c33a5a5": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "bbfe3df90abbe6b937cc2ee59fb3f26a34d8613b": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "f9adaac66766e903064ea5fe754576cc5401b8e5": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "3051eca5683ed9bf1446419fd9e0c4052c33a5a5", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["77c483f6c81114a8ae63f3d919823aa05a6c7f64"], "nameRev": "3051eca5683ed9bf1446419fd9e0c4052c33a5a5 tags/0.10.alpha1~20", "commitMessage": "reduce memory usage for PointList.copy, #1166\n", "commitDateTime": "2017-09-27 15:05:47", "authoredDateTime": "2017-09-27 15:03:02", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/PointList.java", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PointList.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PointList.copy(int,int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "bbfe3df90abbe6b937cc2ee59fb3f26a34d8613b", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["3051eca5683ed9bf1446419fd9e0c4052c33a5a5"], "nameRev": "bbfe3df90abbe6b937cc2ee59fb3f26a34d8613b tags/0.10.alpha1~19", "commitMessage": "write test for PointList bug #1166\n", "commitDateTime": "2017-09-27 17:20:09", "authoredDateTime": "2017-09-27 17:20:09", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/PointList.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "core/src/test/java/com/graphhopper/util/PointListTest.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PointList.java", "spoonMethods": []}, {"spoonFilePath": "PointListTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PointListTest.testCopy_issue1166()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f9adaac66766e903064ea5fe754576cc5401b8e5", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["6110ce9eb0064533e9bbe5749200974a1a4c55c7"], "nameRev": "f9adaac66766e903064ea5fe754576cc5401b8e5 tags/0.10.alpha1~8", "commitMessage": "Improve PathSimplification Performance and Memory Overhead (#1171)\n\n* Improved PointList#copy performance\r\n* Tmp as described int #1166\r\n* Removed unused constructor\r\n\r\n* Reverted Measurement changes\r\n\r\n* Reverted Measurement\r\n\r\n* Minor cleanup\r\n\r\n* Make PointList immutable after the simplification\r\n\r\n* Use size() instead\r\n\r\n* Updated Shallow Equals\r\n\r\n* Updated hashcode method\r\n\r\n* Removed immutable from equals and hashCode\r\n\r\n* Updated to review comments\r\n\r\n* Updated simplification test\r\n\r\n* Implemented missing methods in ShallowImmutablePointList\r\n\r\n* Updated class comment of the PointList\r\n\r\n* Updated class comment of the PointList\r\n", "commitDateTime": "2017-10-09 14:42:44", "authoredDateTime": "2017-10-09 23:42:44", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/PathSimplification.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/util/PointList.java", "insertions": 85, "deletions": 41, "lines": 126}, {"filePath": "core/src/main/java/com/graphhopper/util/ShallowImmutablePointList.java", "insertions": 161, "deletions": 0, "lines": 161}, {"filePath": "core/src/test/java/com/graphhopper/util/PathSimplificationTest.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "core/src/test/java/com/graphhopper/util/PointListTest.java", "insertions": 111, "deletions": 0, "lines": 111}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PathSimplification.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PathSimplification.reduceLength(java.lang.Object,int,int,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PathSimplification.simplify()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PointList.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PointList", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointList.copy(int,int)", "TOT": 19, "UPD": 1, "INS": 9, "MOV": 0, "DEL": 9}, {"spoonMethodName": "com.graphhopper.util.PointList.getSize()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.PointList.isEmpty()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.util.PointList.toString()", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 5}, {"spoonMethodName": "com.graphhopper.util.PointList.toGeoJson(boolean)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.graphhopper.util.PointList.equals(java.lang.Object)", "TOT": 19, "UPD": 0, "INS": 8, "MOV": 3, "DEL": 8}, {"spoonMethodName": "com.graphhopper.util.PointList.clone(boolean)", "TOT": 20, "UPD": 0, "INS": 10, "MOV": 0, "DEL": 10}, {"spoonMethodName": "com.graphhopper.util.PointList.hashCode()", "TOT": 11, "UPD": 0, "INS": 4, "MOV": 3, "DEL": 4}, {"spoonMethodName": "com.graphhopper.util.PointList.calcDistance(com.graphhopper.util.DistanceCalc)", "TOT": 22, "UPD": 0, "INS": 11, "MOV": 0, "DEL": 11}, {"spoonMethodName": "com.graphhopper.util.PointList.shallowCopy(int,int,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointList.isImmutable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointList.makeImmutable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointList.ensureMutability()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointList.set(int,double,double,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointList.add(double,double,double)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointList.add(com.graphhopper.util.PointList)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointList.reverse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointList.clear()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointList.trimToSize(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ShallowImmutablePointList.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.ShallowImmutablePointList", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PathSimplificationTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PathSimplificationTest.testScenario()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PointListTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.util.PointListTest.testShallowCopy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointListTest.testImmutable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointListTest.testToString()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointListTest.testClone()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointListTest.testCopyOfShallowCopy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointListTest.testCalcDistanceOfShallowCopy()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.util.PointListTest.testToGeoJson()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3051eca5683ed9bf1446419fd9e0c4052c33a5a5", "bbfe3df90abbe6b937cc2ee59fb3f26a34d8613b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 7, "deletions": 1, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": ["com.graphhopper.util.PointList.copy(int,int)"]}, {"title": "RuntimeException: Time was negative, only if turn costs enabled", "body": "There is a bug that includes the turn time of 'infinity' (gets converted into negative when adding a bit), and it happens even if we consider turn restrictions in the routing: point=49.034281%2C1.549737&point=49.032909%2C1.560327&point=49.033029%2C1.563374&ch.disable=true&edge_based=true\r\n\r\nbut not if we import without turn restrictions.\r\n\r\n```txt\r\njava.lang.RuntimeException: Time was negative -9223372036854376553 for index 0. Please report as bug and include:49.034281,1.549737; 49.032909,1.560327; 49.033029,1.563374()\r\n\tat com.graphhopper.routing.template.ViaRoutingTemplate.calcPaths(ViaRoutingTemplate.java:123)\r\n\tat com.graphhopper.GraphHopper.calcPaths(GraphHopper.java:1044)\r\n\tat com.graphhopper.GraphHopper.route(GraphHopper.java:934)\r\n```\r\n\r\nIn TurnWeighting instead of returning the sum, we should check and return infinity like we do in FastestWeighting:\r\n```java\r\nif (turnCosts \"too high\") return Double.POSITIVE_INFINITY;\r\n```\r\n\r\nBut as we do this in calcTurnWeight this shouldn't be necessary in calcMillis. \r\n\r\nThe real reason seems to be that we wongly handle u-turns in the QueryGraph. Here the start location A is at [a way X-Y](http://www.openstreetmap.org/way/404051287) where u-turns are forbidden:\r\n```\r\nX----Y => with query at A => X--A--Y\r\n```\r\n\r\nSomehow the 'turn' `Y->A` to `A->X` returns `restriction==false` but \"turn time\"==infinity", "url": "https://github.com/graphhopper/graphhopper/issues/991", "user": "karussell", "labels": ["critical bug"], "created": "2017-03-19 23:21:42", "closed": "2017-03-21 13:46:02", "commits": {"951b4435b74c3e5b35a6f9bf55695a44f07a41a5": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "951b4435b74c3e5b35a6f9bf55695a44f07a41a5", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["1152934958bf8ad6284c6279c597d14aa910e6db"], "nameRev": "951b4435b74c3e5b35a6f9bf55695a44f07a41a5 tags/0.9.0~78", "commitMessage": "important bug fixes to correctly calculate turn costs for final path, #991\n", "commitDateTime": "2017-03-20 22:23:06", "authoredDateTime": "2017-03-20 22:23:06", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/Path.java", "insertions": 15, "deletions": 9, "lines": 24}, {"filePath": "core/src/main/java/com/graphhopper/routing/PathBidirRef.java", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "core/src/main/java/com/graphhopper/routing/template/ViaRoutingTemplate.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/storage/Graph.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "core/src/test/java/com/graphhopper/routing/EdgeBasedRoutingAlgorithmTest.java", "insertions": 34, "deletions": 2, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Path.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.Path.extract()", "TOT": 22, "UPD": 9, "INS": 6, "MOV": 4, "DEL": 3}]}, {"spoonFilePath": "PathBidirRef.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.PathBidirRef.extract()", "TOT": 22, "UPD": 3, "INS": 9, "MOV": 8, "DEL": 2}]}, {"spoonFilePath": "ViaRoutingTemplate.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.template.ViaRoutingTemplate.calcPaths(com.graphhopper.routing.template.QueryGraph,com.graphhopper.routing.template.RoutingAlgorithmFactory,com.graphhopper.routing.template.AlgorithmOptions)", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "Graph.java", "spoonMethods": []}, {"spoonFilePath": "EdgeBasedRoutingAlgorithmTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.createWeighting(com.graphhopper.routing.FlagEncoder,com.graphhopper.storage.TurnCostExtension,double)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest.testTurnCostsBug_991()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["951b4435b74c3e5b35a6f9bf55695a44f07a41a5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 29, "deletions": 17, "lines": 46, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 51, "UPD": 13, "INS": 18, "MOV": 14, "DEL": 6, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing", "core/src/main/java/com/graphhopper/routing/template", "core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.routing.Path.extract()", "com.graphhopper.routing.PathBidirRef.extract()", "com.graphhopper.routing.template.ViaRoutingTemplate.calcPaths(com.graphhopper.routing.template.QueryGraph,com.graphhopper.routing.template.RoutingAlgorithmFactory,com.graphhopper.routing.template.AlgorithmOptions)"]}, {"title": "When using vehicle=generic the displayed time is wrong", "body": "When using vehicle=generic the displayed time is wrong (i.e. 0): (many)km will take 0min", "url": "https://github.com/graphhopper/graphhopper/issues/898", "user": "karussell", "labels": ["critical bug"], "created": "2016-12-06 07:49:31", "closed": "2016-12-06 10:32:44", "commits": {"e3e027ee88295b2da9b9484349b8a20f854312f8": {"commitGHEventType": "closed", "commitUser": "karussell"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e3e027ee88295b2da9b9484349b8a20f854312f8", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["78d19a80327b35f2f3fe419b4e4d0f4d2d94b9b6"], "nameRev": "e3e027ee88295b2da9b9484349b8a20f854312f8 tags/0.9.0~163", "commitMessage": "fix incorrect time unit for GenericWeighting.calcMillis, fixes #898\n", "commitDateTime": "2016-12-06 11:32:31", "authoredDateTime": "2016-12-06 11:32:31", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/util/DataFlagEncoder.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "core/src/main/java/com/graphhopper/routing/weighting/GenericWeighting.java", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "core/src/test/java/com/graphhopper/routing/weighting/GenericWeightingTest.java", "insertions": 12, "deletions": 4, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DataFlagEncoder.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.DataFlagEncoder.getHighwaySpeedMap(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GenericWeighting.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.GenericWeighting", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GenericWeightingTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.weighting.GenericWeightingTest", "TOT": 7, "UPD": 6, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.weighting.GenericWeightingTest.setup()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.weighting.GenericWeightingTest.testCalcTime()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e3e027ee88295b2da9b9484349b8a20f854312f8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 9, "lines": 20, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing/util", "core/src/main/java/com/graphhopper/routing/weighting"], "changesInPackagesSPOON": ["com.graphhopper.routing.util.DataFlagEncoder.getHighwaySpeedMap(java.util.Map)", "com.graphhopper.routing.weighting.GenericWeighting"]}, {"title": "XSS issue for demo UI", "body": "After fixing #572 I thought what happens with our demo if a user sets `<script>alert('pawned')</script>` as street name ... and yes, this worked for \n- [x] the turn instructions and\n- [x] autocompletion which is really bad. \n\nBut this didn't work for the the popup as the setContent method seems to escape this.\n", "url": "https://github.com/graphhopper/graphhopper/issues/578", "user": "karussell", "labels": ["critical bug", "web"], "created": "2015-11-25 23:21:54", "closed": "2016-01-19 17:09:51", "commits": {"95ea40e586755dbfd247879028628959f8bbf242": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "3db56d69a40354fc40fd7755ea9fb687835393db": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "e81fce3f62dcf744fcb2b58a1c693497c3342b3a": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 54.000277777777775, "commitsDetails": [{"commitHash": "95ea40e586755dbfd247879028628959f8bbf242", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["d8cd438d612bd8ab3a8d1257d7078fbfc76751fc"], "nameRev": "95ea40e586755dbfd247879028628959f8bbf242 tags/0.6.0-RC1~61", "commitMessage": "fixing issue for demo, #578\n", "commitDateTime": "2015-11-26 00:22:42", "authoredDateTime": "2015-11-26 00:22:42", "commitGitStats": [{"filePath": "web/src/main/webapp/js/main.js", "insertions": 17, "deletions": 14, "lines": 31}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3db56d69a40354fc40fd7755ea9fb687835393db", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["95ea40e586755dbfd247879028628959f8bbf242"], "nameRev": "3db56d69a40354fc40fd7755ea9fb687835393db tags/0.6.0-RC1~60", "commitMessage": "revert showing bug, #578\n", "commitDateTime": "2015-11-26 00:24:39", "authoredDateTime": "2015-11-26 00:24:39", "commitGitStats": [{"filePath": "web/src/main/webapp/js/main.js", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e81fce3f62dcf744fcb2b58a1c693497c3342b3a", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["3db56d69a40354fc40fd7755ea9fb687835393db"], "nameRev": "e81fce3f62dcf744fcb2b58a1c693497c3342b3a tags/0.6.0-RC1~59", "commitMessage": "prevent raw html data in autocompletion if injection via OSM, #578\n", "commitDateTime": "2015-11-26 08:07:53", "authoredDateTime": "2015-11-26 08:07:53", "commitGitStats": [{"filePath": "web/src/main/webapp/js/main.js", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["95ea40e586755dbfd247879028628959f8bbf242", "3db56d69a40354fc40fd7755ea9fb687835393db", "e81fce3f62dcf744fcb2b58a1c693497c3342b3a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 3, "gitStatsSummary": {"insertions": 23, "deletions": 20, "lines": 43, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["web/src/main/webapp/js/main.js"]}, {"title": "Bugs using bidirectional algorithms", "body": "for some routes there are suboptimal results for all bidirectional algorithms:\n![1](https://f.cloud.github.com/assets/5525659/2171288/88a0865a-9580-11e3-963a-255c278bad62.PNG)\n![2](https://f.cloud.github.com/assets/5525659/2171290/8fb1ecea-9580-11e3-801e-3284aa6a8b79.PNG)\n\nNote: to replicate this use these URLs and disabled contraction hierarchies:\nhttp://localhost:8989/?point=48.983206%2C12.140568&point=48.983438%2C12.136411&weighting=shortest&algorithm=dijkstra\nhttp://localhost:8989/?point=48.983206%2C12.140568&point=48.983438%2C12.136411&weighting=shortest&algorithm=dijkstraNative\nhttp://localhost:8989/?point=48.984428%2C12.144517&point=48.983146%2C12.136631&algorithm=dijkstra\nhttp://localhost:8989/?point=48.984428%2C12.144517&point=48.983146%2C12.136631&algorithm=dijkstrabi\n\nBut with contraction hierarchies there's something wrong too:\nhttp://graphhopper.com/maps/?point=48.983206%2C12.140568&point=48.983213%2C12.136266&locale=de\n\nI've checked that it's probably not the algorithms fault, as the inEdgeExplorer does not even get the edge next to the destination point (the edge which is obviously the right one for best path)\nBut the outEdgeExplorer is able to get this edge if moving the start point in a westward direction.\nSo the bug may be caused by a wrong (directed) connection of destination querypoint with the neighbor nodes somewhere in QueryGraph.java\n", "url": "https://github.com/graphhopper/graphhopper/issues/151", "user": "PhilHa", "labels": ["bug", "critical bug"], "created": "2014-02-14 14:34:50", "closed": "2014-02-17 22:13:42", "commits": {"198c0aa411ba5dfbc5c40096f7eff58bde20715d": {"commitGHEventType": "referenced", "commitUser": "karussell"}, "02d32a0d67f7c1c1712ddfe8e42ad7605b37ea2f": {"commitGHEventType": "closed", "commitUser": "karussell"}, "025812615e812123183f4e9de3c15594c8be0200": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "198c0aa411ba5dfbc5c40096f7eff58bde20715d", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["623f86cf36efbeaf1b2ba7eb720498aa07ff079f"], "nameRev": "198c0aa411ba5dfbc5c40096f7eff58bde20715d tags/0.4.1~484^2~9", "commitMessage": "bug fix towards #151\n", "commitDateTime": "2014-02-17 22:21:02", "authoredDateTime": "2014-02-17 22:21:02", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/GHRequest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 14, "deletions": 10, "lines": 24}, {"filePath": "core/src/main/java/com/graphhopper/routing/RoutingAlgorithmFactory.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/NoOpAlgorithmPreparation.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/main/java/com/graphhopper/routing/util/RoutingAlgorithmSpecialAreaTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 34, "deletions": 3, "lines": 37}, {"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 23, "deletions": 8, "lines": 31}, {"filePath": "pom.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "tools/src/main/java/com/graphhopper/ui/MiniGraphUI.java", "insertions": 128, "deletions": 87, "lines": 215}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GHRequest.java", "spoonMethods": []}, {"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap,com.graphhopper.routing.util.EdgeFilter,boolean,int,int)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).2.execute(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).3.setBaseNode(int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraph.fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.routing.EdgeExplorer)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmFactory.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmFactory.createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder,com.graphhopper.routing.util.Weighting)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "NoOpAlgorithmPreparation.java", "spoonMethods": []}, {"spoonFilePath": "RoutingAlgorithmSpecialAreaTests.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.util.RoutingAlgorithmSpecialAreaTests.createAlgos(com.graphhopper.storage.Graph,com.graphhopper.storage.index.LocationIndex,com.graphhopper.routing.util.FlagEncoder,boolean,com.graphhopper.routing.util.Weighting,com.graphhopper.routing.util.EncodingManager)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.createLocationResult(double,double,com.graphhopper.routing.EdgeIteratorState,int,com.graphhopper.storage.index.QueryResult$Position)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testRegensburg_issue151()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MiniGraphUI.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.ui.MiniGraphUI", "TOT": 15, "UPD": 6, "INS": 5, "MOV": 3, "DEL": 1}, {"spoonMethodName": "com.graphhopper.ui.MiniGraphUI.3.paintComponent(java.awt.Graphics2D)", "TOT": 12, "UPD": 10, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.ui.MiniGraphUI.visualize().4.run().2.mouseClicked(java.awt.event.MouseEvent)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.graphhopper.ui.MiniGraphUI.2.paintComponent(java.awt.Graphics2D)", "TOT": 15, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 13}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "02d32a0d67f7c1c1712ddfe8e42ad7605b37ea2f", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["198c0aa411ba5dfbc5c40096f7eff58bde20715d"], "nameRev": "02d32a0d67f7c1c1712ddfe8e42ad7605b37ea2f tags/0.4.1~484^2~8", "commitMessage": "fixed #151\n", "commitDateTime": "2014-02-17 23:13:31", "authoredDateTime": "2014-02-17 23:13:31", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/routing/QueryGraph.java", "insertions": 3, "deletions": 6, "lines": 9}, {"filePath": "core/src/test/java/com/graphhopper/routing/AbstractRoutingAlgorithmTester.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/routing/QueryGraphTest.java", "insertions": 40, "deletions": 6, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "QueryGraph.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraph.fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.routing.EdgeExplorer)", "TOT": 7, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "AbstractRoutingAlgorithmTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.AbstractRoutingAlgorithmTester.updateDistancesFor(com.graphhopper.routing.Graph,int,double,double)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "QueryGraphTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "025812615e812123183f4e9de3c15594c8be0200", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["cdf543dbab9cf978be6102eeba27695353adf570"], "nameRev": "025812615e812123183f4e9de3c15594c8be0200 tags/0.4.1~484^2~4", "commitMessage": "no need for ITest of #151 for now\n", "commitDateTime": "2014-02-17 23:44:46", "authoredDateTime": "2014-02-17 23:44:46", "commitGitStats": [{"filePath": "core/src/test/java/com/graphhopper/routing/RoutingAlgorithmIT.java", "insertions": 0, "deletions": 15, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RoutingAlgorithmIT.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.routing.RoutingAlgorithmIT.testRegensburg_issue151()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["198c0aa411ba5dfbc5c40096f7eff58bde20715d", "02d32a0d67f7c1c1712ddfe8e42ad7605b37ea2f", "025812615e812123183f4e9de3c15594c8be0200"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 149, "deletions": 107, "lines": 256, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 73, "UPD": 36, "INS": 12, "MOV": 7, "DEL": 18, "spoonFilesChanged": 4, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/routing", "core/src/main/java/com/graphhopper", "core/src/main/java/com/graphhopper/routing/util", "tools/src/main/java/com/graphhopper/ui"], "changesInPackagesSPOON": ["com.graphhopper.routing.QueryGraph.fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.routing.EdgeExplorer)", "com.graphhopper.routing.RoutingAlgorithmIT.testRegensburg_issue151()", "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter)", "com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap,com.graphhopper.routing.util.EdgeFilter,boolean,int,int)", "com.graphhopper.ui.MiniGraphUI", "com.graphhopper.ui.MiniGraphUI.3.paintComponent(java.awt.Graphics2D)", "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).2.execute(int)", "com.graphhopper.ui.MiniGraphUI.2.paintComponent(java.awt.Graphics2D)", "com.graphhopper.routing.RoutingAlgorithmFactory.createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder,com.graphhopper.routing.util.Weighting)", "com.graphhopper.ui.MiniGraphUI.visualize().4.run().2.mouseClicked(java.awt.event.MouseEvent)", "com.graphhopper.routing.QueryGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).3.setBaseNode(int)"]}, {"title": "Bug in GraphStorage.optimize", "body": "http://lists.openstreetmap.org/pipermail/graphhopper/2013-August/000400.html\n\n``` text\n\nI've isolated the error in a small subset of\ndata, that I've uploaded to http://waarisdetrein.nl/download/sph.osm .\nThe error occurs when you click from any point on the left-most leg\n(identified as 4 in my graph) to anywhere else - anything from about\nhalfway onwards.\n\n```\n\n![image](http://i.imgur.com/R90taGf.png)\n\nReported from Joel - Thanks!\n", "url": "https://github.com/graphhopper/graphhopper/issues/102", "user": "karussell", "labels": ["bug", "critical bug"], "created": "2013-09-01 05:12:27", "closed": "2013-10-01 19:16:45", "commits": {"3e2f71094e08b1b0fb63ccbee85bacc7684361b2": {"commitGHEventType": "closed", "commitUser": "karussell"}, "b050739a781b830f276a0fe16d2543eb31f79ad3": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 30.00027777777778, "commitsDetails": [{"commitHash": "3e2f71094e08b1b0fb63ccbee85bacc7684361b2", "commitGHEventType": "closed", "commitUser": "karussell", "commitParents": ["0eee66f6228582211a54edc0e0c133613c4cbe2c"], "nameRev": "3e2f71094e08b1b0fb63ccbee85bacc7684361b2 tags/0.4.1~679", "commitMessage": "trying to fix #102\n", "commitDateTime": "2013-09-09 11:09:33", "authoredDateTime": "2013-09-09 11:09:33", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/storage/GraphStorage.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "core/src/test/java/com/graphhopper/storage/AbstractGraphTester.java", "insertions": 15, "deletions": 3, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "GraphStorage.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.GraphStorage.inPlaceNodeRemove(int)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "AbstractGraphTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.AbstractGraphTester.testSimpleDelete2()", "TOT": 16, "UPD": 0, "INS": 12, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b050739a781b830f276a0fe16d2543eb31f79ad3", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3e2f71094e08b1b0fb63ccbee85bacc7684361b2"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5.0, "deletions": 3.0, "lines": 8.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3.0, "UPD": 0.0, "INS": 1.0, "MOV": 2.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/storage"], "changesInPackagesSPOON": ["com.graphhopper.storage.GraphStorage.inPlaceNodeRemove(int)"]}, {"title": "Several tests fail on Windows", "body": "Windows does not allow to rename an open file or change the length of an open file. We need to fix this as e.g. for the memory mapped we do raFile.setLength without closing it. \n\nAnd we should not rename the file without closing it in the Directory implementation.\n", "url": "https://github.com/graphhopper/graphhopper/issues/33", "user": "karussell", "labels": ["critical bug"], "created": "2013-04-15 14:58:31", "closed": "2013-04-17 19:08:21", "commits": {"64179c852e7a1492365ba7ea56ec3e9d087452bf": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "64179c852e7a1492365ba7ea56ec3e9d087452bf", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["368d18862aca5f49a5e13bc922f0d08cdc4db8f3"], "nameRev": "64179c852e7a1492365ba7ea56ec3e9d087452bf tags/0.4.1~563", "commitMessage": "add graph.close and correct position for idx.close in AbstractLocationIndexTest. #33\n", "commitDateTime": "2013-12-15 19:47:48", "authoredDateTime": "2013-12-15 19:47:48", "commitGitStats": [{"filePath": "core/src/main/java/com/graphhopper/util/Helper.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "core/src/test/java/com/graphhopper/storage/AbstractGraphStorageTester.java", "insertions": 5, "deletions": 24, "lines": 29}, {"filePath": "core/src/test/java/com/graphhopper/storage/index/{AbstractLocation2IDIndexTester.java => AbstractLocationIndexTester.java}", "insertions": 14, "deletions": 9, "lines": 23}, {"filePath": "core/src/test/java/com/graphhopper/storage/index/Location2IDFullIndexTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/storage/index/Location2IDFullWithEdgesIndexTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/storage/index/Location2IDQuadtreeTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "core/src/test/java/com/graphhopper/storage/index/LocationIndexTreeTest.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Helper.java", "spoonMethods": []}, {"spoonFilePath": "AbstractGraphStorageTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.AbstractGraphStorageTester.testCopyTo()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.AbstractGraphStorageTester.close(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.graphhopper.storage.AbstractGraphStorageTester.tearDown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.AbstractGraphStorageTester.testClone()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.AbstractGraphStorageTester.testGetLocations()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractLocationIndexTester.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.setUp()", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.testSimpleGraph()", "TOT": 15, "UPD": 15, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.testSimpleGraph2()", "TOT": 25, "UPD": 25, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.testSinglePoints120()", "TOT": 15, "UPD": 15, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.testSinglePoints32()", "TOT": 14, "UPD": 14, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.testNoErrorOnEdgeCase_lastIndex()", "TOT": 9, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.testDifferentVehicles()", "TOT": 11, "UPD": 11, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.testGrid()", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.createGraph(com.graphhopper.routing.util.EncodingManager)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.createSampleGraph(com.graphhopper.routing.util.EncodingManager)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocationIndexTester.testSimpleGraph()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocationIndexTester.testSimpleGraph2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocationIndexTester.testGrid()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocationIndexTester.testSinglePoints120()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocationIndexTester.testSinglePoints32()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocationIndexTester.testNoErrorOnEdgeCase_lastIndex()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocationIndexTester.testDifferentVehicles()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.storage.index.AbstractLocation2IDIndexTester.tearDown()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Location2IDFullIndexTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.Location2IDFullIndexTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Location2IDFullWithEdgesIndexTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Location2IDQuadtreeTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.Location2IDQuadtreeTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LocationIndexTreeTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.storage.index.LocationIndexTreeTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["64179c852e7a1492365ba7ea56ec3e9d087452bf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["core/src/main/java/com/graphhopper/util"], "changesInPackagesSPOON": []}, {"title": "GPS Lookup", "body": "At the moment the lookup of node ids via gps coordinates has the limitation that it would require lots of memory for world wide coverage as it is a quadtree of depth one (simple array), or if less memory is used for the index the precision is suboptimal.\n\nDifferent requirements makes the new Location2NodesNtree a challenge:\n1. should be precise and robust, i.e. should fetch exact matches as well as not so close nodes\n2. should work for edges close to the query point, not only for nodes => use bresenham\n3. should be fast to create\n4. should work world wide => depth of the quadtree has to be bigger than 1\n5. very memory efficient, e.g. do not store lat,lon instead use a graph-traversal as post-processing step to get the lat,lon for distance comparison. And remove nodes from an quadtree entry if the nodes' network (within the borders) is already represented from a different node. And the quadtree depth shouldn't be that big\n6. querying should be fast => quadtree traversal and post processing should be fast\n7. should work on Android and can be loaded from disc => store into a DataAccess (but one could use an in-memory quadtree with normal Java-references to construct such an on-disc index)\n8. support to accept only edges/nodes for a specific vehicle\n9. support LevelGraph -> do not index shortcuts + while searching do not include shortcuts for distance check - only for traversal. Also avoid problems if high-level nodes are disconnect from its lower-level nodes!\n", "url": "https://github.com/graphhopper/graphhopper/issues/17", "user": "karussell", "labels": ["critical bug"], "created": "2013-02-21 12:54:13", "closed": "2013-05-17 14:56:44", "commits": {"c4cc900e773d51476d810081bf7c560dca0c8775": {"commitGHEventType": "referenced", "commitUser": "karussell"}}, "ttf": 85.00027777777778, "commitsDetails": [{"commitHash": "c4cc900e773d51476d810081bf7c560dca0c8775", "commitGHEventType": "referenced", "commitUser": "karussell", "commitParents": ["c012e84caef4729c68e8360cd4e9dddcb941b918"], "nameRev": "c4cc900e773d51476d810081bf7c560dca0c8775 remotes/origin/gh_navigation_merge~5^2~103", "commitMessage": "Add bearings (#17)\n\n* Inigial approach of using bearings in the request\r\n\r\n* Disable CH\r\n\r\n* log test\r\n\r\n* Added Tests for MapboxResource#getBearing\r\n\r\n* Sett pass through to false\r\n", "commitDateTime": "2018-09-21 14:56:24", "authoredDateTime": "2018-09-21 14:56:24", "commitGitStats": [{"filePath": "mapbox/src/main/java/com/graphhopper/navigation/mapbox/MapboxResource.java", "insertions": 43, "deletions": 5, "lines": 48}, {"filePath": "mapbox/src/test/java/com/graphhopper/navigation/mapbox/MapboxResourceTest.java", "insertions": 29, "deletions": 0, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MapboxResource.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResource.doGet(javax.servlet.http.HttpServletRequest,javax.ws.rs.core.UriInfo,javax.ws.rs.container.ContainerRequestContext,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String)", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResource.getBearing(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResource.doGet(javax.servlet.http.HttpServletRequest,javax.ws.rs.core.UriInfo,javax.ws.rs.container.ContainerRequestContext,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapboxResourceTest.java", "spoonMethods": [{"spoonMethodName": "com.graphhopper.navigation.mapbox.MapboxResourceTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c4cc900e773d51476d810081bf7c560dca0c8775"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 43, "deletions": 5, "lines": 48, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 3, "INS": 5, "MOV": 3, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["mapbox/src/main/java/com/graphhopper/navigation/mapbox"], "changesInPackagesSPOON": ["com.graphhopper.navigation.mapbox.MapboxResource.doGet(javax.servlet.http.HttpServletRequest,javax.ws.rs.core.UriInfo,javax.ws.rs.container.ContainerRequestContext,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.lang.String)", "com.graphhopper.navigation.mapbox.MapboxResource.doGet(javax.servlet.http.HttpServletRequest,javax.ws.rs.core.UriInfo,javax.ws.rs.container.ContainerRequestContext,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "com.graphhopper.navigation.mapbox.MapboxResource.getBearing(java.lang.String)"]}]}